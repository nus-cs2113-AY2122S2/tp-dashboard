[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it. Something","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"   * In the same dialog, you _may have to set the Project language level_ field to the SDK default option.","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"2. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"3. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"jltha":1,"-":64}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"thedarie"},"content":"    implementation group: \u0027org.json\u0027, name: \u0027json\u0027, version: \u002720211205\u0027","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"    mainClassName \u003d \"seedu.sherpass.Main\"","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"    archiveBaseName \u003d \"Sherpass\"","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jltha":3,"thedarie":1,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"BradenTeo"},"content":"| Display                                             |   Name    |             Github Profile             |              Portfolio              |","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"BradenTeo"},"content":"|-----------------------------------------------------|:---------:|:--------------------------------------:|:-----------------------------------:|","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"BradenTeo"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Daryl   | [Github](https://github.com/thedarie)  |  [Portfolio](docs/team/johndoe.md)  |","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"BradenTeo"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yu Zhong  | [Github](https://github.com/yuzhongng) |  [Portfolio](docs/team/johndoe.md)  |","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"BradenTeo"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) | Isaac Lai | [Github](https://github.com/laiisaac)  |  [Portfolio](docs/team/johndoe.md)  |","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"BradenTeo"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Braden   | [Github](https://github.com/BradenTeo) | [Portfolio](docs/team/BradenTeo.md) |","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"BradenTeo"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Jun Lim  |   [Github](https://github.com/jltha)   |  [Portfolio](docs/team/johndoe.md)  |","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"jltha":1,"yuzhongng":1,"-":2,"BradenTeo":7}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"## Table of Content","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"- [Acknowledgements](#acknowledgements)","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"laiisaac"},"content":"- [Introduction](#introduction)","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"- [Architecture](#architecture)","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"laiisaac"},"content":"- [Design \u0026 Implementation](#design--implementation)","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"laiisaac"},"content":"  - [Study Session Implementation](#study-session-implementation)","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"laiisaac"},"content":"  - [Timetable Implementation](#timetable-implementation)","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"  - [Storage Implementation](#storage-implementation)","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"laiisaac"},"content":"- [Product Scope](#product-scope)","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"- Team member Jun Lim\u0027s individual project codebase - [Github](#https://github.com/jltha/ip)","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"## Introduction","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"laiisaac"},"content":"Our product, Sherpass, is a desktop application for students to manage their academic schedules by adding their tasks,","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"laiisaac"},"content":"Sherpass will then compile their tasks and present it to them in a timetable. Sherpass also provides a ","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"laiisaac"},"content":"platform for them to focus on their academic tasks through the use of timers in our study sessions. Students can use","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"laiisaac"},"content":"the time to block out time to focus on their tasks. Optimised for use via a Command Line Interface (CLI),","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"laiisaac"},"content":"users who can type fast will be able to plan out their tasks in a much quicker fashion compared to traditional GUI apps.","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"yuzhongng"},"content":"## Architecture","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"laiisaac"},"content":"![image](https://user-images.githubusercontent.com/69501969/160375887-d6da7278-5259-4458-83c7-f53d89fef640.png)","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"laiisaac"},"content":"The above diagram provides a general overview of Sherpass and its major components. The four key areas are:","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"laiisaac"},"content":"- User Interface (UI)","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"laiisaac"},"content":"- Storage","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"laiisaac"},"content":"- Timetable","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"laiisaac"},"content":"- Study session","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"laiisaac"},"content":"### UI","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"laiisaac"},"content":"UI component consists the `Ui` class which manages interaction (receiving inputs and showing outputs) between the user ","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"laiisaac"},"content":"and the application.","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"laiisaac"},"content":"### Storage","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"laiisaac"},"content":"Storage component consists `Storage` and `StorageParser` classes.","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"laiisaac"},"content":"`Storage` class handles loading, writing and saving","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"laiisaac"},"content":"data to and from a JSON file, such that users\u0027 data will be saved automatically.","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"laiisaac"},"content":"`StorageParser` class handles the","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"laiisaac"},"content":"parsing of JSON from the saved data file.","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"laiisaac"},"content":"### Timetable","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"laiisaac"},"content":"For components with more complicated use-cases (`Task` and `Timer`), we separate an extra Logic class to achieve better","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"laiisaac"},"content":"modularity, such that each class addresses a separate concern.","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"laiisaac"},"content":"Timetable component consists of `Timetable`, `Task`, `TaskList`, `TaskParser`, `TaskLogic` and various commands.","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"laiisaac"},"content":"### Study session","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"laiisaac"},"content":"Timetable component consists of `Timer`, `Stopwatch`, `Countdown`, `TimerParser`, `TimerLogic` and various commands.","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"laiisaac"},"content":"### Study Session Implementation","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"laiisaac"},"content":"The study session consists of 4 main components:","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"laiisaac"},"content":"- TimerParser class","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"laiisaac"},"content":"- StudyCommand class","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"laiisaac"},"content":"- TimerLogic class","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"laiisaac"},"content":"- Abstract Timer class, Countdown class and Stopwatch class ","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"laiisaac"},"content":"The `TimerParser` component","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"jltha"},"content":"- Parses user inputs in the main session and the study session","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"jltha"},"content":"- Ensures the input adheres to the allowed command inputs, ","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"jltha"},"content":"i.e. program will ask the user to key in a new input if it does not recognise the inputs given.","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"laiisaac"},"content":"The `StudyCommand` component","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"laiisaac"},"content":"- Accepts user inputs in the study session","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"laiisaac"},"content":"- Facilitates interaction between Parser and TimerLogic","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"laiisaac"},"content":"The `TimerLogic` component","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"laiisaac"},"content":"- Manages the timer component when study session is launched","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"laiisaac"},"content":"- Handles the logic for the timer (e.g. keeps track of state of Timer component)","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"laiisaac"},"content":"- Calls made to Timer component methods are made through this method","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"laiisaac"},"content":"The `Timer` component","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"laiisaac"},"content":"![image](https://user-images.githubusercontent.com/69501969/160758578-39b9b3f3-d1ca-429d-8319-9f28e9c199c3.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"laiisaac"},"content":"- Consists of abstract `Timer` class, `Countdown` class and `Stopwatch` class as depicted in the class diagram above","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"laiisaac"},"content":"- `Timer` inherits from Java\u0027s `Thread` class","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"laiisaac"},"content":"- `Countdown` and `Stopwatch` inherit from `Timer`","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"laiisaac"},"content":"- `Countdown` and `Stopwatch` keep track of time remaining and elapsed respectively","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"laiisaac"},"content":"- `Countdown` and `Stopwatch` can be paused, resumed and stopped","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"laiisaac"},"content":"- `Countdown` and `Stopwatch` prints to standard output the time remaining and elapsed respectively at regular intervals","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"laiisaac"},"content":"#### Timer implementation","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"laiisaac"},"content":"Sherpass’ implementation of the timer function in the study session is mainly through `Timer`, `Countdown` and ","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"laiisaac"},"content":"`Stopwatch` class. Depending on the type of timer selected by the user, either `Countdown` or `Stopwatch` will be","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"laiisaac"},"content":"instantiated. ","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"laiisaac"},"content":"When a countdown timer is started by the user, the `Countdown` class starts a thread which keeps track of time through","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"laiisaac"},"content":"a method called update(), where the thread sleeps for 1 second, then updates the time left, until the time left in the ","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"laiisaac"},"content":"timer reaches zero, which then interrupts the thread. Starting the timer as a thread allows us to accept user commands ","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"laiisaac"},"content":"like pause and stop for the timer through `StudyCommand` and `TimerLogic`, while the thread executes in the background ","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"laiisaac"},"content":"and prints the time remaining at regular intervals. A similar process is followed in `Stopwatch`, except that the class","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"laiisaac"},"content":"keeps track of time elapsed rather than time remaining.","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"laiisaac"},"content":"#### Study session usage scenario","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"laiisaac"},"content":"Given below is an example usage scenario when the user enters the study session, starts a countdown timer, then stops ","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"laiisaac"},"content":"the timer.","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"laiisaac"},"content":"Step 1. The user executes the `study` command and enters the study session through the main `Parser` component, which ","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"laiisaac"},"content":"executes the `StudyCommand`. `StudyCommand` then initialises an instance of `TimerLogic`, which handles the execution","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"laiisaac"},"content":"and logic of user commands during the study session, while the `StudyCommand` accepts the user’s input when the ","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"laiisaac"},"content":"user is in the study session. `TimerParser` parses user inputs (commands) related to `Timer`.","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"laiisaac"},"content":"Sequence diagram for `Timer` when user starts and stops a timer:","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"laiisaac"},"content":"![TimerClassSD](https://user-images.githubusercontent.com/69501969/160768104-fa7e06e3-1be8-4387-b75d-ae4e79bca5b7.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"laiisaac"},"content":"The diagram above depicts the process when user calls start and stop (in step 2 and 3 below). All the methods","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"laiisaac"},"content":"called by Timer are in parallel with other commands, since `Timer` is in a separate thread. For simplicity’s","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"laiisaac"},"content":"sake, parallel frames for the remainder of methods called by `Timer` are omitted.","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"laiisaac"},"content":"Step 2. The user executes `start 1` command to start a 30 minute timer. The input goes through `StudyCommand`, ","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"laiisaac"},"content":"where the `TimerParser` is called to parse the command. After parsing, `TimerParser` calls the method corresponding to ","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"laiisaac"},"content":"the user’s command (`start`) in `TimerLogic`. `TimerLogic` then handles the logic and initialises an instance of","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"laiisaac"},"content":"`Countdown` (spawn a thread). `Countdown` then automatically updates itself while waiting for the user to issue ","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"laiisaac"},"content":"commands.","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":133,"author":{"gitId":"laiisaac"},"content":"Step 3. The user executes the `stop` command to stop the timer. The same process is followed by using `TimerParser` to","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"laiisaac"},"content":"parse the command in the study mode, which calls on the respective `callStopTimer` method in `TimerLogic`. Within the","lastModifiedDate":"2022-03-23"},{"lineNumber":135,"author":{"gitId":"laiisaac"},"content":"`callStopTimer` method is a call to a method in `Countdown` to stop the timer. Control goes back to the user for ","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"laiisaac"},"content":"further commands.","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":138,"author":{"gitId":"laiisaac"},"content":"#### Design considerations for Timer class","lastModifiedDate":"2022-03-23"},{"lineNumber":139,"author":{"gitId":"laiisaac"},"content":"- Current implementation: Create `Timer` from scratch, using the sleep function of threads to keep ","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"laiisaac"},"content":"track of time","lastModifiedDate":"2022-03-23"},{"lineNumber":141,"author":{"gitId":"laiisaac"},"content":"  - Pros: Same overhead of needing to track the time left of the timer","lastModifiedDate":"2022-03-23"},{"lineNumber":142,"author":{"gitId":"laiisaac"},"content":"  - Pros: No need to follow Java’s `Timer` class syntax, which can be confusing at times","lastModifiedDate":"2022-03-23"},{"lineNumber":143,"author":{"gitId":"laiisaac"},"content":"  - Pros: Implementation is simple and straight-forward","lastModifiedDate":"2022-03-23"},{"lineNumber":144,"author":{"gitId":"laiisaac"},"content":"  - Cons: Have to manage how we interrupt the thread after stopping the timer","lastModifiedDate":"2022-03-23"},{"lineNumber":145,"author":{"gitId":"laiisaac"},"content":"- Alternative: Using Java\u0027s `Timer` class","lastModifiedDate":"2022-03-23"},{"lineNumber":146,"author":{"gitId":"laiisaac"},"content":"  - Pros: The way of keeping track of the time has already been implemented","lastModifiedDate":"2022-03-23"},{"lineNumber":147,"author":{"gitId":"laiisaac"},"content":"  - Pros: Using a standard library usually makes the program less prone to various errors","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"laiisaac"},"content":"  - Cons: Still have to implement a way to keep track of time for our purposes of pausing a timer, since the library ","lastModifiedDate":"2022-03-23"},{"lineNumber":149,"author":{"gitId":"laiisaac"},"content":"  provided by Java has no way of pausing the timer, only stopping it.","lastModifiedDate":"2022-03-23"},{"lineNumber":150,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":151,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":152,"author":{"gitId":"laiisaac"},"content":"### Timetable implementation ","lastModifiedDate":"2022-03-30"},{"lineNumber":153,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":154,"author":{"gitId":"jltha"},"content":"The **TimeTable** component prints the daily or weekly schedule that the user wishes to see. ","lastModifiedDate":"2022-03-23"},{"lineNumber":155,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":156,"author":{"gitId":"jltha"},"content":"The functionalities of the timetable include:","lastModifiedDate":"2022-03-23"},{"lineNumber":157,"author":{"gitId":"jltha"},"content":"- Prints a schedule specific to the date the user inputs ","lastModifiedDate":"2022-03-23"},{"lineNumber":158,"author":{"gitId":"jltha"},"content":"- Prints the schedule for the week the user is at","lastModifiedDate":"2022-03-23"},{"lineNumber":159,"author":{"gitId":"jltha"},"content":"- Prints the schedule of the day whenever the user starts up Sherpass.","lastModifiedDate":"2022-03-23"},{"lineNumber":160,"author":{"gitId":"jltha"},"content":"- The timetable schedule is represented in a table form as shown below:","lastModifiedDate":"2022-03-24"},{"lineNumber":161,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":162,"author":{"gitId":"jltha"},"content":"![](images/timetableFormat.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":164,"author":{"gitId":"jltha"},"content":"#### Task index of a task in timetable","lastModifiedDate":"2022-03-24"},{"lineNumber":165,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":166,"author":{"gitId":"jltha"},"content":"The task number in the timetable as shown follows the index of a task","lastModifiedDate":"2022-03-24"},{"lineNumber":167,"author":{"gitId":"jltha"},"content":"in the overall task list, i.e. the list containing all tasks added/edited. ","lastModifiedDate":"2022-03-24"},{"lineNumber":168,"author":{"gitId":"jltha"},"content":"This allows a more intuitive approach towards adding/editing/deleting/marking/unmarking of tasks.","lastModifiedDate":"2022-03-24"},{"lineNumber":169,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":170,"author":{"gitId":"jltha"},"content":"#### Time and Day column in timetable","lastModifiedDate":"2022-03-24"},{"lineNumber":171,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":172,"author":{"gitId":"jltha"},"content":"The **Time** and **Day** in the timetable follows the doOnDate attribute of a task.","lastModifiedDate":"2022-03-24"},{"lineNumber":173,"author":{"gitId":"jltha"},"content":"Concept wise, this treats the doOnDate as the date and time when the task occurs,","lastModifiedDate":"2022-03-24"},{"lineNumber":174,"author":{"gitId":"jltha"},"content":"or the date and time the user has set out to accomplish the task.","lastModifiedDate":"2022-03-24"},{"lineNumber":175,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":176,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":177,"author":{"gitId":"jltha"},"content":"The **Timetable** is a class which interacts with the following components:","lastModifiedDate":"2022-03-23"},{"lineNumber":178,"author":{"gitId":"jltha"},"content":"1. Parser","lastModifiedDate":"2022-03-23"},{"lineNumber":179,"author":{"gitId":"jltha"},"content":"2. ShowCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":180,"author":{"gitId":"yuzhongng"},"content":"3. TaskList","lastModifiedDate":"2022-03-24"},{"lineNumber":181,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":182,"author":{"gitId":"jltha"},"content":"#### Parser Component","lastModifiedDate":"2022-03-23"},{"lineNumber":183,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":184,"author":{"gitId":"jltha"},"content":"The **Parser** is a class which parses the inputs which the user enters. ","lastModifiedDate":"2022-03-23"},{"lineNumber":185,"author":{"gitId":"jltha"},"content":"To activate the timetable, the user inputs commands that start with `show`.","lastModifiedDate":"2022-03-24"},{"lineNumber":186,"author":{"gitId":"jltha"},"content":"This creates a **ShowCommand** object which will execute its method, thereby printing the timetable.","lastModifiedDate":"2022-03-23"},{"lineNumber":187,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":188,"author":{"gitId":"jltha"},"content":"#### ShowCommand Component","lastModifiedDate":"2022-03-23"},{"lineNumber":189,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":190,"author":{"gitId":"jltha"},"content":"Depending on the user input that was parsed by **Parser**, **ShowCommand** will call the ","lastModifiedDate":"2022-03-23"},{"lineNumber":191,"author":{"gitId":"jltha"},"content":"relative methods which prints the timetable.","lastModifiedDate":"2022-03-23"},{"lineNumber":192,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":193,"author":{"gitId":"yuzhongng"},"content":"#### TaskList Component","lastModifiedDate":"2022-03-24"},{"lineNumber":194,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":195,"author":{"gitId":"jltha"},"content":"As **ShowCommand** is being executed, it will retrieve a filtered list","lastModifiedDate":"2022-03-24"},{"lineNumber":196,"author":{"gitId":"jltha"},"content":"of task by the date that is defined in the **ShowCommand** from the **TaskList** component. ","lastModifiedDate":"2022-03-24"},{"lineNumber":197,"author":{"gitId":"jltha"},"content":"The filtered list represents the schedule that the user has on that given date. ","lastModifiedDate":"2022-03-24"},{"lineNumber":198,"author":{"gitId":"jltha"},"content":"The list is assumed to be sorted previously when the user added/edited a task.","lastModifiedDate":"2022-03-24"},{"lineNumber":199,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":200,"author":{"gitId":"jltha"},"content":"Below is a sequence diagram of what happens ","lastModifiedDate":"2022-03-23"},{"lineNumber":201,"author":{"gitId":"jltha"},"content":"as the user wishes to see the schedule (timetable) for 25th May 2022:","lastModifiedDate":"2022-03-23"},{"lineNumber":202,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":203,"author":{"gitId":"jltha"},"content":"![](images/showScheduleForADate.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":204,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":205,"author":{"gitId":"jltha"},"content":"The sequence as shown above also happens in the same fashion as the user ","lastModifiedDate":"2022-03-23"},{"lineNumber":206,"author":{"gitId":"jltha"},"content":"requests to see the schedule for any day or the week the user is at.","lastModifiedDate":"2022-03-23"},{"lineNumber":207,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":208,"author":{"gitId":"jltha"},"content":"The timetable for the current day is also shown to user as the user starts up","lastModifiedDate":"2022-03-24"},{"lineNumber":209,"author":{"gitId":"jltha"},"content":"the program.","lastModifiedDate":"2022-03-24"},{"lineNumber":210,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":211,"author":{"gitId":"jltha"},"content":"#### Design considerations for Timetable class","lastModifiedDate":"2022-03-24"},{"lineNumber":212,"author":{"gitId":"jltha"},"content":"- Current Implementation: Printing of timetable from scratch.","lastModifiedDate":"2022-03-24"},{"lineNumber":213,"author":{"gitId":"jltha"},"content":"  - Pros: Easy to implement as timetable is generated based on request and input.","lastModifiedDate":"2022-03-24"},{"lineNumber":214,"author":{"gitId":"jltha"},"content":"  - Pros: Adaptive as the timetable is only generated when needed and formatting is taken care of while generating it.","lastModifiedDate":"2022-03-24"},{"lineNumber":215,"author":{"gitId":"jltha"},"content":"  - Cons: Significant time may be taken as timetable will have to be created from scratch. The delay may be extended if user has a lot of tasks.","lastModifiedDate":"2022-03-24"},{"lineNumber":216,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":217,"author":{"gitId":"jltha"},"content":"- Alternative Implementation: Having a few templates, before choosing the suitable template and editing it if needed.","lastModifiedDate":"2022-03-24"},{"lineNumber":218,"author":{"gitId":"jltha"},"content":"  - Pros: Reduces computation time","lastModifiedDate":"2022-03-24"},{"lineNumber":219,"author":{"gitId":"jltha"},"content":"  - Cons: Increases memory usage","lastModifiedDate":"2022-03-24"},{"lineNumber":220,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":221,"author":{"gitId":"laiisaac"},"content":"### Storage Implementation","lastModifiedDate":"2022-03-30"},{"lineNumber":222,"author":{"gitId":"laiisaac"},"content":"#### Loading saved files","lastModifiedDate":"2022-03-30"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":224,"author":{"gitId":"thedarie"},"content":"Class diagram of Storage:","lastModifiedDate":"2022-03-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":226,"author":{"gitId":"thedarie"},"content":"![](images/StorageClass.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":227,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":228,"author":{"gitId":"thedarie"},"content":"(_Note: some methods and attributes of `TaskList`,`Ui` and `Parser` are omitted here_)","lastModifiedDate":"2022-03-23"},{"lineNumber":229,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":230,"author":{"gitId":"thedarie"},"content":"The storage component","lastModifiedDate":"2022-03-23"},{"lineNumber":231,"author":{"gitId":"thedarie"},"content":"- Can save the content of a `TaskList` to a file in JSON format","lastModifiedDate":"2022-03-23"},{"lineNumber":232,"author":{"gitId":"thedarie"},"content":"- Can load a JSON file to restore a previously saved `TaskList`","lastModifiedDate":"2022-03-23"},{"lineNumber":233,"author":{"gitId":"thedarie"},"content":"- Relies on the `Parser` class to understand the content of a JSON file","lastModifiedDate":"2022-03-23"},{"lineNumber":234,"author":{"gitId":"thedarie"},"content":"- Communicates with the user through the `Ui` class","lastModifiedDate":"2022-03-23"},{"lineNumber":235,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":236,"author":{"gitId":"thedarie"},"content":"The loading of a save file is done with the function","lastModifiedDate":"2022-03-23"},{"lineNumber":237,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":238,"author":{"gitId":"thedarie"},"content":"`Storage#load()` - Loads a saved JSON file and returns an ArrayList of task","lastModifiedDate":"2022-03-23"},{"lineNumber":239,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":240,"author":{"gitId":"thedarie"},"content":"The path of the JSON file is provided as a parameter in the constructor of `Storage` hence ","lastModifiedDate":"2022-03-23"},{"lineNumber":241,"author":{"gitId":"thedarie"},"content":"there is no need for any parameters in the `Storage#load()`. Since a save file will be created in the ","lastModifiedDate":"2022-03-23"},{"lineNumber":242,"author":{"gitId":"thedarie"},"content":"constructor of `Storage` if no such file exists, there should not be any issue with a missing save file.","lastModifiedDate":"2022-03-23"},{"lineNumber":243,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":244,"author":{"gitId":"thedarie"},"content":"The save file has the following fields:","lastModifiedDate":"2022-03-30"},{"lineNumber":245,"author":{"gitId":"thedarie"},"content":"- `identifier`: A randomly generated number given to a task. Recurring tasks share the same identifier.","lastModifiedDate":"2022-03-30"},{"lineNumber":246,"author":{"gitId":"thedarie"},"content":"- `index`: The index of the task in the array list","lastModifiedDate":"2022-03-30"},{"lineNumber":247,"author":{"gitId":"thedarie"},"content":"- `description`: Description of the task","lastModifiedDate":"2022-03-30"},{"lineNumber":248,"author":{"gitId":"thedarie"},"content":"- `status`: If the task is completed or not (`\u0027X\u0027` indicates completion, empty string otherwise)","lastModifiedDate":"2022-03-30"},{"lineNumber":249,"author":{"gitId":"thedarie"},"content":"- `do_date_start`: The start date and time of the task (d/M/yyyy HH:mm format)","lastModifiedDate":"2022-03-30"},{"lineNumber":250,"author":{"gitId":"thedarie"},"content":"- `do_date_end`: The end date and time of the task (d/M/yyyy HH:mm format)","lastModifiedDate":"2022-03-30"},{"lineNumber":251,"author":{"gitId":"thedarie"},"content":"- `by_date`: The due date of the task (d/M/yyyy format)","lastModifiedDate":"2022-03-30"},{"lineNumber":252,"author":{"gitId":"thedarie"},"content":"- `frequency`: How often the task repeats (`DAILY`,`WEEKLY`,`MONTHLY`,`NULL`)","lastModifiedDate":"2022-03-30"},{"lineNumber":253,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":254,"author":{"gitId":"thedarie"},"content":"The sequence diagram of `Storage#load()` is shown here:","lastModifiedDate":"2022-03-23"},{"lineNumber":255,"author":{"gitId":"thedarie"},"content":"![](images/StorageLoadSD.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":256,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":257,"author":{"gitId":"thedarie"},"content":"In the event where the save file cannot be parsed by `JSONObject` (i.e. the format of the file is incorrect) ","lastModifiedDate":"2022-03-30"},{"lineNumber":258,"author":{"gitId":"thedarie"},"content":"or if there are missing fields in a task, the function `Storage#handleCorruptedSave()`","lastModifiedDate":"2022-03-30"},{"lineNumber":259,"author":{"gitId":"thedarie"},"content":"will be called. The user will get to choose to create a new save file or exit the program for manual inspection.","lastModifiedDate":"2022-03-30"},{"lineNumber":260,"author":{"gitId":"thedarie"},"content":"The file error will also be displayed to the user.","lastModifiedDate":"2022-03-30"},{"lineNumber":261,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":262,"author":{"gitId":"thedarie"},"content":"The sequence diagram of `Storage#handleCorruptedSave()` is shown here:","lastModifiedDate":"2022-03-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":264,"author":{"gitId":"thedarie"},"content":"![](images/StorageCorruptedSD.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":266,"author":{"gitId":"thedarie"},"content":"#### Design considerations for the format of the save file","lastModifiedDate":"2022-03-23"},{"lineNumber":267,"author":{"gitId":"thedarie"},"content":"- JSON (current choice)","lastModifiedDate":"2022-03-23"},{"lineNumber":268,"author":{"gitId":"thedarie"},"content":"  - Pros: Easy to modify by hand if the user wants to","lastModifiedDate":"2022-03-23"},{"lineNumber":269,"author":{"gitId":"thedarie"},"content":"  - Pros: Easy to parse data","lastModifiedDate":"2022-03-23"},{"lineNumber":270,"author":{"gitId":"thedarie"},"content":"- XML","lastModifiedDate":"2022-03-23"},{"lineNumber":271,"author":{"gitId":"thedarie"},"content":"  - Pros:Reasonably easy for users to modify","lastModifiedDate":"2022-03-23"},{"lineNumber":272,"author":{"gitId":"thedarie"},"content":"  - Cons: Difficult to parse","lastModifiedDate":"2022-03-23"},{"lineNumber":273,"author":{"gitId":"thedarie"},"content":"- Text file with custom format","lastModifiedDate":"2022-03-23"},{"lineNumber":274,"author":{"gitId":"thedarie"},"content":"  - Pros: Might use less space (negligible)","lastModifiedDate":"2022-03-23"},{"lineNumber":275,"author":{"gitId":"thedarie"},"content":"  - Cons: Unintuitive for users to modify","lastModifiedDate":"2022-03-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":279,"author":{"gitId":"laiisaac"},"content":"Students from CEG and SOC","lastModifiedDate":"2022-03-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":281,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":283,"author":{"gitId":"thedarie"},"content":"Sherpass aims to help students to tackle their individual hectic schedules by means of a planner.","lastModifiedDate":"2022-03-23"},{"lineNumber":284,"author":{"gitId":"thedarie"},"content":"Students can manage his/her time by adding their tasks into the application and get reminders","lastModifiedDate":"2022-03-23"},{"lineNumber":285,"author":{"gitId":"thedarie"},"content":"when the tasks are due for completion. Students can also use the study timers within the study session","lastModifiedDate":"2022-03-23"},{"lineNumber":286,"author":{"gitId":"thedarie"},"content":"to block out pockets of time for studying, so that they can better focus during study sessions.","lastModifiedDate":"2022-03-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":290,"author":{"gitId":"-"},"content":"| Version | As a ... | I want to ...                                     | So that I can ...                          |","lastModifiedDate":"2020-05-24"},{"lineNumber":291,"author":{"gitId":"laiisaac"},"content":"|---------|----------|---------------------------------------------------|--------------------------------------------|","lastModifiedDate":"2022-03-30"},{"lineNumber":292,"author":{"gitId":"laiisaac"},"content":"| v1.0    | user     | see the tasks I have to do today                  | remember what tasks I have to complete     |","lastModifiedDate":"2022-03-30"},{"lineNumber":293,"author":{"gitId":"laiisaac"},"content":"| v1.0    | user     | edit task content and deadline                    | change my tasks accordingly                |","lastModifiedDate":"2022-03-30"},{"lineNumber":294,"author":{"gitId":"laiisaac"},"content":"| v1.0    | user     | see the tasks I have planned for the week         | have a better picture of the week ahead    |","lastModifiedDate":"2022-03-30"},{"lineNumber":295,"author":{"gitId":"laiisaac"},"content":"| v1.0    | user     | select amongst a few default study session timers | block out time to better focus on my tasks |","lastModifiedDate":"2022-03-30"},{"lineNumber":296,"author":{"gitId":"laiisaac"},"content":"| v1.0    | user     | see the remaining time in the study session       |                                            |","lastModifiedDate":"2022-03-30"},{"lineNumber":297,"author":{"gitId":"laiisaac"},"content":"| v1.0    | user     | be able to pause, stop and resume the study timer | go for a toilet/snack break                |","lastModifiedDate":"2022-03-30"},{"lineNumber":298,"author":{"gitId":"laiisaac"},"content":"| v2.0    | user     | see my timetable of tasks and events              | have a better picture of my schedule       |","lastModifiedDate":"2022-03-30"},{"lineNumber":299,"author":{"gitId":"laiisaac"},"content":"| v2.0    | user     | be able to mark my tasks as done in study session |                                            |","lastModifiedDate":"2022-03-30"},{"lineNumber":300,"author":{"gitId":"laiisaac"},"content":"| v2.0    | user     | add recurring tasks                               | enter my recurring tutorials and lectures  |","lastModifiedDate":"2022-03-30"},{"lineNumber":301,"author":{"gitId":"laiisaac"},"content":"| v2.0    | user     | click a button to interact with the study timer   | interact with the timer more naturally     |","lastModifiedDate":"2022-03-30"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":305,"author":{"gitId":"laiisaac"},"content":"- The response to any commands should be returned within 3 seconds.","lastModifiedDate":"2022-03-30"},{"lineNumber":306,"author":{"gitId":"laiisaac"},"content":"- The user interface should be user-friendly such that the product is still usable without referring to a user guide.","lastModifiedDate":"2022-03-30"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":308,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":310,"author":{"gitId":"laiisaac"},"content":"- To be updated","lastModifiedDate":"2022-03-30"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":312,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":314,"author":{"gitId":"laiisaac"},"content":"- To be updated","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"laiisaac":155,"jltha":69,"yuzhongng":5,"thedarie":53,"-":32}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"thedarie"},"content":"# Sherpass User Guide","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"laiisaac"},"content":"Sherpass is a desktop application for students to manage their academic schedules and also provide a platform for them","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"to focus on their academic tasks.","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"Optimised for use via a Command Line Interface (CLI),","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"thedarie"},"content":"users who can type fast will be able to plan out their tasks in a much quicker fashion compared to traditional GUI apps.","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"### Managing your time","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"laiisaac"},"content":"You can add your tasks into Sherpass and get a detailed outline of your schedule. Using this schedule, you won\u0027t","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"have to worry ever again about forgetting tasks and missing deadlines!","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"laiisaac"},"content":"Sherpass also allows you to easily add recurring tasks (e.g. classes). Simply refer to the command details for","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"more information.","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"### Study sessions","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"laiisaac"},"content":"Having trouble focusing while studying? Sherpass\u0027s study sessions allow you to select study timers, inspired by the","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"laiisaac"},"content":"increasingly popular [Pomodoro study sessions](https://examstudyexpert.com/pomodoro-study-method/), to help you keep track of the time whilst completing your tasks.","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"laiisaac"},"content":"#### During Study sessions","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"laiisaac"},"content":"Starting the study session will show you the tasks that you have planned to do for the day. You can then choose to","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"laiisaac"},"content":"start one of a few default timers provided by us, or start your own custom timer. You can also choose to start a","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"laiisaac"},"content":"stopwatch to keep track of how long you\u0027ve been studying for, if you\u0027re unsure of how long you will need.","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"laiisaac"},"content":"#### After Study sessions","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"laiisaac"},"content":"After your study session, you will be prompted to mark the tasks you\u0027ve completed as done. If you\u0027re still not done with","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"laiisaac"},"content":"certain tasks, feel free to start another productive session!","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"laiisaac"},"content":"### User Guide Target Audience","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"laiisaac"},"content":"New and inexperienced users who want to use Sherpass, as well as non-users who want to know more about what Sherpass","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"laiisaac"},"content":"can do.","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"thedarie"},"content":"## Table of Content","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"thedarie"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"thedarie"},"content":"- [Features](#features)","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"thedarie"},"content":"- [Command Guide](#command-guide)","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"thedarie"},"content":"  - Add tasks: [`add`](#adding-your-tasks-add)","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"thedarie"},"content":"  - Delete tasks: [`delete`](#deleting-your-tasks-delete)","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"thedarie"},"content":"  - Edit tasks: [`edit`](#editing-your-tasks-edit)","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"  - Mark tasks [`mark`](#marking-your-tasksmark-task_number--unmark-task_number)","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"  - Show tasks: [`show`](#display-daily-schedule-show-today--show-tomorrow--show-date)","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"  - Clear all tasks: [`clear`](#clearing-all-tasks-clear)","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"thedarie"},"content":"  - Study session","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"laiisaac"},"content":"    - Enter study session: [`study`](#enter-study-session-study)","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"    - Start timer: [`start`](#starting-a-default-timer-start-mode_number)     ","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"laiisaac"},"content":"    - Pause timer: [`pause`](#pausing-a-timerstopwatch-pause)","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"laiisaac"},"content":"    - Resume timer: [`resume`](#resuming-a-timerstopwatch-resume)","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"laiisaac"},"content":"    - Stop timer: [`stop`](#stopping-a-timerstopwatch-stop)","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"laiisaac"},"content":"    - Show tasks: [`show`](#show-your-tasks-show)","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"    - Mark tasks as done:[`mark`](#mark-your-tasks-as-done-mark)","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"laiisaac"},"content":"    - Exit study session: [`leave`](#leave-the-study-session-leave)","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"thedarie"},"content":"  - Exit program: [`exit`]()","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"thedarie"},"content":"  - [Saving your tasks](#saving-your-tasks)","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"laiisaac"},"content":"- [FAQ](#faq)","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"laiisaac"},"content":"- [Glossary](#faq)","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"thedarie"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"thedarie"},"content":"2. Download the latest version of `Sherpass` ","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"thedarie"},"content":"from [here](https://github.com/AY2122S2-CS2113T-T09-1/tp/releases/tag/v1.0-Release).","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"thedarie"},"content":"3. Copy the jar file to the folder you want to use as the home folder for Sherpass.","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"4. Open a terminal and navigate to the folder containing the jar file.","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"5. Start the application on the terminal using `java -jar Sherpass.jar`","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":70,"author":{"gitId":"thedarie"},"content":"## Command Guide","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"thedarie"},"content":"### Notes on command input format:","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"laiisaac"},"content":"- Words in UPPER_CASE are the [parameters](#glossary) to be supplied by the user.","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"thedarie"},"content":"- Items in square brackets are optional","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"laiisaac"},"content":"- [Extraneous](#glossary) parameters for commands that do not take in parameters (such as show, stop, exit) will be ignored","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"jltha"},"content":"### Notes on task number format:","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"jltha"},"content":"- Each task added to your schedule is assigned a task number. You can see what number a task is assigned via","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"jltha"},"content":"the [show command](#show-your-tasks-show)","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"jltha"},"content":"- The task number will update accordingly as you add/edit/delete a task (with the","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"jltha"},"content":"earliest task assigned the first number, second earliest task the second number, and so on)","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"thedarie"},"content":"### Adding your tasks: `add` ","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"thedarie"},"content":"**_Note: When adding tasks, TASK_DESCRIPTION must be the first parameter provided.","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"thedarie"},"content":"Order of other parameters can be switched._**","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"thedarie"},"content":"#### Adding a single task","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"thedarie"},"content":"Format: `add TASK_DESCRIPTION /do DO_DATE /start START_TIME /end END_TIME [/by DEADLINE]`","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"thedarie"},"content":"|    Parameters    | Description                     | Accepted inputs                                   | Optional |","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"thedarie"},"content":"|:----------------:|---------------------------------|---------------------------------------------------|----------|","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"thedarie"},"content":"| TASK_DESCRIPTION | Description for the task        | Any sentence without the character \u0027/\u0027            | No       |","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"thedarie"},"content":"|     DO_DATE      | Date to work on the task        | d/M/yyyy format (e.g 25/3/2022 for 25 March 2022) | No       |","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"thedarie"},"content":"|    START_TIME    | Time to start working on a task | HH:mm format (e.g 18:00), must be before END_TIME | No       |","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"thedarie"},"content":"|     END_TIME     | Time to stop working on a task  | HH:mm format (e.g 19:00)                          | No       |","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"thedarie"},"content":"|     DEADLINE     | Due date for the task           | d/M/yyyy format (e.g 25/3/2022 for 25 March 2022) | Yes      |","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"thedarie"},"content":"Examples: ","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"thedarie"},"content":"- `add write final essay /do 25/3/2022 /start 20:00 /end 22:00 /by 27/3/2022`","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"thedarie"},"content":"- `add revise chapter 3 /do 25/3/2022 /start 20:00 /end 22:00`","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"thedarie"},"content":"#### Adding a recurring task","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"thedarie"},"content":"- All tasks will have the same task description.","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"thedarie"},"content":"- You can easily add your lecture and tutorial classes into your schedule with this command.","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"thedarie"},"content":"- For a **daily** recurring task, a **month\u0027s** worth of task will be added.","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"thedarie"},"content":"- For a **weekly** recurring task, **2 months\u0027** worth of task will be added.","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"thedarie"},"content":"- For a **monthly** recurring task, a **year\u0027s** worth of task will be added.","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":109,"author":{"gitId":"thedarie"},"content":"Format: `add TASK_DESCRIPTION /do DO_DATE /start START_TIME /end END_TIME /repeat FREQUENCY`","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"thedarie"},"content":"|    Parameters    | Description                     | Accepted inputs                              | Optional |","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"thedarie"},"content":"|:----------------:|---------------------------------|----------------------------------------------|----------|","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"thedarie"},"content":"| TASK_DESCRIPTION | Description for the task        | Any sentence without the character \u0027/\u0027       | No       |","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"thedarie"},"content":"|     DO_DATE      | Date to work on the task        | dd/MM/yyyy (e.g 25/3/2022 for 25 March 2022) | No       |","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"thedarie"},"content":"|    START_TIME    | Time to start working on a task | HH:mm (e.g 18:00), must be before END_TIME   | No       |","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"thedarie"},"content":"|     END_TIME     | Time to stop working on a task  | HH:mm (e.g 19:00)                            | No       |","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"thedarie"},"content":"|    FREQUENCY     | How often does the task repeat  | DAILY, WEEKLY, MONTHLY                       | No       |","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":119,"author":{"gitId":"thedarie"},"content":"Examples: ","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"thedarie"},"content":"- `add attend cs2113t lecture /do 25/3/2022 /start 16:00 /end 18:00 /repeat WEEKLY`","lastModifiedDate":"2022-03-26"},{"lineNumber":121,"author":{"gitId":"thedarie"},"content":"- `add browse internship offers /do 27/3/2022 /start 21:00 /end 21:30 /repeat DAILY`","lastModifiedDate":"2022-03-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":123,"author":{"gitId":"thedarie"},"content":"### Deleting your tasks: `delete`","lastModifiedDate":"2022-03-26"},{"lineNumber":124,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":125,"author":{"gitId":"jltha"},"content":"**_Note: Be careful when deleting a recurring task. Entering the TASK_NUMBER","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"jltha"},"content":"of a recurring task will all instances of that task to be removed permanently._**","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":128,"author":{"gitId":"thedarie"},"content":"Format: `delete TASK_NUMBER`","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"thedarie"},"content":"| Parameters  | Description                                         | Accepted inputs       | Optional |","lastModifiedDate":"2022-03-26"},{"lineNumber":131,"author":{"gitId":"thedarie"},"content":"|:-----------:|-----------------------------------------------------|-----------------------|----------|","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"thedarie"},"content":"| TASK_NUMBER | The index of the task as seen in the `show` command | Any valid task number | No       |","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"thedarie"},"content":"Example:","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"thedarie"},"content":"- `delete 1`","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":137,"author":{"gitId":"yuzhongng"},"content":"### Deleting your recurring tasks","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":139,"author":{"gitId":"yuzhongng"},"content":"Format: `delete TASK_NUMBER /repeat`","lastModifiedDate":"2022-03-30"},{"lineNumber":140,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":141,"author":{"gitId":"yuzhongng"},"content":"| Parameters  | Description                                         | Accepted inputs       | Optional |","lastModifiedDate":"2022-03-30"},{"lineNumber":142,"author":{"gitId":"yuzhongng"},"content":"|:-----------:|-----------------------------------------------------|-----------------------|----------|","lastModifiedDate":"2022-03-30"},{"lineNumber":143,"author":{"gitId":"yuzhongng"},"content":"| TASK_NUMBER | The index of the task as seen in the `show` command | Any valid task number | No       |","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":145,"author":{"gitId":"yuzhongng"},"content":"Example:","lastModifiedDate":"2022-03-30"},{"lineNumber":146,"author":{"gitId":"yuzhongng"},"content":"- `delete 1 /repeat`","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":148,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"thedarie"},"content":"### Editing your tasks: `edit`","lastModifiedDate":"2022-03-26"},{"lineNumber":150,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":151,"author":{"gitId":"thedarie"},"content":"#### Editing a single task","lastModifiedDate":"2022-03-26"},{"lineNumber":152,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":153,"author":{"gitId":"thedarie"},"content":"Format: `edit TASK_NUMBER [TASK_DESCRIPTION] [/do DO_DATE /start START_TIME /end END_TIME] [/by DEADLINE]`","lastModifiedDate":"2022-03-26"},{"lineNumber":154,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"thedarie"},"content":"|    Parameters    | Description                                         | Accepted inputs                                   | Optional               |","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"thedarie"},"content":"|:----------------:|-----------------------------------------------------|---------------------------------------------------|------------------------|","lastModifiedDate":"2022-03-26"},{"lineNumber":157,"author":{"gitId":"thedarie"},"content":"|   TASK_NUMBER    | The index of the task as seen in the `show` command | Any valid task number                             | No                     |","lastModifiedDate":"2022-03-26"},{"lineNumber":158,"author":{"gitId":"thedarie"},"content":"| TASK_DESCRIPTION | Description for the task                            | Any sentence without the character \u0027/\u0027\t           | Yes                    |","lastModifiedDate":"2022-03-26"},{"lineNumber":159,"author":{"gitId":"thedarie"},"content":"|     DO_DATE      | Date to work on the task                            | dd/MM/yyyy (e.g 25/3/2022 for 25 March 2022)      | Yes                    |","lastModifiedDate":"2022-03-26"},{"lineNumber":160,"author":{"gitId":"thedarie"},"content":"|    START_TIME    | Time to start working on a task                     | HH:mm (e.g 18:00), must be before END_TIME        | No if DO_DATE is given |","lastModifiedDate":"2022-03-26"},{"lineNumber":161,"author":{"gitId":"thedarie"},"content":"|     END_TIME     | Time to start working on a task                     | HH:mm (e.g 19:00)                                 | No if DO_DATE is given |","lastModifiedDate":"2022-03-26"},{"lineNumber":162,"author":{"gitId":"thedarie"},"content":"|     DEADLINE     | Due date for the task                               | d/M/yyyy format (e.g 25/3/2022 for 25 March 2022) | Yes                    |","lastModifiedDate":"2022-03-26"},{"lineNumber":163,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":164,"author":{"gitId":"thedarie"},"content":"Examples:","lastModifiedDate":"2022-03-26"},{"lineNumber":165,"author":{"gitId":"thedarie"},"content":"- `edit 2 write draft essay`","lastModifiedDate":"2022-03-26"},{"lineNumber":166,"author":{"gitId":"thedarie"},"content":"- `edit 3 submit draft essay /do 26/3/2022 /start 10:00 /end 13:00`","lastModifiedDate":"2022-03-26"},{"lineNumber":167,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":168,"author":{"gitId":"thedarie"},"content":"#### Editing a recurring task","lastModifiedDate":"2022-03-26"},{"lineNumber":169,"author":{"gitId":"laiisaac"},"content":"- The specified task and all its future occurrence will be edited.","lastModifiedDate":"2022-03-24"},{"lineNumber":170,"author":{"gitId":"thedarie"},"content":"- Occurrences earlier than the specified task will not be affected.","lastModifiedDate":"2022-03-26"},{"lineNumber":171,"author":{"gitId":"thedarie"},"content":"- To change frequency, delete and add the recurring task with the new frequency using the `delete` and `add` command respectively.","lastModifiedDate":"2022-03-26"},{"lineNumber":172,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":173,"author":{"gitId":"yuzhongng"},"content":"Format: `edit TASK_NUMBER [TASK_DESCRIPTION] [/do DO_DATE /start START_TIME /end END_TIME] /repeat`","lastModifiedDate":"2022-03-30"},{"lineNumber":174,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":175,"author":{"gitId":"thedarie"},"content":"|    Parameters    | Description                                         | Accepted inputs                                   | Optional               |","lastModifiedDate":"2022-03-26"},{"lineNumber":176,"author":{"gitId":"thedarie"},"content":"|:----------------:|-----------------------------------------------------|---------------------------------------------------|------------------------|","lastModifiedDate":"2022-03-26"},{"lineNumber":177,"author":{"gitId":"thedarie"},"content":"|   TASK_NUMBER    | The index of the task as seen in the `show` command | Any valid task number                             | No                     |","lastModifiedDate":"2022-03-26"},{"lineNumber":178,"author":{"gitId":"thedarie"},"content":"| TASK_DESCRIPTION | Description for the task                            | Any sentence without the character \u0027/\u0027\t           | Yes                    |","lastModifiedDate":"2022-03-26"},{"lineNumber":179,"author":{"gitId":"thedarie"},"content":"|     DO_DATE      | Date to work on the task                            | dd/MM/yyyy (e.g 25/3/2022 for 25 March 2022)      | Yes                    |","lastModifiedDate":"2022-03-26"},{"lineNumber":180,"author":{"gitId":"thedarie"},"content":"|    START_TIME    | Time to start working on a task                     | HH:mm (e.g 18:00), must be before END_TIME        | No if DO_DATE is given |","lastModifiedDate":"2022-03-26"},{"lineNumber":181,"author":{"gitId":"thedarie"},"content":"|     END_TIME     | Time to start working on a task                     | HH:mm (e.g 19:00)                                 | No if DO_DATE is given |","lastModifiedDate":"2022-03-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":184,"author":{"gitId":"thedarie"},"content":"Before edit command:","lastModifiedDate":"2022-03-24"},{"lineNumber":185,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":186,"author":{"gitId":"thedarie"},"content":"![beforeedit](images/beforeedit.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":187,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":188,"author":{"gitId":"yuzhongng"},"content":"After command: `edit 1 /do 25/3/2022 /start 18:00 /end 20:00 /repeat`","lastModifiedDate":"2022-03-30"},{"lineNumber":189,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":190,"author":{"gitId":"thedarie"},"content":"![afteredit](images/afteredit.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":192,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":193,"author":{"gitId":"jltha"},"content":"### Marking your tasks`mark TASK_NUMBER` / `unmark TASK_NUMBER`","lastModifiedDate":"2022-03-28"},{"lineNumber":194,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":195,"author":{"gitId":"jltha"},"content":"Mark the tasks that you\u0027ve done in the session with `mark`.","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"jltha"},"content":"You can also mark a task as undone with `unmark`.","lastModifiedDate":"2022-03-28"},{"lineNumber":197,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"jltha"},"content":"Format: `mark TASK_NUMBER` or `unmark TASK_NUMBER`","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"jltha"},"content":"| Parameters  | Description                                       | Accepted inputs                       | Optional |","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"jltha"},"content":"|:-----------:|---------------------------------------------------|---------------------------------------|----------|","lastModifiedDate":"2022-03-28"},{"lineNumber":202,"author":{"gitId":"jltha"},"content":"| TASK_NUMBER | The task number as seen in the `show all` command | Any valid task number in the schedule | No       |","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"jltha"},"content":"Example:","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"jltha"},"content":"![](images/markTasks.png)","lastModifiedDate":"2022-03-28"},{"lineNumber":207,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":208,"author":{"gitId":"jltha"},"content":"### Display Daily Schedule: `show today` / `show tomorrow` / `show DATE`","lastModifiedDate":"2022-03-28"},{"lineNumber":209,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":210,"author":{"gitId":"jltha"},"content":"Displays your schedule for today, tomorrow or any specific date.","lastModifiedDate":"2022-03-28"},{"lineNumber":211,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":212,"author":{"gitId":"jltha"},"content":"Upon startup, Sherpass also shows your schedule for the day.","lastModifiedDate":"2022-03-24"},{"lineNumber":213,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":214,"author":{"gitId":"jltha"},"content":"Format:","lastModifiedDate":"2022-03-24"},{"lineNumber":215,"author":{"gitId":"yuzhongng"},"content":"- To see the schedule for the day: `show today`","lastModifiedDate":"2022-03-27"},{"lineNumber":216,"author":{"gitId":"yuzhongng"},"content":"- To see the schedule for tomorrow: `show tomorrow` or `show tmr`","lastModifiedDate":"2022-03-30"},{"lineNumber":217,"author":{"gitId":"jltha"},"content":"- To see the schedule for a specific day: `show DATE`, where the date is in the format `d/M/YYYY`.","lastModifiedDate":"2022-03-28"},{"lineNumber":218,"author":{"gitId":"yuzhongng"},"content":"  ","lastModifiedDate":"2022-03-27"},{"lineNumber":219,"author":{"gitId":"jltha"},"content":"   E.g. `show 25/3/2022` shows the schedule for 25th March 2022","lastModifiedDate":"2022-03-24"},{"lineNumber":220,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":221,"author":{"gitId":"yuzhongng"},"content":"Below is an example of the schedule that is being displayed from the given date","lastModifiedDate":"2022-03-27"},{"lineNumber":222,"author":{"gitId":"jltha"},"content":"25/3/2022:","lastModifiedDate":"2022-03-24"},{"lineNumber":223,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":224,"author":{"gitId":"yuzhongng"},"content":"![ShowDateTimetableFormat](images/showDateTimetableFormat.PNG)","lastModifiedDate":"2022-03-24"},{"lineNumber":225,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":226,"author":{"gitId":"yuzhongng"},"content":"### Display Weekly Schedule: `show week` / `show next week`","lastModifiedDate":"2022-03-27"},{"lineNumber":227,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":228,"author":{"gitId":"jltha"},"content":"Displays your schedule for the week or the week after.","lastModifiedDate":"2022-03-28"},{"lineNumber":229,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":230,"author":{"gitId":"yuzhongng"},"content":"Format:","lastModifiedDate":"2022-03-27"},{"lineNumber":231,"author":{"gitId":"yuzhongng"},"content":"- To see the schedule for the week you are in: `show week`","lastModifiedDate":"2022-03-27"},{"lineNumber":232,"author":{"gitId":"yuzhongng"},"content":"- To see the schedule for the week after: \"show next week\" or `show nextweek`","lastModifiedDate":"2022-03-27"},{"lineNumber":233,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":234,"author":{"gitId":"yuzhongng"},"content":"Below is an example of the weekly schedule displayed:","lastModifiedDate":"2022-03-27"},{"lineNumber":235,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":236,"author":{"gitId":"yuzhongng"},"content":"![weeklyTimetablePart1](images/weeklyTimetablePart1.PNG)","lastModifiedDate":"2022-03-27"},{"lineNumber":237,"author":{"gitId":"yuzhongng"},"content":"![weeklyTimetablePart2](images/weeklyTimetablePart2.PNG)","lastModifiedDate":"2022-03-27"},{"lineNumber":238,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":239,"author":{"gitId":"jltha"},"content":"### Display Monthly Schedule: `show month` / `show MONTH`","lastModifiedDate":"2022-03-28"},{"lineNumber":240,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":241,"author":{"gitId":"jltha"},"content":"Displays your schedule for the current month or any specific month","lastModifiedDate":"2022-03-28"},{"lineNumber":242,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":243,"author":{"gitId":"yuzhongng"},"content":"Format:","lastModifiedDate":"2022-03-27"},{"lineNumber":244,"author":{"gitId":"yuzhongng"},"content":"- To see the schedule for the current month: `show month`","lastModifiedDate":"2022-03-27"},{"lineNumber":245,"author":{"gitId":"jltha"},"content":"- To see the schedule for any specific month: `show MONTH`, where ","lastModifiedDate":"2022-03-28"},{"lineNumber":246,"author":{"gitId":"jltha"},"content":"  MONTH can be the abbreviation of the specific month. ","lastModifiedDate":"2022-03-28"},{"lineNumber":247,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":248,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":249,"author":{"gitId":"yuzhongng"},"content":"  E.g. `show sep` or `show september` is the same command ","lastModifiedDate":"2022-03-27"},{"lineNumber":250,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":251,"author":{"gitId":"yuzhongng"},"content":"  E.g. `show september` to display the schedule for **September**","lastModifiedDate":"2022-03-27"},{"lineNumber":252,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":253,"author":{"gitId":"yuzhongng"},"content":"Below is an example of the monthly schedule displayed:","lastModifiedDate":"2022-03-27"},{"lineNumber":254,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":255,"author":{"gitId":"yuzhongng"},"content":"![monthlySchedule](images/monthlySchedule.PNG)","lastModifiedDate":"2022-03-27"},{"lineNumber":256,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":257,"author":{"gitId":"jltha"},"content":"### Getting a detailed list: `show all` / `show todo`","lastModifiedDate":"2022-03-24"},{"lineNumber":258,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":259,"author":{"gitId":"jltha"},"content":"Other than getting a timetable, Sherpass also allows you","lastModifiedDate":"2022-03-24"},{"lineNumber":260,"author":{"gitId":"jltha"},"content":"to view all the tasks that have been added/edited/deleted.","lastModifiedDate":"2022-03-24"},{"lineNumber":261,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":262,"author":{"gitId":"jltha"},"content":"Format:","lastModifiedDate":"2022-03-24"},{"lineNumber":263,"author":{"gitId":"jltha"},"content":"- To view all the tasks that exist in your list: `show all`","lastModifiedDate":"2022-03-24"},{"lineNumber":264,"author":{"gitId":"jltha"},"content":"- To view all the tasks that are yet to be completed: `show todo` ","lastModifiedDate":"2022-03-24"},{"lineNumber":265,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":266,"author":{"gitId":"jltha"},"content":"Below are some sample outputs using `show all` and `show todo` respectively","lastModifiedDate":"2022-03-24"},{"lineNumber":267,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":268,"author":{"gitId":"jltha"},"content":"Show all tasks:","lastModifiedDate":"2022-03-24"},{"lineNumber":269,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":270,"author":{"gitId":"jltha"},"content":"![](images/showAllTasks.png)","lastModifiedDate":"2022-03-28"},{"lineNumber":271,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":272,"author":{"gitId":"jltha"},"content":"Show pending tasks:","lastModifiedDate":"2022-03-24"},{"lineNumber":273,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":274,"author":{"gitId":"jltha"},"content":"![](images/showPendingTasks.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":275,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":277,"author":{"gitId":"jltha"},"content":"### Clearing all tasks: `clear`","lastModifiedDate":"2022-03-24"},{"lineNumber":278,"author":{"gitId":"jltha"},"content":"To save the trouble of deleting tasks one by one if you wish to delete all of them,","lastModifiedDate":"2022-03-24"},{"lineNumber":279,"author":{"gitId":"jltha"},"content":"Sherpass allows you to do so using `clear`","lastModifiedDate":"2022-03-24"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":281,"author":{"gitId":"jltha"},"content":"**_Note: Be sure to use `clear` only when you want to ","lastModifiedDate":"2022-03-28"},{"lineNumber":282,"author":{"gitId":"jltha"},"content":"remove all the tasks in your list._**","lastModifiedDate":"2022-03-28"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":284,"author":{"gitId":"thedarie"},"content":"### Saving your tasks","lastModifiedDate":"2022-03-24"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":286,"author":{"gitId":"thedarie"},"content":"All changes to your tasks are saved automatically into a JSON file at `[JAR FILE LOCATION]/data/Sherpass.json`.","lastModifiedDate":"2022-03-24"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":288,"author":{"gitId":"thedarie"},"content":"There is no need to manually save your tasks.","lastModifiedDate":"2022-03-24"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":290,"author":{"gitId":"thedarie"},"content":"_Note: Advanced users are welcome to manually edit the save file._","lastModifiedDate":"2022-03-24"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":292,"author":{"gitId":"laiisaac"},"content":"### Enter study session: `study`","lastModifiedDate":"2022-03-24"},{"lineNumber":293,"author":{"gitId":"laiisaac"},"content":"Enter the study session where you can start timers to help finish your tasks.","lastModifiedDate":"2022-03-24"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":295,"author":{"gitId":"laiisaac"},"content":"Format: `study`","lastModifiedDate":"2022-03-24"},{"lineNumber":296,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":297,"author":{"gitId":"laiisaac"},"content":"Example:","lastModifiedDate":"2022-03-28"},{"lineNumber":298,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":299,"author":{"gitId":"laiisaac"},"content":"![image](https://user-images.githubusercontent.com/69501969/160783109-3187d5df-06f1-4fa4-a407-18a87a67c770.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":300,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":301,"author":{"gitId":"jltha"},"content":"### Starting a timer: `start`","lastModifiedDate":"2022-03-28"},{"lineNumber":302,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":303,"author":{"gitId":"jltha"},"content":"**_Note:_**","lastModifiedDate":"2022-03-28"},{"lineNumber":304,"author":{"gitId":"jltha"},"content":"- Once you have entered the study session and have selected a timer,","lastModifiedDate":"2022-03-28"},{"lineNumber":305,"author":{"gitId":"jltha"},"content":"a separate pop-up timer window will be shown to you. ","lastModifiedDate":"2022-03-28"},{"lineNumber":306,"author":{"gitId":"jltha"},"content":"- It will show you the amount of time left or the elapsed time. Buttons are provided on the window for you","lastModifiedDate":"2022-03-28"},{"lineNumber":307,"author":{"gitId":"jltha"},"content":"to pause/resume/stop the timer quickly. ","lastModifiedDate":"2022-03-28"},{"lineNumber":308,"author":{"gitId":"jltha"},"content":"- You may also choose to enter the commands via the ","lastModifiedDate":"2022-03-28"},{"lineNumber":309,"author":{"gitId":"jltha"},"content":"command line interface instead.","lastModifiedDate":"2022-03-28"},{"lineNumber":310,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":311,"author":{"gitId":"jltha"},"content":"#### Starting a default timer: `start MODE_NUMBER`","lastModifiedDate":"2022-03-28"},{"lineNumber":312,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":313,"author":{"gitId":"laiisaac"},"content":"Jump right into a study session by starting a study timer from our list of default timers.","lastModifiedDate":"2022-03-30"},{"lineNumber":314,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":315,"author":{"gitId":"jltha"},"content":"**_Note:_**","lastModifiedDate":"2022-03-28"},{"lineNumber":316,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":317,"author":{"gitId":"jltha"},"content":"- Only one timer can be running at any given point of time.","lastModifiedDate":"2022-03-28"},{"lineNumber":318,"author":{"gitId":"laiisaac"},"content":"- Timer keeps track of time remaining and prints time remaining at regular intervals.","lastModifiedDate":"2022-03-24"},{"lineNumber":319,"author":{"gitId":"laiisaac"},"content":"- All our timers can be paused, resumed and stopped while the timer is running.","lastModifiedDate":"2022-03-28"},{"lineNumber":320,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":321,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":322,"author":{"gitId":"laiisaac"},"content":"Format: `start MODE_NUMBER`","lastModifiedDate":"2022-03-24"},{"lineNumber":323,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":324,"author":{"gitId":"laiisaac"},"content":"|      Parameters      | Description                                             | Accepted inputs               | Optional  |","lastModifiedDate":"2022-03-28"},{"lineNumber":325,"author":{"gitId":"laiisaac"},"content":"|:--------------------:|---------------------------------------------------------|-------------------------------|-----------|","lastModifiedDate":"2022-03-28"},{"lineNumber":326,"author":{"gitId":"laiisaac"},"content":"|     MODE_NUMBER      | The default mode number of the study timer chosen (0-4) | Any valid default mode number | No        |","lastModifiedDate":"2022-03-28"},{"lineNumber":327,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":328,"author":{"gitId":"laiisaac"},"content":"- You can choose from 3 default timers.","lastModifiedDate":"2022-03-24"},{"lineNumber":329,"author":{"gitId":"jltha"},"content":"- `MODE_NUMBER` 0 starts a 30 second(s) timer for testing purposes.","lastModifiedDate":"2022-03-28"},{"lineNumber":330,"author":{"gitId":"jltha"},"content":"- `MODE_NUMBER` 1 starts a 30 minute(s) timer","lastModifiedDate":"2022-03-28"},{"lineNumber":331,"author":{"gitId":"jltha"},"content":"- `MODE_NUMBER` 2 starts a 1 hour(s) timer","lastModifiedDate":"2022-03-28"},{"lineNumber":332,"author":{"gitId":"jltha"},"content":"- `MODE_NUMBER` 3 starts a 1.5 hour(s) timer","lastModifiedDate":"2022-03-28"},{"lineNumber":333,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":334,"author":{"gitId":"laiisaac"},"content":"Examples:","lastModifiedDate":"2022-03-28"},{"lineNumber":335,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":336,"author":{"gitId":"laiisaac"},"content":"- `start 1`","lastModifiedDate":"2022-03-28"},{"lineNumber":337,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":338,"author":{"gitId":"jltha"},"content":"In the terminal:","lastModifiedDate":"2022-03-28"},{"lineNumber":339,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":340,"author":{"gitId":"jltha"},"content":"![](images/terminalStart1.png)","lastModifiedDate":"2022-03-28"},{"lineNumber":341,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":342,"author":{"gitId":"jltha"},"content":"In the pop-up window:","lastModifiedDate":"2022-03-28"},{"lineNumber":343,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":344,"author":{"gitId":"jltha"},"content":"![](images/startDefaultOne.png)","lastModifiedDate":"2022-03-28"},{"lineNumber":345,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":346,"author":{"gitId":"laiisaac"},"content":"### Starting a custom timer: `start`","lastModifiedDate":"2022-03-24"},{"lineNumber":347,"author":{"gitId":"laiisaac"},"content":"Need something else rather than what is provided by our default timers? You can start your own custom timer to suit ","lastModifiedDate":"2022-03-30"},{"lineNumber":348,"author":{"gitId":"laiisaac"},"content":"your own needs.","lastModifiedDate":"2022-03-30"},{"lineNumber":349,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":350,"author":{"gitId":"laiisaac"},"content":"- Start a custom timer with `DURATION` set by you","lastModifiedDate":"2022-03-30"},{"lineNumber":351,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":352,"author":{"gitId":"laiisaac"},"content":"Format: `start /custom DURATION`","lastModifiedDate":"2022-03-24"},{"lineNumber":353,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":354,"author":{"gitId":"laiisaac"},"content":"|    Parameters    | Description                                               | Accepted inputs   | Optional |","lastModifiedDate":"2022-03-28"},{"lineNumber":355,"author":{"gitId":"laiisaac"},"content":"|:----------------:|-----------------------------------------------------------|-------------------|----------|","lastModifiedDate":"2022-03-28"},{"lineNumber":356,"author":{"gitId":"laiisaac"},"content":"|     DURATION     | Duration of the timer (in seconds) that you wish to start | Any valid integer | No       |","lastModifiedDate":"2022-03-28"},{"lineNumber":357,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":358,"author":{"gitId":"laiisaac"},"content":"- Timer `DURATION` is in seconds","lastModifiedDate":"2022-03-30"},{"lineNumber":359,"author":{"gitId":"laiisaac"},"content":"- `/custom` flag is mandatory to start a custom timer","lastModifiedDate":"2022-03-24"},{"lineNumber":360,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":361,"author":{"gitId":"laiisaac"},"content":"Example:","lastModifiedDate":"2022-03-28"},{"lineNumber":362,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":363,"author":{"gitId":"laiisaac"},"content":"- `start /custom 60`","lastModifiedDate":"2022-03-28"},{"lineNumber":364,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":365,"author":{"gitId":"jltha"},"content":"In the terminal:","lastModifiedDate":"2022-03-28"},{"lineNumber":366,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":367,"author":{"gitId":"jltha"},"content":"![](images/terminalCustom60sec.png)","lastModifiedDate":"2022-03-28"},{"lineNumber":368,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":369,"author":{"gitId":"jltha"},"content":"In the pop-up window:","lastModifiedDate":"2022-03-28"},{"lineNumber":370,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":371,"author":{"gitId":"jltha"},"content":"![](images/customTimer60sec.JPG)","lastModifiedDate":"2022-03-28"},{"lineNumber":372,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":373,"author":{"gitId":"jltha"},"content":"### Starting a stopwatch: `start stopwatch`","lastModifiedDate":"2022-03-28"},{"lineNumber":374,"author":{"gitId":"laiisaac"},"content":"Not sure how long you\u0027ll need to complete your academic tasks? You can start a stopwatch to keep track of how long ","lastModifiedDate":"2022-03-30"},{"lineNumber":375,"author":{"gitId":"laiisaac"},"content":"you\u0027ve been studying.","lastModifiedDate":"2022-03-30"},{"lineNumber":376,"author":{"gitId":"laiisaac"},"content":"- Stopwatch tracks and prints time elapsed.","lastModifiedDate":"2022-03-30"},{"lineNumber":377,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":378,"author":{"gitId":"laiisaac"},"content":"Format: `start stopwatch`","lastModifiedDate":"2022-03-24"},{"lineNumber":379,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":380,"author":{"gitId":"laiisaac"},"content":"Example:","lastModifiedDate":"2022-03-28"},{"lineNumber":381,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":382,"author":{"gitId":"jltha"},"content":"In the terminal:","lastModifiedDate":"2022-03-28"},{"lineNumber":383,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":384,"author":{"gitId":"laiisaac"},"content":"![image](https://user-images.githubusercontent.com/69501969/160330116-886c03a2-b3c8-4e9c-a879-8fba990c2668.png)","lastModifiedDate":"2022-03-28"},{"lineNumber":385,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":386,"author":{"gitId":"jltha"},"content":"In the pop-up window:","lastModifiedDate":"2022-03-28"},{"lineNumber":387,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":388,"author":{"gitId":"jltha"},"content":"![](images/stopWatch.png)","lastModifiedDate":"2022-03-28"},{"lineNumber":389,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":390,"author":{"gitId":"laiisaac"},"content":"### Pausing a timer/stopwatch: `pause`","lastModifiedDate":"2022-03-24"},{"lineNumber":391,"author":{"gitId":"laiisaac"},"content":"Pauses a study timer/stopwatch that is currently running. Useful for when you want a quick toilet break, double check","lastModifiedDate":"2022-03-30"},{"lineNumber":392,"author":{"gitId":"laiisaac"},"content":"your tasks for the day, or mark a task as done.","lastModifiedDate":"2022-03-30"},{"lineNumber":393,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":394,"author":{"gitId":"jltha"},"content":"Format: `pause` or clicking the pause button in the pop-up window.","lastModifiedDate":"2022-03-28"},{"lineNumber":395,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":396,"author":{"gitId":"laiisaac"},"content":"Example:","lastModifiedDate":"2022-03-28"},{"lineNumber":397,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":398,"author":{"gitId":"jltha"},"content":"In the terminal:","lastModifiedDate":"2022-03-28"},{"lineNumber":399,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":400,"author":{"gitId":"laiisaac"},"content":"![](images/pauseTimer.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":401,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":402,"author":{"gitId":"laiisaac"},"content":"![image](https://user-images.githubusercontent.com/69501969/160329512-3a74d513-d95c-4aa2-9d88-a29ca3f93459.png)","lastModifiedDate":"2022-03-28"},{"lineNumber":403,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":404,"author":{"gitId":"jltha"},"content":"In the pop-up window:","lastModifiedDate":"2022-03-28"},{"lineNumber":405,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":406,"author":{"gitId":"jltha"},"content":"Time left in the window will not change until the user enters `resume`","lastModifiedDate":"2022-03-28"},{"lineNumber":407,"author":{"gitId":"jltha"},"content":"in the terminal or clicks on the resume button.","lastModifiedDate":"2022-03-28"},{"lineNumber":408,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":409,"author":{"gitId":"laiisaac"},"content":"### Resuming a timer/stopwatch: `resume`","lastModifiedDate":"2022-03-24"},{"lineNumber":410,"author":{"gitId":"laiisaac"},"content":"You can resume a paused timer/stopwatch when you\u0027re ready to work on your tasks again.","lastModifiedDate":"2022-03-30"},{"lineNumber":411,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":412,"author":{"gitId":"laiisaac"},"content":"- Resume a timer/stopwatch that has been paused.","lastModifiedDate":"2022-03-30"},{"lineNumber":413,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":414,"author":{"gitId":"jltha"},"content":"Format: `resume` or clicking the resume button in the pop-up window.","lastModifiedDate":"2022-03-28"},{"lineNumber":415,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":416,"author":{"gitId":"laiisaac"},"content":"Example:","lastModifiedDate":"2022-03-28"},{"lineNumber":417,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":418,"author":{"gitId":"jltha"},"content":"In the terminal:","lastModifiedDate":"2022-03-28"},{"lineNumber":419,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":420,"author":{"gitId":"laiisaac"},"content":"![image](https://user-images.githubusercontent.com/69501969/160329950-48c20933-84aa-46ef-9f7d-e58154c3270a.png)","lastModifiedDate":"2022-03-28"},{"lineNumber":421,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":422,"author":{"gitId":"jltha"},"content":"In the pop-up window:","lastModifiedDate":"2022-03-28"},{"lineNumber":423,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":424,"author":{"gitId":"laiisaac"},"content":"![](images/resumeTimer.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":425,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":426,"author":{"gitId":"laiisaac"},"content":"Time left/elapsed time will continue to run.","lastModifiedDate":"2022-03-30"},{"lineNumber":427,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":428,"author":{"gitId":"laiisaac"},"content":"### Stopping a timer/stopwatch: `stop`","lastModifiedDate":"2022-03-24"},{"lineNumber":429,"author":{"gitId":"laiisaac"},"content":"Finished your task earlier than expected, or something more urgent came up? You can stop a timer/stopwatch at any time.","lastModifiedDate":"2022-03-30"},{"lineNumber":430,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":431,"author":{"gitId":"laiisaac"},"content":"- Stop a timer/stopwatch that has been started.","lastModifiedDate":"2022-03-30"},{"lineNumber":432,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":433,"author":{"gitId":"jltha"},"content":"Format: ","lastModifiedDate":"2022-03-28"},{"lineNumber":434,"author":{"gitId":"jltha"},"content":"- Entering `stop` in the terminal","lastModifiedDate":"2022-03-28"},{"lineNumber":435,"author":{"gitId":"jltha"},"content":"- Clicking the stop button in the pop-up window","lastModifiedDate":"2022-03-28"},{"lineNumber":436,"author":{"gitId":"jltha"},"content":"- Closing the pop-up window (Clicking the X button in the top right corner)","lastModifiedDate":"2022-03-28"},{"lineNumber":437,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":438,"author":{"gitId":"laiisaac"},"content":"Example:","lastModifiedDate":"2022-03-28"},{"lineNumber":439,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":440,"author":{"gitId":"jltha"},"content":"In the terminal:","lastModifiedDate":"2022-03-28"},{"lineNumber":441,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":442,"author":{"gitId":"laiisaac"},"content":"![image](https://user-images.githubusercontent.com/69501969/160329869-2696b661-585b-4fae-9ebd-149b79316dd2.png)","lastModifiedDate":"2022-03-28"},{"lineNumber":443,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":444,"author":{"gitId":"jltha"},"content":"In the pop-up window:","lastModifiedDate":"2022-03-28"},{"lineNumber":445,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":446,"author":{"gitId":"laiisaac"},"content":"![](images/stopTimer.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":447,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":448,"author":{"gitId":"jltha"},"content":"The window will disappear immediately after stopping the timer.","lastModifiedDate":"2022-03-28"},{"lineNumber":449,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":450,"author":{"gitId":"laiisaac"},"content":"### Show your tasks: `show`","lastModifiedDate":"2022-03-24"},{"lineNumber":451,"author":{"gitId":"laiisaac"},"content":"The show feature is also supported in the study session. ","lastModifiedDate":"2022-03-30"},{"lineNumber":452,"author":{"gitId":"laiisaac"},"content":"Simply follow the format from the [show feature](#show-your-tasks-show)","lastModifiedDate":"2022-03-30"},{"lineNumber":453,"author":{"gitId":"laiisaac"},"content":"to show your tasks.","lastModifiedDate":"2022-03-30"},{"lineNumber":454,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":455,"author":{"gitId":"laiisaac"},"content":"**_Note:_**","lastModifiedDate":"2022-03-30"},{"lineNumber":456,"author":{"gitId":"laiisaac"},"content":"- You can only show tasks while the timer is paused or stopped.","lastModifiedDate":"2022-03-30"},{"lineNumber":457,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":458,"author":{"gitId":"laiisaac"},"content":"Example:","lastModifiedDate":"2022-03-28"},{"lineNumber":459,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":460,"author":{"gitId":"laiisaac"},"content":"![image](https://user-images.githubusercontent.com/69501969/160788279-c38a7611-e1e9-4aef-87b7-6a06b6d96c9e.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":461,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":462,"author":{"gitId":"laiisaac"},"content":"### Mark your tasks as done: `mark`","lastModifiedDate":"2022-03-24"},{"lineNumber":463,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":464,"author":{"gitId":"jltha"},"content":"The mark feature is also supported in the study session. ","lastModifiedDate":"2022-03-28"},{"lineNumber":465,"author":{"gitId":"jltha"},"content":"Simply follow the format from the [mark feature](#marking-your-tasksmark-task_number--unmark-task_number)","lastModifiedDate":"2022-03-28"},{"lineNumber":466,"author":{"gitId":"jltha"},"content":"to mark your task.","lastModifiedDate":"2022-03-28"},{"lineNumber":467,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":468,"author":{"gitId":"jltha"},"content":"**_Note:_**","lastModifiedDate":"2022-03-28"},{"lineNumber":469,"author":{"gitId":"jltha"},"content":"- You can only mark tasks while the timer is paused or stopped.","lastModifiedDate":"2022-03-28"},{"lineNumber":470,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":471,"author":{"gitId":"laiisaac"},"content":"Example:","lastModifiedDate":"2022-03-28"},{"lineNumber":472,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":473,"author":{"gitId":"laiisaac"},"content":"![image](https://user-images.githubusercontent.com/69501969/160330280-f0cae4ae-0561-4c09-bc1f-8f89c6136aa6.png)","lastModifiedDate":"2022-03-28"},{"lineNumber":474,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":475,"author":{"gitId":"laiisaac"},"content":"### Leave the study session: `leave`","lastModifiedDate":"2022-03-24"},{"lineNumber":476,"author":{"gitId":"laiisaac"},"content":"Leave the study session to go back to the main session.","lastModifiedDate":"2022-03-24"},{"lineNumber":477,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":478,"author":{"gitId":"laiisaac"},"content":"Format: `leave`","lastModifiedDate":"2022-03-24"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":480,"author":{"gitId":"laiisaac"},"content":"Example:","lastModifiedDate":"2022-03-28"},{"lineNumber":481,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":482,"author":{"gitId":"laiisaac"},"content":"![image](https://user-images.githubusercontent.com/69501969/160330328-f3981868-6bcc-4e29-989c-90356cf15c10.png)","lastModifiedDate":"2022-03-28"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":484,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":486,"author":{"gitId":"thedarie"},"content":"**Q**: My save file is corrupted, how do I resolve this?","lastModifiedDate":"2022-03-24"},{"lineNumber":487,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":488,"author":{"gitId":"thedarie"},"content":"**A**: Sherpass will print an error message ","lastModifiedDate":"2022-03-24"},{"lineNumber":489,"author":{"gitId":"jltha"},"content":"containing details of the corruption (e.g., missing fields, brackets). You can either modify the save file accordingly to","lastModifiedDate":"2022-03-28"},{"lineNumber":490,"author":{"gitId":"thedarie"},"content":"rectify the problem or allow Sherpass to create a new save file ","lastModifiedDate":"2022-03-24"},{"lineNumber":491,"author":{"gitId":"thedarie"},"content":"**(Caution: You will lose all previously saved tasks!)**","lastModifiedDate":"2022-03-24"},{"lineNumber":492,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":493,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":495,"author":{"gitId":"thedarie"},"content":"**A**: Transfer a copy of your save file to your other device and place it in `[JAR FILE LOCATION]/data/Sherpass.json`","lastModifiedDate":"2022-03-24"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":497,"author":{"gitId":"laiisaac"},"content":"## Glossary","lastModifiedDate":"2022-03-30"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":499,"author":{"gitId":"laiisaac"},"content":"* *Parameter* - A parameter is the means by which a value is passed to the command processing program.","lastModifiedDate":"2022-03-30"},{"lineNumber":500,"author":{"gitId":"laiisaac"},"content":"* *Extraneous* - Something that is unnecessary or irrelevant.","lastModifiedDate":"2022-03-30"},{"lineNumber":501,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":503,"author":{"gitId":"thedarie"},"content":"| Action                        | Format, Examples                                                                                                                                                             |","lastModifiedDate":"2022-03-24"},{"lineNumber":504,"author":{"gitId":"jltha"},"content":"|-------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-28"},{"lineNumber":505,"author":{"gitId":"jltha"},"content":"| Generate timetable            | `show today` / `show DATE` / `show week` / `show MONTH`                                                                                                                      |","lastModifiedDate":"2022-03-28"},{"lineNumber":506,"author":{"gitId":"jltha"},"content":"| List all tasks                | `show all`                                                                                                                                                                   |","lastModifiedDate":"2022-03-24"},{"lineNumber":507,"author":{"gitId":"jltha"},"content":"| List all pending tasks        | `show todo`                                                                                                                                                                  |","lastModifiedDate":"2022-03-24"},{"lineNumber":508,"author":{"gitId":"jltha"},"content":"| Clear all tasks               | `clear`                                                                                                                                                                      |","lastModifiedDate":"2022-03-24"},{"lineNumber":509,"author":{"gitId":"thedarie"},"content":"| Add single task               | `add TASK_DESCRIPTION /do DO_DATE /start START_TIME /end END_TIME [/by DEADLINE]`\u003cbr/\u003ee.g. `add write final essay /do 25/3/2022 /start 20:00 /end 22:00 /by 27/3/2022`       |","lastModifiedDate":"2022-03-26"},{"lineNumber":510,"author":{"gitId":"jltha"},"content":"| Delete task(s)                | `delete TASK_NUMBER`                                                                                                                                                         |","lastModifiedDate":"2022-03-28"},{"lineNumber":511,"author":{"gitId":"thedarie"},"content":"| Edit single task              | `edit TASK_NUMBER [TASK_DESCRIPTION] [/do DO_DATE /start START_TIME /end END_TIME] [/by DEADLINE]`\u003cbr/\u003ee.g.`edit 3 submit draft essay /do 26/3/2022 /start 10:00 /end 13:00` |","lastModifiedDate":"2022-03-26"},{"lineNumber":512,"author":{"gitId":"thedarie"},"content":"| Add recurring task            | `add TASK_DESCRIPTION /do DATE /start START_TIME /end END_TIME /repeat FREQUENCY`\u003cbr/\u003ee.g. `add attend cs2113t lecture /do 25/3/2022 /start 16:00 /end 18:00 /repeat WEEKLY` |","lastModifiedDate":"2022-03-26"},{"lineNumber":513,"author":{"gitId":"thedarie"},"content":"| Edit recurring task           | `edit TASK_NUMBER [TASK_DESCRIPTION] [/do DATE /start TIME /end TIME] /repeat`\u003cbr/\u003ee.g.`edit 1 /do 25/3/2022 /start 18:00 /end 20:00 /repeat`                                |","lastModifiedDate":"2022-03-26"},{"lineNumber":514,"author":{"gitId":"jltha"},"content":"| Mark a task as done           | `mark TASK_NUMBER`                                                                                                                                                           |","lastModifiedDate":"2022-03-28"},{"lineNumber":515,"author":{"gitId":"jltha"},"content":"| Mark a task as undone         | `unmark TASK_NUMBER`                                                                                                                                                         |","lastModifiedDate":"2022-03-28"},{"lineNumber":516,"author":{"gitId":"laiisaac"},"content":"| Enter study session           | `study`                                                                                                                                                                      |","lastModifiedDate":"2022-03-24"},{"lineNumber":517,"author":{"gitId":"laiisaac"},"content":"| Start default timer           | `start MODE_NUMBER`                                                                                                                                                          |","lastModifiedDate":"2022-03-24"},{"lineNumber":518,"author":{"gitId":"laiisaac"},"content":"| Start custom timer            | `start /custom DURATION`                                                                                                                                                     |","lastModifiedDate":"2022-03-24"},{"lineNumber":519,"author":{"gitId":"laiisaac"},"content":"| Start stopwatch               | `start stopwatch`                                                                                                                                                            |","lastModifiedDate":"2022-03-24"},{"lineNumber":520,"author":{"gitId":"laiisaac"},"content":"| Pause timer/stopwatch         | `pause`                                                                                                                                                                      |","lastModifiedDate":"2022-03-24"},{"lineNumber":521,"author":{"gitId":"laiisaac"},"content":"| Resume timer/stopwatch        | `resume`                                                                                                                                                                     |","lastModifiedDate":"2022-03-24"},{"lineNumber":522,"author":{"gitId":"laiisaac"},"content":"| Stop timer/stopwatch          | `stop`                                                                                                                                                                       |","lastModifiedDate":"2022-03-24"},{"lineNumber":523,"author":{"gitId":"jltha"},"content":"| Show tasks (in study session) | `show all`                                                                                                                                                                   |","lastModifiedDate":"2022-03-28"},{"lineNumber":524,"author":{"gitId":"laiisaac"},"content":"| Leave study session           | `leave`                                                                                                                                                                      |","lastModifiedDate":"2022-03-24"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"laiisaac":169,"jltha":151,"yuzhongng":45,"thedarie":124,"-":36}},{"path":"docs/puml/ArchitectureDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"laiisaac"},"content":"@startmindmap","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"* Sherpass","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"** User Interface (UI)","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"*** UI","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"laiisaac"},"content":"** Storage","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"*** Storage","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"laiisaac"},"content":"*** StorageParser","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"laiisaac"},"content":"** Timetable","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"laiisaac"},"content":"*** Timetable","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"*** Task","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"laiisaac"},"content":"*** TaskList","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"*** TaskParser","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"*** TaskLogic","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"laiisaac"},"content":"*** Commands","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"** Study session","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"*** Timer","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"**** Stopwatch","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"laiisaac"},"content":"**** Countdown","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"laiisaac"},"content":"*** TimerParser","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"laiisaac"},"content":"*** TimerLogic","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"laiisaac"},"content":"*** Commands","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"laiisaac"},"content":"@endmindmap","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"laiisaac":22}},{"path":"docs/puml/StorageClass.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"thedarie"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"thedarie"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"thedarie"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"class Storage {","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"    -saveFilePath:String","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"thedarie"},"content":"    +Storage(filePath:String)","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"thedarie"},"content":"    +writeSaveData(taskList:TaskList):JSONObject","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"thedarie"},"content":"    +load():ArrayList\u003cTask\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"thedarie"},"content":"    +handleCorruptedSave(ui:Ui):void","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"thedarie"},"content":"    -wipeSaveData():void","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"thedarie"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"thedarie"},"content":"class Parser {","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"thedarie"},"content":"    +parseSaveData(taskData:JSONObject):Task","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"thedarie"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"thedarie"},"content":"class TaskList {","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"thedarie"},"content":"    +getTasks():ArrayList\u003cTask\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"thedarie"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"thedarie"},"content":"class Ui","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"thedarie"},"content":"hide Ui members","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"thedarie"},"content":"Storage ..\u003e Parser","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"thedarie"},"content":"Storage ..\u003e TaskList","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"thedarie"},"content":"Storage ..\u003e Ui","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"thedarie"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"thedarie":29}},{"path":"docs/puml/StorageCorruptedSD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"thedarie"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"thedarie"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"thedarie"},"content":"hide footbox","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"thedarie"},"content":"participant Storage as \"storage:Storage\"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"participant UI as \"ui:Ui\"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"participant System as \"\u003c\u003cclass\u003e\u003e\\nSystem\"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"thedarie"},"content":"[-\u003e Storage ++:handleCorruptedSave()","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"thedarie"},"content":"loop input not y or n","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"thedarie"},"content":"    Storage -\u003e UI ++:readCommand()","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"thedarie"},"content":"    UI --\u003e Storage --: input","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"thedarie"},"content":"end","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"thedarie"},"content":"    alt input \u003d n","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"thedarie"},"content":"        Storage -\u003e System ++: exit()","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"thedarie"},"content":"        return","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"thedarie"},"content":"    else","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"thedarie"},"content":"        Storage -\u003e Storage ++: wipeSaveData()","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"thedarie"},"content":"        return","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"thedarie"},"content":"end","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"thedarie"},"content":"return","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"thedarie"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"thedarie":23}},{"path":"docs/puml/StorageLoadSD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"thedarie"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"thedarie"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"thedarie"},"content":"hide footbox","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"thedarie"},"content":"participant Storage as \"storage:Storage\"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"participant List as \"taskList:ArrayList\u003ctask\u003e\"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"participant File as \"\u003c\u003cclass\u003e\u003e\\nFile\"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"thedarie"},"content":"participant JSONObject as \":JSONObject\"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"thedarie"},"content":"participant JSONArray as \"taskArray:JSONArray\"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"thedarie"},"content":"participant Parser as \"\u003c\u003cclass\u003e\u003e\\nParser\"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"thedarie"},"content":"participant Task as \"newTask:Task\"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"thedarie"},"content":"[-\u003e Storage ++: load()","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"thedarie"},"content":"create List","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"thedarie"},"content":"Storage -\u003e List ++:","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"thedarie"},"content":"List --\u003e Storage --","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"thedarie"},"content":"Storage -\u003e File as \"\u003c\u003cclass\u003e\u003e\\nFile\" ++: readAllLines(saveFilePath)","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"thedarie"},"content":"File --\u003e Storage --: fileContent","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"thedarie"},"content":"opt fileContent not empty","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"thedarie"},"content":"    create JSONObject","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"thedarie"},"content":"    Storage -\u003e JSONObject ++: JSONObject(fileContent)","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"thedarie"},"content":"    create JSONArray","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"thedarie"},"content":"    JSONObject -\u003e JSONArray ++:getJSONArray()","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"thedarie"},"content":"    deactivate JSONObject","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"thedarie"},"content":"    JSONArray --\u003e Storage -- : taskArray","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"thedarie"},"content":"    loop all element in taskArray","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"thedarie"},"content":"        Storage -\u003e Parser ++: parseSaveData(taskElement)","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"thedarie"},"content":"        create Task","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"thedarie"},"content":"        Parser -\u003e Task ++: Task()","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"thedarie"},"content":"        Task --\u003e Parser --","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"thedarie"},"content":"        Parser --\u003e Storage --: task","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"thedarie"},"content":"        Storage -\u003e List ++: add(task)","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"thedarie"},"content":"        List --\u003e Storage --","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"thedarie"},"content":"    end","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"thedarie"},"content":"end","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"thedarie"},"content":"return taskList","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"thedarie"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"thedarie":48}},{"path":"docs/puml/TimerClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"laiisaac"},"content":"@startuml","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"abstract class \"{abstract}\\nTimer\" as Timer","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"laiisaac"},"content":"class Countdown","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"class Stopwatch","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"laiisaac"},"content":"Thread \u003c|.. Timer","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"laiisaac"},"content":"Timer \u003c|.. Countdown","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"Timer \u003c|.. Stopwatch","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"abstract class Timer {","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"laiisaac"},"content":"    # isTimerRunning:boolean","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"    # isTimerPaused:boolean","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"    # forcedStop:boolean","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"    # taskList:TaskList","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"laiisaac"},"content":"    + Timer(taskList:TaskList,ui:Ui)","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"laiisaac"},"content":"    # update():void {abstract}","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"laiisaac"},"content":"    + resumeTimer():void {abstract}","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"laiisaac"},"content":"    + stopTimer():void {abstract}","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"laiisaac"},"content":"    + pauseTimer():void","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"laiisaac"},"content":"}","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"laiisaac"},"content":"class Countdown {","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"laiisaac"},"content":"    -hasTimeLeft:boolean","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"laiisaac"},"content":"    #timeLeft:int","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"laiisaac"},"content":"    +Countdown(taskList:TaskList,ui:Ui,jframe:JFRAME,jlabel:JLABEL)","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"laiisaac"},"content":"    -convertTimeToString():String","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"laiisaac"},"content":"    +run():void","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"laiisaac"},"content":"    #update():void","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"laiisaac"},"content":"    +stopTimer():void","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"laiisaac"},"content":"    +resumeTimer():void","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"laiisaac"},"content":"}","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"laiisaac"},"content":"class Stopwatch {","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"laiisaac"},"content":"    -timeElapsed:int","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"laiisaac"},"content":"    +Stopwatch(taskList:TaskList,ui:Ui,jframe:JFRAME,jlabel:JLABEL)","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"laiisaac"},"content":"    -convertTimeToString():String","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"laiisaac"},"content":"    +run():void","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"laiisaac"},"content":"    #update():void","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"laiisaac"},"content":"    +stopTimer():void","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"laiisaac"},"content":"    +resumeTimer():void","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"laiisaac"},"content":"}","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"laiisaac"},"content":"@enduml","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"laiisaac":46}},{"path":"docs/puml/TimerClassSD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"laiisaac"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"hide footbox","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"participant User","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"laiisaac"},"content":"participant StudyCommand as \":StudyCommand\"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"participant Parser as \"\u003c\u003cclass\u003e\u003e\\nTimerParser\"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"laiisaac"},"content":"participant TimerLogic as \":TimerLogic\"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"laiisaac"},"content":"participant Timer as \":Countdown\"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"User -\u003e StudyCommand: start 1","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"laiisaac"},"content":"activate StudyCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"StudyCommand -\u003e Parser: parseStudyMode(start 1)","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"laiisaac"},"content":"activate Parser","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"Parser -\u003e TimerLogic: callStartTimer()","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"activate TimerLogic","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"laiisaac"},"content":"TimerLogic -\u003e Timer: startTimer","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"laiisaac"},"content":"activate Timer","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"laiisaac"},"content":"par","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"laiisaac"},"content":"Timer -\u003e Timer: start","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"laiisaac"},"content":"Timer --\u003e TimerLogic","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"laiisaac"},"content":"end","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"laiisaac"},"content":"par","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"laiisaac"},"content":"Timer -\u003e Timer: update","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"laiisaac"},"content":"TimerLogic --\u003e Parser","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"laiisaac"},"content":"end","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"laiisaac"},"content":"Parser --\u003e StudyCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"laiisaac"},"content":"deactivate Parser","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"laiisaac"},"content":"Timer -\u003e Timer: update","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"laiisaac"},"content":"StudyCommand --\u003e User","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"laiisaac"},"content":"User -\u003e StudyCommand: stop","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"laiisaac"},"content":"Timer -\u003e Timer: update","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"laiisaac"},"content":"StudyCommand -\u003e Parser: parseStudyMode(stop)","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"laiisaac"},"content":"activate Parser","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"laiisaac"},"content":"Parser -\u003e TimerLogic: callStopTimer()","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"laiisaac"},"content":"Timer -\u003e Timer: update","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"laiisaac"},"content":"TimerLogic -\u003e Timer: stopTimer","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"laiisaac"},"content":"Timer -\u003e Timer: stop","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"laiisaac"},"content":"Timer --\u003e TimerLogic","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"laiisaac"},"content":"deactivate Timer","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"laiisaac"},"content":"TimerLogic --\u003e Parser","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"laiisaac"},"content":"Parser --\u003e StudyCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"laiisaac"},"content":"deactivate Parser","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"laiisaac"},"content":"StudyCommand --\u003e User","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"laiisaac"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"laiisaac":57}},{"path":"docs/puml/showScheduleForADate.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"hide footbox","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"participant User as User","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"participant Main as Main","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"participant \"\u003cfont color\u003dred\u003e**\u003c\u003cclass\u003e\u003e** \\nParser\" as Parser","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"participant \"c:ShowCommand\" as ShowCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"participant \"\u003cfont color\u003dred\u003e**\u003c\u003cclass\u003e\u003e** \\nTimetable\" as Timetable","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"User -\u003e Main: \"show 25/5/2022\"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"activate Main","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"Main -\u003e Parser: parseCommand(\"show 25/5/2022\": String)","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"activate Parser","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"Parser -\u003e Parser: prepareShow({\"show\", \"25/5/2022\"}:String[])","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"activate Parser","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"Parser --\u003e Parser: :String","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"deactivate Parser","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"Parser -\u003e Parser: parseShowCommandOptions(\"25/5/2022\": String)","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"activate Parser","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"create ShowCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"Parser -\u003e  ShowCommand: new ShowCommand(:LocalDate, null:String)","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"activate ShowCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"ShowCommand --\u003e Parser: :ShowCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"deactivate ShowCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"Parser --\u003e Parser: :ShowCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"deactivate Parser","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"Parser --\u003e Main: :ShowCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"deactivate Parser","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"destroy Parser","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"Main -\u003e ShowCommand: execute(taskList: TaskList, ui: Ui, storage: Storage)","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"activate ShowCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"ShowCommand -\u003e Timetable: showScheduleByDay(dateInput: LocalDate, filteredtasks: ArrayList\u003cTask\u003e, ui: Ui)","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"activate Timetable","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"Timetable -\u003e TaskList: getFilteredTasksByDate(dateInput: LocalDate)","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"activate TaskList","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"TaskList --\u003e Timetable: filteredTasks: ArrayList\u003cTask\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"deactivate TaskList","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"destroy TaskList","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"Timetable -\u003e Timetable: prepareTimetable(dateInput: LocalDate, filtererdTasks: ArrayList\u003cTask\u003e, ui: Ui)","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"activate Timetable","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"Timetable -\u003e Timetable: printTimetable(day: String, date: String, filteredTasks: ArrayList\u003cTask\u003e, ui: Ui, taskLength: long, doOnDateLength: long, partitionLength: long)","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"activate Timetable","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"Timetable -\u003e Timetable: printRow(colOne: String, colTwo: String, colThree: String, colFour: String, colFive: String, taskLength: long, doOnDateLength: long, i: int, ui: Ui)","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"activate Timetable","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"deactivate Timetable","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"Timetable --\u003e Timetable","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"deactivate Timetable","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"Timetable --\u003e Timetable","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"deactivate Timetable","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"Timetable --\u003e Timetable","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"Timetable --\u003e ShowCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"deactivate Timetable","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"destroy Timetable","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"ShowCommand --\u003e Main","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"deactivate ShowCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"jltha"},"content":"destroy ShowCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"jltha"},"content":"Main --\u003e User","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"jltha"},"content":"deactivate Main","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"jltha"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"jltha":73}},{"path":"docs/puml/showScheduleForADateTwo.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"@startuml","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"hide footbox","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"participant \"c:ShowCommand\" as ShowCommand","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"participant \"\u003cfont color\u003dred\u003e**\u003c\u003cclass\u003e\u003e** \\nTimetable\" as Timetable","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"ShowCommand -\u003e Timetable: showScheduleByDay(dateInput: LocalDate, filteredtasks: ArrayList\u003cTask\u003e, ui: Ui)","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"activate Timetable","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"Timetable -\u003e TaskList: getFilteredTasksByDate(dateInput: LocalDate)","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"activate TaskList","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"TaskList --\u003e Timetable: filteredTasks: ArrayList\u003cTask\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"deactivate TaskList","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"destroy TaskList","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"Timetable -\u003e Timetable: prepareTimetable(dateInput: LocalDate, filtererdTasks: ArrayList\u003cTask\u003e, ui: Ui)","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"activate Timetable","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"Timetable -\u003e Timetable: printTimetable(day: String, date: String, filteredTasks: ArrayList\u003cTask\u003e, ui: Ui, taskLength: long, doOnDateLength: long, partitionLength: long)","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"activate Timetable","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"Timetable -\u003e Timetable: printRow(colOne: String, colTwo: String, colThree: String, colFour: String, colFive: String, taskLength: long, doOnDateLength: long, i: int, ui: Ui)","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"activate Timetable","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"deactivate Timetable","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"Timetable --\u003e Timetable","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"deactivate Timetable","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"Timetable --\u003e Timetable","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"deactivate Timetable","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"Timetable --\u003e Timetable","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"Timetable --\u003e ShowCommand","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"deactivate Timetable","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"destroy Timetable","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"@enduml","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"jltha":34}},{"path":"src/main/java/seedu/sherpass/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"thedarie"},"content":"import org.json.JSONException;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.command.Command;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.command.ExitCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.exception.InvalidInputException;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.util.parser.Parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.ERROR_IO_FAILURE_MESSAGE;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"thedarie"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"public class Main {","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"    private Storage storage;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"    private final Ui ui;","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"    public static Logger LOGGER;","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"     * Initialises the program.","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"     * Loading of save file also occurs over here.","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"     * @param  filePath Location of the save file.","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"    public Main(String filePath) {","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"            ui.showToUser(ERROR_IO_FAILURE_MESSAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"            System.exit(1);","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"thedarie"},"content":"        } catch (InvalidInputException | JSONException e) {","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"thedarie"},"content":"            ui.showToUser(e.getMessage());","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"thedarie"},"content":"            storage.handleCorruptedSave(ui);","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"thedarie"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"    private void initialiseLogger() {","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"        LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"        LOGGER.setLevel(Level.FINE);","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"        ConsoleHandler ch \u003d new ConsoleHandler();","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"        ch.setLevel(Level.WARNING);","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"        LOGGER.addHandler(ch);","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"            FileHandler fh \u003d new FileHandler();","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"            fh.setLevel(Level.ALL);","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"            LOGGER.addHandler(fh);","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"            LOGGER.log(Level.SEVERE, \"File logger not working\", e);","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"jltha"},"content":"     * Runs the program.","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"jltha"},"content":"    public void run() {","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"jltha"},"content":"        initialiseLogger();","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"        ui.showWelcomeMessage(taskList, ui);","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"jltha"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"jltha"},"content":"        while (!isExit \u0026\u0026 ui.hasInput()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"jltha"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"jltha"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"jltha"},"content":"            Command c \u003d Parser.parseCommand(fullCommand, taskList, ui);","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"jltha"},"content":"            if (c !\u003d null) {","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"jltha"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"jltha"},"content":"                isExit \u003d ExitCommand.isExit(c);","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"jltha"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"jltha"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"thedarie"},"content":"        new Main(\"data/sherpass.json\").run();","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"laiisaac":1,"jltha":78,"yuzhongng":2,"thedarie":15}},{"path":"src/main/java/seedu/sherpass/command/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BradenTeo"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.enums.Frequency;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.exception.InvalidInputException;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.task.Task;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"BradenTeo"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"BradenTeo"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.parser.TaskParser;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.ERROR_START_AFTER_END_TIME_MESSAGE;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"BradenTeo"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"BradenTeo"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"    public static final String MESSAGE_USAGE \u003d \"Add: Adds a task into the task list.\\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"            + \"Usage: add TASK_DESCRIPTION /do DATE /start START_TIME /end END_TIME /repeat FREQUENCY\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"            + \"       add TASK_DESCRIPTION /do DATE /start START_TIME /end END_TIME [/by DEADLINE]\\n\\n\"","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"            + \"DATE \u0026 DEADLINE format: d/M/yyyy\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"            + \"START_TIME \u0026 END_TIME format: HH:mm\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"            + \"FREQUENCY: daily, weekly, or monthly\";","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"    private String taskDescription;","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"    private LocalDateTime doOnStartDateTime;","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"    private LocalDateTime doOnEndDateTime;","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"    private LocalDateTime byDate;","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"    private Frequency frequency;","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"     * Accept parsed user input (in proper format) for preparation of adding task.","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"     * @param taskDescription parsed task description.","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"     * @param doOnStartDateTime parsed doOnStartDateTime.","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"     * @param doOnEndDateTime parsed doOnEndDateTime.","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"     * @throws InvalidInputException of start time is after end time.","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"    public void setTaskContent(String taskDescription, LocalDateTime doOnStartDateTime,","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"                               LocalDateTime doOnEndDateTime) throws","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"            InvalidInputException {","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"        if (doOnStartDateTime.isAfter(doOnEndDateTime)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"            throw new InvalidInputException(ERROR_START_AFTER_END_TIME_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"BradenTeo"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"        this.doOnStartDateTime \u003d doOnStartDateTime;","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"        this.doOnEndDateTime \u003d doOnEndDateTime;","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"BradenTeo"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"     * Accept parsed user input for by date, in proper format.","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"     * @param byDate parsed by date.","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"    public void setTaskByDate(LocalDateTime byDate) {","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"     * Accept parsed user input for frequency.","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"     * Does not check if frequency is valid or not.","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"     * @param frequency parsed frequency.","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"    public void setFrequency(Frequency frequency) {","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"jltha"},"content":"        this.frequency \u003d frequency;","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"BradenTeo"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"jltha"},"content":"     * Executes the adding of a task or multiple tasks.","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"jltha"},"content":"     * @param taskList Array representation of tasks.","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"jltha"},"content":"     * @param ui User Interface.","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"     * @param storage Overwrites the save file data.","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"BradenTeo"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":79,"author":{"gitId":"BradenTeo"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"jltha"},"content":"        Task newTask;","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"jltha"},"content":"        if (TaskParser.isValidFreq(frequency)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"jltha"},"content":"            int identifier \u003d taskList.generateIdentifier();","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"jltha"},"content":"            newTask \u003d new Task(identifier, taskDescription, null,","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"jltha"},"content":"                    doOnStartDateTime, doOnEndDateTime, frequency, 0);","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"jltha"},"content":"            taskList.addTask(newTask, true, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"jltha"},"content":"        } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"jltha"},"content":"            newTask \u003d new Task(-1, taskDescription, byDate,","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"jltha"},"content":"                    doOnStartDateTime, doOnEndDateTime, null, 0);","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"jltha"},"content":"            taskList.addTask(newTask, false, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"BradenTeo"},"content":"        storage.writeSaveData(taskList);","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"BradenTeo"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":93,"author":{"gitId":"BradenTeo"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"jltha":71,"thedarie":4,"BradenTeo":18}},{"path":"src/main/java/seedu/sherpass/command/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.Task;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"    public static final String MESSAGE_USAGE \u003d \"Clear: Deletes all tasks in the list.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"            + \"To execute the command, enter \u0027clear\u0027.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"     * Executes the clear command. Deletes all saved tasks in the task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"     * @param taskList Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"     * @param ui       UI for printing messages.","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"     * @param storage  Overwrite saved data after deleting.","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"        ArrayList\u003cTask\u003e tempArray \u003d taskList.getTasks();","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"        if (tempArray.size() \u003c\u003d 0) {","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"There are no tasks to clear!\");","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"            return;","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"        ui.showToUser(\"Are you sure you want to delete all tasks? [Y/N]\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"                + \"You will not be able to recover them after deleting.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"        ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"        while (true) {","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"            String input \u003d ui.readCommand();","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"            if (input.trim().equalsIgnoreCase(\"Y\")","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"                    || input.trim().equalsIgnoreCase(\"Yes\")) {","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"                ui.showToUser(\"Understood. Proceeding to delete\"","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"                        + \"\\nall current tasks in the list..........\");","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"                taskList.deleteAllTasks(ui);","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"                break;","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"            if (input.trim().equalsIgnoreCase(\"N\")","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"                    || input.trim().equalsIgnoreCase(\"No\")) {","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"                ui.showToUser(\"Okay, we\u0027ll keep it as it is.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"                break;","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"Please confirm your choice with either Y (Yes) or N (No).\");","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"thedarie"},"content":"        storage.writeSaveData(taskList);","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":52,"thedarie":3}},{"path":"src/main/java/seedu/sherpass/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"public abstract class Command {","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"jltha":9,"thedarie":2}},{"path":"src/main/java/seedu/sherpass/command/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.exception.InvalidInputException;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"    private int deleteIndex;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"    private boolean isRepeat;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"    public static final String MESSAGE_USAGE \u003d \"Delete: Deletes a task in the task list.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"thedarie"},"content":"            + \"Usage: delete TASK_NUMBER [/repeat]\";","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"     * Creates constructor for delete command.","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"     * @param deleteIndex Contains task description to search for","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"     * @param taskList    Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"     * @throws InvalidInputException If there is no task present in task list","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"     *                               that corresponds to given delete index.","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"    public DeleteCommand(int deleteIndex, TaskList taskList, boolean isRepeat) throws InvalidInputException {","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"        if (taskList.isTaskNotExist(deleteIndex)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"        this.deleteIndex \u003d deleteIndex;","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"        this.isRepeat \u003d isRepeat;","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"     * Executes the deletion of a task.","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"     * @param taskList Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"     * @param ui       Ui for printing messages.","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"     * @param storage  Overwrites save file after editing contents in task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"        taskList.removeTask(deleteIndex, ui, isRepeat);","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"thedarie"},"content":"        storage.writeSaveData(taskList);","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":41,"thedarie":3}},{"path":"src/main/java/seedu/sherpass/command/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BradenTeo"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.exception.InvalidInputException;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.Task;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"BradenTeo"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"BradenTeo"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"BradenTeo"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.parser.TaskParser;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"thedarie"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.inputDateOnlyFormat;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.inputWithTimeFormat;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.timeOnlyFormat;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.ERROR_INVALID_DELETE_INDEX_MESSAGE;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.ERROR_INVALID_INDEX_MESSAGE;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.ERROR_START_AFTER_END_TIME_MESSAGE;","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.WHITESPACE;","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"BradenTeo"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"BradenTeo"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"    public static final String MESSAGE_USAGE \u003d \"Edit: Edit a task in the task list.\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"            + \"Usage: edit TASK_NUMBER [TASK_DESCRIPTION] [/do DATE /start START_TIME /end END_TIME]\"","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"            + \" [/by DEADLINE]\\n\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"            + \"DATE \u0026 DEADLINE format: d/M/yyyy\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"            + \"START_TIME \u0026 END_TIME format: HH:mm\";","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"    private int editIndex;","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"    private String taskDescription;","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"    private LocalDate doOnDate;","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"    private LocalTime startTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"    private LocalTime endTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"    private LocalDateTime byDate;","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"    private boolean isRepeat;","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"     * Accepts an index to edit a task. Checks if index is valid","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"     * and corresponds to a task in the task list.","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"     * @param editIndex Index of a task to edit.","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"     * @param taskList Array representation of tasks.","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"     * @throws NumberFormatException if index does not correspond to any task in the task list.","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"    public void setEditIndex(int editIndex, TaskList taskList) throws NumberFormatException {","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"        if (taskList.isTaskNotExist(editIndex)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"            throw new NumberFormatException(ERROR_INVALID_INDEX_MESSAGE);","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"        this.editIndex \u003d editIndex;","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"     * Sets the boolean attribute isRepeat to true if user inputs includes","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"     * \"/repeat\". False otherwise.","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"     * @param isRepeat boolean value checking if task to edit involves recurring tasks","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"    public void setIsRepeat(boolean isRepeat) {","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"        this.isRepeat \u003d isRepeat;","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"jltha"},"content":"     * Accept parsed user input (in proper format) for preparation of editing task.","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"jltha"},"content":"     * @param taskDescription parsed task description.","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"jltha"},"content":"     * @param doOnDate parsed doOnStartDateTime.","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"jltha"},"content":"     * @param startTime parsed startTime.","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"jltha"},"content":"     * @param endTime parsed endTime.","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"jltha"},"content":"     * @param byDate parsed byDate","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"jltha"},"content":"    public void setTaskContent(String taskDescription, LocalDate doOnDate,","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"                               LocalTime startTime,","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"jltha"},"content":"                               LocalTime endTime, LocalDateTime byDate) {","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"BradenTeo"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"BradenTeo"},"content":"        this.doOnDate \u003d doOnDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"jltha"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"jltha"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"jltha"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"BradenTeo"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"jltha"},"content":"     * Executes the editing of a task or multiple tasks.","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"jltha"},"content":"     * @param taskList Array representation of tasks.","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"jltha"},"content":"     * @param ui User Interface.","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"jltha"},"content":"     * @param storage Overwrites the save file data.","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"BradenTeo"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"jltha"},"content":"        Task taskToEdit \u003d taskList.getTask(editIndex);","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"jltha"},"content":"        if (byDate !\u003d null \u0026\u0026 TaskParser.isValidFreq(taskToEdit.getRepeatFrequency())) {","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"A repeated task does not have a /by DATE\");","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"jltha"},"content":"            return;","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"BradenTeo"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"jltha"},"content":"        LocalDate currentTaskDate \u003d (doOnDate \u003d\u003d null)","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"jltha"},"content":"                ? taskToEdit.getDoOnStartDateTime().toLocalDate() : doOnDate;","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"jltha"},"content":"        LocalTime currentStartTime \u003d (startTime \u003d\u003d null)","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"jltha"},"content":"                ? taskToEdit.getDoOnStartDateTime().toLocalTime() : startTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"jltha"},"content":"        LocalTime currentEndTime \u003d (endTime \u003d\u003d null)","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"jltha"},"content":"                ? taskToEdit.getDoOnEndDateTime().toLocalTime() : endTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"jltha"},"content":"        if (currentEndTime.isAfter(currentEndTime)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"jltha"},"content":"            ui.showToUser(ERROR_START_AFTER_END_TIME_MESSAGE);","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"jltha"},"content":"            return;","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"BradenTeo"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"jltha"},"content":"        LocalDateTime currentDoOnStartDateTime \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"jltha"},"content":"                LocalDateTime.parse(currentTaskDate.format(inputDateOnlyFormat) + WHITESPACE","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"jltha"},"content":"                        + currentStartTime.format(timeOnlyFormat), inputWithTimeFormat);","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"jltha"},"content":"        LocalDateTime currentDoOnEndDateTime \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"jltha"},"content":"                LocalDateTime.parse(currentTaskDate.format(inputDateOnlyFormat) + WHITESPACE","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"jltha"},"content":"                        + currentEndTime.format(timeOnlyFormat), inputWithTimeFormat);","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"jltha"},"content":"        taskList.editTask(ui, taskToEdit, taskDescription, currentDoOnStartDateTime,","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"jltha"},"content":"                currentDoOnEndDateTime, byDate, isRepeat);","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"BradenTeo"},"content":"        storage.writeSaveData(taskList);","lastModifiedDate":"2022-03-13"},{"lineNumber":117,"author":{"gitId":"BradenTeo"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":118,"author":{"gitId":"BradenTeo"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"jltha":94,"thedarie":4,"BradenTeo":20}},{"path":"src/main/java/seedu/sherpass/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"    public static final String MESSAGE_USAGE \u003d \"Bye: Exits the program.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"     * Returns a boolean value denoting if the given Command object","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"     * is of the same instance as an ExitCommand.","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"     * @param c Command object","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"     * @return Returns true if c is an instance of ExitCommand. False otherwise.","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"    public static boolean isExit(Command c) {","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"        return c instanceof ExitCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"     * Executes exit command. Prints a goodbye message.","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"     * @param taskList Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"     * @param ui Ui for printing messages.","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"     * @param storage Storage for appending or overwriting saved data. Not used in this method.","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"        ui.showGoodbyeMessage();","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":33,"thedarie":2}},{"path":"src/main/java/seedu/sherpass/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.HELP_MESSAGE_QUICK_START_COMMAND;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.HELP_MESSAGE_SPECIFIC_COMMAND;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"    private String helpInput;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD_VARIANT \u003d \"quick start\";","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"     * Creates a constructor for the HelpCommand. Accepts the help input.","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"     * Help input contains a keyword to obtain detailed information on","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"     * available commands to use.","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"     * @param filteredHelpInput Help keyword.","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"    public HelpCommand(String filteredHelpInput) {","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"        helpInput \u003d filteredHelpInput.trim().toLowerCase();","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"    private void showHelpList(Ui ui) {","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"        System.out.println(\"Here is a list of commands available:\");","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"        String[] helpCommands \u003d {MarkCommand.COMMAND_WORD, UnmarkCommand.COMMAND_WORD,","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"            AddCommand.COMMAND_WORD, ShowCommand.COMMAND_WORD,","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"            EditCommand.COMMAND_WORD, DeleteCommand.COMMAND_WORD, ClearCommand.COMMAND_WORD,","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"            StudyCommand.COMMAND_WORD, ExitCommand.COMMAND_WORD, };","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"        for (String helpCommand : helpCommands) {","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"            showSpecificHelpCommand(ui, helpCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"        ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"        System.out.println(\"For a quick summary of what commands to execute, \\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"                + \"enter \u0027help quick start\u0027.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"    private void showSpecificHelpCommand(Ui ui, String helpCommand) {","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"        switch (helpCommand) {","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"            ui.showToUser(MarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"            ui.showToUser(UnmarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"BradenTeo"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"BradenTeo"},"content":"            ui.showToUser(AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"            ui.showToUser(DeleteCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"            ui.showToUser(ClearCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"        case ShowCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"            ui.showToUser(ShowCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"        case StudyCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"            ui.showToUser(StudyCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"jltha"},"content":"            ui.showToUser(ExitCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"thedarie"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"thedarie"},"content":"            ui.showToUser(EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"thedarie"},"content":"            break;","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"jltha"},"content":"        case COMMAND_WORD_VARIANT:","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"jltha"},"content":"            ui.showToUser(HELP_MESSAGE_QUICK_START_COMMAND + HELP_MESSAGE_SPECIFIC_COMMAND);","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"jltha"},"content":"        default:","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"            showHelpList(ui);","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"jltha"},"content":"     * Executes the help command. Checks for the search keyword","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"jltha"},"content":"     * in the help command to list detailed information of available","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"jltha"},"content":"     * commands according to what the keyword is looking for.","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"jltha"},"content":"     * @param taskList Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"jltha"},"content":"     * @param ui       Ui for printing.","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"jltha"},"content":"     * @param storage  Storage for overwriting/appending save data. Not used in this method.","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"jltha"},"content":"        showSpecificHelpCommand(ui, helpInput);","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":88,"thedarie":5,"BradenTeo":2}},{"path":"src/main/java/seedu/sherpass/command/MarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"    public static final String MESSAGE_USAGE \u003d \"Mark: Marks a task as done. \"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"laiisaac"},"content":"            + \"\\nTo mark a specific task, enter \u0027mark \u003ctask_number\u003e\u0027.\\n\\n Here, \"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"            + \"\u0027task_number\u0027 denotes the index of a task \\n based on the task list under the command \u0027show all\u0027.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"            + \"\\nE.g., \u0027mark 1\u0027 marks the first task in the task list as done.\\n\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"            + \"Note: You can only mark one task per command input.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"    private int markIndex;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"     * Creates a constructor for the mark command.","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"     * Saves index of task to mark.","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"     * @param markIndex Task index to mark.","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"     * @param taskList  Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"    public MarkCommand(int markIndex, TaskList taskList) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"        if (taskList.isTaskNotExist(markIndex)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"        this.markIndex \u003d markIndex;","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"     * Executes mark command. Marks task as Done.","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"     * @param taskList Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"     * @param ui       Ui for printing","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"     * @param storage  Overwrite save file for newly marked task.","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"        if (taskList.isTaskDone(markIndex)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"This task has already been marked!\");","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"            return;","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"        taskList.markTask(markIndex, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"thedarie"},"content":"        storage.writeSaveData(taskList);","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"laiisaac":2,"jltha":44,"thedarie":3}},{"path":"src/main/java/seedu/sherpass/command/ShowCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.util.timetable.Timetable;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.ERROR_INVALID_INPUT_MESSAGE;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.Message.WAITING_FOR_USER_NEXT_INPUT;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.WELCOME_MESSAGE_TWO;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"public class ShowCommand extends Command {","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD \u003d \"show\";","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"yuzhongng"},"content":"    public static final String MESSAGE_USAGE \u003d String.format(\"Show: shows the array of tasks in a list format%n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"yuzhongng"},"content":"            + \"or in a timetable format.%n%n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"yuzhongng"},"content":"            + \"\"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"yuzhongng"},"content":"            + \"To generate the timetable or a list of monthly schedule, use %n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"yuzhongng"},"content":"            + \"1) `show today`%n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"yuzhongng"},"content":"            + \"2) `show tomorrow`, where `tomorrow can be shorten to `tmr`%n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"yuzhongng"},"content":"            + \"3) `show week`%n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"yuzhongng"},"content":"            + \"4) `show next week`, where `next week` can be shorten to `nextweek`%n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"yuzhongng"},"content":"            + \"5) `show \u003cdate\u003e`, where date is in the format d/M/YYYY.%n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"yuzhongng"},"content":"            + \"6) `show month`%n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"yuzhongng"},"content":"            + \"7) `show \u003cmonth\u003e`, where month can be the full spelling or%n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"yuzhongng"},"content":"            + \"                   the abrreviation of the specfic months%n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"yuzhongng"},"content":"            + \"                   E.g. `show sep` or `show september`%n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"yuzhongng"},"content":"            + \"E.g. show 23/5/2022 to show timetable for 23th May 2022.%n%n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"yuzhongng"},"content":"            + \"\"","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"yuzhongng"},"content":"            + \"To generate a list of all tasks, use%n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"yuzhongng"},"content":"            + \"8) `show all`.%n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"yuzhongng"},"content":"            + \"To generate a list of pending tasks, use%n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"yuzhongng"},"content":"            + \"9) `show todo`.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"    LocalDate dayInput;","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"    String selection;","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"    public ShowCommand(LocalDate dayInput, String selection) {","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"        this.dayInput \u003d dayInput;","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"        this.selection \u003d selection;","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"     * Executes the show command. Shows the user the schedule","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"     * for the day that is specified, the list of incomplete","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"     * tasks, and the current weekly schedule.","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"     * @param taskList Task array.","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"     * @param ui       Ui for printing task content.","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"     * @param storage  Storage for overwriting/appending save data. Not used in this method.","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"        if (dayInput !\u003d null) {","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"Here is the schedule you wanted:\");","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"            Timetable.showScheduleByDay(dayInput, taskList, ui);","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"            return;","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"        switch (selection) {","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"        case \"todo\":","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"Here are your pending tasks:\");","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"            taskList.printPendingTasks(ui);","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"yuzhongng"},"content":"        case \"today\":","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"jltha"},"content":"            ui.showToUser(WELCOME_MESSAGE_TWO);","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"yuzhongng"},"content":"            Timetable.showTodaySchedule(taskList, ui);","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(WAITING_FOR_USER_NEXT_INPUT);","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"yuzhongng"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"yuzhongng"},"content":"        case \"tomorrow\":","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"yuzhongng"},"content":"        case \"tmr\":","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(\"Here is your schedule for tomorrow:\");","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"yuzhongng"},"content":"            Timetable.showTomorrowSchedule(taskList, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(WAITING_FOR_USER_NEXT_INPUT);","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"yuzhongng"},"content":"            break;","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"jltha"},"content":"        case \"week\":","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"Here is your schedule for the week:\");","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"jltha"},"content":"            Timetable.showScheduleOfTheWeek(taskList, ui);","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(WAITING_FOR_USER_NEXT_INPUT);","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"yuzhongng"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"yuzhongng"},"content":"        case \"next week\":","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"yuzhongng"},"content":"        case \"nextweek\":","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(\"Here is your schedule for the week:\");","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"yuzhongng"},"content":"            Timetable.showNextWeekSchedule(taskList, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(WAITING_FOR_USER_NEXT_INPUT);","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"yuzhongng"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"yuzhongng"},"content":"        case \"month\":","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(\"Here is your schedule for the Month:\");","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"yuzhongng"},"content":"            Timetable.showMonthlySchedule(taskList, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(WAITING_FOR_USER_NEXT_INPUT);","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"yuzhongng"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"yuzhongng"},"content":"        case \"january\":","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"yuzhongng"},"content":"        case \"jan\":","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(\"Here is your schedule for January:\");","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"yuzhongng"},"content":"            Timetable.showJanuarySchedule(taskList, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(WAITING_FOR_USER_NEXT_INPUT);","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"yuzhongng"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"yuzhongng"},"content":"        case \"feburary\":","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"yuzhongng"},"content":"        case \"feb\":","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(\"Here is your schedule for Feburary:\");","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"yuzhongng"},"content":"            Timetable.showFeburarySchedule(taskList, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(WAITING_FOR_USER_NEXT_INPUT);","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"yuzhongng"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"yuzhongng"},"content":"        case \"march\":","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"yuzhongng"},"content":"        case \"mar\":","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(\"Here is your schedule for March:\");","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"yuzhongng"},"content":"            Timetable.showMarchSchedule(taskList, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(WAITING_FOR_USER_NEXT_INPUT);","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"yuzhongng"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"yuzhongng"},"content":"        case \"april\":","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"yuzhongng"},"content":"        case \"apr\":","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(\"Here is your schedule for April:\");","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"yuzhongng"},"content":"            Timetable.showAprilSchedule(taskList, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(WAITING_FOR_USER_NEXT_INPUT);","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"yuzhongng"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"yuzhongng"},"content":"        case \"may\":","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(\"Here is your schedule for May:\");","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"yuzhongng"},"content":"            Timetable.showMaySchedule(taskList, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":121,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(WAITING_FOR_USER_NEXT_INPUT);","lastModifiedDate":"2022-03-26"},{"lineNumber":122,"author":{"gitId":"yuzhongng"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":123,"author":{"gitId":"yuzhongng"},"content":"        case \"june\":","lastModifiedDate":"2022-03-26"},{"lineNumber":124,"author":{"gitId":"yuzhongng"},"content":"        case \"jun\":","lastModifiedDate":"2022-03-26"},{"lineNumber":125,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(\"Here is your schedule for June:\");","lastModifiedDate":"2022-03-26"},{"lineNumber":126,"author":{"gitId":"yuzhongng"},"content":"            Timetable.showJuneSchedule(taskList, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":127,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(WAITING_FOR_USER_NEXT_INPUT);","lastModifiedDate":"2022-03-26"},{"lineNumber":128,"author":{"gitId":"yuzhongng"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"yuzhongng"},"content":"        case \"july\":","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"yuzhongng"},"content":"        case \"jul\":","lastModifiedDate":"2022-03-26"},{"lineNumber":131,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(\"Here is your schedule for July:\");","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"yuzhongng"},"content":"            Timetable.showJulySchedule(taskList, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(WAITING_FOR_USER_NEXT_INPUT);","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"yuzhongng"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"yuzhongng"},"content":"        case \"auguest\":","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"yuzhongng"},"content":"        case \"aug\":","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(\"Here is your schedule for Auguest:\");","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"yuzhongng"},"content":"            Timetable.showAuguestSchedule(taskList, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(WAITING_FOR_USER_NEXT_INPUT);","lastModifiedDate":"2022-03-26"},{"lineNumber":140,"author":{"gitId":"yuzhongng"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"yuzhongng"},"content":"        case \"september\":","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"yuzhongng"},"content":"        case \"sep\":","lastModifiedDate":"2022-03-26"},{"lineNumber":143,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(\"Here is your schedule for September:\");","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"yuzhongng"},"content":"            Timetable.showSeptemberSchedule(taskList, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":145,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(WAITING_FOR_USER_NEXT_INPUT);","lastModifiedDate":"2022-03-26"},{"lineNumber":146,"author":{"gitId":"yuzhongng"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":147,"author":{"gitId":"yuzhongng"},"content":"        case \"october\":","lastModifiedDate":"2022-03-26"},{"lineNumber":148,"author":{"gitId":"yuzhongng"},"content":"        case \"oct\":","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(\"Here is your schedule for October:\");","lastModifiedDate":"2022-03-26"},{"lineNumber":150,"author":{"gitId":"yuzhongng"},"content":"            Timetable.showOctoberSchedule(taskList, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":151,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(WAITING_FOR_USER_NEXT_INPUT);","lastModifiedDate":"2022-03-26"},{"lineNumber":152,"author":{"gitId":"yuzhongng"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":153,"author":{"gitId":"yuzhongng"},"content":"        case \"november\":","lastModifiedDate":"2022-03-26"},{"lineNumber":154,"author":{"gitId":"yuzhongng"},"content":"        case \"nov\":","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(\"Here is your schedule for November:\");","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"yuzhongng"},"content":"            Timetable.showNovemberSchedule(taskList, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":157,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(WAITING_FOR_USER_NEXT_INPUT);","lastModifiedDate":"2022-03-26"},{"lineNumber":158,"author":{"gitId":"yuzhongng"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":159,"author":{"gitId":"yuzhongng"},"content":"        case \"decemeber\":","lastModifiedDate":"2022-03-26"},{"lineNumber":160,"author":{"gitId":"yuzhongng"},"content":"        case \"dec\":","lastModifiedDate":"2022-03-26"},{"lineNumber":161,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(\"Here is your schedule for December:\");","lastModifiedDate":"2022-03-26"},{"lineNumber":162,"author":{"gitId":"yuzhongng"},"content":"            Timetable.showDecemberSchedule(taskList, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":163,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(WAITING_FOR_USER_NEXT_INPUT);","lastModifiedDate":"2022-03-26"},{"lineNumber":164,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-20"},{"lineNumber":165,"author":{"gitId":"jltha"},"content":"        case \"all\":","lastModifiedDate":"2022-03-20"},{"lineNumber":166,"author":{"gitId":"jltha"},"content":"            taskList.printAllTasks(ui);","lastModifiedDate":"2022-03-20"},{"lineNumber":167,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-20"},{"lineNumber":168,"author":{"gitId":"jltha"},"content":"        default:","lastModifiedDate":"2022-03-20"},{"lineNumber":169,"author":{"gitId":"jltha"},"content":"            ui.showToUser(ERROR_INVALID_INPUT_MESSAGE);","lastModifiedDate":"2022-03-20"},{"lineNumber":170,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":171,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":172,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"jltha":56,"yuzhongng":116}},{"path":"src/main/java/seedu/sherpass/command/StudyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.timer.TimerLogic;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"laiisaac"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.GOODBYE_MESSAGE_STUDY;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.HELP_MESSAGE_STUDY;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Message.WELCOME_MESSAGE_STUDY;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.util.parser.TimerParser.parseStudyMode;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"public class StudyCommand extends Command {","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD \u003d \"study\";","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"    public static final String MESSAGE_USAGE \u003d \"Study: Enters a study session.\\n\\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"            + \"User can access timer features while in a study session.\\n\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"            + HELP_MESSAGE_STUDY;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"     * Method is called when user chooses to enter Study mode. User is able to start, pause and stop a timer in Study","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"     * mode. Only one timer can be running at a time. User can leave Study mode by typing \"leave\".","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"laiisaac"},"content":"    private void enterStudyMode(Ui ui, Storage storage, TimerLogic timerLogic) {","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"laiisaac"},"content":"        ui.showToUser(WELCOME_MESSAGE_STUDY);","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"        ui.showLine();","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"        String userInput \u003d ui.readCommand();","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"        while (!userInput.contains(\"leave\")) {","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"laiisaac"},"content":"            try {","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"laiisaac"},"content":"                parseStudyMode(ui, storage, userInput, timerLogic);","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"laiisaac"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"laiisaac"},"content":"                ui.showToUser(\"IOException occurred.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"laiisaac"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"            userInput \u003d ui.readCommand();","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"    public void leaveStudyMode(Ui ui, TimerLogic timerLogic) {","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"laiisaac"},"content":"        if (!timerLogic.isTimerPausedOrStopped()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"            timerLogic.callStopTimer();","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"        timerLogic.destroyFrame();","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"        ui.showLine();","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"        ui.showToUser(GOODBYE_MESSAGE_STUDY);","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"laiisaac"},"content":"        TimerLogic timerLogic \u003d new TimerLogic(taskList, ui);","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"laiisaac"},"content":"        enterStudyMode(ui, storage, timerLogic);","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"        leaveStudyMode(ui, timerLogic);","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"laiisaac":15,"jltha":43,"yuzhongng":1}},{"path":"src/main/java/seedu/sherpass/command/UnmarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"    public static final String MESSAGE_USAGE \u003d \"Unmark: Marks a task as undone.\"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"laiisaac"},"content":"            + \"\\nTo unmark a specific task, enter \u0027unmark \u003ctask_number\u003e\u0027.\\n\\n Here, \"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"            + \"\u0027task_number\u0027 denotes the index of a task \\n based on the task list under the command \u0027show all\u0027.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"            + \"\\nE.g., \u0027unmark 3\u0027 unmarks the third task in the task list.\\n\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"            + \"Note: You can only unmark one task per command input.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"    private int markIndex;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"     * Creates a constructor for the unmark command.","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"     * Saves index of task to mark.","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"     * @param markIndex Task index to mark.","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"     * @param taskList  Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"    public UnmarkCommand(int markIndex, TaskList taskList) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"        if (taskList.isTaskNotExist(markIndex)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"        this.markIndex \u003d markIndex;","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"     * Executes unmark command. Marks task as undone.","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"     * @param taskList Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"     * @param ui       Ui for printing","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"     * @param storage  Overwrite save file for newly unmarked task.","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"        if (!taskList.isTaskDone(markIndex)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"This task was already unmarked!\");","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"            return;","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"        taskList.unmarkTask(markIndex, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"thedarie"},"content":"        storage.writeSaveData(taskList);","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"laiisaac":2,"jltha":43,"thedarie":3}},{"path":"src/main/java/seedu/sherpass/constant/CommandParameter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thedarie"},"content":"package seedu.sherpass.constant;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"public class CommandParameter {","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"thedarie"},"content":"    public static final String DO_DATE_DELIMITER \u003d \"/do\";","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"thedarie"},"content":"    public static final String BY_DATE_DELIMITER \u003d \"/by\";","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"    public static final String FREQUENCY_DELIMITER \u003d \"/repeat\";","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"    public static final String START_TIME_DELIMITER \u003d \"/start\";","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"thedarie"},"content":"    public static final String END_TIME_DELIMITER \u003d \"/end\";","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"    public static final String TIMER_CUSTOM_DELIMITER \u003d \"/custom\";","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"thedarie"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"jltha":2,"thedarie":8}},{"path":"src/main/java/seedu/sherpass/constant/DateAndTimeFormat.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.constant;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"public class DateAndTimeFormat {","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"thedarie"},"content":"    public static final DateTimeFormatter inputWithoutTimeFormat \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"thedarie"},"content":"    public static final DateTimeFormatter inputWithTimeFormat \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HH:mm\");","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"    public static final DateTimeFormatter inputTimeIndependentFormat \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"            .appendPattern(\"d/M/yyyy\")","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"            .optionalStart()","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"            .appendPattern(\" HH:mm\")","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"            .optionalEnd()","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"            .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"            .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"            .toFormatter();","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"thedarie"},"content":"    public static final DateTimeFormatter outputWithTimeFormat \u003d DateTimeFormatter.ofPattern(\"EEE, dd/MM/yyyy HH:mm\");","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"    public static final DateTimeFormatter outputWithoutTimeFormat \u003d DateTimeFormatter.ofPattern(\"EEE, dd/MM/yyyy\");","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"    public static final DateTimeFormatter inputDateOnlyFormat \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"    public static final DateTimeFormatter outputDateOnlyFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"thedarie"},"content":"    public static final DateTimeFormatter dayOnlyFormat \u003d DateTimeFormatter.ofPattern(\"EEE\");","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"    public static final DateTimeFormatter timeOnlyFormat \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":20,"thedarie":4}},{"path":"src/main/java/seedu/sherpass/constant/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.constant;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"public class Index {","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"    public static final int OPTIONS_INDEX \u003d 0;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"    public static final int HELP_OPTIONS_INDEX \u003d 1;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"    public static final int DIRECTORY_INDEX \u003d 0;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"    public static final int STUDY_COMMAND_INDEX \u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"laiisaac"},"content":"    public static final int STUDY_PARAMETER_INDEX \u003d 1;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"    public static final int TIMER_FORMAT_INDEX \u003d 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"    public static final int DEFAULT_TIMER_INDEX \u003d 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"    public static final int CUSTOM_TIMER_INDEX \u003d 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"    public static final int DEFAULT_TIMER_ONE \u003d 1800;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"    public static final int DEFAULT_TIMER_TWO \u003d 3600;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"laiisaac"},"content":"    public static final int DEFAULT_TIMER_THREE \u003d 5400;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"    public static final int DEFAULT_TIMER_ZERO \u003d 30;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"    public static final int INDENT_FACTOR \u003d 4;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"    public static final int CUSTOM_COMMAND_INDEX \u003d 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"    public static final int SHOW_OPTION_INDEX \u003d 1;","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"thedarie"},"content":"    public static final int ZERO_INDEX_OFFSET \u003d 1;","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"thedarie"},"content":"    public static final int WHITESPACE_OFFSET \u003d 1;","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"thedarie"},"content":"    public static final int START_OF_STRING \u003d 0;","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"thedarie"},"content":"    public static final int SPLIT_TWO_PART_LIMIT \u003d 2;","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"thedarie"},"content":"    public static final int SPLIT_FIRST_PART_INDEX \u003d 0;","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"    public static final int COMMAND_CONTENT_INDEX \u003d 1;","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"    public static final int EDIT_INDEX \u003d 0;","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"    public static final int EDIT_TASK_CONTENT \u003d 1;","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"    public static final int INDEX_OFFSET \u003d 1;","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"laiisaac":5,"jltha":18,"thedarie":5}},{"path":"src/main/java/seedu/sherpass/constant/Message.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.constant;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"public class Message {","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"BradenTeo"},"content":"    public static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"thedarie"},"content":"    public static final String WHITESPACE \u003d \" \";","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"    public static final String WELCOME_MESSAGE_ONE \u003d \"Welcome to\\n\";","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"    public static final String WELCOME_MESSAGE_TWO \u003d \"Here is your schedule for today:\";","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"laiisaac"},"content":"    public static final String WELCOME_MESSAGE_STUDY \u003d \"Gotcha! Entering study mode...\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"            + \"Done! To get started, enter one of the three default timers\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"            + \"using \u0027start \u003cmode_number\u003e\u0027:\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"laiisaac"},"content":"            + \"1) 30 minutes\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"            + \"2) 1 hour\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"            + \"3) 1.5 hours\\n\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"            + \"For testing purposes, you may start a 30s timer\\nwith mode number 0.\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"            + \"Feel free to choose your own timer with\\n\u0027start /custom \u003ctimer_duration\u003e\u0027.\\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"            + \"Otherwise, you can start a stopwatch with \u0027start stopwatch\u0027.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"            + \"You can also use the \\\"show today\\\" command to\\nsee what tasks you have planned to complete.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"    public static final String GOODBYE_MESSAGE \u003d \"Bye. Hope to see you again soon! :)\";","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"laiisaac"},"content":"    public static final String GOODBYE_MESSAGE_STUDY \u003d \"Leaving study session...\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"laiisaac"},"content":"            + \"Welcome back to the main session! How can I help you?\";","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"    private static final String HELP_MESSAGE \u003d \"For more information, please enter the \u0027help\u0027 command.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"    public static final String HELP_MESSAGE_SPECIFIC_COMMAND \u003d \"\\n\\nFor more information on \"","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"BradenTeo"},"content":"            + \"the command you wish to execute,\\nenter \u0027help \u003ccommand\u003e\u0027 e.g. help add\";","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"    public static final String HELP_MESSAGE_QUICK_START_COMMAND \u003d \"Command input quick start guide:\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"            + \"1) Show: show today/week/\u003cdate\u003e/all/todo\\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"            + \"2) Mark: mark \u003clist_index\u003e\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"            + \"3) Unmark: unmark \u003clist_index\u003e\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"BradenTeo"},"content":"            + \"4) Add: add \u003ctask_description\u003e /by \u003ctask_due_date\u003e /do_on \u003cdate_to_work_on_task\u003e\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"BradenTeo"},"content":"            + \"5) Delete: delete \u003clist_index\u003e\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"BradenTeo"},"content":"            + \"6) Find: find \u003ckeyword\u003e\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"BradenTeo"},"content":"            + \"7) Clear: clear\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"BradenTeo"},"content":"            + \"8) Bye: bye\";","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"laiisaac"},"content":"    public static final String HELP_MESSAGE_STUDY \u003d \"Timer command input quick start guide:\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"            + \"1) Start default timer: start \u003cmode_number\u003e\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"laiisaac"},"content":"            + \"2) Start custom timer: start /custom \u003ctimer_duration\u003e\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"laiisaac"},"content":"            + \"3) Stop timer: stop\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"laiisaac"},"content":"            + \"4) Pause timer: pause\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"laiisaac"},"content":"            + \"5) Resume timer: resume\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"laiisaac"},"content":"            + \"6) Exit study mode: leave\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"laiisaac"},"content":"            + \"7) Mark task as done: mark \u003ctask_index\u003e\";","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"yuzhongng"},"content":"    public static final String WAITING_FOR_USER_NEXT_INPUT \u003d \"What would you like to do next?\";","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"thedarie"},"content":"    public static final String ERROR_START_AFTER_END_TIME_MESSAGE \u003d \"Start time cannot be after end time!\";","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"    public static final String ERROR_EMPTY_DESCRIPTION_MESSAGE \u003d \"Description cannot be blank and must be before \"","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"            + \"the date and time add commands\";","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"    public static final String ERROR_EMPTY_TASK_LIST_MESSAGE \u003d \"The task list is empty!\";","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"thedarie"},"content":"    public static final String ERROR_MISSING_EDIT_ARGUMENT_MESSAGE \u003d \"Missing task description or date argument!\";","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"thedarie"},"content":"    public static final String ERROR_INVALID_FREQUENCY_MESSAGE \u003d \"Invalid frequency!\";","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"thedarie"},"content":"    public static final String ERROR_INVALID_INDEX_MESSAGE \u003d \"Invalid index!\";","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"    public static final String ERROR_INVALID_DATETIME_MESSAGE \u003d \"Invalid date and/or time format!\";","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"    public static final String ERROR_SCHEDULE_CLASH_MESSAGE \u003d \"Oops! I am unable to add this task as \"","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"            + \"it has some clashes\\nwith your schedule :(\";","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"    public static final String ERROR_EMPTY_ADD_COMMANDS_MESSAGE \u003d \"Add command is missing \"","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"            + \"description and/or date details!\\n(and possibly a repeat frequency if you intend to add it in)\";","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"    public static final String ERROR_MULTIPLE_ARGS_MESSAGE \u003d \"Add command has both /by and /repeat commands.\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"            + \"Please choose one of them.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"    public static final String ERROR_INVALID_INPUT_MESSAGE \u003d \"Please key in an appropriate command.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"            + HELP_MESSAGE;","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"laiisaac"},"content":"    public static final String ERROR_INVALID_STUDY_INPUT_MESSAGE \u003d \"Please key in an appropriate command.\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"laiisaac"},"content":"            + HELP_MESSAGE_STUDY;","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"    public static final String ERROR_INVALID_DELETE_INDEX_MESSAGE \u003d \"Oops! It seems that you\u0027ve given\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"            + \"an invalid index to delete the task.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"    public static final String ERROR_IO_FAILURE_MESSAGE \u003d \"Oh no! We\u0027ve encountered an error \\nwhile \"","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"jltha"},"content":"            + \"trying to processing the system.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"jltha"},"content":"            + \"Please reboot and execute the application again.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"thedarie"},"content":"    public static final String ERROR_CORRUPT_SAVED_FILE_MESSAGE_1 \u003d \"Oops! It seems that your saved file \"","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"thedarie"},"content":"            + \"is corrupted.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"thedarie"},"content":"    public static final String ERROR_CORRUPT_SAVED_FILE_MESSAGE_2 \u003d \"Would you like to start with a new save \"","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"thedarie"},"content":"            + \"file? (Y/N):\";","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"thedarie"},"content":"    public static final String ERROR_CORRUPT_SAVED_FILE_MESSAGE_3 \u003d \"We\u0027re sorry this happened. \"","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"thedarie"},"content":"            + \"Please refer to the troubleshooting section in the user guide \"","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"thedarie"},"content":"            + \"or contact the developers for help.\";","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"    public static final String ERROR_INVALID_MARKING_INDEX_MESSAGE \u003d \"Bzzt!\\nPlease\"","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"laiisaac"},"content":"            + \" key in a valid task number to mark/unmark your task.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"jltha"},"content":"    public static final String ERROR_INVALID_TIMER_INPUT_MESSAGE \u003d \"Oops! Your timer input \"","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"jltha"},"content":"            + \"does not seem to be correct.\\n\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"jltha"},"content":"            + \"Please select one of the three default modes with\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"jltha"},"content":"            + \"\\t\u0027start \u003cmode_number\u003e\u0027\\n\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"jltha"},"content":"            + \"or choose your own custom timer with\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"jltha"},"content":"            + \"\\t\u0027start /custom \u003ctimer_duration\u003e\u0027\";","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"laiisaac":20,"jltha":42,"yuzhongng":2,"thedarie":13,"BradenTeo":7}},{"path":"src/main/java/seedu/sherpass/constant/TimerConstant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laiisaac"},"content":"package seedu.sherpass.constant;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"public class TimerConstant {","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"    public static final int NO_TIME_LEFT \u003d 0;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"laiisaac"},"content":"    public static final int ONE_MINUTE \u003d 60;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"    public static final int ONE_HOUR \u003d 3600;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"laiisaac"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"laiisaac":7}},{"path":"src/main/java/seedu/sherpass/constant/TimetableConstant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.constant;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"public class TimetableConstant {","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"    public static int TASK_SPACE_FULL_LENGTH \u003d 22;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"    public static int TASK_SPACE_COMPARE_LENGTH \u003d 14;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"    public static int TASK_SPACE_COMPARE_OFFSET_LENGTH \u003d 7;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"    public static int DATE_SPACE_FULL_LENGTH \u003d 18;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"    public static int WHITE_SPACE_FRONT_OFFSET_LENGTH \u003d 2;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"    public static int PARTITION_SPACE_OFFSET_LENGTH \u003d 45;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"    public static int PARTITION_PIPE_LINE_LENGTH \u003d 2;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"    public static int TIMETABLE_SIZE_OFFSET_ONE \u003d 3;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"    public static int TIMETABLE_SIZE_OFFSET_TWO \u003d 4;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"    public static int EMPTY_TIMETABLE_SIZE \u003d 1;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"    public static int DAYS_IN_A_WEEK \u003d 7;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"    public static String BLANK_TIME_PERIOD \u003d \"             \";","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"    public static String BLANK_MARK_STATUS \u003d \" \";","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"    public static int STRING_COMPARE_OFFSET \u003d 4;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"    public static int TASK_DATE_SPACE_COMPARE_OFFSET_LENGTH \u003d 4;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"jltha":19}},{"path":"src/main/java/seedu/sherpass/enums/Frequency.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thedarie"},"content":"package seedu.sherpass.enums;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"thedarie"},"content":"public enum Frequency {","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"thedarie"},"content":"    DAILY,","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"thedarie"},"content":"    WEEKLY,","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"    MONTHLY","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"thedarie":7}},{"path":"src/main/java/seedu/sherpass/exception/InvalidInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.exception;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"thedarie"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"        super(message);","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"thedarie"},"content":"    public InvalidInputException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":4,"thedarie":8}},{"path":"src/main/java/seedu/sherpass/exception/InvalidTimeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laiisaac"},"content":"package seedu.sherpass.exception;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"public class InvalidTimeException extends Exception {","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"laiisaac":4}},{"path":"src/main/java/seedu/sherpass/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.task;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.enums.Frequency;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"thedarie"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.outputDateOnlyFormat;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"thedarie"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.outputWithTimeFormat;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.outputWithoutTimeFormat;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"thedarie"},"content":"import static seedu.sherpass.constant.Message.EMPTY_STRING;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"BradenTeo"},"content":"public class Task {","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"    protected String description;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"    protected int identifier;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"thedarie"},"content":"    protected LocalDateTime byDate;","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"thedarie"},"content":"    protected LocalDateTime doOnStartDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"thedarie"},"content":"    protected LocalDateTime doOnEndDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"thedarie"},"content":"    protected Frequency repeatFrequency;","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"    protected int index;","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"     * Creates a constructor for the parent class of tasks, \u0027Task\u0027.","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"     * Accepts only task description","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"     * @param identifier Identity number of a repeated task.","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"    public Task(int identifier, String description, LocalDateTime byDate,","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"                LocalDateTime doOnStartDateTime, LocalDateTime doOnEndDateTime,","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"                Frequency repeatFrequency, int index) {","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"thedarie"},"content":"        this.identifier \u003d identifier;","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"BradenTeo"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"thedarie"},"content":"        this.doOnStartDateTime \u003d doOnStartDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"thedarie"},"content":"        this.doOnEndDateTime \u003d doOnEndDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"thedarie"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"thedarie"},"content":"        this.repeatFrequency \u003d repeatFrequency;","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"    public int getIndex() {","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"        return index;","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"    public void setIndex(int index) {","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"     * Returns the time range for when the task is taking place.","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"     * Format of time is in 24 hours.","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"     * @return Returns a range of time when the task occurs.","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"    public String getTimePeriod() {","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"        return doOnStartDateTime.toLocalTime().toString()","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"                + \" - \" + doOnEndDateTime.toLocalTime().toString();","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"    public String getDescription() {","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"        return description;","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"jltha"},"content":"        return isDone;","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"jltha"},"content":"     * Returns String version of mark status.","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"jltha"},"content":"     * @return X if task has been marked. White space otherwise.","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"jltha"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"jltha"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"jltha"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"jltha"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"jltha"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"jltha"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"jltha"},"content":"        return isDone;","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"jltha"},"content":"     * Returns task date. Parent class is created","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"jltha"},"content":"     * as a template for child classes to perform its own","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"jltha"},"content":"     * respective functions, i.e. each task date returned is","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"jltha"},"content":"     * different for each task type.","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"jltha"},"content":"     * @return White space.","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"thedarie"},"content":"    public LocalDateTime getByDate() {","lastModifiedDate":"2022-03-21"},{"lineNumber":100,"author":{"gitId":"BradenTeo"},"content":"        return byDate;","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"BradenTeo"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"thedarie"},"content":"    public LocalDateTime getDoOnStartDateTime() {","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"thedarie"},"content":"        return doOnStartDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"jltha"},"content":"     * Returns the by date in String format.","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"jltha"},"content":"     * @return Returns if byDate contains a parsed date.","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"jltha"},"content":"     *         Otherwise, returns a blank string (no whitespace).","lastModifiedDate":"2022-03-20"},{"lineNumber":112,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"thedarie"},"content":"    public String getByDateString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"jltha"},"content":"        if (byDate !\u003d null) {","lastModifiedDate":"2022-03-20"},{"lineNumber":115,"author":{"gitId":"jltha"},"content":"            return byDate.format(outputWithoutTimeFormat);","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":117,"author":{"gitId":"thedarie"},"content":"        return EMPTY_STRING;","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":121,"author":{"gitId":"jltha"},"content":"     * Returns the do on date in String format.","lastModifiedDate":"2022-03-20"},{"lineNumber":122,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":123,"author":{"gitId":"jltha"},"content":"     * @return Returns if doOnDate contains a parsed date.","lastModifiedDate":"2022-03-20"},{"lineNumber":124,"author":{"gitId":"jltha"},"content":"     *         Otherwise, returns a blank string (no whitespace).","lastModifiedDate":"2022-03-20"},{"lineNumber":125,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":126,"author":{"gitId":"jltha"},"content":"    public String getDoOnDateString(boolean isDateOnly) {","lastModifiedDate":"2022-03-26"},{"lineNumber":127,"author":{"gitId":"thedarie"},"content":"        if (doOnStartDateTime !\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"jltha"},"content":"            return (isDateOnly) ? doOnStartDateTime.format(outputDateOnlyFormat)","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"jltha"},"content":"                    : doOnStartDateTime.format(outputWithTimeFormat);","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":131,"author":{"gitId":"jltha"},"content":"        return EMPTY_STRING;","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"jltha"},"content":"     * Returns a string version of the task content.","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"jltha"},"content":"     * Content includes mark status, task type and description.","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"jltha"},"content":"     * For ease of printing the task.","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"jltha"},"content":"     * @return Task content.","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"jltha"},"content":"    public String toString() {","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"thedarie"},"content":"        String result \u003d \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"thedarie"},"content":"        if (this.byDate !\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"thedarie"},"content":"            result +\u003d \" (by: \" + getByDateString() + \")\";","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"BradenTeo"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":147,"author":{"gitId":"thedarie"},"content":"        if (this.doOnStartDateTime !\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"jltha"},"content":"            result +\u003d \" (to do on: \" + getDoOnDateString(false) + \" - \"","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"jltha"},"content":"                    + doOnEndDateTime.toLocalTime().toString() + \")\";","lastModifiedDate":"2022-03-26"},{"lineNumber":150,"author":{"gitId":"BradenTeo"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":151,"author":{"gitId":"thedarie"},"content":"        return result;","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"BradenTeo"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":153,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":154,"author":{"gitId":"BradenTeo"},"content":"    public void setTaskDescription(String taskDescription) {","lastModifiedDate":"2022-03-13"},{"lineNumber":155,"author":{"gitId":"BradenTeo"},"content":"        this.description \u003d taskDescription;","lastModifiedDate":"2022-03-13"},{"lineNumber":156,"author":{"gitId":"BradenTeo"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":157,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":158,"author":{"gitId":"thedarie"},"content":"    public void setByDate(LocalDateTime byDate) {","lastModifiedDate":"2022-03-21"},{"lineNumber":159,"author":{"gitId":"BradenTeo"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2022-03-13"},{"lineNumber":160,"author":{"gitId":"BradenTeo"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":161,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":162,"author":{"gitId":"thedarie"},"content":"    public void setDoOnStartDateTime(LocalDateTime doOnStartDateTime) {","lastModifiedDate":"2022-03-23"},{"lineNumber":163,"author":{"gitId":"thedarie"},"content":"        this.doOnStartDateTime \u003d doOnStartDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":164,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":165,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":166,"author":{"gitId":"thedarie"},"content":"    public void setDoOnEndDateTime(LocalDateTime doOnEndDateTime) {","lastModifiedDate":"2022-03-23"},{"lineNumber":167,"author":{"gitId":"thedarie"},"content":"        this.doOnEndDateTime \u003d doOnEndDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":168,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":169,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":170,"author":{"gitId":"thedarie"},"content":"    public LocalDateTime getDoOnEndDateTime() {","lastModifiedDate":"2022-03-23"},{"lineNumber":171,"author":{"gitId":"thedarie"},"content":"        return doOnEndDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":172,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":173,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":174,"author":{"gitId":"jltha"},"content":"    public int getIdentifier() {","lastModifiedDate":"2022-03-27"},{"lineNumber":175,"author":{"gitId":"thedarie"},"content":"        return identifier;","lastModifiedDate":"2022-03-21"},{"lineNumber":176,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":177,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":178,"author":{"gitId":"thedarie"},"content":"    public void setIdentifier(int identifier) {","lastModifiedDate":"2022-03-21"},{"lineNumber":179,"author":{"gitId":"thedarie"},"content":"        this.identifier \u003d identifier;","lastModifiedDate":"2022-03-21"},{"lineNumber":180,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":181,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":182,"author":{"gitId":"thedarie"},"content":"    public Frequency getRepeatFrequency() {","lastModifiedDate":"2022-03-23"},{"lineNumber":183,"author":{"gitId":"thedarie"},"content":"        return repeatFrequency;","lastModifiedDate":"2022-03-23"},{"lineNumber":184,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":185,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":186,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":187,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":188,"author":{"gitId":"jltha"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-03-28"},{"lineNumber":189,"author":{"gitId":"jltha"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2022-03-28"},{"lineNumber":190,"author":{"gitId":"jltha"},"content":"            return true;","lastModifiedDate":"2022-03-28"},{"lineNumber":191,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":192,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":193,"author":{"gitId":"jltha"},"content":"        if (!(o instanceof Task)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":194,"author":{"gitId":"jltha"},"content":"            return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":195,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":197,"author":{"gitId":"jltha"},"content":"        Task t \u003d (Task) o;","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"jltha"},"content":"        return description.equals(t.getDescription())","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"jltha"},"content":"                \u0026\u0026 doOnStartDateTime.equals(t.getDoOnStartDateTime())","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"jltha"},"content":"                \u0026\u0026 doOnEndDateTime.equals(t.getDoOnEndDateTime())","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"jltha"},"content":"                \u0026\u0026 repeatFrequency.equals(t.getRepeatFrequency())","lastModifiedDate":"2022-03-28"},{"lineNumber":202,"author":{"gitId":"jltha"},"content":"                \u0026\u0026 identifier \u003d\u003d (t.getIdentifier())","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"jltha"},"content":"                \u0026\u0026 byDate.equals(t.getByDate());","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"jltha"},"content":"    public Task(Task task) {","lastModifiedDate":"2022-03-28"},{"lineNumber":207,"author":{"gitId":"jltha"},"content":"        description \u003d task.getDescription();","lastModifiedDate":"2022-03-28"},{"lineNumber":208,"author":{"gitId":"jltha"},"content":"        identifier \u003d task.getIdentifier();","lastModifiedDate":"2022-03-28"},{"lineNumber":209,"author":{"gitId":"jltha"},"content":"        isDone \u003d task.getIsDone();","lastModifiedDate":"2022-03-28"},{"lineNumber":210,"author":{"gitId":"jltha"},"content":"        byDate \u003d task.getByDate();","lastModifiedDate":"2022-03-28"},{"lineNumber":211,"author":{"gitId":"jltha"},"content":"        doOnStartDateTime \u003d task.getDoOnStartDateTime();","lastModifiedDate":"2022-03-28"},{"lineNumber":212,"author":{"gitId":"jltha"},"content":"        doOnEndDateTime \u003d task.getDoOnEndDateTime();","lastModifiedDate":"2022-03-28"},{"lineNumber":213,"author":{"gitId":"jltha"},"content":"        index \u003d task.getIndex();","lastModifiedDate":"2022-03-28"},{"lineNumber":214,"author":{"gitId":"jltha"},"content":"        repeatFrequency \u003d task.getRepeatFrequency();","lastModifiedDate":"2022-03-28"},{"lineNumber":215,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":216,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":144,"thedarie":56,"BradenTeo":16}},{"path":"src/main/java/seedu/sherpass/task/TaskDateComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.task;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"public class TaskDateComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"    public int compare(Task t1, Task t2) {","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"        if (t1.getDoOnStartDateTime().isBefore(t2.getDoOnStartDateTime())) {","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"            return -1;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"        if (t1.getDoOnStartDateTime().isAfter(t2.getDoOnStartDateTime())) {","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"            return 1;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"        return 0;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"jltha":17}},{"path":"src/main/java/seedu/sherpass/task/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.task;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.enums.Frequency;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.util.parser.TaskParser.isValidFreq;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"thedarie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"yuzhongng"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"thedarie"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"thedarie"},"content":"import java.util.Random;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"yuzhongng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.outputDateOnlyFormat;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.EMPTY_STRING;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.ERROR_SCHEDULE_CLASH_MESSAGE;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"public class TaskList {","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"thedarie"},"content":"    private HashSet\u003cInteger\u003e identifierList;","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"     * Creates a constructor for the class TaskList.","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"     * @param savedTasks Representation of an array of tasks.","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"    public TaskList(ArrayList\u003cTask\u003e savedTasks) {","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"        tasks \u003d savedTasks;","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"thedarie"},"content":"        identifierList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"thedarie"},"content":"        refreshIdentifier();","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"thedarie"},"content":"    public TaskList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"thedarie"},"content":"        identifierList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"     * Returns the array of tasks in the class TaskList.","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"     * @return the array of tasks.","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"        return tasks;","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"     * Returns the incremented date according to the frequency.","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"     * @param currentDate The current date to be incremented","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"     * @param frequency   The frequency of recurrence.","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"     * @return The incremented date according to the frequency","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"    private static LocalDateTime incrementDate(LocalDateTime currentDate, Frequency frequency) {","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"        if (frequency \u003d\u003d Frequency.DAILY) {","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"            return currentDate.plusDays(1);","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"        } else if (frequency \u003d\u003d Frequency.WEEKLY) {","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"            return currentDate.plusWeeks(1);","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"        return currentDate.plusMonths(1);","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"jltha"},"content":"     * Returns the last recurrence of a recurring task.","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"jltha"},"content":"     * For tasks recurring daily, the last date is 1 month after the first occurrence.","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"jltha"},"content":"     * For tasks recurring weekly, the last date is 2 month after the first occurrence.","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"jltha"},"content":"     * For tasks recurring monthly, the last date is 1 year after the first occurrence.","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"jltha"},"content":"     * @param startDate The date of the first occurrence","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"jltha"},"content":"     * @param frequency The frequency of recurrence","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"jltha"},"content":"     * @return The date of the last recurrence for a recurring task.","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"jltha"},"content":"    private static LocalDateTime getEndDateForRecurrence(LocalDateTime startDate, Frequency frequency) {","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"jltha"},"content":"        if (frequency \u003d\u003d Frequency.DAILY) {","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"jltha"},"content":"            return startDate.plusMonths(1);","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"jltha"},"content":"        } else if (frequency \u003d\u003d Frequency.WEEKLY) {","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"jltha"},"content":"            return startDate.plusMonths(2);","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"jltha"},"content":"        return startDate.plusYears(1);","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"jltha"},"content":"     * Returns the next occurrence of a recurring task.","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"jltha"},"content":"     * @param currentTask The i-th task","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"jltha"},"content":"     * @return The i+1 task","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"jltha"},"content":"    private static Task prepareNextTask(Task currentTask) {","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"jltha"},"content":"        LocalDateTime newStartDate \u003d incrementDate(currentTask.getDoOnStartDateTime(),","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"jltha"},"content":"                currentTask.getRepeatFrequency());","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"jltha"},"content":"        LocalDateTime newEndDate \u003d incrementDate(currentTask.getDoOnEndDateTime(),","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"jltha"},"content":"                currentTask.getRepeatFrequency());","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"jltha"},"content":"        return new Task(currentTask.getIdentifier(), currentTask.getDescription(), null,","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"jltha"},"content":"                newStartDate, newEndDate, currentTask.getRepeatFrequency(), 0);","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"jltha"},"content":"    private boolean isOnSameDay(Task currentTask, LocalDateTime doOnStartDateTime) {","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"jltha"},"content":"        return currentTask.getDoOnDateString(true)","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"jltha"},"content":"                .equals(doOnStartDateTime.format(outputDateOnlyFormat));","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"jltha"},"content":"    private boolean hasTimeClash(Task currentTask, LocalDateTime doOnStartDateTime,","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"jltha"},"content":"                                 LocalDateTime doOnEndDateTime) {","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"jltha"},"content":"        return (doOnStartDateTime.isEqual(currentTask.getDoOnStartDateTime())","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"jltha"},"content":"                || (doOnEndDateTime.isAfter(currentTask.getDoOnStartDateTime())","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"jltha"},"content":"                \u0026\u0026 doOnStartDateTime.isBefore(currentTask.getDoOnStartDateTime()))","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"jltha"},"content":"                || (doOnStartDateTime.isBefore(currentTask.getDoOnEndDateTime())","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"jltha"},"content":"                \u0026\u0026 doOnEndDateTime.isAfter(currentTask.getDoOnEndDateTime()))","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"jltha"},"content":"                || (doOnStartDateTime.isAfter(currentTask.getDoOnStartDateTime())","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"jltha"},"content":"                \u0026\u0026 doOnEndDateTime.isBefore(currentTask.getDoOnEndDateTime())))","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"jltha"},"content":"                || (currentTask.getDoOnStartDateTime().isAfter(doOnStartDateTime)","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"jltha"},"content":"                \u0026\u0026 currentTask.getDoOnEndDateTime().isBefore(doOnEndDateTime));","lastModifiedDate":"2022-03-28"},{"lineNumber":118,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"jltha"},"content":"    private boolean hasDateTimeClash(Task taskToEdit, int identifier,","lastModifiedDate":"2022-03-28"},{"lineNumber":121,"author":{"gitId":"jltha"},"content":"                                     LocalDateTime doOnStartDateTime,","lastModifiedDate":"2022-03-28"},{"lineNumber":122,"author":{"gitId":"jltha"},"content":"                                     LocalDateTime doOnEndDateTime, boolean isEdit) {","lastModifiedDate":"2022-03-28"},{"lineNumber":123,"author":{"gitId":"jltha"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"jltha"},"content":"            if (isEdit \u0026\u0026 (task.getIdentifier() !\u003d identifier)","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"jltha"},"content":"                    \u0026\u0026 isOnSameDay(task, doOnStartDateTime)","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"jltha"},"content":"                    \u0026\u0026 hasTimeClash(task, doOnStartDateTime, doOnEndDateTime)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"jltha"},"content":"                return true;","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"jltha"},"content":"            if (!isEdit \u0026\u0026 !task.equals(taskToEdit)","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"jltha"},"content":"                    \u0026\u0026 isOnSameDay(task, doOnStartDateTime)","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"jltha"},"content":"                    \u0026\u0026 hasTimeClash(task, doOnStartDateTime, doOnEndDateTime)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":132,"author":{"gitId":"jltha"},"content":"                return true;","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"jltha"},"content":"        return false;","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"jltha"},"content":"    private void updateIndex() {","lastModifiedDate":"2022-03-26"},{"lineNumber":140,"author":{"gitId":"jltha"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"jltha"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"jltha"},"content":"            task.setIndex(i);","lastModifiedDate":"2022-03-26"},{"lineNumber":143,"author":{"gitId":"jltha"},"content":"            i++;","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":145,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":146,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":147,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"jltha"},"content":"     * Adds a new task to the current array of tasks.","lastModifiedDate":"2022-03-06"},{"lineNumber":149,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"thedarie"},"content":"     * @param newTask  The new task to be added to the array.","lastModifiedDate":"2022-03-23"},{"lineNumber":151,"author":{"gitId":"jltha"},"content":"     * @param isRepeat Checks if task repeats.","lastModifiedDate":"2022-03-26"},{"lineNumber":152,"author":{"gitId":"jltha"},"content":"     * @param ui       User Interface.","lastModifiedDate":"2022-03-26"},{"lineNumber":153,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":154,"author":{"gitId":"jltha"},"content":"    public void addTask(Task newTask, boolean isRepeat, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"jltha"},"content":"        String repeatKeyWord \u003d EMPTY_STRING;","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"jltha"},"content":"        if (hasDateTimeClash(newTask, -1, newTask.getDoOnStartDateTime(),","lastModifiedDate":"2022-03-28"},{"lineNumber":157,"author":{"gitId":"jltha"},"content":"                newTask.getDoOnEndDateTime(), false)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":158,"author":{"gitId":"jltha"},"content":"            ui.showToUser(ERROR_SCHEDULE_CLASH_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":159,"author":{"gitId":"jltha"},"content":"            return;","lastModifiedDate":"2022-03-26"},{"lineNumber":160,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":161,"author":{"gitId":"jltha"},"content":"        if (!isRepeat) {","lastModifiedDate":"2022-03-26"},{"lineNumber":162,"author":{"gitId":"jltha"},"content":"            tasks.add(newTask);","lastModifiedDate":"2022-03-06"},{"lineNumber":163,"author":{"gitId":"jltha"},"content":"        } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":164,"author":{"gitId":"jltha"},"content":"            repeatKeyWord \u003d \"repeated\";","lastModifiedDate":"2022-03-26"},{"lineNumber":165,"author":{"gitId":"thedarie"},"content":"            identifierList.add(newTask.getIdentifier());","lastModifiedDate":"2022-03-23"},{"lineNumber":166,"author":{"gitId":"jltha"},"content":"            LocalDateTime lastRecurrenceDate \u003d getEndDateForRecurrence(newTask.getDoOnStartDateTime(),","lastModifiedDate":"2022-03-26"},{"lineNumber":167,"author":{"gitId":"jltha"},"content":"                    newTask.getRepeatFrequency());","lastModifiedDate":"2022-03-26"},{"lineNumber":168,"author":{"gitId":"jltha"},"content":"            ArrayList\u003cTask\u003e taskListToAdd \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":169,"author":{"gitId":"jltha"},"content":"            Task tempTask \u003d newTask;","lastModifiedDate":"2022-03-28"},{"lineNumber":170,"author":{"gitId":"jltha"},"content":"            do {","lastModifiedDate":"2022-03-26"},{"lineNumber":171,"author":{"gitId":"jltha"},"content":"                if (hasDateTimeClash(newTask, -1, tempTask.getDoOnStartDateTime(),","lastModifiedDate":"2022-03-28"},{"lineNumber":172,"author":{"gitId":"jltha"},"content":"                        tempTask.getDoOnEndDateTime(), false)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":173,"author":{"gitId":"jltha"},"content":"                    ui.showToUser(ERROR_SCHEDULE_CLASH_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":174,"author":{"gitId":"jltha"},"content":"                    return;","lastModifiedDate":"2022-03-26"},{"lineNumber":175,"author":{"gitId":"jltha"},"content":"                }","lastModifiedDate":"2022-03-26"},{"lineNumber":176,"author":{"gitId":"jltha"},"content":"                taskListToAdd.add(tempTask);","lastModifiedDate":"2022-03-28"},{"lineNumber":177,"author":{"gitId":"jltha"},"content":"                tempTask \u003d prepareNextTask(tempTask);","lastModifiedDate":"2022-03-28"},{"lineNumber":178,"author":{"gitId":"jltha"},"content":"            } while (tempTask.getDoOnStartDateTime().isBefore(lastRecurrenceDate));","lastModifiedDate":"2022-03-28"},{"lineNumber":179,"author":{"gitId":"jltha"},"content":"            tasks.addAll(taskListToAdd);","lastModifiedDate":"2022-03-26"},{"lineNumber":180,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":181,"author":{"gitId":"jltha"},"content":"        tasks.sort(new TaskDateComparator());","lastModifiedDate":"2022-03-26"},{"lineNumber":182,"author":{"gitId":"jltha"},"content":"        updateIndex();","lastModifiedDate":"2022-03-26"},{"lineNumber":183,"author":{"gitId":"jltha"},"content":"        ui.showToUser(\"Got it! I\u0027ve added this \" + repeatKeyWord + \" task:\\n   \"","lastModifiedDate":"2022-03-26"},{"lineNumber":184,"author":{"gitId":"jltha"},"content":"                + newTask + \"\\n\"","lastModifiedDate":"2022-03-26"},{"lineNumber":185,"author":{"gitId":"jltha"},"content":"                + \"Now you have \" + tasks.size() + \" task(s) in your schedule!\");","lastModifiedDate":"2022-03-26"},{"lineNumber":186,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":187,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":188,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":189,"author":{"gitId":"jltha"},"content":"    private boolean editSingleTaskContent(Task taskToEdit, String taskDescription,","lastModifiedDate":"2022-03-28"},{"lineNumber":190,"author":{"gitId":"jltha"},"content":"                                       LocalDateTime currentDoOnStartDateTime,","lastModifiedDate":"2022-03-28"},{"lineNumber":191,"author":{"gitId":"jltha"},"content":"                                       LocalDateTime currentDoOnEndDateTime,","lastModifiedDate":"2022-03-28"},{"lineNumber":192,"author":{"gitId":"jltha"},"content":"                                       LocalDateTime byDate, Ui ui) {","lastModifiedDate":"2022-03-28"},{"lineNumber":193,"author":{"gitId":"jltha"},"content":"        if (hasDateTimeClash(taskToEdit, taskToEdit.getIdentifier(),","lastModifiedDate":"2022-03-28"},{"lineNumber":194,"author":{"gitId":"jltha"},"content":"                currentDoOnStartDateTime, currentDoOnEndDateTime, true)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":195,"author":{"gitId":"jltha"},"content":"            ui.showToUser(ERROR_SCHEDULE_CLASH_MESSAGE);","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"jltha"},"content":"            return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":197,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"jltha"},"content":"        if (!taskDescription.isBlank()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"jltha"},"content":"            taskToEdit.setTaskDescription(taskDescription);","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"jltha"},"content":"        if (byDate !\u003d null) {","lastModifiedDate":"2022-03-28"},{"lineNumber":202,"author":{"gitId":"jltha"},"content":"            taskToEdit.setByDate(byDate);","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"jltha"},"content":"        taskToEdit.setDoOnStartDateTime(currentDoOnStartDateTime);","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"jltha"},"content":"        taskToEdit.setDoOnEndDateTime(currentDoOnEndDateTime);","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"jltha"},"content":"        return true;","lastModifiedDate":"2022-03-28"},{"lineNumber":207,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":208,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":209,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":210,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":211,"author":{"gitId":"jltha"},"content":"    private void editRepeatedTasks(Task taskToEdit, String taskDescription,","lastModifiedDate":"2022-03-28"},{"lineNumber":212,"author":{"gitId":"jltha"},"content":"                                   LocalDateTime currentDoOnDateStartTime,","lastModifiedDate":"2022-03-28"},{"lineNumber":213,"author":{"gitId":"jltha"},"content":"                                   LocalDateTime currentDoOnDateEndTime,","lastModifiedDate":"2022-03-28"},{"lineNumber":214,"author":{"gitId":"jltha"},"content":"                                   Ui ui) {","lastModifiedDate":"2022-03-28"},{"lineNumber":215,"author":{"gitId":"jltha"},"content":"        Task tempTask \u003d new Task(taskToEdit);","lastModifiedDate":"2022-03-28"},{"lineNumber":216,"author":{"gitId":"jltha"},"content":"        LocalDateTime tempDoOnDateStartTime \u003d currentDoOnDateStartTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":217,"author":{"gitId":"jltha"},"content":"        LocalDateTime tempDoOnDateEndTime \u003d currentDoOnDateEndTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":218,"author":{"gitId":"jltha"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-03-28"},{"lineNumber":219,"author":{"gitId":"jltha"},"content":"            if (task.getIdentifier() \u003d\u003d tempTask.getIdentifier()","lastModifiedDate":"2022-03-28"},{"lineNumber":220,"author":{"gitId":"jltha"},"content":"                    \u0026\u0026 !editSingleTaskContent(tempTask, taskDescription,","lastModifiedDate":"2022-03-28"},{"lineNumber":221,"author":{"gitId":"jltha"},"content":"                    tempDoOnDateStartTime, tempDoOnDateEndTime, null, ui)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":222,"author":{"gitId":"jltha"},"content":"                return;","lastModifiedDate":"2022-03-28"},{"lineNumber":223,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":224,"author":{"gitId":"jltha"},"content":"            tempDoOnDateStartTime \u003d incrementDate(tempDoOnDateStartTime, tempTask.getRepeatFrequency());","lastModifiedDate":"2022-03-28"},{"lineNumber":225,"author":{"gitId":"jltha"},"content":"            tempDoOnDateEndTime \u003d incrementDate(tempDoOnDateEndTime, tempTask.getRepeatFrequency());","lastModifiedDate":"2022-03-28"},{"lineNumber":226,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":227,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":228,"author":{"gitId":"jltha"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-03-28"},{"lineNumber":229,"author":{"gitId":"jltha"},"content":"            if (task.getIdentifier() \u003d\u003d taskToEdit.getIdentifier()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":230,"author":{"gitId":"jltha"},"content":"                editSingleTaskContent(task, taskDescription,","lastModifiedDate":"2022-03-28"},{"lineNumber":231,"author":{"gitId":"jltha"},"content":"                        currentDoOnDateStartTime, currentDoOnDateEndTime, null, ui);","lastModifiedDate":"2022-03-28"},{"lineNumber":232,"author":{"gitId":"jltha"},"content":"                currentDoOnDateStartTime \u003d incrementDate(currentDoOnDateStartTime, taskToEdit.getRepeatFrequency());","lastModifiedDate":"2022-03-28"},{"lineNumber":233,"author":{"gitId":"jltha"},"content":"                currentDoOnDateEndTime \u003d incrementDate(currentDoOnDateEndTime, taskToEdit.getRepeatFrequency());","lastModifiedDate":"2022-03-28"},{"lineNumber":234,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":235,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":236,"author":{"gitId":"jltha"},"content":"        ui.showToUser(\"Okay! I\u0027ve edited this repeated task as such:\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":237,"author":{"gitId":"jltha"},"content":"                + \"\\t\" + taskToEdit);","lastModifiedDate":"2022-03-28"},{"lineNumber":238,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":239,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":240,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":241,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":242,"author":{"gitId":"jltha"},"content":"     * Edit the task content.","lastModifiedDate":"2022-03-28"},{"lineNumber":243,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":244,"author":{"gitId":"jltha"},"content":"     * @param ui                       User interface.","lastModifiedDate":"2022-03-28"},{"lineNumber":245,"author":{"gitId":"jltha"},"content":"     * @param taskToEdit               The task being edited.","lastModifiedDate":"2022-03-28"},{"lineNumber":246,"author":{"gitId":"jltha"},"content":"     * @param taskDescription          The new task description for replacement.","lastModifiedDate":"2022-03-28"},{"lineNumber":247,"author":{"gitId":"jltha"},"content":"     * @param currentDoOnStartDateTime New do on date and start time to replace.","lastModifiedDate":"2022-03-28"},{"lineNumber":248,"author":{"gitId":"jltha"},"content":"     * @param currentDoOnEndDateTime   New do on date and end time to replace.","lastModifiedDate":"2022-03-28"},{"lineNumber":249,"author":{"gitId":"jltha"},"content":"     * @param byDate                   New by date to replace.","lastModifiedDate":"2022-03-28"},{"lineNumber":250,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":251,"author":{"gitId":"jltha"},"content":"    public void editTask(Ui ui, Task taskToEdit, String taskDescription,","lastModifiedDate":"2022-03-28"},{"lineNumber":252,"author":{"gitId":"jltha"},"content":"                         LocalDateTime currentDoOnStartDateTime,","lastModifiedDate":"2022-03-28"},{"lineNumber":253,"author":{"gitId":"jltha"},"content":"                         LocalDateTime currentDoOnEndDateTime,","lastModifiedDate":"2022-03-29"},{"lineNumber":254,"author":{"gitId":"jltha"},"content":"                         LocalDateTime byDate, boolean isRepeat) {","lastModifiedDate":"2022-03-29"},{"lineNumber":255,"author":{"gitId":"jltha"},"content":"        boolean hasEdit;","lastModifiedDate":"2022-03-28"},{"lineNumber":256,"author":{"gitId":"laiisaac"},"content":"        if (isRepeat \u0026\u0026 isValidFreq(taskToEdit.getRepeatFrequency())) {","lastModifiedDate":"2022-03-30"},{"lineNumber":257,"author":{"gitId":"jltha"},"content":"            assert (byDate \u003d\u003d null);","lastModifiedDate":"2022-03-28"},{"lineNumber":258,"author":{"gitId":"jltha"},"content":"            editRepeatedTasks(taskToEdit, taskDescription, currentDoOnStartDateTime, currentDoOnEndDateTime, ui);","lastModifiedDate":"2022-03-28"},{"lineNumber":259,"author":{"gitId":"jltha"},"content":"            hasEdit \u003d true;","lastModifiedDate":"2022-03-28"},{"lineNumber":260,"author":{"gitId":"jltha"},"content":"        } else if (editSingleTaskContent(taskToEdit, taskDescription,","lastModifiedDate":"2022-03-28"},{"lineNumber":261,"author":{"gitId":"jltha"},"content":"                currentDoOnStartDateTime, currentDoOnEndDateTime, byDate, ui)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":262,"author":{"gitId":"jltha"},"content":"            hasEdit \u003d true;","lastModifiedDate":"2022-03-28"},{"lineNumber":263,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"Okay! I\u0027ve edited this task as such:\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":264,"author":{"gitId":"jltha"},"content":"                    + \"\\t\" + taskToEdit);","lastModifiedDate":"2022-03-28"},{"lineNumber":265,"author":{"gitId":"jltha"},"content":"        } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":266,"author":{"gitId":"jltha"},"content":"            hasEdit \u003d false;","lastModifiedDate":"2022-03-28"},{"lineNumber":267,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":268,"author":{"gitId":"jltha"},"content":"        if (hasEdit) {","lastModifiedDate":"2022-03-28"},{"lineNumber":269,"author":{"gitId":"jltha"},"content":"            tasks.sort(new TaskDateComparator());","lastModifiedDate":"2022-03-28"},{"lineNumber":270,"author":{"gitId":"jltha"},"content":"            updateIndex();","lastModifiedDate":"2022-03-28"},{"lineNumber":271,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":272,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":273,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":274,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":275,"author":{"gitId":"jltha"},"content":"     * Prints all available tasks in the task list.","lastModifiedDate":"2022-03-06"},{"lineNumber":276,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":277,"author":{"gitId":"jltha"},"content":"     * @param ui Ui class for printing of messages.","lastModifiedDate":"2022-03-06"},{"lineNumber":278,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":279,"author":{"gitId":"jltha"},"content":"    public void printAllTasks(Ui ui) {","lastModifiedDate":"2022-03-06"},{"lineNumber":280,"author":{"gitId":"jltha"},"content":"        int printIndex \u003d 1;","lastModifiedDate":"2022-03-06"},{"lineNumber":281,"author":{"gitId":"jltha"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-03-06"},{"lineNumber":282,"author":{"gitId":"jltha"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-03-06"},{"lineNumber":283,"author":{"gitId":"jltha"},"content":"            ui.showToUser(printIndex + \". \" + task);","lastModifiedDate":"2022-03-26"},{"lineNumber":284,"author":{"gitId":"jltha"},"content":"            printIndex++;","lastModifiedDate":"2022-03-06"},{"lineNumber":285,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":286,"author":{"gitId":"jltha"},"content":"        ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":287,"author":{"gitId":"jltha"},"content":"        ui.showToUser(\"You have \" + (printIndex - 1) + \" task(s) in your list.\");","lastModifiedDate":"2022-03-26"},{"lineNumber":288,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":289,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":290,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":291,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":292,"author":{"gitId":"jltha"},"content":"     * Returns a boolean value denoting the task status, i.e.","lastModifiedDate":"2022-03-06"},{"lineNumber":293,"author":{"gitId":"jltha"},"content":"     * whether the task has been marked or not.","lastModifiedDate":"2022-03-06"},{"lineNumber":294,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":295,"author":{"gitId":"jltha"},"content":"     * @param markIndex Index of a task to check for its mark status.","lastModifiedDate":"2022-03-06"},{"lineNumber":296,"author":{"gitId":"jltha"},"content":"     * @return Returns true if task has been marked. False otherwise.","lastModifiedDate":"2022-03-06"},{"lineNumber":297,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":298,"author":{"gitId":"jltha"},"content":"    public boolean isTaskDone(int markIndex) {","lastModifiedDate":"2022-03-06"},{"lineNumber":299,"author":{"gitId":"jltha"},"content":"        return tasks.get(markIndex).isDone();","lastModifiedDate":"2022-03-06"},{"lineNumber":300,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":301,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":302,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":303,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":304,"author":{"gitId":"jltha"},"content":"     * Marks a task given the index of the task.","lastModifiedDate":"2022-03-06"},{"lineNumber":305,"author":{"gitId":"jltha"},"content":"     * Index corresponds to its placement within the task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":306,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":307,"author":{"gitId":"jltha"},"content":"     * @param markIndex Index of the task to mark as done.","lastModifiedDate":"2022-03-06"},{"lineNumber":308,"author":{"gitId":"jltha"},"content":"     * @param ui        User Interface.","lastModifiedDate":"2022-03-26"},{"lineNumber":309,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":310,"author":{"gitId":"jltha"},"content":"    public void markTask(int markIndex, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":311,"author":{"gitId":"jltha"},"content":"        tasks.get(markIndex).markAsDone();","lastModifiedDate":"2022-03-06"},{"lineNumber":312,"author":{"gitId":"jltha"},"content":"        ui.showToUser(\"Nice! I\u0027ve marked this task as done:\\n  \" + tasks.get(markIndex));","lastModifiedDate":"2022-03-26"},{"lineNumber":313,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":314,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":315,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":316,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":317,"author":{"gitId":"jltha"},"content":"     * Unmarks a task given the index of the task.","lastModifiedDate":"2022-03-06"},{"lineNumber":318,"author":{"gitId":"jltha"},"content":"     * Index corresponds to its placement within the task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":319,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":320,"author":{"gitId":"jltha"},"content":"     * @param markIndex Index of the task to mark as undone.","lastModifiedDate":"2022-03-06"},{"lineNumber":321,"author":{"gitId":"jltha"},"content":"     * @param ui        User Interface.","lastModifiedDate":"2022-03-26"},{"lineNumber":322,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":323,"author":{"gitId":"jltha"},"content":"    public void unmarkTask(int markIndex, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":324,"author":{"gitId":"jltha"},"content":"        tasks.get(markIndex).markAsUndone();","lastModifiedDate":"2022-03-06"},{"lineNumber":325,"author":{"gitId":"jltha"},"content":"        ui.showToUser(\"Ok, I\u0027ve marked this task as\" + \" not done yet:\\n  \" + tasks.get(markIndex));","lastModifiedDate":"2022-03-26"},{"lineNumber":326,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":327,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":328,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":329,"author":{"gitId":"jltha"},"content":"     * Returns a boolean value denoting the existence of a task","lastModifiedDate":"2022-03-06"},{"lineNumber":330,"author":{"gitId":"jltha"},"content":"     * within the task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":331,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":332,"author":{"gitId":"thedarie"},"content":"     * @param index Index of a task. Corresponds to its placement in task array.","lastModifiedDate":"2022-03-24"},{"lineNumber":333,"author":{"gitId":"jltha"},"content":"     * @return Returns true if task exists in task array. False otherwise.","lastModifiedDate":"2022-03-06"},{"lineNumber":334,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":335,"author":{"gitId":"jltha"},"content":"    public boolean isTaskNotExist(int index) {","lastModifiedDate":"2022-03-27"},{"lineNumber":336,"author":{"gitId":"jltha"},"content":"        return index \u003c 0 || index \u003e\u003d tasks.size();","lastModifiedDate":"2022-03-27"},{"lineNumber":337,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":338,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":339,"author":{"gitId":"thedarie"},"content":"    public int getSize() {","lastModifiedDate":"2022-03-25"},{"lineNumber":340,"author":{"gitId":"thedarie"},"content":"        return tasks.size();","lastModifiedDate":"2022-03-25"},{"lineNumber":341,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":342,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":343,"author":{"gitId":"thedarie"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-03-25"},{"lineNumber":344,"author":{"gitId":"thedarie"},"content":"        return tasks.get(index);","lastModifiedDate":"2022-03-25"},{"lineNumber":345,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":346,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":347,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":348,"author":{"gitId":"jltha"},"content":"     * Deletes a task given its index. Index corresponds to its placement","lastModifiedDate":"2022-03-06"},{"lineNumber":349,"author":{"gitId":"jltha"},"content":"     * in task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":350,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":351,"author":{"gitId":"jltha"},"content":"     * @param deleteIndex Index of a task to search for.","lastModifiedDate":"2022-03-06"},{"lineNumber":352,"author":{"gitId":"jltha"},"content":"     * @param ui          User Interface","lastModifiedDate":"2022-03-27"},{"lineNumber":353,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":354,"author":{"gitId":"jltha"},"content":"    public void removeTask(int deleteIndex, Ui ui, boolean isRepeat) {","lastModifiedDate":"2022-03-29"},{"lineNumber":355,"author":{"gitId":"jltha"},"content":"        Task taskToBeRemoved \u003d tasks.get(deleteIndex);","lastModifiedDate":"2022-03-06"},{"lineNumber":356,"author":{"gitId":"jltha"},"content":"        String repeatKeyWord \u003d EMPTY_STRING;","lastModifiedDate":"2022-03-29"},{"lineNumber":357,"author":{"gitId":"jltha"},"content":"        if (!isRepeat) {","lastModifiedDate":"2022-03-29"},{"lineNumber":358,"author":{"gitId":"jltha"},"content":"            tasks.remove(deleteIndex);","lastModifiedDate":"2022-03-06"},{"lineNumber":359,"author":{"gitId":"laiisaac"},"content":"        } else if (isValidFreq(taskToBeRemoved.getRepeatFrequency())) {","lastModifiedDate":"2022-03-30"},{"lineNumber":360,"author":{"gitId":"jltha"},"content":"            repeatKeyWord \u003d \"repeated\";","lastModifiedDate":"2022-03-27"},{"lineNumber":361,"author":{"gitId":"jltha"},"content":"            int identifier \u003d taskToBeRemoved.getIdentifier();","lastModifiedDate":"2022-03-27"},{"lineNumber":362,"author":{"gitId":"jltha"},"content":"            tasks.removeIf(task -\u003e task.getIdentifier() \u003d\u003d identifier);","lastModifiedDate":"2022-03-27"},{"lineNumber":363,"author":{"gitId":"laiisaac"},"content":"        } else {","lastModifiedDate":"2022-03-30"},{"lineNumber":364,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"The task is not a recurring task!\");","lastModifiedDate":"2022-03-30"},{"lineNumber":365,"author":{"gitId":"laiisaac"},"content":"            return;","lastModifiedDate":"2022-03-30"},{"lineNumber":366,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":367,"author":{"gitId":"jltha"},"content":"        updateIndex();","lastModifiedDate":"2022-03-27"},{"lineNumber":368,"author":{"gitId":"jltha"},"content":"        ui.showToUser(\"Okay. I\u0027ve removed this \" + repeatKeyWord + \" task:\\n  \"","lastModifiedDate":"2022-03-27"},{"lineNumber":369,"author":{"gitId":"jltha"},"content":"                + taskToBeRemoved + \"\\nNow you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":370,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":371,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":372,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":373,"author":{"gitId":"jltha"},"content":"     * Deletes all tasks saved within the task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":374,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":375,"author":{"gitId":"jltha"},"content":"     * @param ui Ui for printing the completion of the deletion.","lastModifiedDate":"2022-03-06"},{"lineNumber":376,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":377,"author":{"gitId":"jltha"},"content":"    public void deleteAllTasks(Ui ui) {","lastModifiedDate":"2022-03-06"},{"lineNumber":378,"author":{"gitId":"jltha"},"content":"        while (tasks.size() \u003e 0) {","lastModifiedDate":"2022-03-06"},{"lineNumber":379,"author":{"gitId":"jltha"},"content":"            tasks.remove(0);","lastModifiedDate":"2022-03-06"},{"lineNumber":380,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":381,"author":{"gitId":"jltha"},"content":"        ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":382,"author":{"gitId":"jltha"},"content":"        ui.showToUser(\"Done! Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":383,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":384,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":385,"author":{"gitId":"thedarie"},"content":"    private void refreshIdentifier() {","lastModifiedDate":"2022-03-23"},{"lineNumber":386,"author":{"gitId":"thedarie"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2022-03-23"},{"lineNumber":387,"author":{"gitId":"thedarie"},"content":"            identifierList.add(t.getIdentifier());","lastModifiedDate":"2022-03-23"},{"lineNumber":388,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":389,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":390,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":391,"author":{"gitId":"thedarie"},"content":"    public int generateIdentifier() {","lastModifiedDate":"2022-03-23"},{"lineNumber":392,"author":{"gitId":"thedarie"},"content":"        Random generator \u003d new Random();","lastModifiedDate":"2022-03-23"},{"lineNumber":393,"author":{"gitId":"thedarie"},"content":"        int candidate;","lastModifiedDate":"2022-03-23"},{"lineNumber":394,"author":{"gitId":"thedarie"},"content":"        do {","lastModifiedDate":"2022-03-23"},{"lineNumber":395,"author":{"gitId":"thedarie"},"content":"            candidate \u003d generator.nextInt(65536);","lastModifiedDate":"2022-03-23"},{"lineNumber":396,"author":{"gitId":"thedarie"},"content":"        } while (identifierList.contains(candidate));","lastModifiedDate":"2022-03-23"},{"lineNumber":397,"author":{"gitId":"thedarie"},"content":"        return candidate;","lastModifiedDate":"2022-03-23"},{"lineNumber":398,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":399,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":400,"author":{"gitId":"yuzhongng"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":401,"author":{"gitId":"yuzhongng"},"content":"     * Return a filtered ArrayList of task according to the date specified.","lastModifiedDate":"2022-03-22"},{"lineNumber":402,"author":{"gitId":"yuzhongng"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":403,"author":{"gitId":"yuzhongng"},"content":"     * @param dateInput The specific date.","lastModifiedDate":"2022-03-22"},{"lineNumber":404,"author":{"gitId":"yuzhongng"},"content":"     * @return The filtered ArrayList.","lastModifiedDate":"2022-03-22"},{"lineNumber":405,"author":{"gitId":"yuzhongng"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":406,"author":{"gitId":"jltha"},"content":"    public ArrayList\u003cTask\u003e getFilteredTasksByDate(LocalDate dateInput) {","lastModifiedDate":"2022-03-20"},{"lineNumber":407,"author":{"gitId":"yuzhongng"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":408,"author":{"gitId":"yuzhongng"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-03-22"},{"lineNumber":409,"author":{"gitId":"thedarie"},"content":"            if (hasDoOnDate(task) \u0026\u0026 task.getDoOnStartDateTime().toLocalDate().isEqual(dateInput)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":410,"author":{"gitId":"yuzhongng"},"content":"                filteredTasks.add(task);","lastModifiedDate":"2022-03-22"},{"lineNumber":411,"author":{"gitId":"yuzhongng"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":412,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":413,"author":{"gitId":"yuzhongng"},"content":"        return filteredTasks;","lastModifiedDate":"2022-03-22"},{"lineNumber":414,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":415,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":416,"author":{"gitId":"jltha"},"content":"    private boolean hasDoOnDate(Task task) {","lastModifiedDate":"2022-03-24"},{"lineNumber":417,"author":{"gitId":"thedarie"},"content":"        return task.getDoOnStartDateTime() !\u003d null;","lastModifiedDate":"2022-03-25"},{"lineNumber":418,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":419,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":420,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":421,"author":{"gitId":"jltha"},"content":"     * Prints tasks that are yet to be completed, i.e. marked as done.","lastModifiedDate":"2022-03-20"},{"lineNumber":422,"author":{"gitId":"jltha"},"content":"     * Printed tasks applies to non-recurring tasks.","lastModifiedDate":"2022-03-20"},{"lineNumber":423,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":424,"author":{"gitId":"jltha"},"content":"     * @param ui User interface","lastModifiedDate":"2022-03-24"},{"lineNumber":425,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":426,"author":{"gitId":"jltha"},"content":"    public void printPendingTasks(Ui ui) {","lastModifiedDate":"2022-03-20"},{"lineNumber":427,"author":{"gitId":"jltha"},"content":"        int printIndex \u003d 1;","lastModifiedDate":"2022-03-23"},{"lineNumber":428,"author":{"gitId":"jltha"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-03-20"},{"lineNumber":429,"author":{"gitId":"thedarie"},"content":"            if (!task.isDone()) {","lastModifiedDate":"2022-03-21"},{"lineNumber":430,"author":{"gitId":"jltha"},"content":"                ui.showToUser(printIndex + \". \" + task);","lastModifiedDate":"2022-03-24"},{"lineNumber":431,"author":{"gitId":"jltha"},"content":"                printIndex++;","lastModifiedDate":"2022-03-23"},{"lineNumber":432,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":433,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":434,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":435,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":436,"author":{"gitId":"jltha"},"content":"    public int getPendingTasksCount() {","lastModifiedDate":"2022-03-24"},{"lineNumber":437,"author":{"gitId":"jltha"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-03-24"},{"lineNumber":438,"author":{"gitId":"jltha"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-03-24"},{"lineNumber":439,"author":{"gitId":"jltha"},"content":"            if (!task.isDone()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":440,"author":{"gitId":"jltha"},"content":"                count++;","lastModifiedDate":"2022-03-24"},{"lineNumber":441,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":442,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":443,"author":{"gitId":"jltha"},"content":"        return count;","lastModifiedDate":"2022-03-24"},{"lineNumber":444,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":445,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":446,"author":{"gitId":"yuzhongng"},"content":"    public ArrayList\u003cTask\u003e getFilteredTasksByMonth(LocalDate firstDayOfMonth) {","lastModifiedDate":"2022-03-26"},{"lineNumber":447,"author":{"gitId":"yuzhongng"},"content":"        LocalDate firstDayOfNextMonth \u003d firstDayOfMonth.plusMonths(1);","lastModifiedDate":"2022-03-26"},{"lineNumber":448,"author":{"gitId":"yuzhongng"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":449,"author":{"gitId":"yuzhongng"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-03-26"},{"lineNumber":450,"author":{"gitId":"yuzhongng"},"content":"            if (hasDoOnDate(task) \u0026\u0026 task.getDoOnStartDateTime().toLocalDate().isEqual(firstDayOfMonth)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":451,"author":{"gitId":"yuzhongng"},"content":"                filteredTasks.add(task);","lastModifiedDate":"2022-03-26"},{"lineNumber":452,"author":{"gitId":"yuzhongng"},"content":"            } else if (hasDoOnDate(task)","lastModifiedDate":"2022-03-26"},{"lineNumber":453,"author":{"gitId":"yuzhongng"},"content":"                    \u0026\u0026 (task.getDoOnStartDateTime().toLocalDate().isAfter(firstDayOfMonth)","lastModifiedDate":"2022-03-26"},{"lineNumber":454,"author":{"gitId":"yuzhongng"},"content":"                    \u0026\u0026 task.getDoOnStartDateTime().toLocalDate().isBefore(firstDayOfNextMonth))) {","lastModifiedDate":"2022-03-26"},{"lineNumber":455,"author":{"gitId":"yuzhongng"},"content":"                filteredTasks.add(task);","lastModifiedDate":"2022-03-26"},{"lineNumber":456,"author":{"gitId":"yuzhongng"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":457,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":458,"author":{"gitId":"yuzhongng"},"content":"        return (ArrayList\u003cTask\u003e) filteredTasks.stream()","lastModifiedDate":"2022-03-26"},{"lineNumber":459,"author":{"gitId":"yuzhongng"},"content":"                .sorted(Comparator.comparing(Task::getDoOnStartDateTime))","lastModifiedDate":"2022-03-26"},{"lineNumber":460,"author":{"gitId":"yuzhongng"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-03-26"},{"lineNumber":461,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":462,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":463,"author":{"gitId":"yuzhongng"},"content":"    public void printTaskList(ArrayList\u003cTask\u003e taskList, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":464,"author":{"gitId":"yuzhongng"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2022-03-26"},{"lineNumber":465,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(task.toString());","lastModifiedDate":"2022-03-26"},{"lineNumber":466,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":467,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":468,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"laiisaac":8,"jltha":385,"yuzhongng":37,"thedarie":38}},{"path":"src/main/java/seedu/sherpass/timer/Countdown.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.timer;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"laiisaac"},"content":"import seedu.sherpass.util.timetable.Timetable;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"import javax.swing.JFrame;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"import javax.swing.JLabel;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.EMPTY_STRING;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.TimerConstant.NO_TIME_LEFT;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.TimerConstant.ONE_MINUTE;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.TimerConstant.ONE_HOUR;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"public class Countdown extends Timer  {","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"laiisaac"},"content":"    private boolean hasTimeLeft \u003d false;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"laiisaac"},"content":"    protected int timeLeft;","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"    private final JFrame jframe;","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"    private final JLabel jlabel;","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"laiisaac"},"content":"     * Creates a constructor for timer. Initialises the parameters needed for the countdown timer.","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"laiisaac"},"content":"     * @param ui UI","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"    public Countdown(TaskList taskList, Ui ui, JFrame jframe, JLabel jlabel) {","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"laiisaac"},"content":"        super(taskList, ui);","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"laiisaac"},"content":"        timeLeft \u003d NO_TIME_LEFT;","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"        this.jframe \u003d jframe;","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"        this.jlabel \u003d jlabel;","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"    private String convertTimeToString() {","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"        long hour;","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"        long minute;","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"        long second;","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"        if ((timeLeft / ONE_HOUR) \u003e 0) {","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"            hour \u003d timeLeft / ONE_HOUR;","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"            minute \u003d (long) ((timeLeft * 1.0) / ONE_HOUR) * 60;","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"            second \u003d timeLeft - (hour * ONE_HOUR) - (minute * ONE_MINUTE);","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"            String zeroStringHour \u003d (hour \u003e 9) ? EMPTY_STRING : \"0\";","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"            String zeroStringMinute \u003d (minute \u003e 9) ? EMPTY_STRING : \"0\";","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"            String zeroStringSecond \u003d (second \u003e 9) ? EMPTY_STRING : \"0\";","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"            return zeroStringHour + hour + \" hour(s) \" + zeroStringMinute + minute","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"                    + \" minute(s) \" + zeroStringSecond + second + \" second(s)\";","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"        } else if ((timeLeft / ONE_MINUTE) \u003e 0) {","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"            minute \u003d timeLeft / ONE_MINUTE;","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"            second \u003d timeLeft - (minute * ONE_MINUTE);","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"            String zeroStringMinute \u003d (minute \u003e 9) ? EMPTY_STRING : \"0\";","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"            String zeroStringSecond \u003d (second \u003e 9) ? EMPTY_STRING : \"0\";","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"            return zeroStringMinute + minute + \" minute(s) \" + zeroStringSecond + second + \" second(s)\";","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"        } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"            second \u003d timeLeft;","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"            String zeroStringSecond \u003d (second \u003e 9) ? EMPTY_STRING : \"0\";","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"            return zeroStringSecond + second + \" second(s)\";","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"laiisaac"},"content":"     * Creates a new thread to run the timer. The timer will continue to run until it has run out of time, or has been","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"laiisaac"},"content":"     * stopped by the user.","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"laiisaac"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"laiisaac"},"content":"    public void run() {","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"laiisaac"},"content":"        isTimerRunning \u003d true;","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"laiisaac"},"content":"        printTimerStart();","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"jltha"},"content":"        jframe.setVisible(true);","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"laiisaac"},"content":"        while (hasTimeLeft) {","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"laiisaac"},"content":"            assert timeLeft \u003e NO_TIME_LEFT;","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"jltha"},"content":"            String timeShownToUser \u003d convertTimeToString();","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"jltha"},"content":"            jlabel.setText(\"Time left: \" + timeShownToUser);","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"laiisaac"},"content":"            update();","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"laiisaac"},"content":"        if (timerRanOutOfTime()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"jltha"},"content":"            jframe.setVisible(false);","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"laiisaac"},"content":"            assert timeLeft \u003c\u003d NO_TIME_LEFT;","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"laiisaac"},"content":"            isTimerRunning \u003d false;","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"Time is up!\\n \"","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"laiisaac"},"content":"                    + \"Would you like to start another timer, mark a task as done, or leave the study session?\");","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"laiisaac"},"content":"            Timetable.showTodaySchedule(taskList, ui);","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"laiisaac"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"laiisaac"},"content":"        this.interrupt();","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"laiisaac"},"content":"     * Updates the timer by letting the thread sleep for 1 second, then updating timeLeft. The timer will not update","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"laiisaac"},"content":"     * if it is paused and will instead wait for the user to resume the timer.","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"laiisaac"},"content":"    protected void update() {","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"laiisaac"},"content":"        try {","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"laiisaac"},"content":"            Thread.sleep(1000);","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"laiisaac"},"content":"            timeLeft -\u003d 1;","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"laiisaac"},"content":"            updateHasTimeLeft();","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"laiisaac"},"content":"            if (isTimerPaused) {","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"laiisaac"},"content":"                waitForTimerToResume();","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"laiisaac"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"laiisaac"},"content":"        } catch (InterruptedException e) {","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"laiisaac"},"content":"            return;","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"laiisaac"},"content":"     * Stops the timer if it is running, else prints an error message.","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"laiisaac"},"content":"    public void stopTimer() {","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"laiisaac"},"content":"        if (isTimerRunning) {","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"jltha"},"content":"            jframe.setVisible(false);","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"Alright, I\u0027ve stopped the timer.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"laiisaac"},"content":"            isTimerRunning \u003d false;","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"laiisaac"},"content":"            forcedStop \u003d true;","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"laiisaac"},"content":"            timeLeft \u003d NO_TIME_LEFT;","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"laiisaac"},"content":"            hasTimeLeft \u003d false;","lastModifiedDate":"2022-03-24"},{"lineNumber":117,"author":{"gitId":"laiisaac"},"content":"            this.interrupt();","lastModifiedDate":"2022-03-24"},{"lineNumber":118,"author":{"gitId":"laiisaac"},"content":"        } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":119,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"The timer has already stopped.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":120,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":121,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":122,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":123,"author":{"gitId":"laiisaac"},"content":"    private void updateHasTimeLeft() {","lastModifiedDate":"2022-03-24"},{"lineNumber":124,"author":{"gitId":"laiisaac"},"content":"        if (timeLeft \u003c\u003d NO_TIME_LEFT) {","lastModifiedDate":"2022-03-24"},{"lineNumber":125,"author":{"gitId":"laiisaac"},"content":"            hasTimeLeft \u003d false;","lastModifiedDate":"2022-03-24"},{"lineNumber":126,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":127,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":128,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":129,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":130,"author":{"gitId":"laiisaac"},"content":"     * Returns whether timer ran out of time.","lastModifiedDate":"2022-03-24"},{"lineNumber":131,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":132,"author":{"gitId":"laiisaac"},"content":"     * @return Boolean of whether timer ran out of time.","lastModifiedDate":"2022-03-24"},{"lineNumber":133,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":134,"author":{"gitId":"laiisaac"},"content":"    private boolean timerRanOutOfTime() {","lastModifiedDate":"2022-03-24"},{"lineNumber":135,"author":{"gitId":"laiisaac"},"content":"        return (!hasTimeLeft \u0026\u0026 !forcedStop);","lastModifiedDate":"2022-03-24"},{"lineNumber":136,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":137,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":138,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"laiisaac"},"content":"     * Prints the timer selected by the user.","lastModifiedDate":"2022-03-24"},{"lineNumber":140,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":141,"author":{"gitId":"laiisaac"},"content":"    protected void printTimerStart() {","lastModifiedDate":"2022-03-24"},{"lineNumber":142,"author":{"gitId":"laiisaac"},"content":"        int hours;","lastModifiedDate":"2022-03-24"},{"lineNumber":143,"author":{"gitId":"laiisaac"},"content":"        int minutes;","lastModifiedDate":"2022-03-24"},{"lineNumber":144,"author":{"gitId":"laiisaac"},"content":"        int seconds;","lastModifiedDate":"2022-03-24"},{"lineNumber":145,"author":{"gitId":"laiisaac"},"content":"        if (timeLeft \u003e\u003d ONE_HOUR) {","lastModifiedDate":"2022-03-24"},{"lineNumber":146,"author":{"gitId":"laiisaac"},"content":"            hours \u003d timeLeft / ONE_HOUR;","lastModifiedDate":"2022-03-24"},{"lineNumber":147,"author":{"gitId":"laiisaac"},"content":"            minutes \u003d (timeLeft - hours * ONE_HOUR) / ONE_MINUTE;","lastModifiedDate":"2022-03-24"},{"lineNumber":148,"author":{"gitId":"laiisaac"},"content":"            seconds \u003d timeLeft - hours * ONE_HOUR - minutes * ONE_MINUTE;","lastModifiedDate":"2022-03-24"},{"lineNumber":149,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"Timer of \" + hours + \" hours \" + minutes + \" minutes \"","lastModifiedDate":"2022-03-24"},{"lineNumber":150,"author":{"gitId":"laiisaac"},"content":"                    + seconds + \" seconds started.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":151,"author":{"gitId":"laiisaac"},"content":"        } else if (timeLeft \u003e\u003d ONE_MINUTE) {","lastModifiedDate":"2022-03-24"},{"lineNumber":152,"author":{"gitId":"laiisaac"},"content":"            minutes \u003d timeLeft / ONE_MINUTE;","lastModifiedDate":"2022-03-24"},{"lineNumber":153,"author":{"gitId":"laiisaac"},"content":"            seconds \u003d timeLeft - (minutes * ONE_MINUTE);","lastModifiedDate":"2022-03-24"},{"lineNumber":154,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"Timer of \" + minutes + \" minutes \"","lastModifiedDate":"2022-03-24"},{"lineNumber":155,"author":{"gitId":"laiisaac"},"content":"                    + seconds + \" seconds started.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":156,"author":{"gitId":"laiisaac"},"content":"        } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":157,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"Timer of \" + timeLeft + \" seconds started.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":158,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":159,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":160,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":161,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":162,"author":{"gitId":"laiisaac"},"content":"     * Sets the duration of the timer, as specified by the user.","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":164,"author":{"gitId":"laiisaac"},"content":"     * @param duration Duration of timer in seconds.","lastModifiedDate":"2022-03-24"},{"lineNumber":165,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":166,"author":{"gitId":"laiisaac"},"content":"    public void setDuration(int duration) {","lastModifiedDate":"2022-03-24"},{"lineNumber":167,"author":{"gitId":"laiisaac"},"content":"        timeLeft \u003d duration;","lastModifiedDate":"2022-03-24"},{"lineNumber":168,"author":{"gitId":"laiisaac"},"content":"        hasTimeLeft \u003d true;","lastModifiedDate":"2022-03-24"},{"lineNumber":169,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":170,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":171,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":172,"author":{"gitId":"laiisaac"},"content":"     * Resumes the timer by calling notify() on the waiting thread.","lastModifiedDate":"2022-03-24"},{"lineNumber":173,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":174,"author":{"gitId":"laiisaac"},"content":"    public void resumeTimer() {","lastModifiedDate":"2022-03-24"},{"lineNumber":175,"author":{"gitId":"laiisaac"},"content":"        synchronized (this) {","lastModifiedDate":"2022-03-24"},{"lineNumber":176,"author":{"gitId":"laiisaac"},"content":"            isTimerPaused \u003d false;","lastModifiedDate":"2022-03-24"},{"lineNumber":177,"author":{"gitId":"laiisaac"},"content":"            notify();","lastModifiedDate":"2022-03-24"},{"lineNumber":178,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":179,"author":{"gitId":"laiisaac"},"content":"        ui.showToUser(\"Okay! I\u0027ve resumed the timer. You have \" + timeLeft + \" seconds left.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":180,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":181,"author":{"gitId":"laiisaac"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"laiisaac":137,"jltha":44}},{"path":"src/main/java/seedu/sherpass/timer/Stopwatch.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.timer;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"laiisaac"},"content":"import seedu.sherpass.util.timetable.Timetable;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"import javax.swing.JFrame;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"import javax.swing.JLabel;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.EMPTY_STRING;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.TimerConstant.ONE_HOUR;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.TimerConstant.ONE_MINUTE;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"laiisaac"},"content":"public class Stopwatch extends Timer {","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"    private int timeElapsed;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"    private final JFrame jframe;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"    private final JLabel jlabel;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"    public Stopwatch(TaskList taskList, Ui ui, JFrame jframe, JLabel jlabel) {","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"laiisaac"},"content":"        super(taskList, ui);","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"laiisaac"},"content":"        timeElapsed \u003d 0;","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"        this.jframe \u003d jframe;","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"        this.jlabel \u003d jlabel;","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"laiisaac"},"content":"     * Creates a new thread to run the stopwatch. The timer will continue to run until it has been stopped by the user.","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"laiisaac"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"laiisaac"},"content":"    public void run() {","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"laiisaac"},"content":"        isTimerRunning \u003d true;","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"laiisaac"},"content":"        printTimerStart();","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"        jframe.setVisible(true);","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"laiisaac"},"content":"        while (!forcedStop) {","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"laiisaac"},"content":"            update();","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"    private String convertTimeToString() {","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"        long hour;","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"        long minute;","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"        long second;","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"        if ((timeElapsed / ONE_HOUR) \u003e 0) {","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"            hour \u003d timeElapsed / ONE_HOUR;","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"            minute \u003d (long) ((timeElapsed * 1.0) / ONE_HOUR) * 60;","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"            second \u003d timeElapsed - (hour * ONE_HOUR) - (minute * ONE_MINUTE);","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"            String zeroStringHour \u003d (hour \u003e 9) ? EMPTY_STRING : \"0\";","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"            String zeroStringMinute \u003d (minute \u003e 9) ? EMPTY_STRING : \"0\";","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"            String zeroStringSecond \u003d (second \u003e 9) ? EMPTY_STRING : \"0\";","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"            return zeroStringHour + hour + \" hour(s) \" + zeroStringMinute + minute","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"                    + \" minute(s) \" + zeroStringSecond + second + \" second(s)\";","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"        } else if ((timeElapsed / ONE_MINUTE) \u003e 0) {","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"            minute \u003d timeElapsed / ONE_MINUTE;","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"            second \u003d timeElapsed - (minute * ONE_MINUTE);","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"            String zeroStringMinute \u003d (minute \u003e 9) ? EMPTY_STRING : \"0\";","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"            String zeroStringSecond \u003d (second \u003e 9) ? EMPTY_STRING : \"0\";","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"            return zeroStringMinute + minute + \" minute(s) \" + zeroStringSecond + second + \" second(s)\";","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"        } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"            second \u003d timeElapsed;","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"            String zeroStringSecond \u003d (second \u003e 9) ? EMPTY_STRING : \"0\";","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"            return zeroStringSecond + second + \" second(s)\";","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"laiisaac"},"content":"     * Updates the timer by letting the thread sleep for 1 second, then updating timeLeft. The timer will not update","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"laiisaac"},"content":"     * if it is paused and will instead wait for the user to resume the timer.","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"laiisaac"},"content":"    protected void update() {","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"laiisaac"},"content":"        try {","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"laiisaac"},"content":"            Thread.sleep(1000);","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"laiisaac"},"content":"            timeElapsed +\u003d 1;","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"jltha"},"content":"            String timeShownToUser \u003d convertTimeToString();","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"            jlabel.setText(\"Elapsed time: \" + timeShownToUser);","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"laiisaac"},"content":"            if (isTimerPaused) {","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"laiisaac"},"content":"                waitForTimerToResume();","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"laiisaac"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"laiisaac"},"content":"        } catch (InterruptedException e) {","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"laiisaac"},"content":"            return;","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"laiisaac"},"content":"     * Stops the timer if it is running, else prints an error message.","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"laiisaac"},"content":"    public void stopTimer() {","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"laiisaac"},"content":"        if (isTimerRunning) {","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"jltha"},"content":"            jframe.setVisible(false);","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"Alright, I\u0027ve stopped the timer.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"laiisaac"},"content":"            isTimerRunning \u003d false;","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"laiisaac"},"content":"            forcedStop \u003d true;","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"laiisaac"},"content":"            this.interrupt();","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"laiisaac"},"content":"        } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"The timer has already stopped.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"laiisaac"},"content":"     * Prints the timer selected by the user.","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"laiisaac"},"content":"    protected void printTimerStart() {","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"laiisaac"},"content":"        ui.showToUser(\"Alright, your timer is started. Feel free to pause or stop the timer whenever you\u0027re ready.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"laiisaac"},"content":"     * Resumes the timer by calling notify() on the waiting thread.","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"laiisaac"},"content":"    public void resumeTimer() {","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"laiisaac"},"content":"        synchronized (this) {","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"laiisaac"},"content":"            isTimerPaused \u003d false;","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"laiisaac"},"content":"            notify();","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"laiisaac"},"content":"        ui.showToUser(\"Okay! I\u0027ve resumed the timer.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":117,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":118,"author":{"gitId":"laiisaac"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"laiisaac":75,"jltha":43}},{"path":"src/main/java/seedu/sherpass/timer/Timer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.timer;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"laiisaac"},"content":"public abstract class Timer extends Thread {","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"laiisaac"},"content":"    protected volatile boolean isTimerRunning \u003d false;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"laiisaac"},"content":"    protected volatile boolean isTimerPaused \u003d false;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"    protected boolean forcedStop \u003d false;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"laiisaac"},"content":"    protected static Ui ui;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"    protected static TaskList taskList;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"     * Creates a constructor for timer. Initialises the parameters needed for the countdown timer.","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"laiisaac"},"content":"     * @param ui UI","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"laiisaac"},"content":"    public Timer(TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"        Timer.ui \u003d ui;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"laiisaac"},"content":"        Timer.taskList \u003d taskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"laiisaac"},"content":"    protected abstract void update();","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"laiisaac"},"content":"    protected abstract void printTimerStart();","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"laiisaac"},"content":"    public abstract void resumeTimer();","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"laiisaac"},"content":"    public abstract void stopTimer();","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"laiisaac"},"content":"    public boolean getIsStopped() {","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"laiisaac"},"content":"        return forcedStop;","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"laiisaac"},"content":"    public void pauseTimer() {","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"laiisaac"},"content":"        ui.showToUser(\"Got it! I\u0027ve paused the timer.\\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"laiisaac"},"content":"                + \"Feel free to resume whenever you\u0027re ready.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"laiisaac"},"content":"        isTimerPaused \u003d true;","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"laiisaac"},"content":"     * Method causes the thread which the timer is running on to wait when it is paused, until the user resumes the","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"laiisaac"},"content":"     * timer.","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"laiisaac"},"content":"    protected void waitForTimerToResume() throws InterruptedException {","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"laiisaac"},"content":"        synchronized (this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"            while (isTimerPaused) {","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"laiisaac"},"content":"                wait();","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"laiisaac"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"laiisaac"},"content":"    public boolean isTimerRunning() {","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"laiisaac"},"content":"        return isTimerRunning;","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"laiisaac"},"content":"    public boolean isTimerPaused() {","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"        return isTimerPaused;","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"laiisaac"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"laiisaac":56,"jltha":9}},{"path":"src/main/java/seedu/sherpass/timer/TimerLogic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.timer;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"import seedu.sherpass.command.Command;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"import seedu.sherpass.command.MarkCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"laiisaac"},"content":"import seedu.sherpass.exception.InvalidTimeException;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.util.parser.TaskParser;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.util.parser.TimerParser;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.util.parser.TimetableParser;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"import seedu.sherpass.util.timetable.Timetable;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Index.STUDY_PARAMETER_INDEX;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.ERROR_INVALID_TIMER_INPUT_MESSAGE;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.EMPTY_STRING;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"import javax.swing.JFrame;","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"import javax.swing.JLabel;","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"import javax.swing.JToggleButton;","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"import javax.swing.SwingConstants;","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"import java.awt.BorderLayout;","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"import java.awt.event.ActionListener;","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"import java.awt.event.WindowEvent;","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"import java.awt.event.WindowListener;","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"public class TimerLogic implements WindowListener {","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"laiisaac"},"content":"    private static Ui ui;","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"laiisaac"},"content":"    private static Timer timer;","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"laiisaac"},"content":"    private static TaskList taskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"laiisaac"},"content":"    protected volatile boolean isTimerInitialised \u003d false;","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"    private final JFrame jframe;","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"    private final JLabel jlabel;","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"    private final ActionListener actionListenerPause \u003d actionEvent -\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"        callPauseTimer();","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"        ui.showLine();","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"    };","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"    private final ActionListener actionListenerResume \u003d actionEvent -\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"        callResumeTimer();","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"        ui.showLine();","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"    };","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"    private final ActionListener actionListenerStop \u003d actionEvent -\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"        callStopTimer();","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"        ui.showLine();","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"    };","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"    private void setWindowParameters() {","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"        jframe.setLayout(new BorderLayout());","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"        jframe.setBounds(500, 300, 300, 100);","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"        jframe.add(jlabel, BorderLayout.NORTH);","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"        jframe.addWindowListener(this);","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"        JToggleButton pauseButton \u003d new JToggleButton(\"Pause\");","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"        pauseButton.addActionListener(actionListenerPause);","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"        jframe.add(pauseButton, BorderLayout.WEST);","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"        JToggleButton resumeButton \u003d new JToggleButton(\"Resume\");","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"        resumeButton.addActionListener(actionListenerResume);","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"        jframe.add(resumeButton, BorderLayout.CENTER);","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"        JToggleButton stopButton \u003d new JToggleButton(\"stop\");","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"        stopButton.addActionListener(actionListenerStop);","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"        jframe.add(stopButton, BorderLayout.EAST);","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"laiisaac"},"content":"     * Creates a constructor for TimerLogic.","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"laiisaac"},"content":"     * @param ui       UI","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"laiisaac"},"content":"     * @param taskList taskList","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"laiisaac"},"content":"    public TimerLogic(TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"laiisaac"},"content":"        TimerLogic.taskList \u003d taskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"        TimerLogic.ui \u003d ui;","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"jltha"},"content":"        jframe \u003d new JFrame();","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"jltha"},"content":"        jlabel \u003d new JLabel(EMPTY_STRING, SwingConstants.CENTER);","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"jltha"},"content":"        setWindowParameters();","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"laiisaac"},"content":"     * Marks a task as done, as specified in parsedInput.","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"laiisaac"},"content":"     * @param storage     Storage.","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"laiisaac"},"content":"     * @param parsedInput parsedInput.","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"jltha"},"content":"    public void markTask(Storage storage, String parsedInput) {","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"laiisaac"},"content":"        if (isTimerPausedOrStopped()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"laiisaac"},"content":"            executeMark(storage, parsedInput);","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"laiisaac"},"content":"        } else {","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"You can\u0027t mark a task as done while timer is running!\");","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"jltha"},"content":"    private void executeMark(Storage storage, String parsedInput) {","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"yuzhongng"},"content":"        Command c \u003d TaskParser.prepareMarkOrUnmark(parsedInput, MarkCommand.COMMAND_WORD, taskList);","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"laiisaac"},"content":"        if (c !\u003d null) {","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"laiisaac"},"content":"            c.execute(taskList, ui, storage);","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"laiisaac"},"content":"            printAvailableCommands();","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"laiisaac"},"content":"    private void printAvailableCommands() {","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"laiisaac"},"content":"        if (!isTimerInitialised) {","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"Would you like to start another timer, mark a task as done, \"","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"laiisaac"},"content":"                    + \"or leave the study session?\");","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"laiisaac"},"content":"        } else {","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"Would you like to resume the timer, mark a task as done, \"","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"laiisaac"},"content":"                    + \"or leave the study session?\");","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"laiisaac"},"content":"    public void showTasks(Storage storage, String[] parsedInput) {","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"laiisaac"},"content":"        if (!isTimerInitialised) {","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"laiisaac"},"content":"            executeShow(storage, parsedInput);","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"laiisaac"},"content":"        } else {","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"You can\u0027t show tasks while timer is running!\");","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"laiisaac"},"content":"    private void executeShow(Storage storage, String[] parsedInput) {","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"yuzhongng"},"content":"        Command c \u003d TimetableParser.prepareShow(parsedInput);","lastModifiedDate":"2022-03-26"},{"lineNumber":125,"author":{"gitId":"laiisaac"},"content":"        if (c !\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"laiisaac"},"content":"            c.execute(taskList, ui, storage);","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"laiisaac"},"content":"            printAvailableCommands();","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"laiisaac"},"content":"     * Creates a thread using timer.start() to start the timer with the user\u0027s specified duration.","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"laiisaac"},"content":"     * @param parsedInput Parsed input of the user","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"jltha"},"content":"    public void callStartTimer(String[] parsedInput) {","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"laiisaac"},"content":"        if (isTimerInitialised) {","lastModifiedDate":"2022-03-25"},{"lineNumber":138,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"You already have a timer running!\");","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"laiisaac"},"content":"            return;","lastModifiedDate":"2022-03-14"},{"lineNumber":140,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":141,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"laiisaac"},"content":"            callResetTimer(parsedInput);","lastModifiedDate":"2022-03-24"},{"lineNumber":143,"author":{"gitId":"laiisaac"},"content":"            if (timer instanceof Countdown) {","lastModifiedDate":"2022-03-24"},{"lineNumber":144,"author":{"gitId":"yuzhongng"},"content":"                int duration \u003d TimerParser.parseTimerInput(parsedInput);","lastModifiedDate":"2022-03-25"},{"lineNumber":145,"author":{"gitId":"jltha"},"content":"                assert (duration \u003e 0);","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"laiisaac"},"content":"                ((Countdown) timer).setDuration(duration);","lastModifiedDate":"2022-03-24"},{"lineNumber":147,"author":{"gitId":"laiisaac"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":148,"author":{"gitId":"laiisaac"},"content":"            isTimerInitialised \u003d true;","lastModifiedDate":"2022-03-25"},{"lineNumber":149,"author":{"gitId":"laiisaac"},"content":"            timer.start();","lastModifiedDate":"2022-03-14"},{"lineNumber":150,"author":{"gitId":"jltha"},"content":"        } catch (ArrayIndexOutOfBoundsException | NumberFormatException | InvalidTimeException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"jltha"},"content":"            ui.showToUser(ERROR_INVALID_TIMER_INPUT_MESSAGE);","lastModifiedDate":"2022-03-16"},{"lineNumber":152,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":153,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":154,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":155,"author":{"gitId":"jltha"},"content":"    public void callPauseTimer() {","lastModifiedDate":"2022-03-16"},{"lineNumber":156,"author":{"gitId":"laiisaac"},"content":"        if (!isTimerInitialised) {","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"There is no timer running.\");","lastModifiedDate":"2022-03-25"},{"lineNumber":158,"author":{"gitId":"laiisaac"},"content":"            return;","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":160,"author":{"gitId":"laiisaac"},"content":"        if (timer.isTimerPaused()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":161,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"The timer is already paused!\");","lastModifiedDate":"2022-03-14"},{"lineNumber":162,"author":{"gitId":"laiisaac"},"content":"            return;","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":164,"author":{"gitId":"laiisaac"},"content":"        if (timer.getIsStopped()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":165,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"The timer has already finished!\");","lastModifiedDate":"2022-03-14"},{"lineNumber":166,"author":{"gitId":"laiisaac"},"content":"            return;","lastModifiedDate":"2022-03-24"},{"lineNumber":167,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":168,"author":{"gitId":"jltha"},"content":"        assert timer.isTimerRunning();","lastModifiedDate":"2022-03-16"},{"lineNumber":169,"author":{"gitId":"laiisaac"},"content":"        timer.pauseTimer();","lastModifiedDate":"2022-03-14"},{"lineNumber":170,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":171,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":172,"author":{"gitId":"jltha"},"content":"    public void callResumeTimer() {","lastModifiedDate":"2022-03-16"},{"lineNumber":173,"author":{"gitId":"laiisaac"},"content":"        if (!isTimerInitialised) {","lastModifiedDate":"2022-03-25"},{"lineNumber":174,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"There is no timer running.\");","lastModifiedDate":"2022-03-25"},{"lineNumber":175,"author":{"gitId":"laiisaac"},"content":"            return;","lastModifiedDate":"2022-03-25"},{"lineNumber":176,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":177,"author":{"gitId":"laiisaac"},"content":"        if (timer.isTimerPaused()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":178,"author":{"gitId":"laiisaac"},"content":"            timer.resumeTimer();","lastModifiedDate":"2022-03-14"},{"lineNumber":179,"author":{"gitId":"jltha"},"content":"        } else if (timer.isTimerRunning()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":180,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"The timer is still running!\");","lastModifiedDate":"2022-03-14"},{"lineNumber":181,"author":{"gitId":"jltha"},"content":"        } else {","lastModifiedDate":"2022-03-16"},{"lineNumber":182,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"There is no timer running currently!\");","lastModifiedDate":"2022-03-16"},{"lineNumber":183,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":184,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":185,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":186,"author":{"gitId":"jltha"},"content":"    public void callStopTimer() {","lastModifiedDate":"2022-03-16"},{"lineNumber":187,"author":{"gitId":"laiisaac"},"content":"        if (isTimerInitialised) {","lastModifiedDate":"2022-03-25"},{"lineNumber":188,"author":{"gitId":"laiisaac"},"content":"            timer.stopTimer();","lastModifiedDate":"2022-03-14"},{"lineNumber":189,"author":{"gitId":"laiisaac"},"content":"            isTimerInitialised \u003d updateIsTimerRunning();","lastModifiedDate":"2022-03-25"},{"lineNumber":190,"author":{"gitId":"laiisaac"},"content":"            Timetable.showTodaySchedule(taskList, ui);","lastModifiedDate":"2022-03-30"},{"lineNumber":191,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"Would you like to start another timer, mark a task as done, \"","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"laiisaac"},"content":"                    + \"or leave the study session?\");","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"laiisaac"},"content":"            return;","lastModifiedDate":"2022-03-24"},{"lineNumber":194,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":195,"author":{"gitId":"laiisaac"},"content":"        ui.showToUser(\"You don\u0027t have a timer running!\");","lastModifiedDate":"2022-03-24"},{"lineNumber":196,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":197,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":198,"author":{"gitId":"laiisaac"},"content":"    private boolean updateIsTimerRunning() {","lastModifiedDate":"2022-03-24"},{"lineNumber":199,"author":{"gitId":"laiisaac"},"content":"        return timer.isTimerRunning();","lastModifiedDate":"2022-03-24"},{"lineNumber":200,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":201,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":202,"author":{"gitId":"jltha"},"content":"    private String selectStudyTimer(String[] parsedInput) {","lastModifiedDate":"2022-03-26"},{"lineNumber":203,"author":{"gitId":"jltha"},"content":"        if (parsedInput[STUDY_PARAMETER_INDEX].trim().equals(\"stopwatch\")) {","lastModifiedDate":"2022-03-26"},{"lineNumber":204,"author":{"gitId":"jltha"},"content":"            return \"stopwatch\";","lastModifiedDate":"2022-03-26"},{"lineNumber":205,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":206,"author":{"gitId":"jltha"},"content":"        return \"countdown\";","lastModifiedDate":"2022-03-26"},{"lineNumber":207,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":208,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":209,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":210,"author":{"gitId":"laiisaac"},"content":"     * Resets the timer by creating a new timer object, which can then be started by the user.","lastModifiedDate":"2022-03-14"},{"lineNumber":211,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":212,"author":{"gitId":"laiisaac"},"content":"    public void callResetTimer(String[] parsedInput) {","lastModifiedDate":"2022-03-24"},{"lineNumber":213,"author":{"gitId":"jltha"},"content":"        String parameter \u003d selectStudyTimer(parsedInput);","lastModifiedDate":"2022-03-26"},{"lineNumber":214,"author":{"gitId":"laiisaac"},"content":"        if (parameter.equals(\"stopwatch\")) {","lastModifiedDate":"2022-03-24"},{"lineNumber":215,"author":{"gitId":"jltha"},"content":"            timer \u003d new Stopwatch(taskList, ui, jframe, jlabel);","lastModifiedDate":"2022-03-28"},{"lineNumber":216,"author":{"gitId":"laiisaac"},"content":"            return;","lastModifiedDate":"2022-03-24"},{"lineNumber":217,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":218,"author":{"gitId":"jltha"},"content":"        timer \u003d new Countdown(taskList, ui, jframe, jlabel);","lastModifiedDate":"2022-03-28"},{"lineNumber":219,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":220,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":221,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":222,"author":{"gitId":"laiisaac"},"content":"     * Returns if a timer is paused or stopped, so that mark or show command can be called.","lastModifiedDate":"2022-03-30"},{"lineNumber":223,"author":{"gitId":"laiisaac"},"content":"     * It first checks if timer is initialised. If initialised, it then calls the isTimerPaused() method to check the","lastModifiedDate":"2022-03-30"},{"lineNumber":224,"author":{"gitId":"laiisaac"},"content":"     * static variable isTimerPaused in abstract class Timer.","lastModifiedDate":"2022-03-30"},{"lineNumber":225,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":226,"author":{"gitId":"laiisaac"},"content":"     * @return Returns if timer is paused or stopped.","lastModifiedDate":"2022-03-30"},{"lineNumber":227,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":228,"author":{"gitId":"laiisaac"},"content":"    public boolean isTimerPausedOrStopped() {","lastModifiedDate":"2022-03-30"},{"lineNumber":229,"author":{"gitId":"laiisaac"},"content":"        if (!isTimerInitialised) {","lastModifiedDate":"2022-03-25"},{"lineNumber":230,"author":{"gitId":"laiisaac"},"content":"            return true;","lastModifiedDate":"2022-03-25"},{"lineNumber":231,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":232,"author":{"gitId":"jltha"},"content":"        return timer.isTimerPaused();","lastModifiedDate":"2022-03-28"},{"lineNumber":233,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":234,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":235,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":236,"author":{"gitId":"jltha"},"content":"     * Destroy the jframe that was created.","lastModifiedDate":"2022-03-28"},{"lineNumber":237,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":238,"author":{"gitId":"jltha"},"content":"    public void destroyFrame() {","lastModifiedDate":"2022-03-28"},{"lineNumber":239,"author":{"gitId":"jltha"},"content":"        jframe.dispose();","lastModifiedDate":"2022-03-28"},{"lineNumber":240,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":241,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":242,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":243,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":244,"author":{"gitId":"jltha"},"content":"     * Call method when window is opened.","lastModifiedDate":"2022-03-28"},{"lineNumber":245,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":246,"author":{"gitId":"jltha"},"content":"     * @param e Event signifying the change in status of the window.","lastModifiedDate":"2022-03-28"},{"lineNumber":247,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":248,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":249,"author":{"gitId":"jltha"},"content":"    public void windowOpened(WindowEvent e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":250,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":251,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":252,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":253,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":254,"author":{"gitId":"jltha"},"content":"     * Call method as window is closing.","lastModifiedDate":"2022-03-28"},{"lineNumber":255,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":256,"author":{"gitId":"jltha"},"content":"     * @param e Event signifying the change in status of the window.","lastModifiedDate":"2022-03-28"},{"lineNumber":257,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":258,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":259,"author":{"gitId":"jltha"},"content":"    public void windowClosing(WindowEvent e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":260,"author":{"gitId":"jltha"},"content":"        callStopTimer();","lastModifiedDate":"2022-03-28"},{"lineNumber":261,"author":{"gitId":"jltha"},"content":"        ui.showLine();","lastModifiedDate":"2022-03-28"},{"lineNumber":262,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":263,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":264,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":265,"author":{"gitId":"jltha"},"content":"     * Call method when window is closed.","lastModifiedDate":"2022-03-28"},{"lineNumber":266,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":267,"author":{"gitId":"jltha"},"content":"     * @param e Event signifying the change in status of the window.","lastModifiedDate":"2022-03-28"},{"lineNumber":268,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":269,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":270,"author":{"gitId":"jltha"},"content":"    public void windowClosed(WindowEvent e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":271,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":272,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":273,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":274,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":275,"author":{"gitId":"jltha"},"content":"     * Call method when window is minimised.","lastModifiedDate":"2022-03-28"},{"lineNumber":276,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":277,"author":{"gitId":"jltha"},"content":"     * @param e Event signifying the change in status of the window.","lastModifiedDate":"2022-03-28"},{"lineNumber":278,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":279,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":280,"author":{"gitId":"jltha"},"content":"    public void windowIconified(WindowEvent e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":281,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":282,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":283,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":284,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":285,"author":{"gitId":"jltha"},"content":"     * Call method when window is set from minimised to normal size.","lastModifiedDate":"2022-03-28"},{"lineNumber":286,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":287,"author":{"gitId":"jltha"},"content":"     * @param e Event signifying the change in status of the window.","lastModifiedDate":"2022-03-28"},{"lineNumber":288,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":289,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":290,"author":{"gitId":"jltha"},"content":"    public void windowDeiconified(WindowEvent e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":291,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":292,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":293,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":294,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":295,"author":{"gitId":"jltha"},"content":"     * Call method when window is set to be the active (current viewing) window.","lastModifiedDate":"2022-03-28"},{"lineNumber":296,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":297,"author":{"gitId":"jltha"},"content":"     * @param e Event signifying the change in status of the window.","lastModifiedDate":"2022-03-28"},{"lineNumber":298,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":299,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":300,"author":{"gitId":"jltha"},"content":"    public void windowActivated(WindowEvent e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":301,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":302,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":303,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":304,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":305,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":306,"author":{"gitId":"jltha"},"content":"     * Call method when window is not set to be the active (current viewing) window.","lastModifiedDate":"2022-03-28"},{"lineNumber":307,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":308,"author":{"gitId":"jltha"},"content":"     * @param e Event signifying the change in status of the window.","lastModifiedDate":"2022-03-28"},{"lineNumber":309,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":310,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":311,"author":{"gitId":"jltha"},"content":"    public void windowDeactivated(WindowEvent e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":312,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":313,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":314,"author":{"gitId":"laiisaac"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"laiisaac":150,"jltha":157,"yuzhongng":7}},{"path":"src/main/java/seedu/sherpass/util/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.util;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"thedarie"},"content":"import org.json.JSONArray;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"thedarie"},"content":"import org.json.JSONException;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"thedarie"},"content":"import org.json.JSONObject;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.exception.InvalidInputException;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.Task;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.util.parser.StorageParser;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"import java.io.File;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"thedarie"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"thedarie"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"thedarie"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.inputWithTimeFormat;","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Index.DIRECTORY_INDEX;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Index.INDENT_FACTOR;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"thedarie"},"content":"import static seedu.sherpass.constant.Message.ERROR_CORRUPT_SAVED_FILE_MESSAGE_1;","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"thedarie"},"content":"import static seedu.sherpass.constant.Message.ERROR_CORRUPT_SAVED_FILE_MESSAGE_2;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"thedarie"},"content":"import static seedu.sherpass.constant.Message.ERROR_CORRUPT_SAVED_FILE_MESSAGE_3;","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.ERROR_IO_FAILURE_MESSAGE;","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"public class Storage {","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"thedarie"},"content":"    private final String saveFilePath;","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"     * Creates a constructor for the class Storage.","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"     * Initialises and creates location for save file if missing.","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"     * @param filePath Location of the save file.","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"     * @throws IOException If failed to read save file.","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"    public Storage(String filePath) throws IOException {","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"        saveFilePath \u003d filePath;","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"        System.out.println(\"Booting up...\");","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"        String[] directoryName \u003d filePath.split(\"/\");","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"        File saveDirectory \u003d new File(directoryName[DIRECTORY_INDEX]);","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"        if (saveDirectory.mkdir()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"            System.out.println(\"Creating save directory...\");","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"        File saveState \u003d new File(filePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"        if (saveState.createNewFile()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"            System.out.println(\"Creating new save state...\");","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"thedarie"},"content":"    // Wipes the existing file","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"thedarie"},"content":"    private void wipeSaveData() {","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"            FileWriter fw \u003d new FileWriter(saveFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"            fw.close();","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"            System.out.println(ERROR_IO_FAILURE_MESSAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"            System.exit(1);","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"thedarie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"thedarie"},"content":"     * Returns the JSON representation of the task list.","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"thedarie"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"thedarie"},"content":"     * @param taskList The task list to be converted into JSON format.","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"thedarie"},"content":"     * @return JSONObject containing the tasks in the task list.","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"thedarie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"thedarie"},"content":"    private JSONObject convertTaskListToJson(TaskList taskList) {","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"thedarie"},"content":"        JSONObject json \u003d new JSONObject();","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"thedarie"},"content":"        JSONArray tasks \u003d new JSONArray();","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"thedarie"},"content":"        for (Task t : taskList.getTasks()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"thedarie"},"content":"            JSONObject taskToStore \u003d new JSONObject();","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"jltha"},"content":"            taskToStore.put(\"index\", t.getIndex());","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"thedarie"},"content":"            taskToStore.put(\"identifier\", t.getIdentifier());","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"thedarie"},"content":"            taskToStore.put(\"status\", t.getStatusIcon());","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"thedarie"},"content":"            taskToStore.put(\"by_date\",","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"thedarie"},"content":"                    (t.getByDate() \u003d\u003d null ? \" \" : t.getByDate().format(inputWithTimeFormat)));","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"thedarie"},"content":"            taskToStore.put(\"do_date_start\",","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"thedarie"},"content":"                    (t.getDoOnStartDateTime() \u003d\u003d null ? \" \" : t.getDoOnStartDateTime().format(inputWithTimeFormat)));","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"thedarie"},"content":"            taskToStore.put(\"do_date_end\",","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"thedarie"},"content":"                    (t.getDoOnStartDateTime() \u003d\u003d null ? \" \" : t.getDoOnEndDateTime().format(inputWithTimeFormat)));","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"thedarie"},"content":"            taskToStore.put(\"frequency\", (t.getRepeatFrequency() \u003d\u003d null ? \" \" : t.getRepeatFrequency().toString()));","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"thedarie"},"content":"            taskToStore.put(\"description\", t.getDescription());","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"thedarie"},"content":"            tasks.put(taskToStore);","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"thedarie"},"content":"        json.put(\"tasks\", tasks);","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"thedarie"},"content":"        return json;","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"jltha"},"content":"     * Overwrites existing saved data in save file with new data.","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"jltha"},"content":"     * @param taskList Array of tasks that are to be saved.","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"thedarie"},"content":"    public JSONObject writeSaveData(TaskList taskList) {","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"thedarie"},"content":"        JSONObject taskJson \u003d convertTaskListToJson(taskList);","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"thedarie"},"content":"        String taskString \u003d taskJson.toString(INDENT_FACTOR);","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"thedarie"},"content":"        assert taskString !\u003d null;","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"thedarie"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"thedarie"},"content":"            FileWriter writer \u003d new FileWriter(saveFilePath);","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"thedarie"},"content":"            writer.write(taskString);","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"thedarie"},"content":"            writer.close();","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"thedarie"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"thedarie"},"content":"            System.out.println(ERROR_IO_FAILURE_MESSAGE);","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"thedarie"},"content":"        return taskJson;","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"jltha"},"content":"     * Loads back the save file onto the program.","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"thedarie"},"content":"     * @return ArrayList containing the tasks saved in the data file","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"thedarie"},"content":"     * @throws IOException           If an I/O error occurs while reading the data file","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"thedarie"},"content":"     * @throws InvalidInputException If the data has missing fields for a task","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"thedarie"},"content":"     * @throws JSONException         If the data file has an invalid JSON format","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"thedarie"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException, InvalidInputException, JSONException {","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"thedarie"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"thedarie"},"content":"        List\u003cString\u003e dataLines \u003d Files.readAllLines(new File(saveFilePath).toPath());","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"thedarie"},"content":"        if (dataLines.size() \u003e 0) {","lastModifiedDate":"2022-03-12"},{"lineNumber":122,"author":{"gitId":"thedarie"},"content":"            String dataString \u003d String.join(\"\", dataLines);","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"thedarie"},"content":"            JSONArray taskArray \u003d new JSONObject(dataString).getJSONArray(\"tasks\");","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"thedarie"},"content":"            for (int i \u003d 0; i \u003c taskArray.length(); i++) {","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"thedarie"},"content":"                JSONObject taskData \u003d taskArray.getJSONObject(i);","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"yuzhongng"},"content":"                taskList.add(StorageParser.parseSaveData(taskData));","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"thedarie"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"thedarie"},"content":"        return taskList;","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"thedarie"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"thedarie"},"content":"     * Creates a new save file or exits the program.","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"thedarie"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"thedarie"},"content":"     * When the save file fails to load, the user decides if the program creates new save file","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"thedarie"},"content":"     * or the user can manually inspect the save file.","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"thedarie"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":139,"author":{"gitId":"thedarie"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":140,"author":{"gitId":"thedarie"},"content":"     * @param ui Ui for printing messages","lastModifiedDate":"2022-03-14"},{"lineNumber":141,"author":{"gitId":"thedarie"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":142,"author":{"gitId":"thedarie"},"content":"    public void handleCorruptedSave(Ui ui) {","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"thedarie"},"content":"        ui.showToUser(ERROR_CORRUPT_SAVED_FILE_MESSAGE_1);","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"thedarie"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-03-10"},{"lineNumber":145,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":146,"author":{"gitId":"thedarie"},"content":"        while (!response.equalsIgnoreCase(\"y\") \u0026\u0026 !response.equalsIgnoreCase(\"n\")) {","lastModifiedDate":"2022-03-14"},{"lineNumber":147,"author":{"gitId":"thedarie"},"content":"            ui.showToUser(ERROR_CORRUPT_SAVED_FILE_MESSAGE_2);","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"thedarie"},"content":"            response \u003d ui.readCommand().trim();","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":150,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":151,"author":{"gitId":"thedarie"},"content":"        assert response.equalsIgnoreCase(\"y\") || response.equalsIgnoreCase(\"n\");","lastModifiedDate":"2022-03-14"},{"lineNumber":152,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":153,"author":{"gitId":"thedarie"},"content":"        if (response.equalsIgnoreCase(\"y\")) {","lastModifiedDate":"2022-03-14"},{"lineNumber":154,"author":{"gitId":"thedarie"},"content":"            wipeSaveData();","lastModifiedDate":"2022-03-23"},{"lineNumber":155,"author":{"gitId":"thedarie"},"content":"        } else {","lastModifiedDate":"2022-03-14"},{"lineNumber":156,"author":{"gitId":"thedarie"},"content":"            ui.showToUser(ERROR_CORRUPT_SAVED_FILE_MESSAGE_3);","lastModifiedDate":"2022-03-10"},{"lineNumber":157,"author":{"gitId":"jltha"},"content":"            System.exit(0);","lastModifiedDate":"2022-03-26"},{"lineNumber":158,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":159,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":161,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":63,"yuzhongng":2,"thedarie":96}},{"path":"src/main/java/seedu/sherpass/util/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.util;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.util.timetable.Timetable;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.GOODBYE_MESSAGE;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.WELCOME_MESSAGE_ONE;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.WELCOME_MESSAGE_TWO;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"public class Ui {","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"    private static final Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"    private static final String PARTITION_LINE \u003d \"______________________________\"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"            + \"______________________________\";","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"    private static final String LOGO \u003d \"  ____  _\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"            + \" / ___|| |__   ___ _ __ \"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"            + \"_ __   __ _ ___ ___\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"            + \" \\\\___ \\\\| \u0027_ \\\\ / _ \\\\ \u0027__| \"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"            + \"\u0027_ \\\\ / _` / __/ __|\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"            + \"  ___) | | | |  __/ |  \"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"            + \"| |_) | (_| \\\\__ \\\\__ \\\\\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"            + \" |____/|_| |_|\\\\___|_|  \"","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"            + \"| .__/ \\\\__,_|___/___/\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"            + \"                       \"","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"            + \"|_|\";","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"     * Returns any user input entered by the user through","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"     * the program\u0027s terminal. User Input is also trimmed to","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"     * remove white spaces.","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"     * @return User input","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"    public String readCommand() {","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"        return in.nextLine().trim();","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"     * Returns a boolean value to see if there is any more","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"     * user inputs.","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"     * @return Returns true if there is still user inputs. Method may","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"     *         be blocked while waiting for user inputs and scanner does","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"     *         not continue scanning for inputs when it is waiting.","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"    public boolean hasInput() {","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"        return in.hasNext();","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"     * Prints a partition line.","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"    public void showLine() {","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"        System.out.println(PARTITION_LINE);","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"     * Prints a message from the program to the user.","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"     * Can be in the form of exceptions that have occurred,","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"     * requests for inputs, command acknowledgement and so on.","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"jltha"},"content":"     * @param message Message to show to the user.","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"jltha"},"content":"    public void showToUser(String... message) {","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"jltha"},"content":"        for (String s : message) {","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"jltha"},"content":"            System.out.println(s);","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"    private void showReminderMessage(TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"jltha"},"content":"        int pendingTaskCount \u003d taskList.getPendingTasksCount();","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"jltha"},"content":"        if (pendingTaskCount \u003e 0) {","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"You have \" + pendingTaskCount + \" pending task(s).\\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"jltha"},"content":"                    + \"Head over to the study session with \u0027study\u0027 to complete them.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"jltha"},"content":"     * Prints a welcome message to greet the user.","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"jltha"},"content":"     * Shows the user the timetable and the number of pending tasks.","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"jltha"},"content":"     * @param taskList List of task in array representation","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"jltha"},"content":"     * @param ui User interface","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"jltha"},"content":"    public void showWelcomeMessage(TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"jltha"},"content":"        String welcomeMessage \u003d PARTITION_LINE + LS + WELCOME_MESSAGE_ONE","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"jltha"},"content":"                + LOGO + LS + PARTITION_LINE + LS + WELCOME_MESSAGE_TWO;","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"jltha"},"content":"        showToUser(welcomeMessage);","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"jltha"},"content":"        Timetable.showTodaySchedule(taskList, ui);","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"jltha"},"content":"        showReminderMessage(taskList, ui);","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"jltha"},"content":"        showLine();","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"jltha"},"content":"     * Prints a goodbye message to the user.","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"jltha"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"jltha"},"content":"        System.out.println(GOODBYE_MESSAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":107,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":108,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"jltha"},"content":"     * Returns a string of repeated characters.","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"jltha"},"content":"     * @param character The character to print.","lastModifiedDate":"2022-03-20"},{"lineNumber":112,"author":{"gitId":"jltha"},"content":"     * @param number The number of times to print that character.","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"jltha"},"content":"     * @return Returns a concatenated string of repeated characters.","lastModifiedDate":"2022-03-20"},{"lineNumber":114,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":115,"author":{"gitId":"jltha"},"content":"    public String getRepeatedCharacters(String character, long number) {","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"jltha"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"yuzhongng"},"content":"        for (int i \u003d 0; i \u003c number; i++) {","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"jltha"},"content":"            output.append(character);","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":120,"author":{"gitId":"jltha"},"content":"        return output.toString();","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":122,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":118,"yuzhongng":2,"thedarie":2}},{"path":"src/main/java/seedu/sherpass/util/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuzhongng"},"content":"package seedu.sherpass.util.parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.command.Command;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.command.AddCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.command.ClearCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.command.DeleteCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.command.EditCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.command.ExitCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.command.HelpCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.command.MarkCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.command.ShowCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.command.StudyCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.command.UnmarkCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Index.COMMAND_CONTENT_INDEX;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.Index.HELP_OPTIONS_INDEX;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.Index.OPTIONS_INDEX;","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.EMPTY_STRING;","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.Message.ERROR_INVALID_INPUT_MESSAGE;","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.WHITESPACE;","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"yuzhongng"},"content":"public class Parser {","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"yuzhongng"},"content":"    private static Command prepareHelp(String userInput) {","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"yuzhongng"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"yuzhongng"},"content":"            String[] parsedInput \u003d userInput.split(\" \", 2);","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"yuzhongng"},"content":"            return new HelpCommand(parsedInput[HELP_OPTIONS_INDEX]);","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"yuzhongng"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"yuzhongng"},"content":"            return new HelpCommand(\"show help list\");","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"yuzhongng"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"yuzhongng"},"content":"     * Parses the user command input.","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"yuzhongng"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"yuzhongng"},"content":"     * @param userInput User command.","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"yuzhongng"},"content":"     * @param taskList  Array of tasks.","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"yuzhongng"},"content":"     * @return Command type matching the user command.","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"yuzhongng"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"yuzhongng"},"content":"    public static Command parseCommand(String userInput, TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"        String[] splitInput \u003d userInput.split(WHITESPACE, 2);","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"yuzhongng"},"content":"        String commandWord \u003d splitInput[OPTIONS_INDEX].toLowerCase().trim();","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"        String argument \u003d (splitInput.length \u003e 1)","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"                ? splitInput[COMMAND_CONTENT_INDEX].trim() : EMPTY_STRING;","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"yuzhongng"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"yuzhongng"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"            return TaskParser.prepareMarkOrUnmark(argument, MarkCommand.COMMAND_WORD, taskList);","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"yuzhongng"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"            return TaskParser.prepareMarkOrUnmark(argument, UnmarkCommand.COMMAND_WORD, taskList);","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"yuzhongng"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"            return TaskParser.prepareAdd(argument, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"yuzhongng"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"            return TaskParser.prepareEdit(argument, taskList, ui);","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"yuzhongng"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"            return TaskParser.prepareDelete(argument, taskList, ui);","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"yuzhongng"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"yuzhongng"},"content":"            return new ClearCommand();","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"yuzhongng"},"content":"        case StudyCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"yuzhongng"},"content":"            return new StudyCommand();","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"yuzhongng"},"content":"        case ShowCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"yuzhongng"},"content":"            return TimetableParser.prepareShow(splitInput);","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"yuzhongng"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"yuzhongng"},"content":"            return prepareHelp(userInput);","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"yuzhongng"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"yuzhongng"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"yuzhongng"},"content":"        default:","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(ERROR_INVALID_INPUT_MESSAGE);","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"yuzhongng"},"content":"            return null;","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"yuzhongng"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"jltha":11,"yuzhongng":65}},{"path":"src/main/java/seedu/sherpass/util/parser/StorageParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuzhongng"},"content":"package seedu.sherpass.util.parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"yuzhongng"},"content":"import org.json.JSONException;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"yuzhongng"},"content":"import org.json.JSONObject;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.enums.Frequency;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.exception.InvalidInputException;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.task.Task;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"yuzhongng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"yuzhongng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.inputWithTimeFormat;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"yuzhongng"},"content":"public class StorageParser {","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"yuzhongng"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"yuzhongng"},"content":"     * Returns a task object parsed from the data file.","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"yuzhongng"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"yuzhongng"},"content":"     * @param taskData The data of a task in JSON.","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"yuzhongng"},"content":"     * @return Task containing the saved data for adding into program\u0027s task array.","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"yuzhongng"},"content":"     * @throws InvalidInputException If saved data is missing content, i.e. task description or date.","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"yuzhongng"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"yuzhongng"},"content":"    public static Task parseSaveData(JSONObject taskData) throws InvalidInputException {","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"yuzhongng"},"content":"        Task parsedTask;","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"yuzhongng"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"yuzhongng"},"content":"            int identifier \u003d taskData.getInt(\"identifier\");","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"yuzhongng"},"content":"            String description \u003d taskData.getString(\"description\");","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"yuzhongng"},"content":"            String byDateString \u003d taskData.getString(\"by_date\");","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"yuzhongng"},"content":"            String doOnStartDateString \u003d taskData.getString(\"do_date_start\");","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"yuzhongng"},"content":"            String doOnEndDateString \u003d taskData.getString(\"do_date_end\");","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"yuzhongng"},"content":"            String frequencyString \u003d taskData.getString(\"frequency\");","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"            int index \u003d taskData.getInt(\"index\");","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"yuzhongng"},"content":"            Frequency repeatFrequency \u003d frequencyString.isBlank()","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"yuzhongng"},"content":"                    ? null : Frequency.valueOf(frequencyString);","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"yuzhongng"},"content":"            LocalDateTime byDate \u003d (byDateString.isBlank()","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"yuzhongng"},"content":"                    ? null : LocalDateTime.parse(byDateString, inputWithTimeFormat));","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"yuzhongng"},"content":"            LocalDateTime doOnStartDateTime \u003d LocalDateTime.parse(doOnStartDateString, inputWithTimeFormat);","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"yuzhongng"},"content":"            LocalDateTime doOnEndDateTime \u003d LocalDateTime.parse(doOnEndDateString, inputWithTimeFormat);","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"yuzhongng"},"content":"            parsedTask \u003d new Task(identifier, description, byDate, doOnStartDateTime,","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"                    doOnEndDateTime, repeatFrequency, index);","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"yuzhongng"},"content":"            String status \u003d taskData.getString(\"status\");","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"yuzhongng"},"content":"            if (status.equals(\"X\")) {","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"yuzhongng"},"content":"                parsedTask.markAsDone();","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"yuzhongng"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"yuzhongng"},"content":"            return parsedTask;","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"        } catch (JSONException | DateTimeParseException | NumberFormatException exception) {","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"yuzhongng"},"content":"            throw new InvalidInputException(exception.getMessage());","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"yuzhongng"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"jltha":4,"yuzhongng":49}},{"path":"src/main/java/seedu/sherpass/util/parser/TaskParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuzhongng"},"content":"package seedu.sherpass.util.parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.command.AddCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.command.Command;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.command.DeleteCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.command.EditCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.command.HelpCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.command.MarkCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.command.UnmarkCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.enums.Frequency;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.exception.InvalidInputException;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"yuzhongng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"thedarie"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"yuzhongng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.CommandParameter.BY_DATE_DELIMITER;","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.CommandParameter.DO_DATE_DELIMITER;","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.CommandParameter.END_TIME_DELIMITER;","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.CommandParameter.FREQUENCY_DELIMITER;","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.CommandParameter.START_TIME_DELIMITER;","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.inputDateOnlyFormat;","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.inputTimeIndependentFormat;","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"thedarie"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.inputWithTimeFormat;","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.timeOnlyFormat;","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Index.EDIT_INDEX;","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Index.EDIT_TASK_CONTENT;","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Index.INDEX_OFFSET;","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"thedarie"},"content":"import static seedu.sherpass.constant.Index.SPLIT_FIRST_PART_INDEX;","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"thedarie"},"content":"import static seedu.sherpass.constant.Index.SPLIT_TWO_PART_LIMIT;","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"thedarie"},"content":"import static seedu.sherpass.constant.Index.START_OF_STRING;","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"thedarie"},"content":"import static seedu.sherpass.constant.Index.WHITESPACE_OFFSET;","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Index.ZERO_INDEX_OFFSET;","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.Message.EMPTY_STRING;","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.ERROR_EMPTY_ADD_COMMANDS_MESSAGE;","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.ERROR_EMPTY_DESCRIPTION_MESSAGE;","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.ERROR_INVALID_DATETIME_MESSAGE;","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.Message.ERROR_INVALID_DELETE_INDEX_MESSAGE;","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.ERROR_INVALID_FREQUENCY_MESSAGE;","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.Message.ERROR_INVALID_MARKING_INDEX_MESSAGE;","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.ERROR_MULTIPLE_ARGS_MESSAGE;","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.Message.HELP_MESSAGE_SPECIFIC_COMMAND;","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"thedarie"},"content":"import static seedu.sherpass.constant.Message.WHITESPACE;","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"public class TaskParser {","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"thedarie"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"thedarie"},"content":"     * Returns the value for a specific parameter.","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"thedarie"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"thedarie"},"content":"     * @param parameter The parameter to retrieve values from (e.g /by, /do)","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"thedarie"},"content":"     * @param argument  The full argument given by the user","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"thedarie"},"content":"     * @return The value given by the user for a particular parameter","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"thedarie"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"jltha"},"content":"    public static String parseArgument(String parameter, String argument)","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"jltha"},"content":"            throws InvalidInputException {","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"thedarie"},"content":"        if (!argument.contains(parameter)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"thedarie"},"content":"            return EMPTY_STRING;","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"thedarie"},"content":"        int indexAfterParameter \u003d argument.indexOf(parameter) + parameter.length() + WHITESPACE_OFFSET;","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"thedarie"},"content":"        String stringAfterParameter \u003d argument.substring(indexAfterParameter);","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"thedarie"},"content":"        String[] splitArguments \u003d stringAfterParameter.split(WHITESPACE, SPLIT_TWO_PART_LIMIT);","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"        if (parameter.equals(FREQUENCY_DELIMITER) \u0026\u0026 argument.contains(parameter)","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"jltha"},"content":"                \u0026\u0026 splitArguments[SPLIT_FIRST_PART_INDEX].isBlank()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"jltha"},"content":"            throw new InvalidInputException(ERROR_INVALID_FREQUENCY_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"thedarie"},"content":"        return splitArguments[SPLIT_FIRST_PART_INDEX];","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":83,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"jltha"},"content":"     * Returns the index of a Command nearest to the task description.","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"jltha"},"content":"     * Command is in the format of \"/by\" \"/do\" \"/start\" \"/end\".","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"jltha"},"content":"     * Checks if any of these commands are present.","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"jltha"},"content":"     * @param fullArgument Full argument from user input.","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"jltha"},"content":"     * @return Index \u003e 0 if command exists. -1 otherwise.","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"jltha"},"content":"    private static int findCommandDelimiterIndex(String fullArgument) {","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"jltha"},"content":"        int byDelimiterIndex \u003d fullArgument.indexOf(BY_DATE_DELIMITER);","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"jltha"},"content":"        int doDelimiterIndex \u003d fullArgument.indexOf(DO_DATE_DELIMITER);","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"jltha"},"content":"        int startDelimiterIndex \u003d fullArgument.indexOf(START_TIME_DELIMITER);","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"jltha"},"content":"        int endDelimiterIndex \u003d fullArgument.indexOf(END_TIME_DELIMITER);","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"jltha"},"content":"        int freqDelimiterIndex \u003d fullArgument.indexOf(FREQUENCY_DELIMITER);","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"jltha"},"content":"        int[] delimiterIndexes \u003d {byDelimiterIndex, doDelimiterIndex, startDelimiterIndex,","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"jltha"},"content":"            endDelimiterIndex, freqDelimiterIndex};","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"jltha"},"content":"        int min \u003d Integer.MAX_VALUE;","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"jltha"},"content":"        for (int delimiterIndex : delimiterIndexes) {","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"jltha"},"content":"            if (delimiterIndex \u003c min \u0026\u0026 delimiterIndex \u003e\u003d 0) {","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"jltha"},"content":"                min \u003d delimiterIndex;","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"thedarie"},"content":"            }","lastModifiedDate":"2022-03-21"},{"lineNumber":105,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":106,"author":{"gitId":"jltha"},"content":"        if (min \u003d\u003d Integer.MAX_VALUE) {","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"jltha"},"content":"            return -1;","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":109,"author":{"gitId":"jltha"},"content":"        return min;","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":111,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":112,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"jltha"},"content":"     * Returns the parsed task description.","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"jltha"},"content":"     * @param fullArgument The entire user input, excluding the command.","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"jltha"},"content":"    public static String parseDescription(String fullArgument) {","lastModifiedDate":"2022-03-28"},{"lineNumber":118,"author":{"gitId":"jltha"},"content":"        String taskDescription;","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"jltha"},"content":"        int commandDelimiterIndex \u003d findCommandDelimiterIndex(fullArgument);","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":121,"author":{"gitId":"jltha"},"content":"            taskDescription \u003d fullArgument.substring(START_OF_STRING, commandDelimiterIndex);","lastModifiedDate":"2022-03-28"},{"lineNumber":122,"author":{"gitId":"jltha"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":123,"author":{"gitId":"jltha"},"content":"            taskDescription \u003d (commandDelimiterIndex \u003d\u003d START_OF_STRING) ? EMPTY_STRING : fullArgument;","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":125,"author":{"gitId":"jltha"},"content":"        return taskDescription.trim();","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":127,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":128,"author":{"gitId":"jltha"},"content":"    public static LocalDateTime prepareTaskDateTime(String taskDate, String time,","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"jltha"},"content":"                                                    DateTimeFormatter dateTimeFormat) throws InvalidInputException {","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"thedarie"},"content":"        try {","lastModifiedDate":"2022-03-24"},{"lineNumber":131,"author":{"gitId":"jltha"},"content":"            return LocalDateTime.parse(taskDate + time, dateTimeFormat);","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"jltha"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"jltha"},"content":"            throw new InvalidInputException(ERROR_INVALID_DATETIME_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":135,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":136,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":137,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":139,"author":{"gitId":"jltha"},"content":"     * Returns a boolean value checking if the frequency attribute","lastModifiedDate":"2022-03-28"},{"lineNumber":140,"author":{"gitId":"jltha"},"content":"     * of a task is valid or not. Verifies if a task is recurring or","lastModifiedDate":"2022-03-28"},{"lineNumber":141,"author":{"gitId":"jltha"},"content":"     * non-recurring.","lastModifiedDate":"2022-03-28"},{"lineNumber":142,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":143,"author":{"gitId":"jltha"},"content":"     * @param frequency The frequency of a task, i.e. daily, weekly, monthly","lastModifiedDate":"2022-03-28"},{"lineNumber":144,"author":{"gitId":"jltha"},"content":"     * @return Returns true if frequency is of type daily, weekly, or monthly,","lastModifiedDate":"2022-03-28"},{"lineNumber":145,"author":{"gitId":"jltha"},"content":"     *         and is also not null. False otherwise.","lastModifiedDate":"2022-03-28"},{"lineNumber":146,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":147,"author":{"gitId":"jltha"},"content":"    public static boolean isValidFreq(Frequency frequency) {","lastModifiedDate":"2022-03-26"},{"lineNumber":148,"author":{"gitId":"jltha"},"content":"        return (frequency !\u003d null)","lastModifiedDate":"2022-03-28"},{"lineNumber":149,"author":{"gitId":"jltha"},"content":"                \u0026\u0026 (frequency.equals(Frequency.DAILY)","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"jltha"},"content":"                        || frequency.equals(Frequency.WEEKLY)","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"jltha"},"content":"                        || frequency.equals(Frequency.MONTHLY));","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":153,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":154,"author":{"gitId":"jltha"},"content":"    private static void prepareAddTaskContent(AddCommand newCommand, String argument)","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"jltha"},"content":"            throws IllegalArgumentException, InvalidInputException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"thedarie"},"content":"        if (argument.isBlank()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":157,"author":{"gitId":"jltha"},"content":"            throw new InvalidInputException(ERROR_EMPTY_ADD_COMMANDS_MESSAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":159,"author":{"gitId":"jltha"},"content":"        if (argument.contains(FREQUENCY_DELIMITER) \u0026\u0026 argument.contains(BY_DATE_DELIMITER)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":160,"author":{"gitId":"jltha"},"content":"            throw new InvalidInputException(ERROR_MULTIPLE_ARGS_MESSAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":161,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":162,"author":{"gitId":"jltha"},"content":"        String taskDescription \u003d parseDescription(argument);","lastModifiedDate":"2022-03-28"},{"lineNumber":163,"author":{"gitId":"jltha"},"content":"        if (taskDescription.isBlank()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"jltha"},"content":"            throw new InvalidInputException(ERROR_EMPTY_DESCRIPTION_MESSAGE);","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":166,"author":{"gitId":"thedarie"},"content":"        String doOnDateString \u003d parseArgument(DO_DATE_DELIMITER, argument);","lastModifiedDate":"2022-03-21"},{"lineNumber":167,"author":{"gitId":"thedarie"},"content":"        String startTimeString \u003d parseArgument(START_TIME_DELIMITER, argument);","lastModifiedDate":"2022-03-23"},{"lineNumber":168,"author":{"gitId":"thedarie"},"content":"        String endTimeString \u003d parseArgument(END_TIME_DELIMITER, argument);","lastModifiedDate":"2022-03-23"},{"lineNumber":169,"author":{"gitId":"jltha"},"content":"        if (doOnDateString.isBlank() || startTimeString.isBlank() || endTimeString.isBlank()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":170,"author":{"gitId":"jltha"},"content":"            throw new InvalidInputException(ERROR_EMPTY_ADD_COMMANDS_MESSAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":171,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":172,"author":{"gitId":"jltha"},"content":"        newCommand.setTaskContent(taskDescription,","lastModifiedDate":"2022-03-26"},{"lineNumber":173,"author":{"gitId":"jltha"},"content":"                prepareTaskDateTime(doOnDateString + WHITESPACE, startTimeString, inputWithTimeFormat),","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"jltha"},"content":"                prepareTaskDateTime(doOnDateString + WHITESPACE, endTimeString, inputWithTimeFormat));","lastModifiedDate":"2022-03-28"},{"lineNumber":175,"author":{"gitId":"jltha"},"content":"        Frequency repeats \u003d Frequency.valueOf(parseArgument(FREQUENCY_DELIMITER, argument).toUpperCase());","lastModifiedDate":"2022-03-26"},{"lineNumber":176,"author":{"gitId":"jltha"},"content":"        newCommand.setFrequency(repeats);","lastModifiedDate":"2022-03-26"},{"lineNumber":177,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":179,"author":{"gitId":"jltha"},"content":"    private static void prepareAddCommandByDate(AddCommand newCommand, String argument, Ui ui) {","lastModifiedDate":"2022-03-28"},{"lineNumber":180,"author":{"gitId":"thedarie"},"content":"        try {","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"jltha"},"content":"            if (argument.contains(BY_DATE_DELIMITER)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":182,"author":{"gitId":"jltha"},"content":"                newCommand.setTaskByDate(prepareTaskDateTime(","lastModifiedDate":"2022-03-28"},{"lineNumber":183,"author":{"gitId":"jltha"},"content":"                        parseArgument(BY_DATE_DELIMITER, argument), EMPTY_STRING, inputTimeIndependentFormat));","lastModifiedDate":"2022-03-26"},{"lineNumber":184,"author":{"gitId":"jltha"},"content":"                return;","lastModifiedDate":"2022-03-26"},{"lineNumber":185,"author":{"gitId":"thedarie"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"jltha"},"content":"            newCommand.setTaskByDate(null);","lastModifiedDate":"2022-03-26"},{"lineNumber":187,"author":{"gitId":"jltha"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":188,"author":{"gitId":"jltha"},"content":"            ui.showToUser(e.getMessage());","lastModifiedDate":"2022-03-26"},{"lineNumber":189,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":190,"author":{"gitId":"thedarie"},"content":"        newCommand.setFrequency(null);","lastModifiedDate":"2022-03-24"},{"lineNumber":191,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":194,"author":{"gitId":"jltha"},"content":"     * Returns an AddCommand containing parsed user inputs ready for adding a task.","lastModifiedDate":"2022-03-28"},{"lineNumber":195,"author":{"gitId":"jltha"},"content":"     * Parse and prepare user inputs for adding of a task.","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":197,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"jltha"},"content":"     * @param argument The argument from the user input, excluding the input command \"add\".","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"jltha"},"content":"     * @param ui User interface.","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"jltha"},"content":"     * @return AddCommand containing parsed user inputs in proper format.","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":202,"author":{"gitId":"jltha"},"content":"    public static Command prepareAdd(String argument, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":203,"author":{"gitId":"jltha"},"content":"        AddCommand newCommand \u003d new AddCommand();","lastModifiedDate":"2022-03-26"},{"lineNumber":204,"author":{"gitId":"yuzhongng"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":205,"author":{"gitId":"jltha"},"content":"            prepareAddTaskContent(newCommand, argument);","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"jltha"},"content":"        } catch (IllegalArgumentException exception) {","lastModifiedDate":"2022-03-26"},{"lineNumber":207,"author":{"gitId":"jltha"},"content":"            if (argument.contains(FREQUENCY_DELIMITER)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":208,"author":{"gitId":"jltha"},"content":"                ui.showToUser(ERROR_INVALID_FREQUENCY_MESSAGE);","lastModifiedDate":"2022-03-28"},{"lineNumber":209,"author":{"gitId":"jltha"},"content":"                ui.showLine();","lastModifiedDate":"2022-03-28"},{"lineNumber":210,"author":{"gitId":"jltha"},"content":"                return new HelpCommand(AddCommand.COMMAND_WORD);","lastModifiedDate":"2022-03-28"},{"lineNumber":211,"author":{"gitId":"yuzhongng"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":212,"author":{"gitId":"jltha"},"content":"            prepareAddCommandByDate(newCommand, argument, ui);","lastModifiedDate":"2022-03-28"},{"lineNumber":213,"author":{"gitId":"jltha"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":214,"author":{"gitId":"jltha"},"content":"            ui.showToUser(e.getMessage());","lastModifiedDate":"2022-03-28"},{"lineNumber":215,"author":{"gitId":"jltha"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-28"},{"lineNumber":216,"author":{"gitId":"jltha"},"content":"            return new HelpCommand(AddCommand.COMMAND_WORD);","lastModifiedDate":"2022-03-28"},{"lineNumber":217,"author":{"gitId":"jltha"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":218,"author":{"gitId":"jltha"},"content":"            ui.showToUser(ERROR_EMPTY_ADD_COMMANDS_MESSAGE);","lastModifiedDate":"2022-03-28"},{"lineNumber":219,"author":{"gitId":"jltha"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-28"},{"lineNumber":220,"author":{"gitId":"jltha"},"content":"            return new HelpCommand(AddCommand.COMMAND_WORD);","lastModifiedDate":"2022-03-28"},{"lineNumber":221,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":222,"author":{"gitId":"thedarie"},"content":"        return newCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":223,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":224,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":225,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":226,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":227,"author":{"gitId":"jltha"},"content":"     * Returns a MarkCommand/UnmarkCommand containing parsed user inputs in proper format.","lastModifiedDate":"2022-03-28"},{"lineNumber":228,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":229,"author":{"gitId":"jltha"},"content":"     * @param argument Argument parsed from user input. Excludes the input command \"mark\" / \"unmark\".","lastModifiedDate":"2022-03-28"},{"lineNumber":230,"author":{"gitId":"jltha"},"content":"     * @param commandWord The input command, i.e. \"mark\" or \"unmark\".","lastModifiedDate":"2022-03-28"},{"lineNumber":231,"author":{"gitId":"jltha"},"content":"     * @param taskList Array representation of the tasks.","lastModifiedDate":"2022-03-28"},{"lineNumber":232,"author":{"gitId":"jltha"},"content":"     * @return A MarkCommand/UnmarkCommand depending on user input.","lastModifiedDate":"2022-03-28"},{"lineNumber":233,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":234,"author":{"gitId":"jltha"},"content":"    public static Command prepareMarkOrUnmark(String argument, String commandWord, TaskList taskList) {","lastModifiedDate":"2022-03-26"},{"lineNumber":235,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":236,"author":{"gitId":"jltha"},"content":"            int markIndex \u003d Integer.parseInt(argument) - 1;","lastModifiedDate":"2022-03-26"},{"lineNumber":237,"author":{"gitId":"jltha"},"content":"            if (commandWord.equals(MarkCommand.COMMAND_WORD)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":238,"author":{"gitId":"jltha"},"content":"                return new MarkCommand(markIndex, taskList);","lastModifiedDate":"2022-03-26"},{"lineNumber":239,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":240,"author":{"gitId":"jltha"},"content":"            return new UnmarkCommand(markIndex, taskList);","lastModifiedDate":"2022-03-26"},{"lineNumber":241,"author":{"gitId":"jltha"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":242,"author":{"gitId":"jltha"},"content":"            System.out.println(ERROR_INVALID_MARKING_INDEX_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":243,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":244,"author":{"gitId":"yuzhongng"},"content":"        return null;","lastModifiedDate":"2022-03-25"},{"lineNumber":245,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":246,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":247,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":248,"author":{"gitId":"jltha"},"content":"    private static LocalDate prepareTaskDate(String taskDate) throws InvalidInputException {","lastModifiedDate":"2022-03-28"},{"lineNumber":249,"author":{"gitId":"yuzhongng"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":250,"author":{"gitId":"jltha"},"content":"            return LocalDate.parse(taskDate, inputDateOnlyFormat);","lastModifiedDate":"2022-03-28"},{"lineNumber":251,"author":{"gitId":"jltha"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":252,"author":{"gitId":"jltha"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2022-03-28"},{"lineNumber":253,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":254,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":255,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":256,"author":{"gitId":"jltha"},"content":"    private static LocalTime prepareTaskTime(String taskTime) throws InvalidInputException {","lastModifiedDate":"2022-03-28"},{"lineNumber":257,"author":{"gitId":"yuzhongng"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":258,"author":{"gitId":"jltha"},"content":"            return LocalTime.parse(taskTime, timeOnlyFormat);","lastModifiedDate":"2022-03-28"},{"lineNumber":259,"author":{"gitId":"jltha"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":260,"author":{"gitId":"jltha"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2022-03-28"},{"lineNumber":261,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":262,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":263,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":264,"author":{"gitId":"jltha"},"content":"    private static void prepareEditTaskContent(EditCommand newCommand, TaskList taskList, String fullArgument)","lastModifiedDate":"2022-03-28"},{"lineNumber":265,"author":{"gitId":"jltha"},"content":"            throws InvalidInputException {","lastModifiedDate":"2022-03-28"},{"lineNumber":266,"author":{"gitId":"jltha"},"content":"        String[] splitInput \u003d fullArgument.split(WHITESPACE, SPLIT_TWO_PART_LIMIT);","lastModifiedDate":"2022-03-28"},{"lineNumber":267,"author":{"gitId":"jltha"},"content":"        newCommand.setEditIndex(Integer.parseInt(splitInput[EDIT_INDEX]) - INDEX_OFFSET, taskList);","lastModifiedDate":"2022-03-28"},{"lineNumber":268,"author":{"gitId":"jltha"},"content":"        String taskDescription \u003d parseDescription(splitInput[EDIT_TASK_CONTENT]);","lastModifiedDate":"2022-03-28"},{"lineNumber":269,"author":{"gitId":"jltha"},"content":"        String doOnDateString \u003d parseArgument(DO_DATE_DELIMITER, splitInput[EDIT_TASK_CONTENT]);","lastModifiedDate":"2022-03-28"},{"lineNumber":270,"author":{"gitId":"jltha"},"content":"        String startTimeString \u003d parseArgument(START_TIME_DELIMITER, splitInput[EDIT_TASK_CONTENT]);","lastModifiedDate":"2022-03-28"},{"lineNumber":271,"author":{"gitId":"jltha"},"content":"        String endTimeString \u003d parseArgument(END_TIME_DELIMITER, splitInput[EDIT_TASK_CONTENT]);","lastModifiedDate":"2022-03-28"},{"lineNumber":272,"author":{"gitId":"jltha"},"content":"        String byDateString \u003d parseArgument(BY_DATE_DELIMITER, splitInput[EDIT_TASK_CONTENT]);","lastModifiedDate":"2022-03-28"},{"lineNumber":273,"author":{"gitId":"jltha"},"content":"        LocalDateTime byDate \u003d (byDateString.isBlank()) ? null","lastModifiedDate":"2022-03-28"},{"lineNumber":274,"author":{"gitId":"jltha"},"content":"                : prepareTaskDateTime(byDateString, EMPTY_STRING, inputTimeIndependentFormat);","lastModifiedDate":"2022-03-28"},{"lineNumber":275,"author":{"gitId":"jltha"},"content":"        LocalDate doOnDate \u003d (doOnDateString.isBlank()) ? null : prepareTaskDate(doOnDateString);","lastModifiedDate":"2022-03-28"},{"lineNumber":276,"author":{"gitId":"jltha"},"content":"        LocalTime startTime \u003d (startTimeString.isBlank()) ? null : prepareTaskTime(startTimeString);","lastModifiedDate":"2022-03-28"},{"lineNumber":277,"author":{"gitId":"jltha"},"content":"        LocalTime endTime \u003d (endTimeString.isBlank()) ? null : prepareTaskTime(endTimeString);","lastModifiedDate":"2022-03-28"},{"lineNumber":278,"author":{"gitId":"jltha"},"content":"        newCommand.setTaskContent(taskDescription, doOnDate, startTime, endTime, byDate);","lastModifiedDate":"2022-03-28"},{"lineNumber":279,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":280,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":281,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":282,"author":{"gitId":"jltha"},"content":"     * Returns a EditCommand containing parsed user inputs ready for","lastModifiedDate":"2022-03-28"},{"lineNumber":283,"author":{"gitId":"jltha"},"content":"     * editing the content of a task.","lastModifiedDate":"2022-03-28"},{"lineNumber":284,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":285,"author":{"gitId":"jltha"},"content":"     * @param argument Argument from the user input. Excludes the input command \"edit\".","lastModifiedDate":"2022-03-28"},{"lineNumber":286,"author":{"gitId":"jltha"},"content":"     * @param taskList Array representation of tasks.","lastModifiedDate":"2022-03-28"},{"lineNumber":287,"author":{"gitId":"jltha"},"content":"     * @param ui User Interface.","lastModifiedDate":"2022-03-28"},{"lineNumber":288,"author":{"gitId":"jltha"},"content":"     * @return EditCommand with parsed inputs in proper format","lastModifiedDate":"2022-03-28"},{"lineNumber":289,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":290,"author":{"gitId":"jltha"},"content":"    public static Command prepareEdit(String argument, TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-28"},{"lineNumber":291,"author":{"gitId":"jltha"},"content":"        if (argument.isBlank()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":292,"author":{"gitId":"jltha"},"content":"            return new HelpCommand(EditCommand.COMMAND_WORD);","lastModifiedDate":"2022-03-28"},{"lineNumber":293,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":294,"author":{"gitId":"jltha"},"content":"        boolean isRepeat \u003d false;","lastModifiedDate":"2022-03-29"},{"lineNumber":295,"author":{"gitId":"jltha"},"content":"        if (argument.contains(FREQUENCY_DELIMITER)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":296,"author":{"gitId":"jltha"},"content":"            isRepeat \u003d true;","lastModifiedDate":"2022-03-29"},{"lineNumber":297,"author":{"gitId":"jltha"},"content":"            argument \u003d argument.replace(FREQUENCY_DELIMITER, EMPTY_STRING).trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":298,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":299,"author":{"gitId":"jltha"},"content":"        EditCommand newCommand \u003d new EditCommand();","lastModifiedDate":"2022-03-28"},{"lineNumber":300,"author":{"gitId":"jltha"},"content":"        newCommand.setIsRepeat(isRepeat);","lastModifiedDate":"2022-03-29"},{"lineNumber":301,"author":{"gitId":"yuzhongng"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":302,"author":{"gitId":"jltha"},"content":"            prepareEditTaskContent(newCommand, taskList, argument);","lastModifiedDate":"2022-03-28"},{"lineNumber":303,"author":{"gitId":"jltha"},"content":"        } catch (NumberFormatException | InvalidInputException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":304,"author":{"gitId":"jltha"},"content":"            ui.showToUser(e.getMessage() + \"\\nPlease follow the command format as shown below:\");","lastModifiedDate":"2022-03-28"},{"lineNumber":305,"author":{"gitId":"jltha"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-28"},{"lineNumber":306,"author":{"gitId":"jltha"},"content":"            return new HelpCommand(EditCommand.COMMAND_WORD);","lastModifiedDate":"2022-03-28"},{"lineNumber":307,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":308,"author":{"gitId":"jltha"},"content":"        return newCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":309,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":310,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":311,"author":{"gitId":"jltha"},"content":"    protected static Command prepareDelete(String argument, TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-27"},{"lineNumber":312,"author":{"gitId":"yuzhongng"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":313,"author":{"gitId":"jltha"},"content":"            boolean isRepeat \u003d false;","lastModifiedDate":"2022-03-29"},{"lineNumber":314,"author":{"gitId":"jltha"},"content":"            if (argument.contains(FREQUENCY_DELIMITER)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":315,"author":{"gitId":"jltha"},"content":"                isRepeat \u003d true;","lastModifiedDate":"2022-03-29"},{"lineNumber":316,"author":{"gitId":"jltha"},"content":"                argument \u003d argument.replace(FREQUENCY_DELIMITER, EMPTY_STRING).trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":317,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":318,"author":{"gitId":"jltha"},"content":"            int deleteIndex \u003d Integer.parseInt(argument) - ZERO_INDEX_OFFSET;","lastModifiedDate":"2022-03-29"},{"lineNumber":319,"author":{"gitId":"jltha"},"content":"            return new DeleteCommand(deleteIndex, taskList, isRepeat);","lastModifiedDate":"2022-03-29"},{"lineNumber":320,"author":{"gitId":"yuzhongng"},"content":"        } catch (IndexOutOfBoundsException | InvalidInputException | NumberFormatException e) {","lastModifiedDate":"2022-03-25"},{"lineNumber":321,"author":{"gitId":"jltha"},"content":"            ui.showToUser(ERROR_INVALID_DELETE_INDEX_MESSAGE + HELP_MESSAGE_SPECIFIC_COMMAND);","lastModifiedDate":"2022-03-27"},{"lineNumber":322,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":323,"author":{"gitId":"yuzhongng"},"content":"        return null;","lastModifiedDate":"2022-03-25"},{"lineNumber":324,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":325,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":326,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":327,"author":{"gitId":"jltha"},"content":"    /*","lastModifiedDate":"2022-03-28"},{"lineNumber":328,"author":{"gitId":"yuzhongng"},"content":"    private static void checkCorrectEditInfoFormat(String fullEditInfo) throws WrongEditInfoFormatException {","lastModifiedDate":"2022-03-25"},{"lineNumber":329,"author":{"gitId":"yuzhongng"},"content":"        // tests to make sure the byDate is before the doOnDate","lastModifiedDate":"2022-03-25"},{"lineNumber":330,"author":{"gitId":"thedarie"},"content":"        if (fullEditInfo.contains(BY_DATE_DELIMITER) \u0026\u0026 fullEditInfo.contains(DO_DATE_DELIMITER)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":331,"author":{"gitId":"thedarie"},"content":"            if (fullEditInfo.indexOf(BY_DATE_DELIMITER) \u003e fullEditInfo.indexOf(DO_DATE_DELIMITER)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":332,"author":{"gitId":"yuzhongng"},"content":"                throw new WrongEditInfoFormatException();","lastModifiedDate":"2022-03-25"},{"lineNumber":333,"author":{"gitId":"yuzhongng"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":334,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":335,"author":{"gitId":"yuzhongng"},"content":"        // tests to make sure the task description is the first input if it is present","lastModifiedDate":"2022-03-25"},{"lineNumber":336,"author":{"gitId":"thedarie"},"content":"        String[] splitEditInfo \u003d fullEditInfo.split(","lastModifiedDate":"2022-03-21"},{"lineNumber":337,"author":{"gitId":"thedarie"},"content":"                \"/by \\\\d{4}/\\\\d{2}/\\\\d{2}|/do_on \\\\d{4}/\\\\d{2}/\\\\d{2}\");","lastModifiedDate":"2022-03-21"},{"lineNumber":338,"author":{"gitId":"yuzhongng"},"content":"        if (splitEditInfo.length \u003e 1) {","lastModifiedDate":"2022-03-25"},{"lineNumber":339,"author":{"gitId":"yuzhongng"},"content":"            throw new WrongEditInfoFormatException();","lastModifiedDate":"2022-03-25"},{"lineNumber":340,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":341,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":342,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":343,"author":{"gitId":"yuzhongng"},"content":"    private static Command handleEdit(int taskNumberToEdit, String fullEditInfo) throws InvalidInputException {","lastModifiedDate":"2022-03-25"},{"lineNumber":344,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":345,"author":{"gitId":"yuzhongng"},"content":"        String[] splitEditInfo \u003d fullEditInfo.split(\" \");","lastModifiedDate":"2022-03-25"},{"lineNumber":346,"author":{"gitId":"yuzhongng"},"content":"        String descriptionToEdit;","lastModifiedDate":"2022-03-25"},{"lineNumber":347,"author":{"gitId":"jltha"},"content":"        LocalDate parsedByDateToEdit;","lastModifiedDate":"2022-03-26"},{"lineNumber":348,"author":{"gitId":"thedarie"},"content":"        LocalDateTime parsedDoOnDateToEdit;","lastModifiedDate":"2022-03-21"},{"lineNumber":349,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":350,"author":{"gitId":"thedarie"},"content":"        if (!splitEditInfo[0].trim().equals(BY_DATE_DELIMITER)","lastModifiedDate":"2022-03-21"},{"lineNumber":351,"author":{"gitId":"thedarie"},"content":"                \u0026\u0026 !(splitEditInfo[0].trim().equals(DO_DATE_DELIMITER))) {","lastModifiedDate":"2022-03-21"},{"lineNumber":352,"author":{"gitId":"yuzhongng"},"content":"            descriptionToEdit \u003d splitEditInfo[0];","lastModifiedDate":"2022-03-25"},{"lineNumber":353,"author":{"gitId":"yuzhongng"},"content":"        } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":354,"author":{"gitId":"yuzhongng"},"content":"            descriptionToEdit \u003d EMPTY_STRING;","lastModifiedDate":"2022-03-25"},{"lineNumber":355,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":356,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":357,"author":{"gitId":"thedarie"},"content":"        parsedByDateToEdit \u003d getParsedDateToEdit(fullEditInfo, BY_DATE_DELIMITER);","lastModifiedDate":"2022-03-21"},{"lineNumber":358,"author":{"gitId":"thedarie"},"content":"        parsedDoOnDateToEdit \u003d getParsedDateToEdit(fullEditInfo, DO_DATE_DELIMITER);","lastModifiedDate":"2022-03-21"},{"lineNumber":359,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":360,"author":{"gitId":"yuzhongng"},"content":"        return new EditCommand(taskNumberToEdit, descriptionToEdit, parsedByDateToEdit, parsedDoOnDateToEdit);","lastModifiedDate":"2022-03-25"},{"lineNumber":361,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":362,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":363,"author":{"gitId":"jltha"},"content":"        return null;","lastModifiedDate":"2022-03-26"},{"lineNumber":364,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":365,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":366,"author":{"gitId":"thedarie"},"content":"    private static LocalDateTime getParsedDateToEdit(String fullEditInfo, String keyword) throws InvalidInputException {","lastModifiedDate":"2022-03-21"},{"lineNumber":367,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":368,"author":{"gitId":"yuzhongng"},"content":"        if (fullEditInfo.contains(keyword)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":369,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":370,"author":{"gitId":"yuzhongng"},"content":"            int offsetForKeyword \u003d keyword.length() + 1;","lastModifiedDate":"2022-03-25"},{"lineNumber":371,"author":{"gitId":"yuzhongng"},"content":"            int offsetForSubstring \u003d fullEditInfo.indexOf(keyword) + offsetForKeyword;","lastModifiedDate":"2022-03-25"},{"lineNumber":372,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":373,"author":{"gitId":"yuzhongng"},"content":"            // gets the substring (of fullEditInfo) after the keyword (, which is either \"/by\" or \"/do_on\")","lastModifiedDate":"2022-03-25"},{"lineNumber":374,"author":{"gitId":"yuzhongng"},"content":"            // splits the substring and obtains the first word (which should be the date of format yyyy/MM/dd)","lastModifiedDate":"2022-03-25"},{"lineNumber":375,"author":{"gitId":"yuzhongng"},"content":"            String dateToEdit \u003d fullEditInfo.substring(offsetForSubstring).split(\" \")[0].trim();","lastModifiedDate":"2022-03-25"},{"lineNumber":376,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":377,"author":{"gitId":"thedarie"},"content":"            return prepareTaskDate(dateToEdit, \"00:00\");","lastModifiedDate":"2022-03-23"},{"lineNumber":378,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":379,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":380,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":381,"author":{"gitId":"yuzhongng"},"content":"        return null;","lastModifiedDate":"2022-03-25"},{"lineNumber":382,"author":{"gitId":"jltha"},"content":"    }*/","lastModifiedDate":"2022-03-28"},{"lineNumber":383,"author":{"gitId":"yuzhongng"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"jltha":229,"yuzhongng":89,"thedarie":65}},{"path":"src/main/java/seedu/sherpass/util/parser/TimerParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuzhongng"},"content":"package seedu.sherpass.util.parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.exception.InvalidTimeException;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.timer.TimerLogic;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"yuzhongng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.CommandParameter.TIMER_CUSTOM_DELIMITER;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.Index.CUSTOM_COMMAND_INDEX;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.Index.CUSTOM_TIMER_INDEX;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.Index.DEFAULT_TIMER_INDEX;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.Index.DEFAULT_TIMER_ONE;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.Index.DEFAULT_TIMER_THREE;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.Index.DEFAULT_TIMER_TWO;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.Index.DEFAULT_TIMER_ZERO;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.Index.STUDY_COMMAND_INDEX;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.Index.TIMER_FORMAT_INDEX;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.Message.ERROR_INVALID_STUDY_INPUT_MESSAGE;","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"yuzhongng"},"content":"public class TimerParser {","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"yuzhongng"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"     * Parses the default timer modes.","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"yuzhongng"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"     * @param defaultTimerChoice Mode number.","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"     * @return Returns the duration of the timer mode selected in seconds.","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"     * @throws InvalidTimeException If defaultTimerChoice does not match","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"     *                              with the given choices.","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"yuzhongng"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"    public static int selectDefaultTimer(String defaultTimerChoice) throws InvalidTimeException {","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"        switch (defaultTimerChoice) {","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"        case \"0\":","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"            return DEFAULT_TIMER_ZERO;","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"        case \"1\":","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"            return DEFAULT_TIMER_ONE;","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"        case \"2\":","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"            return DEFAULT_TIMER_TWO;","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"        case \"3\":","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"            return DEFAULT_TIMER_THREE;","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"yuzhongng"},"content":"        default:","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"            throw new InvalidTimeException();","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"    private static boolean isValidDuration(int duration) {","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"        return duration \u003e 0;","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"yuzhongng"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"yuzhongng"},"content":"     * Parses input to the timer.","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"yuzhongng"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"yuzhongng"},"content":"     * @param parsedInput Parsed input.","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"yuzhongng"},"content":"     * @return Returns duration of custom timer input, or the duration of","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"yuzhongng"},"content":"     *         selected default timer mode in seconds.","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"yuzhongng"},"content":"     * @throws InvalidTimeException If timer input less than or equals to 0 or there is","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"yuzhongng"},"content":"     *                              multiple timer inputs.","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"yuzhongng"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"yuzhongng"},"content":"    public static int parseTimerInput(String[] parsedInput) throws InvalidTimeException {","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"        if (parsedInput[TIMER_FORMAT_INDEX].trim().contains(TIMER_CUSTOM_DELIMITER)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"            if (parsedInput[TIMER_FORMAT_INDEX].trim().indexOf(TIMER_CUSTOM_DELIMITER) !\u003d CUSTOM_COMMAND_INDEX) {","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"yuzhongng"},"content":"                throw new InvalidTimeException();","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"yuzhongng"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"            String[] customTimerInput \u003d parsedInput[TIMER_FORMAT_INDEX].split(TIMER_CUSTOM_DELIMITER, 2);","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"yuzhongng"},"content":"            int customDuration \u003d Integer.parseInt(customTimerInput[CUSTOM_TIMER_INDEX].trim());","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"yuzhongng"},"content":"            if (!isValidDuration(customDuration)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"yuzhongng"},"content":"                throw new InvalidTimeException();","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"yuzhongng"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"yuzhongng"},"content":"            return customDuration;","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"yuzhongng"},"content":"        return selectDefaultTimer(parsedInput[DEFAULT_TIMER_INDEX].trim());","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"yuzhongng"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"     * Parses commands for study mode.","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"yuzhongng"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"jltha"},"content":"     * @param rawUserInput Raw user input.","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"jltha"},"content":"     * @param ui           UI.","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"jltha"},"content":"     * @param timerLogic Logic class to handle timer functions","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"yuzhongng"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"jltha"},"content":"    public static void parseStudyMode(Ui ui, Storage storage, String rawUserInput,","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"jltha"},"content":"                                      TimerLogic timerLogic) throws IOException {","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"jltha"},"content":"        String[] parsedInput \u003d rawUserInput.trim().split(\" \", 2);","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"jltha"},"content":"        switch (parsedInput[STUDY_COMMAND_INDEX].trim().toLowerCase()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"jltha"},"content":"        case \"start\":","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"jltha"},"content":"            timerLogic.callStartTimer(parsedInput);","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"jltha"},"content":"        case \"pause\":","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"jltha"},"content":"            timerLogic.callPauseTimer();","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"jltha"},"content":"        case \"resume\":","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"jltha"},"content":"            timerLogic.callResumeTimer();","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"jltha"},"content":"        case \"stop\":","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"jltha"},"content":"            timerLogic.callStopTimer();","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"jltha"},"content":"        case \"mark\":","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"laiisaac"},"content":"            timerLogic.markTask(storage, rawUserInput);","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"jltha"},"content":"        case \"show\":","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"jltha"},"content":"            timerLogic.showTasks(storage, parsedInput);","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"yuzhongng"},"content":"        default:","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"jltha"},"content":"            ui.showToUser(ERROR_INVALID_STUDY_INPUT_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"yuzhongng"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"laiisaac":1,"jltha":51,"yuzhongng":56}},{"path":"src/main/java/seedu/sherpass/util/parser/TimetableParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuzhongng"},"content":"package seedu.sherpass.util.parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.command.Command;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.command.ShowCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.exception.InvalidInputException;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"yuzhongng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"yuzhongng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.inputWithoutTimeFormat;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.Index.SHOW_OPTION_INDEX;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.Message.ERROR_INVALID_INPUT_MESSAGE;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"yuzhongng"},"content":"public class TimetableParser {","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"yuzhongng"},"content":"    public static Command prepareShow(String[] splitInput) {","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"yuzhongng"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"yuzhongng"},"content":"            String selection \u003d splitInput[SHOW_OPTION_INDEX].trim();","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"yuzhongng"},"content":"            return parseShowCommandOptions(selection.toLowerCase());","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"yuzhongng"},"content":"        } catch (ArrayIndexOutOfBoundsException | InvalidInputException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"yuzhongng"},"content":"            System.out.println(ERROR_INVALID_INPUT_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"yuzhongng"},"content":"        return null;","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"yuzhongng"},"content":"    private static Command parseShowCommandOptions(String selection) throws InvalidInputException {","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"yuzhongng"},"content":"        if (selection.isBlank()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"yuzhongng"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"yuzhongng"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"yuzhongng"},"content":"            LocalDate dayInput \u003d LocalDate.parse(selection, inputWithoutTimeFormat);","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"yuzhongng"},"content":"            return new ShowCommand(dayInput, null);","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"yuzhongng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"yuzhongng"},"content":"            return new ShowCommand(null, selection);","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"yuzhongng"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"yuzhongng":37}},{"path":"src/main/java/seedu/sherpass/util/timetable/Timetable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuzhongng"},"content":"package seedu.sherpass.util.timetable;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.Task;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"yuzhongng"},"content":"import java.time.Month;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"yuzhongng"},"content":"import static java.time.Month.APRIL;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"yuzhongng"},"content":"import static java.time.Month.AUGUST;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"yuzhongng"},"content":"import static java.time.Month.DECEMBER;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"yuzhongng"},"content":"import static java.time.Month.FEBRUARY;","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"yuzhongng"},"content":"import static java.time.Month.JANUARY;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"yuzhongng"},"content":"import static java.time.Month.JULY;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"yuzhongng"},"content":"import static java.time.Month.JUNE;","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"yuzhongng"},"content":"import static java.time.Month.MARCH;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"yuzhongng"},"content":"import static java.time.Month.MAY;","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"yuzhongng"},"content":"import static java.time.Month.NOVEMBER;","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"yuzhongng"},"content":"import static java.time.Month.OCTOBER;","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"yuzhongng"},"content":"import static java.time.Month.SEPTEMBER;","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.dayOnlyFormat;","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.outputDateOnlyFormat;","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.TimetableConstant.DATE_SPACE_FULL_LENGTH;","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.TimetableConstant.DAYS_IN_A_WEEK;","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"public class Timetable {","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"yuzhongng"},"content":"    private static Timetable timetable;","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"yuzhongng"},"content":"    private static LocalDate localDate;","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"yuzhongng"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"yuzhongng"},"content":"    private static Ui ui;","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"yuzhongng"},"content":"    private Timetable(LocalDate localDate, ArrayList\u003cTask\u003e tasks, Ui ui) {","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"yuzhongng"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"yuzhongng"},"content":"        this.localDate \u003d localDate;","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"yuzhongng"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"yuzhongng"},"content":"    private void setTimetable(LocalDate dateInput, ArrayList\u003cTask\u003e filteredTasks, Ui userInterface) {","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"yuzhongng"},"content":"        localDate \u003d dateInput;","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"yuzhongng"},"content":"        tasks \u003d filteredTasks;","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"yuzhongng"},"content":"        ui \u003d userInterface;","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"yuzhongng"},"content":"    public static Timetable prepareTimetable(LocalDate dateInput, ArrayList\u003cTask\u003e filteredTasks, Ui ui) {","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"yuzhongng"},"content":"        if (timetable \u003d\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"yuzhongng"},"content":"            timetable \u003d new Timetable(dateInput, filteredTasks, ui);","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"yuzhongng"},"content":"        } else {","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"yuzhongng"},"content":"            timetable.setTimetable(dateInput, filteredTasks, ui);","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"yuzhongng"},"content":"        return timetable;","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"yuzhongng"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"yuzhongng"},"content":"     * Generate a timetable for today.","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"yuzhongng"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"yuzhongng"},"content":"     * @param taskList Representation of an array of tasks.","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"yuzhongng"},"content":"     * @param ui       The user interface which interacts with the user.","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"yuzhongng"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"yuzhongng"},"content":"    public static void showTodaySchedule(TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"yuzhongng"},"content":"        LocalDate todayDate \u003d LocalDate.now();","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"yuzhongng"},"content":"        showScheduleByDay(todayDate, taskList, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"yuzhongng"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"yuzhongng"},"content":"     * Generate a timetable for tomorrow.","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"yuzhongng"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"yuzhongng"},"content":"     * @param taskList Representation of an array of tasks.","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"yuzhongng"},"content":"     * @param ui       The user interface which interacts with the user.","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"yuzhongng"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"yuzhongng"},"content":"    public static void showTomorrowSchedule(TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"yuzhongng"},"content":"        LocalDate tomorrowDate \u003d LocalDate.now().plusDays(1);","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"yuzhongng"},"content":"        showScheduleByDay(tomorrowDate, taskList, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"jltha"},"content":"     * Generate a timetable for the day according to the date input.","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"jltha"},"content":"     * @param dateInput The date input.","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"jltha"},"content":"     * @param taskList  Representation of an array of tasks.","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"jltha"},"content":"     * @param ui        The user interface which interacts with the user.","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"jltha"},"content":"    public static void showScheduleByDay(LocalDate dateInput, TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"jltha"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d taskList.getFilteredTasksByDate(dateInput);","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"yuzhongng"},"content":"        Timetable timetable \u003d prepareTimetable(dateInput, filteredTasks, ui);","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"yuzhongng"},"content":"        timetable.printSchedule();","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"yuzhongng"},"content":"    public static void showScheduleOfTheWeek(TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"yuzhongng"},"content":"        LocalDate currentDate \u003d TimetableLogic.resetDateToMonday(LocalDate.now(), ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"yuzhongng"},"content":"        for (int i \u003d 0; i \u003c DAYS_IN_A_WEEK; i++) {","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"yuzhongng"},"content":"            showScheduleByDay(currentDate, taskList, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"yuzhongng"},"content":"            assert (currentDate !\u003d null);","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"yuzhongng"},"content":"            currentDate \u003d currentDate.plus(1, ChronoUnit.DAYS);","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"yuzhongng"},"content":"     * Generate a weekly timetable schedule.","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"jltha"},"content":"     * @param taskList Representation of an array of tasks.","lastModifiedDate":"2022-03-20"},{"lineNumber":107,"author":{"gitId":"jltha"},"content":"     * @param ui       The user interface which interacts with the user.","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"yuzhongng"},"content":"    public static void showNextWeekSchedule(TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"yuzhongng"},"content":"        LocalDate nextMondayDate \u003d LocalDate.now().plusWeeks(1);","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"yuzhongng"},"content":"        LocalDate nextDate \u003d TimetableLogic.resetDateToMonday(nextMondayDate, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"jltha"},"content":"        for (int i \u003d 0; i \u003c DAYS_IN_A_WEEK; i++) {","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"yuzhongng"},"content":"            showScheduleByDay(nextDate, taskList, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"yuzhongng"},"content":"            assert (nextDate !\u003d null);","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"yuzhongng"},"content":"            nextDate \u003d nextDate.plusDays(1);","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"yuzhongng"},"content":"    public static void showMonthlySchedule(TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"yuzhongng"},"content":"        Month currentMonth \u003d LocalDate.now().getMonth();","lastModifiedDate":"2022-03-26"},{"lineNumber":121,"author":{"gitId":"yuzhongng"},"content":"        TimetableLogic.showMonthlySchedule(taskList, ui, currentMonth);","lastModifiedDate":"2022-03-26"},{"lineNumber":122,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":123,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":124,"author":{"gitId":"yuzhongng"},"content":"    public static void showJanuarySchedule(TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":125,"author":{"gitId":"yuzhongng"},"content":"        TimetableLogic.showMonthlySchedule(taskList, ui, JANUARY);","lastModifiedDate":"2022-03-26"},{"lineNumber":126,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":127,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":128,"author":{"gitId":"yuzhongng"},"content":"    public static void showFeburarySchedule(TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"yuzhongng"},"content":"        TimetableLogic.showMonthlySchedule(taskList, ui, FEBRUARY);","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":131,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"yuzhongng"},"content":"    public static void showMarchSchedule(TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"yuzhongng"},"content":"        TimetableLogic.showMonthlySchedule(taskList, ui, MARCH);","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"yuzhongng"},"content":"    public static void showAprilSchedule(TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"yuzhongng"},"content":"        TimetableLogic.showMonthlySchedule(taskList, ui, APRIL);","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":140,"author":{"gitId":"yuzhongng"},"content":"    public static void showMaySchedule(TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"yuzhongng"},"content":"        TimetableLogic.showMonthlySchedule(taskList, ui, MAY);","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":143,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"yuzhongng"},"content":"    public static void showJuneSchedule(TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":145,"author":{"gitId":"yuzhongng"},"content":"        TimetableLogic.showMonthlySchedule(taskList, ui, JUNE);","lastModifiedDate":"2022-03-26"},{"lineNumber":146,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":147,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":148,"author":{"gitId":"yuzhongng"},"content":"    public static void showJulySchedule(TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"yuzhongng"},"content":"        TimetableLogic.showMonthlySchedule(taskList, ui, JULY);","lastModifiedDate":"2022-03-26"},{"lineNumber":150,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":151,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":152,"author":{"gitId":"yuzhongng"},"content":"    public static void showAuguestSchedule(TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":153,"author":{"gitId":"yuzhongng"},"content":"        TimetableLogic.showMonthlySchedule(taskList, ui, AUGUST);","lastModifiedDate":"2022-03-26"},{"lineNumber":154,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"yuzhongng"},"content":"    public static void showSeptemberSchedule(TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":157,"author":{"gitId":"yuzhongng"},"content":"        TimetableLogic.showMonthlySchedule(taskList, ui, SEPTEMBER);","lastModifiedDate":"2022-03-26"},{"lineNumber":158,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":159,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":160,"author":{"gitId":"yuzhongng"},"content":"    public static void showOctoberSchedule(TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":161,"author":{"gitId":"yuzhongng"},"content":"        TimetableLogic.showMonthlySchedule(taskList, ui, OCTOBER);","lastModifiedDate":"2022-03-26"},{"lineNumber":162,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":163,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":164,"author":{"gitId":"yuzhongng"},"content":"    public static void showNovemberSchedule(TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":165,"author":{"gitId":"yuzhongng"},"content":"        TimetableLogic.showMonthlySchedule(taskList, ui, NOVEMBER);","lastModifiedDate":"2022-03-26"},{"lineNumber":166,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":167,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":168,"author":{"gitId":"yuzhongng"},"content":"    public static void showDecemberSchedule(TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":169,"author":{"gitId":"yuzhongng"},"content":"        TimetableLogic.showMonthlySchedule(taskList, ui, DECEMBER);","lastModifiedDate":"2022-03-26"},{"lineNumber":170,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":171,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"yuzhongng"},"content":"    private void printSchedule() {","lastModifiedDate":"2022-03-26"},{"lineNumber":173,"author":{"gitId":"yuzhongng"},"content":"        // assert localDate !\u003d null;","lastModifiedDate":"2022-03-26"},{"lineNumber":174,"author":{"gitId":"yuzhongng"},"content":"        String day \u003d localDate.format(dayOnlyFormat);","lastModifiedDate":"2022-03-26"},{"lineNumber":175,"author":{"gitId":"yuzhongng"},"content":"        String date \u003d localDate.format(outputDateOnlyFormat);","lastModifiedDate":"2022-03-29"},{"lineNumber":176,"author":{"gitId":"yuzhongng"},"content":"        long taskLength \u003d TimetableLogic.findTaskLength(tasks);","lastModifiedDate":"2022-03-26"},{"lineNumber":177,"author":{"gitId":"yuzhongng"},"content":"        long doOnDateLength \u003d DATE_SPACE_FULL_LENGTH;","lastModifiedDate":"2022-03-26"},{"lineNumber":178,"author":{"gitId":"yuzhongng"},"content":"        long partitionLength \u003d TimetableLogic.calcPartitionLength(taskLength, doOnDateLength);","lastModifiedDate":"2022-03-26"},{"lineNumber":179,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":180,"author":{"gitId":"yuzhongng"},"content":"        if (!tasks.isEmpty()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":181,"author":{"gitId":"yuzhongng"},"content":"            TimetablePrinting.printTimetable(day, date, tasks, ui, taskLength, doOnDateLength, partitionLength);","lastModifiedDate":"2022-03-26"},{"lineNumber":182,"author":{"gitId":"yuzhongng"},"content":"        } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":183,"author":{"gitId":"yuzhongng"},"content":"            TimetablePrinting.printEmptyTimetable(ui, day, date, partitionLength);","lastModifiedDate":"2022-03-26"},{"lineNumber":184,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":185,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":186,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":187,"author":{"gitId":"yuzhongng"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"yuzhongng"},"content":"     * Compare the two timetable object","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"yuzhongng"},"content":"     * and whether the arrayList in the timetable are equals.","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"yuzhongng"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"yuzhongng"},"content":"     * @param obj To check if the obj is equals to the given Timetable object.","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"yuzhongng"},"content":"     * @return boolean object.","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"yuzhongng"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"yuzhongng"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":195,"author":{"gitId":"yuzhongng"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"yuzhongng"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2022-03-22"},{"lineNumber":197,"author":{"gitId":"yuzhongng"},"content":"            return false;","lastModifiedDate":"2022-03-22"},{"lineNumber":198,"author":{"gitId":"yuzhongng"},"content":"        } else if (obj instanceof Timetable) {","lastModifiedDate":"2022-03-22"},{"lineNumber":199,"author":{"gitId":"yuzhongng"},"content":"            Timetable timetable \u003d (Timetable) obj;","lastModifiedDate":"2022-03-22"},{"lineNumber":200,"author":{"gitId":"yuzhongng"},"content":"            return timetable.tasks.equals(this.tasks);","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"yuzhongng"},"content":"        } else {","lastModifiedDate":"2022-03-22"},{"lineNumber":202,"author":{"gitId":"yuzhongng"},"content":"            return false;","lastModifiedDate":"2022-03-22"},{"lineNumber":203,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":204,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":205,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"jltha":36,"yuzhongng":169}},{"path":"src/main/java/seedu/sherpass/util/timetable/TimetableLogic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuzhongng"},"content":"package seedu.sherpass.util.timetable;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.task.Task;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"yuzhongng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"yuzhongng"},"content":"import java.time.Month;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"yuzhongng"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"yuzhongng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"yuzhongng"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.Main.LOGGER;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.dayOnlyFormat;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.TimetableConstant.PARTITION_PIPE_LINE_LENGTH;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.TimetableConstant.PARTITION_SPACE_OFFSET_LENGTH;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.TimetableConstant.TASK_SPACE_COMPARE_LENGTH;","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.TimetableConstant.TASK_SPACE_COMPARE_OFFSET_LENGTH;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.TimetableConstant.TASK_SPACE_FULL_LENGTH;","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.TimetableConstant.WHITE_SPACE_FRONT_OFFSET_LENGTH;","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"yuzhongng"},"content":"public class TimetableLogic {","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"yuzhongng"},"content":"    protected static int findTaskDescriptionLength(ArrayList\u003cTask\u003e filteredTasks) {","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"yuzhongng"},"content":"        int max \u003d 0;","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"yuzhongng"},"content":"        for (Task task : filteredTasks) {","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"yuzhongng"},"content":"            int taskLength \u003d task.getDescription().length();","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"yuzhongng"},"content":"            if (taskLength \u003e max) {","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"yuzhongng"},"content":"                max \u003d taskLength;","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"yuzhongng"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"yuzhongng"},"content":"        return max;","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"yuzhongng"},"content":"    protected static int findTaskLength(ArrayList\u003cTask\u003e filteredTasks) {","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"yuzhongng"},"content":"        int descriptionLength \u003d findTaskDescriptionLength(filteredTasks);","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"yuzhongng"},"content":"        if (descriptionLength \u003e TASK_SPACE_COMPARE_LENGTH) {","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"yuzhongng"},"content":"            return descriptionLength + TASK_SPACE_COMPARE_OFFSET_LENGTH;","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"yuzhongng"},"content":"        return TASK_SPACE_FULL_LENGTH;","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"yuzhongng"},"content":"    protected static long calculateColBackWhiteSpace(long maxDescriptionLength,","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"yuzhongng"},"content":"                                                   String description) {","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"yuzhongng"},"content":"        return maxDescriptionLength - (description.length() + WHITE_SPACE_FRONT_OFFSET_LENGTH);","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"yuzhongng"},"content":"    protected static long calcPartitionLength(long taskLength, long dateLength) {","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"yuzhongng"},"content":"        return PARTITION_SPACE_OFFSET_LENGTH + taskLength + dateLength + PARTITION_PIPE_LINE_LENGTH;","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"yuzhongng"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"yuzhongng"},"content":"     * Returns the LocalDate object with its day set to Monday.","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"yuzhongng"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"yuzhongng"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"yuzhongng"},"content":"     * @param localDate The date that is given","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"yuzhongng"},"content":"     * @param ui User interface","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"yuzhongng"},"content":"     * @return Returns LocalDate with the day of Monday","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"yuzhongng"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"yuzhongng"},"content":"    public static LocalDate resetDateToMonday(LocalDate localDate, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"yuzhongng"},"content":"        String currentDate \u003d localDate.format(dayOnlyFormat);","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"yuzhongng"},"content":"        switch (currentDate) {","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"yuzhongng"},"content":"        case \"Mon\":","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"yuzhongng"},"content":"            return localDate;","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"yuzhongng"},"content":"        case \"Tue\":","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"yuzhongng"},"content":"            return localDate.minus(1, ChronoUnit.DAYS);","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"yuzhongng"},"content":"        case \"Wed\":","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"yuzhongng"},"content":"            return localDate.minus(2, ChronoUnit.DAYS);","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"yuzhongng"},"content":"        case \"Thu\":","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"yuzhongng"},"content":"            return localDate.minus(3, ChronoUnit.DAYS);","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"yuzhongng"},"content":"        case \"Fri\":","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"yuzhongng"},"content":"            return localDate.minus(4, ChronoUnit.DAYS);","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"yuzhongng"},"content":"        case \"Sat\":","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"yuzhongng"},"content":"            return localDate.minus(5, ChronoUnit.DAYS);","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"yuzhongng"},"content":"        case \"Sun\":","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"yuzhongng"},"content":"            return localDate.minus(6, ChronoUnit.DAYS);","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"yuzhongng"},"content":"        default:","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(\"Oops! There seems to be some error\\n\"","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"yuzhongng"},"content":"                    + \"while running the system.\\n\"","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"yuzhongng"},"content":"                    + \"Please contact the developers for help.\\n\");","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"yuzhongng"},"content":"            LOGGER.log(Level.WARNING, \"Input that caused the error: \" + currentDate);","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"yuzhongng"},"content":"            return null;","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"yuzhongng"},"content":"    protected static void showMonthlySchedule(TaskList taskList, Ui ui, Month month) {","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"yuzhongng"},"content":"        LocalDate firstDayOfMonth \u003d TimetableLogic.getFirstDayOfMonth(month);","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"yuzhongng"},"content":"        ArrayList\u003cTask\u003e monthlySchedule \u003d taskList.getFilteredTasksByMonth(firstDayOfMonth);","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"yuzhongng"},"content":"        if (monthlySchedule.isEmpty()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(String.format(\"Your schedule is empty for %s\", month));","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"yuzhongng"},"content":"        } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"yuzhongng"},"content":"            taskList.printTaskList(monthlySchedule, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"yuzhongng"},"content":"    protected static LocalDate getFirstDayOfMonth(Month month) {","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"yuzhongng"},"content":"        Month currentMonth \u003d LocalDate.now().getMonth();","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"yuzhongng"},"content":"        int year \u003d LocalDate.now().getYear();","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"yuzhongng"},"content":"        if (isRequestedMonthAfterCurrentMonth(month, currentMonth)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"yuzhongng"},"content":"            return LocalDate.of(year + 1, month, 1);","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"yuzhongng"},"content":"        } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"yuzhongng"},"content":"            return LocalDate.of(year, month, 1);","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"yuzhongng"},"content":"    private static boolean isRequestedMonthAfterCurrentMonth(Month month, Month currentMonth) {","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"yuzhongng"},"content":"        return month.getValue() - currentMonth.getValue() \u003c 0;","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"yuzhongng"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"yuzhongng":113}},{"path":"src/main/java/seedu/sherpass/util/timetable/TimetablePrinting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuzhongng"},"content":"package seedu.sherpass.util.timetable;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.task.Task;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"yuzhongng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.TimetableConstant.BLANK_MARK_STATUS;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.TimetableConstant.BLANK_TIME_PERIOD;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.TimetableConstant.EMPTY_TIMETABLE_SIZE;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.TimetableConstant.STRING_COMPARE_OFFSET;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.TimetableConstant.TIMETABLE_SIZE_OFFSET_ONE;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.TimetableConstant.TIMETABLE_SIZE_OFFSET_TWO;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"yuzhongng"},"content":"public class TimetablePrinting {","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"yuzhongng"},"content":"    protected static void printEmptyTimetable(Ui ui, String day, String date, long partitionLength) {","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"yuzhongng"},"content":"        ui.showToUser(ui.getRepeatedCharacters(\"-\", partitionLength));","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"yuzhongng"},"content":"        ui.showToUser(\"|  Day       |  Time         |  Mark status |  Task Description    |  To complete by  |\");","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"yuzhongng"},"content":"        String thirdRow \u003d \"|  \" + day + \"       |             Your schedule is empty for the day!\";","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"yuzhongng"},"content":"        ui.showToUser(thirdRow + ui.getRepeatedCharacters(\" \",","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"yuzhongng"},"content":"                partitionLength - thirdRow.length() - 1) + \"|\");","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"yuzhongng"},"content":"        String fourthRow \u003d \"| \" + date + \" |\";","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"yuzhongng"},"content":"        ui.showToUser(fourthRow + ui.getRepeatedCharacters(\" \",","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"yuzhongng"},"content":"                partitionLength - fourthRow.length() - 1) + \"|\");","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"yuzhongng"},"content":"        ui.showToUser(ui.getRepeatedCharacters(\"-\", partitionLength));","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"yuzhongng"},"content":"    protected static void printTimetable(String day, String date, ArrayList\u003cTask\u003e filteredTasks,","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"yuzhongng"},"content":"                                         Ui ui, long taskLength, long byDateLength, long partitionLength) {","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"yuzhongng"},"content":"        int j \u003d 0;","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"yuzhongng"},"content":"        String colOne;","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"yuzhongng"},"content":"        String colTwo \u003d \"Time\";","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"yuzhongng"},"content":"        String colThree \u003d \"Mark Status\";","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"yuzhongng"},"content":"        String colFour \u003d \"Task Description\";","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"yuzhongng"},"content":"        String colFive \u003d \"To complete by\";","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"yuzhongng"},"content":"        int loopNumber \u003d (filteredTasks.size() \u003e EMPTY_TIMETABLE_SIZE)","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"yuzhongng"},"content":"                ? filteredTasks.size() + TIMETABLE_SIZE_OFFSET_ONE","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"yuzhongng"},"content":"                : filteredTasks.size() + TIMETABLE_SIZE_OFFSET_TWO;","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"yuzhongng"},"content":"        for (int i \u003d 0; i \u003c loopNumber; i++) {","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"yuzhongng"},"content":"            if ((i \u003d\u003d 0) || (i \u003d\u003d loopNumber - 1)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"yuzhongng"},"content":"                ui.showToUser(ui.getRepeatedCharacters(\"-\", partitionLength));","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"yuzhongng"},"content":"                continue;","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"yuzhongng"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"yuzhongng"},"content":"            colOne \u003d (i \u003d\u003d 1) ? \"Day\" : ((i \u003d\u003d 2) ? day : date);","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"yuzhongng"},"content":"            if (i \u003e\u003d 2) {","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"yuzhongng"},"content":"                colTwo \u003d (j \u003c filteredTasks.size()) ? filteredTasks.get(j).getTimePeriod() : BLANK_TIME_PERIOD;","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"yuzhongng"},"content":"                colThree \u003d (j \u003c filteredTasks.size()) ? filteredTasks.get(j).getStatusIcon() : BLANK_MARK_STATUS;","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"yuzhongng"},"content":"                colFour \u003d (j \u003c filteredTasks.size())","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"yuzhongng"},"content":"                        ? (filteredTasks.get(j).getIndex() + \". \" + filteredTasks.get(j).getDescription())","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"yuzhongng"},"content":"                        : ui.getRepeatedCharacters(\" \", taskLength - STRING_COMPARE_OFFSET);","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"yuzhongng"},"content":"                colFive \u003d (j \u003c filteredTasks.size()) ? filteredTasks.get(j).getByDateString()","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"yuzhongng"},"content":"                        : ui.getRepeatedCharacters(\" \", byDateLength - STRING_COMPARE_OFFSET);","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"yuzhongng"},"content":"                j++;","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"yuzhongng"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"yuzhongng"},"content":"            printRow(colOne, colTwo, colThree, colFour, colFive, taskLength, byDateLength, i, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"yuzhongng"},"content":"    private static void printRow(String colOne, String colTwo, String colThree,","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"yuzhongng"},"content":"                                 String colFour, String colFive,","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"yuzhongng"},"content":"                                 long taskLength, long doOnDateLength, int rowNumber, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"yuzhongng"},"content":"        String taskColumnBackWhiteSpace \u003d ui.getRepeatedCharacters(\" \",","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"yuzhongng"},"content":"                TimetableLogic.calculateColBackWhiteSpace(taskLength, colFour));","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"yuzhongng"},"content":"        String doOnDateColumnBackWhiteSpace \u003d ui.getRepeatedCharacters(\" \",","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"yuzhongng"},"content":"                TimetableLogic.calculateColBackWhiteSpace(doOnDateLength, colFive));","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"yuzhongng"},"content":"        if (rowNumber \u003d\u003d 1) {","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(\"|  \" + colOne + \"       |  \" + colTwo + \"         |  \"","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"yuzhongng"},"content":"                    + colThree + \" |  \" + colFour + taskColumnBackWhiteSpace","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"yuzhongng"},"content":"                    + \"|  \" + colFive + doOnDateColumnBackWhiteSpace + \"|\");","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"yuzhongng"},"content":"        } else if (rowNumber \u003d\u003d 2) {","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(\"|  \" + colOne + \"       | \" + colTwo + \" |      \"","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"yuzhongng"},"content":"                    + colThree + \"       |  \" + colFour + taskColumnBackWhiteSpace","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"yuzhongng"},"content":"                    + \"|  \" + colFive + doOnDateColumnBackWhiteSpace + \"|\");","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"yuzhongng"},"content":"        } else if (rowNumber \u003d\u003d 3) {","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(\"| \" + colOne + \" | \" + colTwo + \" |      \" + colThree","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"yuzhongng"},"content":"                    + \"       |  \" + colFour + taskColumnBackWhiteSpace + \"|  \"","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"yuzhongng"},"content":"                    + colFive + doOnDateColumnBackWhiteSpace + \"|\");","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"yuzhongng"},"content":"        } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(\"|            | \" + colTwo + \" |      \" + colThree","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"yuzhongng"},"content":"                    + \"       |  \" + colFour + taskColumnBackWhiteSpace + \"|  \"","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"yuzhongng"},"content":"                    + colFive + doOnDateColumnBackWhiteSpace + \"|\");","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"yuzhongng"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"yuzhongng":85}},{"path":"src/test/java/seedu/sherpass/MainTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"class MainTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"jltha":2,"-":10}},{"path":"src/test/java/seedu/sherpass/util/StorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thedarie"},"content":"package seedu.sherpass.util;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"thedarie"},"content":"import org.json.JSONException;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"thedarie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.exception.InvalidInputException;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.task.Task;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"thedarie"},"content":"import java.io.File;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"thedarie"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"thedarie"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"thedarie"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"thedarie"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"thedarie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"thedarie"},"content":"class StorageTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"thedarie"},"content":"    private static final DateTimeFormatter parseWithTimeFormat \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HH:mm\");","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"thedarie"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"thedarie"},"content":"    public void writeSaveData_oneTask_expectFileCreated() {","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"thedarie"},"content":"        File testFile \u003d new File(\"data/test.json\");","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"thedarie"},"content":"        if (testFile.exists()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"thedarie"},"content":"            testFile.delete();","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"thedarie"},"content":"        try {","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"thedarie"},"content":"            Storage storage \u003d new Storage(\"data/test.json\");","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"thedarie"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"            Task newTask \u003d new Task(-1,\"task_one\",","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"thedarie"},"content":"                    LocalDateTime.parse(\"12/12/2022 12:00\", parseWithTimeFormat),null,","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"                    null, null, 0);","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"            tasks.addTask(newTask, false, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"thedarie"},"content":"            storage.writeSaveData(tasks);","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"thedarie"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"thedarie"},"content":"            exception.printStackTrace();","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"thedarie"},"content":"        assertTrue(testFile.exists());","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"thedarie"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"thedarie"},"content":"    public void load_oneTask_expectTaskList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"thedarie"},"content":"        writeSaveData_oneTask_expectFileCreated();","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"thedarie"},"content":"        try {","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"thedarie"},"content":"            Storage storage \u003d new Storage(\"data/test.json\");","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"thedarie"},"content":"            TaskList actualList \u003d new TaskList(storage.load());","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"thedarie"},"content":"            Task task \u003d actualList.getTasks().get(0);","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"thedarie"},"content":"            assertEquals(task.getDescription(), \"task_one\");","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"thedarie"},"content":"            assertEquals(task.getByDate(), LocalDateTime.parse(\"12/12/2022 12:00\", parseWithTimeFormat));","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"thedarie"},"content":"            assertEquals(task.getDoOnStartDateTime(), null);","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"thedarie"},"content":"            assertEquals(task.getDoOnEndDateTime(), null);","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"thedarie"},"content":"            assertEquals(task.getStatusIcon(), \" \");","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"thedarie"},"content":"        } catch (InvalidInputException | IOException | JSONException exception) {","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"thedarie"},"content":"            exception.printStackTrace();","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"thedarie"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"jltha":4,"thedarie":53}},{"path":"src/test/java/seedu/sherpass/util/TimetableTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.util;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.Task;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.util.timetable.Timetable;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.util.timetable.TimetableLogic;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"thedarie"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.outputDateOnlyFormat;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.dayOnlyFormat;","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.inputTimeIndependentFormat;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.inputWithTimeFormat;","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"public class TimetableTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"yuzhongng"},"content":"    void prepareTimetable_TodayDate_expectTodayTimetable() {","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"        ArrayList\u003cTask\u003e dummyList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"yuzhongng"},"content":"        Task testTask \u003d new Task(1,\"submit DG\", LocalDateTime.now(),","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"yuzhongng"},"content":"                null, null, null, 1);","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"        dummyList.add(testTask);","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"        TaskList testList \u003d new TaskList(dummyList);","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"yuzhongng"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d testList.getFilteredTasksByDate(LocalDate.now());","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"yuzhongng"},"content":"        Timetable actualTimetable \u003d Timetable.prepareTimetable(LocalDate.now(), filteredList, ui);","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"yuzhongng"},"content":"        Timetable expectTimetable \u003d Timetable.prepareTimetable(LocalDate.now(), dummyList, ui);","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"yuzhongng"},"content":"        assertEquals(expectTimetable, actualTimetable);","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"yuzhongng"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"yuzhongng"},"content":"    void prepareTimetable_TodayDate_expectEmptyTimetable() {","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"yuzhongng"},"content":"        ArrayList\u003cTask\u003e testArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"yuzhongng"},"content":"        Task testTask \u003d new Task(1,\"submit DG\", LocalDateTime.now().plusDays(1),","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"yuzhongng"},"content":"                null, null, null, 1);","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"yuzhongng"},"content":"        testArrayList.add(testTask);","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"yuzhongng"},"content":"        TaskList actualTaskList \u003d new TaskList(testArrayList);","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"yuzhongng"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d actualTaskList.getFilteredTasksByDate(LocalDate.now());","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"yuzhongng"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"yuzhongng"},"content":"        Timetable actualTimetable \u003d Timetable.prepareTimetable(LocalDate.now(), filteredList, ui);","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"yuzhongng"},"content":"        Timetable expectTimetable \u003d Timetable.prepareTimetable(LocalDate.now(), new ArrayList\u003c\u003e(), ui);","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"yuzhongng"},"content":"        assertEquals(expectTimetable, actualTimetable);","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"    void showScheduleByDay_CurrentDate_expectTodayTimetable() {","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"        ArrayList\u003cTask\u003e dummyList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"        Task testTask \u003d new Task(-1,\"submit DG\",","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"                LocalDateTime.parse(\"29/3/2022\", inputTimeIndependentFormat),","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"                LocalDateTime.parse(LocalDate.now().format(outputDateOnlyFormat) + \" 09:00\", inputWithTimeFormat),","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"jltha"},"content":"                LocalDateTime.parse(LocalDate.now().format(outputDateOnlyFormat) + \" 11:00\", inputWithTimeFormat),","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"jltha"},"content":"                null, 1);","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"jltha"},"content":"        String expectedOutput \u003d \"------------------------------------------------\"","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"jltha"},"content":"                + \"---------------------------------------\" + System.lineSeparator()","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"jltha"},"content":"                + \"|  Day       |  Time         |  Mark Status |  Task Description    |  To complete by  |\"","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"jltha"},"content":"                + System.lineSeparator()","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"jltha"},"content":"                + \"|  \" + LocalDate.now().format(dayOnlyFormat)","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"jltha"},"content":"                + \"       | \" + testTask.getTimePeriod() + \" |              |  1. submit DG        \"","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"                + \"|  Tue, 29/03/2022 |\"","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"jltha"},"content":"                + System.lineSeparator()","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"jltha"},"content":"                + \"| \" + LocalDate.now().format(outputDateOnlyFormat)","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"jltha"},"content":"                + \" |               |              |                      |                  |\"","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"jltha"},"content":"                + System.lineSeparator()","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"jltha"},"content":"                + \"------------------------------------------------------\"","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"jltha"},"content":"                + \"---------------------------------\"","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"jltha"},"content":"                + System.lineSeparator();","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"jltha"},"content":"        dummyList.add(testTask);","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"jltha"},"content":"        TaskList testList \u003d new TaskList(dummyList);","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"jltha"},"content":"        Timetable.showScheduleByDay(LocalDate.now(), testList, ui);","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"jltha"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"jltha"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"jltha"},"content":"    void showScheduleOfTheWeek_EmptySchedule_expectEmptyTimetableForTheWeek() {","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"jltha"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"jltha"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"jltha"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"jltha"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"yuzhongng"},"content":"        LocalDate currentDate \u003d TimetableLogic.resetDateToMonday(LocalDate.now(), ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"jltha"},"content":"        assert (currentDate !\u003d null);","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"jltha"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"jltha"},"content":"        for (int i \u003d 0; i \u003c 7; i++) {","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"jltha"},"content":"            sb.append(\"---------------------------------------------------------------------------------------\")","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"jltha"},"content":"                    .append(System.lineSeparator())","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"jltha"},"content":"                    .append(\"|  Day       |  Time         |  Mark status |  Task Description    |  To complete by  |\")","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"jltha"},"content":"                    .append(System.lineSeparator())","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"jltha"},"content":"                    .append(\"|  \")","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"jltha"},"content":"                    .append(currentDate.plus(i, ChronoUnit.DAYS).format(dayOnlyFormat))","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"jltha"},"content":"                    .append(\"       |             Your schedule is empty for the day!                        |\")","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"jltha"},"content":"                    .append(System.lineSeparator()).append(\"| \")","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"jltha"},"content":"                    .append(currentDate.plus(i, ChronoUnit.DAYS).format(outputDateOnlyFormat))","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"jltha"},"content":"                    .append(\" |                                                                        |\")","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"jltha"},"content":"                    .append(System.lineSeparator())","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"jltha"},"content":"                    .append(\"---------------------------------------------------------------------------------------\")","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"jltha"},"content":"                    .append(System.lineSeparator());","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"jltha"},"content":"        Timetable.showScheduleOfTheWeek(taskList, ui);","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"jltha"},"content":"        assertEquals(sb.toString(), outContent.toString());","lastModifiedDate":"2022-03-24"},{"lineNumber":117,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":118,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":119,"author":{"gitId":"jltha"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":120,"author":{"gitId":"jltha"},"content":"    void showTodaySchedule_fourNonRepeatingInputsNoTimeClashNoByDate_expectSuccess() {","lastModifiedDate":"2022-03-26"},{"lineNumber":121,"author":{"gitId":"jltha"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-03-24"},{"lineNumber":122,"author":{"gitId":"jltha"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2022-03-24"},{"lineNumber":123,"author":{"gitId":"jltha"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2022-03-24"},{"lineNumber":124,"author":{"gitId":"jltha"},"content":"        ArrayList\u003cTask\u003e dummyList \u003d  new  ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":125,"author":{"gitId":"jltha"},"content":"        String currentDate \u003d LocalDate.now().format(outputDateOnlyFormat);","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"thedarie"},"content":"        dummyList.add(new Task(1,\"A significantly long task description\",","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"jltha"},"content":"                null, LocalDateTime.parse(currentDate + \" 09:00\", inputWithTimeFormat),","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"jltha"},"content":"                LocalDateTime.parse(currentDate + \" 10:00\", inputWithTimeFormat), null, 1));","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"jltha"},"content":"        dummyList.add(new Task(2, \"A somewhat long description\",","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"jltha"},"content":"                null, LocalDateTime.parse(currentDate + \" 10:00\", inputWithTimeFormat),","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"jltha"},"content":"                LocalDateTime.parse(currentDate + \" 11:00\", inputWithTimeFormat),","lastModifiedDate":"2022-03-28"},{"lineNumber":132,"author":{"gitId":"jltha"},"content":"                null, 2));","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"jltha"},"content":"        dummyList.add(new Task(3, \"break time!\",","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"jltha"},"content":"                null, LocalDateTime.parse(currentDate + \" 11:00\", inputWithTimeFormat),","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"jltha"},"content":"                LocalDateTime.parse(currentDate + \" 13:00\", inputWithTimeFormat),","lastModifiedDate":"2022-03-28"},{"lineNumber":136,"author":{"gitId":"jltha"},"content":"                null, 3));","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"jltha"},"content":"        dummyList.add(new Task(4,\"One more task to add\",","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"jltha"},"content":"                null, LocalDateTime.parse(currentDate + \" 13:00\", inputWithTimeFormat),","lastModifiedDate":"2022-03-28"},{"lineNumber":139,"author":{"gitId":"jltha"},"content":"                LocalDateTime.parse(currentDate + \" 15:00\", inputWithTimeFormat),","lastModifiedDate":"2022-03-28"},{"lineNumber":140,"author":{"gitId":"jltha"},"content":"                null, 4));","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"jltha"},"content":"        String currentDay \u003d LocalDate.now().format(dayOnlyFormat);","lastModifiedDate":"2022-03-28"},{"lineNumber":142,"author":{"gitId":"jltha"},"content":"        String expectedOutput \u003d \"------------------------------------------------------------\"","lastModifiedDate":"2022-03-26"},{"lineNumber":143,"author":{"gitId":"jltha"},"content":"                + \"-------------------------------------------------\" + System.lineSeparator()","lastModifiedDate":"2022-03-24"},{"lineNumber":144,"author":{"gitId":"jltha"},"content":"                + \"|  Day       |  Time         |  Mark Status |  Task Description              \"","lastModifiedDate":"2022-03-24"},{"lineNumber":145,"author":{"gitId":"jltha"},"content":"                + \"            |  To complete by  |\" + System.lineSeparator()","lastModifiedDate":"2022-03-24"},{"lineNumber":146,"author":{"gitId":"jltha"},"content":"                + \"|  \" + currentDay","lastModifiedDate":"2022-03-28"},{"lineNumber":147,"author":{"gitId":"jltha"},"content":"                + \"       | \" + dummyList.get(0).getTimePeriod() + \" |              |\"","lastModifiedDate":"2022-03-26"},{"lineNumber":148,"author":{"gitId":"jltha"},"content":"                + \"  1. A significantly long task description  |\"","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"jltha"},"content":"                + \"                  |\" + System.lineSeparator()","lastModifiedDate":"2022-03-24"},{"lineNumber":150,"author":{"gitId":"jltha"},"content":"                + \"| \" + currentDate","lastModifiedDate":"2022-03-28"},{"lineNumber":151,"author":{"gitId":"jltha"},"content":"                + \" | \" + dummyList.get(1).getTimePeriod()","lastModifiedDate":"2022-03-26"},{"lineNumber":152,"author":{"gitId":"jltha"},"content":"                + \" |              |  2. A somewhat long description            |\"","lastModifiedDate":"2022-03-26"},{"lineNumber":153,"author":{"gitId":"jltha"},"content":"                + \"                  |\" + System.lineSeparator()","lastModifiedDate":"2022-03-24"},{"lineNumber":154,"author":{"gitId":"jltha"},"content":"                + \"|            | \" + dummyList.get(2).getTimePeriod() + \" |              |  3. break time!\"","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"jltha"},"content":"                + \"                            |\"","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"jltha"},"content":"                + \"                  |\" + System.lineSeparator()","lastModifiedDate":"2022-03-24"},{"lineNumber":157,"author":{"gitId":"jltha"},"content":"                + \"|            | \" + dummyList.get(3).getTimePeriod() + \" |              | \"","lastModifiedDate":"2022-03-26"},{"lineNumber":158,"author":{"gitId":"jltha"},"content":"                + \" 4. One more task to add                   |\"","lastModifiedDate":"2022-03-26"},{"lineNumber":159,"author":{"gitId":"jltha"},"content":"                + \"                  |\" + System.lineSeparator()","lastModifiedDate":"2022-03-24"},{"lineNumber":160,"author":{"gitId":"jltha"},"content":"                + \"---------------------------------------\"","lastModifiedDate":"2022-03-24"},{"lineNumber":161,"author":{"gitId":"jltha"},"content":"                + \"----------------------------------------------------------------------\"","lastModifiedDate":"2022-03-26"},{"lineNumber":162,"author":{"gitId":"jltha"},"content":"                + System.lineSeparator();","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"jltha"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"jltha"},"content":"        Timetable.showTodaySchedule(new TaskList(dummyList), ui);","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":166,"author":{"gitId":"jltha"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2022-03-24"},{"lineNumber":167,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":168,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"jltha":136,"yuzhongng":29,"thedarie":3}},{"path":"src/test/java/seedu/sherpass/util/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yuzhongng"},"content":"package seedu.sherpass.util.parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"public class ParserTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"jltha":3,"yuzhongng":1}},{"path":"src/test/java/seedu/sherpass/util/parser/TaskParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yuzhongng"},"content":"package seedu.sherpass.util.parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"yuzhongng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.command.AddCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.exception.InvalidInputException;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"yuzhongng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"yuzhongng"},"content":"import java.time.Month;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"yuzhongng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.inputWithTimeFormat;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.EMPTY_STRING;","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.ERROR_EMPTY_ADD_COMMANDS_MESSAGE;","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.ERROR_INVALID_FREQUENCY_MESSAGE;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.WHITESPACE;","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"yuzhongng"},"content":"public class TaskParserTest {","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"yuzhongng"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"    void parseArgument_byParameter_expectDateTime() throws InvalidInputException {","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"yuzhongng"},"content":"        String date \u003d \"foo /by 21/12/2022 /start 09:00\";","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"yuzhongng"},"content":"        String expected \u003d \"21/12/2022\";","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"yuzhongng"},"content":"        String result \u003d TaskParser.parseArgument(\"/by\", date);","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"yuzhongng"},"content":"        assertEquals(result, expected);","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"yuzhongng"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"    void parseArgument_invalidParameter_expectEmptyString() throws InvalidInputException {","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"yuzhongng"},"content":"        String date \u003d \"foo /by 21/12/2022 09:00\";","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"        String actualOutput \u003d TaskParser.parseArgument(\"/do\", date);","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"        assertEquals(EMPTY_STRING, actualOutput);","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"yuzhongng"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"    void parseDescription_validDescription_expectFoo() {","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"yuzhongng"},"content":"        String input \u003d \"foo /by 21/12/2022\";","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"yuzhongng"},"content":"        String expected \u003d \"foo\";","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"        String result \u003d TaskParser.parseDescription(input);","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"yuzhongng"},"content":"        assertEquals(result, expected);","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"yuzhongng"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"    void parseDescription_emptyDescription_expectEmptyString() {","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"yuzhongng"},"content":"        String input \u003d \"/by 21/12/2022\";","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"        String actualOutput \u003d TaskParser.parseDescription(input);","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"        assertEquals(EMPTY_STRING, actualOutput);","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"yuzhongng"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"yuzhongng"},"content":"    void removeRecurringDelimiter_noDelimiter_expectIdenticalString() {","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"        /*","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"yuzhongng"},"content":"        String input \u003d \"foo\";","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"yuzhongng"},"content":"        String actualOutput \u003d TaskParser.removeRecurringDelimiter(input);","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"        assertEquals(input, actualOutput);","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"         */","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"        assertTrue(true);","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"yuzhongng"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"yuzhongng"},"content":"    void removeRecurringDelimiter_haveDelimiter_expectFoo() {","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"jltha"},"content":"        /*String input \u003d \"foo /repeat\";","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"yuzhongng"},"content":"        String actualOutput \u003d TaskParser.removeRecurringDelimiter(input);","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"yuzhongng"},"content":"        String expectedOutput \u003d \"foo\";","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"jltha"},"content":"        assertEquals(expectedOutput, actualOutput);*/","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"jltha"},"content":"        assertTrue(true);","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"yuzhongng"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"jltha"},"content":"    void prepareTaskDate_notDateInput_InvalidInputExceptionThrown() {","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"yuzhongng"},"content":"        String date \u003d \"foo\";","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"yuzhongng"},"content":"        String time \u003d \"bar\";","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"jltha"},"content":"        assertThrows(InvalidInputException.class,","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"jltha"},"content":"            () -\u003e TaskParser.prepareTaskDateTime(date, time, inputWithTimeFormat));","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"yuzhongng"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"jltha"},"content":"    void prepareTaskDate_invalidDateFormat_InvalidInputExceptionThrown() {","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"yuzhongng"},"content":"        String date \u003d \"25-3-2022\";","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"yuzhongng"},"content":"        String time \u003d \"13:00\";","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"jltha"},"content":"        assertThrows(InvalidInputException.class,","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"jltha"},"content":"            () -\u003e TaskParser.prepareTaskDateTime(date, time, inputWithTimeFormat));","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"yuzhongng"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"jltha"},"content":"    void prepareTaskDate_invalidTimeFormat_InvalidInputExceptionThrown() {","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"yuzhongng"},"content":"        String date \u003d \"25/3/2022\";","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"yuzhongng"},"content":"        String time \u003d \"1300\";","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"jltha"},"content":"        assertThrows(InvalidInputException.class,","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"jltha"},"content":"            () -\u003e TaskParser.prepareTaskDateTime(date + WHITESPACE, time, inputWithTimeFormat));","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"yuzhongng"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"jltha"},"content":"    void prepareTaskDate_validInput_expectDateTime() throws InvalidInputException {","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"yuzhongng"},"content":"        String date \u003d \"25/3/2022\";","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"yuzhongng"},"content":"        String time \u003d \"13:00\";","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"jltha"},"content":"        LocalDateTime actualOutput \u003d TaskParser.prepareTaskDateTime(date + WHITESPACE, time, inputWithTimeFormat);","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"yuzhongng"},"content":"        LocalDateTime expectedOutput \u003d LocalDateTime.of(2022, Month.MARCH, 25, 13, 0);","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"yuzhongng"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"jltha"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"jltha"},"content":"    void prepareAdd_validInputWithoutByDateNoRepeat_expectAddCommandNotNull() {","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"jltha"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"jltha"},"content":"        String input \u003d \"add foo /do 26/3/2022 /start 14:00 /end 16:00\";","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"jltha"},"content":"        AddCommand testCommand \u003d (AddCommand) TaskParser.prepareAdd(input, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"jltha"},"content":"        assertNotNull(testCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"jltha"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"jltha"},"content":"    void prepareAdd_validInputWithByDateNoRepeat_expectAddCommandNotNull() {","lastModifiedDate":"2022-03-26"},{"lineNumber":121,"author":{"gitId":"jltha"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-03-26"},{"lineNumber":122,"author":{"gitId":"jltha"},"content":"        String input \u003d \"add foo /do 26/3/2022 /start 14:00 /end 16:00 /by 31/3/2022\";","lastModifiedDate":"2022-03-26"},{"lineNumber":123,"author":{"gitId":"jltha"},"content":"        AddCommand testCommand \u003d (AddCommand) TaskParser.prepareAdd(input, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":124,"author":{"gitId":"jltha"},"content":"        assertNotNull(testCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":125,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":126,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":127,"author":{"gitId":"jltha"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":128,"author":{"gitId":"jltha"},"content":"    void prepareAdd_validInputWithoutByDateWithRepeat_expectAddCommandNotNull() {","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"jltha"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"jltha"},"content":"        String input \u003d \"add foo /do 26/3/2022 /start 14:00 /end 15:00 /repeat daily\";","lastModifiedDate":"2022-03-26"},{"lineNumber":131,"author":{"gitId":"jltha"},"content":"        AddCommand testCommand \u003d (AddCommand) TaskParser.prepareAdd(input, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"jltha"},"content":"        assertNotNull(testCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"jltha"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"jltha"},"content":"    void prepareAdd_validInputWithoutByDateWithInvalidRepeat_expectErrorMessage() {","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"jltha"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"jltha"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"jltha"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-03-26"},{"lineNumber":140,"author":{"gitId":"jltha"},"content":"        String input \u003d \"add foo /do 26/3/2022 /start 14:00 /end 16:00 /repeat\";","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"jltha"},"content":"        TaskParser.prepareAdd(input, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"jltha"},"content":"        assertEquals(ERROR_EMPTY_ADD_COMMANDS_MESSAGE","lastModifiedDate":"2022-03-26"},{"lineNumber":143,"author":{"gitId":"jltha"},"content":"                + System.lineSeparator() + ui.getRepeatedCharacters(\"_\", 60)","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"jltha"},"content":"                + System.lineSeparator(), outContent.toString());","lastModifiedDate":"2022-03-26"},{"lineNumber":145,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":146,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":147,"author":{"gitId":"jltha"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":148,"author":{"gitId":"jltha"},"content":"    void prepareAdd_validInputWithoutByDateWithBlankRepeat_expectErrorMessage() {","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"jltha"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-03-26"},{"lineNumber":150,"author":{"gitId":"jltha"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2022-03-26"},{"lineNumber":151,"author":{"gitId":"jltha"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-03-26"},{"lineNumber":152,"author":{"gitId":"jltha"},"content":"        String input \u003d \"add foo /do 26/3/2022 /start 14:00 /end 16:00 /repeat  \";","lastModifiedDate":"2022-03-26"},{"lineNumber":153,"author":{"gitId":"jltha"},"content":"        TaskParser.prepareAdd(input, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":154,"author":{"gitId":"jltha"},"content":"        assertEquals(ERROR_INVALID_FREQUENCY_MESSAGE","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"jltha"},"content":"                + System.lineSeparator() + ui.getRepeatedCharacters(\"_\", 60)","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"jltha"},"content":"                + System.lineSeparator(), outContent.toString());","lastModifiedDate":"2022-03-26"},{"lineNumber":157,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":158,"author":{"gitId":"yuzhongng"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"jltha":92,"yuzhongng":66}},{"path":"src/test/java/seedu/sherpass/util/parser/TimerParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yuzhongng"},"content":"package seedu.sherpass.util.parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"yuzhongng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.exception.InvalidTimeException;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"yuzhongng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"yuzhongng"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"yuzhongng"},"content":"import static seedu.sherpass.constant.Index.DEFAULT_TIMER_TWO;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"yuzhongng"},"content":"public class TimerParserTest {","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"    void selectDefaultTimer_stringInput_InvalidTimeExceptionThrown() {","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"laiisaac"},"content":"        String timerChoiceInput \u003d \"two\";","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"        assertThrows(InvalidTimeException.class, () -\u003e TimerParser.selectDefaultTimer(timerChoiceInput));","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"laiisaac"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"laiisaac"},"content":"    void selectDefaultTimer_validInput_InvalidTimeExceptionThrown() throws InvalidTimeException {","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"laiisaac"},"content":"        String timerChoiceInput \u003d \"2\";","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"laiisaac"},"content":"        int result \u003d TimerParser.selectDefaultTimer(timerChoiceInput);","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"laiisaac"},"content":"        assertEquals(DEFAULT_TIMER_TWO, result);","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"yuzhongng"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"yuzhongng"},"content":"    void parseTimerInput_noInput_InvalidTimeExceptionThrown() {","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"yuzhongng"},"content":"        String studyCommandInput \u003d \"start \";","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"yuzhongng"},"content":"        String[] timerInput \u003d studyCommandInput.split(\" \", 2);","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"yuzhongng"},"content":"        assertThrows(InvalidTimeException.class, () -\u003e TimerParser.parseTimerInput(timerInput));","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"yuzhongng"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"yuzhongng"},"content":"    void parseTimerInput_blankDefaultTimerInput_InvalidTimeExceptionThrown() {","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"yuzhongng"},"content":"        String studyCommandInput \u003d \"start  \";","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"yuzhongng"},"content":"        String[] timerInput \u003d studyCommandInput.split(\" \", 2);","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"yuzhongng"},"content":"        assertThrows(InvalidTimeException.class, () -\u003e TimerParser.parseTimerInput(timerInput));","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"yuzhongng"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"yuzhongng"},"content":"    void parseTimerInput_blankCustomTimerInput_NumberFormatExceptionThrown() {","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"yuzhongng"},"content":"        String studyCommandInput \u003d \"start /custom  \";","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"yuzhongng"},"content":"        String[] timerInput \u003d studyCommandInput.split(\" \", 2);","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"yuzhongng"},"content":"        assertThrows(NumberFormatException.class, () -\u003e TimerParser.parseTimerInput(timerInput));","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"yuzhongng"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"yuzhongng"},"content":"    void parseTimerInput_defaultTimerTwo_expectOneHour() throws InvalidTimeException {","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"yuzhongng"},"content":"        String studyCommandInput \u003d \"start 2\";","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"yuzhongng"},"content":"        String[] timerInput \u003d studyCommandInput.split(\" \", 2);","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"yuzhongng"},"content":"        int duration \u003d TimerParser.parseTimerInput(timerInput);","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"yuzhongng"},"content":"        assertEquals(DEFAULT_TIMER_TWO, duration);","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"yuzhongng"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"yuzhongng"},"content":"    void parseTimerInput_customInput900_expect900Seconds() throws InvalidTimeException {","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"yuzhongng"},"content":"        String studyCommandInput \u003d \"start /custom 900\";","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"yuzhongng"},"content":"        String[] timerInput \u003d studyCommandInput.split(\" \", 2);","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"yuzhongng"},"content":"        int duration \u003d TimerParser.parseTimerInput(timerInput);","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"yuzhongng"},"content":"        assertEquals(900, duration);","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"yuzhongng"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"yuzhongng"},"content":"    void parseTimerInput_defaultTimerTwoInputs_InvalidTimeExceptionThrown() {","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"yuzhongng"},"content":"        String studyCommandInput \u003d \"start 2 3\";","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"yuzhongng"},"content":"        String[] timerInput \u003d studyCommandInput.split(\" \", 2);","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"yuzhongng"},"content":"        assertThrows(InvalidTimeException.class, () -\u003e TimerParser.parseTimerInput(timerInput));","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"yuzhongng"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"yuzhongng"},"content":"    void parseTimerInput_customTimerThreeInputs_NumberFormatExceptionThrown() {","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"yuzhongng"},"content":"        String studyCommandInput \u003d \"start /custom 600 1500 1200\";","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"yuzhongng"},"content":"        String[] timerInput \u003d studyCommandInput.split(\" \", 2);","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"yuzhongng"},"content":"        assertThrows(NumberFormatException.class, () -\u003e TimerParser.parseTimerInput(timerInput));","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"yuzhongng"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"yuzhongng"},"content":"    void parseTimerInput_validDefaultAndCustomTimerInputs_InvalidTimeExceptionThrown() {","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"yuzhongng"},"content":"        String studyCommandInput \u003d \"start 2 /custom 900\";","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"yuzhongng"},"content":"        String[] timerInput \u003d studyCommandInput.split(\" \", 2);","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"yuzhongng"},"content":"        assertThrows(InvalidTimeException.class, () -\u003e TimerParser.parseTimerInput(timerInput));","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"yuzhongng"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"laiisaac":13,"yuzhongng":69}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@echo off","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"setlocal enableextensions","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"pushd %~dp0","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"call gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"cd build\\libs","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"thedarie"},"content":"if exist data/sherpass.json del data/sherpass.json","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"for /f \"tokens\u003d*\" %%a in (","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u0027dir /b *.jar\u0027","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":") do (","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    set jarloc\u003d%%a","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"cd ..\\..\\text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"thedarie":1,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"thedarie"},"content":"rm -f build/libs/data/sherpass.json 2\u003e/dev/null","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"diff EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"thedarie":1,"-":23}}]
