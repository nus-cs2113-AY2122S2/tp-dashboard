[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it. Something","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"   * In the same dialog, you _may have to set the Project language level_ field to the SDK default option.","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"2. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"3. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"jltha":1,"-":64}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"thedarie"},"content":"    implementation group: \u0027org.json\u0027, name: \u0027json\u0027, version: \u002720211205\u0027","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"    mainClassName \u003d \"seedu.sherpass.Main\"","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"    archiveBaseName \u003d \"Sherpass\"","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jltha":3,"thedarie":1,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"BradenTeo"},"content":"| Display                                             |   Name    |             Github Profile             |              Portfolio              |","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"BradenTeo"},"content":"|-----------------------------------------------------|:---------:|:--------------------------------------:|:-----------------------------------:|","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"BradenTeo"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Daryl   | [Github](https://github.com/thedarie)  |  [Portfolio](docs/team/johndoe.md)  |","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"BradenTeo"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yu Zhong  | [Github](https://github.com/yuzhongng) |  [Portfolio](docs/team/johndoe.md)  |","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"BradenTeo"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) | Isaac Lai | [Github](https://github.com/laiisaac)  |  [Portfolio](docs/team/johndoe.md)  |","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"BradenTeo"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Braden   | [Github](https://github.com/BradenTeo) | [Portfolio](docs/team/BradenTeo.md) |","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"BradenTeo"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Jun Lim  |   [Github](https://github.com/jltha)   |  [Portfolio](docs/team/johndoe.md)  |","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"jltha":1,"yuzhongng":1,"-":2,"BradenTeo":7}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"yuzhongng"},"content":"##Architecture","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"laiisaac"},"content":"### Study session implementation","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"The study session consists of 4 main components:","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"- Parser class","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"- StudyCommand class","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"- TimerLogic class","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"laiisaac"},"content":"- Timer class","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"laiisaac"},"content":"The `StudyCommand` component","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"laiisaac"},"content":"- Accepts user inputs in the study session","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"laiisaac"},"content":"- Facilitates interaction between Parser and TimerLogic","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"laiisaac"},"content":"The `TimerLogic` component","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"laiisaac"},"content":"- Manages the timer component when study session is launched","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"laiisaac"},"content":"- Handles the logic for the timer (e.g. keeps track of state of Timer component)","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"laiisaac"},"content":"- Calls made to Timer component methods are made through this method","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"laiisaac"},"content":"The `Timer` component","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"laiisaac"},"content":"- Inherits from `Thread` class","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"laiisaac"},"content":"- Keeps track of time left when user calls for a timer","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"laiisaac"},"content":"- Can be paused, resumed and stopped","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"laiisaac"},"content":"- Prints to standard output the time remaining in regular intervals","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"laiisaac"},"content":"- Thread is automatically interrupted when time runs out","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"laiisaac"},"content":"#### `Timer` implementation","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"laiisaac"},"content":"Sherpass’ implementation of the timer function in the study session is through the `Timer` class, which inherits ","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"laiisaac"},"content":"from Java’s `Thread` class. When the timer is started by the user, the `Timer` class starts a thread which keeps ","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"laiisaac"},"content":"track of time by sleeping for 1 second, then updating the time left, until the time left in the timer reaches ","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"laiisaac"},"content":"zero, which then interrupts the thread. Starting the timer as a thread allows us to accept user commands like ","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"laiisaac"},"content":"pause and stop for the timer through `StudyCommand` and `TimerLogic`, while `Timer` executes in the background and ","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"laiisaac"},"content":"prints the time remaining at regular intervals.","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"laiisaac"},"content":"Given below is an example usage scenario when the user enters the study timer, starts and stops the timer.","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"laiisaac"},"content":"Step 1. The user executes the `study` command and enters the study session through the `Parser` component, which ","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"laiisaac"},"content":"executes the `StudyCommand`. `StudyCommand` then initialises an instance of `TimerLogic`, which handles the execution","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"laiisaac"},"content":"and logic of user commands during the study session, while the `StudyCommand` accepts the user’s input when the ","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"laiisaac"},"content":"user is in the study session.","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"laiisaac"},"content":"Sequence diagram for `Timer` when user starts and stops a timer:","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"laiisaac"},"content":"![TimerUML](https://user-images.githubusercontent.com/69501969/159708222-a01e9885-1f6e-4e16-8e82-97e9529ab412.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"laiisaac"},"content":"The diagram above depicts the process when user calls start and stop (in step 2 and 3 below). All the methods","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"laiisaac"},"content":"called by Timer are in parallel with other commands, since `Timer` is in a separate thread. For simplicity’s","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"laiisaac"},"content":"sake, parallel frames for the remainder of methods called by `Timer` are omitted.","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"laiisaac"},"content":"Step 2. The user executes `start 1` command to start a 45 minute timer. The input goes through `StudyCommand`, ","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"laiisaac"},"content":"where the Parser is called to parse the command. After parsing, `Parser` calls the method corresponding to ","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"laiisaac"},"content":"the user’s command (`start`) in `TimerLogic`. `TimerLogic` then handles the logic and initialises an instance of","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"laiisaac"},"content":"`Timer` (spawn a thread). `Timer` then automatically updates itself while waiting for the user to issue commands.","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"laiisaac"},"content":"Step 3. The user executes the `stop` command to stop the timer. The same process is followed by using `Parser` to","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"laiisaac"},"content":"parse the command in the study mode, which calls on the respective `callStopTimer` method in `TimerLogic`. Within the","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"laiisaac"},"content":"`callStopTimer` method is a call to a method in `Timer` to stop the timer. Control goes back to the user for further ","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"laiisaac"},"content":"commands.","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":69,"author":{"gitId":"laiisaac"},"content":"#### Design considerations for Timer class","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"laiisaac"},"content":"- Current implementation: Create `Timer` from scratch, using the sleep function of threads to keep ","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"laiisaac"},"content":"track of time","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"laiisaac"},"content":"  - Pros: Same overhead of needing to track the time left of the timer","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"laiisaac"},"content":"  - Pros: No need to follow Java’s `Timer` class syntax, which can be confusing at times","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"laiisaac"},"content":"  - Pros: Implementation is simple and straight-forward","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"laiisaac"},"content":"  - Cons: Have to manage how we interrupt the thread after stopping the timer","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"laiisaac"},"content":"- Alternative: Using Java\u0027s `Timer` class","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"laiisaac"},"content":"  - Pros: The way of keeping track of the time has already been implemented","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"laiisaac"},"content":"  - Pros: Using a standard library usually makes the program less prone to various errors","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"laiisaac"},"content":"  - Cons: Still have to implement a way to keep track of time for our purposes of pausing a timer, since the library ","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"laiisaac"},"content":"  provided by Java has no way of pausing the timer, only stopping it.","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"jltha"},"content":"### Timetable ","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"jltha"},"content":"The **TimeTable** component prints the daily or weekly schedule that the user wishes to see. ","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"jltha"},"content":"The functionalities of the timetable include:","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"jltha"},"content":"- Prints a schedule specific to the date the user inputs ","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"jltha"},"content":"- Prints the schedule for the week the user is at","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"jltha"},"content":"- Prints the schedule of the day whenever the user starts up Sherpass.","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"yuzhongng"},"content":"- The timetable schedule is represented in a table form as shown below","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"yuzhongng"},"content":"  ![timetable format](images/timetable format.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"jltha"},"content":"The **Timetable** is a class which interacts with the following components:","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"jltha"},"content":"1. Parser","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"jltha"},"content":"2. ShowCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"yuzhongng"},"content":"3. TaskList","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"jltha"},"content":"#### Parser Component","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"jltha"},"content":"The **Parser** is a class which parses the inputs which the user enters. ","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"jltha"},"content":"To activate the timetable, the user inputs commands that start with `show`","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"jltha"},"content":"This creates a **ShowCommand** object which will execute its method, thereby printing the timetable.","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"jltha"},"content":"#### ShowCommand Component","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"jltha"},"content":"Depending on the user input that was parsed by **Parser**, **ShowCommand** will call the ","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"jltha"},"content":"relative methods which prints the timetable.","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"yuzhongng"},"content":"#### TaskList Component","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"yuzhongng"},"content":"When the **ShowCommand** is being executed, it will retrieve a filtered list","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"yuzhongng"},"content":"of task by the date that is define in the **ShowCommand** from the **TaskList** component. ","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"yuzhongng"},"content":"The filtered list will represent the schedule that the user has on that date given. ","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"jltha"},"content":"Below is a sequence diagram of what happens ","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"jltha"},"content":"as the user wishes to see the schedule (timetable) for 25th May 2022:","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"jltha"},"content":"![](images/showTodaySchedule.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"jltha"},"content":"The sequence as shown above also happens in the same fashion as the user ","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"jltha"},"content":"requests to see the schedule for any day or the week the user is at.","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":126,"author":{"gitId":"thedarie"},"content":"### Loading saved files","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":128,"author":{"gitId":"thedarie"},"content":"Class diagram of Storage:","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":130,"author":{"gitId":"thedarie"},"content":"![](images/StorageClass.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"thedarie"},"content":"(_Note: some methods and attributes of `TaskList`,`Ui` and `Parser` are omitted here_)","lastModifiedDate":"2022-03-23"},{"lineNumber":133,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":134,"author":{"gitId":"thedarie"},"content":"The storage component","lastModifiedDate":"2022-03-23"},{"lineNumber":135,"author":{"gitId":"thedarie"},"content":"- Can save the content of a `TaskList` to a file in JSON format","lastModifiedDate":"2022-03-23"},{"lineNumber":136,"author":{"gitId":"thedarie"},"content":"- Can load a JSON file to restore a previously saved `TaskList`","lastModifiedDate":"2022-03-23"},{"lineNumber":137,"author":{"gitId":"thedarie"},"content":"- Relies on the `Parser` class to understand the content of a JSON file","lastModifiedDate":"2022-03-23"},{"lineNumber":138,"author":{"gitId":"thedarie"},"content":"- Communicates with the user through the `Ui` class","lastModifiedDate":"2022-03-23"},{"lineNumber":139,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"thedarie"},"content":"The loading of a save file is done with the function","lastModifiedDate":"2022-03-23"},{"lineNumber":141,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":142,"author":{"gitId":"thedarie"},"content":"`Storage#load()` - Loads a saved JSON file and returns an ArrayList of task","lastModifiedDate":"2022-03-23"},{"lineNumber":143,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":144,"author":{"gitId":"thedarie"},"content":"The path of the JSON file is provided as a parameter in the constructor of `Storage` hence ","lastModifiedDate":"2022-03-23"},{"lineNumber":145,"author":{"gitId":"thedarie"},"content":"there is no need for any parameters in the `Storage#load()`. Since a save file will be created in the ","lastModifiedDate":"2022-03-23"},{"lineNumber":146,"author":{"gitId":"thedarie"},"content":"constructor of `Storage` if no such file exists, there should not be any issue with a missing save file.","lastModifiedDate":"2022-03-23"},{"lineNumber":147,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"thedarie"},"content":"The sequence diagram of `Storage#load()` is shown here:","lastModifiedDate":"2022-03-23"},{"lineNumber":149,"author":{"gitId":"thedarie"},"content":"![](images/StorageLoadSD.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":150,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":151,"author":{"gitId":"thedarie"},"content":"In the event where the save file cannot be parsed by `JSONObject`, the function `Storage#handleCorruptedSave()`","lastModifiedDate":"2022-03-23"},{"lineNumber":152,"author":{"gitId":"thedarie"},"content":"will be invoked. The user will get to choose to create a new save file or exit the program for manual inspection.","lastModifiedDate":"2022-03-23"},{"lineNumber":153,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":154,"author":{"gitId":"thedarie"},"content":"The sequence diagram of `Storage#handleCorruptedSave()` is shown here:","lastModifiedDate":"2022-03-23"},{"lineNumber":155,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":156,"author":{"gitId":"thedarie"},"content":"![](images/StorageCorruptedSD.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":157,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":158,"author":{"gitId":"thedarie"},"content":"#### Design considerations for the format of the save file","lastModifiedDate":"2022-03-23"},{"lineNumber":159,"author":{"gitId":"thedarie"},"content":"- JSON (current choice)","lastModifiedDate":"2022-03-23"},{"lineNumber":160,"author":{"gitId":"thedarie"},"content":"  - Pros: Easy to modify by hand if the user wants to","lastModifiedDate":"2022-03-23"},{"lineNumber":161,"author":{"gitId":"thedarie"},"content":"  - Pros: Easy to parse data","lastModifiedDate":"2022-03-23"},{"lineNumber":162,"author":{"gitId":"thedarie"},"content":"- XML","lastModifiedDate":"2022-03-23"},{"lineNumber":163,"author":{"gitId":"thedarie"},"content":"  - Pros:Reasonably easy for users to modify","lastModifiedDate":"2022-03-23"},{"lineNumber":164,"author":{"gitId":"thedarie"},"content":"  - Cons: Difficult to parse","lastModifiedDate":"2022-03-23"},{"lineNumber":165,"author":{"gitId":"thedarie"},"content":"- Text file with custom format","lastModifiedDate":"2022-03-23"},{"lineNumber":166,"author":{"gitId":"thedarie"},"content":"  - Pros: Might use less space (negligible)","lastModifiedDate":"2022-03-23"},{"lineNumber":167,"author":{"gitId":"thedarie"},"content":"  - Cons: Unintuitive for users to modify","lastModifiedDate":"2022-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":171,"author":{"gitId":"laiisaac"},"content":"Students from CEG and SOC","lastModifiedDate":"2022-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":175,"author":{"gitId":"thedarie"},"content":"Sherpass aims to help students to tackle their individual hectic schedules by means of a planner.","lastModifiedDate":"2022-03-23"},{"lineNumber":176,"author":{"gitId":"thedarie"},"content":"Students can manage his/her time by adding their tasks into the application and get reminders","lastModifiedDate":"2022-03-23"},{"lineNumber":177,"author":{"gitId":"thedarie"},"content":"when the tasks are due for completion. Students can also use the study timers within the study session","lastModifiedDate":"2022-03-23"},{"lineNumber":178,"author":{"gitId":"thedarie"},"content":"to block out pockets of time for studying, so that they can better focus during study sessions.","lastModifiedDate":"2022-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"| Version | As a ...  | I want to ...             | So that I can ...                                           |","lastModifiedDate":"2020-05-24"},{"lineNumber":183,"author":{"gitId":"jltha"},"content":"|---------|-----------|---------------------------|-------------------------------------------------------------|","lastModifiedDate":"2022-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"| v1.0    | new user  | see usage instructions    | refer to them when I forget how to use the application      |","lastModifiedDate":"2020-05-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"| v2.0    | user      | find a to-do item by name | locate a to-do without having to go through the entire list |","lastModifiedDate":"2020-05-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"laiisaac":72,"jltha":32,"yuzhongng":12,"thedarie":44,"-":38}},{"path":"docs/puml/StorageClass.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"thedarie"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"thedarie"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"thedarie"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"class Storage {","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"    -saveFilePath:String","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"thedarie"},"content":"    +Storage(filePath:String)","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"thedarie"},"content":"    +writeSaveData(taskList:TaskList):JSONObject","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"thedarie"},"content":"    +load():ArrayList\u003cTask\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"thedarie"},"content":"    +handleCorruptedSave(ui:Ui):void","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"thedarie"},"content":"    -wipeSaveData():void","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"thedarie"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"thedarie"},"content":"class Parser {","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"thedarie"},"content":"    +parseSaveData(taskData:JSONObject):Task","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"thedarie"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"thedarie"},"content":"class TaskList {","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"thedarie"},"content":"    +getTasks():ArrayList\u003cTask\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"thedarie"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"thedarie"},"content":"class Ui","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"thedarie"},"content":"hide Ui members","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"thedarie"},"content":"Storage ..\u003e Parser","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"thedarie"},"content":"Storage ..\u003e TaskList","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"thedarie"},"content":"Storage ..\u003e Ui","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"thedarie"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"thedarie":29}},{"path":"docs/puml/StorageCorruptedSD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"thedarie"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"thedarie"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"thedarie"},"content":"hide footbox","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"thedarie"},"content":"participant Storage as \"storage:Storage\"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"participant UI as \"ui:Ui\"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"participant System as \"\u003c\u003cclass\u003e\u003e\\nSystem\"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"thedarie"},"content":"[-\u003e Storage ++:handleCorruptedSave()","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"thedarie"},"content":"loop input not y or n","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"thedarie"},"content":"    Storage -\u003e UI ++:readCommand()","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"thedarie"},"content":"    UI --\u003e Storage --: input","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"thedarie"},"content":"end","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"thedarie"},"content":"    alt input \u003d n","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"thedarie"},"content":"        Storage -\u003e System ++: exit()","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"thedarie"},"content":"        return","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"thedarie"},"content":"    else","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"thedarie"},"content":"        Storage -\u003e Storage ++: wipeSaveData()","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"thedarie"},"content":"        return","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"thedarie"},"content":"end","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"thedarie"},"content":"return","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"thedarie"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"thedarie":23}},{"path":"docs/puml/StorageLoadSD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"thedarie"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"thedarie"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"thedarie"},"content":"hide footbox","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"thedarie"},"content":"participant Storage as \"storage:Storage\"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"participant List as \"taskList:ArrayList\u003ctask\u003e\"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"participant File as \"\u003c\u003cclass\u003e\u003e\\nFile\"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"thedarie"},"content":"participant JSONObject as \":JSONObject\"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"thedarie"},"content":"participant JSONArray as \"taskArray:JSONArray\"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"thedarie"},"content":"participant Parser as \"\u003c\u003cclass\u003e\u003e\\nParser\"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"thedarie"},"content":"participant Task as \"newTask:Task\"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"thedarie"},"content":"[-\u003e Storage ++: load()","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"thedarie"},"content":"create List","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"thedarie"},"content":"Storage -\u003e List ++:","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"thedarie"},"content":"List --\u003e Storage --","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"thedarie"},"content":"Storage -\u003e File as \"\u003c\u003cclass\u003e\u003e\\nFile\" ++: readAllLines(saveFilePath)","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"thedarie"},"content":"File --\u003e Storage --: fileContent","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"thedarie"},"content":"opt fileContent not empty","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"thedarie"},"content":"    create JSONObject","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"thedarie"},"content":"    Storage -\u003e JSONObject ++: JSONObject(fileContent)","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"thedarie"},"content":"    create JSONArray","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"thedarie"},"content":"    JSONObject -\u003e JSONArray ++:getJSONArray()","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"thedarie"},"content":"    deactivate JSONObject","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"thedarie"},"content":"    JSONArray --\u003e Storage -- : taskArray","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"thedarie"},"content":"    loop all element in taskArray","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"thedarie"},"content":"        Storage -\u003e Parser ++: parseSaveData(taskElement)","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"thedarie"},"content":"        create Task","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"thedarie"},"content":"        Parser -\u003e Task ++: Task()","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"thedarie"},"content":"        Task --\u003e Parser --","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"thedarie"},"content":"        Parser --\u003e Storage --: task","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"thedarie"},"content":"        Storage -\u003e List ++: add(task)","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"thedarie"},"content":"        List --\u003e Storage --","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"thedarie"},"content":"    end","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"thedarie"},"content":"end","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"thedarie"},"content":"return taskList","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"thedarie"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"thedarie":48}},{"path":"docs/puml/TimerClassSD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"laiisaac"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"participant User","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"participant StudyCommand as \":StudyCommand\"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"participant Parser as \"\u003c\u003cclass\u003e\u003e\\nParser\"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"laiisaac"},"content":"participant TimerLogic as \":TimerLogic\"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"participant Timer as \":Timer\"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"laiisaac"},"content":"User -\u003e StudyCommand: start 1","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"laiisaac"},"content":"activate StudyCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"laiisaac"},"content":"StudyCommand -\u003e Parser: parseStudyMode(start 1)","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"activate Parser","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"laiisaac"},"content":"Parser -\u003e TimerLogic: callStartTimer()","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"activate TimerLogic","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"TimerLogic -\u003e Timer: startTimer","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"laiisaac"},"content":"activate Timer","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"laiisaac"},"content":"par","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"laiisaac"},"content":"Timer -\u003e Timer: start","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"laiisaac"},"content":"Timer --\u003e TimerLogic","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"laiisaac"},"content":"end","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"laiisaac"},"content":"par","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"laiisaac"},"content":"Timer -\u003e Timer: update","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"laiisaac"},"content":"TimerLogic --\u003e Parser","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"laiisaac"},"content":"end","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"laiisaac"},"content":"Parser --\u003e StudyCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"laiisaac"},"content":"deactivate Parser","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"laiisaac"},"content":"Timer -\u003e Timer: update","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"laiisaac"},"content":"StudyCommand --\u003e User","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"laiisaac"},"content":"User -\u003e StudyCommand: stop","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"laiisaac"},"content":"Timer -\u003e Timer: update","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"laiisaac"},"content":"StudyCommand -\u003e Parser: parseStudyMode(stop)","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"laiisaac"},"content":"activate Parser","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"laiisaac"},"content":"Parser -\u003e TimerLogic: callStopTimer()","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"laiisaac"},"content":"Timer -\u003e Timer: update","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"laiisaac"},"content":"TimerLogic -\u003e Timer: stopTimer","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"laiisaac"},"content":"Timer -\u003e Timer: stop","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"laiisaac"},"content":"Timer --\u003e TimerLogic","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"laiisaac"},"content":"deactivate Timer","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"laiisaac"},"content":"TimerLogic --\u003e Parser","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"laiisaac"},"content":"Parser --\u003e StudyCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"laiisaac"},"content":"deactivate Parser","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"laiisaac"},"content":"StudyCommand --\u003e User","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"laiisaac"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"laiisaac":55}},{"path":"docs/puml/showTodaySchedule.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"hide footbox","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"participant User as User","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"participant Main as Main","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"participant \"\u003cfont color\u003dred\u003e**\u003c\u003cclass\u003e\u003e** \\nParser\" as Parser","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"participant \":ShowCommand\" as ShowCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"participant \"c:ShowCommand\" as instanceShowCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"participant \"\u003cfont color\u003dred\u003e**\u003c\u003cclass\u003e\u003e** \\nTimetable\" as Timetable","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"User -\u003e Main: \"show 25/5/2022\"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"activate Main","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"Main -\u003e Parser: parseCommand(\"show 25/5/2022\")","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"activate Parser","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"Parser -\u003e Parser: prepareShow(\"25/5/2022\")","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"activate Parser","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"Parser --\u003e Parser:","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"deactivate Parser","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"Parser -\u003e Parser: parseShowCommandOptions(\"25/5/2022\")","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"activate Parser","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"create ShowCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"Parser -\u003e  ShowCommand: new ShowCommand(null, \"25/5/2022\")","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"activate ShowCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"ShowCommand --\u003e Parser: :ShowCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"deactivate ShowCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"Parser --\u003e Parser","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"deactivate Parser","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"Parser --\u003e Main: :ShowCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"deactivate Parser","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"Main -\u003e instanceShowCommand: execute(taskList, ui, storage)","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"activate instanceShowCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"instanceShowCommand -\u003e Timetable: showScheduleByDay(dateInput, filteredtasks, ui)","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"activate Timetable","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"yuzhongng"},"content":"Timetable -\u003e TaskList: getFilteredTasksByDate(dateInput)","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"yuzhongng"},"content":"activate TaskList","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"yuzhongng"},"content":"TaskList --\u003e Timetable: filteredTasks","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"yuzhongng"},"content":"deactivate TaskList","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"Timetable -\u003e Timetable: prepareTimetable(dateInput, filtererdTasks, ui)","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"activate Timetable","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"Timetable -\u003e Timetable: printTimetable(day, date, filteredTasks, ui, taskLength, doOnDateLength, partitionLength)","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"activate Timetable","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"Timetable -\u003e Timetable: printRow(colOne, colTwo, colThree, colFour, colFive, taskLength, doOnDateLength, i, ui)","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"activate Timetable","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"deactivate Timetable","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"Timetable --\u003e Timetable","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"deactivate Timetable","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"Timetable --\u003e Timetable","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"deactivate Timetable","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"Timetable --\u003e Timetable","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"Timetable --\u003e instanceShowCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"deactivate Timetable","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"instanceShowCommand --\u003e Main","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"deactivate instanceShowCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"Main --\u003e User","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"deactivate Main","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"jltha"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"jltha":63,"yuzhongng":6}},{"path":"src/main/java/seedu/sherpass/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"thedarie"},"content":"import org.json.JSONException;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.command.Command;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.command.ExitCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.exception.InvalidInputException;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Parser;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.ERROR_IO_FAILURE_MESSAGE;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"thedarie"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"public class Main {","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"    private Storage storage;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"    private final Ui ui;","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"    public static Logger LOGGER;","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"     * Initialises the program.","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"     * Loading of save file also occurs over here.","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"     * @param  filePath Location of the save file.","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"    public Main(String filePath) {","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"            ui.showToUser(ERROR_IO_FAILURE_MESSAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"            System.exit(1);","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"thedarie"},"content":"        } catch (InvalidInputException | JSONException e) {","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"thedarie"},"content":"            ui.showToUser(e.getMessage());","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"thedarie"},"content":"            storage.handleCorruptedSave(ui);","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"thedarie"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"    private void initialiseLogger() {","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"        LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"        LOGGER.setLevel(Level.FINE);","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"        ConsoleHandler ch \u003d new ConsoleHandler();","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"        ch.setLevel(Level.WARNING);","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"        LOGGER.addHandler(ch);","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"            FileHandler fh \u003d new FileHandler();","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"            fh.setLevel(Level.ALL);","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"            LOGGER.addHandler(fh);","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"            LOGGER.log(Level.SEVERE, \"File logger not working\", e);","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"jltha"},"content":"     * Runs the program.","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"jltha"},"content":"    public void run() {","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"jltha"},"content":"        initialiseLogger();","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"        ui.showWelcomeMessage(taskList, ui);","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"jltha"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"jltha"},"content":"        while (!isExit) {","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"jltha"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"jltha"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"jltha"},"content":"            Command c \u003d Parser.parseCommand(fullCommand, taskList, ui);","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"jltha"},"content":"            if (c !\u003d null) {","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"jltha"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"jltha"},"content":"                isExit \u003d ExitCommand.isExit(c);","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"jltha"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"jltha"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"thedarie"},"content":"        new Main(\"data/sherpass.json\").run();","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"laiisaac":1,"jltha":79,"yuzhongng":1,"thedarie":15}},{"path":"src/main/java/seedu/sherpass/command/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BradenTeo"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"BradenTeo"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"BradenTeo"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"BradenTeo"},"content":"import seedu.sherpass.exception.InputRepeatedException;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"BradenTeo"},"content":"import seedu.sherpass.exception.InvalidInputException;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"thedarie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"BradenTeo"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"BradenTeo"},"content":"    String toAddTaskContent;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"thedarie"},"content":"    LocalDate toAddTaskByDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"thedarie"},"content":"    LocalDate toAddTaskDoOnDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"BradenTeo"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"    public static final String MESSAGE_USAGE \u003d \"Add: Adds a task into the task list.\\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"            + \"A task contains a task description and \\nan optional date\"","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"            + \"to finish the task by.\\n\\nTo execute the command, enter\\n\u0027add \u003ctask_description\u003e \"","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"            + \"/by \u003ctask_due_date\u003e\\n/do_on \u003cdate_to_work_on_task\u003e\u0027.\\n\\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"thedarie"},"content":"            + \"E.g. add do assignment /by 3/6/2022 /do_on 1/6/2022.\\n\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"BradenTeo"},"content":"            + \"All task dates must be given in the format:\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"thedarie"},"content":"            + \"\\t\\td/M/yyyy , where\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"thedarie"},"content":"            + \"year is in 4 digits, month and day in one or two digits.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"BradenTeo"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"BradenTeo"},"content":"     * Creates constructor for add command. Saves task description.","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"BradenTeo"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"BradenTeo"},"content":"     * @param taskDescription    Task Description to add.","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"BradenTeo"},"content":"     * @param taskList           Task array.","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"BradenTeo"},"content":"     * @param byDate             Task due date.","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"BradenTeo"},"content":"     * @param doOnDate           Date to work on task.","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"BradenTeo"},"content":"     * @throws InvalidInputException  If task description is empty.","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"BradenTeo"},"content":"     * @throws InputRepeatedException If task has been added before.","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"BradenTeo"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"thedarie"},"content":"    public AddCommand(String taskDescription, TaskList taskList, LocalDate byDate, LocalDate doOnDate)","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"BradenTeo"},"content":"            throws InvalidInputException, InputRepeatedException {","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"BradenTeo"},"content":"        if (taskDescription.isBlank()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"BradenTeo"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"BradenTeo"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"BradenTeo"},"content":"        if (taskList.isTaskAlreadyAdded(taskDescription)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"BradenTeo"},"content":"            throw new InputRepeatedException();","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"BradenTeo"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"BradenTeo"},"content":"        toAddTaskByDate \u003d byDate;","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"BradenTeo"},"content":"        toAddTaskDoOnDate \u003d doOnDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"BradenTeo"},"content":"        toAddTaskContent \u003d taskDescription;","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"BradenTeo"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"BradenTeo"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"BradenTeo"},"content":"     * Executes the adding of add task.","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"BradenTeo"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"BradenTeo"},"content":"     * @param taskList Task array.","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"BradenTeo"},"content":"     * @param ui       Ui for printing messages.","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"BradenTeo"},"content":"     * @param storage  To append newly added task to save file.","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"BradenTeo"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"BradenTeo"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"BradenTeo"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"BradenTeo"},"content":"        taskList.addTask(toAddTaskContent, toAddTaskByDate, toAddTaskDoOnDate);","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"BradenTeo"},"content":"        storage.writeSaveData(taskList);","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"BradenTeo"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"BradenTeo"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"jltha":4,"thedarie":11,"BradenTeo":49}},{"path":"src/main/java/seedu/sherpass/command/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.Task;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"    public static final String MESSAGE_USAGE \u003d \"Clear: Deletes all tasks in the list.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"            + \"To execute the command, enter \u0027clear\u0027.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"     * Executes the clear command. Deletes all saved tasks in the task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"     * @param taskList Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"     * @param ui       UI for printing messages.","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"     * @param storage  Overwrite saved data after deleting.","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"        ArrayList\u003cTask\u003e tempArray \u003d taskList.getTasks();","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"        if (tempArray.size() \u003c\u003d 0) {","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"There are no tasks to clear!\");","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"            return;","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"        ui.showToUser(\"Are you sure you want to delete all tasks? [Y/N]\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"                + \"You will not be able to recover them after deleting.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"        ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"        while (true) {","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"            String input \u003d ui.readCommand();","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"            if (input.trim().equalsIgnoreCase(\"Y\")","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"                    || input.trim().equalsIgnoreCase(\"Yes\")) {","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"                ui.showToUser(\"Understood. Proceeding to delete\"","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"                        + \"\\nall current tasks in the list..........\");","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"                taskList.deleteAllTasks(ui);","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"                break;","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"            if (input.trim().equalsIgnoreCase(\"N\")","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"                    || input.trim().equalsIgnoreCase(\"No\")) {","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"                ui.showToUser(\"Okay, we\u0027ll keep it as it is.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"                break;","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"Please confirm your choice with either Y (Yes) or N (No).\");","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"thedarie"},"content":"        storage.writeSaveData(taskList);","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":52,"thedarie":3}},{"path":"src/main/java/seedu/sherpass/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"public abstract class Command {","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"jltha":9,"thedarie":2}},{"path":"src/main/java/seedu/sherpass/command/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.exception.InvalidInputException;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Index.DELETE_INDEX;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"    private int deleteIndex;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"    public static final String MESSAGE_USAGE \u003d \"Delete: Deletes a task in the task list.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"            + \"To delete a specific task, enter \u0027delete \u003clist_index\u003e\u0027.\\n\\n Here, \"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"            + \"\u0027list_index\u0027 denotes the index of a task \\n based on the task list under the command \u0027list\u0027.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"            + \"\\nE.g., \u0027delete 2\u0027 deletes the second task in the task list.\\n\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"            + \"Note: You can only delete one task per command input.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"     * Creates constructor for delete command.","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"     * @param parsedInput Contains task description to search for","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"     * @param taskList    Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"     * @throws InvalidInputException If input task description is empty.","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"    public DeleteCommand(String[] parsedInput, TaskList taskList) throws InvalidInputException {","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"        if (parsedInput[DELETE_INDEX].isBlank()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"        if (taskList.isTaskExist(Integer.parseInt(parsedInput[DELETE_INDEX]) - 1)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"            deleteIndex \u003d Integer.parseInt(parsedInput[DELETE_INDEX]) - 1;","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"     * Executes the deletion of a task.","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"     * @param taskList Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"     * @param ui       Ui for printing messages.","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"     * @param storage  Overwrites save file after editing contents in task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"        taskList.removeTask(deleteIndex);","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"thedarie"},"content":"        storage.writeSaveData(taskList);","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":47,"thedarie":2}},{"path":"src/main/java/seedu/sherpass/command/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BradenTeo"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"BradenTeo"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"BradenTeo"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"BradenTeo"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"thedarie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"BradenTeo"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"BradenTeo"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"BradenTeo"},"content":"    int taskIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"BradenTeo"},"content":"    String taskDescription;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"thedarie"},"content":"    LocalDate byDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"thedarie"},"content":"    LocalDate doOnDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"thedarie"},"content":"    public EditCommand(int taskNumber, String taskDescription, LocalDate byDate, LocalDate doOnDate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"BradenTeo"},"content":"        this.taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"BradenTeo"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"BradenTeo"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"BradenTeo"},"content":"        this.doOnDate \u003d doOnDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"BradenTeo"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"BradenTeo"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"BradenTeo"},"content":"        if (!taskDescription.trim().isBlank()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"BradenTeo"},"content":"            taskList.getTasks().get(taskIndex).setTaskDescription(taskDescription);","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"BradenTeo"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"thedarie"},"content":"        if (byDate !\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"BradenTeo"},"content":"            taskList.getTasks().get(taskIndex).setByDate(byDate);","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"BradenTeo"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"thedarie"},"content":"        if (doOnDate !\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"BradenTeo"},"content":"            taskList.getTasks().get(taskIndex).setDoOnDate(doOnDate);","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"BradenTeo"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"BradenTeo"},"content":"        printEditTaskMessage(taskList, taskIndex);","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"BradenTeo"},"content":"        storage.writeSaveData(taskList);","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"BradenTeo"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"BradenTeo"},"content":"    private void printEditTaskMessage(TaskList taskList, int taskIndex) {","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"BradenTeo"},"content":"        System.out.println(\"Ok, I\u0027ve edited this task as such!\"","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"BradenTeo"},"content":"                + \"\\n  \" + taskList.getTasks().get(taskIndex));","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"BradenTeo"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"BradenTeo"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"thedarie":8,"BradenTeo":37}},{"path":"src/main/java/seedu/sherpass/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"    public static final String MESSAGE_USAGE \u003d \"Bye: Exits the program.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"     * Returns a boolean value denoting if the given Command object","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"     * is of the same instance as an ExitCommand.","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"     * @param c Command object","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"     * @return Returns true if c is an instance of ExitCommand. False otherwise.","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"    public static boolean isExit(Command c) {","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"        return c instanceof ExitCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"     * Executes exit command. Prints a goodbye message.","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"     * @param taskList Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"     * @param ui Ui for printing messages.","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"     * @param storage Storage for appending or overwriting saved data. Not used in this method.","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"        ui.showGoodbyeMessage();","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":33,"thedarie":2}},{"path":"src/main/java/seedu/sherpass/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.HELP_MESSAGE_QUICK_START_COMMAND;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.HELP_MESSAGE_SPECIFIC_COMMAND;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"    private String helpInput;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD_VARIANT \u003d \"quick start\";","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"     * Creates a constructor for the HelpCommand. Accepts the help input.","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"     * Help input contains a keyword to obtain detailed information on","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"     * available commands to use.","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"     * @param filteredHelpInput Help keyword.","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"    public HelpCommand(String filteredHelpInput) {","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"        helpInput \u003d filteredHelpInput.trim().toLowerCase();","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"    private void showHelpList(Ui ui) {","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"        System.out.println(\"Here is a list of commands available:\");","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"        String[] helpCommands \u003d {MarkCommand.COMMAND_WORD, UnmarkCommand.COMMAND_WORD,","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"            AddCommand.COMMAND_WORD, DeleteCommand.COMMAND_WORD, ClearCommand.COMMAND_WORD,","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"            StudyCommand.COMMAND_WORD, ExitCommand.COMMAND_WORD,};","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"        for (String helpCommand : helpCommands) {","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"            showSpecificHelpCommand(ui, helpCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"        ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"        System.out.println(\"For a quick summary of what commands to execute, \\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"                + \"enter \u0027help quick start\u0027.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"    private void showSpecificHelpCommand(Ui ui, String helpCommand) {","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"        switch (helpCommand) {","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"            ui.showToUser(MarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"            ui.showToUser(UnmarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"BradenTeo"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"BradenTeo"},"content":"            ui.showToUser(AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"            ui.showToUser(DeleteCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"            ui.showToUser(ClearCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"        case StudyCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"            ui.showToUser(StudyCommand.COMMAND_USAGE);","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"            ui.showToUser(ExitCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"        case COMMAND_WORD_VARIANT:","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"            ui.showToUser(HELP_MESSAGE_QUICK_START_COMMAND + HELP_MESSAGE_SPECIFIC_COMMAND);","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"jltha"},"content":"        default:","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"jltha"},"content":"            showHelpList(ui);","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"jltha"},"content":"     * Executes the help command. Checks for the search keyword","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"jltha"},"content":"     * in the help command to list detailed information of available","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"     * commands according to what the keyword is looking for.","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"jltha"},"content":"     * @param taskList Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"jltha"},"content":"     * @param ui       Ui for printing.","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"jltha"},"content":"     * @param storage  Storage for overwriting/appending save data. Not used in this method.","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"jltha"},"content":"        showSpecificHelpCommand(ui, helpInput);","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":84,"thedarie":2,"BradenTeo":2}},{"path":"src/main/java/seedu/sherpass/command/MarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"    public static final String MESSAGE_USAGE \u003d \"Mark: Marks a task as done. \"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"            + \"\\nTo mark a specific task, enter \u0027mark \u003clist_index\u003e\u0027.\\n\\n Here, \"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"            + \"\u0027list_index\u0027 denotes the index of a task \\n based on the task list under the command \u0027list\u0027.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"            + \"\\nE.g., \u0027mark 1\u0027 marks the first task in the task list as done.\\n\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"            + \"Note: You can only mark one task per command input.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"    private int markIndex;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"     * Creates a constructor for the mark command.","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"     * Saves index of task to mark.","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"     * @param markIndex Task index to mark.","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"     * @param taskList  Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"    public MarkCommand(int markIndex, TaskList taskList) {","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"        if (taskList.isTaskExist(markIndex)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"            this.markIndex \u003d markIndex;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"     * Executes mark command. Marks task as Done.","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"     * @param taskList Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"     * @param ui       Ui for printing","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"     * @param storage  Overwrite save file for newly marked task.","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"        if (taskList.isTaskDone(markIndex)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"            System.out.println(\"This task has already been marked!\");","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"            return;","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"        taskList.markTask(markIndex);","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"thedarie"},"content":"        storage.writeSaveData(taskList);","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":45,"thedarie":3}},{"path":"src/main/java/seedu/sherpass/command/ShowCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Timetable;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.ERROR_INVALID_INPUT_MESSAGE;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.WELCOME_MESSAGE_TWO;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"public class ShowCommand extends Command {","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD \u003d \"show\";","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"    LocalDate dayInput;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"    String selection;","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"    public ShowCommand(LocalDate dayInput, String selection) {","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"        this.dayInput \u003d dayInput;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"        this.selection \u003d selection;","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"     * Executes the show command. Shows the user the schedule","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"     * for the day that is specified, the list of incomplete","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"     * tasks, and the current weekly schedule.","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"     * @param taskList Task array.","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"     * @param ui       Ui for printing task content.","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"     * @param storage  Storage for overwriting/appending save data. Not used in this method.","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"        if (dayInput !\u003d null) {","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"Here is the schedule you wanted:\");","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"            Timetable.showScheduleByDay(dayInput, taskList, ui);","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"            return;","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"        switch (selection) {","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"        case \"todo\":","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"Here are your pending tasks:\");","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"            taskList.printPendingTasks(ui);","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"yuzhongng"},"content":"        case \"today\":","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"            ui.showToUser(WELCOME_MESSAGE_TWO);","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"yuzhongng"},"content":"            Timetable.showTodaySchedule(taskList, ui);","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"What would you like to do next?\");","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"yuzhongng"},"content":"            break;","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"        case \"week\":","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"Here is your schedule for the week:\");","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"            Timetable.showScheduleOfTheWeek(taskList, ui);","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"What would you like to do next?\");","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"        case \"all\":","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"            taskList.printAllTasks(ui);","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"        default:","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"            ui.showToUser(ERROR_INVALID_INPUT_MESSAGE);","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"jltha":59,"yuzhongng":3}},{"path":"src/main/java/seedu/sherpass/command/StudyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"import seedu.sherpass.util.TimerLogic;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.GOODBYE_MESSAGE_STUDY;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.HELP_MESSAGE_STUDY;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Message.WELCOME_MESSAGE_STUDY;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.util.Parser.parseStudyMode;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"public class StudyCommand extends Command {","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD \u003d \"study\";","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_USAGE \u003d \"Study: Enters a study session.\\n\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"            + \"User can access timer features while in a study session.\\n\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"            + HELP_MESSAGE_STUDY;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"     * Method is called when user chooses to enter Study mode. User is able to start, pause and stop a timer in Study","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"     * mode. Only one timer can be running at a time. User can leave Study mode by typing \"leave\".","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"    private void enterStudyMode(Ui ui, TimerLogic timerLogic) {","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"laiisaac"},"content":"        ui.showToUser(WELCOME_MESSAGE_STUDY);","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"        ui.showLine();","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"        String userInput \u003d ui.readCommand();","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"        while (!userInput.contains(\"leave\")) {","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"            parseStudyMode(userInput, ui, timerLogic);","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"            userInput \u003d ui.readCommand();","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"            if (userInput.contains(\"start\") \u0026\u0026 !timerLogic.isTimerRunning()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"                timerLogic.callResetTimer();","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"    public void leaveStudyMode(Ui ui, TimerLogic timerLogic) {","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"        if (timerLogic.isTimerRunning()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"            timerLogic.callStopTimer();","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"        ui.showLine();","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"        ui.showToUser(GOODBYE_MESSAGE_STUDY);","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"laiisaac"},"content":"        TimerLogic timerLogic \u003d new TimerLogic(ui);","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"        enterStudyMode(ui, timerLogic);","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"        leaveStudyMode(ui, timerLogic);","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"laiisaac":6,"jltha":48}},{"path":"src/main/java/seedu/sherpass/command/UnmarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"    public static final String MESSAGE_USAGE \u003d \"Unmark: Marks a task as undone.\"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"            + \"\\nTo unmark a specific task, enter \u0027unmark \u003clist_index\u003e\u0027.\\n\\n Here, \"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"            + \"\u0027list_index\u0027 denotes the index of a task \\n based on the task list under the command \u0027list\u0027.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"            + \"\\nE.g., \u0027unmark 3\u0027 unmarks the third task in the task list.\\n\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"            + \"Note: You can only unmark one task per command input.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"    private int markIndex;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"     * Creates a constructor for the unmark command.","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"     * Saves index of task to mark.","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"     * @param markIndex Task index to mark.","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"     * @param taskList  Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"    public UnmarkCommand(int markIndex, TaskList taskList) {","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"        if (taskList.isTaskExist(markIndex)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"            this.markIndex \u003d markIndex;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"     * Executes unmark command. Marks task as undone.","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"     * @param taskList Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"     * @param ui       Ui for printing","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"     * @param storage  Overwrite save file for newly unmarked task.","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"        if (!taskList.isTaskDone(markIndex)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"            System.out.println(\"This task was already unmarked!\");","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"            return;","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"        taskList.unmarkTask(markIndex);","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"thedarie"},"content":"        storage.writeSaveData(taskList);","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":44,"thedarie":3}},{"path":"src/main/java/seedu/sherpass/constant/DateAndTimeFormat.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.constant;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"public class DateAndTimeFormat {","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"    public static final DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"    public static final DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"EEE, dd/MM/yyyy\");","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"    public static final DateTimeFormatter dayOnlyFormat \u003d DateTimeFormatter.ofPattern(\"EEE\");","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"    public static final DateTimeFormatter dateOnlyFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":9,"thedarie":1}},{"path":"src/main/java/seedu/sherpass/constant/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.constant;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"public class Index {","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"    public static final int DELETE_INDEX \u003d 1;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"    public static final int OPTIONS_INDEX \u003d 0;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"    public static final int MARK_INDEX \u003d 1;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"    public static final int TASK_CONTENT_INDEX \u003d 1;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"    public static final int HELP_OPTIONS_INDEX \u003d 1;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"    public static final int DIRECTORY_INDEX \u003d 0;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"    public static final int STUDY_COMMAND_INDEX \u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"    public static final int TIMER_FORMAT_INDEX \u003d 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"    public static final int DEFAULT_TIMER_INDEX \u003d 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"    public static final int CUSTOM_TIMER_INDEX \u003d 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"laiisaac"},"content":"    public static final int DEFAULT_TIMER_ONE \u003d 2700;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"    public static final int DEFAULT_TIMER_TWO \u003d 3600;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"    public static final int DEFAULT_TIMER_THREE \u003d 5400;","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"    public static final int DEFAULT_TIMER_ZERO \u003d 30;","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"    public static final int INDENT_FACTOR \u003d 4;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"    public static final int CUSTOM_COMMAND_INDEX \u003d 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"    public static final int SHOW_OPTION_INDEX \u003d 1;","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"laiisaac":4,"jltha":17}},{"path":"src/main/java/seedu/sherpass/constant/Message.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.constant;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"public class Message {","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"BradenTeo"},"content":"    public static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"    public static final String WELCOME_MESSAGE_ONE \u003d \"Welcome to\\n\";","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"    public static final String WELCOME_MESSAGE_TWO \u003d \"Here is your schedule for today:\";","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"laiisaac"},"content":"    public static final String WELCOME_MESSAGE_STUDY \u003d \"Gotcha! Entering study mode...\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"            + \"Done! To get started, enter one of the three default timers\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"laiisaac"},"content":"            + \"using \u0027start \u003cmode_number\u003e\u0027:\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"            + \"1) 30 minutes\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"laiisaac"},"content":"            + \"2) 1 hour\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"            + \"3) 1.5 hours\\n\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"            + \"For testing purposes, you may start a 30s timer\\nwith mode number 0.\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"laiisaac"},"content":"            + \"Otherwise, feel free to choose your own timer with\\n\u0027start /custom \u003ctimer_duration\u003e\u0027.\";","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"    public static final String GOODBYE_MESSAGE \u003d \"Bye. Hope to see you again soon! :)\";","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"    public static final String GOODBYE_MESSAGE_STUDY \u003d \"Leaving study session...\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"            + \"Welcome back to the main session! How can I help you?\";","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"    private static final String HELP_MESSAGE \u003d \"For more information, please enter the \u0027help\u0027 command.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"    public static final String HELP_MESSAGE_SPECIFIC_COMMAND \u003d \"\\n\\nFor more information on \"","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"BradenTeo"},"content":"            + \"the command you wish to execute,\\nenter \u0027help \u003ccommand\u003e\u0027 e.g. help add\";","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"    public static final String HELP_MESSAGE_QUICK_START_COMMAND \u003d \"Command input quick start guide:\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"            + \"1) List: list\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"            + \"2) Mark: mark \u003clist_index\u003e\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"            + \"3) Unmark: unmark \u003clist_index\u003e\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"BradenTeo"},"content":"            + \"4) Add: add \u003ctask_description\u003e /by \u003ctask_due_date\u003e /do_on \u003cdate_to_work_on_task\u003e\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"BradenTeo"},"content":"            + \"5) Delete: delete \u003clist_index\u003e\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"BradenTeo"},"content":"            + \"6) Find: find \u003ckeyword\u003e\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"BradenTeo"},"content":"            + \"7) Clear: clear\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"BradenTeo"},"content":"            + \"8) Bye: bye\";","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"laiisaac"},"content":"    public static final String HELP_MESSAGE_STUDY \u003d \"Timer command input quick start guide:\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"            + \"1) Start default timer: start \u003cmode_number\u003e\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"laiisaac"},"content":"            + \"2) Start custom timer: start /custom \u003ctimer_duration\u003e\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"laiisaac"},"content":"            + \"3) Stop timer: stop\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"laiisaac"},"content":"            + \"4) Pause timer: pause\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"laiisaac"},"content":"            + \"5) Resume timer: resume\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"            + \"6) Exit study mode: leave\";","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"    public static final String ERROR_INVALID_INPUT_MESSAGE \u003d \"Please key in an appropriate command.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"            + HELP_MESSAGE;","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"laiisaac"},"content":"    public static final String ERROR_INVALID_STUDY_INPUT_MESSAGE \u003d \"Please key in an appropriate command.\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"laiisaac"},"content":"            + HELP_MESSAGE_STUDY;","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"    public static final String ERROR_INVALID_DELETE_INDEX_MESSAGE \u003d \"Oops! It seems that you\u0027ve given\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"            + \"an invalid index to delete the task.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"    public static final String ERROR_IO_FAILURE_MESSAGE \u003d \"Oh no! We\u0027ve encountered an error \\nwhile \"","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"            + \"trying to processing the system.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"            + \"Please reboot and execute the application again.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"thedarie"},"content":"    public static final String ERROR_CORRUPT_SAVED_FILE_MESSAGE_1 \u003d \"Oops! It seems that your saved file \"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"thedarie"},"content":"            + \"is corrupted.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"thedarie"},"content":"    public static final String ERROR_CORRUPT_SAVED_FILE_MESSAGE_2 \u003d \"Would you like to start with a new save \"","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"thedarie"},"content":"            + \"file? (Y/N):\";","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"thedarie"},"content":"    public static final String ERROR_CORRUPT_SAVED_FILE_MESSAGE_3 \u003d \"We\u0027re sorry this happened. \"","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"thedarie"},"content":"            + \"Please refer to the troubleshooting section in the user guide \"","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"thedarie"},"content":"            + \"or contact the developers for help.\";","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"    public static final String ERROR_INVALID_MARKING_INDEX_MESSAGE \u003d \"Bzzt!\\nPlease\"","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"            + \" key in a valid task number to mark/unmark your task.\"","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"            + HELP_MESSAGE_SPECIFIC_COMMAND;","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"    public static final String ERROR_INVALID_TIMER_INPUT_MESSAGE \u003d \"Oops! Your timer input \"","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"            + \"does not seem to be correct.\\n\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"            + \"Please select one of the three default modes with\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"            + \"\\t\u0027start \u003cmode_number\u003e\u0027\\n\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"            + \"or choose your own custom timer with\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"            + \"\\t\u0027start /custom \u003ctimer_duration\u003e\u0027\";","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"thedarie"},"content":"    public static final String ERROR_DUPLICATE_TASK_MESSAGE_1 \u003d \"Skipping task \\\"\";","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"thedarie"},"content":"    public static final String ERROR_DUPLICATE_TASK_MESSAGE_2 \u003d \"\\\" as it already exists!\";","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"laiisaac":15,"jltha":35,"thedarie":9,"BradenTeo":7}},{"path":"src/main/java/seedu/sherpass/constant/TimerConstant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laiisaac"},"content":"package seedu.sherpass.constant;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"public class TimerConstant {","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"    public static final int TIME_INTERVAL \u003d 5;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"laiisaac"},"content":"    public static final int NO_TIME_LEFT \u003d 0;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"    public static final int ONE_MINUTE \u003d 60;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"laiisaac"},"content":"    public static final int ONE_HOUR \u003d 3600;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"laiisaac"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"laiisaac":8}},{"path":"src/main/java/seedu/sherpass/constant/TimetableConstant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.constant;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"public class TimetableConstant {","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"    public static int TASK_SPACE_FULL_LENGTH \u003d 22;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"    public static int TASK_SPACE_COMPARE_LENGTH \u003d 14;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"    public static int TASK_SPACE_COMPARE_OFFSET_LENGTH \u003d 7;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"    public static int DATE_SPACE_FULL_LENGTH \u003d 14;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"    public static int WHITE_SPACE_FRONT_OFFSET_LENGTH \u003d 2;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"    public static int PARTITION_SPACE_OFFSET_LENGTH \u003d 43;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"    public static int PARTITION_PIPE_LINE_LENGTH \u003d 2;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"    public static int TIMETABLE_SIZE_OFFSET \u003d 3;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"    public static int DAYS_IN_A_WEEK \u003d 7;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"    public static String BLANK_TIME_PERIOD \u003d \"           \";","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"    public static String BLANK_MARK_STATUS \u003d \" \";","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"    public static int STRING_COMPARE_OFFSET \u003d 4;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"jltha":16}},{"path":"src/main/java/seedu/sherpass/exception/InputRepeatedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.exception;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"public class InputRepeatedException extends Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":4}},{"path":"src/main/java/seedu/sherpass/exception/InvalidInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.exception;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"thedarie"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"        super(message);","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"thedarie"},"content":"    public InvalidInputException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":4,"thedarie":8}},{"path":"src/main/java/seedu/sherpass/exception/InvalidTimeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laiisaac"},"content":"package seedu.sherpass.exception;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"public class InvalidTimeException extends Exception {","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"laiisaac":4}},{"path":"src/main/java/seedu/sherpass/exception/WrongEditInfoFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BradenTeo"},"content":"package seedu.sherpass.exception;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"BradenTeo"},"content":"public class WrongEditInfoFormatException extends Exception{","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"BradenTeo"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"BradenTeo":4}},{"path":"src/main/java/seedu/sherpass/task/NonrecurringTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.task;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"public class NonrecurringTask extends Task {","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"     * Creates a constructor for the parent class of tasks, \u0027Task\u0027.","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"     * Accepts only task description","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"     * @param byDate Date by which task is to be completed","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"     * @param doOnDate Date user has set to complete the task","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"    public NonrecurringTask(String description, LocalDate byDate, LocalDate doOnDate) {","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"        super(description, byDate, doOnDate);","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"jltha":18}},{"path":"src/main/java/seedu/sherpass/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.task;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"thedarie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.dateOnlyFormat;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.outputFormat;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"BradenTeo"},"content":"public class Task {","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"    protected String description;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"thedarie"},"content":"    protected LocalDate byDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"thedarie"},"content":"    protected LocalDate doOnDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"    // The index of the task with respect to being within","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"    // the ArrayList\u003cTask\u003e tasks in TaskList class","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"    // To add to constructor","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"    private final int placeholderIndex \u003d 1;","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"    protected int index \u003d placeholderIndex;","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"    // Time period of the task when user blocks out the pocket of time","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"    // in the timetable. Format has been hardcoded to be XXXX - XXXX,","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"    // e.g. 1400 - 1500. To add to constructor","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"    private final String placeholderTime \u003d \"0900 - 1100\";","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"    protected String timePeriod \u003d placeholderTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"     * Creates a constructor for the parent class of tasks, \u0027Task\u0027.","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"     * Accepts only task description","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"thedarie"},"content":"    public Task(String description, LocalDate byDate, LocalDate doOnDate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"BradenTeo"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"BradenTeo"},"content":"        this.doOnDate \u003d doOnDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"     * Returns the index of a task with respect to its placement","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"     * in the main task list.","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"     * @return Index of a task","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"    public int getIndex() {","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"        return index;","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"     * Returns the time when the task is taking place.","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"     * Format of time is in 24 hours.","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"     * @return Returns a range of time when the task occurs.","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"    public String getTimePeriod() {","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"        return timePeriod;","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"     * Returns task description.","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"     * @return task description.","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"    public String getDescription() {","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"        return description;","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"jltha"},"content":"     * Returns mark status of task.","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"jltha"},"content":"     * @return Returns true if task has been marked. False otherwise.","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"jltha"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"jltha"},"content":"        return isDone;","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"jltha"},"content":"     * Returns String version of mark status.","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"jltha"},"content":"     * @return X if task has been marked. White space otherwise.","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"jltha"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"jltha"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"jltha"},"content":"     * Marks task as done.","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"jltha"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"jltha"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"jltha"},"content":"     * Marks task as undone.","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"jltha"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"jltha"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"jltha"},"content":"     * Returns task date. Parent class is created","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"jltha"},"content":"     * as a template for child classes to perform its own","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"jltha"},"content":"     * respective functions, i.e. each task date returned is","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"jltha"},"content":"     * different for each task type.","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"jltha"},"content":"     * @return White space.","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"thedarie"},"content":"    public LocalDate getByDate() {","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"BradenTeo"},"content":"        return byDate;","lastModifiedDate":"2022-03-12"},{"lineNumber":111,"author":{"gitId":"BradenTeo"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":112,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":113,"author":{"gitId":"thedarie"},"content":"    public LocalDate getDoOnDate() {","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"BradenTeo"},"content":"        return doOnDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":118,"author":{"gitId":"jltha"},"content":"     * Returns the by date in String format.","lastModifiedDate":"2022-03-20"},{"lineNumber":119,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":120,"author":{"gitId":"jltha"},"content":"     * @return Returns if byDate contains a parsed date.","lastModifiedDate":"2022-03-20"},{"lineNumber":121,"author":{"gitId":"jltha"},"content":"     *         Otherwise, returns a blank string (no whitespace).","lastModifiedDate":"2022-03-20"},{"lineNumber":122,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":123,"author":{"gitId":"thedarie"},"content":"    public String getByDateString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"jltha"},"content":"        if (byDate !\u003d null) {","lastModifiedDate":"2022-03-20"},{"lineNumber":125,"author":{"gitId":"thedarie"},"content":"            return byDate.format(outputFormat);","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"jltha"},"content":"        return \"\";","lastModifiedDate":"2022-03-20"},{"lineNumber":128,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":129,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":131,"author":{"gitId":"jltha"},"content":"     * Returns the do on date in String format.","lastModifiedDate":"2022-03-20"},{"lineNumber":132,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":133,"author":{"gitId":"jltha"},"content":"     * @return Returns if doOnDate contains a parsed date.","lastModifiedDate":"2022-03-20"},{"lineNumber":134,"author":{"gitId":"jltha"},"content":"     *         Otherwise, returns a blank string (no whitespace).","lastModifiedDate":"2022-03-20"},{"lineNumber":135,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":136,"author":{"gitId":"jltha"},"content":"    public String getDoOnDateString(boolean isDateOnly) {","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"jltha"},"content":"        if (doOnDate !\u003d null) {","lastModifiedDate":"2022-03-20"},{"lineNumber":138,"author":{"gitId":"jltha"},"content":"            return ((isDateOnly) ? doOnDate.format(dateOnlyFormat) : doOnDate.format(outputFormat));","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":140,"author":{"gitId":"jltha"},"content":"        return \"\";","lastModifiedDate":"2022-03-20"},{"lineNumber":141,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":142,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"jltha"},"content":"     * Returns a string version of the task content.","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"jltha"},"content":"     * Content includes mark status, task type and description.","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"jltha"},"content":"     * For ease of printing the task.","lastModifiedDate":"2022-03-06"},{"lineNumber":149,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"jltha"},"content":"     * @return Task content.","lastModifiedDate":"2022-03-06"},{"lineNumber":151,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":152,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":153,"author":{"gitId":"jltha"},"content":"    public String toString() {","lastModifiedDate":"2022-03-06"},{"lineNumber":154,"author":{"gitId":"thedarie"},"content":"        String result \u003d \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"thedarie"},"content":"        if (this.byDate !\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"thedarie"},"content":"            result +\u003d \" (by: \" + getByDateString() + \")\";","lastModifiedDate":"2022-03-15"},{"lineNumber":157,"author":{"gitId":"BradenTeo"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":158,"author":{"gitId":"thedarie"},"content":"        if (this.doOnDate !\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":159,"author":{"gitId":"jltha"},"content":"            result +\u003d \" (reminder on: \" + getDoOnDateString(false) + \")\";","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"BradenTeo"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":161,"author":{"gitId":"thedarie"},"content":"        return result;","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"BradenTeo"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":163,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":164,"author":{"gitId":"BradenTeo"},"content":"    public void setTaskDescription(String taskDescription) {","lastModifiedDate":"2022-03-13"},{"lineNumber":165,"author":{"gitId":"BradenTeo"},"content":"        this.description \u003d taskDescription;","lastModifiedDate":"2022-03-13"},{"lineNumber":166,"author":{"gitId":"BradenTeo"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":167,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":168,"author":{"gitId":"thedarie"},"content":"    public void setByDate(LocalDate byDate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":169,"author":{"gitId":"BradenTeo"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2022-03-13"},{"lineNumber":170,"author":{"gitId":"BradenTeo"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":171,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":172,"author":{"gitId":"thedarie"},"content":"    public void setDoOnDate(LocalDate doOnDate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":173,"author":{"gitId":"BradenTeo"},"content":"        this.doOnDate \u003d doOnDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":174,"author":{"gitId":"BradenTeo"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":175,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":132,"thedarie":23,"BradenTeo":20}},{"path":"src/main/java/seedu/sherpass/task/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.task;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"thedarie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"public class TaskList {","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"     * Creates a constructor for the class TaskList.","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"     * @param savedTasks Representation of an array of tasks.","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"    public TaskList(ArrayList\u003cTask\u003e savedTasks) {","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"        tasks \u003d savedTasks;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"thedarie"},"content":"    public TaskList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"     * Returns the array of tasks in the class TaskList.","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"     * @return the array of tasks.","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"        return tasks;","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"     * Adds a new task to the current array of tasks.","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"     * @param taskDescription Description of the task.","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"BradenTeo"},"content":"     * @param taskByDate        Due date of the task","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"BradenTeo"},"content":"     * @param taskRemindDate    Reminder date of the task","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"thedarie"},"content":"    public void addTask(String taskDescription, LocalDate taskByDate, LocalDate taskRemindDate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"BradenTeo"},"content":"        Task newTask \u003d new Task(taskDescription, taskByDate, taskRemindDate);","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"        tasks.add(newTask);","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + newTask","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"                + \"\\nNow you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"     * Prints all available tasks in the task list.","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"     * @param ui Ui class for printing of messages.","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"    public void printAllTasks(Ui ui) {","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"        int printIndex \u003d 1;","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"            System.out.println(printIndex + \". \" + task);","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"            printIndex++;","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"        ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"        System.out.println(\"A total of \" + (printIndex - 1) + \" item(s) have been found!\");","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"jltha"},"content":"     * Returns a boolean value denoting the task status, i.e.","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"jltha"},"content":"     * whether the task has been marked or not.","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"jltha"},"content":"     * @param markIndex Index of a task to check for its mark status.","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"jltha"},"content":"     * @return Returns true if task has been marked. False otherwise.","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"jltha"},"content":"    public boolean isTaskDone(int markIndex) {","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"jltha"},"content":"        return tasks.get(markIndex).isDone();","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"jltha"},"content":"     * Marks a task given the index of the task.","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"jltha"},"content":"     * Index corresponds to its placement within the task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"jltha"},"content":"     * @param markIndex Index of the task to mark as done.","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"jltha"},"content":"    public void markTask(int markIndex) {","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"jltha"},"content":"        tasks.get(markIndex).markAsDone();","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"jltha"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n  \" + tasks.get(markIndex));","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"jltha"},"content":"     * Unmarks a task given the index of the task.","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"jltha"},"content":"     * Index corresponds to its placement within the task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"jltha"},"content":"     * @param markIndex Index of the task to mark as undone.","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"jltha"},"content":"    public void unmarkTask(int markIndex) {","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"jltha"},"content":"        tasks.get(markIndex).markAsUndone();","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"jltha"},"content":"        System.out.println(\"Ok, I\u0027ve marked this task as\"","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"jltha"},"content":"                + \" not done yet:\\n  \" + tasks.get(markIndex));","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"jltha"},"content":"     * Returns a boolean value to denote if the task has already","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"jltha"},"content":"     * been added to the task array. References task description","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"jltha"},"content":"     * when checking against each task.","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"jltha"},"content":"     * @param taskDescription Description of the task to match when searching for task.","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"jltha"},"content":"     * @return Returns true if task has been added. False otherwise.","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"jltha"},"content":"    public boolean isTaskAlreadyAdded(String taskDescription) {","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"jltha"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"jltha"},"content":"            if (task.getDescription().equalsIgnoreCase(taskDescription)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"jltha"},"content":"                return true;","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"jltha"},"content":"        return false;","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"jltha"},"content":"     * Returns a boolean value denoting the existence of a task","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"jltha"},"content":"     * within the task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"jltha"},"content":"     * @param deleteIndex Index of a task. Corresponds to its placement in task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"jltha"},"content":"     * @return Returns true if task exists in task array. False otherwise.","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"jltha"},"content":"    public boolean isTaskExist(int deleteIndex) {","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"jltha"},"content":"        return tasks.get(deleteIndex) !\u003d null;","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"jltha"},"content":"     * Deletes a task given its index. Index corresponds to its placement","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"jltha"},"content":"     * in task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"jltha"},"content":"     * @param deleteIndex Index of a task to search for.","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"jltha"},"content":"    public void removeTask(int deleteIndex) {","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"jltha"},"content":"        Task taskToBeRemoved \u003d tasks.get(deleteIndex);","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"jltha"},"content":"        tasks.remove(deleteIndex);","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"jltha"},"content":"        System.out.println(\"Okay. I\u0027ve removed this task:\\n  \" + taskToBeRemoved","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"jltha"},"content":"                + \"\\nNow you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"jltha"},"content":"     * Deletes all tasks saved within the task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"jltha"},"content":"     * @param ui Ui for printing the completion of the deletion.","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":149,"author":{"gitId":"jltha"},"content":"    public void deleteAllTasks(Ui ui) {","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"jltha"},"content":"        while (tasks.size() \u003e 0) {","lastModifiedDate":"2022-03-06"},{"lineNumber":151,"author":{"gitId":"jltha"},"content":"            tasks.remove(0);","lastModifiedDate":"2022-03-06"},{"lineNumber":152,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":153,"author":{"gitId":"jltha"},"content":"        ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":154,"author":{"gitId":"jltha"},"content":"        ui.showToUser(\"Done! Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":155,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":156,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":157,"author":{"gitId":"yuzhongng"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"yuzhongng"},"content":"     * Return a filtered ArrayList of task according to the date specified.","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"yuzhongng"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"yuzhongng"},"content":"     * @param dateInput The specific date.","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"yuzhongng"},"content":"     * @return The filtered ArrayList.","lastModifiedDate":"2022-03-22"},{"lineNumber":162,"author":{"gitId":"yuzhongng"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"jltha"},"content":"    public ArrayList\u003cTask\u003e getFilteredTasksByDate(LocalDate dateInput) {","lastModifiedDate":"2022-03-20"},{"lineNumber":164,"author":{"gitId":"yuzhongng"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"yuzhongng"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"yuzhongng"},"content":"            if (hasNoDeadline(task)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":167,"author":{"gitId":"yuzhongng"},"content":"                continue;","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"yuzhongng"},"content":"            } else if (task.getByDate().isEqual(dateInput)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"yuzhongng"},"content":"                filteredTasks.add(task);","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"yuzhongng"},"content":"            } else {","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"yuzhongng"},"content":"                continue;","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"yuzhongng"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"yuzhongng"},"content":"        return filteredTasks;","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"yuzhongng"},"content":"    private boolean hasNoDeadline(Task task) {","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"yuzhongng"},"content":"        return task.getByDate() \u003d\u003d null;","lastModifiedDate":"2022-03-22"},{"lineNumber":179,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":180,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":181,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":182,"author":{"gitId":"jltha"},"content":"     * Prints tasks that are yet to be completed, i.e. marked as done.","lastModifiedDate":"2022-03-20"},{"lineNumber":183,"author":{"gitId":"jltha"},"content":"     * Printed tasks applies to non-recurring tasks.","lastModifiedDate":"2022-03-20"},{"lineNumber":184,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":185,"author":{"gitId":"jltha"},"content":"    public void printPendingTasks(Ui ui) {","lastModifiedDate":"2022-03-20"},{"lineNumber":186,"author":{"gitId":"jltha"},"content":"        int printIndex \u003d 1;","lastModifiedDate":"2022-03-23"},{"lineNumber":187,"author":{"gitId":"jltha"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-03-20"},{"lineNumber":188,"author":{"gitId":"jltha"},"content":"            if (!task.isDone()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"jltha"},"content":"                ui.showToUser(printIndex + \". \" + task.toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":190,"author":{"gitId":"jltha"},"content":"                printIndex++;","lastModifiedDate":"2022-03-23"},{"lineNumber":191,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":192,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":193,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":194,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":164,"yuzhongng":21,"thedarie":6,"BradenTeo":3}},{"path":"src/main/java/seedu/sherpass/util/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.util;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"thedarie"},"content":"import org.json.JSONException;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"thedarie"},"content":"import org.json.JSONObject;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.command.Command;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"BradenTeo"},"content":"import seedu.sherpass.command.AddCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"BradenTeo"},"content":"import seedu.sherpass.command.ClearCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.command.DeleteCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"BradenTeo"},"content":"import seedu.sherpass.command.EditCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"BradenTeo"},"content":"import seedu.sherpass.command.ExitCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.command.HelpCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.command.MarkCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.command.ShowCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.command.StudyCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.command.UnmarkCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.exception.InputRepeatedException;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.exception.InvalidInputException;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"BradenTeo"},"content":"import seedu.sherpass.exception.WrongEditInfoFormatException;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"laiisaac"},"content":"import seedu.sherpass.exception.InvalidTimeException;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.Task;","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.inputFormat;","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.MARK_INDEX;","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Index.CUSTOM_COMMAND_INDEX;","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Index.SHOW_OPTION_INDEX;","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.TASK_CONTENT_INDEX;","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"BradenTeo"},"content":"import static seedu.sherpass.constant.Index.TIMER_FORMAT_INDEX;","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.HELP_OPTIONS_INDEX;","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Index.OPTIONS_INDEX;","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.DEFAULT_TIMER_ZERO;","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.DEFAULT_TIMER_ONE;","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.DEFAULT_TIMER_TWO;","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.DEFAULT_TIMER_THREE;","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.CUSTOM_TIMER_INDEX;","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.DEFAULT_TIMER_INDEX;","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.STUDY_COMMAND_INDEX;","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"BradenTeo"},"content":"import static seedu.sherpass.constant.Message.EMPTY_STRING;","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"BradenTeo"},"content":"import static seedu.sherpass.constant.Message.ERROR_INVALID_INPUT_MESSAGE;","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"BradenTeo"},"content":"import static seedu.sherpass.constant.Message.ERROR_INVALID_DELETE_INDEX_MESSAGE;","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Message.ERROR_INVALID_MARKING_INDEX_MESSAGE;","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"BradenTeo"},"content":"import static seedu.sherpass.constant.Message.HELP_MESSAGE_SPECIFIC_COMMAND;","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Message.ERROR_INVALID_STUDY_INPUT_MESSAGE;","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"public class Parser {","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"thedarie"},"content":"     * Returns a task object parsed from the data file.","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"thedarie"},"content":"     * @param taskData The data of a task in JSON.","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"     * @return Task containing the saved data for adding into program\u0027s task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"     * @throws InvalidInputException If saved data is missing content, i.e. task description or date.","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"thedarie"},"content":"    public static Task parseSavedData(JSONObject taskData) throws InvalidInputException {","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"thedarie"},"content":"        Task parsedTask;","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"thedarie"},"content":"        try {","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"thedarie"},"content":"            String description \u003d taskData.getString(\"description\");","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"thedarie"},"content":"            String byDateString \u003d taskData.getString(\"by_date\");","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"thedarie"},"content":"            String doOnDateString \u003d taskData.getString(\"do_date\");","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"thedarie"},"content":"            LocalDate byDate \u003d null;","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"thedarie"},"content":"            LocalDate doOnDate \u003d null;","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"thedarie"},"content":"            if (!byDateString.equals(\"null\")) {","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"jltha"},"content":"                byDate \u003d LocalDate.parse(byDateString, inputFormat);","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"thedarie"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"thedarie"},"content":"            if (!doOnDateString.equals(\"null\")) {","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"jltha"},"content":"                doOnDate \u003d LocalDate.parse(doOnDateString, inputFormat);","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"thedarie"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"thedarie"},"content":"            parsedTask \u003d new Task(description, byDate, doOnDate);","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"thedarie"},"content":"            String status \u003d taskData.getString(\"status\");","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"thedarie"},"content":"            if (status.equals(\"X\")) {","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"thedarie"},"content":"                parsedTask.markAsDone();","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"thedarie"},"content":"            return parsedTask;","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"thedarie"},"content":"        } catch (JSONException | DateTimeParseException exception) {","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"thedarie"},"content":"            throw new InvalidInputException(exception.getMessage());","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"jltha"},"content":"    private static Command prepareMarkOrUnmark(String[] parsedInput, String commandWord, TaskList taskList) {","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"jltha"},"content":"            int markIndex \u003d Integer.parseInt(parsedInput[MARK_INDEX]) - 1;","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"jltha"},"content":"            if (commandWord.equals(MarkCommand.COMMAND_WORD)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"jltha"},"content":"                return new MarkCommand(markIndex, taskList);","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"jltha"},"content":"            return new UnmarkCommand(markIndex, taskList);","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"jltha"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"jltha"},"content":"            System.out.println(ERROR_INVALID_MARKING_INDEX_MESSAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"jltha"},"content":"        return null;","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"BradenTeo"},"content":"    private static void printMissingInputMessage() {","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"BradenTeo"},"content":"        System.out.println(\"Oops! The description of an \u0027add\u0027 command cannot be empty.\"","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"jltha"},"content":"                + HELP_MESSAGE_SPECIFIC_COMMAND);","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"jltha"},"content":"    private static LocalDate confirmInvalidDateFormat() throws InvalidInputException {","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"jltha"},"content":"        Ui anotherUi \u003d new Ui();","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"jltha"},"content":"        anotherUi.showToUser(\"It seems that the date and time\\nyou gave is not in the correct format.\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"jltha"},"content":"                + \"Would you like to re-enter a valid date and time? (Y/N)\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"jltha"},"content":"                + \"*Enter \u0027No\u0027 to skip the adding of this task*\");","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"jltha"},"content":"        anotherUi.showLine();","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"jltha"},"content":"        while (true) {","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"jltha"},"content":"            String input \u003d anotherUi.readCommand();","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"jltha"},"content":"            anotherUi.showLine();","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"jltha"},"content":"            if (input.trim().equalsIgnoreCase(\"Y\")","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"jltha"},"content":"                    || input.trim().equalsIgnoreCase(\"Yes\")) {","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"jltha"},"content":"                anotherUi.showToUser(\"Understood. Please key in the date and time you wish to save.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"jltha"},"content":"                anotherUi.showLine();","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"jltha"},"content":"                anotherUi.showToUser(\"Enter valid date input:\");","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"jltha"},"content":"                input \u003d anotherUi.readCommand();","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"jltha"},"content":"                anotherUi.showLine();","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"jltha"},"content":"                return prepareTaskDate(input.trim());","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"jltha"},"content":"            if (input.trim().equalsIgnoreCase(\"N\")","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"jltha"},"content":"                    || input.trim().equalsIgnoreCase(\"No\")) {","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"jltha"},"content":"                anotherUi.showToUser(\"Okay, proceeding to stop current task process...\");","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"jltha"},"content":"                return null;","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"jltha"},"content":"            anotherUi.showToUser(\"Please confirm your choice with either Y (Yes) or N (No).\");","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"jltha"},"content":"            anotherUi.showLine();","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"jltha"},"content":"    private static LocalDate prepareTaskDate(String rawTaskDate) throws InvalidInputException {","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"jltha"},"content":"        if (rawTaskDate.isBlank()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"jltha"},"content":"            return null;","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"jltha"},"content":"            return LocalDate.parse(rawTaskDate, inputFormat);","lastModifiedDate":"2022-03-20"},{"lineNumber":137,"author":{"gitId":"jltha"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"jltha"},"content":"            return confirmInvalidDateFormat();","lastModifiedDate":"2022-03-15"},{"lineNumber":139,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":140,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":141,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"jltha"},"content":"    // Please add in constants to the magic literals","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"BradenTeo"},"content":"    private static Command prepareAdd(String[] splitInput, TaskList taskList) {","lastModifiedDate":"2022-03-12"},{"lineNumber":145,"author":{"gitId":"BradenTeo"},"content":"        String[] filteredTaskContent;","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"thedarie"},"content":"        LocalDate byDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"thedarie"},"content":"        LocalDate doOnDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":149,"author":{"gitId":"jltha"},"content":"            if (!splitInput[TASK_CONTENT_INDEX].contains(\"/by\")","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"jltha"},"content":"                    \u0026\u0026 !splitInput[TASK_CONTENT_INDEX].contains(\"/do_on\")) {","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"thedarie"},"content":"                return new AddCommand(splitInput[TASK_CONTENT_INDEX], taskList, null, null);","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"BradenTeo"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":153,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":154,"author":{"gitId":"BradenTeo"},"content":"            filteredTaskContent \u003d splitInput[TASK_CONTENT_INDEX].split(\"/by\", 2);","lastModifiedDate":"2022-03-12"},{"lineNumber":155,"author":{"gitId":"BradenTeo"},"content":"            if (!splitInput[1].contains(\"/do_on\")) {","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"thedarie"},"content":"                byDate \u003d prepareTaskDate(filteredTaskContent[1].trim());","lastModifiedDate":"2022-03-15"},{"lineNumber":157,"author":{"gitId":"thedarie"},"content":"                return new AddCommand(filteredTaskContent[0].trim(), taskList, byDate, null);","lastModifiedDate":"2022-03-15"},{"lineNumber":158,"author":{"gitId":"BradenTeo"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":159,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":160,"author":{"gitId":"BradenTeo"},"content":"            String[] filteredDates \u003d filteredTaskContent[1].split(\"/do_on\");","lastModifiedDate":"2022-03-15"},{"lineNumber":161,"author":{"gitId":"thedarie"},"content":"            byDate \u003d prepareTaskDate(filteredDates[0].trim());","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"thedarie"},"content":"            doOnDate \u003d prepareTaskDate(filteredDates[1].trim());","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"BradenTeo"},"content":"            return new AddCommand(filteredTaskContent[0], taskList, byDate, doOnDate);","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":165,"author":{"gitId":"jltha"},"content":"        } catch (ArrayIndexOutOfBoundsException | InvalidInputException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":166,"author":{"gitId":"BradenTeo"},"content":"            printMissingInputMessage();","lastModifiedDate":"2022-03-12"},{"lineNumber":167,"author":{"gitId":"jltha"},"content":"        } catch (InputRepeatedException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":168,"author":{"gitId":"jltha"},"content":"            System.out.println(\"Oops! It seems that you\u0027ve entered a duplicate task.\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":169,"author":{"gitId":"jltha"},"content":"                    + \"Please re-enter a new task if you wish to add one.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":170,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":171,"author":{"gitId":"jltha"},"content":"        return null;","lastModifiedDate":"2022-03-06"},{"lineNumber":172,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":173,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":174,"author":{"gitId":"thedarie"},"content":"    private static Command prepareEdit(String[] splitInput) {","lastModifiedDate":"2022-03-15"},{"lineNumber":175,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":176,"author":{"gitId":"BradenTeo"},"content":"        String[] fullEditInfo \u003d splitInput[1].trim().split(\" \", 2);","lastModifiedDate":"2022-03-13"},{"lineNumber":177,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":178,"author":{"gitId":"BradenTeo"},"content":"        //7 possibilities of editing, incorrect format of inputs are rejected","lastModifiedDate":"2022-03-13"},{"lineNumber":179,"author":{"gitId":"BradenTeo"},"content":"        try {","lastModifiedDate":"2022-03-13"},{"lineNumber":180,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":181,"author":{"gitId":"BradenTeo"},"content":"            int taskNumberToEdit \u003d Integer.parseInt(fullEditInfo[0]);","lastModifiedDate":"2022-03-14"},{"lineNumber":182,"author":{"gitId":"BradenTeo"},"content":"            checkCorrectEditInfoFormat(fullEditInfo[1]);","lastModifiedDate":"2022-03-13"},{"lineNumber":183,"author":{"gitId":"BradenTeo"},"content":"            return handleEdit(taskNumberToEdit, fullEditInfo[1]);","lastModifiedDate":"2022-03-13"},{"lineNumber":184,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":185,"author":{"gitId":"BradenTeo"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2022-03-13"},{"lineNumber":186,"author":{"gitId":"BradenTeo"},"content":"            System.out.println(\"Please key in a valid task number\");","lastModifiedDate":"2022-03-13"},{"lineNumber":187,"author":{"gitId":"BradenTeo"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2022-03-13"},{"lineNumber":188,"author":{"gitId":"BradenTeo"},"content":"            System.out.println(\"Invalid date\");","lastModifiedDate":"2022-03-13"},{"lineNumber":189,"author":{"gitId":"BradenTeo"},"content":"        } catch (WrongEditInfoFormatException e) {","lastModifiedDate":"2022-03-14"},{"lineNumber":190,"author":{"gitId":"BradenTeo"},"content":"            System.out.println(\"Please use the correct order of keywords:\\n\"","lastModifiedDate":"2022-03-13"},{"lineNumber":191,"author":{"gitId":"BradenTeo"},"content":"                    + \"\u003ctask_description\u003e /by \u003ctask_due_date\u003e /do_on \u003cdate_to_work_on_task\u003e\\n\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":192,"author":{"gitId":"BradenTeo"},"content":"                    + \"You only need to input the parts you want to edit.\\n\"","lastModifiedDate":"2022-03-13"},{"lineNumber":193,"author":{"gitId":"BradenTeo"},"content":"                    + \"e.g. edit 1 /do_on 2022/02/12\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":194,"author":{"gitId":"BradenTeo"},"content":"                    + \"(The task_description and task_due_date is left out here)\");","lastModifiedDate":"2022-03-13"},{"lineNumber":195,"author":{"gitId":"BradenTeo"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":196,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":197,"author":{"gitId":"jltha"},"content":"        return null;","lastModifiedDate":"2022-03-06"},{"lineNumber":198,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":199,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":200,"author":{"gitId":"BradenTeo"},"content":"    private static void checkCorrectEditInfoFormat(String fullEditInfo) throws WrongEditInfoFormatException {","lastModifiedDate":"2022-03-14"},{"lineNumber":201,"author":{"gitId":"BradenTeo"},"content":"        // tests to make sure the byDate is before the doOnDate","lastModifiedDate":"2022-03-15"},{"lineNumber":202,"author":{"gitId":"BradenTeo"},"content":"        if (fullEditInfo.contains(\"/by\") \u0026\u0026 fullEditInfo.contains(\"/do_on\")) {","lastModifiedDate":"2022-03-15"},{"lineNumber":203,"author":{"gitId":"BradenTeo"},"content":"            if (fullEditInfo.indexOf(\"/by\") \u003e fullEditInfo.indexOf(\"/do_on\")) {","lastModifiedDate":"2022-03-15"},{"lineNumber":204,"author":{"gitId":"BradenTeo"},"content":"                throw new WrongEditInfoFormatException();","lastModifiedDate":"2022-03-14"},{"lineNumber":205,"author":{"gitId":"BradenTeo"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":206,"author":{"gitId":"BradenTeo"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":207,"author":{"gitId":"BradenTeo"},"content":"        // tests to make sure the task description is the first input if it is present","lastModifiedDate":"2022-03-13"},{"lineNumber":208,"author":{"gitId":"BradenTeo"},"content":"        String[] splitEditInfo \u003d fullEditInfo.split(\"/by \\\\d{4}/\\\\d{2}/\\\\d{2}|/do_on \\\\d{4}/\\\\d{2}/\\\\d{2}\");","lastModifiedDate":"2022-03-15"},{"lineNumber":209,"author":{"gitId":"BradenTeo"},"content":"        if (splitEditInfo.length \u003e 1) {","lastModifiedDate":"2022-03-13"},{"lineNumber":210,"author":{"gitId":"BradenTeo"},"content":"            throw new WrongEditInfoFormatException();","lastModifiedDate":"2022-03-14"},{"lineNumber":211,"author":{"gitId":"BradenTeo"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":212,"author":{"gitId":"BradenTeo"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":213,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":214,"author":{"gitId":"BradenTeo"},"content":"    private static Command handleEdit(int taskNumberToEdit, String fullEditInfo) throws InvalidInputException {","lastModifiedDate":"2022-03-14"},{"lineNumber":215,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":216,"author":{"gitId":"BradenTeo"},"content":"        String[] splitEditInfo \u003d fullEditInfo.split(\" \");","lastModifiedDate":"2022-03-13"},{"lineNumber":217,"author":{"gitId":"BradenTeo"},"content":"        String descriptionToEdit;","lastModifiedDate":"2022-03-13"},{"lineNumber":218,"author":{"gitId":"thedarie"},"content":"        LocalDate parsedByDateToEdit;","lastModifiedDate":"2022-03-15"},{"lineNumber":219,"author":{"gitId":"thedarie"},"content":"        LocalDate parsedDoOnDateToEdit;","lastModifiedDate":"2022-03-15"},{"lineNumber":220,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":221,"author":{"gitId":"BradenTeo"},"content":"        if (!splitEditInfo[0].trim().equals(\"/by\") \u0026\u0026 !(splitEditInfo[0].trim().equals(\"/do_on\"))) {","lastModifiedDate":"2022-03-15"},{"lineNumber":222,"author":{"gitId":"BradenTeo"},"content":"            descriptionToEdit \u003d splitEditInfo[0];","lastModifiedDate":"2022-03-13"},{"lineNumber":223,"author":{"gitId":"jltha"},"content":"        } else {","lastModifiedDate":"2022-03-06"},{"lineNumber":224,"author":{"gitId":"BradenTeo"},"content":"            descriptionToEdit \u003d EMPTY_STRING;","lastModifiedDate":"2022-03-13"},{"lineNumber":225,"author":{"gitId":"BradenTeo"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":226,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":227,"author":{"gitId":"BradenTeo"},"content":"        parsedByDateToEdit \u003d getParsedDateToEdit(fullEditInfo, \"/by\");","lastModifiedDate":"2022-03-14"},{"lineNumber":228,"author":{"gitId":"thedarie"},"content":"        parsedDoOnDateToEdit \u003d getParsedDateToEdit(fullEditInfo, \"/do_on\");","lastModifiedDate":"2022-03-15"},{"lineNumber":229,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":230,"author":{"gitId":"thedarie"},"content":"        return new EditCommand(taskNumberToEdit, descriptionToEdit, parsedByDateToEdit, parsedDoOnDateToEdit);","lastModifiedDate":"2022-03-15"},{"lineNumber":231,"author":{"gitId":"BradenTeo"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":232,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":233,"author":{"gitId":"thedarie"},"content":"    private static LocalDate getParsedDateToEdit(String fullEditInfo, String keyword) throws InvalidInputException {","lastModifiedDate":"2022-03-15"},{"lineNumber":234,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":235,"author":{"gitId":"BradenTeo"},"content":"        if (fullEditInfo.contains(keyword)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":236,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":237,"author":{"gitId":"BradenTeo"},"content":"            int offsetForKeyword \u003d keyword.length() + 1;","lastModifiedDate":"2022-03-14"},{"lineNumber":238,"author":{"gitId":"BradenTeo"},"content":"            int offsetForSubstring \u003d fullEditInfo.indexOf(keyword) + offsetForKeyword;","lastModifiedDate":"2022-03-14"},{"lineNumber":239,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":240,"author":{"gitId":"BradenTeo"},"content":"            // gets the substring (of fullEditInfo) after the keyword (, which is either \"/by\" or \"/do_on\")","lastModifiedDate":"2022-03-15"},{"lineNumber":241,"author":{"gitId":"BradenTeo"},"content":"            // splits the substring and obtains the first word (which should be the date of format yyyy/MM/dd)","lastModifiedDate":"2022-03-14"},{"lineNumber":242,"author":{"gitId":"BradenTeo"},"content":"            String dateToEdit \u003d fullEditInfo.substring(offsetForSubstring).split(\" \")[0].trim();","lastModifiedDate":"2022-03-14"},{"lineNumber":243,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":244,"author":{"gitId":"thedarie"},"content":"            return prepareTaskDate(dateToEdit);","lastModifiedDate":"2022-03-15"},{"lineNumber":245,"author":{"gitId":"BradenTeo"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":246,"author":{"gitId":"BradenTeo"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":247,"author":{"gitId":"thedarie"},"content":"        return null;","lastModifiedDate":"2022-03-15"},{"lineNumber":248,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":249,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":250,"author":{"gitId":"jltha"},"content":"    private static Command prepareDelete(String[] parsedInput, TaskList taskList) {","lastModifiedDate":"2022-03-06"},{"lineNumber":251,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":252,"author":{"gitId":"jltha"},"content":"            return new DeleteCommand(parsedInput, taskList);","lastModifiedDate":"2022-03-06"},{"lineNumber":253,"author":{"gitId":"jltha"},"content":"        } catch (IndexOutOfBoundsException | InvalidInputException | NumberFormatException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":254,"author":{"gitId":"jltha"},"content":"            System.out.println(ERROR_INVALID_DELETE_INDEX_MESSAGE + HELP_MESSAGE_SPECIFIC_COMMAND);","lastModifiedDate":"2022-03-06"},{"lineNumber":255,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":256,"author":{"gitId":"jltha"},"content":"        return null;","lastModifiedDate":"2022-03-06"},{"lineNumber":257,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":258,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":259,"author":{"gitId":"jltha"},"content":"    private static Command prepareHelp(String userInput) {","lastModifiedDate":"2022-03-06"},{"lineNumber":260,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":261,"author":{"gitId":"jltha"},"content":"            String[] parsedInput \u003d userInput.split(\" \", 2);","lastModifiedDate":"2022-03-06"},{"lineNumber":262,"author":{"gitId":"jltha"},"content":"            return new HelpCommand(parsedInput[HELP_OPTIONS_INDEX]);","lastModifiedDate":"2022-03-06"},{"lineNumber":263,"author":{"gitId":"jltha"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":264,"author":{"gitId":"jltha"},"content":"            return new HelpCommand(\"show help list\");","lastModifiedDate":"2022-03-06"},{"lineNumber":265,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":266,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":267,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":268,"author":{"gitId":"jltha"},"content":"    private static Command parseShowCommandOptions(String selection) throws InvalidInputException {","lastModifiedDate":"2022-03-20"},{"lineNumber":269,"author":{"gitId":"jltha"},"content":"        if (selection.isBlank()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":270,"author":{"gitId":"jltha"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2022-03-20"},{"lineNumber":271,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":272,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-20"},{"lineNumber":273,"author":{"gitId":"jltha"},"content":"            LocalDate dayInput \u003d LocalDate.parse(selection, inputFormat);","lastModifiedDate":"2022-03-20"},{"lineNumber":274,"author":{"gitId":"jltha"},"content":"            return new ShowCommand(dayInput, null);","lastModifiedDate":"2022-03-20"},{"lineNumber":275,"author":{"gitId":"jltha"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-20"},{"lineNumber":276,"author":{"gitId":"jltha"},"content":"            return new ShowCommand(null, selection);","lastModifiedDate":"2022-03-20"},{"lineNumber":277,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":278,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":279,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":280,"author":{"gitId":"jltha"},"content":"    private static Command prepareShow(String[] splitInput) {","lastModifiedDate":"2022-03-20"},{"lineNumber":281,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-20"},{"lineNumber":282,"author":{"gitId":"jltha"},"content":"            String selection \u003d splitInput[SHOW_OPTION_INDEX].trim();","lastModifiedDate":"2022-03-20"},{"lineNumber":283,"author":{"gitId":"jltha"},"content":"            return parseShowCommandOptions(selection.toLowerCase());","lastModifiedDate":"2022-03-20"},{"lineNumber":284,"author":{"gitId":"jltha"},"content":"        } catch (ArrayIndexOutOfBoundsException | InvalidInputException e) {","lastModifiedDate":"2022-03-20"},{"lineNumber":285,"author":{"gitId":"jltha"},"content":"            System.out.println(ERROR_INVALID_INPUT_MESSAGE);","lastModifiedDate":"2022-03-20"},{"lineNumber":286,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":287,"author":{"gitId":"jltha"},"content":"        return null;","lastModifiedDate":"2022-03-20"},{"lineNumber":288,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":289,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":290,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":291,"author":{"gitId":"jltha"},"content":"     * Parses the user command input.","lastModifiedDate":"2022-03-06"},{"lineNumber":292,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":293,"author":{"gitId":"jltha"},"content":"     * @param userInput User command.","lastModifiedDate":"2022-03-06"},{"lineNumber":294,"author":{"gitId":"jltha"},"content":"     * @param taskList  Array of tasks.","lastModifiedDate":"2022-03-16"},{"lineNumber":295,"author":{"gitId":"jltha"},"content":"     * @return Command type matching the user command.","lastModifiedDate":"2022-03-06"},{"lineNumber":296,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":297,"author":{"gitId":"jltha"},"content":"    public static Command parseCommand(String userInput, TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-20"},{"lineNumber":298,"author":{"gitId":"BradenTeo"},"content":"        String[] splitInput \u003d userInput.split(\" \", 2);","lastModifiedDate":"2022-03-12"},{"lineNumber":299,"author":{"gitId":"BradenTeo"},"content":"        String commandWord \u003d splitInput[OPTIONS_INDEX].toLowerCase().trim();","lastModifiedDate":"2022-03-12"},{"lineNumber":300,"author":{"gitId":"jltha"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-03-06"},{"lineNumber":301,"author":{"gitId":"jltha"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":302,"author":{"gitId":"BradenTeo"},"content":"            return prepareMarkOrUnmark(splitInput, MarkCommand.COMMAND_WORD, taskList);","lastModifiedDate":"2022-03-12"},{"lineNumber":303,"author":{"gitId":"jltha"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":304,"author":{"gitId":"BradenTeo"},"content":"            return prepareMarkOrUnmark(splitInput, UnmarkCommand.COMMAND_WORD, taskList);","lastModifiedDate":"2022-03-12"},{"lineNumber":305,"author":{"gitId":"BradenTeo"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-12"},{"lineNumber":306,"author":{"gitId":"BradenTeo"},"content":"            return prepareAdd(splitInput, taskList);","lastModifiedDate":"2022-03-12"},{"lineNumber":307,"author":{"gitId":"BradenTeo"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-13"},{"lineNumber":308,"author":{"gitId":"thedarie"},"content":"            return prepareEdit(splitInput);","lastModifiedDate":"2022-03-15"},{"lineNumber":309,"author":{"gitId":"jltha"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":310,"author":{"gitId":"BradenTeo"},"content":"            return prepareDelete(splitInput, taskList);","lastModifiedDate":"2022-03-12"},{"lineNumber":311,"author":{"gitId":"jltha"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":312,"author":{"gitId":"jltha"},"content":"            return new ClearCommand();","lastModifiedDate":"2022-03-06"},{"lineNumber":313,"author":{"gitId":"jltha"},"content":"        case StudyCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-09"},{"lineNumber":314,"author":{"gitId":"jltha"},"content":"            return new StudyCommand();","lastModifiedDate":"2022-03-09"},{"lineNumber":315,"author":{"gitId":"jltha"},"content":"        case ShowCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-20"},{"lineNumber":316,"author":{"gitId":"jltha"},"content":"            return prepareShow(splitInput);","lastModifiedDate":"2022-03-20"},{"lineNumber":317,"author":{"gitId":"jltha"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":318,"author":{"gitId":"jltha"},"content":"            return prepareHelp(userInput);","lastModifiedDate":"2022-03-06"},{"lineNumber":319,"author":{"gitId":"jltha"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":320,"author":{"gitId":"jltha"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-03-06"},{"lineNumber":321,"author":{"gitId":"jltha"},"content":"        default:","lastModifiedDate":"2022-03-06"},{"lineNumber":322,"author":{"gitId":"jltha"},"content":"            ui.showToUser(ERROR_INVALID_INPUT_MESSAGE);","lastModifiedDate":"2022-03-20"},{"lineNumber":323,"author":{"gitId":"jltha"},"content":"            return null;","lastModifiedDate":"2022-03-06"},{"lineNumber":324,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":325,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":326,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":327,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":328,"author":{"gitId":"laiisaac"},"content":"     * Parses the default timer modes.","lastModifiedDate":"2022-03-14"},{"lineNumber":329,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":330,"author":{"gitId":"jltha"},"content":"     * @param defaultTimerChoice Mode number.","lastModifiedDate":"2022-03-16"},{"lineNumber":331,"author":{"gitId":"jltha"},"content":"     * @return Returns the duration of the timer mode selected in seconds.","lastModifiedDate":"2022-03-16"},{"lineNumber":332,"author":{"gitId":"jltha"},"content":"     * @throws InvalidTimeException If defaultTimerChoice does not match","lastModifiedDate":"2022-03-16"},{"lineNumber":333,"author":{"gitId":"jltha"},"content":"     *                              with the given choices.","lastModifiedDate":"2022-03-16"},{"lineNumber":334,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":335,"author":{"gitId":"jltha"},"content":"    private static int selectDefaultTimer(String defaultTimerChoice) throws InvalidTimeException {","lastModifiedDate":"2022-03-16"},{"lineNumber":336,"author":{"gitId":"jltha"},"content":"        switch (defaultTimerChoice) {","lastModifiedDate":"2022-03-09"},{"lineNumber":337,"author":{"gitId":"laiisaac"},"content":"        case \"0\":","lastModifiedDate":"2022-03-12"},{"lineNumber":338,"author":{"gitId":"laiisaac"},"content":"            return DEFAULT_TIMER_ZERO;","lastModifiedDate":"2022-03-12"},{"lineNumber":339,"author":{"gitId":"jltha"},"content":"        case \"1\":","lastModifiedDate":"2022-03-09"},{"lineNumber":340,"author":{"gitId":"jltha"},"content":"            return DEFAULT_TIMER_ONE;","lastModifiedDate":"2022-03-09"},{"lineNumber":341,"author":{"gitId":"jltha"},"content":"        case \"2\":","lastModifiedDate":"2022-03-09"},{"lineNumber":342,"author":{"gitId":"jltha"},"content":"            return DEFAULT_TIMER_TWO;","lastModifiedDate":"2022-03-09"},{"lineNumber":343,"author":{"gitId":"jltha"},"content":"        case \"3\":","lastModifiedDate":"2022-03-09"},{"lineNumber":344,"author":{"gitId":"jltha"},"content":"            return DEFAULT_TIMER_THREE;","lastModifiedDate":"2022-03-09"},{"lineNumber":345,"author":{"gitId":"jltha"},"content":"        default:","lastModifiedDate":"2022-03-09"},{"lineNumber":346,"author":{"gitId":"jltha"},"content":"            throw new InvalidTimeException();","lastModifiedDate":"2022-03-16"},{"lineNumber":347,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":348,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":349,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":350,"author":{"gitId":"jltha"},"content":"    private static boolean isValidDuration(int duration) {","lastModifiedDate":"2022-03-16"},{"lineNumber":351,"author":{"gitId":"jltha"},"content":"        return duration \u003e 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":352,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":353,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":354,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":355,"author":{"gitId":"laiisaac"},"content":"     * Parses input to the timer.","lastModifiedDate":"2022-03-14"},{"lineNumber":356,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":357,"author":{"gitId":"jltha"},"content":"     * @param parsedInput Parsed input.","lastModifiedDate":"2022-03-16"},{"lineNumber":358,"author":{"gitId":"jltha"},"content":"     * @return Returns duration of custom timer input, or the duration of","lastModifiedDate":"2022-03-16"},{"lineNumber":359,"author":{"gitId":"jltha"},"content":"     *         selected default timer mode in seconds.","lastModifiedDate":"2022-03-16"},{"lineNumber":360,"author":{"gitId":"jltha"},"content":"     * @throws InvalidTimeException If timer input less than or equals to 0 or there is","lastModifiedDate":"2022-03-16"},{"lineNumber":361,"author":{"gitId":"jltha"},"content":"     *                              multiple timer inputs.","lastModifiedDate":"2022-03-16"},{"lineNumber":362,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":363,"author":{"gitId":"jltha"},"content":"    public static int parseTimerInput(String[] parsedInput) throws InvalidTimeException {","lastModifiedDate":"2022-03-16"},{"lineNumber":364,"author":{"gitId":"jltha"},"content":"        if (parsedInput[TIMER_FORMAT_INDEX].trim().contains(\"/custom\")) {","lastModifiedDate":"2022-03-09"},{"lineNumber":365,"author":{"gitId":"jltha"},"content":"            if (parsedInput[TIMER_FORMAT_INDEX].trim().indexOf(\"/custom\") !\u003d CUSTOM_COMMAND_INDEX) {","lastModifiedDate":"2022-03-16"},{"lineNumber":366,"author":{"gitId":"jltha"},"content":"                throw new InvalidTimeException();","lastModifiedDate":"2022-03-16"},{"lineNumber":367,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":368,"author":{"gitId":"jltha"},"content":"            String[] customTimerInput \u003d parsedInput[TIMER_FORMAT_INDEX].split(\"/custom\", 2);","lastModifiedDate":"2022-03-09"},{"lineNumber":369,"author":{"gitId":"jltha"},"content":"            int customDuration \u003d Integer.parseInt(customTimerInput[CUSTOM_TIMER_INDEX].trim());","lastModifiedDate":"2022-03-16"},{"lineNumber":370,"author":{"gitId":"jltha"},"content":"            if (!isValidDuration(customDuration)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":371,"author":{"gitId":"jltha"},"content":"                throw new InvalidTimeException();","lastModifiedDate":"2022-03-16"},{"lineNumber":372,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-09"},{"lineNumber":373,"author":{"gitId":"jltha"},"content":"            return customDuration;","lastModifiedDate":"2022-03-16"},{"lineNumber":374,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":375,"author":{"gitId":"jltha"},"content":"        return selectDefaultTimer(parsedInput[DEFAULT_TIMER_INDEX].trim());","lastModifiedDate":"2022-03-16"},{"lineNumber":376,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":377,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":378,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":379,"author":{"gitId":"laiisaac"},"content":"     * Parses commands for study mode.","lastModifiedDate":"2022-03-14"},{"lineNumber":380,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":381,"author":{"gitId":"jltha"},"content":"     * @param rawUserInput Raw user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":382,"author":{"gitId":"jltha"},"content":"     * @param ui           UI.","lastModifiedDate":"2022-03-16"},{"lineNumber":383,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":384,"author":{"gitId":"jltha"},"content":"    public static void parseStudyMode(String rawUserInput, Ui ui, TimerLogic timerLogic) {","lastModifiedDate":"2022-03-16"},{"lineNumber":385,"author":{"gitId":"jltha"},"content":"        String[] parsedInput \u003d rawUserInput.trim().split(\" \", 2);","lastModifiedDate":"2022-03-09"},{"lineNumber":386,"author":{"gitId":"jltha"},"content":"        switch (parsedInput[STUDY_COMMAND_INDEX].trim().toLowerCase()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":387,"author":{"gitId":"jltha"},"content":"        case \"start\":","lastModifiedDate":"2022-03-09"},{"lineNumber":388,"author":{"gitId":"jltha"},"content":"            timerLogic.callStartTimer(parsedInput);","lastModifiedDate":"2022-03-16"},{"lineNumber":389,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-09"},{"lineNumber":390,"author":{"gitId":"jltha"},"content":"        case \"pause\":","lastModifiedDate":"2022-03-09"},{"lineNumber":391,"author":{"gitId":"jltha"},"content":"            timerLogic.callPauseTimer();","lastModifiedDate":"2022-03-16"},{"lineNumber":392,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-09"},{"lineNumber":393,"author":{"gitId":"jltha"},"content":"        case \"resume\":","lastModifiedDate":"2022-03-09"},{"lineNumber":394,"author":{"gitId":"jltha"},"content":"            timerLogic.callResumeTimer();","lastModifiedDate":"2022-03-16"},{"lineNumber":395,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-09"},{"lineNumber":396,"author":{"gitId":"jltha"},"content":"        case \"stop\":","lastModifiedDate":"2022-03-09"},{"lineNumber":397,"author":{"gitId":"jltha"},"content":"            timerLogic.callStopTimer();","lastModifiedDate":"2022-03-16"},{"lineNumber":398,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-09"},{"lineNumber":399,"author":{"gitId":"jltha"},"content":"        default:","lastModifiedDate":"2022-03-09"},{"lineNumber":400,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(ERROR_INVALID_STUDY_INPUT_MESSAGE);","lastModifiedDate":"2022-03-12"},{"lineNumber":401,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":402,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":403,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"laiisaac":28,"jltha":236,"thedarie":44,"BradenTeo":95}},{"path":"src/main/java/seedu/sherpass/util/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.util;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"thedarie"},"content":"import org.json.JSONArray;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"thedarie"},"content":"import org.json.JSONException;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"thedarie"},"content":"import org.json.JSONObject;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.exception.InvalidInputException;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.Task;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"import java.io.File;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"thedarie"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"thedarie"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Index.DIRECTORY_INDEX;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Index.INDENT_FACTOR;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"thedarie"},"content":"import static seedu.sherpass.constant.Message.ERROR_CORRUPT_SAVED_FILE_MESSAGE_1;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"thedarie"},"content":"import static seedu.sherpass.constant.Message.ERROR_CORRUPT_SAVED_FILE_MESSAGE_2;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"thedarie"},"content":"import static seedu.sherpass.constant.Message.ERROR_CORRUPT_SAVED_FILE_MESSAGE_3;","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"thedarie"},"content":"import static seedu.sherpass.constant.Message.ERROR_DUPLICATE_TASK_MESSAGE_1;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"thedarie"},"content":"import static seedu.sherpass.constant.Message.ERROR_DUPLICATE_TASK_MESSAGE_2;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.ERROR_IO_FAILURE_MESSAGE;","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.inputFormat;","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"public class Storage {","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"    private String saveFilePath;","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"     * Creates a constructor for the class Storage.","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"     * Initialises and creates location for save file if missing.","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"     * @param filePath Location of the save file.","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"     * @throws IOException If failed to read save file.","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"    public Storage(String filePath) throws IOException {","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"        saveFilePath \u003d filePath;","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"        System.out.println(\"Booting up...\");","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"        String[] directoryName \u003d filePath.split(\"/\");","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"        File saveDirectory \u003d new File(directoryName[DIRECTORY_INDEX]);","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"        if (saveDirectory.mkdir()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"            System.out.println(\"Creating save directory...\");","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"        File saveState \u003d new File(filePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"        if (saveState.createNewFile()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"            System.out.println(\"Creating new save state...\");","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"thedarie"},"content":"    // Wipes the existing file","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"    private void wipeSavedData() {","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"            FileWriter fw \u003d new FileWriter(saveFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"            fw.close();","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"            System.out.println(ERROR_IO_FAILURE_MESSAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"            System.exit(1);","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"thedarie"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"thedarie"},"content":"     * Returns the JSON representation of the task list.","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"thedarie"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"thedarie"},"content":"     * @param taskList The task list to be converted into JSON format.","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"thedarie"},"content":"     * @return JSONObject containing the tasks in the task list.","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"thedarie"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"thedarie"},"content":"    private JSONObject convertTaskListToJson(TaskList taskList) {","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"thedarie"},"content":"        JSONObject json \u003d new JSONObject();","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"thedarie"},"content":"        JSONArray tasks \u003d new JSONArray();","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"thedarie"},"content":"        for (Task t : taskList.getTasks()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"thedarie"},"content":"            JSONObject taskToStore \u003d new JSONObject();","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"thedarie"},"content":"            taskToStore.put(\"status\", t.getStatusIcon());","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"jltha"},"content":"            taskToStore.put(\"by_date\", (t.getByDate() \u003d\u003d null ? \"null\" : t.getByDate().format(inputFormat)));","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"jltha"},"content":"            taskToStore.put(\"do_date\", (t.getDoOnDate() \u003d\u003d null ? \"null\" : t.getDoOnDate().format(inputFormat)));","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"thedarie"},"content":"            taskToStore.put(\"description\", t.getDescription());","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"thedarie"},"content":"            tasks.put(taskToStore);","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"thedarie"},"content":"        json.put(\"tasks\", tasks);","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"thedarie"},"content":"        return json;","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"jltha"},"content":"     * Overwrites existing saved data in save file with new data.","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"jltha"},"content":"     * @param taskList Array of tasks that are to be saved.","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"thedarie"},"content":"    public JSONObject writeSaveData(TaskList taskList) {","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"thedarie"},"content":"        JSONObject taskJson \u003d convertTaskListToJson(taskList);","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"thedarie"},"content":"        String taskString \u003d taskJson.toString(INDENT_FACTOR);","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"thedarie"},"content":"        assert taskString !\u003d null;","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"thedarie"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"thedarie"},"content":"            FileWriter writer \u003d new FileWriter(saveFilePath);","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"thedarie"},"content":"            writer.write(taskString);","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"thedarie"},"content":"            writer.close();","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"thedarie"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"thedarie"},"content":"            System.out.println(ERROR_IO_FAILURE_MESSAGE);","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"thedarie"},"content":"        return taskJson;","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"jltha"},"content":"     * Loads back the save file onto the program.","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"thedarie"},"content":"     * @return ArrayList containing the tasks saved in the data file","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"thedarie"},"content":"     * @throws IOException           If an I/O error occurs while reading the data file","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"thedarie"},"content":"     * @throws InvalidInputException If the data has missing fields for a task","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"thedarie"},"content":"     * @throws JSONException         If the data file has an invalid JSON format","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"thedarie"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException, InvalidInputException, JSONException {","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"thedarie"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"thedarie"},"content":"        List\u003cString\u003e dataLines \u003d Files.readAllLines(new File(saveFilePath).toPath());","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"thedarie"},"content":"        if (dataLines.size() \u003e 0) {","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"thedarie"},"content":"            String dataString \u003d String.join(\"\", dataLines);","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"thedarie"},"content":"            JSONObject dataJson \u003d new JSONObject(dataString);","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"thedarie"},"content":"            JSONArray array \u003d dataJson.getJSONArray(\"tasks\");","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"thedarie"},"content":"            for (int i \u003d 0; i \u003c array.length(); i++) {","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"thedarie"},"content":"                JSONObject taskData \u003d array.getJSONObject(i);","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"thedarie"},"content":"                Task newTask \u003d Parser.parseSavedData(taskData);","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"thedarie"},"content":"                if (!isDuplicateTask(taskList, newTask.getDescription())) {","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"thedarie"},"content":"                    taskList.add(newTask);","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"thedarie"},"content":"                } else {","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"thedarie"},"content":"                    System.out.println(ERROR_DUPLICATE_TASK_MESSAGE_1 + newTask.getDescription()","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"thedarie"},"content":"                        + ERROR_DUPLICATE_TASK_MESSAGE_2);","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"thedarie"},"content":"                }","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"thedarie"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":132,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":133,"author":{"gitId":"thedarie"},"content":"        return taskList;","lastModifiedDate":"2022-03-10"},{"lineNumber":134,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"thedarie"},"content":"    private boolean isDuplicateTask(ArrayList\u003cTask\u003e tasks, String description) {","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"thedarie"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"thedarie"},"content":"            if (t.getDescription().equals(description)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"thedarie"},"content":"                return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":140,"author":{"gitId":"thedarie"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"thedarie"},"content":"        return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"thedarie"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":146,"author":{"gitId":"thedarie"},"content":"     * Creates a new save file or exits the program.","lastModifiedDate":"2022-03-14"},{"lineNumber":147,"author":{"gitId":"thedarie"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"thedarie"},"content":"     * When the save file fails to load, the user decides if the program creates new save file","lastModifiedDate":"2022-03-14"},{"lineNumber":149,"author":{"gitId":"thedarie"},"content":"     * or the user can manually inspect the save file.","lastModifiedDate":"2022-03-14"},{"lineNumber":150,"author":{"gitId":"thedarie"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"thedarie"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"thedarie"},"content":"     * @param ui Ui for printing messages","lastModifiedDate":"2022-03-14"},{"lineNumber":153,"author":{"gitId":"thedarie"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":154,"author":{"gitId":"thedarie"},"content":"    public void handleCorruptedSave(Ui ui) {","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"thedarie"},"content":"        ui.showToUser(ERROR_CORRUPT_SAVED_FILE_MESSAGE_1);","lastModifiedDate":"2022-03-10"},{"lineNumber":156,"author":{"gitId":"thedarie"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-03-10"},{"lineNumber":157,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":158,"author":{"gitId":"thedarie"},"content":"        while (!response.equalsIgnoreCase(\"y\") \u0026\u0026 !response.equalsIgnoreCase(\"n\")) {","lastModifiedDate":"2022-03-14"},{"lineNumber":159,"author":{"gitId":"thedarie"},"content":"            ui.showToUser(ERROR_CORRUPT_SAVED_FILE_MESSAGE_2);","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"thedarie"},"content":"            response \u003d ui.readCommand().trim();","lastModifiedDate":"2022-03-15"},{"lineNumber":161,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":162,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":163,"author":{"gitId":"thedarie"},"content":"        assert response.equalsIgnoreCase(\"y\") || response.equalsIgnoreCase(\"n\");","lastModifiedDate":"2022-03-14"},{"lineNumber":164,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":165,"author":{"gitId":"thedarie"},"content":"        if (response.equalsIgnoreCase(\"y\")) {","lastModifiedDate":"2022-03-14"},{"lineNumber":166,"author":{"gitId":"thedarie"},"content":"            wipeSavedData();","lastModifiedDate":"2022-03-10"},{"lineNumber":167,"author":{"gitId":"thedarie"},"content":"        } else {","lastModifiedDate":"2022-03-14"},{"lineNumber":168,"author":{"gitId":"thedarie"},"content":"            ui.showToUser(ERROR_CORRUPT_SAVED_FILE_MESSAGE_3);","lastModifiedDate":"2022-03-10"},{"lineNumber":169,"author":{"gitId":"thedarie"},"content":"            System.exit(1);","lastModifiedDate":"2022-03-10"},{"lineNumber":170,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":171,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":172,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":173,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":68,"thedarie":105}},{"path":"src/main/java/seedu/sherpass/util/Timer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laiisaac"},"content":"package seedu.sherpass.util;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.TimerConstant.TIME_INTERVAL;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.TimerConstant.NO_TIME_LEFT;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.TimerConstant.ONE_MINUTE;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.TimerConstant.ONE_HOUR;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"laiisaac"},"content":"public class Timer extends Thread {","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"    private boolean isTimerRunning \u003d false;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"    private volatile boolean isTimerPaused \u003d false;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"    private boolean forcedStop \u003d false;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"laiisaac"},"content":"    private boolean hasTimeLeft \u003d false;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"    private static Ui ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"    protected int timeLeft;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"laiisaac"},"content":"     * Creates a constructor for timer. Initialises the parameters needed for the countdown timer.","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"laiisaac"},"content":"     * @param ui UI","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"laiisaac"},"content":"    public Timer(Ui ui) {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"laiisaac"},"content":"        timeLeft \u003d NO_TIME_LEFT;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"        Timer.ui \u003d ui;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"     * Returns timer running status.","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"     * @return Returns true if timer has started. False otherwise.","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"    public boolean isTimerRunning() {","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"        return isTimerRunning;","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"laiisaac"},"content":"     * Creates a new thread to run the timer. The timer will continue to run until it has run out of time, or has been","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"laiisaac"},"content":"     * stopped by the user.","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"laiisaac"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"laiisaac"},"content":"    public void run() {","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"laiisaac"},"content":"        isTimerRunning \u003d true;","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"laiisaac"},"content":"        printTimerStart();","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"laiisaac"},"content":"        while (hasTimeLeft) {","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"laiisaac"},"content":"            assert timeLeft \u003e NO_TIME_LEFT;","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"laiisaac"},"content":"            printTimeLeft();","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"laiisaac"},"content":"            update();","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"laiisaac"},"content":"        if (timerRanOutOfTime()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"laiisaac"},"content":"            assert timeLeft \u003c\u003d NO_TIME_LEFT;","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"laiisaac"},"content":"            isTimerRunning \u003d false;","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"Time is up!\");","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"laiisaac"},"content":"        this.interrupt();","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"laiisaac"},"content":"     * Updates the timer by letting the thread sleep for 1 second, then updating timeLeft. The timer will not update","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"laiisaac"},"content":"     * if it is paused and will instead wait for the user to resume the timer.","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"laiisaac"},"content":"    private void update() {","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"laiisaac"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"laiisaac"},"content":"            Thread.sleep(1000);","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"laiisaac"},"content":"            timeLeft -\u003d 1;","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"laiisaac"},"content":"            updateHasTimeLeft();","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"jltha"},"content":"            if (isTimerPaused) {","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"laiisaac"},"content":"                waitForTimerToResume();","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"laiisaac"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"laiisaac"},"content":"        } catch (InterruptedException e) {","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"laiisaac"},"content":"            return;","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"laiisaac"},"content":"    private void updateHasTimeLeft() {","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"laiisaac"},"content":"        if (timeLeft \u003c\u003d NO_TIME_LEFT) {","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"laiisaac"},"content":"            hasTimeLeft \u003d false;","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"laiisaac"},"content":"     * Method causes the thread which the timer is running on to wait when it is paused, until the user resumes the","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"laiisaac"},"content":"     * timer.","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"laiisaac"},"content":"    private void waitForTimerToResume() throws InterruptedException {","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"laiisaac"},"content":"        synchronized (this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"jltha"},"content":"            while (isTimerPaused) {","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"laiisaac"},"content":"                wait();","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"laiisaac"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"laiisaac"},"content":"     * Returns whether timer ran out of time.","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"jltha"},"content":"     * @return Boolean of whether timer ran out of time.","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"laiisaac"},"content":"    private boolean timerRanOutOfTime() {","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"laiisaac"},"content":"        return (!hasTimeLeft \u0026\u0026 !forcedStop);","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"laiisaac"},"content":"     * Prints the time left on the timer at certain intervals.","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"laiisaac"},"content":"     * When timer has more than a minute remaining, it prints time remaining every minute (X min:00s).","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"laiisaac"},"content":"     * It will print out the time remaining every TIME_INTERVAL seconds when less than a minute remains.","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"laiisaac"},"content":"    public void printTimeLeft() {","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"laiisaac"},"content":"        if (timeLeft \u003e ONE_MINUTE) {","lastModifiedDate":"2022-03-13"},{"lineNumber":110,"author":{"gitId":"laiisaac"},"content":"            if (timeLeft % ONE_MINUTE \u003d\u003d 0) {","lastModifiedDate":"2022-03-13"},{"lineNumber":111,"author":{"gitId":"laiisaac"},"content":"                int minutesLeft \u003d timeLeft / ONE_MINUTE;","lastModifiedDate":"2022-03-13"},{"lineNumber":112,"author":{"gitId":"laiisaac"},"content":"                ui.showToUser(minutesLeft + \" minutes left.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":113,"author":{"gitId":"laiisaac"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":114,"author":{"gitId":"laiisaac"},"content":"            return;","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"laiisaac"},"content":"        if (timeLeft % TIME_INTERVAL \u003d\u003d 0) {","lastModifiedDate":"2022-03-13"},{"lineNumber":117,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(timeLeft + \" seconds left.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":118,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":119,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":120,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":121,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"laiisaac"},"content":"     * Prints the timer selected by the user.","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":124,"author":{"gitId":"laiisaac"},"content":"    public void printTimerStart() {","lastModifiedDate":"2022-03-13"},{"lineNumber":125,"author":{"gitId":"laiisaac"},"content":"        int hours;","lastModifiedDate":"2022-03-13"},{"lineNumber":126,"author":{"gitId":"laiisaac"},"content":"        int minutes;","lastModifiedDate":"2022-03-13"},{"lineNumber":127,"author":{"gitId":"laiisaac"},"content":"        int seconds;","lastModifiedDate":"2022-03-13"},{"lineNumber":128,"author":{"gitId":"laiisaac"},"content":"        if (timeLeft \u003e\u003d ONE_HOUR) {","lastModifiedDate":"2022-03-13"},{"lineNumber":129,"author":{"gitId":"laiisaac"},"content":"            hours \u003d timeLeft / ONE_HOUR;","lastModifiedDate":"2022-03-13"},{"lineNumber":130,"author":{"gitId":"laiisaac"},"content":"            minutes \u003d (timeLeft - hours * ONE_HOUR) / ONE_MINUTE;","lastModifiedDate":"2022-03-13"},{"lineNumber":131,"author":{"gitId":"laiisaac"},"content":"            seconds \u003d timeLeft - hours * ONE_HOUR - minutes * ONE_MINUTE;","lastModifiedDate":"2022-03-13"},{"lineNumber":132,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"Timer of \" + hours + \" hours \" + minutes + \" minutes \"","lastModifiedDate":"2022-03-13"},{"lineNumber":133,"author":{"gitId":"laiisaac"},"content":"                    + seconds + \" seconds started.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":134,"author":{"gitId":"laiisaac"},"content":"        } else if (timeLeft \u003e\u003d ONE_MINUTE) {","lastModifiedDate":"2022-03-13"},{"lineNumber":135,"author":{"gitId":"laiisaac"},"content":"            minutes \u003d timeLeft / ONE_MINUTE;","lastModifiedDate":"2022-03-13"},{"lineNumber":136,"author":{"gitId":"laiisaac"},"content":"            seconds \u003d timeLeft - (minutes * ONE_MINUTE);","lastModifiedDate":"2022-03-13"},{"lineNumber":137,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"Timer of \" + minutes + \" minutes \"","lastModifiedDate":"2022-03-13"},{"lineNumber":138,"author":{"gitId":"laiisaac"},"content":"                    + seconds + \" seconds started.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":139,"author":{"gitId":"laiisaac"},"content":"        } else {","lastModifiedDate":"2022-03-13"},{"lineNumber":140,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"Timer of \" + timeLeft + \" seconds started.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":141,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":142,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":143,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":144,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":145,"author":{"gitId":"laiisaac"},"content":"     * Sets the duration of the timer, as specified by the user.","lastModifiedDate":"2022-03-14"},{"lineNumber":146,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":147,"author":{"gitId":"jltha"},"content":"     * @param duration Duration of timer in seconds.","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":149,"author":{"gitId":"laiisaac"},"content":"    public void setDuration(int duration) {","lastModifiedDate":"2022-03-11"},{"lineNumber":150,"author":{"gitId":"laiisaac"},"content":"        timeLeft \u003d duration;","lastModifiedDate":"2022-03-11"},{"lineNumber":151,"author":{"gitId":"laiisaac"},"content":"        hasTimeLeft \u003d true;","lastModifiedDate":"2022-03-11"},{"lineNumber":152,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":153,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":154,"author":{"gitId":"laiisaac"},"content":"    public boolean getHasTimeLeft() {","lastModifiedDate":"2022-03-13"},{"lineNumber":155,"author":{"gitId":"laiisaac"},"content":"        return hasTimeLeft;","lastModifiedDate":"2022-03-13"},{"lineNumber":156,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":157,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":158,"author":{"gitId":"laiisaac"},"content":"    public boolean isTimerPaused() {","lastModifiedDate":"2022-03-13"},{"lineNumber":159,"author":{"gitId":"jltha"},"content":"        return isTimerPaused;","lastModifiedDate":"2022-03-15"},{"lineNumber":160,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":161,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":162,"author":{"gitId":"laiisaac"},"content":"    public int getTimeLeft() {","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"laiisaac"},"content":"        return timeLeft;","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":167,"author":{"gitId":"laiisaac"},"content":"     * Resumes the timer by calling notify() on the waiting thread.","lastModifiedDate":"2022-03-14"},{"lineNumber":168,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":169,"author":{"gitId":"laiisaac"},"content":"    public void resumeTimer() {","lastModifiedDate":"2022-03-10"},{"lineNumber":170,"author":{"gitId":"laiisaac"},"content":"        synchronized (this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":171,"author":{"gitId":"jltha"},"content":"            isTimerPaused \u003d false;","lastModifiedDate":"2022-03-15"},{"lineNumber":172,"author":{"gitId":"laiisaac"},"content":"            notify();","lastModifiedDate":"2022-03-10"},{"lineNumber":173,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":174,"author":{"gitId":"laiisaac"},"content":"        ui.showToUser(\"Okay! I\u0027ve resumed the timer. You have \" + timeLeft + \" seconds left.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":175,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":176,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":177,"author":{"gitId":"laiisaac"},"content":"    public void pauseTimer() {","lastModifiedDate":"2022-03-11"},{"lineNumber":178,"author":{"gitId":"laiisaac"},"content":"        ui.showToUser(\"Got it! I\u0027ve paused the timer.\\n\"","lastModifiedDate":"2022-03-11"},{"lineNumber":179,"author":{"gitId":"laiisaac"},"content":"                + \"Feel free to resume whenever you\u0027re ready.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":180,"author":{"gitId":"jltha"},"content":"        isTimerPaused \u003d true;","lastModifiedDate":"2022-03-15"},{"lineNumber":181,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":182,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":183,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":184,"author":{"gitId":"laiisaac"},"content":"     * Stops the timer if it is running, else prints an error message.","lastModifiedDate":"2022-03-14"},{"lineNumber":185,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":186,"author":{"gitId":"laiisaac"},"content":"    public void stopTimer() {","lastModifiedDate":"2022-03-11"},{"lineNumber":187,"author":{"gitId":"laiisaac"},"content":"        if (isTimerRunning) {","lastModifiedDate":"2022-03-14"},{"lineNumber":188,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"Alright, I\u0027ve stopped the timer.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":189,"author":{"gitId":"laiisaac"},"content":"            isTimerRunning \u003d false;","lastModifiedDate":"2022-03-14"},{"lineNumber":190,"author":{"gitId":"laiisaac"},"content":"            forcedStop \u003d true;","lastModifiedDate":"2022-03-12"},{"lineNumber":191,"author":{"gitId":"laiisaac"},"content":"            timeLeft \u003d NO_TIME_LEFT;","lastModifiedDate":"2022-03-11"},{"lineNumber":192,"author":{"gitId":"laiisaac"},"content":"            hasTimeLeft \u003d false;","lastModifiedDate":"2022-03-11"},{"lineNumber":193,"author":{"gitId":"laiisaac"},"content":"            this.interrupt();","lastModifiedDate":"2022-03-11"},{"lineNumber":194,"author":{"gitId":"laiisaac"},"content":"        } else {","lastModifiedDate":"2022-03-12"},{"lineNumber":195,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"The timer has already stopped.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":196,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":197,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":198,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":199,"author":{"gitId":"laiisaac"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"laiisaac":180,"jltha":19}},{"path":"src/main/java/seedu/sherpass/util/TimerLogic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laiisaac"},"content":"package seedu.sherpass.util;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"import seedu.sherpass.exception.InvalidTimeException;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.ERROR_INVALID_TIMER_INPUT_MESSAGE;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"laiisaac"},"content":"public class TimerLogic {","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"laiisaac"},"content":"    private static Ui ui;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"    private static Timer timer;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"     * Creates a constructor for TimerLogic.","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"     * @param ui UI","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"    public TimerLogic(Ui ui) {","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"        TimerLogic.ui \u003d ui;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"laiisaac"},"content":"        timer \u003d new Timer(ui);","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"    public boolean isTimerRunning() {","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"        return timer.isTimerRunning();","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"laiisaac"},"content":"     * Creates a thread using timer.start() to start the timer with the user\u0027s specified duration.","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"laiisaac"},"content":"     * @param parsedInput Parsed input of the user","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"    public void callStartTimer(String[] parsedInput) {","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"laiisaac"},"content":"        if (timer.getHasTimeLeft()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"You already have a timer running!\");","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"laiisaac"},"content":"            return;","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"            int duration \u003d Parser.parseTimerInput(parsedInput);","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"            assert (duration \u003e 0);","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"laiisaac"},"content":"            timer.setDuration(duration);","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"laiisaac"},"content":"            timer.start();","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"        } catch (ArrayIndexOutOfBoundsException | NumberFormatException | InvalidTimeException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"            ui.showToUser(ERROR_INVALID_TIMER_INPUT_MESSAGE);","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"    public void callPauseTimer() {","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"laiisaac"},"content":"        if (timer.isTimerPaused()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"The timer is already paused!\");","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"laiisaac"},"content":"        } else if (!timer.getHasTimeLeft()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"The timer has already finished!\");","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"laiisaac"},"content":"        } else {","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"            assert timer.isTimerRunning();","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"laiisaac"},"content":"            timer.pauseTimer();","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"    public void callResumeTimer() {","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"laiisaac"},"content":"        if (timer.isTimerPaused() \u0026\u0026 timer.getHasTimeLeft()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"laiisaac"},"content":"            timer.resumeTimer();","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"        } else if (timer.isTimerRunning()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"            assert timer.getHasTimeLeft();","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"The timer is still running!\");","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"        } else {","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"There is no timer running currently!\");","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"jltha"},"content":"    public void callStopTimer() {","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"laiisaac"},"content":"        timer.stopTimer();","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"laiisaac"},"content":"     * Resets the timer by creating a new timer object, which can then be started by the user.","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"    public void callResetTimer() {","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"jltha"},"content":"        timer \u003d new Timer(ui);","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"laiisaac"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"laiisaac":57,"jltha":22}},{"path":"src/main/java/seedu/sherpass/util/Timetable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.util;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.Task;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.Main.LOGGER;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.dayOnlyFormat;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.dateOnlyFormat;","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.TimetableConstant.BLANK_MARK_STATUS;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.TimetableConstant.BLANK_TIME_PERIOD;","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.TimetableConstant.DATE_SPACE_FULL_LENGTH;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.TimetableConstant.DAYS_IN_A_WEEK;","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.TimetableConstant.PARTITION_PIPE_LINE_LENGTH;","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.TimetableConstant.PARTITION_SPACE_OFFSET_LENGTH;","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.TimetableConstant.STRING_COMPARE_OFFSET;","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.TimetableConstant.TASK_SPACE_COMPARE_LENGTH;","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.TimetableConstant.TASK_SPACE_FULL_LENGTH;","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.TimetableConstant.TASK_SPACE_COMPARE_OFFSET_LENGTH;","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.TimetableConstant.TIMETABLE_SIZE_OFFSET;","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.TimetableConstant.WHITE_SPACE_FRONT_OFFSET_LENGTH;","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"public class Timetable {","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"    private static int findTaskDescriptionLength(ArrayList\u003cTask\u003e filteredTasks) {","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"        int max \u003d 0;","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"        for (Task task : filteredTasks) {","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"            int taskLength \u003d task.getDescription().length();","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"            if (taskLength \u003e max) {","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"                max \u003d taskLength;","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"        return max;","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"    private static int findTaskLength(ArrayList\u003cTask\u003e filteredTasks) {","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"        int descriptionLength \u003d findTaskDescriptionLength(filteredTasks);","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"        if (descriptionLength \u003e TASK_SPACE_COMPARE_LENGTH) {","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"            return descriptionLength + TASK_SPACE_COMPARE_OFFSET_LENGTH;","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"        return TASK_SPACE_FULL_LENGTH;","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"    private static long calculateColBackWhiteSpace(long maxDescriptionLength,","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"                                                   String description) {","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"        return maxDescriptionLength - (description.length() + WHITE_SPACE_FRONT_OFFSET_LENGTH);","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"    private static void printRow(String colOne, String colTwo, String colThree,","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"                                 String colFour, String colFive,","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"                                 long taskLength, long doOnDateLength, int rowNumber, Ui ui) {","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"        String taskColumnBackWhiteSpace \u003d ui.getRepeatedCharacters(\" \",","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"                calculateColBackWhiteSpace(taskLength, colFour));","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"        String doOnDateColumnBackWhiteSpace \u003d ui.getRepeatedCharacters(\" \",","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"                calculateColBackWhiteSpace(doOnDateLength, colFive));","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"        if (rowNumber \u003d\u003d 1) {","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"|  \" + colOne + \"       |  \" + colTwo + \"       |  \"","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"                    + colThree + \" |  \" + colFour + taskColumnBackWhiteSpace","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"                    + \"|  \" + colFive + doOnDateColumnBackWhiteSpace + \"|\");","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"jltha"},"content":"        } else if (rowNumber \u003d\u003d 2) {","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"|  \" + colOne + \"       | \" + colTwo + \" |      \"","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"jltha"},"content":"                    + colThree + \"       |  \" + colFour + taskColumnBackWhiteSpace","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"jltha"},"content":"                    + \"|  \" + colFive + doOnDateColumnBackWhiteSpace + \"|\");","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"jltha"},"content":"        } else if (rowNumber \u003d\u003d 3) {","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"| \" + colOne + \" | \" + colTwo + \" |      \" + colThree","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"jltha"},"content":"                    + \"       |  \" + colFour + taskColumnBackWhiteSpace + \"|  \"","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"jltha"},"content":"                    + colFive + doOnDateColumnBackWhiteSpace + \"|\");","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"jltha"},"content":"        } else {","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"|            | \" + colTwo + \" |      \" + colThree","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"jltha"},"content":"                    + \"       |  \" + colFour + taskColumnBackWhiteSpace + \"|  \"","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"jltha"},"content":"                    + colFive + doOnDateColumnBackWhiteSpace + \"|\");","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"jltha"},"content":"    private static boolean isDuplicate(String currentString, String prevString, boolean isOriginal) {","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"jltha"},"content":"        return currentString.equals(prevString) || !isOriginal;","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"jltha"},"content":"    private static void printTimetable(String day, String date, ArrayList\u003cTask\u003e filteredTasks,","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"jltha"},"content":"                                       Ui ui, long taskLength, long doOnDateLength, long partitionLength) {","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"jltha"},"content":"        int j \u003d 0;","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"jltha"},"content":"        String colOne;","lastModifiedDate":"2022-03-21"},{"lineNumber":90,"author":{"gitId":"jltha"},"content":"        String colTwo \u003d \"Time\";","lastModifiedDate":"2022-03-21"},{"lineNumber":91,"author":{"gitId":"jltha"},"content":"        String colThree \u003d \"Mark Status\";","lastModifiedDate":"2022-03-21"},{"lineNumber":92,"author":{"gitId":"jltha"},"content":"        String colFour \u003d \"Task Description\";","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"jltha"},"content":"        String colFive \u003d \"Do on Date\";","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"jltha"},"content":"        boolean isOriginal \u003d true;","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"jltha"},"content":"        for (int i \u003d 0; i \u003c filteredTasks.size() + TIMETABLE_SIZE_OFFSET; i++) {","lastModifiedDate":"2022-03-20"},{"lineNumber":96,"author":{"gitId":"jltha"},"content":"            if ((i \u003d\u003d 0) || (i \u003d\u003d filteredTasks.size() + TIMETABLE_SIZE_OFFSET - 1)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"jltha"},"content":"                ui.showToUser(ui.getRepeatedCharacters(\"-\", partitionLength));","lastModifiedDate":"2022-03-20"},{"lineNumber":98,"author":{"gitId":"jltha"},"content":"                continue;","lastModifiedDate":"2022-03-21"},{"lineNumber":99,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-21"},{"lineNumber":100,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":101,"author":{"gitId":"jltha"},"content":"            colOne \u003d (i \u003d\u003d 1) ? \"Day\" : ((i \u003d\u003d 2) ? day : date);","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"jltha"},"content":"            if (i \u003e\u003d 2) {","lastModifiedDate":"2022-03-21"},{"lineNumber":103,"author":{"gitId":"jltha"},"content":"                colTwo \u003d (j \u003c filteredTasks.size())","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"jltha"},"content":"                        ? (isDuplicate(filteredTasks.get(j).getTimePeriod(), colTwo, isOriginal)","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"jltha"},"content":"                        ? BLANK_TIME_PERIOD : filteredTasks.get(j).getTimePeriod()) : BLANK_TIME_PERIOD;","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"jltha"},"content":"                isOriginal \u003d j \u003c filteredTasks.size()","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"jltha"},"content":"                        \u0026\u0026 (!isDuplicate(filteredTasks.get(j).getTimePeriod(), colTwo, isOriginal));","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"jltha"},"content":"                colThree \u003d (j \u003c filteredTasks.size()) ? filteredTasks.get(j).getStatusIcon() : BLANK_MARK_STATUS;","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"jltha"},"content":"                colFour \u003d (j \u003c filteredTasks.size())","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"jltha"},"content":"                        ? (filteredTasks.get(j).getIndex() + \". \" + filteredTasks.get(j).getDescription())","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"jltha"},"content":"                        : ui.getRepeatedCharacters(\" \", taskLength - STRING_COMPARE_OFFSET);","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"jltha"},"content":"                colFive \u003d (j \u003c filteredTasks.size()) ? filteredTasks.get(j).getDoOnDateString(true)","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"jltha"},"content":"                        : ui.getRepeatedCharacters(\" \", doOnDateLength - STRING_COMPARE_OFFSET);","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"jltha"},"content":"                j++;","lastModifiedDate":"2022-03-20"},{"lineNumber":115,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":116,"author":{"gitId":"jltha"},"content":"            printRow(colOne, colTwo, colThree, colFour, colFive, taskLength, doOnDateLength, i, ui);","lastModifiedDate":"2022-03-21"},{"lineNumber":117,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":118,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":119,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":120,"author":{"gitId":"jltha"},"content":"    private static long calcPartitionLength(long taskLength, long dateLength) {","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"jltha"},"content":"        return PARTITION_SPACE_OFFSET_LENGTH + taskLength + dateLength + PARTITION_PIPE_LINE_LENGTH;","lastModifiedDate":"2022-03-20"},{"lineNumber":122,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":123,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":124,"author":{"gitId":"jltha"},"content":"    private static void printEmptyTimetable(Ui ui, String day, String date, long partitionLength) {","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"jltha"},"content":"        ui.showToUser(ui.getRepeatedCharacters(\"-\", partitionLength));","lastModifiedDate":"2022-03-21"},{"lineNumber":126,"author":{"gitId":"jltha"},"content":"        ui.showToUser(\"|  Day       |  Time       |  Mark status |  Task Description    |  Do on date  |\");","lastModifiedDate":"2022-03-21"},{"lineNumber":127,"author":{"gitId":"jltha"},"content":"        String thirdRow \u003d \"|  \" + day + \"       |             Your schedule is empty for the day!\";","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"jltha"},"content":"        ui.showToUser(thirdRow + ui.getRepeatedCharacters(\" \",","lastModifiedDate":"2022-03-21"},{"lineNumber":129,"author":{"gitId":"jltha"},"content":"                partitionLength - thirdRow.length() - 1) + \"|\");","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"jltha"},"content":"        String fourthRow \u003d \"| \" + date + \" |\";","lastModifiedDate":"2022-03-21"},{"lineNumber":131,"author":{"gitId":"jltha"},"content":"        ui.showToUser(fourthRow + ui.getRepeatedCharacters(\" \",","lastModifiedDate":"2022-03-21"},{"lineNumber":132,"author":{"gitId":"jltha"},"content":"                partitionLength - fourthRow.length() - 1) + \"|\");","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"jltha"},"content":"        ui.showToUser(ui.getRepeatedCharacters(\"-\", partitionLength));","lastModifiedDate":"2022-03-21"},{"lineNumber":134,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":135,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":136,"author":{"gitId":"jltha"},"content":"    private static void prepareTimetable(LocalDate dateInput, ArrayList\u003cTask\u003e filteredTasks, Ui ui) {","lastModifiedDate":"2022-03-20"},{"lineNumber":137,"author":{"gitId":"jltha"},"content":"        String day \u003d dateInput.format(dayOnlyFormat);","lastModifiedDate":"2022-03-20"},{"lineNumber":138,"author":{"gitId":"jltha"},"content":"        String date \u003d dateInput.format(dateOnlyFormat);","lastModifiedDate":"2022-03-20"},{"lineNumber":139,"author":{"gitId":"jltha"},"content":"        long taskLength \u003d findTaskLength(filteredTasks);","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"jltha"},"content":"        long doOnDateLength \u003d DATE_SPACE_FULL_LENGTH;","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"jltha"},"content":"        long partitionLength \u003d calcPartitionLength(taskLength, doOnDateLength);","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"yuzhongng"},"content":"        if (filteredTasks.isEmpty()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"jltha"},"content":"            printEmptyTimetable(ui, day, date, partitionLength);","lastModifiedDate":"2022-03-21"},{"lineNumber":144,"author":{"gitId":"jltha"},"content":"            return;","lastModifiedDate":"2022-03-21"},{"lineNumber":145,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":146,"author":{"gitId":"jltha"},"content":"        printTimetable(day, date, filteredTasks, ui, taskLength, doOnDateLength, partitionLength);","lastModifiedDate":"2022-03-20"},{"lineNumber":147,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":148,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":149,"author":{"gitId":"yuzhongng"},"content":"    public static void showTodaySchedule(TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"yuzhongng"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d taskList.getFilteredTasksByDate(LocalDate.now());","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"yuzhongng"},"content":"        prepareTimetable(LocalDate.now(), filteredTasks, ui);","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":155,"author":{"gitId":"jltha"},"content":"     * Generate a timetable for the day according to the date input.","lastModifiedDate":"2022-03-20"},{"lineNumber":156,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":157,"author":{"gitId":"jltha"},"content":"     * @param dateInput The date input.","lastModifiedDate":"2022-03-20"},{"lineNumber":158,"author":{"gitId":"jltha"},"content":"     * @param taskList  Representation of an array of tasks.","lastModifiedDate":"2022-03-20"},{"lineNumber":159,"author":{"gitId":"jltha"},"content":"     * @param ui        The user interface which interacts with the user.","lastModifiedDate":"2022-03-20"},{"lineNumber":160,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":161,"author":{"gitId":"jltha"},"content":"    public static void showScheduleByDay(LocalDate dateInput, TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-20"},{"lineNumber":162,"author":{"gitId":"jltha"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d taskList.getFilteredTasksByDate(dateInput);","lastModifiedDate":"2022-03-20"},{"lineNumber":163,"author":{"gitId":"jltha"},"content":"        prepareTimetable(dateInput, filteredTasks, ui);","lastModifiedDate":"2022-03-20"},{"lineNumber":164,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":165,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":166,"author":{"gitId":"jltha"},"content":"    private static LocalDate resetDateToMonday(String currentDate, Ui ui) {","lastModifiedDate":"2022-03-20"},{"lineNumber":167,"author":{"gitId":"jltha"},"content":"        switch (currentDate) {","lastModifiedDate":"2022-03-20"},{"lineNumber":168,"author":{"gitId":"jltha"},"content":"        case \"Mon\":","lastModifiedDate":"2022-03-20"},{"lineNumber":169,"author":{"gitId":"jltha"},"content":"            return LocalDate.now();","lastModifiedDate":"2022-03-20"},{"lineNumber":170,"author":{"gitId":"jltha"},"content":"        case \"Tue\":","lastModifiedDate":"2022-03-20"},{"lineNumber":171,"author":{"gitId":"jltha"},"content":"            return LocalDate.now().minus(1, ChronoUnit.DAYS);","lastModifiedDate":"2022-03-20"},{"lineNumber":172,"author":{"gitId":"jltha"},"content":"        case \"Wed\":","lastModifiedDate":"2022-03-20"},{"lineNumber":173,"author":{"gitId":"jltha"},"content":"            return LocalDate.now().minus(2, ChronoUnit.DAYS);","lastModifiedDate":"2022-03-20"},{"lineNumber":174,"author":{"gitId":"jltha"},"content":"        case \"Thu\":","lastModifiedDate":"2022-03-20"},{"lineNumber":175,"author":{"gitId":"jltha"},"content":"            return LocalDate.now().minus(3, ChronoUnit.DAYS);","lastModifiedDate":"2022-03-20"},{"lineNumber":176,"author":{"gitId":"jltha"},"content":"        case \"Fri\":","lastModifiedDate":"2022-03-20"},{"lineNumber":177,"author":{"gitId":"jltha"},"content":"            return LocalDate.now().minus(4, ChronoUnit.DAYS);","lastModifiedDate":"2022-03-20"},{"lineNumber":178,"author":{"gitId":"jltha"},"content":"        case \"Sat\":","lastModifiedDate":"2022-03-20"},{"lineNumber":179,"author":{"gitId":"jltha"},"content":"            return LocalDate.now().minus(5, ChronoUnit.DAYS);","lastModifiedDate":"2022-03-20"},{"lineNumber":180,"author":{"gitId":"jltha"},"content":"        case \"Sun\":","lastModifiedDate":"2022-03-20"},{"lineNumber":181,"author":{"gitId":"jltha"},"content":"            return LocalDate.now().minus(6, ChronoUnit.DAYS);","lastModifiedDate":"2022-03-20"},{"lineNumber":182,"author":{"gitId":"jltha"},"content":"        default:","lastModifiedDate":"2022-03-20"},{"lineNumber":183,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"Oops! There seems to be some error\\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":184,"author":{"gitId":"jltha"},"content":"                    + \"while running the system.\\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":185,"author":{"gitId":"jltha"},"content":"                    + \"Please contact the developers for help.\\n\");","lastModifiedDate":"2022-03-20"},{"lineNumber":186,"author":{"gitId":"jltha"},"content":"            LOGGER.log(Level.WARNING, \"Input that caused the error: \" + currentDate);","lastModifiedDate":"2022-03-20"},{"lineNumber":187,"author":{"gitId":"jltha"},"content":"            return null;","lastModifiedDate":"2022-03-20"},{"lineNumber":188,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":189,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":190,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":191,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":192,"author":{"gitId":"jltha"},"content":"     * Generate a timetable for the current week.","lastModifiedDate":"2022-03-20"},{"lineNumber":193,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":194,"author":{"gitId":"jltha"},"content":"     * @param taskList Representation of an array of tasks.","lastModifiedDate":"2022-03-20"},{"lineNumber":195,"author":{"gitId":"jltha"},"content":"     * @param ui       The user interface which interacts with the user.","lastModifiedDate":"2022-03-20"},{"lineNumber":196,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":197,"author":{"gitId":"jltha"},"content":"    public static void showScheduleOfTheWeek(TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-20"},{"lineNumber":198,"author":{"gitId":"jltha"},"content":"        LocalDate currentDate \u003d resetDateToMonday(LocalDate.now().format(dayOnlyFormat), ui);","lastModifiedDate":"2022-03-20"},{"lineNumber":199,"author":{"gitId":"jltha"},"content":"        for (int i \u003d 0; i \u003c DAYS_IN_A_WEEK; i++) {","lastModifiedDate":"2022-03-20"},{"lineNumber":200,"author":{"gitId":"jltha"},"content":"            showScheduleByDay(currentDate, taskList, ui);","lastModifiedDate":"2022-03-20"},{"lineNumber":201,"author":{"gitId":"jltha"},"content":"            assert (currentDate !\u003d null);","lastModifiedDate":"2022-03-20"},{"lineNumber":202,"author":{"gitId":"jltha"},"content":"            currentDate \u003d currentDate.plus(1, ChronoUnit.DAYS);","lastModifiedDate":"2022-03-22"},{"lineNumber":203,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":204,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":205,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"jltha":199,"yuzhongng":6}},{"path":"src/main/java/seedu/sherpass/util/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.util;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.GOODBYE_MESSAGE;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.WELCOME_MESSAGE_ONE;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.WELCOME_MESSAGE_TWO;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"public class Ui {","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"    private static final Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"    private static final String PARTITION_LINE \u003d \"______________________________\"","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"            + \"______________________________\";","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"    private static final String LOGO \u003d \"  ____  _\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"            + \" / ___|| |__   ___ _ __ \"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"            + \"_ __   __ _ ___ ___\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"            + \" \\\\___ \\\\| \u0027_ \\\\ / _ \\\\ \u0027__| \"","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"            + \"\u0027_ \\\\ / _` / __/ __|\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"            + \"  ___) | | | |  __/ |  \"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"            + \"| |_) | (_| \\\\__ \\\\__ \\\\\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"            + \" |____/|_| |_|\\\\___|_|  \"","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"            + \"| .__/ \\\\__,_|___/___/\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"            + \"                       \"","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"            + \"|_|\";","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"     * Returns any user input entered by the user through","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"     * the program\u0027s terminal. User Input is also trimmed to","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"     * remove white spaces.","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"     * @return User input","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"    public String readCommand() {","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"        return in.nextLine().trim();","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"     * Prints a partition line.","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"    public void showLine() {","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"        System.out.println(PARTITION_LINE);","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"     * Prints a message from the program to the user.","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"     * Can be in the form of exceptions that have occurred,","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"     * requests for inputs, command acknowledgement and so on.","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"     * @param message Message to show to the user.","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"    public void showToUser(String... message) {","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"        for (String s : message) {","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"            System.out.println(s);","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"     * Prints a welcome message to greet the user.","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"    public void showWelcomeMessage(TaskList tasklist, Ui ui) {","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"jltha"},"content":"        String welcomeMessage \u003d PARTITION_LINE + LS + WELCOME_MESSAGE_ONE","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"jltha"},"content":"                + LOGO + LS + PARTITION_LINE + LS + WELCOME_MESSAGE_TWO;","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"jltha"},"content":"        showToUser(welcomeMessage);","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"jltha"},"content":"        //Timetable.showTodaySchedule(tasklist, ui);","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"jltha"},"content":"        showLine();","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"jltha"},"content":"     * Prints a goodbye message to the user.","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"jltha"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"jltha"},"content":"        System.out.println(GOODBYE_MESSAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"jltha"},"content":"     * Returns a string of repeated characters.","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"jltha"},"content":"     * @param character The character to print.","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"jltha"},"content":"     * @param number The number of times to print that character.","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"jltha"},"content":"     * @return Returns a concatenated string of repeated characters.","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"jltha"},"content":"    public String getRepeatedCharacters(String character, long number) {","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"jltha"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"yuzhongng"},"content":"        for (int i \u003d 0; i \u003c number; i++) {","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"jltha"},"content":"            output.append(character);","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"jltha"},"content":"        return output.toString();","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":94,"yuzhongng":1}},{"path":"src/test/java/seedu/sherpass/MainTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"class MainTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"jltha":2,"-":10}},{"path":"src/test/java/seedu/sherpass/util/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.util;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.exception.InvalidTimeException;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Index.DEFAULT_TIMER_TWO;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"public class ParserTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"    void parseTimerInput_noInput_InvalidTimeExceptionThrown() {","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"        String studyCommandInput \u003d \"start \";","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"        String[] timerInput \u003d studyCommandInput.split(\" \", 2);","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"        assertThrows(InvalidTimeException.class,","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"            () -\u003e Parser.parseTimerInput(timerInput));","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"    void parseTimerInput_blankDefaultTimerInput_InvalidTimeExceptionThrown() {","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"        String studyCommandInput \u003d \"start  \";","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"        String[] timerInput \u003d studyCommandInput.split(\" \", 2);","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"        assertThrows(InvalidTimeException.class,","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"            () -\u003e Parser.parseTimerInput(timerInput));","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"    void parseTimerInput_blankCustomTimerInput_NumberFormatExceptionThrown() {","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"        String studyCommandInput \u003d \"start /custom  \";","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"        String[] timerInput \u003d studyCommandInput.split(\" \", 2);","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"        assertThrows(NumberFormatException.class,","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"            () -\u003e Parser.parseTimerInput(timerInput));","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"    void parseTimerInput_defaultTimerTwo_expectOneHour() throws InvalidTimeException {","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"        String studyCommandInput \u003d \"start 2\";","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"        String[] timerInput \u003d studyCommandInput.split(\" \", 2);","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"        int duration \u003d Parser.parseTimerInput(timerInput);","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"        assertEquals(DEFAULT_TIMER_TWO, duration);","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"    void parseTimerInput_customInput900_expect900Seconds() throws InvalidTimeException {","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"        String studyCommandInput \u003d \"start /custom 900\";","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"        String[] timerInput \u003d studyCommandInput.split(\" \", 2);","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"        int duration \u003d Parser.parseTimerInput(timerInput);","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"        assertEquals(900, duration);","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"    void parseTimerInput_defaultTimerTwoInputs_InvalidTimeExceptionThrown() {","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"        String studyCommandInput \u003d \"start 2 3\";","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"        String[] timerInput \u003d studyCommandInput.split(\" \", 2);","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"        assertThrows(InvalidTimeException.class,","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"            () -\u003e Parser.parseTimerInput(timerInput));","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"    void parseTimerInput_customTimerThreeInputs_NumberFormatExceptionThrown() {","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"        String studyCommandInput \u003d \"start /custom 600 1500 1200\";","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"        String[] timerInput \u003d studyCommandInput.split(\" \", 2);","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"        assertThrows(NumberFormatException.class,","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"            () -\u003e Parser.parseTimerInput(timerInput));","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"jltha"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"jltha"},"content":"    void parseTimerInput_validDefaultAndCustomTimerInputs_InvalidTimeExceptionThrown() {","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"jltha"},"content":"        String studyCommandInput \u003d \"start 2 /custom 900\";","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"jltha"},"content":"        String[] timerInput \u003d studyCommandInput.split(\" \", 2);","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"jltha"},"content":"        assertThrows(InvalidTimeException.class,","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"jltha"},"content":"            () -\u003e Parser.parseTimerInput(timerInput));","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"jltha":76}},{"path":"src/test/java/seedu/sherpass/util/StorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thedarie"},"content":"package seedu.sherpass.util;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"thedarie"},"content":"import org.json.JSONException;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"thedarie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.exception.InvalidInputException;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"import seedu.sherpass.task.Task;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"thedarie"},"content":"import java.io.File;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"thedarie"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"thedarie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"thedarie"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"thedarie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"thedarie"},"content":"class StorageTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"thedarie"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"thedarie"},"content":"    public void writeSaveData_oneTask_expectFileCreated() {","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"thedarie"},"content":"        File testFile \u003d new File(\"data/test.json\");","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"thedarie"},"content":"        if (testFile.exists()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"thedarie"},"content":"            testFile.delete();","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"thedarie"},"content":"        try {","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"thedarie"},"content":"            Storage storage \u003d new Storage(\"data/test.json\");","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"thedarie"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"thedarie"},"content":"            tasks.addTask(\"task_one\", LocalDate.parse(\"2022-12-12\"), null);","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"thedarie"},"content":"            storage.writeSaveData(tasks);","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"thedarie"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"thedarie"},"content":"            exception.printStackTrace();","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"thedarie"},"content":"        assertTrue(testFile.exists());","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"thedarie"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"thedarie"},"content":"    public void load_oneTask_expectTaskList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"thedarie"},"content":"        writeSaveData_oneTask_expectFileCreated();","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"thedarie"},"content":"        try {","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"thedarie"},"content":"            Storage storage \u003d new Storage(\"data/test.json\");","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"thedarie"},"content":"            TaskList actualList \u003d new TaskList(storage.load());","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"thedarie"},"content":"            Task task \u003d actualList.getTasks().get(0);","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"thedarie"},"content":"            assertEquals(task.getDescription(), \"task_one\");","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"thedarie"},"content":"            assertEquals(task.getByDate(), LocalDate.parse(\"2022-12-12\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"thedarie"},"content":"            assertEquals(task.getDoOnDate(), null);","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"thedarie"},"content":"            assertEquals(task.getStatusIcon(), \" \");","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"thedarie"},"content":"        } catch (InvalidInputException | IOException | JSONException exception) {","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"thedarie"},"content":"            exception.printStackTrace();","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"thedarie"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"thedarie":50}},{"path":"src/test/java/seedu/sherpass/util/TimetableTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.util;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import org.junit.jupiter.api.Disabled;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.Task;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"public class TimetableTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"    @Disabled","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"    void prepareTimetable_CurrentDate_expectTodayTimetable() {","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"        ArrayList\u003cTask\u003e dummyList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"        Task testTask \u003d new Task(\"submit DG\", LocalDate.now(), LocalDate.parse(\"29/3/2022\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"        dummyList.add(testTask);","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"        TaskList testList \u003d new TaskList(dummyList);","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"        Timetable.showScheduleByDay(LocalDate.now(), testList, ui);","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"        assertTrue(true);","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"jltha":26}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@echo off","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"setlocal enableextensions","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"pushd %~dp0","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"call gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"cd build\\libs","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"thedarie"},"content":"if exist data/sherpass.json del data/sherpass.json","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"for /f \"tokens\u003d*\" %%a in (","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u0027dir /b *.jar\u0027","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":") do (","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    set jarloc\u003d%%a","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"cd ..\\..\\text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"thedarie":1,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"thedarie"},"content":"rm -f build/libs/data/sherpass.json 2\u003e/dev/null","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"diff EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"thedarie":1,"-":23}}]
