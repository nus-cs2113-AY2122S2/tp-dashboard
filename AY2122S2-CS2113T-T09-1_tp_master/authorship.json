[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it. Something","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"   * In the same dialog, you _may have to set the Project language level_ field to the SDK default option.","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"2. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"3. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"jltha":1,"-":64}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"    mainClassName \u003d \"seedu.sherpass.Main\"","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"    archiveBaseName \u003d \"sherpass\"","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jltha":2,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"BradenTeo"},"content":"| Display                                             |   Name    |             Github Profile             |              Portfolio              |","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"BradenTeo"},"content":"|-----------------------------------------------------|:---------:|:--------------------------------------:|:-----------------------------------:|","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"BradenTeo"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Daryl   | [Github](https://github.com/thedarie)  |  [Portfolio](docs/team/johndoe.md)  |","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"BradenTeo"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yu Zhong  | [Github](https://github.com/yuzhongng) |  [Portfolio](docs/team/johndoe.md)  |","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"BradenTeo"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) | Isaac Lai | [Github](https://github.com/laiisaac)  |  [Portfolio](docs/team/johndoe.md)  |","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"BradenTeo"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Braden   | [Github](https://github.com/BradenTeo) | [Portfolio](docs/team/BradenTeo.md) |","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"BradenTeo"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Jun Lim  |   [Github](https://github.com/jltha)   |  [Portfolio](docs/team/johndoe.md)  |","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"jltha":1,"yuzhongng":1,"-":2,"BradenTeo":7}},{"path":"src/main/java/seedu/sherpass/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.command.Command;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.command.ExitCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Parser;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.util.Reminder;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.ERROR_IO_FAILURE_MESSAGE;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"public class Main {","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"    private Storage storage;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"    private Ui ui;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"yuzhongng"},"content":"    private Reminder reminder;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"     * Initialises the program.","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"     * Loading of save file also occurs over here.","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"     * @param  filePath Location of the save file.","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"    public Main(String filePath) {","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"yuzhongng"},"content":"            reminder \u003d new Reminder(taskList, ui);","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"            ui.showToUser(ERROR_IO_FAILURE_MESSAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"            System.exit(1);","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"     * Runs the program.","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"    public void run() {","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"yuzhongng"},"content":"        reminder.showReminders();","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"        while (!isExit) {","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"            Command c \u003d Parser.parseCommand(fullCommand, taskList);","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"            if (c !\u003d null) {","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"                isExit \u003d ExitCommand.isExit(c);","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"        new Main(\"data/sherpass.txt\").run();","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"laiisaac":1,"jltha":58,"yuzhongng":5}},{"path":"src/main/java/seedu/sherpass/command/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.Task;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"    public static final String MESSAGE_USAGE \u003d \"Clear: Deletes all tasks in the list.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"            + \"To execute the command, enter \u0027clear\u0027.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"     * Executes the clear command. Deletes all saved tasks in the task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"     * @param taskList Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"     * @param ui       UI for printing messages.","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"     * @param storage  Overwrite saved data after deleting.","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"        ArrayList\u003cTask\u003e tempArray \u003d taskList.getTasks();","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"        if (tempArray.size() \u003c\u003d 0) {","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"There are no tasks to clear!\");","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"            return;","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"        ui.showToUser(\"Are you sure you want to delete all tasks? [Y/N]\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"                + \"You will not be able to recover them after deleting.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"        ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"        while (true) {","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"            String input \u003d ui.readCommand();","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"            if (input.trim().equalsIgnoreCase(\"Y\")","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"                    || input.trim().equalsIgnoreCase(\"Yes\")) {","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"                ui.showToUser(\"Understood. Proceeding to delete\"","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"                        + \"\\nall current tasks in the list..........\");","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"                taskList.deleteAllTasks(ui);","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"                break;","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"            if (input.trim().equalsIgnoreCase(\"N\")","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"                    || input.trim().equalsIgnoreCase(\"No\")) {","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"                ui.showToUser(\"Okay, we\u0027ll keep it as it is.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"                break;","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"Please confirm your choice with either Y (Yes) or N (No).\");","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"thedarie"},"content":"        storage.writeSaveData(taskList);","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":53,"thedarie":1}},{"path":"src/main/java/seedu/sherpass/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"public abstract class Command {","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"jltha":10}},{"path":"src/main/java/seedu/sherpass/command/DeadlineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.exception.InputRepeatedException;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.exception.InvalidInputException;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"    String toAddTaskContent;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"    String toAddTaskDate;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"    public static final String MESSAGE_USAGE \u003d \"Deadline: Adds a \u0027deadline\u0027 task \"","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"            + \"into the task list. \\nA \u0027deadline\u0027 contains both a task description \\nand a date \"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"            + \"to finish the task by.\\n\\nTo execute the command,\\nenter \u0027deadline \u003ctask_description\u003e \"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"            + \"/by \u003ctask_date\u003e\u0027.\\nE.g. deadline return book /by 2022/02/03.\\n\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"            + \"All deadline dates must be given in the format:\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"            + \"\\t\\tyyyy/MM/dd [HH:mm], where\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"            + \"year is in 4 digits, month and day in two digits, and an\\noptional time in 24 hour format.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"     * Creates a constructor for deadline command. Saves task description and date.","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"     * @param taskDescription Task description.","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"     * @param taskList        Task array.","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"     * @param dateInput       Task Date.","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"     * @throws InvalidInputException  If Task content is empty.","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"     * @throws InputRepeatedException If task has already been added.","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"    public DeadlineCommand(String taskDescription, TaskList taskList, String dateInput)","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"            throws InvalidInputException, InputRepeatedException {","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"        if (taskDescription.isBlank()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"        if (taskList.isTaskAlreadyAdded(taskDescription)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"            throw new InputRepeatedException();","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"        toAddTaskDate \u003d dateInput;","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"        toAddTaskContent \u003d taskDescription;","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"     * Executes the adding of deadline task.","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"     * @param taskList Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"     * @param ui       Ui for printing messages.","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"     * @param storage  To append newly added task to save file.","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"        taskList.addTask(toAddTaskContent, toAddTaskDate, COMMAND_WORD);","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"        storage.appendToFile(toAddTaskContent, toAddTaskDate, \"0\", \"D\");","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":56}},{"path":"src/main/java/seedu/sherpass/command/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.exception.InvalidInputException;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Index.DELETE_INDEX;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"    private int deleteIndex;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"    public static final String MESSAGE_USAGE \u003d \"Delete: Deletes a task in the task list.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"            + \"To delete a specific task, enter \u0027delete \u003clist_index\u003e\u0027.\\n\\n Here, \"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"            + \"\u0027list_index\u0027 denotes the index of a task \\n based on the task list under the command \u0027list\u0027.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"            + \"\\nE.g., \u0027delete 2\u0027 deletes the second task in the task list.\\n\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"            + \"Note: You can only delete one task per command input.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"     * Creates constructor for delete command.","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"     * @param parsedInput Contains task description to search for","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"     * @param taskList    Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"     * @throws InvalidInputException If input task description is empty.","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"    public DeleteCommand(String[] parsedInput, TaskList taskList) throws InvalidInputException {","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"        if (parsedInput[DELETE_INDEX].isBlank()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"        if (taskList.isTaskExist(Integer.parseInt(parsedInput[DELETE_INDEX]) - 1)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"            deleteIndex \u003d Integer.parseInt(parsedInput[DELETE_INDEX]) - 1;","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"     * Executes the deletion of a task.","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"     * @param taskList Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"     * @param ui       Ui for printing messages.","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"     * @param storage  Overwrites save file after editing contents in task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"        taskList.removeTask(deleteIndex);","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"thedarie"},"content":"        storage.writeSaveData(taskList);","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":48,"thedarie":1}},{"path":"src/main/java/seedu/sherpass/command/EventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.exception.InputRepeatedException;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.exception.InvalidInputException;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"    String toAddTaskDescription;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"    String toAddTaskDate;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"    public static final String MESSAGE_USAGE \u003d \"Event: Adds an \u0027event\u0027 task into the task list.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"            + \"An \u0027event\u0027 contains both a task description \\nand a date \"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"            + \"of when the event will happen. \\n\\nTo execute the command,\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"            + \"enter \u0027event \u003ctask_description\u003e /at \u003ctask_date\u003e\u0027.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"            + \"E.g. event project meeting /at 2022/08/06 1400.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"            + \"\\nAll event dates must be given in the format:\"","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"            + \"\\n\\t\\tyyyy/MM/dd [HH:mm], where\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"            + \"year is in 4 digits, month and day in two digits, and an \\noptional time in 24 hour format.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"     * Creates a constructor for event command. Saves task description and date.","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"     * @param taskDescription Task description.","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"     * @param taskList Task array.","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"     * @param dateInput Task Date.","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"     * @throws InvalidInputException If Task content is empty.","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"     * @throws InputRepeatedException If task has already been added.","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"    public EventCommand(String taskDescription, TaskList taskList, String dateInput)","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"            throws InvalidInputException, InputRepeatedException {","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"        if (taskDescription.isBlank()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"        if (taskList.isTaskAlreadyAdded(taskDescription)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"            throw new InputRepeatedException();","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"        toAddTaskDate \u003d dateInput;","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"        toAddTaskDescription \u003d taskDescription;","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"     * Executes the adding of event task.","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"     * @param taskList Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"     * @param ui Ui for printing messages.","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"     * @param storage To append newly added task to save file.","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"        taskList.addTask(toAddTaskDescription, toAddTaskDate, COMMAND_WORD);","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"        storage.appendToFile(toAddTaskDescription, toAddTaskDate, \"0\", \"E\");","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":56}},{"path":"src/main/java/seedu/sherpass/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"    public static final String MESSAGE_USAGE \u003d \"Bye: Exits the program.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"     * Returns a boolean value denoting if the given Command object","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"     * is of the same instance as an ExitCommand.","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"     * @param c Command object","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"     * @return Returns true if c is an instance of ExitCommand. False otherwise.","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"    public static boolean isExit(Command c) {","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"        return c instanceof ExitCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"     * Executes exit command. Prints a goodbye message.","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"     * @param taskList Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"     * @param ui Ui for printing messages.","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"     * @param storage Storage for appending or overwriting saved data. Not used in this method.","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"        ui.showGoodbyeMessage();","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":34}},{"path":"src/main/java/seedu/sherpass/command/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.exception.InvalidInputException;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.ERROR_SYSTEM_FAULT_MESSAGE;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"    private String findTaskByDescription;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"    private String findTaskByDate;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"    public static final String MESSAGE_USAGE \u003d \"Find: Finds related task descriptions \\nbased on the given input.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"            + \"\\nTo search for a task, \\nenter \u0027find \u003ckeyword\u003e\u0027, e.g. \u0027find book\u0027\";","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"     * Creates a constructor for the FindCommand class.","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"     * Saves task description and task date for searching in \"execute\" method.","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"     * @param taskDescription Task Description to search.","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"     * @param taskDate        Task Date to search","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"     * @throws InvalidInputException If task description is empty.","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"    public FindCommand(String taskDescription, String taskDate) throws InvalidInputException {","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"        if (taskDate \u003d\u003d null) {","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"            if (taskDescription.isBlank()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"            findTaskByDescription \u003d taskDescription;","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"        findTaskByDate \u003d taskDate;","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"    private String convertToTaskType(Ui ui) {","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"        switch (findTaskByDescription.toLowerCase()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"        case \"/event\":","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"            return \"E\";","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"        case \"/deadline\":","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"            return \"D\";","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"        case \"/todo\":","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"            return \"T\";","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"        default:","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"            ui.showToUser(ERROR_SYSTEM_FAULT_MESSAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"            System.exit(1);","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"        return \" \";","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"     * Executes the find command. Searches and prints relevant tasks","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"     * that match the search keyword.","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"     * @param taskList Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"     * @param ui       Ui for printing messages.","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"     * @param storage  Storage for overwriting/appending save data. Not used in this method.","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"        if (findTaskByDate !\u003d null) {","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"            taskList.findByTaskDate(findTaskByDate, ui);","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"            return;","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"jltha"},"content":"        if (findTaskByDescription.equals(\"/event\") || findTaskByDescription.equals(\"/deadline\")","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"jltha"},"content":"                || findTaskByDescription.equals(\"/todo\")) {","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"jltha"},"content":"            taskList.findByTaskType(convertToTaskType(ui), ui);","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"jltha"},"content":"            return;","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"jltha"},"content":"        taskList.findByTaskDescription(findTaskByDescription, ui);","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":75}},{"path":"src/main/java/seedu/sherpass/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.HELP_MESSAGE_QUICK_START_COMMAND;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.HELP_MESSAGE_SPECIFIC_COMMAND;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"    private String helpInput;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD_VARIANT \u003d \"quick start\";","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"     * Creates a constructor for the HelpCommand. Accepts the help input.","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"     * Help input contains a keyword to obtain detailed information on","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"     * available commands to use.","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"     * @param filteredHelpInput Help keyword.","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"    public HelpCommand(String filteredHelpInput) {","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"        helpInput \u003d filteredHelpInput.trim().toLowerCase();","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"    private void showHelpList(Ui ui) {","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"        System.out.println(\"Here is a list of commands available:\");","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"        // To confirm indentation spaces when prof reply;","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"        // CheckStyle wants 4 spaces for continuation indent, but 8 spaces for other","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"        String[] helpCommands \u003d {ListCommand.COMMAND_WORD, MarkCommand.COMMAND_WORD,","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"            UnmarkCommand.COMMAND_WORD, TodoCommand.COMMAND_WORD, DeadlineCommand.COMMAND_WORD,","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"            EventCommand.COMMAND_WORD, DeleteCommand.COMMAND_WORD, FindCommand.COMMAND_WORD,","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"            ClearCommand.COMMAND_WORD, ExitCommand.COMMAND_WORD,};","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"        for (String helpCommand : helpCommands) {","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"            showSpecificHelpCommand(ui, helpCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"        ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"        System.out.println(\"For a quick summary of what commands to execute, \\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"                + \"enter \u0027help quick start\u0027.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"    private void showSpecificHelpCommand(Ui ui, String helpCommand) {","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"        switch (helpCommand) {","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"            ui.showToUser(ListCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"            ui.showToUser(MarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"            ui.showToUser(UnmarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"        case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"            ui.showToUser(TodoCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"            ui.showToUser(DeadlineCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"            ui.showToUser(EventCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"            ui.showToUser(DeleteCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"jltha"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"jltha"},"content":"            ui.showToUser(FindCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"jltha"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"jltha"},"content":"            ui.showToUser(ClearCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"jltha"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"jltha"},"content":"            ui.showToUser(ExitCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"        case COMMAND_WORD_VARIANT:","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"jltha"},"content":"            ui.showToUser(HELP_MESSAGE_QUICK_START_COMMAND + HELP_MESSAGE_SPECIFIC_COMMAND);","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"jltha"},"content":"        default:","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"jltha"},"content":"            showHelpList(ui);","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"jltha"},"content":"     * Executes the help command. Checks for the search keyword","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"jltha"},"content":"     * in the help command to list detailed information of available","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"jltha"},"content":"     * commands according to what the keyword is looking for.","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"jltha"},"content":"     * @param taskList Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"jltha"},"content":"     * @param ui       Ui for printing.","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"jltha"},"content":"     * @param storage  Storage for overwriting/appending save data. Not used in this method.","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"jltha"},"content":"        showSpecificHelpCommand(ui, helpInput);","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":99}},{"path":"src/main/java/seedu/sherpass/command/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"    public static final String MESSAGE_USAGE \u003d \"List: Displays a list of tasks \"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"            + \"added and shows \\nwhether or not certain tasks are marked.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"     * Executes the list command. List all tasks availble in task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"     * @param taskList Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"     * @param ui       Ui for printing task content.","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"     * @param storage  Storage for overwriting/appending save data. Not used in this method.","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"        taskList.printAllTasks(ui);","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":25}},{"path":"src/main/java/seedu/sherpass/command/MarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"    public static final String MESSAGE_USAGE \u003d \"Mark: Marks a task as done. \"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"            + \"\\nTo mark a specific task, enter \u0027mark \u003clist_index\u003e\u0027.\\n\\n Here, \"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"            + \"\u0027list_index\u0027 denotes the index of a task \\n based on the task list under the command \u0027list\u0027.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"            + \"\\nE.g., \u0027mark 1\u0027 marks the first task in the task list as done.\\n\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"            + \"Note: You can only mark one task per command input.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"    private int markIndex;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"     * Creates a constructor for the mark command.","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"     * Saves index of task to mark.","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"     * @param markIndex Task index to mark.","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"     * @param taskList  Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"    public MarkCommand(int markIndex, TaskList taskList) {","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"        if (taskList.isTaskExist(markIndex)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"            this.markIndex \u003d markIndex;","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"     * Executes mark command. Marks task as Done.","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"     * @param taskList Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"     * @param ui       Ui for printing","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"     * @param storage  Overwrite save file for newly marked task.","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"        if (taskList.isTaskDone(markIndex)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"            System.out.println(\"This task has already been marked!\");","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"            return;","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"        taskList.markTask(markIndex);","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"thedarie"},"content":"        storage.writeSaveData(taskList);","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":46,"thedarie":1}},{"path":"src/main/java/seedu/sherpass/command/StudyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"import seedu.sherpass.util.TimerLogic;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Message.WELCOME_MESSAGE_STUDY;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"public class StudyCommand extends Command {","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD \u003d \"study\";","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"        ui.showToUser(\"Gotcha! Entering study mode...\");","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"        ui.showToUser(WELCOME_MESSAGE_STUDY);","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"        ui.showLine();","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"laiisaac"},"content":"        TimerLogic timerLogic \u003d new TimerLogic(ui);","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"laiisaac"},"content":"        timerLogic.enterStudyMode();","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"laiisaac":7,"jltha":15}},{"path":"src/main/java/seedu/sherpass/command/TodoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.exception.InputRepeatedException;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.exception.InvalidInputException;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Index.TASK_DESCRIPTION_INDEX_TODO;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"    String[] toAdd;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"    public static final String MESSAGE_USAGE \u003d \"Todo: Adds a \u0027todo\u0027 task into the task list.\"","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"            + \"\\nA \u0027todo\u0027 contains only a task description. \\n\\nTo add other features to your task, \"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"            + \"such as date and time, \\nuse either \u0027deadline\u0027 or \u0027event\u0027.\\n\\nTo execute the command, \\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"            + \"enter \u0027todo \u003ctask_description\u003e\u0027, e.g. todo read book.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"     * Creates constructor for todo command. Saves task description.","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"     * @param toAdd    Task Description to add.","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"     * @param taskList Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"     * @throws InvalidInputException  If task description is empty.","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"     * @throws InputRepeatedException If task has been added before.","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"    public TodoCommand(String[] toAdd, TaskList taskList)","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"            throws InvalidInputException, InputRepeatedException {","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"        if (toAdd[TASK_DESCRIPTION_INDEX_TODO].isBlank()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"        if (taskList.isTaskAlreadyAdded(toAdd[TASK_DESCRIPTION_INDEX_TODO].trim())) {","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"            throw new InputRepeatedException();","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"        this.toAdd \u003d toAdd;","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"     * Executes the adding of todo task.","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"     * @param taskList Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"     * @param ui       Ui for printing messages.","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"     * @param storage  To append newly added task to save file.","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"        taskList.addTask(toAdd[TASK_DESCRIPTION_INDEX_TODO].trim(), \" \", COMMAND_WORD);","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"thedarie"},"content":"        storage.writeSaveData(taskList);","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":50,"thedarie":1}},{"path":"src/main/java/seedu/sherpass/command/UnmarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"    public static final String MESSAGE_USAGE \u003d \"Unmark: Marks a task as undone.\"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"            + \"\\nTo unmark a specific task, enter \u0027unmark \u003clist_index\u003e\u0027.\\n\\n Here, \"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"            + \"\u0027list_index\u0027 denotes the index of a task \\n based on the task list under the command \u0027list\u0027.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"            + \"\\nE.g., \u0027unmark 3\u0027 unmarks the third task in the task list.\\n\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"            + \"Note: You can only unmark one task per command input.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"    private int markIndex;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"     * Creates a constructor for the unmark command.","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"     * Saves index of task to mark.","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"     * @param markIndex Task index to mark.","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"     * @param taskList  Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"    public UnmarkCommand(int markIndex, TaskList taskList) {","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"        if (taskList.isTaskExist(markIndex)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"            this.markIndex \u003d markIndex;","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"     * Executes unmark command. Marks task as undone.","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"     * @param taskList Task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"     * @param ui       Ui for printing","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"     * @param storage  Overwrite save file for newly unmarked task.","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"        if (!taskList.isTaskDone(markIndex)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"            System.out.println(\"This task was already unmarked!\");","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"            return;","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"        taskList.unmarkTask(markIndex);","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"thedarie"},"content":"        storage.writeSaveData(taskList);","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":45,"thedarie":1}},{"path":"src/main/java/seedu/sherpass/command/UpdateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.command;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.ERROR_SYSTEM_FAULT_MESSAGE;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"    String taskDescriptionForSearchingTask;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"    String toUpdateTaskDate;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"     * Creates constructor for UpdateCommand class.","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"     * Saves task description and date.","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"     * @param taskDescription Task Description to search for.","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"     * @param dateInput       Task Date to replace existing task date.","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"    public UpdateCommand(String taskDescription, String dateInput) {","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"        taskDescriptionForSearchingTask \u003d taskDescription;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"        toUpdateTaskDate \u003d dateInput;","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"    private boolean isTaskBeingReplaced(Ui ui) {","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"        boolean isOldTaskReplaced \u003d false;","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"        ui.showToUser(\"Oops! It seems that you\u0027ve already added this task.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"                + \"Would you like to override the\\nexisting time and/or date \"","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"                + \"with the new input? [Y/N]\");","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"        ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"        while (true) {","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"            String input \u003d ui.readCommand();","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"            if (input.trim().equalsIgnoreCase(\"Y\")","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"                    || input.trim().equalsIgnoreCase(\"Yes\")) {","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"                isOldTaskReplaced \u003d true;","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"                ui.showToUser(\"Understood. Proceeding to change\"","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"                        + \"\\nthe old task with the new one..........\");","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"                break;","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"            if (input.trim().equalsIgnoreCase(\"N\")","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"                    || input.trim().equalsIgnoreCase(\"No\")) {","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"                ui.showToUser(\"Okay, we\u0027ll keep it as it is.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"                break;","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"Please confirm your choice with either Y (Yes) or N (No).\");","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"        return isOldTaskReplaced;","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"     * Executes replacement of task date with new date input in","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"     * an existing task.","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"     * @param taskList Task array","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"     * @param ui       Ui for printing messages.","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"     * @param storage  Storage for overwriting save data after replacing task date with new input.","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"        if (isTaskBeingReplaced(ui)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"            int taskIndexToReplace \u003d taskList.findIndexToReplace(taskDescriptionForSearchingTask);","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"            if (taskIndexToReplace \u003d\u003d -1) {","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"                System.out.println(ERROR_SYSTEM_FAULT_MESSAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"                return;","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"jltha"},"content":"            taskList.replaceTaskDate(taskIndexToReplace, toUpdateTaskDate, ui);","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"thedarie"},"content":"            storage.writeSaveData(taskList);","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":70,"thedarie":1}},{"path":"src/main/java/seedu/sherpass/constant/DateAndTimeFormat.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.constant;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.DATE_FORMAT_WITHOUT_TIME;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.DATE_FORMAT_WITH_TIME;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"public class DateAndTimeFormat {","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"    public static final DateTimeFormatter savedTaskWithTimeFormat \u003d DateTimeFormatter.ofPattern(DATE_FORMAT_WITH_TIME);","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"    public static final DateTimeFormatter savedTaskNoTimeFormat \u003d DateTimeFormatter.ofPattern(DATE_FORMAT_WITHOUT_TIME);","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"    public static final DateTimeFormatter withTimeFormat \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"    public static final DateTimeFormatter noTimeFormat \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":14}},{"path":"src/main/java/seedu/sherpass/constant/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.constant;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"public class Index {","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"thedarie"},"content":"    public static final int SAVE_TASK_MARK_STATUS \u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"thedarie"},"content":"    public static final int SAVE_TASK_DESCRIPTION_INDEX \u003d 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"thedarie"},"content":"    public static final int SAVE_TASK_BY_DATE_INDEX \u003d 2;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"thedarie"},"content":"    public static final int SAVE_TASK_DO_DATE_INDEX \u003d 3;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"    public static final int DELETE_INDEX \u003d 1;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"    public static final int OPTIONS_INDEX \u003d 0;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"    public static final int MARK_INDEX \u003d 1;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"    public static final int TASK_CONTENT_INDEX \u003d 1;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"    public static final int HELP_OPTIONS_INDEX \u003d 1;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"    public static final int TASK_DESCRIPTION_INDEX \u003d 0;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"    public static final int TASK_DATE_INDEX \u003d 1;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"    public static final int TASK_DESCRIPTION_INDEX_TODO \u003d 1;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"    public static final int FIND_BY_TASK_DATE_INDEX \u003d 1;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"    public static final int FIND_BY_TASK_DESCRIPTION_WITH_DATE_INDEX \u003d 0;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"    public static final int FIND_BY_TASK_DESCRIPTION_NO_DATE_INDEX \u003d 1;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"    public static final int FIND_BY_TASK_CONTENT_INDEX \u003d 1;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"    public static final int DIRECTORY_INDEX \u003d 0;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"    public static final int STUDY_COMMAND_INDEX \u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"    public static final int TIMER_FORMAT_INDEX \u003d 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"    public static final int DEFAULT_TIMER_INDEX \u003d 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"    public static final int CUSTOM_TIMER_INDEX \u003d 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"laiisaac"},"content":"    public static final int DEFAULT_TIMER_ONE \u003d 2700;","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"laiisaac"},"content":"    public static final int DEFAULT_TIMER_TWO \u003d 3600;","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"laiisaac"},"content":"    public static final int DEFAULT_TIMER_THREE \u003d 5400;","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"laiisaac"},"content":"    public static final int DEFAULT_TIMER_ZERO \u003d 30;","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"laiisaac":4,"jltha":21,"thedarie":4}},{"path":"src/main/java/seedu/sherpass/constant/Message.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.constant;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"public class Message {","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"    public static final String WELCOME_MESSAGE_ONE \u003d \"Welcome to\\n\";","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"    public static final String WELCOME_MESSAGE_TWO \u003d \"How can I help you today?\";","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"    public static final String WELCOME_MESSAGE_STUDY \u003d \"Gotcha! Entering study mode...\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"laiisaac"},"content":"            + \"Done! To get started, enter one of the three default timers \"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"laiisaac"},"content":"            + \"using \u0027start \u003cmode_number\u003e\u0027:\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"laiisaac"},"content":"            + \"1) 30 minutes\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"            + \"2) 1 hour\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"laiisaac"},"content":"            + \"3) 1.5 hours\\n\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"            + \"For testing purposes, you can start a 30s timer with mode number 0.\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"            + \"Otherwise, feel free to choose your own timer with \\n\u0027start /custom \u003ctimer_duration\u003e\u0027.\";","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"    public static final String GOODBYE_MESSAGE \u003d \"Bye. Hope to see you again soon! :)\";","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"    public static final String GOODBYE_MESSAGE_STUDY \u003d \"Leaving study session...\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"            + \"Welcome back to the main session! How can I help you?\";","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"    private static final String HELP_MESSAGE \u003d \"For more information, please enter the \u0027help\u0027 command.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"    public static final String HELP_MESSAGE_SPECIFIC_COMMAND \u003d \"\\n\\nFor more information on \"","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"            + \"the command you wish to execute,\\nenter \u0027help \u003ccommand\u003e\u0027 e.g. help todo\";","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"    public static final String HELP_MESSAGE_QUICK_START_COMMAND \u003d \"Command input quick start guide:\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"            + \"1) List: list\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"            + \"2) Mark: mark \u003clist_index\u003e\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"            + \"3) Unmark: unmark \u003clist_index\u003e\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"            + \"4) Todo: todo \u003ctask_description\u003e\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"            + \"5) Deadline: deadline \u003ctask_description\u003e /by \u003ctask_date\u003e\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"            + \"6) Event: event \u003ctask_description\u003e /at \u003ctask_date\u003e\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"            + \"7) Delete: delete \u003clist_index\u003e\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"            + \"8) Find: find \u003ckeyword\u003e\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"            + \"9) Clear: clear\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"            + \"9) Bye: bye\";","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"laiisaac"},"content":"    public static final String HELP_MESSAGE_STUDY \u003d \"Timer command input quick start guide:\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"laiisaac"},"content":"            + \"1) Start default timer: start \u003cmode_index\u003e\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"laiisaac"},"content":"            + \"2) Start custom timer: start /custom \u003ctimer_duration\u003e\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"laiisaac"},"content":"            + \"3) Stop timer: stop\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"laiisaac"},"content":"            + \"4) Pause timer: pause\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"laiisaac"},"content":"            + \"5) Resume timer: resume\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"laiisaac"},"content":"            + \"6) Exit study mode: leave\\n\";","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"    public static final String ERROR_INVALID_INPUT_MESSAGE \u003d \"Please key in an appropriate command.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"            + HELP_MESSAGE;","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"laiisaac"},"content":"    public static final String ERROR_INVALID_STUDY_INPUT_MESSAGE \u003d \"Please key in an appropriate command.\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"laiisaac"},"content":"            + HELP_MESSAGE_STUDY;","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"    public static final String ERROR_EVENT_MISSING_COMMAND_MESSAGE \u003d \"Oops! You forgot to \"","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"            + \"add a \u0027/at\u0027 to your \u0027event\u0027 command.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"    public static final String ERROR_DEADLINE_MISSING_COMMAND_MESSAGE \u003d \"Oops! You forgot to\"","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"            + \" add a \u0027/by\u0027 to your \u0027deadline\u0027 command.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"    public static final String ERROR_TODO_REPEATED_INPUT_MESSAGE \u003d \"Oops! It seems that you\u0027ve \"","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"            + \"already added this task.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"    public static final String ERROR_INVALID_DELETE_INDEX_MESSAGE \u003d \"Oops! It seems that you\u0027ve given\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"            + \"an invalid index to delete the task.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"    public static final String ERROR_IO_FAILURE_MESSAGE \u003d \"Oh no! We\u0027ve encountered an error \\nwhile \"","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"            + \"trying to processing the system.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"            + \"Please reboot and execute the application again.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"    public static final String ERROR_SYSTEM_FAULT_MESSAGE \u003d \"Oops! There seems to be some problem\"","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"            + \"with the code.\\nPlease contact the developers for help.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"    public static final String ERROR_CORRUPT_SAVED_FILE_MESSAGE \u003d \"Oops! It seems that your saved file \"","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"            + \"was corrupted.\\nProceeding to start anew...\";","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"    public static final String ERROR_FILE_NOT_FOUND_MESSAGE \u003d \"Sorry! There was an error while loading your\"","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"            + \"saved file. Please restart and try again later.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"    public static final String ERROR_INVALID_MARKING_INDEX_MESSAGE \u003d \"Bzzt!\\nPlease\"","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"            + \" key in a valid task number to mark/unmark your task.\"","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"            + HELP_MESSAGE_SPECIFIC_COMMAND;","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"    public static final String DATE_FORMAT_WITH_TIME \u003d \"dd MMM yyyy, EEE hh:mm a\";","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"    public static final String DATE_FORMAT_WITHOUT_TIME \u003d \"dd MMM yyyy, EEE\";","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"laiisaac":19,"jltha":47}},{"path":"src/main/java/seedu/sherpass/constant/TimerConstant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laiisaac"},"content":"package seedu.sherpass.constant;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"public class TimerConstant {","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"    public static final int TIME_INTERVAL \u003d 5;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"laiisaac"},"content":"    public static final int NO_TIME_LEFT \u003d 0;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"    public static final int ONE_MINUTE \u003d 60;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"laiisaac"},"content":"    public static final int ONE_HOUR \u003d 3600;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"laiisaac"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"laiisaac":8}},{"path":"src/main/java/seedu/sherpass/exception/InputRepeatedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.exception;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"public class InputRepeatedException extends Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":4}},{"path":"src/main/java/seedu/sherpass/exception/InvalidInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.exception;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":4}},{"path":"src/main/java/seedu/sherpass/exception/InvalidTimeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laiisaac"},"content":"package seedu.sherpass.exception;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"public class InvalidTimeException extends Exception {","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"laiisaac":4}},{"path":"src/main/java/seedu/sherpass/task/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.task;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"    protected String by;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"     * Creates a constructor for the task \u0027deadline\u0027.","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"     * Deadline tasks accept both task description and date.","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"     * @param description Task Description.","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"     * @param by          Task Date.","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"        super(description);","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"     * Returns task date.","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"     * @return Task date.","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"    public String getDate() {","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"        return by;","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"     * Returns string version of task type.","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"     * @return \"D\" for deadline.","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"    public String getType() {","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"        return \"D\";","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"     * Overrides existing task date with new date input.","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"     * @param date Task Date.","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"    public void resetInput(String date) {","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"        by \u003d date;","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"     * Returns a string version of the task content.","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"     * Content includes mark status, task type， description and date.","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"     * For ease of printing the task.","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"     * @return Task content.","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"    public String toString() {","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":60}},{"path":"src/main/java/seedu/sherpass/task/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.task;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"public class Event extends Task {","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"    protected String at;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"     * Creates a constructor for the task \u0027event\u0027.","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"     * Event tasks accept both task description and date.","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"     * @param description Task Description.","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"     * @param at          Task Date.","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"        super(description);","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"     * Returns task date.","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"     * @return Task date.","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"    public String getDate() {","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"        return at;","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"     * Returns string version of task type.","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"     * @return \"E\" for event.","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"    public String getType() {","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"        return \"E\";","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"     * Overrides existing task date with new date input.","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"     * @param date New task date input.","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"    public void resetInput(String date) {","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"        at \u003d date;","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"     * Returns a string version of the task content.","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"     * Content includes mark status, task type， description and date.","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"     * For ease of printing the task.","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"     * @return Task content.","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"    public String toString() {","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"        return \"[E] \" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":60}},{"path":"src/main/java/seedu/sherpass/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.task;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"public abstract class Task {","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"    protected String description;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"     * Creates a constructor for the parent class of tasks, \u0027Task\u0027.","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"     * Accepts only task description","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"    public Task(String description) {","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"     * Returns task description.","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"     * @return task description.","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"    public String getDescription() {","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"        return description;","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"     * Returns mark status of task.","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"     * @return Returns true if task has been marked. False otherwise.","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"        return isDone;","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"     * Returns String version of mark status.","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"     * @return X if task has been marked. White space otherwise.","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"     * Marks task as done.","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"     * Marks task as undone.","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"     * Replaces task date with new task date input.","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"     * Refreshes the task to original state, i.e. unmarked.","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"     * Current parent class is created as template for child","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"     * classes to perform this function.","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"jltha"},"content":"     * @param date Task Date.","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"jltha"},"content":"    public void resetInput(String date) {","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"jltha"},"content":"        markAsUndone();","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"jltha"},"content":"     * Returns task date. Parent class is created","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"     * as a template for child classes to perform its own","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"jltha"},"content":"     * respective functions, i.e. each task date returned is","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"jltha"},"content":"     * different for each task type.","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"jltha"},"content":"     * @return White space.","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"jltha"},"content":"    public String getDate() {","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"jltha"},"content":"        return \" \";","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"jltha"},"content":"     * Returns task type. Current parent class is created","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"jltha"},"content":"     * as a template for child classes to perform its own","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"jltha"},"content":"     * respective functions.","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"jltha"},"content":"     * @return Nothing as function is abstract.","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"jltha"},"content":"    public abstract String getType();","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"jltha"},"content":"     * Returns a string version of the task content.","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"jltha"},"content":"     * Content includes mark status, task type and description.","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"jltha"},"content":"     * For ease of printing the task.","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"jltha"},"content":"     * @return Task content.","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"jltha"},"content":"    public String toString() {","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"jltha"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":107}},{"path":"src/main/java/seedu/sherpass/task/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.task;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.util.Ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.ERROR_SYSTEM_FAULT_MESSAGE;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"public class TaskList {","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"     * Creates a constructor for the class TaskList.","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"     * @param savedTasks Representation of an array of tasks.","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"    public TaskList(ArrayList\u003cTask\u003e savedTasks) {","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"        tasks \u003d savedTasks;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"     * Returns the array of tasks in the class TaskList.","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"     * @return the array of tasks.","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"        return tasks;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"     * Adds a new task to the current array of tasks.","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"     * @param taskDescription Description of the task.","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"     * @param taskDate        Date of the task","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"     * @param taskType        Task type, i.e. todo, deadline or event.","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"    public void addTask(String taskDescription, String taskDate, String taskType) {","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"        Task newTask;","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"        switch (taskType) {","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"        case \"todo\":","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"            newTask \u003d new Todo(taskDescription);","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"        case \"deadline\":","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"            newTask \u003d new Deadline(taskDescription, taskDate);","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"        case \"event\":","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"            newTask \u003d new Event(taskDescription, taskDate);","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"        default:","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"            System.out.println(ERROR_SYSTEM_FAULT_MESSAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"            return;","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"        tasks.add(newTask);","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + newTask","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"                + \"\\nNow you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"     * Prints all available tasks in the task list.","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"     * @param ui Ui class for printing of messages.","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"    public void printAllTasks(Ui ui) {","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"        int printIndex \u003d 1;","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"jltha"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"jltha"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"jltha"},"content":"            System.out.println(printIndex + \". \" + task);","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"jltha"},"content":"            printIndex++;","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"jltha"},"content":"        ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"jltha"},"content":"        System.out.println(\"A total of \" + (printIndex - 1) + \" item(s) have been found!\");","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"jltha"},"content":"     * Returns a boolean value denoting the task status, i.e.","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"jltha"},"content":"     * whether the task has been marked or not.","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"jltha"},"content":"     * @param markIndex Index of a task to check for its mark status.","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"jltha"},"content":"     * @return Returns true if task has been marked. False otherwise.","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"jltha"},"content":"    public boolean isTaskDone(int markIndex) {","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"jltha"},"content":"        return tasks.get(markIndex).isDone();","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"jltha"},"content":"     * Marks a task given the index of the task.","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"jltha"},"content":"     * Index corresponds to its placement within the task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"jltha"},"content":"     * @param markIndex Index of the task to mark as done.","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"jltha"},"content":"    public void markTask(int markIndex) {","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"jltha"},"content":"        tasks.get(markIndex).markAsDone();","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"jltha"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n  \" + tasks.get(markIndex));","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"jltha"},"content":"     * Unmarks a task given the index of the task.","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"jltha"},"content":"     * Index corresponds to its placement within the task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"jltha"},"content":"     * @param markIndex Index of the task to mark as undone.","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"jltha"},"content":"    public void unmarkTask(int markIndex) {","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"jltha"},"content":"        tasks.get(markIndex).markAsUndone();","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"jltha"},"content":"        System.out.println(\"Ok, I\u0027ve marked this task as\"","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"jltha"},"content":"                + \" not done yet:\\n  \" + tasks.get(markIndex));","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"jltha"},"content":"     * Returns a boolean value to denote if the task has already","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"jltha"},"content":"     * been added to the task array. References task description","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"jltha"},"content":"     * when checking against each task.","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"jltha"},"content":"     * @param taskDescription Description of the task to match when searching for task.","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"jltha"},"content":"     * @return Returns true if task has been added. False otherwise.","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"jltha"},"content":"    public boolean isTaskAlreadyAdded(String taskDescription) {","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"jltha"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"jltha"},"content":"            if (task.getDescription().equalsIgnoreCase(taskDescription)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"jltha"},"content":"                return true;","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"jltha"},"content":"        return false;","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"jltha"},"content":"     * Returns the index of a task given its task description.","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"jltha"},"content":"     * @param taskDescriptionToSearch Description of the task to search for.","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"jltha"},"content":"     * @return Index of a task, which corresponds to its placement in the task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"jltha"},"content":"    public int findIndexToReplace(String taskDescriptionToSearch) {","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"jltha"},"content":"        int index \u003d -1;","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"jltha"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"jltha"},"content":"            if (tasks.get(i).getDescription()","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"jltha"},"content":"                    .equalsIgnoreCase(taskDescriptionToSearch.trim())) {","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"jltha"},"content":"                index \u003d i;","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"jltha"},"content":"                break;","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"jltha"},"content":"        return index;","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":149,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":151,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":152,"author":{"gitId":"jltha"},"content":"     * Replaces the current date of the task with a new date input.","lastModifiedDate":"2022-03-06"},{"lineNumber":153,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":154,"author":{"gitId":"jltha"},"content":"     * @param taskIndexToReplace Index of a task to search for the task.","lastModifiedDate":"2022-03-06"},{"lineNumber":155,"author":{"gitId":"jltha"},"content":"     * @param newTaskDate        New date input to replace the old task date.","lastModifiedDate":"2022-03-06"},{"lineNumber":156,"author":{"gitId":"jltha"},"content":"     * @param ui                 Ui for printing partition lines and messages.","lastModifiedDate":"2022-03-06"},{"lineNumber":157,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":158,"author":{"gitId":"jltha"},"content":"    public void replaceTaskDate(int taskIndexToReplace, String newTaskDate, Ui ui) {","lastModifiedDate":"2022-03-06"},{"lineNumber":159,"author":{"gitId":"jltha"},"content":"        tasks.get(taskIndexToReplace).resetInput(newTaskDate);","lastModifiedDate":"2022-03-06"},{"lineNumber":160,"author":{"gitId":"jltha"},"content":"        ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":161,"author":{"gitId":"jltha"},"content":"        ui.showToUser(\"Done! I\u0027ve updated this task:\\n  \" + tasks.get(taskIndexToReplace));","lastModifiedDate":"2022-03-06"},{"lineNumber":162,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":163,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":164,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":165,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":166,"author":{"gitId":"jltha"},"content":"     * Returns a boolean value denoting the existence of a task","lastModifiedDate":"2022-03-06"},{"lineNumber":167,"author":{"gitId":"jltha"},"content":"     * within the task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":168,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":169,"author":{"gitId":"jltha"},"content":"     * @param deleteIndex Index of a task. Corresponds to its placement in task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":170,"author":{"gitId":"jltha"},"content":"     * @return Returns true if task exists in task array. False otherwise.","lastModifiedDate":"2022-03-06"},{"lineNumber":171,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":172,"author":{"gitId":"jltha"},"content":"    public boolean isTaskExist(int deleteIndex) {","lastModifiedDate":"2022-03-06"},{"lineNumber":173,"author":{"gitId":"jltha"},"content":"        return tasks.get(deleteIndex) !\u003d null;","lastModifiedDate":"2022-03-06"},{"lineNumber":174,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":175,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":176,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":177,"author":{"gitId":"jltha"},"content":"     * Deletes a task given its index. Index corresponds to its placement","lastModifiedDate":"2022-03-06"},{"lineNumber":178,"author":{"gitId":"jltha"},"content":"     * in task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":179,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":180,"author":{"gitId":"jltha"},"content":"     * @param deleteIndex Index of a task to search for.","lastModifiedDate":"2022-03-06"},{"lineNumber":181,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":182,"author":{"gitId":"jltha"},"content":"    public void removeTask(int deleteIndex) {","lastModifiedDate":"2022-03-06"},{"lineNumber":183,"author":{"gitId":"jltha"},"content":"        Task taskToBeRemoved \u003d tasks.get(deleteIndex);","lastModifiedDate":"2022-03-06"},{"lineNumber":184,"author":{"gitId":"jltha"},"content":"        tasks.remove(deleteIndex);","lastModifiedDate":"2022-03-06"},{"lineNumber":185,"author":{"gitId":"jltha"},"content":"        System.out.println(\"Okay. I\u0027ve removed this task:\\n  \" + taskToBeRemoved","lastModifiedDate":"2022-03-06"},{"lineNumber":186,"author":{"gitId":"jltha"},"content":"                + \"\\nNow you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":187,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":188,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":189,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":190,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":191,"author":{"gitId":"jltha"},"content":"     * Finds and prints tasks whose description matches the search keyword.","lastModifiedDate":"2022-03-06"},{"lineNumber":192,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":193,"author":{"gitId":"jltha"},"content":"     * @param findTaskByKeyword A keyword relating to the task description.","lastModifiedDate":"2022-03-06"},{"lineNumber":194,"author":{"gitId":"jltha"},"content":"     * @param ui                Ui for printing messages.","lastModifiedDate":"2022-03-06"},{"lineNumber":195,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":196,"author":{"gitId":"jltha"},"content":"    public void findByTaskDescription(String findTaskByKeyword, Ui ui) {","lastModifiedDate":"2022-03-06"},{"lineNumber":197,"author":{"gitId":"jltha"},"content":"        int printIndex \u003d 1;","lastModifiedDate":"2022-03-06"},{"lineNumber":198,"author":{"gitId":"jltha"},"content":"        ui.showToUser(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-03-06"},{"lineNumber":199,"author":{"gitId":"jltha"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-03-06"},{"lineNumber":200,"author":{"gitId":"jltha"},"content":"            if (task.getDescription().contains(findTaskByKeyword)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":201,"author":{"gitId":"jltha"},"content":"                String listIndex \u003d String.valueOf(printIndex);","lastModifiedDate":"2022-03-06"},{"lineNumber":202,"author":{"gitId":"jltha"},"content":"                ui.showToUser(listIndex + \". \" + task);","lastModifiedDate":"2022-03-06"},{"lineNumber":203,"author":{"gitId":"jltha"},"content":"                printIndex++;","lastModifiedDate":"2022-03-06"},{"lineNumber":204,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":205,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":206,"author":{"gitId":"jltha"},"content":"        if (printIndex \u003d\u003d 1) {","lastModifiedDate":"2022-03-06"},{"lineNumber":207,"author":{"gitId":"jltha"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":208,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"Sorry! There are no tasks that match your description!\");","lastModifiedDate":"2022-03-06"},{"lineNumber":209,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":210,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":211,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":212,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":213,"author":{"gitId":"jltha"},"content":"     * Finds and prints tasks whose date and/or time matches the search keyword.","lastModifiedDate":"2022-03-06"},{"lineNumber":214,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":215,"author":{"gitId":"jltha"},"content":"     * @param findTaskByKeyword A keyword relating to the task date and/or time.","lastModifiedDate":"2022-03-06"},{"lineNumber":216,"author":{"gitId":"jltha"},"content":"     * @param ui                Ui for printing messages.","lastModifiedDate":"2022-03-06"},{"lineNumber":217,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":218,"author":{"gitId":"jltha"},"content":"    public void findByTaskDate(String findTaskByKeyword, Ui ui) {","lastModifiedDate":"2022-03-06"},{"lineNumber":219,"author":{"gitId":"jltha"},"content":"        int printIndex \u003d 1;","lastModifiedDate":"2022-03-06"},{"lineNumber":220,"author":{"gitId":"jltha"},"content":"        ui.showToUser(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-03-06"},{"lineNumber":221,"author":{"gitId":"jltha"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-03-06"},{"lineNumber":222,"author":{"gitId":"jltha"},"content":"            if (!task.getType().equals(\"T\") \u0026\u0026 task.getDate().contains(findTaskByKeyword)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":223,"author":{"gitId":"jltha"},"content":"                String listIndex \u003d String.valueOf(printIndex);","lastModifiedDate":"2022-03-06"},{"lineNumber":224,"author":{"gitId":"jltha"},"content":"                ui.showToUser(listIndex + \". \" + task);","lastModifiedDate":"2022-03-06"},{"lineNumber":225,"author":{"gitId":"jltha"},"content":"                printIndex++;","lastModifiedDate":"2022-03-06"},{"lineNumber":226,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":227,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":228,"author":{"gitId":"jltha"},"content":"        if (printIndex \u003d\u003d 1) {","lastModifiedDate":"2022-03-06"},{"lineNumber":229,"author":{"gitId":"jltha"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":230,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"Sorry! There are no tasks that match your description!\");","lastModifiedDate":"2022-03-06"},{"lineNumber":231,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":232,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":233,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":234,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":235,"author":{"gitId":"jltha"},"content":"     * Finds and prints tasks whose task type matches the search keyword.","lastModifiedDate":"2022-03-06"},{"lineNumber":236,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":237,"author":{"gitId":"jltha"},"content":"     * @param taskType Task type, i.e. todo, deadline or event.","lastModifiedDate":"2022-03-06"},{"lineNumber":238,"author":{"gitId":"jltha"},"content":"     * @param ui       Ui for printing messages.","lastModifiedDate":"2022-03-06"},{"lineNumber":239,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":240,"author":{"gitId":"jltha"},"content":"    public void findByTaskType(String taskType, Ui ui) {","lastModifiedDate":"2022-03-06"},{"lineNumber":241,"author":{"gitId":"jltha"},"content":"        int printIndex \u003d 1;","lastModifiedDate":"2022-03-06"},{"lineNumber":242,"author":{"gitId":"jltha"},"content":"        ui.showToUser(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-03-06"},{"lineNumber":243,"author":{"gitId":"jltha"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-03-06"},{"lineNumber":244,"author":{"gitId":"jltha"},"content":"            if (task.getType().equals(taskType)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":245,"author":{"gitId":"jltha"},"content":"                String listIndex \u003d String.valueOf(printIndex);","lastModifiedDate":"2022-03-06"},{"lineNumber":246,"author":{"gitId":"jltha"},"content":"                ui.showToUser(listIndex + \". \" + task);","lastModifiedDate":"2022-03-06"},{"lineNumber":247,"author":{"gitId":"jltha"},"content":"                printIndex++;","lastModifiedDate":"2022-03-06"},{"lineNumber":248,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":249,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":250,"author":{"gitId":"jltha"},"content":"        if (printIndex \u003d\u003d 1) {","lastModifiedDate":"2022-03-06"},{"lineNumber":251,"author":{"gitId":"jltha"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":252,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"Sorry! There are no tasks that match your description!\");","lastModifiedDate":"2022-03-06"},{"lineNumber":253,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":254,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":255,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":256,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":257,"author":{"gitId":"jltha"},"content":"     * Deletes all tasks saved within the task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":258,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":259,"author":{"gitId":"jltha"},"content":"     * @param ui Ui for printing the completion of the deletion.","lastModifiedDate":"2022-03-06"},{"lineNumber":260,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":261,"author":{"gitId":"jltha"},"content":"    public void deleteAllTasks(Ui ui) {","lastModifiedDate":"2022-03-06"},{"lineNumber":262,"author":{"gitId":"jltha"},"content":"        while (tasks.size() \u003e 0) {","lastModifiedDate":"2022-03-06"},{"lineNumber":263,"author":{"gitId":"jltha"},"content":"            tasks.remove(0);","lastModifiedDate":"2022-03-06"},{"lineNumber":264,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":265,"author":{"gitId":"jltha"},"content":"        ui.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":266,"author":{"gitId":"jltha"},"content":"        ui.showToUser(\"Done! Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":267,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":268,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":268}},{"path":"src/main/java/seedu/sherpass/task/Todo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.task;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"     * Creates a constructor for the \u0027todo\u0027 task.","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"     * Todo only accepts a task description.","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"     * @param description Description of the todo.","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"        super(description);","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"     * Returns the task type.","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"     * @return \"T\" for todo.","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"    public String getType() {","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"        return \"T\";","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"     * Returns a string version of the task content.","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"     * Content includes mark status, task type and description.","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"     * For ease of printing the task.","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"     * @return Task content.","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"    public String toString() {","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":38}},{"path":"src/main/java/seedu/sherpass/util/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.util;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.command.Command;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.command.DeadlineCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.command.DeleteCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.command.EventCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.command.HelpCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.command.MarkCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.command.StudyCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.command.TodoCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.command.UnmarkCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.command.UpdateCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.command.FindCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.command.ListCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.command.ExitCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.command.ClearCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.exception.InputRepeatedException;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.exception.InvalidInputException;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"laiisaac"},"content":"import seedu.sherpass.exception.InvalidTimeException;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.Task;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.Todo;","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.noTimeFormat;","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.savedTaskNoTimeFormat;","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.savedTaskWithTimeFormat;","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.DateAndTimeFormat.withTimeFormat;","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.SAVE_TASK_BY_DATE_INDEX;","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.SAVE_TASK_DO_DATE_INDEX;","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.SAVE_TASK_DESCRIPTION_INDEX;","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.SAVE_TASK_MARK_STATUS;","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.MARK_INDEX;","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.TASK_CONTENT_INDEX;","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.TASK_DATE_INDEX;","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.TASK_DESCRIPTION_INDEX;","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.HELP_OPTIONS_INDEX;","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.FIND_BY_TASK_CONTENT_INDEX;","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.FIND_BY_TASK_DATE_INDEX;","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.FIND_BY_TASK_DESCRIPTION_NO_DATE_INDEX;","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.FIND_BY_TASK_DESCRIPTION_WITH_DATE_INDEX;","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.OPTIONS_INDEX;","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.DEFAULT_TIMER_ZERO;","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.DEFAULT_TIMER_ONE;","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.DEFAULT_TIMER_TWO;","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.DEFAULT_TIMER_THREE;","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.TIMER_FORMAT_INDEX;","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.CUSTOM_TIMER_INDEX;","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.DEFAULT_TIMER_INDEX;","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Index.STUDY_COMMAND_INDEX;","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Message.ERROR_INVALID_MARKING_INDEX_MESSAGE;","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Message.HELP_MESSAGE_SPECIFIC_COMMAND;","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Message.ERROR_TODO_REPEATED_INPUT_MESSAGE;","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Message.ERROR_EVENT_MISSING_COMMAND_MESSAGE;","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Message.ERROR_DEADLINE_MISSING_COMMAND_MESSAGE;","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Message.DATE_FORMAT_WITH_TIME;","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Message.DATE_FORMAT_WITHOUT_TIME;","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Message.ERROR_INVALID_STUDY_INPUT_MESSAGE;","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Message.ERROR_INVALID_DELETE_INDEX_MESSAGE;","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Message.ERROR_INVALID_INPUT_MESSAGE;","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.util.TimerLogic.pauseTimer;","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.util.TimerLogic.resumeTimer;","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.util.TimerLogic.startTimer;","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.util.TimerLogic.stopTimer;","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"jltha"},"content":"public class Parser {","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"     * Parses the saved data of the tasks in the save file.","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"jltha"},"content":"     * Arranges the parsed data in a manner that can be initialised","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"jltha"},"content":"     * as a \u0027Task\u0027.","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"jltha"},"content":"     * @param rawData Array of strings containing saved data of task.","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"jltha"},"content":"     * @return Task containing the saved data for adding into program\u0027s task array.","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"jltha"},"content":"     * @throws InvalidInputException If saved data is missing content, i.e. task description or date.","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"jltha"},"content":"    public static Task parseSavedData(String[] rawData) throws InvalidInputException {","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"thedarie"},"content":"        if (!isValidData(rawData)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"jltha"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"thedarie"},"content":"        Task parsedData;","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"thedarie"},"content":"        try {","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"thedarie"},"content":"            LocalDate parsedByDate \u003d LocalDate.parse(rawData[SAVE_TASK_DO_DATE_INDEX]);","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"thedarie"},"content":"            LocalDate parsedDoDate \u003d LocalDate.parse(rawData[SAVE_TASK_BY_DATE_INDEX]);","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"thedarie"},"content":"        } catch (DateTimeParseException invalidDate) {","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"jltha"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"thedarie"},"content":"        // Using Todo for now, will be updated in the future","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"thedarie"},"content":"        parsedData \u003d new Todo(rawData[SAVE_TASK_DESCRIPTION_INDEX].trim());","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"thedarie"},"content":"        if (rawData[SAVE_TASK_MARK_STATUS].equals(\"X\")) {","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"jltha"},"content":"            parsedData.markAsDone();","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"jltha"},"content":"        return parsedData;","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"thedarie"},"content":"    private static Boolean isValidData(String[] rawData) {","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"thedarie"},"content":"        if (rawData.length !\u003d 4) {","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"thedarie"},"content":"            return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"thedarie"},"content":"        } else if (!rawData[SAVE_TASK_MARK_STATUS].equals(\" \") \u0026\u0026 !rawData[SAVE_TASK_MARK_STATUS].equals(\"X\")) {","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"thedarie"},"content":"            return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"thedarie"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"jltha"},"content":"        return !rawData[SAVE_TASK_DESCRIPTION_INDEX].isBlank() \u0026\u0026 !rawData[SAVE_TASK_BY_DATE_INDEX].isBlank()","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"jltha"},"content":"                \u0026\u0026 !rawData[SAVE_TASK_DO_DATE_INDEX].isBlank();","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"thedarie"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"thedarie"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"jltha"},"content":"    private static Command prepareMarkOrUnmark(String[] parsedInput, String commandWord, TaskList taskList) {","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"jltha"},"content":"            int markIndex \u003d Integer.parseInt(parsedInput[MARK_INDEX]) - 1;","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"jltha"},"content":"            if (commandWord.equals(MarkCommand.COMMAND_WORD)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"jltha"},"content":"                return new MarkCommand(markIndex, taskList);","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"jltha"},"content":"            return new UnmarkCommand(markIndex, taskList);","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"jltha"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"jltha"},"content":"            System.out.println(ERROR_INVALID_MARKING_INDEX_MESSAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"jltha"},"content":"        return null;","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"jltha"},"content":"    private static void printMissingInputMessage(String input, String taskType) {","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"jltha"},"content":"        System.out.println(\"Oops! The \" + input + \" of a(n) \" + taskType + \" cannot be empty.\"","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"jltha"},"content":"                + HELP_MESSAGE_SPECIFIC_COMMAND);","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"jltha"},"content":"    private static Command prepareAddTodo(String[] parsedInput, TaskList taskList) {","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"jltha"},"content":"            return new TodoCommand(parsedInput, taskList);","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"jltha"},"content":"        } catch (ArrayIndexOutOfBoundsException | InvalidInputException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"jltha"},"content":"            printMissingInputMessage(\"description\", \"todo\");","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"jltha"},"content":"        } catch (InputRepeatedException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"jltha"},"content":"            System.out.println(ERROR_TODO_REPEATED_INPUT_MESSAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"jltha"},"content":"        return null;","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"jltha"},"content":"    private static void printMissingCommandMessage(String taskType) {","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"jltha"},"content":"        if (taskType.equals(\"event\")) {","lastModifiedDate":"2022-03-06"},{"lineNumber":149,"author":{"gitId":"jltha"},"content":"            System.out.println(ERROR_EVENT_MISSING_COMMAND_MESSAGE + HELP_MESSAGE_SPECIFIC_COMMAND);","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"jltha"},"content":"        } else {","lastModifiedDate":"2022-03-06"},{"lineNumber":151,"author":{"gitId":"jltha"},"content":"            System.out.println(ERROR_DEADLINE_MISSING_COMMAND_MESSAGE + HELP_MESSAGE_SPECIFIC_COMMAND);","lastModifiedDate":"2022-03-06"},{"lineNumber":152,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":153,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":154,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":155,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":156,"author":{"gitId":"jltha"},"content":"    private static String confirmInvalidDateFormat() throws InvalidInputException {","lastModifiedDate":"2022-03-06"},{"lineNumber":157,"author":{"gitId":"jltha"},"content":"        Ui anotherUi \u003d new Ui();","lastModifiedDate":"2022-03-06"},{"lineNumber":158,"author":{"gitId":"jltha"},"content":"        anotherUi.showToUser(\"It seems that the date and time\\nyou gave is not in the correct format.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":159,"author":{"gitId":"jltha"},"content":"                + \"Would you like to re-enter a valid date and time? (Y/N)\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":160,"author":{"gitId":"jltha"},"content":"                + \"*Enter \u0027No\u0027 to skip the adding of this task*\");","lastModifiedDate":"2022-03-06"},{"lineNumber":161,"author":{"gitId":"jltha"},"content":"        anotherUi.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":162,"author":{"gitId":"jltha"},"content":"        while (true) {","lastModifiedDate":"2022-03-06"},{"lineNumber":163,"author":{"gitId":"jltha"},"content":"            String input \u003d anotherUi.readCommand();","lastModifiedDate":"2022-03-06"},{"lineNumber":164,"author":{"gitId":"jltha"},"content":"            anotherUi.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":165,"author":{"gitId":"jltha"},"content":"            if (input.trim().equalsIgnoreCase(\"Y\")","lastModifiedDate":"2022-03-06"},{"lineNumber":166,"author":{"gitId":"jltha"},"content":"                    || input.trim().equalsIgnoreCase(\"Yes\")) {","lastModifiedDate":"2022-03-06"},{"lineNumber":167,"author":{"gitId":"jltha"},"content":"                anotherUi.showToUser(\"Understood. Please key in the date and time you wish to save.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":168,"author":{"gitId":"jltha"},"content":"                anotherUi.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":169,"author":{"gitId":"jltha"},"content":"                anotherUi.showToUser(\"Enter valid date input:\");","lastModifiedDate":"2022-03-06"},{"lineNumber":170,"author":{"gitId":"jltha"},"content":"                input \u003d anotherUi.readCommand();","lastModifiedDate":"2022-03-06"},{"lineNumber":171,"author":{"gitId":"jltha"},"content":"                anotherUi.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":172,"author":{"gitId":"jltha"},"content":"                return prepareTaskDate(input.trim(), false);","lastModifiedDate":"2022-03-06"},{"lineNumber":173,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":174,"author":{"gitId":"jltha"},"content":"            if (input.trim().equalsIgnoreCase(\"N\")","lastModifiedDate":"2022-03-06"},{"lineNumber":175,"author":{"gitId":"jltha"},"content":"                    || input.trim().equalsIgnoreCase(\"No\")) {","lastModifiedDate":"2022-03-06"},{"lineNumber":176,"author":{"gitId":"jltha"},"content":"                anotherUi.showToUser(\"Okay, proceeding to stop current task process...\");","lastModifiedDate":"2022-03-06"},{"lineNumber":177,"author":{"gitId":"jltha"},"content":"                return null;","lastModifiedDate":"2022-03-06"},{"lineNumber":178,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":179,"author":{"gitId":"jltha"},"content":"            anotherUi.showToUser(\"Please confirm your choice with either Y (Yes) or N (No).\");","lastModifiedDate":"2022-03-06"},{"lineNumber":180,"author":{"gitId":"jltha"},"content":"            anotherUi.showLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":181,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":182,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":183,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":184,"author":{"gitId":"jltha"},"content":"    private static String checkCorrectDateFormat(String rawTaskDate, boolean isParseSaveFile)","lastModifiedDate":"2022-03-06"},{"lineNumber":185,"author":{"gitId":"jltha"},"content":"            throws InvalidInputException {","lastModifiedDate":"2022-03-06"},{"lineNumber":186,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":187,"author":{"gitId":"jltha"},"content":"            if (isParseSaveFile) {","lastModifiedDate":"2022-03-06"},{"lineNumber":188,"author":{"gitId":"jltha"},"content":"                return LocalDate.parse(rawTaskDate, savedTaskNoTimeFormat)","lastModifiedDate":"2022-03-06"},{"lineNumber":189,"author":{"gitId":"jltha"},"content":"                        .format(DateTimeFormatter.ofPattern(DATE_FORMAT_WITHOUT_TIME));","lastModifiedDate":"2022-03-06"},{"lineNumber":190,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":191,"author":{"gitId":"jltha"},"content":"            return LocalDate.parse(rawTaskDate, noTimeFormat)","lastModifiedDate":"2022-03-06"},{"lineNumber":192,"author":{"gitId":"jltha"},"content":"                    .format(DateTimeFormatter.ofPattern(DATE_FORMAT_WITHOUT_TIME));","lastModifiedDate":"2022-03-06"},{"lineNumber":193,"author":{"gitId":"jltha"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":194,"author":{"gitId":"jltha"},"content":"            if (isParseSaveFile) {","lastModifiedDate":"2022-03-06"},{"lineNumber":195,"author":{"gitId":"jltha"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2022-03-06"},{"lineNumber":196,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":197,"author":{"gitId":"jltha"},"content":"            return confirmInvalidDateFormat();","lastModifiedDate":"2022-03-06"},{"lineNumber":198,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":199,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":200,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":201,"author":{"gitId":"jltha"},"content":"    private static String prepareTaskDate(String rawTaskDate, boolean isParseSaveFile)","lastModifiedDate":"2022-03-06"},{"lineNumber":202,"author":{"gitId":"jltha"},"content":"            throws InvalidInputException {","lastModifiedDate":"2022-03-06"},{"lineNumber":203,"author":{"gitId":"jltha"},"content":"        if (rawTaskDate.isBlank()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":204,"author":{"gitId":"jltha"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2022-03-06"},{"lineNumber":205,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":206,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":207,"author":{"gitId":"jltha"},"content":"            if (isParseSaveFile) {","lastModifiedDate":"2022-03-06"},{"lineNumber":208,"author":{"gitId":"jltha"},"content":"                return LocalDateTime.parse(rawTaskDate, savedTaskWithTimeFormat)","lastModifiedDate":"2022-03-06"},{"lineNumber":209,"author":{"gitId":"jltha"},"content":"                        .format(DateTimeFormatter.ofPattern(DATE_FORMAT_WITH_TIME));","lastModifiedDate":"2022-03-06"},{"lineNumber":210,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":211,"author":{"gitId":"jltha"},"content":"            return LocalDateTime.parse(rawTaskDate, withTimeFormat)","lastModifiedDate":"2022-03-06"},{"lineNumber":212,"author":{"gitId":"jltha"},"content":"                    .format(DateTimeFormatter.ofPattern(DATE_FORMAT_WITH_TIME));","lastModifiedDate":"2022-03-06"},{"lineNumber":213,"author":{"gitId":"jltha"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":214,"author":{"gitId":"jltha"},"content":"            return checkCorrectDateFormat(rawTaskDate, isParseSaveFile);","lastModifiedDate":"2022-03-06"},{"lineNumber":215,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":216,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":217,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":218,"author":{"gitId":"jltha"},"content":"    private static Command prepareAddEventOrDeadline(String[] parsedInput, String inputKeyword,","lastModifiedDate":"2022-03-06"},{"lineNumber":219,"author":{"gitId":"jltha"},"content":"                                                     TaskList taskList, String taskType) {","lastModifiedDate":"2022-03-06"},{"lineNumber":220,"author":{"gitId":"jltha"},"content":"        String[] filteredTaskContent \u003d null;","lastModifiedDate":"2022-03-06"},{"lineNumber":221,"author":{"gitId":"jltha"},"content":"        String dueDate \u003d null;","lastModifiedDate":"2022-03-06"},{"lineNumber":222,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":223,"author":{"gitId":"jltha"},"content":"            if (!parsedInput[TASK_CONTENT_INDEX].contains(inputKeyword)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":224,"author":{"gitId":"jltha"},"content":"                printMissingCommandMessage(taskType);","lastModifiedDate":"2022-03-06"},{"lineNumber":225,"author":{"gitId":"jltha"},"content":"                return null;","lastModifiedDate":"2022-03-06"},{"lineNumber":226,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":227,"author":{"gitId":"jltha"},"content":"            filteredTaskContent \u003d parsedInput[TASK_CONTENT_INDEX].split(inputKeyword, 2);","lastModifiedDate":"2022-03-06"},{"lineNumber":228,"author":{"gitId":"jltha"},"content":"            dueDate \u003d prepareTaskDate(filteredTaskContent[TASK_DATE_INDEX].trim(), false);","lastModifiedDate":"2022-03-06"},{"lineNumber":229,"author":{"gitId":"jltha"},"content":"            if (dueDate \u003d\u003d null) {","lastModifiedDate":"2022-03-06"},{"lineNumber":230,"author":{"gitId":"jltha"},"content":"                return null;","lastModifiedDate":"2022-03-06"},{"lineNumber":231,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":232,"author":{"gitId":"jltha"},"content":"            if (taskType.equals(EventCommand.COMMAND_WORD)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":233,"author":{"gitId":"jltha"},"content":"                return new EventCommand(filteredTaskContent[TASK_DESCRIPTION_INDEX].trim(), taskList, dueDate);","lastModifiedDate":"2022-03-06"},{"lineNumber":234,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":235,"author":{"gitId":"jltha"},"content":"            return new DeadlineCommand(filteredTaskContent[TASK_DESCRIPTION_INDEX].trim(), taskList, dueDate);","lastModifiedDate":"2022-03-06"},{"lineNumber":236,"author":{"gitId":"jltha"},"content":"        } catch (ArrayIndexOutOfBoundsException | InvalidInputException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":237,"author":{"gitId":"jltha"},"content":"            printMissingInputMessage(\"description and/or date\\n\", taskType);","lastModifiedDate":"2022-03-06"},{"lineNumber":238,"author":{"gitId":"jltha"},"content":"        } catch (InputRepeatedException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":239,"author":{"gitId":"jltha"},"content":"            return new UpdateCommand(filteredTaskContent[TASK_DESCRIPTION_INDEX].trim(), dueDate);","lastModifiedDate":"2022-03-06"},{"lineNumber":240,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":241,"author":{"gitId":"jltha"},"content":"        return null;","lastModifiedDate":"2022-03-06"},{"lineNumber":242,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":243,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":244,"author":{"gitId":"jltha"},"content":"    private static Command prepareDelete(String[] parsedInput, TaskList taskList) {","lastModifiedDate":"2022-03-06"},{"lineNumber":245,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":246,"author":{"gitId":"jltha"},"content":"            return new DeleteCommand(parsedInput, taskList);","lastModifiedDate":"2022-03-06"},{"lineNumber":247,"author":{"gitId":"jltha"},"content":"        } catch (IndexOutOfBoundsException | InvalidInputException | NumberFormatException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":248,"author":{"gitId":"jltha"},"content":"            System.out.println(ERROR_INVALID_DELETE_INDEX_MESSAGE + HELP_MESSAGE_SPECIFIC_COMMAND);","lastModifiedDate":"2022-03-06"},{"lineNumber":249,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":250,"author":{"gitId":"jltha"},"content":"        return null;","lastModifiedDate":"2022-03-06"},{"lineNumber":251,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":252,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":253,"author":{"gitId":"jltha"},"content":"    private static Command prepareHelp(String userInput) {","lastModifiedDate":"2022-03-06"},{"lineNumber":254,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":255,"author":{"gitId":"jltha"},"content":"            String[] parsedInput \u003d userInput.split(\" \", 2);","lastModifiedDate":"2022-03-06"},{"lineNumber":256,"author":{"gitId":"jltha"},"content":"            return new HelpCommand(parsedInput[HELP_OPTIONS_INDEX]);","lastModifiedDate":"2022-03-06"},{"lineNumber":257,"author":{"gitId":"jltha"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":258,"author":{"gitId":"jltha"},"content":"            return new HelpCommand(\"show help list\");","lastModifiedDate":"2022-03-06"},{"lineNumber":259,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":260,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":261,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":262,"author":{"gitId":"jltha"},"content":"    private static Command prepareFind(String[] userInput) {","lastModifiedDate":"2022-03-06"},{"lineNumber":263,"author":{"gitId":"jltha"},"content":"        String[] parsedInputToSearchByDate;","lastModifiedDate":"2022-03-06"},{"lineNumber":264,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":265,"author":{"gitId":"jltha"},"content":"            if (userInput[FIND_BY_TASK_CONTENT_INDEX].contains(\"/date\")) {","lastModifiedDate":"2022-03-06"},{"lineNumber":266,"author":{"gitId":"jltha"},"content":"                parsedInputToSearchByDate \u003d userInput[FIND_BY_TASK_CONTENT_INDEX].split(\"/date\");","lastModifiedDate":"2022-03-06"},{"lineNumber":267,"author":{"gitId":"jltha"},"content":"                String taskDateToSearch \u003d prepareTaskDate(parsedInputToSearchByDate[FIND_BY_TASK_DATE_INDEX].trim(),","lastModifiedDate":"2022-03-06"},{"lineNumber":268,"author":{"gitId":"jltha"},"content":"                        false);","lastModifiedDate":"2022-03-06"},{"lineNumber":269,"author":{"gitId":"jltha"},"content":"                if (taskDateToSearch \u003d\u003d null) {","lastModifiedDate":"2022-03-06"},{"lineNumber":270,"author":{"gitId":"jltha"},"content":"                    return null;","lastModifiedDate":"2022-03-06"},{"lineNumber":271,"author":{"gitId":"jltha"},"content":"                }","lastModifiedDate":"2022-03-06"},{"lineNumber":272,"author":{"gitId":"jltha"},"content":"                return new FindCommand(parsedInputToSearchByDate[FIND_BY_TASK_DESCRIPTION_WITH_DATE_INDEX].trim(),","lastModifiedDate":"2022-03-06"},{"lineNumber":273,"author":{"gitId":"jltha"},"content":"                        taskDateToSearch);","lastModifiedDate":"2022-03-06"},{"lineNumber":274,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":275,"author":{"gitId":"jltha"},"content":"            return new FindCommand(userInput[FIND_BY_TASK_DESCRIPTION_NO_DATE_INDEX].trim(), null);","lastModifiedDate":"2022-03-06"},{"lineNumber":276,"author":{"gitId":"jltha"},"content":"        } catch (IndexOutOfBoundsException | InvalidInputException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":277,"author":{"gitId":"jltha"},"content":"            System.out.println(\"Your search input seems to be missing.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":278,"author":{"gitId":"jltha"},"content":"                    + \"Please enter your input again.\" + HELP_MESSAGE_SPECIFIC_COMMAND);","lastModifiedDate":"2022-03-06"},{"lineNumber":279,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":280,"author":{"gitId":"jltha"},"content":"        return null;","lastModifiedDate":"2022-03-06"},{"lineNumber":281,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":282,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":283,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":284,"author":{"gitId":"jltha"},"content":"     * Parses the user command input.","lastModifiedDate":"2022-03-06"},{"lineNumber":285,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":286,"author":{"gitId":"jltha"},"content":"     * @param userInput User command.","lastModifiedDate":"2022-03-06"},{"lineNumber":287,"author":{"gitId":"jltha"},"content":"     * @param taskList  Array of tasks","lastModifiedDate":"2022-03-06"},{"lineNumber":288,"author":{"gitId":"jltha"},"content":"     * @return Command type matching the user command.","lastModifiedDate":"2022-03-06"},{"lineNumber":289,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":290,"author":{"gitId":"jltha"},"content":"    public static Command parseCommand(String userInput, TaskList taskList) {","lastModifiedDate":"2022-03-06"},{"lineNumber":291,"author":{"gitId":"jltha"},"content":"        String[] parsedInput \u003d userInput.split(\" \", 2);","lastModifiedDate":"2022-03-06"},{"lineNumber":292,"author":{"gitId":"jltha"},"content":"        String commandWord \u003d parsedInput[OPTIONS_INDEX].toLowerCase().trim();","lastModifiedDate":"2022-03-06"},{"lineNumber":293,"author":{"gitId":"jltha"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-03-06"},{"lineNumber":294,"author":{"gitId":"jltha"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":295,"author":{"gitId":"jltha"},"content":"            return new ListCommand();","lastModifiedDate":"2022-03-06"},{"lineNumber":296,"author":{"gitId":"jltha"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":297,"author":{"gitId":"jltha"},"content":"            return prepareMarkOrUnmark(parsedInput, MarkCommand.COMMAND_WORD, taskList);","lastModifiedDate":"2022-03-06"},{"lineNumber":298,"author":{"gitId":"jltha"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":299,"author":{"gitId":"jltha"},"content":"            return prepareMarkOrUnmark(parsedInput, UnmarkCommand.COMMAND_WORD, taskList);","lastModifiedDate":"2022-03-06"},{"lineNumber":300,"author":{"gitId":"jltha"},"content":"        case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":301,"author":{"gitId":"jltha"},"content":"            return prepareAddTodo(parsedInput, taskList);","lastModifiedDate":"2022-03-06"},{"lineNumber":302,"author":{"gitId":"jltha"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":303,"author":{"gitId":"jltha"},"content":"            return prepareAddEventOrDeadline(parsedInput, \"/at\",","lastModifiedDate":"2022-03-06"},{"lineNumber":304,"author":{"gitId":"jltha"},"content":"                    taskList, EventCommand.COMMAND_WORD);","lastModifiedDate":"2022-03-06"},{"lineNumber":305,"author":{"gitId":"jltha"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":306,"author":{"gitId":"jltha"},"content":"            return prepareAddEventOrDeadline(parsedInput, \"/by\",","lastModifiedDate":"2022-03-06"},{"lineNumber":307,"author":{"gitId":"jltha"},"content":"                    taskList, DeadlineCommand.COMMAND_WORD);","lastModifiedDate":"2022-03-06"},{"lineNumber":308,"author":{"gitId":"jltha"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":309,"author":{"gitId":"jltha"},"content":"            return prepareDelete(parsedInput, taskList);","lastModifiedDate":"2022-03-06"},{"lineNumber":310,"author":{"gitId":"jltha"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":311,"author":{"gitId":"jltha"},"content":"            return prepareFind(parsedInput);","lastModifiedDate":"2022-03-06"},{"lineNumber":312,"author":{"gitId":"jltha"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":313,"author":{"gitId":"jltha"},"content":"            return new ClearCommand();","lastModifiedDate":"2022-03-06"},{"lineNumber":314,"author":{"gitId":"jltha"},"content":"        case StudyCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-09"},{"lineNumber":315,"author":{"gitId":"jltha"},"content":"            return new StudyCommand();","lastModifiedDate":"2022-03-09"},{"lineNumber":316,"author":{"gitId":"jltha"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":317,"author":{"gitId":"jltha"},"content":"            return prepareHelp(userInput);","lastModifiedDate":"2022-03-06"},{"lineNumber":318,"author":{"gitId":"jltha"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":319,"author":{"gitId":"jltha"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-03-06"},{"lineNumber":320,"author":{"gitId":"jltha"},"content":"        default:","lastModifiedDate":"2022-03-06"},{"lineNumber":321,"author":{"gitId":"jltha"},"content":"            System.out.println(ERROR_INVALID_INPUT_MESSAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":322,"author":{"gitId":"jltha"},"content":"            return null;","lastModifiedDate":"2022-03-06"},{"lineNumber":323,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":324,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":325,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":326,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":327,"author":{"gitId":"laiisaac"},"content":"     * Parses the default timer modes.","lastModifiedDate":"2022-03-14"},{"lineNumber":328,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":329,"author":{"gitId":"laiisaac"},"content":"     * @param defaultTimerChoice Mode number","lastModifiedDate":"2022-03-14"},{"lineNumber":330,"author":{"gitId":"laiisaac"},"content":"     * @param ui UI","lastModifiedDate":"2022-03-14"},{"lineNumber":331,"author":{"gitId":"laiisaac"},"content":"     * @return Returns the duration of the timer mode selected in seconds","lastModifiedDate":"2022-03-14"},{"lineNumber":332,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":333,"author":{"gitId":"jltha"},"content":"    private static int selectDefaultTimer(String defaultTimerChoice, Ui ui) {","lastModifiedDate":"2022-03-09"},{"lineNumber":334,"author":{"gitId":"jltha"},"content":"        switch (defaultTimerChoice) {","lastModifiedDate":"2022-03-09"},{"lineNumber":335,"author":{"gitId":"laiisaac"},"content":"        case \"0\":","lastModifiedDate":"2022-03-12"},{"lineNumber":336,"author":{"gitId":"laiisaac"},"content":"            return DEFAULT_TIMER_ZERO;","lastModifiedDate":"2022-03-12"},{"lineNumber":337,"author":{"gitId":"jltha"},"content":"        case \"1\":","lastModifiedDate":"2022-03-09"},{"lineNumber":338,"author":{"gitId":"jltha"},"content":"            return DEFAULT_TIMER_ONE;","lastModifiedDate":"2022-03-09"},{"lineNumber":339,"author":{"gitId":"jltha"},"content":"        case \"2\":","lastModifiedDate":"2022-03-09"},{"lineNumber":340,"author":{"gitId":"jltha"},"content":"            return DEFAULT_TIMER_TWO;","lastModifiedDate":"2022-03-09"},{"lineNumber":341,"author":{"gitId":"jltha"},"content":"        case \"3\":","lastModifiedDate":"2022-03-09"},{"lineNumber":342,"author":{"gitId":"jltha"},"content":"            return DEFAULT_TIMER_THREE;","lastModifiedDate":"2022-03-09"},{"lineNumber":343,"author":{"gitId":"jltha"},"content":"        default:","lastModifiedDate":"2022-03-09"},{"lineNumber":344,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"Sorry! I can\u0027t recognise the choice you\u0027ve entered.\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":345,"author":{"gitId":"jltha"},"content":"                    + \"Please re-enter a valid default timer input\");","lastModifiedDate":"2022-03-09"},{"lineNumber":346,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":347,"author":{"gitId":"jltha"},"content":"        return -1;","lastModifiedDate":"2022-03-09"},{"lineNumber":348,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":349,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":350,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":351,"author":{"gitId":"laiisaac"},"content":"     * Parses input to the timer.","lastModifiedDate":"2022-03-14"},{"lineNumber":352,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":353,"author":{"gitId":"laiisaac"},"content":"     * @param parsedInput Parsed input","lastModifiedDate":"2022-03-14"},{"lineNumber":354,"author":{"gitId":"laiisaac"},"content":"     * @param ui UI","lastModifiedDate":"2022-03-14"},{"lineNumber":355,"author":{"gitId":"laiisaac"},"content":"     * @return Returns the duration of the timer, else returns -1 if invalid duration specified","lastModifiedDate":"2022-03-14"},{"lineNumber":356,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":357,"author":{"gitId":"laiisaac"},"content":"    public static int parseTimerInput(String[] parsedInput, Ui ui) {","lastModifiedDate":"2022-03-14"},{"lineNumber":358,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-09"},{"lineNumber":359,"author":{"gitId":"jltha"},"content":"            if (parsedInput[TIMER_FORMAT_INDEX].trim().contains(\"/custom\")) {","lastModifiedDate":"2022-03-09"},{"lineNumber":360,"author":{"gitId":"jltha"},"content":"                String[] customTimerInput \u003d parsedInput[TIMER_FORMAT_INDEX].split(\"/custom\", 2);","lastModifiedDate":"2022-03-09"},{"lineNumber":361,"author":{"gitId":"jltha"},"content":"                return Integer.parseInt(customTimerInput[CUSTOM_TIMER_INDEX].trim());","lastModifiedDate":"2022-03-09"},{"lineNumber":362,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-09"},{"lineNumber":363,"author":{"gitId":"jltha"},"content":"            return selectDefaultTimer(parsedInput[DEFAULT_TIMER_INDEX].trim(), ui);","lastModifiedDate":"2022-03-09"},{"lineNumber":364,"author":{"gitId":"jltha"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-09"},{"lineNumber":365,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"Oops! Your input seems to be missing some commands.\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":366,"author":{"gitId":"jltha"},"content":"                    + \"Please re-enter a valid input.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":367,"author":{"gitId":"jltha"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-09"},{"lineNumber":368,"author":{"gitId":"jltha"},"content":"            ui.showToUser(\"Oops! Your timer input does not seem to be correct.\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":369,"author":{"gitId":"jltha"},"content":"                    + \"Please re-enter a valid input.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":370,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":371,"author":{"gitId":"jltha"},"content":"        return -1;","lastModifiedDate":"2022-03-09"},{"lineNumber":372,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":373,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":374,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":375,"author":{"gitId":"laiisaac"},"content":"     * Parses commands for study mode.","lastModifiedDate":"2022-03-14"},{"lineNumber":376,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":377,"author":{"gitId":"laiisaac"},"content":"     * @param rawUserInput Raw user input","lastModifiedDate":"2022-03-14"},{"lineNumber":378,"author":{"gitId":"laiisaac"},"content":"     * @param ui UI","lastModifiedDate":"2022-03-14"},{"lineNumber":379,"author":{"gitId":"laiisaac"},"content":"     * @param timer Timer object","lastModifiedDate":"2022-03-14"},{"lineNumber":380,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":381,"author":{"gitId":"laiisaac"},"content":"    public static void parseStudyMode(String rawUserInput, Ui ui, Timer timer) {","lastModifiedDate":"2022-03-11"},{"lineNumber":382,"author":{"gitId":"jltha"},"content":"        String[] parsedInput \u003d rawUserInput.trim().split(\" \", 2);","lastModifiedDate":"2022-03-09"},{"lineNumber":383,"author":{"gitId":"jltha"},"content":"        switch (parsedInput[STUDY_COMMAND_INDEX].trim().toLowerCase()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":384,"author":{"gitId":"jltha"},"content":"        case \"start\":","lastModifiedDate":"2022-03-09"},{"lineNumber":385,"author":{"gitId":"laiisaac"},"content":"            try {","lastModifiedDate":"2022-03-14"},{"lineNumber":386,"author":{"gitId":"laiisaac"},"content":"                startTimer(parsedInput);","lastModifiedDate":"2022-03-14"},{"lineNumber":387,"author":{"gitId":"laiisaac"},"content":"            } catch (InvalidTimeException e) {","lastModifiedDate":"2022-03-14"},{"lineNumber":388,"author":{"gitId":"laiisaac"},"content":"                ui.showToUser(\"Oops! Your timer input does not seem to be correct.\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":389,"author":{"gitId":"laiisaac"},"content":"                        + \"Please re-enter a valid duration.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":390,"author":{"gitId":"laiisaac"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":391,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-09"},{"lineNumber":392,"author":{"gitId":"jltha"},"content":"        case \"pause\":","lastModifiedDate":"2022-03-09"},{"lineNumber":393,"author":{"gitId":"laiisaac"},"content":"            pauseTimer();","lastModifiedDate":"2022-03-14"},{"lineNumber":394,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-09"},{"lineNumber":395,"author":{"gitId":"jltha"},"content":"        case \"resume\":","lastModifiedDate":"2022-03-09"},{"lineNumber":396,"author":{"gitId":"laiisaac"},"content":"            resumeTimer();","lastModifiedDate":"2022-03-14"},{"lineNumber":397,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-09"},{"lineNumber":398,"author":{"gitId":"jltha"},"content":"        case \"stop\":","lastModifiedDate":"2022-03-09"},{"lineNumber":399,"author":{"gitId":"laiisaac"},"content":"            stopTimer();","lastModifiedDate":"2022-03-14"},{"lineNumber":400,"author":{"gitId":"jltha"},"content":"            break;","lastModifiedDate":"2022-03-09"},{"lineNumber":401,"author":{"gitId":"jltha"},"content":"        default:","lastModifiedDate":"2022-03-09"},{"lineNumber":402,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(ERROR_INVALID_STUDY_INPUT_MESSAGE);","lastModifiedDate":"2022-03-12"},{"lineNumber":403,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":404,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":405,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"laiisaac":73,"jltha":311,"thedarie":21}},{"path":"src/main/java/seedu/sherpass/util/Reminder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuzhongng"},"content":"package seedu.sherpass.util;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.constant.DateAndTimeFormat;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.task.Task;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"yuzhongng"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"yuzhongng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"yuzhongng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"yuzhongng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"yuzhongng"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"yuzhongng"},"content":"import static java.util.stream.Collectors.toList;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"yuzhongng"},"content":"public class Reminder {","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"yuzhongng"},"content":"    private Ui ui;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"yuzhongng"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"yuzhongng"},"content":"    private LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"yuzhongng"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"yuzhongng"},"content":"     * Create a constructor for the class Reminder.","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"yuzhongng"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"yuzhongng"},"content":"     * @param taskList Representation of an array of tasks.","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"yuzhongng"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"yuzhongng"},"content":"    public Reminder(TaskList taskList, Ui ui) {","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"yuzhongng"},"content":"        tasks \u003d taskList.getTasks();","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"yuzhongng"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"yuzhongng"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"yuzhongng"},"content":"     * Prints reminders to the user that","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"yuzhongng"},"content":"     * the task is due soon or","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"yuzhongng"},"content":"     * tasks that need to be done on the day.","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"yuzhongng"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"yuzhongng"},"content":"    public void showReminders() {","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"yuzhongng"},"content":"        showDailyTask();","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"yuzhongng"},"content":"        showWeeklyTask();","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"yuzhongng"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"yuzhongng"},"content":"     * Prints tasks that need to be done today","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"yuzhongng"},"content":"     * with reference to user local machine date.","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"yuzhongng"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"yuzhongng"},"content":"    public void showDailyTask() {","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"yuzhongng"},"content":"        ArrayList\u003cTask\u003e filteredDailyTasks \u003d (ArrayList\u003cTask\u003e) tasks.stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"yuzhongng"},"content":"                .filter((t) -\u003e isEqualDate(t.getDate(), currentDate))","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"yuzhongng"},"content":"                .filter((t) -\u003e !t.isDone())","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"yuzhongng"},"content":"                .collect(toList());","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"yuzhongng"},"content":"        if (filteredDailyTasks.isEmpty()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(\"Your schedule is empty today.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"yuzhongng"},"content":"        } else {","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"yuzhongng"},"content":"            System.out.println(\"Schedule for today:\");","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"yuzhongng"},"content":"            for (Task task : filteredDailyTasks) {","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"yuzhongng"},"content":"                System.out.println(task.toString());","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"yuzhongng"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"yuzhongng"},"content":"        ui.showLine();","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"yuzhongng"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"yuzhongng"},"content":"     * Prints tasks that is due in the current week","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"yuzhongng"},"content":"     * with reference to user local machine date.","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"yuzhongng"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"yuzhongng"},"content":"    public void showWeeklyTask() {","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"yuzhongng"},"content":"        LocalDate nextWeekDate \u003d currentDate.plusDays(7);","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"yuzhongng"},"content":"        ArrayList\u003cTask\u003e filteredThisWeekTasks \u003d (ArrayList\u003cTask\u003e) tasks.stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"yuzhongng"},"content":"                .filter((t) -\u003e isBeforeDate(t.getDate(), nextWeekDate))","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"yuzhongng"},"content":"                .filter((t) -\u003e !t.isDone())","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"yuzhongng"},"content":"                .sorted(Comparator.comparing(Task::getDate))","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"yuzhongng"},"content":"                .collect(toList());","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"yuzhongng"},"content":"        if (filteredThisWeekTasks.isEmpty()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"yuzhongng"},"content":"            ui.showToUser(\"You do not have any pending task for the week.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"yuzhongng"},"content":"        } else {","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"yuzhongng"},"content":"            System.out.println(\"Tasks to be done within the week:\");","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"yuzhongng"},"content":"            for (Task task : filteredThisWeekTasks) {","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"yuzhongng"},"content":"                System.out.println(task.toString());","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"yuzhongng"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"yuzhongng"},"content":"        ui.showLine();","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"yuzhongng"},"content":"    private boolean isEqualDate(String currentDate, LocalDate compareDate) {","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"yuzhongng"},"content":"        if (currentDate \u003d\u003d \" \") {","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"yuzhongng"},"content":"            return false;","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"yuzhongng"},"content":"        } else {","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"yuzhongng"},"content":"            LocalDate date \u003d LocalDate.parse(currentDate, DateAndTimeFormat.noTimeFormat);","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"yuzhongng"},"content":"            return date.isEqual(compareDate);","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":93,"author":{"gitId":"yuzhongng"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"yuzhongng"},"content":"    private boolean isBeforeDate(String currentDate, LocalDate compareDate) {","lastModifiedDate":"2022-03-12"},{"lineNumber":95,"author":{"gitId":"yuzhongng"},"content":"        if (currentDate \u003d\u003d \" \") {","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"yuzhongng"},"content":"            return false;","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"yuzhongng"},"content":"        } else {","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"yuzhongng"},"content":"            LocalDate date \u003d LocalDate.parse(currentDate, DateAndTimeFormat.noTimeFormat);","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"yuzhongng"},"content":"            return date.isBefore(compareDate);","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"yuzhongng"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"yuzhongng"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"yuzhongng"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"yuzhongng":102}},{"path":"src/main/java/seedu/sherpass/util/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.util;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.exception.InputRepeatedException;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.exception.InvalidInputException;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.Task;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"import seedu.sherpass.task.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"import java.io.File;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Index.DIRECTORY_INDEX;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.ERROR_CORRUPT_SAVED_FILE_MESSAGE;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.ERROR_FILE_NOT_FOUND_MESSAGE;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.ERROR_IO_FAILURE_MESSAGE;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"public class Storage {","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"    private String saveFilePath;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"thedarie"},"content":"    private static final String PLACEHOLDER_GET_BY_DATE \u003d \"2050-12-12\";","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"thedarie"},"content":"    private static final String PLACEHOLDER_GET_DO_DATE \u003d \"2050-12-12\";","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"     * Creates a constructor for the class Storage.","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"     * Initialises and creates location for save file if missing.","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"     * @param filePath Location of the save file.","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"     * @throws IOException If failed to read save file.","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"    public Storage(String filePath) throws IOException {","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"        saveFilePath \u003d filePath;","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"        System.out.println(\"Booting up...\");","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"        String[] directoryName \u003d filePath.split(\"/\");","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"        File saveDirectory \u003d new File(directoryName[DIRECTORY_INDEX]);","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"        if (saveDirectory.mkdir()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"            System.out.println(\"Creating save directory...\");","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"        File saveState \u003d new File(filePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"        if (saveState.createNewFile()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"            System.out.println(\"Creating new save state...\");","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"thedarie"},"content":"    // Wipes the existing file","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"    private void wipeSavedData() {","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"            FileWriter fw \u003d new FileWriter(saveFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"            fw.close();","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"            System.out.println(ERROR_IO_FAILURE_MESSAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"            System.exit(1);","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"     * Appends new tasks to the save file.","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"     * @param newTaskDescription Task Description.","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"thedarie"},"content":"     * @param newTaskByDate      Task Deadline and/or time.","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"thedarie"},"content":"     * @param newTaskDoDate      Task Do date","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"     * @param taskStatus         Mark status of the task.","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"    public void appendToFile(String newTaskDescription,","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"thedarie"},"content":"                             String newTaskByDate, String newTaskDoDate,","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"thedarie"},"content":"                             String taskStatus) {","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"jltha"},"content":"            FileWriter fw \u003d new FileWriter(saveFilePath, true);","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"thedarie"},"content":"            String textToAppend \u003d taskStatus + \" | \"","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"thedarie"},"content":"                    + newTaskDescription + \" | \" + newTaskByDate","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"thedarie"},"content":"                    + \" | \" + newTaskDoDate;","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"jltha"},"content":"            fw.write(textToAppend + System.lineSeparator());","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"            fw.close();","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"jltha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"jltha"},"content":"            System.out.println(ERROR_IO_FAILURE_MESSAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"jltha"},"content":"     * Overwrites existing saved data in save file with new data.","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"jltha"},"content":"     * @param taskList Array of tasks that are to be saved.","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"thedarie"},"content":"    public void writeSaveData(TaskList taskList) {","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"jltha"},"content":"        wipeSavedData();","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"jltha"},"content":"        ArrayList\u003cTask\u003e replicatedTasks \u003d taskList.getTasks();","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"jltha"},"content":"        for (Task task : replicatedTasks) {","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"thedarie"},"content":"            appendToFile(task.getDescription(), PLACEHOLDER_GET_BY_DATE,","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"thedarie"},"content":"                    PLACEHOLDER_GET_DO_DATE, task.getStatusIcon());","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"jltha"},"content":"    private ArrayList\u003cTask\u003e readSavedData() throws","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"jltha"},"content":"            FileNotFoundException, ArrayIndexOutOfBoundsException, InvalidInputException {","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"jltha"},"content":"        ArrayList\u003cTask\u003e decodedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"jltha"},"content":"        File f \u003d new File(saveFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"jltha"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"jltha"},"content":"        String[] taskRawData;","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"jltha"},"content":"        Task taskParsedData;","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"jltha"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"jltha"},"content":"            taskRawData \u003d s.nextLine().split(\" \\\\| \");","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"jltha"},"content":"            taskParsedData \u003d Parser.parseSavedData(taskRawData);","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"jltha"},"content":"            decodedTasks.add(taskParsedData);","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"jltha"},"content":"        return decodedTasks;","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"jltha"},"content":"    private boolean isTaskRepeated(ArrayList\u003cTask\u003e saveTaskList, int index) {","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"jltha"},"content":"        for (int j \u003d index + 1; j \u003c saveTaskList.size(); j++) {","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"jltha"},"content":"            if (saveTaskList.get(index).getDescription().trim()","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"jltha"},"content":"                    .equalsIgnoreCase(saveTaskList.get(j).getDescription().trim())) {","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"jltha"},"content":"                return true;","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"jltha"},"content":"        return false;","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"jltha"},"content":"    private void checkForRepeatedInputs(ArrayList\u003cTask\u003e saveTaskList) throws InputRepeatedException {","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"jltha"},"content":"        for (int i \u003d 0; i \u003c saveTaskList.size() - 1; i++) {","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"jltha"},"content":"            if (isTaskRepeated(saveTaskList, i)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"jltha"},"content":"                throw new InputRepeatedException();","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"jltha"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"jltha"},"content":"     * Loads back the save file onto the program.","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"jltha"},"content":"     * @return The saved data of the tasks in the saved file.","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"jltha"},"content":"     *     Tasks are represented in an array.","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"jltha"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"jltha"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"thedarie"},"content":"            ArrayList\u003cTask\u003e savedTaskList \u003d readSavedData();","lastModifiedDate":"2022-03-09"},{"lineNumber":140,"author":{"gitId":"jltha"},"content":"            //checkForRepeatedInputs(savedTaskList);","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"thedarie"},"content":"            return savedTaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":142,"author":{"gitId":"jltha"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"jltha"},"content":"            System.out.println(ERROR_FILE_NOT_FOUND_MESSAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"jltha"},"content":"            System.exit(1);","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"thedarie"},"content":"        } catch (ArrayIndexOutOfBoundsException | InvalidInputException e) {","lastModifiedDate":"2022-03-09"},{"lineNumber":146,"author":{"gitId":"jltha"},"content":"            // To include InputRepeatedException if checkForRepeatedInputs() is called","lastModifiedDate":"2022-03-10"},{"lineNumber":147,"author":{"gitId":"jltha"},"content":"            System.out.println(ERROR_CORRUPT_SAVED_FILE_MESSAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"jltha"},"content":"            wipeSavedData();","lastModifiedDate":"2022-03-06"},{"lineNumber":149,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"jltha"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-06"},{"lineNumber":151,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":152,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":153,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":137,"thedarie":16}},{"path":"src/main/java/seedu/sherpass/util/Timer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laiisaac"},"content":"package seedu.sherpass.util;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.util.TimerLogic.isTimerRunning;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.TimerConstant.TIME_INTERVAL;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.TimerConstant.NO_TIME_LEFT;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.TimerConstant.ONE_MINUTE;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.TimerConstant.ONE_HOUR;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"public class Timer extends Thread {","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"    private volatile boolean timerPaused \u003d false;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"    private boolean forcedStop \u003d false;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"laiisaac"},"content":"    private boolean hasTimeLeft \u003d false;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"    private static Ui ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"    protected int timeLeft;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"laiisaac"},"content":"     * Creates a constructor for timer. Initialises the parameters needed for the countdown timer.","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"laiisaac"},"content":"     * @param ui UI","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"laiisaac"},"content":"    public Timer(Ui ui) {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"laiisaac"},"content":"        timeLeft \u003d NO_TIME_LEFT;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"laiisaac"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"laiisaac"},"content":"     * Creates a new thread to run the timer. The timer will continue to run until it has run out of time, or has been","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"laiisaac"},"content":"     * stopped by the user.","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"laiisaac"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"laiisaac"},"content":"    public void run() {","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"laiisaac"},"content":"        isTimerRunning \u003d true;","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"laiisaac"},"content":"        printTimerStart();","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"laiisaac"},"content":"        while (hasTimeLeft) {","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"laiisaac"},"content":"            printTimeLeft();","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"laiisaac"},"content":"            update();","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"laiisaac"},"content":"        if (timerRanOutOfTime()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"laiisaac"},"content":"            isTimerRunning \u003d false;","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"Time is up! Would you like to start another timer?\");","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"laiisaac"},"content":"        this.interrupt();","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"laiisaac"},"content":"     * Updates the timer by letting the thread sleep for 1 second, then updating timeLeft. The timer will not update","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"laiisaac"},"content":"     * if it is paused and will instead wait for the user to resume the timer.","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"laiisaac"},"content":"    private void update() {","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"laiisaac"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"laiisaac"},"content":"            Thread.sleep(1000);","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"laiisaac"},"content":"            timeLeft -\u003d 1;","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"laiisaac"},"content":"            updateHasTimeLeft();","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"laiisaac"},"content":"            if (timerPaused) {","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"laiisaac"},"content":"                waitForTimerToResume();","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"laiisaac"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"laiisaac"},"content":"        } catch (InterruptedException e) {","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"laiisaac"},"content":"            return;","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"laiisaac"},"content":"    private void updateHasTimeLeft() {","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"laiisaac"},"content":"        if (timeLeft \u003c\u003d NO_TIME_LEFT) {","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"laiisaac"},"content":"            hasTimeLeft \u003d false;","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"laiisaac"},"content":"     * Method causes the thread which the timer is running on to wait when it is paused, until the user resumes the","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"laiisaac"},"content":"     * timer.","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"laiisaac"},"content":"    private void waitForTimerToResume() throws InterruptedException {","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"laiisaac"},"content":"        synchronized (this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"laiisaac"},"content":"            while (timerPaused) {","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"laiisaac"},"content":"                wait();","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"laiisaac"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"laiisaac"},"content":"     * Returns whether timer ran out of time.","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"laiisaac"},"content":"     * @return Boolean of whether timer ran out of time","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"laiisaac"},"content":"    private boolean timerRanOutOfTime() {","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"laiisaac"},"content":"        return (!hasTimeLeft \u0026\u0026 !forcedStop);","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"laiisaac"},"content":"     * Prints the time left on the timer at certain intervals.","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"laiisaac"},"content":"     * When timer has more than a minute remaining, it prints time remaining every minute (X min:00s).","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"laiisaac"},"content":"     * It will print out the time remaining every TIME_INTERVAL seconds when less than a minute remains.","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"laiisaac"},"content":"    public void printTimeLeft() {","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"laiisaac"},"content":"        if (timeLeft \u003e ONE_MINUTE) {","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"laiisaac"},"content":"            if (timeLeft % ONE_MINUTE \u003d\u003d 0) {","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"laiisaac"},"content":"                int minutesLeft \u003d timeLeft / ONE_MINUTE;","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"laiisaac"},"content":"                ui.showToUser(minutesLeft + \" minutes left.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"laiisaac"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"laiisaac"},"content":"            return;","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"laiisaac"},"content":"        if (timeLeft % TIME_INTERVAL \u003d\u003d 0) {","lastModifiedDate":"2022-03-13"},{"lineNumber":105,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(timeLeft + \" seconds left.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"laiisaac"},"content":"     * Prints the timer selected by the user.","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"laiisaac"},"content":"    public void printTimerStart() {","lastModifiedDate":"2022-03-13"},{"lineNumber":113,"author":{"gitId":"laiisaac"},"content":"        int hours;","lastModifiedDate":"2022-03-13"},{"lineNumber":114,"author":{"gitId":"laiisaac"},"content":"        int minutes;","lastModifiedDate":"2022-03-13"},{"lineNumber":115,"author":{"gitId":"laiisaac"},"content":"        int seconds;","lastModifiedDate":"2022-03-13"},{"lineNumber":116,"author":{"gitId":"laiisaac"},"content":"        if (timeLeft \u003e\u003d ONE_HOUR) {","lastModifiedDate":"2022-03-13"},{"lineNumber":117,"author":{"gitId":"laiisaac"},"content":"            hours \u003d timeLeft / ONE_HOUR;","lastModifiedDate":"2022-03-13"},{"lineNumber":118,"author":{"gitId":"laiisaac"},"content":"            minutes \u003d (timeLeft - hours * ONE_HOUR) / ONE_MINUTE;","lastModifiedDate":"2022-03-13"},{"lineNumber":119,"author":{"gitId":"laiisaac"},"content":"            seconds \u003d timeLeft - hours * ONE_HOUR - minutes * ONE_MINUTE;","lastModifiedDate":"2022-03-13"},{"lineNumber":120,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"Timer of \" + hours + \" hours \" + minutes + \" minutes \"","lastModifiedDate":"2022-03-13"},{"lineNumber":121,"author":{"gitId":"laiisaac"},"content":"                    + seconds + \" seconds started.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":122,"author":{"gitId":"laiisaac"},"content":"        } else if (timeLeft \u003e\u003d ONE_MINUTE) {","lastModifiedDate":"2022-03-13"},{"lineNumber":123,"author":{"gitId":"laiisaac"},"content":"            minutes \u003d timeLeft / ONE_MINUTE;","lastModifiedDate":"2022-03-13"},{"lineNumber":124,"author":{"gitId":"laiisaac"},"content":"            seconds \u003d timeLeft - (minutes * ONE_MINUTE);","lastModifiedDate":"2022-03-13"},{"lineNumber":125,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"Timer of \" + minutes + \" minutes \"","lastModifiedDate":"2022-03-13"},{"lineNumber":126,"author":{"gitId":"laiisaac"},"content":"                    + seconds + \" seconds started.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":127,"author":{"gitId":"laiisaac"},"content":"        } else {","lastModifiedDate":"2022-03-13"},{"lineNumber":128,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"Timer of \" + timeLeft + \" seconds started.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":129,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":130,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":131,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":132,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"laiisaac"},"content":"     * Sets the duration of the timer, as specified by the user.","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"laiisaac"},"content":"     * @param duration Duration of timer in seconds","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"laiisaac"},"content":"    public void setDuration(int duration) {","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"laiisaac"},"content":"        timeLeft \u003d duration;","lastModifiedDate":"2022-03-11"},{"lineNumber":139,"author":{"gitId":"laiisaac"},"content":"        hasTimeLeft \u003d true;","lastModifiedDate":"2022-03-11"},{"lineNumber":140,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":141,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":142,"author":{"gitId":"laiisaac"},"content":"    public boolean getHasTimeLeft() {","lastModifiedDate":"2022-03-13"},{"lineNumber":143,"author":{"gitId":"laiisaac"},"content":"        return hasTimeLeft;","lastModifiedDate":"2022-03-13"},{"lineNumber":144,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":145,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":146,"author":{"gitId":"laiisaac"},"content":"    public boolean isTimerPaused() {","lastModifiedDate":"2022-03-13"},{"lineNumber":147,"author":{"gitId":"laiisaac"},"content":"        return timerPaused;","lastModifiedDate":"2022-03-13"},{"lineNumber":148,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":149,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":150,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":151,"author":{"gitId":"laiisaac"},"content":"     * Resumes the timer by calling notify() on the waiting thread.","lastModifiedDate":"2022-03-14"},{"lineNumber":152,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":153,"author":{"gitId":"laiisaac"},"content":"    public void resumeTimer() {","lastModifiedDate":"2022-03-10"},{"lineNumber":154,"author":{"gitId":"laiisaac"},"content":"        synchronized (this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"laiisaac"},"content":"            timerPaused \u003d false;","lastModifiedDate":"2022-03-11"},{"lineNumber":156,"author":{"gitId":"laiisaac"},"content":"            notify();","lastModifiedDate":"2022-03-10"},{"lineNumber":157,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":158,"author":{"gitId":"laiisaac"},"content":"        ui.showToUser(\"Okay! I\u0027ve resumed the timer. You have \" + timeLeft + \" seconds left.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":159,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":160,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":161,"author":{"gitId":"laiisaac"},"content":"    public void pauseTimer() {","lastModifiedDate":"2022-03-11"},{"lineNumber":162,"author":{"gitId":"laiisaac"},"content":"        ui.showToUser(\"Got it! I\u0027ve paused the timer.\\n\"","lastModifiedDate":"2022-03-11"},{"lineNumber":163,"author":{"gitId":"laiisaac"},"content":"                + \"Feel free to resume whenever you\u0027re ready.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":164,"author":{"gitId":"laiisaac"},"content":"        timerPaused \u003d true;","lastModifiedDate":"2022-03-11"},{"lineNumber":165,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":166,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":167,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":168,"author":{"gitId":"laiisaac"},"content":"     * Stops the timer if it is running, else prints an error message.","lastModifiedDate":"2022-03-14"},{"lineNumber":169,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":170,"author":{"gitId":"laiisaac"},"content":"    public void stopTimer() {","lastModifiedDate":"2022-03-11"},{"lineNumber":171,"author":{"gitId":"laiisaac"},"content":"        if (isTimerRunning) {","lastModifiedDate":"2022-03-14"},{"lineNumber":172,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"Alright, I\u0027ve stopped the timer.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":173,"author":{"gitId":"laiisaac"},"content":"            isTimerRunning \u003d false;","lastModifiedDate":"2022-03-14"},{"lineNumber":174,"author":{"gitId":"laiisaac"},"content":"            forcedStop \u003d true;","lastModifiedDate":"2022-03-12"},{"lineNumber":175,"author":{"gitId":"laiisaac"},"content":"            timeLeft \u003d NO_TIME_LEFT;","lastModifiedDate":"2022-03-11"},{"lineNumber":176,"author":{"gitId":"laiisaac"},"content":"            hasTimeLeft \u003d false;","lastModifiedDate":"2022-03-11"},{"lineNumber":177,"author":{"gitId":"laiisaac"},"content":"            this.interrupt();","lastModifiedDate":"2022-03-11"},{"lineNumber":178,"author":{"gitId":"laiisaac"},"content":"        } else {","lastModifiedDate":"2022-03-12"},{"lineNumber":179,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"The timer has already stopped.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":180,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":181,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":182,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":183,"author":{"gitId":"laiisaac"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"laiisaac":183}},{"path":"src/main/java/seedu/sherpass/util/TimerLogic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laiisaac"},"content":"package seedu.sherpass.util;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"laiisaac"},"content":"import seedu.sherpass.exception.InvalidTimeException;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.constant.Message.GOODBYE_MESSAGE_STUDY;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.util.Parser.parseStudyMode;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"laiisaac"},"content":"import static seedu.sherpass.util.Parser.parseTimerInput;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"laiisaac"},"content":"public class TimerLogic {","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"laiisaac"},"content":"    public static boolean isTimerRunning \u003d false;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"laiisaac"},"content":"    private static Ui ui;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"laiisaac"},"content":"    private static Timer timer;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"laiisaac"},"content":"     * Creates a constructor for TimerLogic.","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"laiisaac"},"content":"     * @param ui UI","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"laiisaac"},"content":"    public TimerLogic(Ui ui) {","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"laiisaac"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"laiisaac"},"content":"        timer \u003d new Timer(ui);","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"laiisaac"},"content":"     * Method is called when user chooses to enter Study mode. User is able to start, pause and stop a timer in Study","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"laiisaac"},"content":"     * mode. Only one timer can be running at a time. User can leave Study mode by typing \"leave\".","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"laiisaac"},"content":"    public void enterStudyMode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"laiisaac"},"content":"        String userInput \u003d ui.readCommand();","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"laiisaac"},"content":"        while (!userInput.contains(\"leave\")) {","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"laiisaac"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"laiisaac"},"content":"            parseStudyMode(userInput, ui, timer);","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"laiisaac"},"content":"            ui.showLine();","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"laiisaac"},"content":"            userInput \u003d ui.readCommand();","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"laiisaac"},"content":"            if (userInput.contains(\"leave\")) {","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"laiisaac"},"content":"                leaveStudyMode();","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"laiisaac"},"content":"                return;","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"laiisaac"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"laiisaac"},"content":"            if (userInput.contains(\"start\") \u0026\u0026 !isTimerRunning) {","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"laiisaac"},"content":"                timer \u003d resetTimer();","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"laiisaac"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"laiisaac"},"content":"     * Creates a thread using timer.start() to start the timer with the user\u0027s specified duration.","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"laiisaac"},"content":"     * @param parsedInput Parsed input of the user","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"laiisaac"},"content":"    public static void startTimer(String[] parsedInput) throws InvalidTimeException {","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"laiisaac"},"content":"        if (timer.getHasTimeLeft()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"You already have a timer running!\");","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"laiisaac"},"content":"            return;","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"laiisaac"},"content":"        int duration \u003d parseTimerInput(parsedInput, ui);","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"laiisaac"},"content":"        if (isValidDuration(duration)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"laiisaac"},"content":"            timer.setDuration(duration);","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"laiisaac"},"content":"            timer.start();","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"laiisaac"},"content":"        } else {","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"laiisaac"},"content":"            throw new InvalidTimeException();","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"laiisaac"},"content":"    private static boolean isValidDuration(int duration) {","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"laiisaac"},"content":"        if (duration \u003e 0) {","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"laiisaac"},"content":"            return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"laiisaac"},"content":"        return false;","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"laiisaac"},"content":"    public static void pauseTimer() {","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"laiisaac"},"content":"        if (timer.isTimerPaused()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"The timer is already paused!\");","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"laiisaac"},"content":"        } else if (!timer.getHasTimeLeft()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"The timer has already finished!\");","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"laiisaac"},"content":"        } else {","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"laiisaac"},"content":"            timer.pauseTimer();","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"laiisaac"},"content":"    public static void resumeTimer() {","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"laiisaac"},"content":"        if (timer.isTimerPaused() \u0026\u0026 timer.getHasTimeLeft()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"laiisaac"},"content":"            timer.resumeTimer();","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"laiisaac"},"content":"        } else if (isTimerRunning) {","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"There is no timer running currently!\");","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"laiisaac"},"content":"        } else {","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"laiisaac"},"content":"            ui.showToUser(\"The timer is still running!\");","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"laiisaac"},"content":"    public static void stopTimer() {","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"laiisaac"},"content":"        timer.stopTimer();","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"laiisaac"},"content":"    private void leaveStudyMode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"laiisaac"},"content":"        if (isTimerRunning) {","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"laiisaac"},"content":"            timer.stopTimer();","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"laiisaac"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"laiisaac"},"content":"        ui.showLine();","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"laiisaac"},"content":"        ui.showToUser(GOODBYE_MESSAGE_STUDY);","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"laiisaac"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"laiisaac"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"laiisaac"},"content":"     * Resets the timer by creating a new timer object, which can then be started by the user.","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"laiisaac"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"laiisaac"},"content":"     * @return New timer object","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"laiisaac"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"laiisaac"},"content":"    private Timer resetTimer() {","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"laiisaac"},"content":"        return new Timer(ui);","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"laiisaac"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"laiisaac"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"laiisaac":111}},{"path":"src/main/java/seedu/sherpass/util/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass.util;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"jltha"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.GOODBYE_MESSAGE;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.WELCOME_MESSAGE_ONE;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"import static seedu.sherpass.constant.Message.WELCOME_MESSAGE_TWO;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"jltha"},"content":"public class Ui {","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"jltha"},"content":"    private static final Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"jltha"},"content":"    private static final String PARTITION_LINE \u003d \"______________________________\"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"jltha"},"content":"            + \"______________________________\";","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jltha"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"jltha"},"content":"    private static final String ANSI_BRIGHT_BLUE \u003d \"\\u001B[94m\";","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"jltha"},"content":"    private static final String ANSI_BRIGHT_CYAN \u003d \"\\u001B[96m\";","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"jltha"},"content":"    public static final String ANSI_RESET \u003d \"\\u001B[0m\";","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"jltha"},"content":"    private static final String LOGO \u003d ANSI_BRIGHT_BLUE","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"jltha"},"content":"            + \"  ____  _\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"jltha"},"content":"            + \" / ___|| |__   ___ _ __ \"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"jltha"},"content":"            + ANSI_BRIGHT_CYAN + \"_ __   __ _ ___ ___\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"jltha"},"content":"            + ANSI_BRIGHT_BLUE + \" \\\\___ \\\\| \u0027_ \\\\ / _ \\\\ \u0027__| \"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"jltha"},"content":"            + ANSI_BRIGHT_CYAN  + \"\u0027_ \\\\ / _` / __/ __|\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"jltha"},"content":"            + ANSI_BRIGHT_BLUE + \"  ___) | | | |  __/ |  \"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"jltha"},"content":"            + ANSI_BRIGHT_CYAN + \"| |_) | (_| \\\\__ \\\\__ \\\\\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"jltha"},"content":"            + ANSI_BRIGHT_BLUE + \" |____/|_| |_|\\\\___|_|  \"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"jltha"},"content":"            + ANSI_BRIGHT_CYAN + \"| .__/ \\\\__,_|___/___/\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"jltha"},"content":"            + ANSI_BRIGHT_BLUE + \"                       \"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"jltha"},"content":"            + ANSI_BRIGHT_CYAN + \"|_|\" + ANSI_RESET;","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"jltha"},"content":"     * Returns any user input entered by the user through","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jltha"},"content":"     * the program\u0027s terminal. User Input is also trimmed to","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"jltha"},"content":"     * remove white spaces.","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"jltha"},"content":"     * @return User input","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"jltha"},"content":"    public String readCommand() {","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"jltha"},"content":"        return in.nextLine().trim();","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"jltha"},"content":"     * Prints a partition line.","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"jltha"},"content":"    public void showLine() {","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"jltha"},"content":"        System.out.println(PARTITION_LINE);","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"jltha"},"content":"     * Prints a message from the program to the user.","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"jltha"},"content":"     * Can be in the form of exceptions that have occurred,","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"jltha"},"content":"     * requests for inputs, command acknowledgement and so on.","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"jltha"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"jltha"},"content":"     * @param message Message to show to the user.","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"jltha"},"content":"    public void showToUser(String... message) {","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"jltha"},"content":"        for (String s : message) {","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"jltha"},"content":"            System.out.println(s);","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"jltha"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"jltha"},"content":"     * Prints a welcome message to greet the user.","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"jltha"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"jltha"},"content":"        String message \u003d PARTITION_LINE + LS + WELCOME_MESSAGE_ONE","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"jltha"},"content":"                + LOGO + LS + WELCOME_MESSAGE_TWO + LS + PARTITION_LINE;","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"jltha"},"content":"        showToUser(message);","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"jltha"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"jltha"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"jltha"},"content":"     * Prints a goodbye message to the user.","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"jltha"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"jltha"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"jltha"},"content":"        System.out.println(GOODBYE_MESSAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"jltha"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"jltha"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"jltha":79}},{"path":"src/test/java/seedu/sherpass/MainTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jltha"},"content":"package seedu.sherpass;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"jltha"},"content":"class MainTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"jltha":2,"-":10}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@echo off","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"setlocal enableextensions","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"pushd %~dp0","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"call gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"cd build\\libs","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"thedarie"},"content":"if exist data/sherpass.txt del data/sherpass.txt","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"for /f \"tokens\u003d*\" %%a in (","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u0027dir /b *.jar\u0027","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":") do (","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    set jarloc\u003d%%a","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"cd ..\\..\\text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"thedarie":1,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"thedarie"},"content":"rm -f build/libs/data/sherpass.txt 2\u003e/dev/null","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"diff EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"thedarie":1,"-":23}}]
