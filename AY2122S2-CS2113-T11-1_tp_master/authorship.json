[{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Siew Yang Zhi | [Github](https://github.com/siewyangzhi) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ong Siying Falicia | [Github](https://github.com/FaliciaOng) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Zeng Xunyi | [Github](https://github.com/XunyiiZ) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"![](/Users/aimanimtiaz/Documents/photo_2021-06-08_00-11-45.jpg) | Aiman Imtiaz | [Github](https://github.com/aiman-imtiaz) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Alina Zheng | [Github](https://github.com/zhenster) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"zhenster":1,"aiman-imtiaz":6,"-":4}},{"path":"docs/team/aimanimtiaz.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"# Aiman Imtiaz - Project Portfolio Page","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"## Overview","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"Responsible for assigning available staff to rooms.","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"### Summary of Contributions","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"aiman-imtiaz":7}},{"path":"src/main/java/seedu/duke/AddAvailabilityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":" * Identifies the name and availability of the housekeeper and update availability into the","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":" * housekeeper list.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"public class AddAvailabilityCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"    private String name;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    private String availability;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"    private static final String AVAILABILITY_INDICATE \u003d \"@\";","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    private static final int ONLY_ONE_FIELD_ENTERED \u003d 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"    public AddAvailabilityCommand(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"        if (commandStringWithoutCommand.isEmpty()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidAvailabilityException();","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"        String[] input \u003d extractInput(commandStringWithoutCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"        String name \u003d input[0].trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"        if (input.length \u003d\u003d ONLY_ONE_FIELD_ENTERED) {","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidAvailabilityException();","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"        String availability \u003d input[1].trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"        if (availability.isEmpty()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidAvailabilityException();","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"        setName(name);","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"        setAvailability(availability);","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"     * Method used to extract the name and availability of the housekeeper.","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"     * @param commandStringWithoutCommand Input entered by the user.","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"     * @return Input consisting of housekeeper name and availability.","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"     * @throws HotelLiteManagerException When description of availability is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"    private String[] extractInput(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"        boolean isSymbolIncorrect \u003d !commandStringWithoutCommand.contains(AVAILABILITY_INDICATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"        if (isSymbolIncorrect) {","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidAvailabilityException();","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"        String[] input \u003d commandStringWithoutCommand.split(AVAILABILITY_INDICATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"        return input;","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"    public String getName() {","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"        return name;","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"FaliciaOng"},"content":"    public void setName(String name) {","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"FaliciaOng"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"FaliciaOng"},"content":"    public String getAvailability() {","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"FaliciaOng"},"content":"        return availability;","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"FaliciaOng"},"content":"    public void setAvailability(String availability) {","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"FaliciaOng"},"content":"        this.availability \u003d availability;","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"FaliciaOng"},"content":"     * Get the Name of the housekeeper and verify that housekeeper is in records. If in records, add","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"FaliciaOng"},"content":"     * his/her availability into housekeeper list.","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"FaliciaOng"},"content":"     * @param housekeeperList  The list of housekeeper recorded.","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"FaliciaOng"},"content":"     * @param satisfactionList The given list of Satisfaction objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"FaliciaOng"},"content":"     * @param roomList         The given list of Room objects. N/A for this class, but","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"FaliciaOng"},"content":"     *                         must be included for the execution override.","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"FaliciaOng"},"content":"     * @param listOfItems      The given list of Item objects. N/A for this class, but","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"FaliciaOng"},"content":"     *                         must be included for the execution override.","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"FaliciaOng"},"content":"     * @param ui               The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"aiman-imtiaz"},"content":"    public void execute(HousekeeperList housekeeperList, SatisfactionList satisfactionList,","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"aiman-imtiaz"},"content":"                        AssignmentMap assignmentMap, RoomList roomList,","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"aiman-imtiaz"},"content":"                        ItemList listOfItems, Ui ui) throws UserExistException {","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"FaliciaOng"},"content":"        String availability \u003d getAvailability();","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"FaliciaOng"},"content":"        String name \u003d getName();","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"FaliciaOng"},"content":"        ui.printMessage(\"Added \" + name + \" availability into records\");","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.searchAvailability(name, availability);","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"aiman-imtiaz":3,"FaliciaOng":80}},{"path":"src/main/java/seedu/duke/AddHousekeeperCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":" * Extract name and age of housekeeper from user input and record it into the housekeeper list.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"public class AddHousekeeperCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"    private Housekeeper housekeeper;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"    private static final String AGE_INDICATE \u003d \"~\";","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"     * Creates a new housekeeper profile consisting of their name and age which would be recorded","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"     * into housekeeper list.","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"     * @param commandStringWithoutCommand Input of age and name given by user.","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"     * @throws HotelLiteManagerException When user input an empty data.","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"    public AddHousekeeperCommand(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"        if (commandStringWithoutCommand.isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidHousekeeperProfile();","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeper \u003d extractDetails(commandStringWithoutCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"        setHousekeeper(housekeeper);","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"     * Extract name and age details of the housekeeper.","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"     * @param commandStringWithoutCommand Input given by user.","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"     * @return housekeeper profile.","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"     * @throws InvalidAgeException       Age enter is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"     * @throws InvalidHousekeeperProfile Command enter regarding the housekeeper profile is wrong.","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"    private Housekeeper extractDetails(String commandStringWithoutCommand)","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"            throws InvalidAgeException, InvalidHousekeeperProfile {","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"        int ageNumber;","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"        boolean isSymbolIncorrect \u003d !commandStringWithoutCommand.contains(AGE_INDICATE);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"        if (isSymbolIncorrect) {","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidHousekeeperProfile();","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"        String[] input \u003d commandStringWithoutCommand.split(AGE_INDICATE);","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"        String name \u003d input[0].trim();","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"            String age \u003d input[1].trim();","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"            ageNumber \u003d Integer.parseInt(age);","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidAgeException();","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"FaliciaOng"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidAgeException();","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"FaliciaOng"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidAgeException();","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeper \u003d new Housekeeper(name, ageNumber);","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"FaliciaOng"},"content":"        return housekeeper;","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"    public Housekeeper getHousekeeper() {","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"FaliciaOng"},"content":"        return housekeeper;","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"FaliciaOng"},"content":"    public void setHousekeeper(Housekeeper housekeeper) {","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"FaliciaOng"},"content":"        this.housekeeper \u003d housekeeper;","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"FaliciaOng"},"content":"     * Method to add new housekeeper profile into list and rejects any profile that has already been recorded.","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"FaliciaOng"},"content":"     * @param housekeeperList  The list of housekeeper recorded.","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"FaliciaOng"},"content":"     * @param satisfactionList The given list of Satisfaction objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"FaliciaOng"},"content":"     * @param roomList         The given list of Room objects. N/A for this class, but","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"FaliciaOng"},"content":"     *                         must be included for the execution override.","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"FaliciaOng"},"content":"     * @param listOfItems      The given list of Item objects. N/A for this class, but","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"FaliciaOng"},"content":"     *                         must be included for the execution override.","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"FaliciaOng"},"content":"     * @param ui               The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"aiman-imtiaz"},"content":"    public void execute(HousekeeperList housekeeperList, SatisfactionList satisfactionList,","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"aiman-imtiaz"},"content":"                        AssignmentMap assignmentMap, RoomList roomList,","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"aiman-imtiaz"},"content":"                        ItemList listOfItems, Ui ui) throws InvalidUserException {","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"FaliciaOng"},"content":"        boolean isRecorded \u003d housekeeperList.hasNameAdded(getHousekeeper().getName());","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"FaliciaOng"},"content":"        if (!isRecorded) {","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"FaliciaOng"},"content":"            housekeeperList.addHousekeeper(getHousekeeper());","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"FaliciaOng"},"content":"            ui.printHousekeeperNoted(housekeeper);","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"FaliciaOng"},"content":"        } else {","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new InvalidUserException();","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"aiman-imtiaz":4,"FaliciaOng":85}},{"path":"src/main/java/seedu/duke/AddItemCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":" * Represents a command to add a new item to the item list. An AddItemCommand object consists of the name of the item","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":" * to add as well as its pax.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"public class AddItemCommand extends Command {","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ITEM_NAME_INDICATOR \u003d \"/Name:\";","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"    private static final int ITEM_NAME_INDICATOR_LENGTH \u003d 6;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ITEM_PAX_INDICATOR \u003d \"/Pax:\";","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    private static final int ITEM_PAX_INDICATOR_LENGTH \u003d 5;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"    private Item item;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"     * Takes in the user input and checks if the formatting of the Add Item Command within the user input is","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"     * valid.","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"     * Extracts out the item name and item pax from the user input and creates an AddItemCommand object.","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if the formatting of the add item pax command is invalid, the item pax is","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"     *                                   empty or invalid, the item name is empty, or the item name and pax are both","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"     *                                   empty.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"    public AddItemCommand(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"        boolean isValidAddItemCommand \u003d userInput.contains(ITEM_NAME_INDICATOR)","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"                \u0026\u0026 userInput.contains(ITEM_PAX_INDICATOR);","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"        if (!isValidAddItemCommand) {","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"        int itemPax \u003d extractItemPax(userInput);","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"        String itemName \u003d extractItemName(userInput);","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d new Item(itemName, itemPax);","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"        setItem(item);","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"     * Returns the item name extracted from the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"     * @return The item name within the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if item name is empty.","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"    private String extractItemName(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"siewyangzhi"},"content":"        int itemNameStartingPosition \u003d userInput.indexOf(ITEM_NAME_INDICATOR) + ITEM_NAME_INDICATOR_LENGTH;","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"siewyangzhi"},"content":"        int itemPaxIndicatorPosition \u003d userInput.indexOf(ITEM_PAX_INDICATOR);","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"siewyangzhi"},"content":"        String itemName \u003d userInput.substring(itemNameStartingPosition, itemPaxIndicatorPosition);","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"        itemName \u003d itemName.trim();","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"        if (itemName.isEmpty()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"            throw new EmptyItemNameException();","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"siewyangzhi"},"content":"        return itemName;","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"siewyangzhi"},"content":"     * Returns the item pax extracted from the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"siewyangzhi"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"siewyangzhi"},"content":"     * @return The item pax within the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if item pax is empty or invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"siewyangzhi"},"content":"    private int extractItemPax(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"siewyangzhi"},"content":"        int itemPax;","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"siewyangzhi"},"content":"        String itemPaxStringVersion;","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"siewyangzhi"},"content":"        int stringEndingPosition \u003d userInput.length();","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"siewyangzhi"},"content":"        int itemPaxStartingPosition \u003d userInput.indexOf(ITEM_PAX_INDICATOR) + ITEM_PAX_INDICATOR_LENGTH;","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"siewyangzhi"},"content":"        if (itemPaxStartingPosition \u003d\u003d stringEndingPosition) {","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"siewyangzhi"},"content":"            throw new EmptyItemPaxException();","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"siewyangzhi"},"content":"        itemPaxStringVersion \u003d userInput.substring(itemPaxStartingPosition);","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"siewyangzhi"},"content":"        try {","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"siewyangzhi"},"content":"            itemPax \u003d Integer.parseInt(itemPaxStringVersion);","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"siewyangzhi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidItemPaxException();","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"siewyangzhi"},"content":"        if (itemPax \u003c\u003d 0) {","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidItemPaxException();","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"siewyangzhi"},"content":"        return itemPax;","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"siewyangzhi"},"content":"     * Adds a new item to the item list using the item name and pax found in the instance variable","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"siewyangzhi"},"content":"     * named item within the AddItemPaxCommand object.","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"siewyangzhi"},"content":"     * Returns an acknowledgement message to inform the user that the item has been added to the item list as well","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"siewyangzhi"},"content":"     * as the number of items within the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"siewyangzhi"},"content":"     * @param housekeeperList  The list of housekeeper recorded. N/A for this class, but","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"siewyangzhi"},"content":"     *                         must be included for the execution override.","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"siewyangzhi"},"content":"     * @param satisfactionList The given list of Satisfaction objects. N/A for this class, but","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"siewyangzhi"},"content":"     *                         must be included for the execution override.","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"siewyangzhi"},"content":"     * @param assignmentMap    The assignments of the various housekeepers.","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"siewyangzhi"},"content":"     * @param roomList         The given list of Room objects. N/A for this class, but","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"siewyangzhi"},"content":"     *                         must be included for the execution override.","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"siewyangzhi"},"content":"     * @param listOfItems      The list of items within the inventory.","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"siewyangzhi"},"content":"     * @param ui               The object that deals with user interface for the program.","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if the item name within the item object does not exist in the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"aiman-imtiaz"},"content":"    public void execute(HousekeeperList housekeeperList, SatisfactionList satisfactionList,","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"siewyangzhi"},"content":"                        AssignmentMap assignmentMap, RoomList roomList, ItemList listOfItems, Ui ui) throws","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"siewyangzhi"},"content":"            HotelLiteManagerException, WrongCommandException {","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d getItem();","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"siewyangzhi"},"content":"        listOfItems.addItemToList(item);","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"siewyangzhi"},"content":"        ui.printAddItemAcknowledgementMessage(listOfItems);","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"siewyangzhi"},"content":"    public Item getItem() {","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"siewyangzhi"},"content":"        return item;","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"siewyangzhi"},"content":"    public void setItem(Item item) {","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"siewyangzhi"},"content":"        this.item \u003d item;","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"aiman-imtiaz":1,"siewyangzhi":113}},{"path":"src/main/java/seedu/duke/AddSatisfactionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":" * Class that implements execution behavior for adding a Satisfaction","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":" * object (e.g. when user types \"Add Satisfaction [customerName] [satisfactionValue]\").","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" * Constructor creates the Satisfaction object from user input, and execute","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":" * method overrides the Command class\u0027s execute method to add the Satisfaction","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":" * object to the given satisfactionList (data structure that stores all the","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":" * Satisfaction objects).Each Satisfaction object corresponds to a customer and","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":" * a satisfaction rating from1 to 5 inclusive.","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"public class AddSatisfactionCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"    private Satisfaction satisfaction;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"     * Extracts the customer name and satisfaction value from user input,","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"     * uses these two values to create a corresponding Satisfaction object.","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"     * @param commandStringWithoutCommand The user input (should be of form \"[customerName] [satisfactionValue]\").","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"     * @throws HotelLiteManagerException If there is an error in user input (e.g. empty customer name, empty","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"     *                                   satisfaction value, or invalid satisfaction value).","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"    public AddSatisfactionCommand(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"        String customerName \u003d \"\";","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"        int satisfactionValue \u003d 0;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"            customerName \u003d extractCustomerName(commandStringWithoutCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"            satisfactionValue \u003d extractSatisfactionValue(commandStringWithoutCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"        } catch (EmptySatisfactionCustomerException e) {","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"            throw new EmptySatisfactionCustomerException();","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"        } catch (EmptySatisfactionValueException e) {","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"            throw new EmptySatisfactionValueException();","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"        } catch (InvalidSatisfactionValueException e) {","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"            throw new InvalidSatisfactionValueException();","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"        Satisfaction satisfaction \u003d new Satisfaction(customerName, satisfactionValue);","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"        setSatisfaction(satisfaction);","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"     * Helper method for AddSatisfactionCommand. Extracts the customer\u0027s name","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"     * from the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"     * @param userInput The user input (should be of form \"[customerName] [satisfactionValue]\").","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"     * @return The name of the customer (String).","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"     * @throws HotelLiteManagerException If there is an error in user input (the customer\u0027s name is empty).","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"    private String extractCustomerName(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"        String[] splitInput \u003d userInput.split(\" \");","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"        if (splitInput.length \u003d\u003d 0) {","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"            throw new EmptySatisfactionCustomerException();","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"zhenster"},"content":"        String customerName \u003d splitInput[0].trim();","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"zhenster"},"content":"        if (customerName.isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"zhenster"},"content":"            throw new EmptySatisfactionCustomerException();","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"zhenster"},"content":"        return customerName;","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"     * Helper method for AddSatisfactionCommand. Extracts the customer\u0027s satisfaction value","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"     * from user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"zhenster"},"content":"     * @param userInput The user input (should be of form \"[customerName] [satisfactionValue]\").","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"zhenster"},"content":"     * @return The customer\u0027s satisfaction value (should be an integer from 1-5 inclusive).","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"zhenster"},"content":"     * @throws HotelLiteManagerException If there is an error in user input (the satisfaction value is","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"zhenster"},"content":"     *                                   empty or is not an integer between 1 and 5).","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"zhenster"},"content":"    private int extractSatisfactionValue(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"zhenster"},"content":"        String[] splitInput \u003d userInput.split(\" \");","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"zhenster"},"content":"        if (splitInput.length \u003c 2) {","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"zhenster"},"content":"            throw new EmptySatisfactionValueException();","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"zhenster"},"content":"        String satisfactionString \u003d splitInput[1].trim();","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"zhenster"},"content":"        int satisfactionValue;","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"zhenster"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"zhenster"},"content":"            satisfactionValue \u003d Integer.parseInt(satisfactionString);","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"zhenster"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"zhenster"},"content":"            throw new InvalidSatisfactionValueException();","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"zhenster"},"content":"        if (satisfactionValue \u003c 1 || satisfactionValue \u003e 5) {","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"zhenster"},"content":"            throw new InvalidSatisfactionValueException();","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"zhenster"},"content":"        return satisfactionValue;","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"zhenster"},"content":"     * Override of execute command in Command class.","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"zhenster"},"content":"     * Adds the Satisfaction object created in the constructor","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"zhenster"},"content":"     * to the given list of Satisfaction objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"zhenster"},"content":"     * @param satisfactionList The given list of Satisfaction objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"zhenster"},"content":"     * @param roomList The given list of Room objects. N/A for this class, but","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"zhenster"},"content":"     *                 must be included for the execution override.","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"zhenster"},"content":"     * @param itemList The given list of Item objects. N/A for this class, but","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"zhenster"},"content":"     *                 must be included for the execution override.","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"zhenster"},"content":"     * @param ui The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"aiman-imtiaz"},"content":"    public void execute(HousekeeperList housekeeperList, SatisfactionList satisfactionList,","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"aiman-imtiaz"},"content":"                        AssignmentMap assignmentMap, RoomList roomList,","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"FaliciaOng"},"content":"                        ItemList listOfItems, Ui ui) throws HotelLiteManagerException, WrongCommandException {","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"zhenster"},"content":"        satisfactionList.addSatisfaction(satisfaction);","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"zhenster"},"content":"        ui.printAddSatisfactionAcknowledgementMessage(satisfactionList, satisfaction);","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"zhenster"},"content":"    public Satisfaction getSatisfaction() {","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"zhenster"},"content":"        return satisfaction;","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"zhenster"},"content":"    public void setSatisfaction(Satisfaction satisfaction) {","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"zhenster"},"content":"        this.satisfaction \u003d satisfaction;","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":110,"aiman-imtiaz":5,"FaliciaOng":1}},{"path":"src/main/java/seedu/duke/AssignHousekeeperCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":" * Identifies the name of the housekeeper and assign to room id","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":" * housekeeper list.","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"public class AssignHousekeeperCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"    private String name;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"    private String roomID;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final String ASSIGNMENT_INDICATE \u003d \"##\";","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final int ONLY_ONE_FIELD_ENTERED \u003d 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"    private static Logger logger \u003d Logger.getLogger(\"Assign Housekeeper\");","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"aiman-imtiaz"},"content":"    public AssignHousekeeperCommand(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"aiman-imtiaz"},"content":"        if (commandStringWithoutCommand.isEmpty()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new InvalidAvailabilityException();","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"aiman-imtiaz"},"content":"        String[] input \u003d extractInput(commandStringWithoutCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":"        String name \u003d input[0].trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"aiman-imtiaz"},"content":"        if (input.length \u003d\u003d ONLY_ONE_FIELD_ENTERED) {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new InvalidAvailabilityException();","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"        String id \u003d input[1].trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"aiman-imtiaz"},"content":"        if (id.isEmpty()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new InvalidAvailabilityException();","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"aiman-imtiaz"},"content":"        setName(name);","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"aiman-imtiaz"},"content":"        setRoomID(id);","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"aiman-imtiaz"},"content":"        logger.log(Level.INFO, \"Assign Command parsed\");","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"aiman-imtiaz"},"content":"     * Method used to extract the name and availability of the housekeeper.","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"aiman-imtiaz"},"content":"     * @param commandStringWithoutCommand Input entered by the user.","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"aiman-imtiaz"},"content":"     * @return Input consisting of housekeeper name and availability.","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"aiman-imtiaz"},"content":"     * @throws HotelLiteManagerException When description of availability is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"aiman-imtiaz"},"content":"    private String[] extractInput(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"aiman-imtiaz"},"content":"        boolean isSymbolIncorrect \u003d !commandStringWithoutCommand.contains(ASSIGNMENT_INDICATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"aiman-imtiaz"},"content":"        if (isSymbolIncorrect) {","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new InvalidAvailabilityException();","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"aiman-imtiaz"},"content":"        String[] input \u003d commandStringWithoutCommand.split(ASSIGNMENT_INDICATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"aiman-imtiaz"},"content":"        return input;","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"aiman-imtiaz"},"content":"    public String getName() {","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"aiman-imtiaz"},"content":"        return name;","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"aiman-imtiaz"},"content":"    public void setName(String name) {","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"aiman-imtiaz"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"aiman-imtiaz"},"content":"    public String getroomID() {","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"aiman-imtiaz"},"content":"        return roomID;","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"aiman-imtiaz"},"content":"    public void setRoomID(String roomID) {","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"aiman-imtiaz"},"content":"        this.roomID \u003d roomID;","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"aiman-imtiaz"},"content":"     * Get the Name of the housekeeper and verify that housekeeper is in records. If in records, add","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"aiman-imtiaz"},"content":"     * his/her availability into housekeeper list.","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"aiman-imtiaz"},"content":"     * @param housekeeperList  The list of housekeeper recorded.","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"aiman-imtiaz"},"content":"     * @param satisfactionList The given list of Satisfaction objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"aiman-imtiaz"},"content":"     * @param roomList         The given list of Room objects. N/A for this class, but","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"aiman-imtiaz"},"content":"     *                         must be included for the execution override.","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"aiman-imtiaz"},"content":"     * @param listOfItems      The given list of Item objects. N/A for this class, but","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"aiman-imtiaz"},"content":"     *                         must be included for the execution override.","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"aiman-imtiaz"},"content":"     * @param ui               The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"aiman-imtiaz"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"aiman-imtiaz"},"content":"    public void execute(HousekeeperList housekeeperList, SatisfactionList satisfactionList,","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"aiman-imtiaz"},"content":"                        AssignmentMap assignmentMap, RoomList roomList,","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"aiman-imtiaz"},"content":"                        ItemList listOfItems, Ui ui)","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"aiman-imtiaz"},"content":"            throws InvalidRoomNumberException, InvalidHousekeeperProfile {","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"aiman-imtiaz"},"content":"        String roomID \u003d getroomID();","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"aiman-imtiaz"},"content":"        String name \u003d getName();","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"aiman-imtiaz"},"content":"        ui.printMessage(\"Assigned \" + name + \" to room#\" + roomID + \".\");","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"aiman-imtiaz"},"content":"        assignmentMap.addAssignment(name, roomID, housekeeperList, roomList);","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"aiman-imtiaz"},"content":"        logger.log(Level.INFO, \"end of processing\");","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"aiman-imtiaz":90}},{"path":"src/main/java/seedu/duke/AssignmentMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"public class AssignmentMap {","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"    Map\u003cRoom, Housekeeper\u003e map \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"            new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"    public void addAssignment(String name, String roomID,","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"                              HousekeeperList housekeeperList, RoomList roomList)","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"            throws InvalidHousekeeperProfile, InvalidRoomNumberException {","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"aiman-imtiaz"},"content":"        Room room;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"aiman-imtiaz"},"content":"        Housekeeper housekeeper;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"aiman-imtiaz"},"content":"        for (Room r : roomList.getRoomList()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"aiman-imtiaz"},"content":"            if (r.getRoomId() \u003d\u003d Integer.parseInt(roomID)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"aiman-imtiaz"},"content":"                room \u003d r;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"aiman-imtiaz"},"content":"                for (Housekeeper h : housekeeperList.getHousekeeperList()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"aiman-imtiaz"},"content":"                    if (h.getName().equalsIgnoreCase(name)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"aiman-imtiaz"},"content":"                        housekeeper \u003d h;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":"                        map.put(room, housekeeper);","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"aiman-imtiaz"},"content":"                        return;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"                    }","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"                }","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"                throw new InvalidHousekeeperProfile();","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"aiman-imtiaz"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"aiman-imtiaz"},"content":"        throw new InvalidRoomNumberException();","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"aiman-imtiaz":31}},{"path":"src/main/java/seedu/duke/CheckAllRoomCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":" * Class that implements execution behavior for listing all room.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":" * information with its type, room id, level and vacancy status.","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"public class CheckAllRoomCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"    private RoomList roomList;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    private static String TABLE_HEAD \u003d \"Type\\t\\tRoom Id\\t\\tlevel\\t\\tStatus\";","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"    public CheckAllRoomCommand() {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"     * Override of execute command in Command class.","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"     * Print out all room information including:","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"     * type, room number, level and status.","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"     * @param satisfactionList The given list of Satisfaction objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"     * @param roomList The given list of Room objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"     * @param itemList The given list of Item objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"     * @param ui The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"    public void execute(HousekeeperList housekeeperList, SatisfactionList satisfactionList,","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"                        AssignmentMap assignmentMap, RoomList roomList,","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"                        ItemList itemList, Ui ui) {","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"        this.roomList \u003d new RoomList();","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"        System.out.println(TABLE_HEAD);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"        for (Room room : roomList.getRoomList()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"            System.out.println(room.toString());","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":18,"aiman-imtiaz":2,"FaliciaOng":1,"XunyiiZ":14}},{"path":"src/main/java/seedu/duke/CheckInCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":" * Class that checks in a room and changes the status","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":" * of the room to be occupied.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"public class CheckInCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"    RoomList roomList;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    int roomId;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"     * Override of execute command in Command class.","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"     * Check in room with corresponding room number.","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"     * The room status will be changed to occupied.","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"     * After check in, it will print out corresponding room information.","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"     * @param satisfactionList The given list of Satisfaction objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"     * @param roomList The given list of Room objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"     * @param itemList The given list of Item objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"     * @param ui The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"     * @throws InvalidRoomNumberException if the room number is not in the room list.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"    public void execute(HousekeeperList housekeeperList, SatisfactionList satisfactionList,","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"                        AssignmentMap assignmentMap, RoomList list,","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"                        ItemList itemList, Ui ui) throws InvalidRoomNumberException {","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"        this.roomList \u003d list;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"        for (Room room : list.getRoomList()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"            if (room.getRoomId() \u003d\u003d roomId) {","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"                room.checkIn();","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"                System.out.println(room);","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"                return;","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"        throw new InvalidRoomNumberException();","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"XunyiiZ"},"content":"     * Constructor that initializes the roomId.","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"XunyiiZ"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"XunyiiZ"},"content":"     * @param command contains the roomId.","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"    public CheckInCommand(String command) {","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"        roomId \u003d Integer.parseInt(command.trim());","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":24,"aiman-imtiaz":2,"FaliciaOng":1,"XunyiiZ":21}},{"path":"src/main/java/seedu/duke/CheckOutCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":" * Class that checks out a room with corresponding room number","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":" * and changes its status to be vacant.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"public class CheckOutCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"    RoomList roomList;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"    int roomId;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"     * Override of execute command in Command class.","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"     * Check out room with corresponding room number.","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"     * The room status will be changed to vacant","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"     * After check in, it will print out corresponding room information.","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"     * @param satisfactionList The given list of Satisfaction objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"     * @param roomList The given list of Room objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"     * @param itemList The given list of Item objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"     * @param ui The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"     * @throws InvalidRoomNumberException if the room number is not in the room list.","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"aiman-imtiaz"},"content":"    public void execute(HousekeeperList housekeeperList, SatisfactionList satisfactionList,","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"                        AssignmentMap assignmentMap, RoomList list,","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"                        ItemList itemList, Ui ui) throws InvalidRoomNumberException {","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"        this.roomList \u003d list;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"        for (Room room : list.getRoomList()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"            if (room.getRoomId() \u003d\u003d roomId) {","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"                room.checkOut();","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"                // haven\u0027t implement ui","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"                System.out.println(\"Finished!\");","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"                System.out.println(room);","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"                return;","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"        throw new InvalidRoomNumberException();","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"XunyiiZ"},"content":"     * Constructor that initializes the roomId.","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"XunyiiZ"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"XunyiiZ"},"content":"     * @param command contains the roomId.","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"    public CheckOutCommand(String command) {","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"        roomId \u003d Integer.parseInt(command.trim());","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":24,"aiman-imtiaz":2,"FaliciaOng":1,"XunyiiZ":20}},{"path":"src/main/java/seedu/duke/CheckRoomByCatCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":" * Class that implements execution behavior for listing the information","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":" * of all rooms with corresponding category.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":" * Information contains its type, room id, level and vacancy status","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"public class CheckRoomByCatCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"    private RoomType type;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    private static String TABLE_HEAD \u003d \"Type\\t\\tRoom Id\\t\\tlevel\\t\\tStatus\";","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"     * Extracts the room type from user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"     * @param commandStringWithoutCommand contains the information of the room type.","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"     * @throws InvalidCategoryException If the category is not valid.","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"    public CheckRoomByCatCommand(String commandStringWithoutCommand) throws InvalidCategoryException {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"        switch (commandStringWithoutCommand.trim()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"        case \"single\":","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"            type \u003d RoomType.Single;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"            break;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"        case \"double\":","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"            type \u003d RoomType.Double;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"            break;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"        case \"triple\":","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"            type \u003d RoomType.Triple;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"            break;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"        case \"queen\":","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"            type \u003d RoomType.Queen;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"            break;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"        case \"twin\":","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"            type \u003d RoomType.Twin;","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"            break;","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"        case \"king\":","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"            type \u003d RoomType.King;","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"            break;","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"        default:  // throw !!!!!!!","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"            throw new InvalidCategoryException();","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"XunyiiZ"},"content":"     * Override of execute command in Command class.","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"XunyiiZ"},"content":"     * Print out all room information with corresponding room type","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"XunyiiZ"},"content":"     * including the information of:","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"XunyiiZ"},"content":"     * type, room number, level and status.","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"XunyiiZ"},"content":"     * @param satisfactionList The given list of Satisfaction objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"XunyiiZ"},"content":"     * @param roomList The given list of Room objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"XunyiiZ"},"content":"     * @param itemList The given list of Item objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"XunyiiZ"},"content":"     * @param ui The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"aiman-imtiaz"},"content":"    public void execute(HousekeeperList housekeeperList, SatisfactionList satisfactionList,","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"aiman-imtiaz"},"content":"                        AssignmentMap assignmentMap, RoomList roomList,","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"                        ItemList itemList, Ui ui) {","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"zhenster"},"content":"        System.out.println(TABLE_HEAD);","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"zhenster"},"content":"        for (Room room : roomList.getRoomList()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"zhenster"},"content":"            if (room.getType() \u003d\u003d type) {","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"zhenster"},"content":"                System.out.println(room);","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":42,"aiman-imtiaz":2,"FaliciaOng":1,"XunyiiZ":21}},{"path":"src/main/java/seedu/duke/CheckRoomByLevelCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":" * Class that implements execution behavior for listing the information","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":" * of all rooms with corresponding category.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":" * Information contains its type, room id, level and vacancy status","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"public class CheckRoomByLevelCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"    private int level;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    private static String TABLE_HEAD \u003d \"Type\\t\\tRoom Id\\t\\tlevel\\t\\tStatus\";","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"     * Extracts the room level from user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"     * @param commandStringWithoutCommand contains the information of the level.","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"    public CheckRoomByLevelCommand(String commandStringWithoutCommand) {","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"        level \u003d Integer.parseInt(commandStringWithoutCommand.trim());","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"     * Override of execute command in Command class.","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"     * Print out all room information with corresponding level","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"     * including the information of:","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"     * type, room number, level and status.","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"     * @param satisfactionList The given list of Satisfaction objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"     * @param roomList The given list of Room objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"     * @param itemList The given list of Item objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"     * @param ui The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"XunyiiZ"},"content":"     * @throws InvalidLevelException if the level is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"aiman-imtiaz"},"content":"    public void execute(HousekeeperList housekeeperList, SatisfactionList satisfactionList,","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"aiman-imtiaz"},"content":"                        AssignmentMap assignmentMap, RoomList roomList,","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"                        ItemList itemList, Ui ui)","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"            throws InvalidLevelException {","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"        boolean isValidLevel \u003d false;","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"        for (Room room : roomList.getRoomList()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"            if (room.getLevel() \u003d\u003d level) {","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"                isValidLevel \u003d true;","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"                break;","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"        if (!isValidLevel) {","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"            throw new InvalidLevelException();","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"        System.out.println(TABLE_HEAD);","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"        for (Room room : roomList.getRoomList()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"            if (room.getLevel() \u003d\u003d level) {","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"                System.out.println(room);","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":31,"aiman-imtiaz":2,"FaliciaOng":1,"XunyiiZ":22}},{"path":"src/main/java/seedu/duke/CheckRoomCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":" * Class that implements execution behavior to list room with corresponding","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":" * room number.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":" * The information includes its type, room id, level and vacancy status.","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"public class CheckRoomCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"    private int roomId;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"     * Extracts the room level from user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"     * @param commandStringWithoutCommand contains the information of room number.","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"    public CheckRoomCommand(String commandStringWithoutCommand) {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"        roomId \u003d Integer.parseInt(commandStringWithoutCommand.trim());","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"     * Override of execute command in Command class.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"     * Print out the room information with corresponding room number","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"     * including information of:","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"     * type, room number, level and status.","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"     * @param satisfactionList The given list of Satisfaction objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"     * @param roomList The given list of Room objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"     * @param itemList The given list of Item objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"     * @param ui The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"aiman-imtiaz"},"content":"    public void execute(HousekeeperList housekeeperList, SatisfactionList satisfactionList,","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"aiman-imtiaz"},"content":"                        AssignmentMap assignmentMap, RoomList roomList,","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"XunyiiZ"},"content":"                        ItemList itemList, Ui ui) throws InvalidRoomNumberException {","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"        for (Room room : roomList.getRoomList()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"            if (room.getRoomId() \u003d\u003d roomId) {","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"                System.out.println(room);","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"                return;","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"XunyiiZ"},"content":"        throw new InvalidRoomNumberException();","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":19,"aiman-imtiaz":2,"XunyiiZ":22}},{"path":"src/main/java/seedu/duke/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":" * Abstract class that generalizes all Commands.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":" * Contains an abstract \"execute\" method and keeps track of","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" * whether the program should exit.","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"public abstract class Command {","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"    protected boolean isExit;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"    protected Command() {","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"     * Abstract execute command that all Command classes should","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"     * override based on their specific behavior.","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"     * @param housekeeperList The list of Housekeeper objects to execute the command on.","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"     * @param satisfactionList The list of Satisfaction objects to execute the command on.","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"     * @param roomList The list of Room objects to execute the command on.","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"     * @param listOfItems The list of Item objects to execute the command on.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"     * @param ui The instance of the Ui class (used for printing additional messages when a command is executed.","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"     * @throws HotelLiteManagerException If there is any error with user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"     * @throws WrongCommandException If the command is not recognized.","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"aiman-imtiaz"},"content":"    public abstract void execute(HousekeeperList housekeeperList, SatisfactionList satisfactionList,","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"aiman-imtiaz"},"content":"                                 AssignmentMap assignmentMap, RoomList roomList,","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"                                 ItemList listOfItems, Ui ui) throws HotelLiteManagerException, WrongCommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"        return this.isExit;","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"zhenster":20,"aiman-imtiaz":2,"FaliciaOng":14}},{"path":"src/main/java/seedu/duke/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":" * Class that implements behavior of parsing user input and linking","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":" * that user input to a Command class.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"public class CommandParser {","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"    private static final String BYE \u003d \"bye\";","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ADD_ITEM_COMMAND \u003d \"Add Item\";","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"    private static final String VIEW_ITEM_LIST_COMMAND \u003d \"View Item In Inventory\";","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ADD_HOUSEKEEPER_COMMAND \u003d \"Add Housekeeper \";","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ADD_AVAILABILITY_COMMAND \u003d \"Availability \";","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"    public static final String ADD_SATISFACTION_COMMAND \u003d \"Add Satisfaction\";","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"    public static final String VIEW_SATISFACTIONS_COMMAND \u003d \"View Satisfactions\";","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"    private static final String CHECK_IN \u003d \"check in\";","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"    private static final String CHECK_OUT \u003d \"check out\";","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"    private static final String CHECK_ROOM \u003d \"check room\";","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"    private static final String CHECK_ALL_ROOM \u003d \"check all room\";","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"    private static final String CHECK_ROOM_BY_LEVEL \u003d \"check level room\";","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"    private static final String CHECK_BY_CATEGORY \u003d \"check category room\";","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"    private static final String UPDATE_ITEM_PAX_COMMAND \u003d \"Update Item Pax\";","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final String ASSIGN_HOUSEKEEPER \u003d \"Assign\";","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"    public static final String VIEW_HOUSEKEEPER_COMMAND \u003d \"View Recorded Housekeeper\";","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"     * Parses the user-provided command and creates the relevant Command object.","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"     * @param commandString User input to be parsed and turned into a Command object.","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"     * @return The relevant Command object created based on the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"     * @throws WrongCommandException If the user input cannot be recognized as a Command object.","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"     * @throws HotelLiteManagerException If there is an error in user input that prevents it from being parsed into","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"     *     the relevant Command object.","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"    public Command parse(String commandString) throws WrongCommandException, HotelLiteManagerException {","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"        Command userCommand \u003d null;","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"        String commandStringWithoutCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"        if (commandString.equals(BYE)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"            userCommand \u003d new ExitCommand();","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"        } else if (commandString.startsWith(ADD_SATISFACTION_COMMAND)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"            commandStringWithoutCommand \u003d commandString.replace(ADD_SATISFACTION_COMMAND, \"\").trim();","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"            userCommand \u003d new AddSatisfactionCommand(commandStringWithoutCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"        } else if (commandString.startsWith(VIEW_SATISFACTIONS_COMMAND)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"            userCommand \u003d new ViewSatisfactionsCommand();","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"siewyangzhi"},"content":"        } else if (commandString.startsWith(ADD_ITEM_COMMAND)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"            commandStringWithoutCommand \u003d commandString.replace(ADD_ITEM_COMMAND, \"\");","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new AddItemCommand(commandStringWithoutCommand);","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"        } else if (commandString.equals(VIEW_ITEM_LIST_COMMAND)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new ViewItemListCommand();","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"FaliciaOng"},"content":"        } else if (commandString.startsWith((ADD_HOUSEKEEPER_COMMAND))) {","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"FaliciaOng"},"content":"            commandStringWithoutCommand \u003d commandString.replace(ADD_HOUSEKEEPER_COMMAND, \"\");","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"FaliciaOng"},"content":"            userCommand \u003d new AddHousekeeperCommand(commandStringWithoutCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"        } else if (commandString.startsWith(CHECK_IN)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"zhenster"},"content":"            commandStringWithoutCommand \u003d commandString.replace(CHECK_IN, \"\");","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"zhenster"},"content":"            userCommand \u003d new CheckInCommand(commandStringWithoutCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"zhenster"},"content":"        } else if (commandString.startsWith(CHECK_OUT)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"zhenster"},"content":"            commandStringWithoutCommand \u003d commandString.replace(CHECK_OUT, \"\");","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"zhenster"},"content":"            userCommand \u003d new CheckOutCommand(commandStringWithoutCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"zhenster"},"content":"        } else if (commandString.startsWith(CHECK_BY_CATEGORY)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"zhenster"},"content":"            commandStringWithoutCommand \u003d commandString.replace(CHECK_BY_CATEGORY, \"\");","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"zhenster"},"content":"            userCommand \u003d new CheckRoomByCatCommand(commandStringWithoutCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"zhenster"},"content":"        } else if (commandString.startsWith(CHECK_ROOM)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"            commandStringWithoutCommand \u003d commandString.replace(CHECK_ROOM, \"\");","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"            userCommand \u003d new CheckRoomCommand(commandStringWithoutCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"zhenster"},"content":"        } else if (commandString.startsWith(CHECK_ALL_ROOM)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"zhenster"},"content":"            userCommand \u003d new CheckAllRoomCommand();","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"zhenster"},"content":"        } else if (commandString.startsWith(CHECK_ROOM_BY_LEVEL)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"zhenster"},"content":"            commandStringWithoutCommand \u003d commandString.replace(CHECK_ROOM_BY_LEVEL, \"\");","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"zhenster"},"content":"            userCommand \u003d new CheckRoomByLevelCommand(commandStringWithoutCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"siewyangzhi"},"content":"        } else if (commandString.startsWith(UPDATE_ITEM_PAX_COMMAND)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"siewyangzhi"},"content":"            commandStringWithoutCommand \u003d commandString.replace(UPDATE_ITEM_PAX_COMMAND, \"\");","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new UpdateItemPaxCommand(commandStringWithoutCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"FaliciaOng"},"content":"        } else if (commandString.startsWith(ADD_AVAILABILITY_COMMAND)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"FaliciaOng"},"content":"            commandStringWithoutCommand \u003d commandString.replace(ADD_AVAILABILITY_COMMAND, \"\");","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"FaliciaOng"},"content":"            userCommand \u003d new AddAvailabilityCommand(commandStringWithoutCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"FaliciaOng"},"content":"        } else if (commandString.contains((VIEW_HOUSEKEEPER_COMMAND))) {","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"FaliciaOng"},"content":"            userCommand \u003d new ViewHousekeeperListCommand();","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"aiman-imtiaz"},"content":"        } else if (commandString.startsWith(ASSIGN_HOUSEKEEPER)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"aiman-imtiaz"},"content":"            commandStringWithoutCommand \u003d commandString.replace(ASSIGN_HOUSEKEEPER, \"\");","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"aiman-imtiaz"},"content":"            userCommand \u003d new AssignHousekeeperCommand(commandStringWithoutCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"siewyangzhi"},"content":"        } else {","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"FaliciaOng"},"content":"            throw new WrongCommandException(\"Invalid Command\");","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"siewyangzhi"},"content":"        return userCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":51,"aiman-imtiaz":4,"FaliciaOng":19,"siewyangzhi":16}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"    SatisfactionList satisfactionList \u003d new SatisfactionList();","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"    HousekeeperList housekeeperList \u003d new HousekeeperList();","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"    AssignmentMap assignmentMap \u003d new AssignmentMap();","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    private void run() {","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"        CommandParser commandParser \u003d new CommandParser();","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"        ItemList listOfItems \u003d new ItemList();","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"        boolean shouldExitProgram \u003d false;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"        RoomList roomList \u003d new RoomList();","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"        String userInput;","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"        while (!shouldExitProgram) {","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"            try {","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"                userInput \u003d ui.readUserInput();","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"                Command command \u003d commandParser.parse(userInput);","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":"                command.execute(housekeeperList, satisfactionList, assignmentMap, roomList, listOfItems, ui);","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"                shouldExitProgram \u003d command.isExit();","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"            } catch (WrongCommandException error) {","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"                System.out.println(error.getMessage());","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"            } catch (HotelLiteManagerException e) {","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"                ui.printErrorMessage(e);","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"        new Duke().run();","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"zhenster":2,"aiman-imtiaz":2,"FaliciaOng":11,"siewyangzhi":11,"-":9}},{"path":"src/main/java/seedu/duke/EmptyItemNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":" * Represents an exception which would be thrown when the user enters an empty item name in the Add Item or Update Item","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":" * Pax Command.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"public class EmptyItemNameException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Item Name cannot be empty.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"siewyangzhi":14}},{"path":"src/main/java/seedu/duke/EmptyItemPaxException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"public class EmptyItemPaxException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Item Pax cannot be empty.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"siewyangzhi":10}},{"path":"src/main/java/seedu/duke/EmptySatisfactionCustomerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":" * An exception for the \"Add Satisfaction [customerName] [satisfactionValue] command.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":" * This exception is thrown if the customer name is not provided.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"public class EmptySatisfactionCustomerException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Customer name cannot be empty.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":15}},{"path":"src/main/java/seedu/duke/EmptySatisfactionValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":" * An exception for the \"Add Satisfaction [customerName] [satisfactionValue] command.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":" * This exception is thrown if the satisfaction value is not provided.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"public class EmptySatisfactionValueException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Satisfaction value cannot be empty.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":16}},{"path":"src/main/java/seedu/duke/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"    public ExitCommand() {","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"        isExit \u003d true;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"    public void execute(HousekeeperList housekeeperList, SatisfactionList satisfactionList,","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"                        AssignmentMap assignmentMap, RoomList roomList,","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"                        ItemList listOfItems, Ui ui) throws HotelLiteManagerException, WrongCommandException {","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"        System.out.println(\"see u again!\");","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"aiman-imtiaz":2,"FaliciaOng":12}},{"path":"src/main/java/seedu/duke/HotelLiteManagerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"public abstract class HotelLiteManagerException extends Exception {","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"\";","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"siewyangzhi":9}},{"path":"src/main/java/seedu/duke/Housekeeper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":" * Records the age, name and availability of each Housekeeper.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"public class Housekeeper {","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"    private String name;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"    private int age;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    private String availability;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    public Housekeeper(String name, int age) {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"        this.age \u003d age;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"    public String getAvailability() {","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"        if (availability \u003d\u003d null) {","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"            return \"\u003cEnter Availability\u003e\";","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"        return availability;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"    public void setAvailability(String availability) {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"        this.availability \u003d availability;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"    public String getName() {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"        return name;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"    public void setName(String name) {","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"    public int getAge() {","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"        return age;","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"    public void setAge(int age) {","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"        this.age \u003d age;","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"        return \"[ \" + getName() + \" ]: \" + getAge() + \", \" + getAvailability();","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"FaliciaOng":48}},{"path":"src/main/java/seedu/duke/HousekeeperList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"import static java.util.stream.Collectors.toList;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":" * Represents a data structure containing all housekeeper profiles.","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"public class HousekeeperList {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    private ArrayList\u003cHousekeeper\u003e housekeeperList;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"    public HousekeeperList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"        ArrayList\u003cHousekeeper\u003e housekeeperList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"        setHousekeeperList(housekeeperList);","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"    public Housekeeper getHousekeeper(int index) {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"        return housekeeperList.get(index);","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"    public void addHousekeeper(Housekeeper newHousekeeper) {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"        getHousekeeperList().add(newHousekeeper);","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"     * Method checks if Housekeeper name is current in records.","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"     * @param name The name of the housekeeper.","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"     * @return false If name is not in records and true if name is in records.","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"    public boolean hasNameAdded(String name) {","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"        String convertNameToLowerCase \u003d name.toLowerCase();","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"        ArrayList\u003cHousekeeper\u003e housekeeperFound \u003d (ArrayList\u003cHousekeeper\u003e) housekeeperList.stream()","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"                .filter((t) -\u003e t.getName().toLowerCase().contains(convertNameToLowerCase))","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"                .collect(toList());","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"        if (housekeeperFound.size() \u003e\u003d 1) {","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"            return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"        return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"    public int getTotalHousekeeper() {","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"        return housekeeperList.size();","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"FaliciaOng"},"content":"    public void setHousekeeperList(ArrayList\u003cHousekeeper\u003e housekeeperList) {","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"FaliciaOng"},"content":"        this.housekeeperList \u003d housekeeperList;","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"FaliciaOng"},"content":"    public ArrayList\u003cHousekeeper\u003e getHousekeeperList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"FaliciaOng"},"content":"        return housekeeperList;","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"     * Method to find the housekeeper name in the records and add their availability into the records.","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"FaliciaOng"},"content":"     * @param name         Housekeeper Name","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"FaliciaOng"},"content":"     * @param availability Housekeeper\u0027s availability to be added in records","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"FaliciaOng"},"content":"    public void searchAvailability(String name, String availability) throws UserExistException {","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"FaliciaOng"},"content":"        boolean isExist \u003d false;","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"FaliciaOng"},"content":"        String nameConvertLowerCase \u003d name.toLowerCase();","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"FaliciaOng"},"content":"        for (int i \u003d 0; i \u003c housekeeperList.size(); i++) {","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"FaliciaOng"},"content":"            Housekeeper housekeeperToCompare \u003d housekeeperList.get(i);","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"FaliciaOng"},"content":"            String housekeeperToCompareName \u003d housekeeperToCompare.getName().toLowerCase();","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"FaliciaOng"},"content":"            if (housekeeperToCompareName.equals(nameConvertLowerCase)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"FaliciaOng"},"content":"                isExist \u003d true;","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"FaliciaOng"},"content":"                housekeeperToCompare.setAvailability(availability);","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"FaliciaOng"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"FaliciaOng"},"content":"        if (!isExist) {","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"FaliciaOng"},"content":"            throw new UserExistException();","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"FaliciaOng":77}},{"path":"src/main/java/seedu/duke/InvalidAgeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":" * An exception for the \"Add Housekeeper [housekeeperName] ~ [age] command.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":" * This exception is thrown if the add housekeeper command has a given age which is not an integer.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"public class InvalidAgeException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! AGE must be integer.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"FaliciaOng":14}},{"path":"src/main/java/seedu/duke/InvalidAvailabilityException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":" * An exception for the \"Availability [housekeeperName] @ [daysAvailable] command.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":" * This exception is thrown if the add housekeeper availability command has empty days available.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"public class InvalidAvailabilityException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Invalid Command -\u003e Availability NAME @ M,T,W,T,F,S,S\";","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"FaliciaOng":14}},{"path":"src/main/java/seedu/duke/InvalidCategoryException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":" * An exception to check room type.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":" * This exception is thrown if the room type is beyond","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":" * {single, double, triple, queen, twin, king}.","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"public class InvalidCategoryException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Room category is invalid\";","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"XunyiiZ":16}},{"path":"src/main/java/seedu/duke/InvalidCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":" * Represents an exception which would be thrown when the format of the Add Item, View Item or Update Item Pax command","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":" * that the user inputs is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"public class InvalidCommandException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Invalid Command.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"siewyangzhi":14}},{"path":"src/main/java/seedu/duke/InvalidHousekeeperProfile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"public class InvalidHousekeeperProfile extends HotelLiteManagerException {","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Invalid Command -\u003e Availability NAME @ M,T,W,T,F,S,S\";","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"FaliciaOng":10}},{"path":"src/main/java/seedu/duke/InvalidItemPaxException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":" * Represents an exception which would be thrown when the user enters an invalid item pax.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"public class InvalidItemPaxException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Item Pax is invalid.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"siewyangzhi":13}},{"path":"src/main/java/seedu/duke/InvalidLevelException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":" * An exception to check room level.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":" * This exception is thrown if the room level is beyond level range.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"public class InvalidLevelException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Room level is invalid\";","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"XunyiiZ":14}},{"path":"src/main/java/seedu/duke/InvalidRoomNumberException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":" * An exception to check room number.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":" * This exception is thrown if the room number is not in the room list.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"public class InvalidRoomNumberException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Room number is invalid\";","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"XunyiiZ":14}},{"path":"src/main/java/seedu/duke/InvalidSatisfactionValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":" * An exception for the \"Add Satisfaction [customerName] [satisfactionValue] command.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":" * This exception is thrown if the satisfaction value is invalid (i.e. is not an integer","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" * between 1 and 5).","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"public class InvalidSatisfactionValueException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Satisfaction value must be an integer \"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"            + \"between 1 and 5, inclusive.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":18}},{"path":"src/main/java/seedu/duke/InvalidUserException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":" * An exception to prevent multiple adding of the same name.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":" * This exception is thrown if housekeeper profile has already been entered.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"public class InvalidUserException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! This person has already been recorded.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"FaliciaOng":15}},{"path":"src/main/java/seedu/duke/Item.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":" * Represents an item that is stored within the inventory. An item object consists of the item\u0027s name as well as its","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":" * pax.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"public class Item {","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"    private String name;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"    private int pax;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    public Item(String name, int pax) {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"        setName(name);","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"        setPax(pax);","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"    public String getName() {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"        return name;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"    public void setName(String name) {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"    public int getPax() {","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"        return pax;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"    public void setPax(int pax) {","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"        this.pax \u003d pax;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"siewyangzhi":31}},{"path":"src/main/java/seedu/duke/ItemList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":" * Represents a list of the items within the inventory. An ItemList object contains the methods to add items to the","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":" * item list as well as update the paxs of the current items within the item List.","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"public class ItemList {","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"    ArrayList\u003cItem\u003e listOfItems;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"    public ItemList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"        ArrayList\u003cItem\u003e listOfItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"        setListOfItems(listOfItems);","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"    public ArrayList\u003cItem\u003e getListOfItems() {","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"        return listOfItems;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"    public void setListOfItems(ArrayList\u003cItem\u003e listOfItems) {","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"        this.listOfItems \u003d listOfItems;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"    public void addItemToList(Item item) {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"        listOfItems.add(item);","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"    public int getSize() {","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"        return listOfItems.size();","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"     * Returns a specific item within the item list based on the index passed in.","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"     * @param index The index of the item within the list that would be returned.","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"     * @return The item specified by the index passed into the function.","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"    public Item getItem(int index) {","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"        ArrayList\u003cItem\u003e listOfItems \u003d getListOfItems();","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d listOfItems.get(index);","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"siewyangzhi"},"content":"        return item;","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"siewyangzhi"},"content":"     * Updates the pax of a specific item within the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"     * @param item The item within the inventory that the user wants to update. The item object contains the item name","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"     *             and the new pax.","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"siewyangzhi"},"content":"     * @throws ItemNotFoundException if the item name within the item object does not exist in the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"siewyangzhi"},"content":"    public void updateItemPaxInList(Item item) throws ItemNotFoundException {","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"siewyangzhi"},"content":"        String nameOfItemToUpdate \u003d item.getName();","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"siewyangzhi"},"content":"        int updatedItemPax \u003d item.getPax();","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"siewyangzhi"},"content":"        boolean isItemFound \u003d false;","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"siewyangzhi"},"content":"        Item currentItem;","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"siewyangzhi"},"content":"        String currentItemName;","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"siewyangzhi"},"content":"        ArrayList\u003cItem\u003e listOfItems \u003d getListOfItems();","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"siewyangzhi"},"content":"        for (int i \u003d 0; i \u003c listOfItems.size(); i++) {","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"siewyangzhi"},"content":"            currentItem \u003d listOfItems.get(i);","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"siewyangzhi"},"content":"            currentItemName \u003d currentItem.getName();","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"siewyangzhi"},"content":"            if (currentItemName.equals(nameOfItemToUpdate)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"siewyangzhi"},"content":"                currentItem.setPax(updatedItemPax);","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"siewyangzhi"},"content":"                isItemFound \u003d true;","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"siewyangzhi"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"siewyangzhi"},"content":"        if (isItemFound \u003d\u003d false) {","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"siewyangzhi"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"siewyangzhi":71}},{"path":"src/main/java/seedu/duke/ItemNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":" * Represents an exception which would be thrown when the item that the user is searching for within the item list","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":" * is not found.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"public class ItemNotFoundException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Item not found in inventory. Kindly add the item into the \"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"            + \"inventory first.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"siewyangzhi":15}},{"path":"src/main/java/seedu/duke/Room.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":" * Room class has the parameter of roomId, level type and vacancy status.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"public class Room {","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"    private int roomId;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"    private int level;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"    private RoomType type; // can implement it as enumeration","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"    private boolean isVacant;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"    public Room(int roomId, int level, RoomType type) {","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"        this.roomId \u003d roomId;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"        this.level \u003d level;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"        isVacant \u003d true;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"    public int getRoomId() {","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"        return roomId;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"    public int getLevel() {","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"        return level;","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"    public RoomType getType() {","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"        return type;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"XunyiiZ"},"content":"    public boolean getIsVacant() {","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"XunyiiZ"},"content":"        return isVacant;","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"XunyiiZ"},"content":"    public void checkIn() {","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"XunyiiZ"},"content":"        isVacant \u003d false;","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"XunyiiZ"},"content":"    public void checkOut() {","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"XunyiiZ"},"content":"        isVacant \u003d true;","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"XunyiiZ"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"XunyiiZ"},"content":"        return getType() + \"\\t\\t\" + getRoomId() + \"\\t\\t\\t\\t\"","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"XunyiiZ"},"content":"                + getLevel() + \"\\t\\t\" + (getIsVacant() ? \"Vacant\" : \"Occupied\");","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"XunyiiZ":48}},{"path":"src/main/java/seedu/duke/RoomList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":" * Represents a data structure containing multiple Satisfaction objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":" * The constructor will initialize all rooms with status vacant","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"public class RoomList {","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"    private ArrayList\u003cRoom\u003e roomList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"    public RoomList() {  // dummy data for initialization","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"        Room r1 \u003d new Room(101, 1, RoomType.Single);","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(102, 1, RoomType.Single);","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(103, 1, RoomType.Double);","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(201, 2, RoomType.Double);","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(201, 2, RoomType.Triple);","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(202, 2, RoomType.Triple);","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(203, 2, RoomType.Queen);","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(301, 3, RoomType.Queen);","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(302, 3, RoomType.King);","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(303, 3, RoomType.King);","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(401, 4, RoomType.Twin);","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(402, 4, RoomType.Twin);","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"XunyiiZ"},"content":"    public ArrayList\u003cRoom\u003e getRoomList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"XunyiiZ"},"content":"        return roomList;","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"XunyiiZ":43}},{"path":"src/main/java/seedu/duke/RoomType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"public enum RoomType {","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"    Single, Double, Triple, Queen, King, Twin","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"XunyiiZ":5}},{"path":"src/main/java/seedu/duke/Satisfaction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":" * Represents a Satisfaction object. Attributes include satisfactionValue","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":" * (a value from 1-5) and customerName (the name of the customer with","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" * this satisfactionValue).","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"public class Satisfaction {","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    protected String customerName;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"    protected int satisfactionValue;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"    public Satisfaction(String customerName, int satisfactionValue) {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"        this.customerName \u003d customerName;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"        this.satisfactionValue \u003d satisfactionValue;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"    public String getCustomerName() {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"        return customerName;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"    public int getSatisfactionValue() {","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"        return satisfactionValue;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"    public void setCustomerName(String customerName) {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"        this.customerName \u003d customerName;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"    public void setSatisfactionValue(int satisfactionValue) {","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"        this.satisfactionValue \u003d satisfactionValue;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":35}},{"path":"src/main/java/seedu/duke/SatisfactionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" * Represents a data structure containing multiple Satisfaction objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":" * Uses an ArrayList to store the Satisfaction objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"public class SatisfactionList {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"    private ArrayList\u003cSatisfaction\u003e satisfactionList;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"    public SatisfactionList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"        ArrayList\u003cSatisfaction\u003e satisfactionList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"        setSatisfactionList(satisfactionList);","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"    public void addSatisfaction(Satisfaction newSatisfaction) {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"        getSatisfactionList().add(newSatisfaction);","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"    public ArrayList\u003cSatisfaction\u003e getSatisfactionList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"        return satisfactionList;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"    public void setSatisfactionList(ArrayList\u003cSatisfaction\u003e satisfactionList) {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"        this.satisfactionList \u003d satisfactionList;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"    public int getSize() {","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"        return satisfactionList.size();","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":35}},{"path":"src/main/java/seedu/duke/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":" * Represents the User Interface component of the program.","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":" * The Ui object handles all interactions with the user such as printing the outputs to the user","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":" * as well as reading in the user inputs .","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"public class Ui {","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    private Scanner in;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"    private static final int ARRAY_INDEX_OFFSET \u003d 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"    public Ui() {","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"     * Returns a string containing the user input.","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"     * @return User input","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"    public String readUserInput() {","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"        String userInput \u003d in.nextLine();","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"        return userInput;","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"    public void printErrorMessage(HotelLiteManagerException exception) {","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(exception.getErrorMessage());","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"        System.out.println(message);","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"    public void printHousekeeperNoted(Housekeeper housekeeper) {","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"        System.out.println(\"Noted!\");","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"        System.out.println(housekeeper);","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"siewyangzhi"},"content":"     * Prints out an acknowledgement message to inform the user that the item has been added to the item list as well","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"siewyangzhi"},"content":"     * as the number of items within the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"     * @param listOfItems The item list containing all the items in the inventory.","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"    public void printAddItemAcknowledgementMessage(ItemList listOfItems) {","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(\"The item and its pax has been added to the list of items in the inventory.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"siewyangzhi"},"content":"        System.out.printf(\"There are currently %d items within the inventory.\\n\", listOfItems.getSize());","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"siewyangzhi"},"content":"     * Prints out the item name ,pax as well as index for each item that is found within the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"siewyangzhi"},"content":"     * @param listOfItems The item list containing all the items in the inventory.","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"siewyangzhi"},"content":"    public void printItemList(ItemList listOfItems) {","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"siewyangzhi"},"content":"        String itemName;","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"siewyangzhi"},"content":"        int itemPax;","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"siewyangzhi"},"content":"        Item currentItem;","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"siewyangzhi"},"content":"        int currentListIndex;","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"siewyangzhi"},"content":"        for (int i \u003d 0; i \u003c listOfItems.getSize(); i++) {","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"siewyangzhi"},"content":"            currentItem \u003d listOfItems.getItem(i);","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"siewyangzhi"},"content":"            itemName \u003d currentItem.getName();","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"siewyangzhi"},"content":"            itemPax \u003d currentItem.getPax();","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"siewyangzhi"},"content":"            currentListIndex \u003d i + ARRAY_INDEX_OFFSET;","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"siewyangzhi"},"content":"            System.out.printf(\"%d. Item Name: %s Item Pax: %d\\n\", currentListIndex, itemName, itemPax);","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"FaliciaOng"},"content":"    public void printHousekeeperList(HousekeeperList housekeeperList) {","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"FaliciaOng"},"content":"        printMessage(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Housekeeper List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"FaliciaOng"},"content":"        for (int i \u003d 0; i \u003c housekeeperList.getTotalHousekeeper(); i++) {","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"FaliciaOng"},"content":"            System.out.println((i + 1) + \". \" + housekeeperList.getHousekeeper(i));","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"FaliciaOng"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"siewyangzhi"},"content":"     * Prints an acknowledgement message informing the user that the pax of the item was successfully updated.","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"siewyangzhi"},"content":"     * @param updatedItem The item within the inventory whose pax has been updated by the user.","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"siewyangzhi"},"content":"    public void printUpdateItemPaxAcknowledgementMessage(Item updatedItem) {","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"siewyangzhi"},"content":"        System.out.printf(\"The pax of %s has been updated to %d.\\n\", updatedItem.getName(), updatedItem.getPax());","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"zhenster"},"content":"    public void printAddSatisfactionAcknowledgementMessage(SatisfactionList satisfactionList,","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"zhenster"},"content":"                                                           Satisfaction recentSatisfaction) {","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"zhenster"},"content":"        System.out.println(\"The Satisfaction instance \" + recentSatisfaction.getCustomerName() + \": \"","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"zhenster"},"content":"                + recentSatisfaction.getSatisfactionValue() + \" has been added to the list of Satisfactions.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"zhenster"},"content":"        System.out.printf(\"There are currently %d items within the inventory.\\n\", satisfactionList.getSize());","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"zhenster":6,"FaliciaOng":21,"siewyangzhi":70}},{"path":"src/main/java/seedu/duke/UpdateItemPaxCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":" * Represents a command to update the pax of an item within the item list. An UpdateItemPaxCommand object consists of","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":" * the name of the item to update and the new pax value.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"public class UpdateItemPaxCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"    private Item item;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ITEM_NAME_INDICATOR \u003d \"/Name:\";","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"    private static final int ITEM_NAME_INDICATOR_LENGTH \u003d 6;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ITEM_PAX_INDICATOR \u003d \"/New Pax:\";","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"    private static final int ITEM_PAX_INDICATOR_LENGTH \u003d 9;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"     * Takes in the user input and checks if the formatting of the Update Item Pax Command within the user input is","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"     * valid.","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"     * Extracts out the item name and item pax from the user input and creates an UpdateItemPaxCommand object.","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if the formatting of the update item pax command is invalid, the item pax is","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"     *                                   empty or invalid, the item name is empty, or the item name and pax are both","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"     *                                   empty.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"    public UpdateItemPaxCommand(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"        boolean isValidUpdateItemCommand \u003d userInput.contains(ITEM_NAME_INDICATOR)","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"                \u0026\u0026 userInput.contains(ITEM_PAX_INDICATOR);","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"        if (!isValidUpdateItemCommand) {","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"        int itemPax \u003d extractItemPax(userInput);","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"        String itemName \u003d extractItemName(userInput);","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d new Item(itemName, itemPax);","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"        setItem(item);","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"     * Returns the item name extracted from the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"     * @return The item name within the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if item name is empty.","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"    private String extractItemName(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"siewyangzhi"},"content":"        String itemName;","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"siewyangzhi"},"content":"        int itemNameStartingPosition \u003d userInput.indexOf(ITEM_NAME_INDICATOR) + ITEM_NAME_INDICATOR_LENGTH;","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"siewyangzhi"},"content":"        int itemPaxIndicatorPosition \u003d userInput.indexOf(ITEM_PAX_INDICATOR);","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"        itemName \u003d userInput.substring(itemNameStartingPosition, itemPaxIndicatorPosition);","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"        itemName \u003d itemName.trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"        if (itemName.isEmpty()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"siewyangzhi"},"content":"            throw new EmptyItemNameException();","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"siewyangzhi"},"content":"        return itemName;","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"siewyangzhi"},"content":"     * Returns the item pax extracted from the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"siewyangzhi"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"siewyangzhi"},"content":"     * @return The item pax within the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if item pax is empty or invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"siewyangzhi"},"content":"    private int extractItemPax(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"siewyangzhi"},"content":"        int itemPax;","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"siewyangzhi"},"content":"        String itemPaxStringVersion;","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"siewyangzhi"},"content":"        int stringEndingPosition \u003d userInput.length();","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"siewyangzhi"},"content":"        int itemPaxStartingPosition \u003d userInput.indexOf(ITEM_PAX_INDICATOR) + ITEM_PAX_INDICATOR_LENGTH;","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"siewyangzhi"},"content":"        if (itemPaxStartingPosition \u003d\u003d stringEndingPosition) {","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"siewyangzhi"},"content":"            throw new EmptyItemPaxException();","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"siewyangzhi"},"content":"        itemPaxStringVersion \u003d userInput.substring(itemPaxStartingPosition);","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"siewyangzhi"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"siewyangzhi"},"content":"            itemPax \u003d Integer.parseInt(itemPaxStringVersion);","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"siewyangzhi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidItemPaxException();","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"siewyangzhi"},"content":"        if (itemPax \u003c 0) {","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidItemPaxException();","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"siewyangzhi"},"content":"        return itemPax;","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"siewyangzhi"},"content":"     * Updates the pax of the item within the item list using the item name and new pax found in the instance variable","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"siewyangzhi"},"content":"     * named item within the UpdateItemPaxCommand object.","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"siewyangzhi"},"content":"     * @param housekeeperList  The list of housekeeper recorded. N/A for this class, but","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"siewyangzhi"},"content":"     *                         must be included for the execution override.","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"siewyangzhi"},"content":"     * @param satisfactionList The given list of Satisfaction objects. N/A for this class, but","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"siewyangzhi"},"content":"     *                         must be included for the execution override.","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"siewyangzhi"},"content":"     * @param assignmentMap    The assignments of the various housekeepers.","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"siewyangzhi"},"content":"     * @param roomList         The given list of Room objects. N/A for this class, but","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"siewyangzhi"},"content":"     *                         must be included for the execution override.","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"siewyangzhi"},"content":"     * @param listOfItems      The list of items within the inventory.","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"siewyangzhi"},"content":"     * @param ui               The object that deals with user interface for the program.","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if the item name within the item object does not exist in the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"aiman-imtiaz"},"content":"    public void execute(HousekeeperList housekeeperList, SatisfactionList satisfactionList,","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"aiman-imtiaz"},"content":"                        AssignmentMap assignmentMap, RoomList roomList,","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"siewyangzhi"},"content":"                        ItemList listOfItems, Ui ui) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"siewyangzhi"},"content":"        listOfItems.updateItemPaxInList(item);","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"siewyangzhi"},"content":"        ui.printUpdateItemPaxAcknowledgementMessage(item);","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"siewyangzhi"},"content":"    public Item getItem() {","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"siewyangzhi"},"content":"        return item;","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"siewyangzhi"},"content":"    public void setItem(Item item) {","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"siewyangzhi"},"content":"        this.item \u003d item;","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"aiman-imtiaz":2,"siewyangzhi":110}},{"path":"src/main/java/seedu/duke/UserExistException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":" * This exception is thrown if housekeeper profile has has not been entered and user tries to add his/her availability.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"public class UserExistException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! User does not exist.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"FaliciaOng":13}},{"path":"src/main/java/seedu/duke/ViewHousekeeperListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"public class ViewHousekeeperListCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"     * Printing the list of housekeeper name, age and availability.","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"     * @param housekeeperList  The list of housekeeper recorded.","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"     * @param satisfactionList The given list of Satisfaction objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"     * @param roomList         The given list of Room objects. N/A for this class, but","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"     *                         must be included for the execution override.","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"     * @param listOfItems      The given list of Item objects. N/A for this class, but","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"     *                         must be included for the execution override.","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"     * @param ui               The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"aiman-imtiaz"},"content":"    public void execute(HousekeeperList housekeeperList, SatisfactionList satisfactionList,","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"aiman-imtiaz"},"content":"                        AssignmentMap assignmentMap, RoomList roomList,","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"                        ItemList listOfItems, Ui ui) throws HotelLiteManagerException, WrongCommandException {","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"        ui.printHousekeeperList(housekeeperList);","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"aiman-imtiaz":3,"FaliciaOng":20}},{"path":"src/main/java/seedu/duke/ViewItemListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":" * Represents a command to view all the items currently within the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"public class ViewItemListCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"     * Prints out the item name ,pax as well as index for each item that is found within the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"     * @param housekeeperList  The list of housekeeper recorded. N/A for this class, but","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"     *                         must be included for the execution override.","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"     * @param satisfactionList The given list of Satisfaction objects. N/A for this class, but","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"     *                         must be included for the execution override.","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"     * @param assignmentMap    The assignments of the various housekeepers.","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"     * @param roomList         The given list of Room objects. N/A for this class, but","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"     *                         must be included for the execution override.","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"     * @param listOfItems      The list of items within the inventory.","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"     * @param ui               The object that deals with user interface for the program.","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if the item name within the item object does not exist in the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":"    public void execute(HousekeeperList housekeeperList, SatisfactionList satisfactionList,","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"                        AssignmentMap assignmentMap, RoomList roomList, ItemList listOfItems, Ui ui) {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"        ui.printItemList(listOfItems);","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"aiman-imtiaz":1,"siewyangzhi":25}},{"path":"src/main/java/seedu/duke/ViewSatisfactionsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" * Class that implements execution behavior for user command","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":" * \"View Satisfactions.\" Contains override of execution","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":" * method in Command class that prints out the information of the Satisfaction objects","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":" * in the given satisfactionList (i.e. prints out each Satisfaction object\u0027s","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":" * corresponding customer name and satisfaction value).","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"public class ViewSatisfactionsCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"     * Override of execute command in Command class.","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"     * Prints out the information of the Satisfaction objects","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"     * in the given satisfactionList (i.e. prints out each Satisfaction object\u0027s","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"     * corresponding customer name and satisfaction value).","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"     * @param housekeeperList  The list of housekeeper recorded.","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"     * @param satisfactionList The given list of Satisfaction objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"     * @param roomList         The given list of Room objects. N/A for this class, but","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"     *                         must be included for the execution override.","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"     * @param itemList         The given list of Item objects. N/A for this class, but","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"     *                         must be included for the execution override.","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"     * @param ui               The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"aiman-imtiaz"},"content":"    public void execute(HousekeeperList housekeeperList, SatisfactionList satisfactionList,","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"aiman-imtiaz"},"content":"                        AssignmentMap assignmentMap, RoomList roomList,","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"                        ItemList itemList, Ui ui) {","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"        int number \u003d 1;","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"        ArrayList\u003cSatisfaction\u003e satisfactionArrayList \u003d satisfactionList.getSatisfactionList();","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"        for (Satisfaction satisfaction : satisfactionArrayList) {","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"            System.out.println(Integer.toString(number) + \". \" + satisfaction.getCustomerName() + \" - \"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"                    + satisfaction.getSatisfactionValue());","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"            number +\u003d 1;","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":38,"aiman-imtiaz":2,"FaliciaOng":3}},{"path":"src/main/java/seedu/duke/WrongCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":" * This exception is thrown if any user input command is not part of command or is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"public class WrongCommandException extends Exception {","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"    public WrongCommandException(String errorMessage) {","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"        super(errorMessage);","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"FaliciaOng":10}},{"path":"src/test/java/seedu/duke/AddAvailabilityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"public class AddAvailabilityTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_addCommandNameAvailability_success() throws Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"        CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"aiman-imtiaz"},"content":"        Command command \u003d parser.parse(\"Availability Susan @ Monday\");","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"        AddAvailabilityCommand addAvailabilityCommand \u003d (AddAvailabilityCommand) command;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(\"Monday\", addAvailabilityCommand.getAvailability());","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(\"Susan\", addAvailabilityCommand.getName());","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_addCommandInvalidAvailability_exceptionThrown() {","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(InvalidAvailabilityException.class, () -\u003e new CommandParser().parse(\"Availability Susan @ \"));","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"aiman-imtiaz":1,"FaliciaOng":22}},{"path":"src/test/java/seedu/duke/AddHousekeeperTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"public class AddHousekeeperTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_addCommandNameAge_success() throws Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"        CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"        Command command \u003d parser.parse(\"Add Housekeeper Susan ~ 23\");","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"        AddHousekeeperCommand addHousekeeperCommand \u003d (AddHousekeeperCommand) command;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(\"Susan\", addHousekeeperCommand.getHousekeeper().getName());","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(23, addHousekeeperCommand.getHousekeeper().getAge());","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_addCommandInvalidAge_exceptionThrown() {","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(InvalidAgeException.class, () -\u003e new CommandParser().parse(\"Add Housekeeper Susan ~ fifty\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"FaliciaOng":23}},{"path":"src/test/java/seedu/duke/AddSatisfactionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"public class AddSatisfactionCommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    public void commandParser_addCommandWithNonEmptySatisfactionCustomerAndSatisfactionValue_success()","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"            throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"        CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"        Command command \u003d parser.parse(\"Add Satisfaction Bob 3\");","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"        AddSatisfactionCommand addSatisfactionCommand \u003d (AddSatisfactionCommand) command;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"        Satisfaction satisfaction \u003d addSatisfactionCommand.getSatisfaction();","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"        assertEquals(\"Bob\", satisfaction.getCustomerName());","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"        assertEquals(3, satisfaction.getSatisfactionValue());","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"    public void commandParser_addCommandWithEmptySatisfactionCustomer_exceptionThrown() {","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"        assertThrows(EmptySatisfactionCustomerException.class, () -\u003e new CommandParser().parse(\"Add Satisfaction\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"    public void commandParser_addCommandWithEmptySatisfactionValue_exceptionThrown() {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"        assertThrows(EmptySatisfactionValueException.class, () -\u003e new CommandParser().parse(\"Add Satisfaction Bob\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"    public void commandParser_addCommandWithInvalidSatisfactionValue_exceptionThrown() {","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"        assertThrows(InvalidSatisfactionValueException.class, () -\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"                new CommandParser().parse(\"Add Satisfaction Bob -1\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":35}},{"path":"src/test/java/seedu/duke/AssignHousekeeperTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"public class AssignHousekeeperTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"    public void commandParser_addCommandNameAvailability_success() throws Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"aiman-imtiaz"},"content":"        RoomList inputRoomList \u003d new RoomList();","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"aiman-imtiaz"},"content":"        ItemList itemList \u003d new ItemList();","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"        AssignmentMap assignmentMap \u003d new AssignmentMap();","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"aiman-imtiaz"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"aiman-imtiaz"},"content":"        SatisfactionList satisfactionList \u003d new SatisfactionList();","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"aiman-imtiaz"},"content":"        HousekeeperList housekeeperList \u003d new HousekeeperList();","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"aiman-imtiaz"},"content":"        String inputCommand \u003d \"301\";","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"aiman-imtiaz"},"content":"        CheckInCommand checkInCommand \u003d new CheckInCommand(inputCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"aiman-imtiaz"},"content":"        checkInCommand.execute(housekeeperList, satisfactionList, assignmentMap, inputRoomList, itemList, ui);","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":"        Room expectedRoom \u003d null;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"aiman-imtiaz"},"content":"        for (Room room : inputRoomList.getRoomList()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"            if (room.getRoomId() \u003d\u003d 301) {","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"                expectedRoom \u003d room;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"aiman-imtiaz"},"content":"        CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"aiman-imtiaz"},"content":"        Command command1 \u003d parser.parse(\"Add Housekeeper Susan ~ 23\");","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"aiman-imtiaz"},"content":"        AddHousekeeperCommand addHousekeeperCommand \u003d (AddHousekeeperCommand) command1;","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"aiman-imtiaz"},"content":"        Command command \u003d parser.parse(\"Assign Susan ## 301\");","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"aiman-imtiaz"},"content":"        AssignHousekeeperCommand assignHousekeeperCommand \u003d (AssignHousekeeperCommand) command;","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"aiman-imtiaz"},"content":"        assertEquals(\"301\", assignHousekeeperCommand.getroomID());","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"aiman-imtiaz"},"content":"        assertEquals(\"Susan\", assignHousekeeperCommand.getName());","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"aiman-imtiaz":39}},{"path":"src/test/java/seedu/duke/CheckInCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"class CheckInCommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"    // format","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"    // methodBeingTested_InputCondition_expectedOutcome","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"    // test for successful and fail and how it fails","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"    //Happy path","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"    void execute_validRoomNumber_expectRoomBeingOccupied() throws HotelLiteManagerException {","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"        RoomList inputRoomList \u003d new RoomList();","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"        ItemList itemList \u003d new ItemList();","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"aiman-imtiaz"},"content":"        AssignmentMap assignmentMap \u003d new AssignmentMap();","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"        SatisfactionList satisfactionList \u003d new SatisfactionList();","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d new HousekeeperList();","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"        String inputCommand \u003d \"301\";","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"        CheckInCommand checkInCommand \u003d new CheckInCommand(inputCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"        checkInCommand.execute(housekeeperList, satisfactionList, assignmentMap, inputRoomList, itemList, ui);","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"        Room expectedRoom \u003d null;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"        for (Room room : inputRoomList.getRoomList()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"            if (room.getRoomId() \u003d\u003d 301) {","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"                expectedRoom \u003d room;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"XunyiiZ"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"XunyiiZ"},"content":"        assertEquals(\"Queen\\t\\t301\\t\\t\\t\\t3\\t\\tOccupied\", expectedRoom.toString());","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"XunyiiZ"},"content":"    //unhappy","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"XunyiiZ"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"XunyiiZ"},"content":"    void execute_inValidRoomNumber_throwException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"XunyiiZ"},"content":"        RoomList inputRoomList \u003d new RoomList();","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"XunyiiZ"},"content":"        ItemList itemList \u003d new ItemList();","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"XunyiiZ"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"aiman-imtiaz"},"content":"        AssignmentMap assignmentMap \u003d new AssignmentMap();","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"        SatisfactionList satisfactionList \u003d new SatisfactionList();","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d new HousekeeperList();","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"XunyiiZ"},"content":"        String inputCommand \u003d \"601\";","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"XunyiiZ"},"content":"        CheckInCommand checkInCommand \u003d new CheckInCommand(inputCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"XunyiiZ"},"content":"        Room expectedRoom \u003d null;","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"XunyiiZ"},"content":"        assertThrows(InvalidRoomNumberException.class,","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"aiman-imtiaz"},"content":"            () -\u003e checkInCommand.execute(housekeeperList, satisfactionList, assignmentMap, inputRoomList,itemList,ui));","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"aiman-imtiaz":5,"zhenster":2,"FaliciaOng":2,"XunyiiZ":43}},{"path":"src/test/java/seedu/duke/CheckRoomByCatCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"class CheckRoomByCatCommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"    void execute_invalidCat_expectException()  {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"        //RoomList inputRoomList \u003d new RoomList();","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"        String inputCommand \u003d \"president\";","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"        assertThrows(InvalidCategoryException.class,","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"            () -\u003e new CheckRoomByCatCommand(inputCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"XunyiiZ":20}},{"path":"src/test/java/seedu/duke/DukeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"class DukeTest {","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"    public void commandParser_addCommandWithNonEmptyItemNameAndPax_success() throws Exception {","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"        CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"        Command command \u003d parser.parse(\"Add Item /Name:Toilet Roll /Pax:5\");","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"        AddItemCommand addItemCommand \u003d (AddItemCommand) command;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d addItemCommand.getItem();","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(\"Toilet Roll\", item.getName());","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(5, item.getPax());","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"    public void commandParser_addCommandWithEmptyItemName_exceptionThrown() {","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(EmptyItemNameException.class, () -\u003e new CommandParser().parse(\"Add Item /Name: /Pax:5\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"    public void commandParser_addCommandWithEmptyItemPax_exceptionThrown() {","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(EmptyItemPaxException.class, () -\u003e new CommandParser().parse(\"Add Item /Name:Toilet Roll /Pax:\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"    public void commandParser_addCommandWithEmptyItemNameAndPax_exceptionThrown() {","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e new CommandParser().parse(\"Add Item\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_addCommandInvalidView_exceptionThrown() {","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(WrongCommandException.class, () -\u003e new CommandParser().parse(\"ViewRecorded Housekeeper\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"FaliciaOng":6,"siewyangzhi":28,"-":12}},{"path":"src/test/java/seedu/duke/UpdateItemCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"public class UpdateItemCommandTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"    public void commandParser_updateCommandWithNonEmptyItemNameAndItemPax_success()","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"            throws Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"        CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"        Command command \u003d parser.parse(\"Update Item Pax /Name:Toilet Roll /New Pax:5\");","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"        UpdateItemPaxCommand updateItemPaxCommand \u003d (UpdateItemPaxCommand) command;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d updateItemPaxCommand.getItem();","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(\"Toilet Roll\", item.getName());","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(5, item.getPax());","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"    public void commandParser_updateItemPaxCommandWithEmptyItemName_exceptionThrown() {","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(EmptyItemNameException.class, () -\u003e new CommandParser().parse(\"Update Item Pax \"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"                + \"/Name: /New Pax:5\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"    public void commandParser_updateItemPaxCommandWithEmptyItemPax_exceptionThrown() {","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(EmptyItemPaxException.class, () -\u003e new CommandParser().parse(\"Update Item Pax \"","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"                + \"/Name:Toilet Roll /New Pax:\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"    public void commandParser_updateItemPaxCommandWithEmptyItemNameAndPax_exceptionThrown() {","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e new CommandParser().parse(\"Update Item Pax\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"    public void commandParser_updateItemPaxCommandWithInvalidItemPax_exceptionThrown() {","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(InvalidItemPaxException.class, () -\u003e new CommandParser().parse(\"Update Item Pax \"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"                + \"/Name:Toilet Roll /New Pax:-1\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"siewyangzhi":43}}]
