[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"run {","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"siewyangzhi":4,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Siew Yang Zhi | [Github](https://github.com/siewyangzhi) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ong Siying Falicia | [Github](https://github.com/FaliciaOng) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Zeng Xunyi | [Github](https://github.com/XunyiiZ) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"![](/Users/aimanimtiaz/Documents/photo_2021-06-08_00-11-45.jpg) | Aiman Imtiaz | [Github](https://github.com/aiman-imtiaz) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Alina Zheng | [Github](https://github.com/zhenster) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"zhenster":1,"aiman-imtiaz":6,"-":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"## Design","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"### Add Housekeeper Command","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"The objective of the `AddHousekeeperCommand` is to take in user input and spilt it into two parts which is the name and age of a Housekeeper. These details make up parts of the Housekeeper profile. With the name and age derived, this information will be added into a new Housekeeper object, which will be recorded into the list of housekeeper. The class diagram below depicts how the `AddHousekeeperCommand` interacts with other classes.","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"![class](team/falicia_addHousekeeperCommand/classAddHousekeeper.jpg)","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"Below is an example showing the usage of `AddHousekeeperCommand`.","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"1. Command given from the user: `add housekeeper susan / 33`. This command meant to add a new housekeeper called susan who is 33 years old.","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"2. The parse method from `CommandParser` will run parse to create `AddHousekeeperCommand` and would be return to Duke.","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"3. The execute method in `AddHousekeeperCommand` will be performed. It first checks with the housekeeperList if the name of the housekeeper to be added has been recorded into the list. If it has not been recorded, housekeeperList would then add this new user into the records. Ui will be called to print a confirmation to show that the housekeeper has been entered into the list.","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"5. If housekeeper exist, the housekeeper profile would not be added into the list.","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"### Add Item Command","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"The objective of the AddItemCommand is to allow the user to add a new item to the list of items found within the inventory. It takes in the user input and spilt it up into two parts which are the name of the item to be added and its pax. These two information would then be used to create an Item Object and the Item Object would be saved into a list of items.","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"Below is the partial class diagram detailing the design of the Add Item Command Class as well as its interactions with the various other classes required to execute the Add Item Command.","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"![alt text](team/SiewYangZhi_addItemCommand/AddItemCommandClassDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"Step 1: When the user enters the command `Add Item Toilet Roll / 15`, the `Duke` class would pass the user input to the `Command Parser` Class.","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"Step 2: The `Command Parser` Class would run the `parse` method and create an `AddItemCommand` object containing an `Item` object which is made up of the name of the item to add as well as its pax which are found within the user input.","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"Step 3: The `AddItemCommand` class would be passed back to the `Duke` class.","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"Step 4: The `execute` method of the `AddItemCommand` class would be run and the the `ItemList` Object would be called and the `AddItemCommand` object would pass its Item object to the `ItemList` Object\u0027s `addItemToList` method.","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"Step 5: The addItemToList method would then add the `Item` object to its ArrayList of `Item` objects called listOfItems.","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"Step 6: The `AddItemCommand` then call the `UI` and execute the `UI`\u0027s `printAddItemAcknowledgementMessage` method which would print an acknowledgement message to the user informing him that the item has been added into the item list.","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"## Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"aiman-imtiaz"},"content":"#### Assign a housekeeper to a room","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"aiman-imtiaz"},"content":"The assignment of housekeeper to a room is facilitated by `AssignHousekeeperCommand`. This command objects uses `AssignmentMap`, which keeps a `HashMap`, to help us map a `Room` object to a `Housekeeper` object. ","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"aiman-imtiaz"},"content":"``","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"aiman-imtiaz"},"content":"Map\u003cRoom, Housekeeper\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"aiman-imtiaz"},"content":"``","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"aiman-imtiaz"},"content":"The following steps exhibit how `AssignHousekeeperCommand` ","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"aiman-imtiaz"},"content":"and `AssignmentMap` fit together in the structure and how the mechanism for adding an assinment behaves at each step.","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"aiman-imtiaz"},"content":"__Step 1.__ The user launches the application. In the `Duke` class, an empty instance of the `AssignmentMap` class,","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"aiman-imtiaz"},"content":"called `assignmentMap`, is created.","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"aiman-imtiaz"},"content":"![Step 1](team/aiman_assignment/step1.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"aiman-imtiaz"},"content":"__Step 2.__ The user types the command `Assign Susan ## 301`. In the `Duke` class, a `Command` object","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"aiman-imtiaz"},"content":"is created by invoking the `CommandParser` class\u0027s constructor on the user input. The details of this","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"aiman-imtiaz"},"content":"step are further described below.","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"aiman-imtiaz"},"content":"![Step 2](team/aiman_assignment/step2.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"aiman-imtiaz"},"content":"__Step 3.__ The `CommandParser` class replaces the `Assign Susan ## 301` in the user input with an empty string,","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"aiman-imtiaz"},"content":"leaving just `Susan ## 301`. Then, an instance of `AssignHousekeeperCommand` is created which extends the class `Command`.","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"aiman-imtiaz"},"content":"![Step 3](team/aiman_assignment/step3.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"aiman-imtiaz"},"content":"__Step 4.__ The `assignHousekeeperCommand` object parses the name of the housekeeper and the ID of the room and send both to the the `assignmentMap`.","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"aiman-imtiaz"},"content":"![Step 4](team/aiman_assignment/step4.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"aiman-imtiaz"},"content":"__Step 5.__ The `assignmentMap` looks for the appropriate `Room` object for `301` in the `RoomList` and then looks for the appropriate `Housekeeper` object for `Susan`. It then adds both to the hashmap contained inside itself.","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"aiman-imtiaz"},"content":"![Step 5](team/aiman_assignment/step5.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"aiman-imtiaz"},"content":"__Interaction__ To understand the interaction between objects of these classes in order to actually add an entry into the hash map inside an `AssignmentMap`, refer to the sequence diagram below.","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"aiman-imtiaz"},"content":"![Step Sequence Diagram](team/aiman_assignment/sequence.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"aiman-imtiaz"},"content":"The command object passes on the ID of the room and the name of the housekeeper to the `AssignmentMap` object after parsing the input appropriately. The `addAssignment` function first locates the appropriate `Room` object from `RoomList`, and then looks for the `Housekeeper` object in the `HousekeeperList` and finally adds the mapping to the hash map.","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":81,"author":{"gitId":"zhenster"},"content":"#### Adding a customer\u0027s satisfaction rating","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"zhenster"},"content":"The mechanism for adding a customer satisfaction (represented by the Satisfaction class) is facilitated","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"zhenster"},"content":"by `AddSatisfactionCommand`. The constructor parses user input to create a `Satisfaction` object (which contains","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"zhenster"},"content":"attributes storing the customer\u0027s name and their satisfaction rating, represented as an integer from 1 to 5).","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"zhenster"},"content":"`AddSatisfactionCommand` extends `Command` and contains an override of the `Command` class\u0027s execute method.","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"zhenster"},"content":"This execute method adds the `Satisfaction` object created from parsing user command into `satisfactionList`, the","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"zhenster"},"content":"object of type `SatisfactionList` that stores the `Satisfaction` objects. Additionally, it implements the","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"zhenster"},"content":"following operations:","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"zhenster"},"content":"* `AddSatisfactionCommand#extractCustomerName(String userInput)`: Extracts the customer\u0027s name (a string) from the","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"zhenster"},"content":"  provided string of user input.","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"zhenster"},"content":"* `AddSatisfactionCommand#extractSatisfactionValue(String userInput)`: Extracts the customer\u0027s satisfaction rating","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"zhenster"},"content":"  (an integer from 1 to 5) from the provided string of user input.","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"zhenster"},"content":"* `AddSatisfactionCommand#getSatisfaction()`: Grabs the value of the `satisfaction` instance variable.","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"zhenster"},"content":"* `AddSatisfactionCommand#setSatisfaction(Satisfaction satisfaction)`: Sets the `satisfaction` instance variable to the","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"zhenster"},"content":"  provided `Satisfaction` object.","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"zhenster"},"content":"Given below is an example usage scenario and how the mechanism for adding a satisfaction behaves at each step.","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"zhenster"},"content":"Step 1. The user launches the application. In the `Duke` class, an empty instance of the `SatisfactionList` class,","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"zhenster"},"content":"called `satisfactionList`, is created.","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"zhenster"},"content":"![Step 1 Object Diagram](team/alinazheng_addsatisfactioncommand_uml/AlinaZheng_AddSatisfaction_Step1ObjectDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"zhenster"},"content":"Step 2. The user types the command `add satisfaction Bob 5`. In the `Duke` class, a `Command` object","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"zhenster"},"content":"is created by invoking the `CommandParser` class\u0027s constructor on the user input. The details of this","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"zhenster"},"content":"step are further described below.","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"zhenster"},"content":"![Step 1 Object Diagram](team/alinazheng_addsatisfactioncommand_uml/AlinaZheng_AddSatisfaction_Step2ObjectDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"zhenster"},"content":"Step 3. The `CommandParser` class replaces the `add satisfaction` in the user input with an empty string,","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"zhenster"},"content":"leaving just `Bob 5`. Then, the `AddSatisfactionCommand` class\u0027s constructor is invoked with `Bob 5`.","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"zhenster"},"content":"![Step 1 Object Diagram](team/alinazheng_addsatisfactioncommand_uml/AlinaZheng_AddSatisfaction_Step3ObjectDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"zhenster"},"content":"Step 4. The `AddSatisfactionCommand` class\u0027s constructor parses `Bob 5`, extracting the customer name `Bob` using the","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"zhenster"},"content":"`AddSatisfactionCommand#extractCustomerName(String userInput)` method and extracting the customer satisfaction rating","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"zhenster"},"content":"`5`using the `AddSatisfactionCommand#extractSatisfactionValue(String userInput)` method. The `AddSatisfactionCommand`","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"zhenster"},"content":"class constructor then invokes the `Satisfaction` class\u0027s constructor to create a new `Satisfaction` object, passing in","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"zhenster"},"content":"customer name `Bob` and satisfaction rating `5`.","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"zhenster"},"content":"![Step 1 Object Diagram](team/alinazheng_addsatisfactioncommand_uml/AlinaZheng_AddSatisfaction_Step4ObjectDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"zhenster"},"content":"Step 5. When the `AddSatisfactionCommand` object is executed in the `Duke` class, the `Satisfaction` object","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"zhenster"},"content":"created in the `AddSatisfactionCommand` class is added to `satisfactionList`.","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"zhenster"},"content":"![Step 1 Object Diagram](team/alinazheng_addsatisfactioncommand_uml/AlinaZheng_AddSatisfaction_Step5ObjectDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"zhenster"},"content":"The following sequence diagram shows what would happen if the user typed `add satisfaction Bob 5`.","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":133,"author":{"gitId":"zhenster"},"content":"PLEASE NOTE: Due to the limitation of PlantUML, the lengths of the activation bars may not be correct, and","lastModifiedDate":"2022-03-23"},{"lineNumber":134,"author":{"gitId":"zhenster"},"content":"certain return values from method calls that could not be placed correctly were omitted. For example, the","lastModifiedDate":"2022-03-23"},{"lineNumber":135,"author":{"gitId":"zhenster"},"content":"instantiation of objects of type `SatisfactionList`, `CommandParser`, `Command`, `AddSatisfactionCommand`,","lastModifiedDate":"2022-03-23"},{"lineNumber":136,"author":{"gitId":"zhenster"},"content":"and `Satisfaction` should have return value arrows (representing the object that was instantiated) to the","lastModifiedDate":"2022-03-23"},{"lineNumber":137,"author":{"gitId":"zhenster"},"content":"entity that created those instances, but those are not indicated in the diagram. Furthermore, for neatness, the","lastModifiedDate":"2022-03-23"},{"lineNumber":138,"author":{"gitId":"zhenster"},"content":"`User` entity should be the left-most entity, but that could not be formatted properly in the diagram.","lastModifiedDate":"2022-03-23"},{"lineNumber":139,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"zhenster"},"content":"![Sequence Diagram](team/alinazheng_addsatisfactioncommand_uml/AlinaZheng_AddSatisfaction_SequenceDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":141,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":142,"author":{"gitId":"FaliciaOng"},"content":"### Add Housekeeper feature","lastModifiedDate":"2022-03-24"},{"lineNumber":143,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":144,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":145,"author":{"gitId":"FaliciaOng"},"content":"The add housekeeper mechanism is facilitated by `AddHousekeeperCommand`. It extends command. Additionally, it implements the following operations:","lastModifiedDate":"2022-03-24"},{"lineNumber":146,"author":{"gitId":"FaliciaOng"},"content":"* `AddHousekeeperCommand#extractDetails()`— Stores the name and age of the new Housekeeper","lastModifiedDate":"2022-03-24"},{"lineNumber":147,"author":{"gitId":"FaliciaOng"},"content":"* `AddHousekeeperCommand#extractName()`— Derive the name of the Housekeeper","lastModifiedDate":"2022-03-24"},{"lineNumber":148,"author":{"gitId":"FaliciaOng"},"content":"* `AddHousekeeperCommand#extractAge()`— Derive the age of Housekeeper and cast it into an integer","lastModifiedDate":"2022-03-24"},{"lineNumber":149,"author":{"gitId":"FaliciaOng"},"content":"* `AddHousekeeperCommand#execute()` — Executes the addition of new housekeeper into list","lastModifiedDate":"2022-03-24"},{"lineNumber":150,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":151,"author":{"gitId":"FaliciaOng"},"content":"Given below is an example usage scenario of how AddHousekeeperCommand behaves at each step.","lastModifiedDate":"2022-03-24"},{"lineNumber":152,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":153,"author":{"gitId":"FaliciaOng"},"content":"Step 1: User launches the application for the first time. The list of housekeeper in records is empty.","lastModifiedDate":"2022-03-24"},{"lineNumber":154,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":155,"author":{"gitId":"FaliciaOng"},"content":"Step 2: User give an add housekeeper command `add housekeeper sally / 40`. The input will be split by the delimiter `/` to derive `sally` and `40`. The `CommandParser` runs parse which will return a new `AddHousekeeperCommand`.","lastModifiedDate":"2022-03-24"},{"lineNumber":156,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":157,"author":{"gitId":"FaliciaOng"},"content":"Step 3: `AddHousekeeperCommand#extractDetails()` will call `AddHousekeeperCommand#extractName()` and `AddHousekeeperCommand#extractAge()` to derive `sally` and `40`.","lastModifiedDate":"2022-03-24"},{"lineNumber":158,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":159,"author":{"gitId":"FaliciaOng"},"content":"Step 4: The `AddHousekeeperCommand` will now contain `sally` and `40`.","lastModifiedDate":"2022-03-24"},{"lineNumber":160,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":161,"author":{"gitId":"FaliciaOng"},"content":"Step 5: The execute method will derive the housekeeper name, `susan` which would call `HousekeeperList#hasNameAdded()` to verify if name has been recorded. If name is not in records, `HousekeeperList#addHousekeeper()` would be called to add the housekeeper, `sally` and `40` into the housekeeperList.","lastModifiedDate":"2022-03-24"},{"lineNumber":162,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"FaliciaOng"},"content":"![class](team/falicia_addHousekeeperCommand/sequenceAddHousekeeperCommandv2.jpg)","lastModifiedDate":"2022-03-24"},{"lineNumber":164,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":165,"author":{"gitId":"siewyangzhi"},"content":"### Add Item Command","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"siewyangzhi"},"content":"The add item to a list of items in the invetory mechanism is facilated by \u0027AddItemCommand\u0027. It extends \u0027Command\u0027 and implements the following operations:","lastModifiedDate":"2022-03-24"},{"lineNumber":167,"author":{"gitId":"siewyangzhi"},"content":"- `AddItemCommand#extractItemName` - Extracts the name of the item to add from the user input.","lastModifiedDate":"2022-03-24"},{"lineNumber":168,"author":{"gitId":"siewyangzhi"},"content":"- `AddItemCommand#extractPax` - Extracts the pax of the item to add from the user input.","lastModifiedDate":"2022-03-24"},{"lineNumber":169,"author":{"gitId":"siewyangzhi"},"content":"- `AddItemCommand#setItem` - Saves the item to the AddItemCommand object.","lastModifiedDate":"2022-03-25"},{"lineNumber":170,"author":{"gitId":"siewyangzhi"},"content":"- `AddItemCommand#getItem` - Extracts the item saved within the AddItemCommand object.","lastModifiedDate":"2022-03-24"},{"lineNumber":171,"author":{"gitId":"siewyangzhi"},"content":"- `AddItemCommand#execute` - Adds the item into the list of items.","lastModifiedDate":"2022-03-25"},{"lineNumber":172,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":173,"author":{"gitId":"siewyangzhi"},"content":"![alt text](team/SiewYangZhi_addItemCommand/AddItemCommandSequenceDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":174,"author":{"gitId":"siewyangzhi"},"content":"The sequence diagram above showcases an example usage scenario of the Add Item Command and how the Add Item mechanisms behaves at each step:","lastModifiedDate":"2022-03-24"},{"lineNumber":175,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":176,"author":{"gitId":"siewyangzhi"},"content":"Step 1: The user enters the `Add Item Toilet Roll / 15` command to add a new item which is `Toilet Roll` that has a pax of `15` into the inventory. `CommandParser#parse` is called and the user input `Add Item Toilet Roll / 15` is passed to it.","lastModifiedDate":"2022-03-25"},{"lineNumber":177,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":178,"author":{"gitId":"siewyangzhi"},"content":"Step 2: `CommandParser#parse` would identify the user input as an Add Item Command by searching for the keyword `Add Item` within the user input. It would then remove `Add Item` from the user input causing the user input to be just `Toilet Roll / 15`. `CommandParser#parse` would then call the constructor of `AddItemCommand` and pass it `Toilet Roll / 15`.  ","lastModifiedDate":"2022-03-25"},{"lineNumber":179,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":180,"author":{"gitId":"siewyangzhi"},"content":"Step 3:  An `AddItemCommand` object would be created. The constructor of `AddItemCommand` would call `AddItemCommand#extractItemPax` and `AddItemCommand#extractItemName` respectively to extract out `15` and `Toilet Roll`. The constructor of `AddItemCommand` would then call the constructor of `Item` which would create an `Item` object containing `Toilet Roll` and `15`. The `Item` object would then be returned to the constructor of `AddItemCommand`. The `Item` object would be saved to the `AddItemCommand` object using `AddItemCommand#setItem`. The `AddItemCommand` object would be passed back to `CommandParser#parse`.   ","lastModifiedDate":"2022-03-25"},{"lineNumber":181,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":182,"author":{"gitId":"siewyangzhi"},"content":"Step 4: `CommandParser#parse` would then call `AddItemCommand#execute` which would call `AddItemCommand#getItem` to extract out the item currently saved within the `AddItemCommand` object.  ","lastModifiedDate":"2022-03-25"},{"lineNumber":183,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":184,"author":{"gitId":"siewyangzhi"},"content":"Step 5: `AddItemCommand#execute` would then call `ItemList#addItemToList` and pass it the item object.This results in the `Item` object being added into the `ItemList`.","lastModifiedDate":"2022-03-25"},{"lineNumber":185,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":186,"author":{"gitId":"siewyangzhi"},"content":"Step 6: `AddItemCommand#execute` would then call `Ui#printAddItemAcknowledgementMessage` which would print out an acknowledgement message informing the user that the item has been succesfully added into the item list.","lastModifiedDate":"2022-03-25"},{"lineNumber":187,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":188,"author":{"gitId":"siewyangzhi"},"content":"### check room information by level","lastModifiedDate":"2022-03-25"},{"lineNumber":189,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":190,"author":{"gitId":"XunyiiZ"},"content":"The checking room information by level mechanism is facilitated `CheckRoomByLevelCommand`. It extends command. Additionally, it implements the following operations:","lastModifiedDate":"2022-03-24"},{"lineNumber":191,"author":{"gitId":"XunyiiZ"},"content":"* `CheckRoomByLevelCommand#isValidLevel(int level, RoomList roomList)` - Checks if the level number is valid","lastModifiedDate":"2022-03-24"},{"lineNumber":192,"author":{"gitId":"XunyiiZ"},"content":"* `CheckRoomByLevelCommand#printRoom(int level, RoomList roomlist)` - Prints all room information ar target level","lastModifiedDate":"2022-03-24"},{"lineNumber":193,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":194,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":195,"author":{"gitId":"XunyiiZ"},"content":"Given below is an example usage scenario of how `CheckRoomByLevelCommand` behaves at each step.","lastModifiedDate":"2022-03-24"},{"lineNumber":196,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":197,"author":{"gitId":"XunyiiZ"},"content":"Step 1: User launches the application for the first time. The status of all room will be vacant","lastModifiedDate":"2022-03-24"},{"lineNumber":198,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":199,"author":{"gitId":"XunyiiZ"},"content":"Step 2: User give a command `check level 2`. The `CommandParser` runs phase which will return a new `CheckRoomByLevelCommand`.","lastModifiedDate":"2022-03-24"},{"lineNumber":200,"author":{"gitId":"XunyiiZ"},"content":"and it will parse the parameter after replace command `check level` to ``.","lastModifiedDate":"2022-03-24"},{"lineNumber":201,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":202,"author":{"gitId":"XunyiiZ"},"content":"Step 3: The `CheckRoomByLevelCommand` will now contain `2`.","lastModifiedDate":"2022-03-24"},{"lineNumber":203,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":204,"author":{"gitId":"XunyiiZ"},"content":"Step 4: The `execute` method will call `isValidLevel(int level, RoomList roomList)` method to check if the level number is valid.","lastModifiedDate":"2022-03-24"},{"lineNumber":205,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":206,"author":{"gitId":"XunyiiZ"},"content":"Step 5: The `excute` method will then call `printRoom(int level, RoomList roomList)` method to print room information at target level.","lastModifiedDate":"2022-03-24"},{"lineNumber":207,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":208,"author":{"gitId":"XunyiiZ"},"content":"![sequence diagram](team/xunyi_checkroombylevelcommand_uml/checkRoomByLevel_Squence.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2022-03-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2022-03-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"{Describe the target user profile}","lastModifiedDate":"2022-03-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2022-03-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2022-03-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2022-03-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2022-03-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2022-03-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2022-03-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|","lastModifiedDate":"2022-03-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2022-03-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2022-03-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2022-03-24"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2022-03-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":234,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2022-03-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":236,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2022-03-24"},{"lineNumber":237,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"aiman-imtiaz":38,"zhenster":63,"FaliciaOng":37,"XunyiiZ":19,"siewyangzhi":41,"-":39}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{Give a product intro}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{Give steps to get started quickly}","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Down the latest version of `Duke` from [here](http://link.to/duke).","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"{Give detailed description of each feature}","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"## Customer Satisfaction Related Commands","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"### Adding a customer satisfaction: `add satifaction`","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"Adds a new customer satisfaction (name of customer and their satisfaction rating from 1-5) to the list of ","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"customer satisfactions.","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"Format: `add satisfaction CUSTOMER_NAME / SATISFACTION_RATING`","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"* The `CUSTOMER_NAME` can be in a natural language format. It must not be ","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"the name of a customer whose satisfaction rating was already recorded. ","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"* The `SATISFACTION_RATING` must be an integer from 1 to 5, inclusive. ","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"Example of usage:","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"`add satisfaction Will Smith / 3`","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"Expected output: ","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"The Satisfaction instance will smith: 3 has been added to the list of Satisfactions.","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"There are currently 1 recorded customer satisfactions.","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"### View all customer satisfactions: `view satisfactions`","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"Lists out all customer satisfactions recorded so far in a user-readable format. ","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"Format: `view satisfactions`","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"Example of usage:","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"`add satisfaction Will Smith / 3`  \u003cbr /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"`add satisfaction Bob / 5`  \u003cbr /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"`add satisfaction Chris Rock / 4`  \u003cbr /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"zhenster"},"content":"`view satisfactions`","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"zhenster"},"content":"Expected output:","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"zhenster"},"content":"The Satisfaction instance will smith: 3 has been added to the list of Satisfactions.","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"zhenster"},"content":"There are currently 1 recorded customer satisfactions.","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"zhenster"},"content":"The Satisfaction instance bob: 5 has been added to the list of Satisfactions.","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"zhenster"},"content":"There are currently 2 recorded customer satisfactions.","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"The Satisfaction instance chris rock: 4 has been added to the list of Satisfactions.","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"zhenster"},"content":"There are currently 3 recorded customer satisfactions.","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Customer Satisfaction List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"zhenster"},"content":"1. [ will smith ]: 3","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"zhenster"},"content":"2. [ bob ]: 5","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"zhenster"},"content":"3. [ chris rock ]: 4","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"zhenster"},"content":"### Adding a housekeeper\u0027s performance: `add housekeeper performance`","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"zhenster"},"content":"Adds a new housekeeper performance (name of housekeeper and their performance rating from 1-5) to the list of","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"zhenster"},"content":"housekeeper performances. ","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"zhenster"},"content":"Format: `add housekeeper performance HOUSEKEEPER_NAME / PERFORMANCE_RATING`","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"zhenster"},"content":"* The `HOUSEKEEPER_NAME` can be in a natural language format. It must not be the name of a ","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"zhenster"},"content":"housekeeper who already has a recorded performance rating, and it must be the name of a ","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"zhenster"},"content":"housekeeper who has a corresponding record in the list of housekeepers. ","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"zhenster"},"content":"* The `PERFORMANCE_RATING` must be an integer from 1-5, inclusive. ","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"zhenster"},"content":"Example of usage:","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"zhenster"},"content":"`add housekeeper performance Fred Jones / 4`","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"zhenster"},"content":"Expected output:","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"zhenster"},"content":"The HousekeeperPerformance instance Fred Jones: 4 has been added to the list of housekeeper performances.","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"zhenster"},"content":"There are currently 1 recorded housekeeper performances.","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"zhenster"},"content":"### View all housekeeper performances: `view housekeeper performances`","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"zhenster"},"content":"Lists out all housekeeper performances recorded so far in a user-readable format. The performance","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"zhenster"},"content":"ratings are sorted in descending order (from highest to lowest). ","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"zhenster"},"content":"Format: `view housekeeper performances`","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"zhenster"},"content":"Example of usage:","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"zhenster"},"content":"`add housekeeper performance Fred Jones / 4`  \u003cbr /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"zhenster"},"content":"`add housekeeper performance Joe Johnson / 2`  \u003cbr /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"zhenster"},"content":"`add housekeeper performance John Smith / 3`  \u003cbr /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"zhenster"},"content":"`view housekeeper performances` ","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"zhenster"},"content":"Expected output:","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"zhenster"},"content":"The HousekeeperPerformance instance Fred Jones: 4 has been added to the list of housekeeper performances.","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"zhenster"},"content":"There are currently 1 recorded housekeeper performances.","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"zhenster"},"content":"The HousekeeperPerformance instance Joe Johnson: 2 has been added to the list of housekeeper performances.","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"zhenster"},"content":"There are currently 2 recorded housekeeper performances.","lastModifiedDate":"2022-03-28"},{"lineNumber":118,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"zhenster"},"content":"The HousekeeperPerformance instance John Smith: 3 has been added to the list of housekeeper performances.","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"zhenster"},"content":"There are currently 3 recorded housekeeper performances.","lastModifiedDate":"2022-03-28"},{"lineNumber":121,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":122,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Housekeeper Performance List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":123,"author":{"gitId":"zhenster"},"content":"1. [ Fred Jones ]: 4","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"zhenster"},"content":"2. [ John Smith ]: 3","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"zhenster"},"content":"3. [ Joe Johnson ]: 2","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"FaliciaOng"},"content":"## Housekeeper Related Commands","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"FaliciaOng"},"content":"### Adding Housekeeper Profile : `add housekeeper`","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":134,"author":{"gitId":"FaliciaOng"},"content":"Adds a new housekeeper profile into the list of housekeepers. The add profile command includes the name and age of the","lastModifiedDate":"2022-03-29"},{"lineNumber":135,"author":{"gitId":"FaliciaOng"},"content":"new housekeeper to be added.","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":137,"author":{"gitId":"FaliciaOng"},"content":"Format: `add housekeeper NAME / AGE`","lastModifiedDate":"2022-03-29"},{"lineNumber":138,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"FaliciaOng"},"content":"* The `NAME` can be in any format. For example, Susan1@.","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"FaliciaOng"},"content":"* The `AGE` must be between 21 and 60.","lastModifiedDate":"2022-03-29"},{"lineNumber":141,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":142,"author":{"gitId":"FaliciaOng"},"content":"Example of usage:","lastModifiedDate":"2022-03-29"},{"lineNumber":143,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":144,"author":{"gitId":"FaliciaOng"},"content":"`add housekeeper susan / 46`","lastModifiedDate":"2022-03-29"},{"lineNumber":145,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":146,"author":{"gitId":"FaliciaOng"},"content":"`add housekeeper jane / 33`","lastModifiedDate":"2022-03-29"},{"lineNumber":147,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":148,"author":{"gitId":"FaliciaOng"},"content":"Expected output:","lastModifiedDate":"2022-03-29"},{"lineNumber":149,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":150,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted ! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":151,"author":{"gitId":"FaliciaOng"},"content":"[SUSAN]: Age: 46, Availability: \u003cEnter Availability\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":152,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":153,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":154,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":155,"author":{"gitId":"FaliciaOng"},"content":"### View housekeeper list : `view recorded housekeeper`","lastModifiedDate":"2022-03-29"},{"lineNumber":156,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":157,"author":{"gitId":"FaliciaOng"},"content":"View all housekeeper in the list with their name, age and availability. Availability will not be shown if user","lastModifiedDate":"2022-03-29"},{"lineNumber":158,"author":{"gitId":"FaliciaOng"},"content":"have not entered it yet.","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"FaliciaOng"},"content":"Format: `view recorded housekeeper`","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"FaliciaOng"},"content":"Expected output:","lastModifiedDate":"2022-03-29"},{"lineNumber":163,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":164,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Housekeeper List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":165,"author":{"gitId":"FaliciaOng"},"content":"1. [SUSAN]: Age: 46, Availability: \u003cEnter Availability\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":166,"author":{"gitId":"FaliciaOng"},"content":"2. [JANE]: Age: 33, Availability: \u003cEnter Availability\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":167,"author":{"gitId":"FaliciaOng"},"content":"3. [SALLY]: Age: 60, Availability: ( Monday Tuesday )","lastModifiedDate":"2022-03-29"},{"lineNumber":168,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":170,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":171,"author":{"gitId":"FaliciaOng"},"content":"### Add Availability of Housekeeper : `availability`","lastModifiedDate":"2022-03-29"},{"lineNumber":172,"author":{"gitId":"FaliciaOng"},"content":"Declare housekeeper\u0027s availability in the week using numbers from 1 to 7 where each number represents a day in a week.","lastModifiedDate":"2022-03-29"},{"lineNumber":173,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":174,"author":{"gitId":"FaliciaOng"},"content":"Numbers from 1 to 7 are map to a day in a week by: \u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":175,"author":{"gitId":"FaliciaOng"},"content":"`1`: Monday \u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":176,"author":{"gitId":"FaliciaOng"},"content":"`2`: Tuesday \u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":177,"author":{"gitId":"FaliciaOng"},"content":"`3`: Wednesday\u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":178,"author":{"gitId":"FaliciaOng"},"content":"`4`: Thursday \u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":179,"author":{"gitId":"FaliciaOng"},"content":"`5`: Friday \u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":180,"author":{"gitId":"FaliciaOng"},"content":"`6`: Saturday \u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":181,"author":{"gitId":"FaliciaOng"},"content":"`7`: Sunday \u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":182,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":183,"author":{"gitId":"FaliciaOng"},"content":"Format: `availability NAME / DAYS`","lastModifiedDate":"2022-03-29"},{"lineNumber":184,"author":{"gitId":"FaliciaOng"},"content":"* `NAME` given must be in the records of housekeeper list to be eligible to add availability.","lastModifiedDate":"2022-03-29"},{"lineNumber":185,"author":{"gitId":"FaliciaOng"},"content":"* `DAYS` given must be between 1 and 7. Multiple days can be represented using commas.","lastModifiedDate":"2022-03-29"},{"lineNumber":186,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":187,"author":{"gitId":"FaliciaOng"},"content":"Example of usage:","lastModifiedDate":"2022-03-29"},{"lineNumber":188,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":189,"author":{"gitId":"FaliciaOng"},"content":"`availability sally / 1`","lastModifiedDate":"2022-03-29"},{"lineNumber":190,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":191,"author":{"gitId":"FaliciaOng"},"content":"`availability jane / 1,3,5,7`","lastModifiedDate":"2022-03-29"},{"lineNumber":192,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":193,"author":{"gitId":"FaliciaOng"},"content":"Expected output:","lastModifiedDate":"2022-03-29"},{"lineNumber":194,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":195,"author":{"gitId":"FaliciaOng"},"content":"`Added sally availability into records`","lastModifiedDate":"2022-03-29"},{"lineNumber":196,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":197,"author":{"gitId":"FaliciaOng"},"content":"### Delete Housekeeper: `delete housekeeper `","lastModifiedDate":"2022-03-29"},{"lineNumber":198,"author":{"gitId":"FaliciaOng"},"content":"When a housekeeper resigns, calling delete housekeeper command will remove housekeeper that resign from ","lastModifiedDate":"2022-03-29"},{"lineNumber":199,"author":{"gitId":"FaliciaOng"},"content":"the list of housekeepers. This command will also show number of housekeeper left in the list of housekeeper.","lastModifiedDate":"2022-03-29"},{"lineNumber":200,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":201,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":202,"author":{"gitId":"FaliciaOng"},"content":"Format: `delete housekeeper NAME`","lastModifiedDate":"2022-03-29"},{"lineNumber":203,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":204,"author":{"gitId":"FaliciaOng"},"content":"* `NAME` given must be in the records of housekeeper list to be eligible for deletion.","lastModifiedDate":"2022-03-29"},{"lineNumber":205,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":206,"author":{"gitId":"FaliciaOng"},"content":"Example of usage:","lastModifiedDate":"2022-03-29"},{"lineNumber":207,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":208,"author":{"gitId":"FaliciaOng"},"content":"delete housekeeper sally","lastModifiedDate":"2022-03-29"},{"lineNumber":209,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":210,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":211,"author":{"gitId":"FaliciaOng"},"content":"Expected output:","lastModifiedDate":"2022-03-29"},{"lineNumber":212,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":213,"author":{"gitId":"FaliciaOng"},"content":"Deleted sally from the list of profile","lastModifiedDate":"2022-03-29"},{"lineNumber":214,"author":{"gitId":"FaliciaOng"},"content":"Take note! Total pax of housekeeper:  2","lastModifiedDate":"2022-03-29"},{"lineNumber":215,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":216,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":217,"author":{"gitId":"FaliciaOng"},"content":"### Get Housekeepers Available on Interested Days : `get available on `","lastModifiedDate":"2022-03-29"},{"lineNumber":218,"author":{"gitId":"FaliciaOng"},"content":"Derive a list of housekeeper available from any day in a week. If command is used on days with no housekeeper ","lastModifiedDate":"2022-03-29"},{"lineNumber":219,"author":{"gitId":"FaliciaOng"},"content":"available, list printed will indicate that no housekeeper is available on that day.","lastModifiedDate":"2022-03-29"},{"lineNumber":220,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":221,"author":{"gitId":"FaliciaOng"},"content":"Format:","lastModifiedDate":"2022-03-29"},{"lineNumber":222,"author":{"gitId":"FaliciaOng"},"content":"`get available on DAY`","lastModifiedDate":"2022-03-29"},{"lineNumber":223,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":224,"author":{"gitId":"FaliciaOng"},"content":"* `DAY` have to be between 1 and 7.","lastModifiedDate":"2022-03-29"},{"lineNumber":225,"author":{"gitId":"FaliciaOng"},"content":"* Numbers from 1 to 7 are map to a `DAY` in a week by: \u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":226,"author":{"gitId":"FaliciaOng"},"content":"  `1`: Monday \u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":227,"author":{"gitId":"FaliciaOng"},"content":"  `2`: Tuesday \u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":228,"author":{"gitId":"FaliciaOng"},"content":"  `3`: Wednesday\u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":229,"author":{"gitId":"FaliciaOng"},"content":"  `4`: Thursday \u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":230,"author":{"gitId":"FaliciaOng"},"content":"  `5`: Friday \u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":231,"author":{"gitId":"FaliciaOng"},"content":"  `6`: Saturday \u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":232,"author":{"gitId":"FaliciaOng"},"content":"  `7`: Sunday \u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":233,"author":{"gitId":"FaliciaOng"},"content":"  ","lastModifiedDate":"2022-03-29"},{"lineNumber":234,"author":{"gitId":"FaliciaOng"},"content":"* Only one day can be enquired at a time.","lastModifiedDate":"2022-03-29"},{"lineNumber":235,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":236,"author":{"gitId":"FaliciaOng"},"content":"Example of usage:","lastModifiedDate":"2022-03-29"},{"lineNumber":237,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":238,"author":{"gitId":"FaliciaOng"},"content":"`get available on 1`","lastModifiedDate":"2022-03-29"},{"lineNumber":239,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":240,"author":{"gitId":"FaliciaOng"},"content":"`get available on 7`","lastModifiedDate":"2022-03-29"},{"lineNumber":241,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":242,"author":{"gitId":"FaliciaOng"},"content":"Expected output:","lastModifiedDate":"2022-03-29"},{"lineNumber":243,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":244,"author":{"gitId":"FaliciaOng"},"content":"If there exist any housekeeper on Monday:","lastModifiedDate":"2022-03-29"},{"lineNumber":245,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":246,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Monday List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":247,"author":{"gitId":"FaliciaOng"},"content":"1. sally","lastModifiedDate":"2022-03-29"},{"lineNumber":248,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":249,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":250,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":251,"author":{"gitId":"FaliciaOng"},"content":"If there is no housekeeper available on Monday:","lastModifiedDate":"2022-03-29"},{"lineNumber":252,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":253,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Monday List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":254,"author":{"gitId":"FaliciaOng"},"content":"TAKE NOTE! NO ONE IS AVAILABLE!!","lastModifiedDate":"2022-03-29"},{"lineNumber":255,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":256,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":257,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":258,"author":{"gitId":"FaliciaOng"},"content":"### Reset Housekeeper Availability: `is a new week`","lastModifiedDate":"2022-03-29"},{"lineNumber":259,"author":{"gitId":"FaliciaOng"},"content":"When a new week begins, all housekeeper availabilities can be reset by calling this command. For verification,","lastModifiedDate":"2022-03-29"},{"lineNumber":260,"author":{"gitId":"FaliciaOng"},"content":"command will also print out the list with all availabilities being reset.","lastModifiedDate":"2022-03-29"},{"lineNumber":261,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":262,"author":{"gitId":"FaliciaOng"},"content":"Format: `is a new week`","lastModifiedDate":"2022-03-29"},{"lineNumber":263,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":264,"author":{"gitId":"FaliciaOng"},"content":"Expected output:","lastModifiedDate":"2022-03-29"},{"lineNumber":265,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":266,"author":{"gitId":"FaliciaOng"},"content":"Housekeeper\u0027s availability has been reset!","lastModifiedDate":"2022-03-29"},{"lineNumber":267,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Housekeeper List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":268,"author":{"gitId":"FaliciaOng"},"content":"1. [SUSAN]: Age: 46, Availability: \u003cEnter Availability\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":269,"author":{"gitId":"FaliciaOng"},"content":"2. [JANE]: Age: 33, Availability: \u003cEnter Availability\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":270,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dmand Sum","lastModifiedDate":"2022-03-29"},{"lineNumber":271,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":272,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":273,"author":{"gitId":"FaliciaOng"},"content":"### Increase Age of All Housekeepers: `is a new year`","lastModifiedDate":"2022-03-29"},{"lineNumber":274,"author":{"gitId":"FaliciaOng"},"content":"When a new year begins, all housekeeper age can be increase by one through this command.","lastModifiedDate":"2022-03-29"},{"lineNumber":275,"author":{"gitId":"FaliciaOng"},"content":"As the age limit of working as a housekeeper in the hotel is 21 to 60 years old, housekeeper","lastModifiedDate":"2022-03-29"},{"lineNumber":276,"author":{"gitId":"FaliciaOng"},"content":"that exceed age limit of 60 after increment will be removed from the list of housekeeper. A list of","lastModifiedDate":"2022-03-29"},{"lineNumber":277,"author":{"gitId":"FaliciaOng"},"content":"housekeeper exceeding age limit will be shown when removing.","lastModifiedDate":"2022-03-29"},{"lineNumber":278,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":279,"author":{"gitId":"FaliciaOng"},"content":"Format: `is a new year`","lastModifiedDate":"2022-03-29"},{"lineNumber":280,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":281,"author":{"gitId":"FaliciaOng"},"content":"Expected output:","lastModifiedDate":"2022-03-29"},{"lineNumber":282,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":283,"author":{"gitId":"FaliciaOng"},"content":"If list of housekeeper has housekeeper which exceed age limit:","lastModifiedDate":"2022-03-29"},{"lineNumber":284,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":285,"author":{"gitId":"FaliciaOng"},"content":"Everyone age has increased by one","lastModifiedDate":"2022-03-29"},{"lineNumber":286,"author":{"gitId":"FaliciaOng"},"content":"**Over age limit housekeeper will be removed from list**","lastModifiedDate":"2022-03-29"},{"lineNumber":287,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Age Limit Exceed List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":288,"author":{"gitId":"FaliciaOng"},"content":"1. [LUCY]: Age: 60, Availability: \u003cEnter Availability\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":289,"author":{"gitId":"FaliciaOng"},"content":"2. [JON]: Age: 60, Availability: \u003cEnter Availability\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":290,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":291,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":292,"author":{"gitId":"FaliciaOng"},"content":"If none of the housekeeper exceed age limit:","lastModifiedDate":"2022-03-29"},{"lineNumber":293,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":294,"author":{"gitId":"FaliciaOng"},"content":"Everyone age has increased by one","lastModifiedDate":"2022-03-29"},{"lineNumber":295,"author":{"gitId":"FaliciaOng"},"content":"**Over age limit housekeeper will be removed from list**","lastModifiedDate":"2022-03-29"},{"lineNumber":296,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Age Limit Exceed List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":297,"author":{"gitId":"FaliciaOng"},"content":"Everyone is within age limit","lastModifiedDate":"2022-03-29"},{"lineNumber":298,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":299,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":302,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":304,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":306,"author":{"gitId":"-"},"content":"**A**: {your answer here}","lastModifiedDate":"2020-05-24"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":308,"author":{"gitId":"FaliciaOng"},"content":"## Commary","lastModifiedDate":"2022-03-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":310,"author":{"gitId":"-"},"content":"{Give a \u0027cheat sheet\u0027 of commands here}","lastModifiedDate":"2020-05-24"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":312,"author":{"gitId":"-"},"content":"* Add todo `todo n/TODO_NAME d/DEADLINE`","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"zhenster":107,"FaliciaOng":172,"-":33}},{"path":"docs/team/aimanimtiaz.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"# Aiman Imtiaz - Project Portfolio Page","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"## Overview","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"Responsible for assigning available staff to rooms.","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"### Summary of Contributions","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"aiman-imtiaz":7}},{"path":"docs/team/alinazheng_addsatisfactioncommand_uml/AddSatisfactionCommandObjectDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"\u0027https://plantuml.com/object-diagram","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"\u0027object London","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"\u0027object Washington","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"\u0027object Berlin","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"\u0027object NewYork","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"\u0027","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"\u0027map CapitalCity {","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"\u0027 UK *-\u003e London","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"\u0027 USA *--\u003e Washington","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"\u0027 Germany *---\u003e Berlin","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"\u0027}","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"\u0027","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"\u0027NewYork --\u003e CapitalCity::USA","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"object Duke","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"object SatisfactionList","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"SatisfactionList : name \u003d \"satisfactionList\"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"object Command","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"Command : name \u003d \"command\"","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"object CommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"CommandParser : name \u003d \"commandParser\"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"object AddSatisfactionCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"object Satisfaction","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"Satisfaction : name \u003d \"satisfaction\"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"Duke --\u003e SatisfactionList","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"Duke ..\u003e CommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"Duke ..\u003e Command","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"CommandParser ..\u003e AddSatisfactionCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"AddSatisfactionCommand --\u003e Satisfaction","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"AddSatisfactionCommand --|\u003e Command","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"SatisfactionList ..\u003e Satisfaction","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"@enduml","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"zhenster":45}},{"path":"docs/team/alinazheng_addsatisfactioncommand_uml/AddSatisfactionCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"\u0027autonumber","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"\u0027","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"\u0027Alice -\u003e Bob: Authentication Request","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"\u0027Bob --\u003e Alice: Authentication Response","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"\u0027","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"\u0027Alice -\u003e Bob: Another authentication Request","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"\u0027Alice \u003c-- Bob: another authentication Response","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"Duke --\u003e\u003e SatisfactionList ** : SatisfactionList()","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"User -\u003e Duke ++: run()","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"Duke --\u003e\u003e CommandParser ** : CommandParser()","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"User -\u003e Duke ++ : add satisfaction Bob 5","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"Duke -\u003e CommandParser ++ : parse(add satisfaction Bob 5)","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"CommandParser -\u003e\u003e AddSatisfactionCommand ** : AddSatisfactionCommand()","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"AddSatisfactionCommand -\u003e AddSatisfactionCommand ++ : extractCustomerName()","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"AddSatisfactionCommand -\u003e AddSatisfactionCommand ++ : extractSatisfactionValue()","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"AddSatisfactionCommand --\u003e\u003e Satisfaction ** : Satisfaction(Bob, 5)","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"Duke -\u003e AddSatisfactionCommand ++ : execute(SatisfactionList)","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"AddSatisfactionCommand -\u003e SatisfactionList ++: addSatisfaction(Satisfaction)","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"zhenster":22}},{"path":"docs/team/xunyi_checkroombylevelcommand_uml/checkRoomByLevel_Squence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"autonumber","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"Duke -\u003e CommandParser: parse(check level 2)","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"CommandParser -\u003e CheckRoomByLevelCommand: CheckRoomByLevelCommand()","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"Duke -\u003e CheckRoomByLevelCommand: execute()","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"CheckRoomByLevelCommand -\u003e CheckRoomByLevelCommand: isValidLevel \u003d isValidLevel(2,roomList)","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"CheckRoomByLevelCommand -\u003e CheckRoomByLevelCommand: printRoom(2,roomList)","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"XunyiiZ":12}},{"path":"src/main/java/seedu/duke/AddAvailabilityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":" * Identifies the name and availability of the housekeeper and update availability into the","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":" * housekeeper list.","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"public class AddAvailabilityCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"    private String name;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"    private String availability;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"    private static final String AVAILABILITY_INDICATE \u003d \"/\";","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"    private static final int MONDAY_INDICATE \u003d 1;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"    private static final int SUNDAY_INDICATE \u003d 7;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"    private static Logger logger \u003d Logger.getLogger(\"housekeeperLogger\");","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"    public AddAvailabilityCommand(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"        String[] input;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"        String inputName;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"        String inputAvailability;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"        if (commandStringWithoutCommand.isEmpty()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidAvailabilityException();","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"        try {","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"            input \u003d extractInput(commandStringWithoutCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"            inputName \u003d input[0].trim();","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"            inputAvailability \u003d input[1].trim();","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"            logger.log(Level.WARNING, \"Availability Housekeeper command is found to be empty.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidAvailabilityException();","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"        String name \u003d checkValidExtract(inputName);","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"        String availability \u003d checkValidAvailability(inputAvailability);","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"        assert (!name.isEmpty()) : \"Name of Housekeeper should not be empty.\";","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"        assert (!availability.isEmpty()) : \"Availability should not be empty\";","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"        setName(name);","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"        setAvailability(availability);","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"     * This method checks if the availability given by the user is valid. It is valid if any of the days in week given","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"     * is within 1 to 7 where 1 represents Monday and 7 represents Sunday.","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"     * @param inputAvailability Availability given by the user.","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"     * @return A valid availability.","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"FaliciaOng"},"content":"     * @throws InvalidDayException When the given availability is not integer and between 1 and 7.","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"FaliciaOng"},"content":"    private String checkValidAvailability(String inputAvailability) throws InvalidDayException,","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"FaliciaOng"},"content":"            InvalidAvailabilityException {","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"FaliciaOng"},"content":"        String availability \u003d checkValidExtract(inputAvailability);","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"FaliciaOng"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"FaliciaOng"},"content":"            String[] splitDays \u003d availability.split(\",\");","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"FaliciaOng"},"content":"            for (String day : splitDays) {","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"FaliciaOng"},"content":"                String validDay \u003d checkLengthInput(day);","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"                int availableDay \u003d Integer.parseInt(validDay);","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"FaliciaOng"},"content":"                if (availableDay \u003c MONDAY_INDICATE || availableDay \u003e SUNDAY_INDICATE) {","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"FaliciaOng"},"content":"                    logger.log(Level.WARNING, \"Days given were not valid.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"FaliciaOng"},"content":"                    throw new InvalidDayException();","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"FaliciaOng"},"content":"                }","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"FaliciaOng"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"FaliciaOng"},"content":"        } catch (NumberFormatException numberError) {","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"FaliciaOng"},"content":"            logger.log(Level.WARNING, \"Number given not Integer.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidDayException();","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"FaliciaOng"},"content":"        return availability;","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"FaliciaOng"},"content":"     * This method ensures that the derive day has a length of one as the user only can key in a single integer","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"FaliciaOng"},"content":"     * number.","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"FaliciaOng"},"content":"     * @param day Number used to indicate the day in the week.","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"FaliciaOng"},"content":"     * @return Valid day.","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"FaliciaOng"},"content":"     * @throws InvalidDayException When the day given has length more than1. Eg (12,2DF)","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"FaliciaOng"},"content":"    private String checkLengthInput(String day) throws InvalidDayException {","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"FaliciaOng"},"content":"        String trimmedDay \u003d day.trim();","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"FaliciaOng"},"content":"        if (trimmedDay.length() \u003e 1) {","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"FaliciaOng"},"content":"            logger.log(Level.WARNING, \"Length given was more than 1.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidDayException();","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"FaliciaOng"},"content":"        assert (trimmedDay.length() \u003d\u003d 1) : \"Day mention has more than length of 1\";","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"FaliciaOng"},"content":"        return trimmedDay;","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"FaliciaOng"},"content":"     * This method verifies that input given by user is not empty.","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"FaliciaOng"},"content":"     * @param inputGiven Either the name or availability given by user.","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"FaliciaOng"},"content":"     * @return Either the valid Name or Availability.","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"FaliciaOng"},"content":"     * @throws InvalidAvailabilityException When input given is empty.","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"FaliciaOng"},"content":"    private String checkValidExtract(String inputGiven) throws InvalidAvailabilityException {","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"FaliciaOng"},"content":"        if (inputGiven.isEmpty()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidAvailabilityException();","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"FaliciaOng"},"content":"        return inputGiven;","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"FaliciaOng"},"content":"     * Method used to extract the name and availability of the housekeeper.","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"FaliciaOng"},"content":"     * @param commandStringWithoutCommand Input entered by the user.","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"FaliciaOng"},"content":"     * @return Input consisting of housekeeper name and availability.","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"FaliciaOng"},"content":"     * @throws HotelLiteManagerException When description of availability is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"FaliciaOng"},"content":"    private String[] extractInput(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"FaliciaOng"},"content":"        boolean isSymbolIncorrect \u003d !commandStringWithoutCommand.contains(AVAILABILITY_INDICATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"FaliciaOng"},"content":"        if (isSymbolIncorrect) {","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"FaliciaOng"},"content":"            logger.log(Level.WARNING, \"Availability Housekeeper command usage is wrong.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidAvailabilityException();","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"FaliciaOng"},"content":"        String[] input \u003d commandStringWithoutCommand.split(AVAILABILITY_INDICATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"FaliciaOng"},"content":"        return input;","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"FaliciaOng"},"content":"    public String getName() {","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"FaliciaOng"},"content":"        return name;","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"FaliciaOng"},"content":"    public void setName(String name) {","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"FaliciaOng"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"FaliciaOng"},"content":"    public String getAvailability() {","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"FaliciaOng"},"content":"        return availability;","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"FaliciaOng"},"content":"    public void setAvailability(String availability) {","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"FaliciaOng"},"content":"        this.availability \u003d availability;","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"FaliciaOng"},"content":"     * Get the Name of the housekeeper and verify that housekeeper is in records. If in records, add","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"FaliciaOng"},"content":"     * his/her availability into housekeeper list.","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"FaliciaOng"},"content":"     * @param ui The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":140,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"FaliciaOng"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws UserDoesNotExistException {","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"XunyiiZ"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"FaliciaOng"},"content":"        ui.printMessage(\"Added \" + name + \" availability into records\");","lastModifiedDate":"2022-03-29"},{"lineNumber":145,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.addAvailabilityInList(name, availability);","lastModifiedDate":"2022-03-29"},{"lineNumber":146,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"FaliciaOng":145,"XunyiiZ":1,"siewyangzhi":1}},{"path":"src/main/java/seedu/duke/AddHousekeeperCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":" * Extract name and age of housekeeper from user input and record it into the housekeeper list.","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"public class AddHousekeeperCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    private Housekeeper housekeeper;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"    private static final String AGE_INDICATE \u003d \"/\";","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"    private static final int MIN_AGE_ACCEPTED \u003d 21;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"    private static final int MAX_AGE_ACCEPTED \u003d 60;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"    private static Logger logger \u003d Logger.getLogger(\"housekeeperLogger\");","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"     * Creates a new housekeeper profile consisting of their name and age which would be recorded","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"     * into housekeeper list.","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"     * @param commandStringWithoutCommand Input of age and name given by user.","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"     * @throws HotelLiteManagerException When user input an empty data.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"    public AddHousekeeperCommand(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"        if (commandStringWithoutCommand.isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"            logger.log(Level.WARNING, \"Housekeeper command usage is found to be wrong.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidHousekeeperProfile();","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeper \u003d extractDetails(commandStringWithoutCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"        setHousekeeper(housekeeper);","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"     * Extract name and age details of the housekeeper.","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"     * @param commandStringWithoutCommand Input given by user.","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"     * @return housekeeper profile.","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"     * @throws InvalidAgeException       Age enter is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"     * @throws InvalidHousekeeperProfile Command enter regarding the housekeeper profile is wrong.","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"    private Housekeeper extractDetails(String commandStringWithoutCommand)","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"            throws InvalidAgeException, InvalidHousekeeperProfile, UnderAgeException, OverAgeException {","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"        boolean isSymbolIncorrect \u003d !commandStringWithoutCommand.contains(AGE_INDICATE);","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"        if (isSymbolIncorrect) {","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"            logger.log(Level.WARNING, \"Housekeeper command usage is found to be wrong.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidHousekeeperProfile();","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"FaliciaOng"},"content":"        String[] input;","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"FaliciaOng"},"content":"        String inputAge;","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"FaliciaOng"},"content":"        String inputName;","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"FaliciaOng"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"FaliciaOng"},"content":"            input \u003d commandStringWithoutCommand.split(AGE_INDICATE);","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"FaliciaOng"},"content":"            inputName \u003d input[0];","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"FaliciaOng"},"content":"            inputAge \u003d input[1];","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"FaliciaOng"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"FaliciaOng"},"content":"            logger.log(Level.WARNING, \"Housekeeper command is found to be empty.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidHousekeeperProfile();","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"FaliciaOng"},"content":"        int ageNumber;","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"FaliciaOng"},"content":"        String name;","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"FaliciaOng"},"content":"        name \u003d extractName(inputName);","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"FaliciaOng"},"content":"        ageNumber \u003d extractAge(inputAge);","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"FaliciaOng"},"content":"        assert (!name.isEmpty()) : \"Housekeeper name should not be empty.\";","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeper \u003d new Housekeeper(name, ageNumber);","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"FaliciaOng"},"content":"        return housekeeper;","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"FaliciaOng"},"content":"     * This method extracts the age of housekeeper from the user input.","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"FaliciaOng"},"content":"     * @param inputAge Input age given by user.","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"FaliciaOng"},"content":"     * @return Valid age.","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"FaliciaOng"},"content":"     * @throws InvalidAgeException When age given is not valid.","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"FaliciaOng"},"content":"    private int extractAge(String inputAge) throws InvalidAgeException, UnderAgeException, OverAgeException {","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"FaliciaOng"},"content":"        int ageNumber;","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"FaliciaOng"},"content":"        String age;","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"FaliciaOng"},"content":"        try {","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"FaliciaOng"},"content":"            age \u003d inputAge.trim();","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"FaliciaOng"},"content":"            ageNumber \u003d Integer.parseInt(age);","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"FaliciaOng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidAgeException();","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"FaliciaOng"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidAgeException();","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"FaliciaOng"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidAgeException();","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"FaliciaOng"},"content":"        assert (!age.isEmpty()) : \"Age should not be empty.\";","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"FaliciaOng"},"content":"        if (ageNumber \u003c MIN_AGE_ACCEPTED) {","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"FaliciaOng"},"content":"            throw new UnderAgeException();","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"FaliciaOng"},"content":"        if (ageNumber \u003e MAX_AGE_ACCEPTED) {","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"FaliciaOng"},"content":"            throw new OverAgeException();","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"FaliciaOng"},"content":"        assert (ageNumber \u003e\u003d MIN_AGE_ACCEPTED \u0026 ageNumber \u003c\u003d MAX_AGE_ACCEPTED) : \"Age range is invalid.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"FaliciaOng"},"content":"        return ageNumber;","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"FaliciaOng"},"content":"     * This method extracts the name of the housekeeper from the user input.","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"FaliciaOng"},"content":"     * @param inputName Input name give by user.","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"FaliciaOng"},"content":"     * @return Valid name.","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"FaliciaOng"},"content":"     * @throws InvalidHousekeeperProfile When name given is empty","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"FaliciaOng"},"content":"    private String extractName(String inputName) throws InvalidHousekeeperProfile {","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"FaliciaOng"},"content":"        String name;","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"FaliciaOng"},"content":"        try {","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"FaliciaOng"},"content":"            name \u003d inputName.trim();","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"FaliciaOng"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidHousekeeperProfile();","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"FaliciaOng"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidHousekeeperProfile();","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"FaliciaOng"},"content":"        return name;","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"FaliciaOng"},"content":"    public Housekeeper getHousekeeper() {","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"FaliciaOng"},"content":"        return housekeeper;","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"FaliciaOng"},"content":"    public void setHousekeeper(Housekeeper housekeeper) {","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"FaliciaOng"},"content":"        this.housekeeper \u003d housekeeper;","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"FaliciaOng"},"content":"     * Method to add new housekeeper profile into list and rejects any profile that has already been recorded.","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"FaliciaOng"},"content":"     * @param ui The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"XunyiiZ"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws InvalidUserException {","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"XunyiiZ"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.addHousekeeperInList(getHousekeeper());","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"FaliciaOng"},"content":"        ui.printHousekeeperNoted(housekeeper);","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"FaliciaOng":135,"XunyiiZ":2,"siewyangzhi":1}},{"path":"src/main/java/seedu/duke/AddHousekeeperPerformanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":" * Represents a command to add a new HousekeeperPerformance object to the HousekeeperPerformanceList.","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":" * In other words, implements the user command of recording a housekeeper\u0027s name and their performance rating.","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"public class AddHousekeeperPerformanceCommand extends Command {","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"    private HousekeeperPerformance housekeeperPerformance;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"    private static Logger logger \u003d Logger.getLogger(\"housekeeperPerformanceLogger\");","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"     * Takes in the user input and checks if the formatting of the command for","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"     * adding a housekeeper\u0027s performance rating is valid.","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"     * Extracts the housekeeper\u0027s name and performance rating from the user input and creates an","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"     * AddHousekeeperPerformanceCommand object.","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"     * @throws HotelLiteManagerException If there is no \"/\" character included in the user input, if there is no","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"     *                                   housekeeper name provided, if there is no housekeeper rating provided, or if","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"     *                                   the rating is invalid (not an integer from 1-5 inclusive).","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"    public AddHousekeeperPerformanceCommand(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"        if (!userInput.contains(\"/\")) {","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"            logger.log(Level.WARNING, \"A \u0027/\u0027 character is needed to separate the housekeeper\u0027s name \"","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"                    + \"from their rating.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"        String housekeeperName \u003d extractHousekeeperName(userInput);","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"        int housekeeperRating \u003d extractHousekeeperRating(userInput);","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"        HousekeeperPerformance housekeeperPerformance \u003d new HousekeeperPerformance(housekeeperName, housekeeperRating);","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"        setHousekeeperPerformance(housekeeperPerformance);","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"     * Returns the housekeeper\u0027s name that is extracted from user input.","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"     * @return The name of the housekeeper specified in the user input.","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"     * @throws HotelLiteManagerException if the name provided by the user is empty.","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"    public String extractHousekeeperName(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"        String[] splitInput \u003d userInput.split(\"/\");","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"        String housekeeperName \u003d \"\";","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"            housekeeperName \u003d splitInput[0].trim();","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"            if (housekeeperName.isEmpty()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"                throw new EmptyHousekeeperPerformanceNameException();","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"zhenster"},"content":"            throw new EmptyHousekeeperPerformanceNameException();","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"zhenster"},"content":"        return housekeeperName;","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"zhenster"},"content":"     * Returns the housekeeper\u0027s performance rating that is extracted from user input.","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"zhenster"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"zhenster"},"content":"     * @return The performance rating of the housekeeper specified in user input.","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"     * @throws HotelLiteManagerException if the performance rating provided by the user is empty.","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"zhenster"},"content":"    public int extractHousekeeperRating(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"zhenster"},"content":"        String[] splitInput \u003d userInput.split(\"/\");","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"zhenster"},"content":"        String ratingString \u003d splitInput[1].trim();","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"zhenster"},"content":"        int ratingValue;","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"zhenster"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"zhenster"},"content":"            ratingValue \u003d Integer.parseInt(ratingString);","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"zhenster"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"zhenster"},"content":"            throw new InvalidHousekeeperPerformanceRatingException();","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"zhenster"},"content":"        if (ratingValue \u003c 1 || ratingValue \u003e 5) {","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"zhenster"},"content":"            throw new InvalidHousekeeperPerformanceRatingException();","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"zhenster"},"content":"        return ratingValue;","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"zhenster"},"content":"    public HousekeeperPerformance getHousekeeperPerformance() {","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"zhenster"},"content":"        return housekeeperPerformance;","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"zhenster"},"content":"    public void setHousekeeperPerformance(HousekeeperPerformance housekeeperPerformance) {","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"zhenster"},"content":"        this.housekeeperPerformance \u003d housekeeperPerformance;","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"zhenster"},"content":"     * Adds a new HousekeeperPerformance object to the HousekeeperPerformanceList using the","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"zhenster"},"content":"     * housekeeper name and performance rating found in the housekeeperPerformance instance variable.","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"zhenster"},"content":"     * Returns an acknowledgement message to inform the user that the performance has been recorded.","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"zhenster"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"zhenster"},"content":"     * @param listContainer The object containing the data structures necessary for recording a housekeeper\u0027s","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"zhenster"},"content":"     *                      performance. In this case, we are manipulating the housekeeperPerformanceList object","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"zhenster"},"content":"     *                      (adding to it), and we require information from the housekeeperList object.","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"zhenster"},"content":"     * @param ui The object that deals with user interface for the program.","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"zhenster"},"content":"     * @throws HotelLiteManagerException if the item name within the item object does not exist in the item list.","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"siewyangzhi"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"XunyiiZ"},"content":"        HousekeeperPerformanceList housekeeperPerformanceList \u003d listContainer.getHousekeeperPerformanceList();","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"zhenster"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"zhenster"},"content":"        // Checks if the user tries to add a housekeeper performance for a housekeeper not the HousekeeperList records","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"zhenster"},"content":"        if (!housekeeperList.hasNameAdded(housekeeperPerformance.getName())) {","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"zhenster"},"content":"            throw new NonexistentHousekeeperException();","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"zhenster"},"content":"        } else if (housekeeperPerformanceList.isHousekeeperInPerformanceList(housekeeperPerformance.getName())) {","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"zhenster"},"content":"            throw new RepeatHousekeeperPerformanceNameException();","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"zhenster"},"content":"        housekeeperPerformanceList.addHousekeeperPerformance(housekeeperPerformance);","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"zhenster"},"content":"        ui.printAddHousekeeperPerformanceAcknowledgementMessage(housekeeperPerformanceList, housekeeperPerformance);","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"zhenster":112,"XunyiiZ":1,"siewyangzhi":2}},{"path":"src/main/java/seedu/duke/AddSatisfactionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":" * Class that implements execution behavior for adding a Satisfaction","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":" * object (e.g. when user types \"Add Satisfaction [customerName] [satisfactionValue]\").","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":" * Constructor creates the Satisfaction object from user input, and execute","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":" * method overrides the Command class\u0027s execute method to add the Satisfaction","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":" * object to the given satisfactionList (data structure that stores all the","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":" * Satisfaction objects). Each Satisfaction object corresponds to a customer and","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":" * a satisfaction rating from1 to 5 inclusive.","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"public class AddSatisfactionCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"    private Satisfaction satisfaction;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"    private static Logger logger \u003d Logger.getLogger(\"satisfactionLogger\");","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"     * Extracts the customer name and satisfaction value from user input,","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"     * uses these two values to create a corresponding Satisfaction object.","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"     * @param userInput The user input (should be of form \"[customerName] [satisfactionValue]\").","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"     * @throws HotelLiteManagerException If there is an error in user input (e.g. empty customer name, empty","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"     *                                   satisfaction value, or invalid satisfaction value).","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"    public AddSatisfactionCommand(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"        userInput \u003d userInput.toLowerCase();","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"        if (!userInput.contains(\"/\")) {","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"            logger.log(Level.WARNING, \"A \u0027/\u0027 character is needed to separate the customer\u0027s name \"","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"                    + \"from their rating.\");","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"        String customerName \u003d extractCustomerName(userInput);","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"        int satisfactionValue \u003d extractSatisfactionValue(userInput);","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"        assert (!customerName.isEmpty()) : \"The customer\u0027s name should be non-empty.\";","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"        assert (satisfactionValue \u003c\u003d 5 \u0026\u0026 satisfactionValue \u003e\u003d 1) : \"The satisfaction value must be an integer between\"","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"                + \"1 and 5.\";","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"        Satisfaction satisfaction \u003d new Satisfaction(customerName, satisfactionValue);","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"        setSatisfaction(satisfaction);","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"     * Helper method for AddSatisfactionCommand. Extracts the customer\u0027s name","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"     * from the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"     * @param userInput The user input (should be of form \"[customerName] [satisfactionValue]\").","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"     * @return The name of the customer (String).","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"     * @throws HotelLiteManagerException If there is an error in user input (the customer\u0027s name is empty).","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"zhenster"},"content":"    private String extractCustomerName(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"zhenster"},"content":"        String[] splitInput \u003d userInput.split(\"/\");","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"zhenster"},"content":"        String customerName \u003d \"\";","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"zhenster"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"zhenster"},"content":"            customerName \u003d splitInput[0].trim();","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"zhenster"},"content":"            if (customerName.isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"zhenster"},"content":"                throw new EmptySatisfactionCustomerException();","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"zhenster"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"            throw new EmptySatisfactionValueException();","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"zhenster"},"content":"        return customerName;","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"zhenster"},"content":"     * Helper method for AddSatisfactionCommand. Extracts the customer\u0027s satisfaction value","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"zhenster"},"content":"     * from user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"zhenster"},"content":"     * @param userInput The user input (should be of form \"[customerName] [satisfactionValue]\").","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"zhenster"},"content":"     * @return The customer\u0027s satisfaction value (should be an integer from 1-5 inclusive).","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"zhenster"},"content":"     * @throws HotelLiteManagerException If there is an error in user input (the satisfaction value is","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"zhenster"},"content":"     *                                   empty or is not an integer between 1 and 5).","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"zhenster"},"content":"    private int extractSatisfactionValue(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"zhenster"},"content":"        String[] splitInput \u003d userInput.split(\"/\");","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"zhenster"},"content":"        if (splitInput.length \u003c 2) {","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"zhenster"},"content":"            throw new EmptySatisfactionValueException();","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"zhenster"},"content":"        String satisfactionString \u003d splitInput[1].trim();","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"zhenster"},"content":"        int satisfactionValue;","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"zhenster"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"zhenster"},"content":"            satisfactionValue \u003d Integer.parseInt(satisfactionString);","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"zhenster"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"zhenster"},"content":"            throw new InvalidSatisfactionValueException();","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"zhenster"},"content":"        if (satisfactionValue \u003c 1 || satisfactionValue \u003e 5) {","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"zhenster"},"content":"            throw new InvalidSatisfactionValueException();","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"zhenster"},"content":"        return satisfactionValue;","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":96,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"zhenster"},"content":"     * Override of execute command in Command class.","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"zhenster"},"content":"     * Adds the Satisfaction object created in the constructor","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"zhenster"},"content":"     * to the given list of Satisfaction objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"zhenster"},"content":"     * @param satisfactionList The given list of Satisfaction objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"zhenster"},"content":"     * @param roomList The given list of Room objects. N/A for this class, but","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"zhenster"},"content":"     *                 must be included for the execution override.","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"zhenster"},"content":"     * @param itemList The given list of Item objects. N/A for this class, but","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"zhenster"},"content":"     *                 must be included for the execution override.","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"zhenster"},"content":"     * @param ui The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"siewyangzhi"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"XunyiiZ"},"content":"        SatisfactionList satisfactionList \u003d listContainer.getSatisfactionList();","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"zhenster"},"content":"        if (satisfactionList.isCustomerInSatisfactionList(satisfaction.getCustomerName())) {","lastModifiedDate":"2022-03-19"},{"lineNumber":111,"author":{"gitId":"zhenster"},"content":"            throw new RepeatCustomerException();","lastModifiedDate":"2022-03-19"},{"lineNumber":112,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":113,"author":{"gitId":"zhenster"},"content":"        satisfactionList.addSatisfaction(satisfaction);","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"zhenster"},"content":"        ui.printAddSatisfactionAcknowledgementMessage(satisfactionList, satisfaction);","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"zhenster"},"content":"    public Satisfaction getSatisfaction() {","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"zhenster"},"content":"        return satisfaction;","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"zhenster"},"content":"    public void setSatisfaction(Satisfaction satisfaction) {","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"zhenster"},"content":"        this.satisfaction \u003d satisfaction;","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":118,"aiman-imtiaz":3,"XunyiiZ":1,"siewyangzhi":3}},{"path":"src/main/java/seedu/duke/AgeIncreaseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"public class AgeIncreaseCommand extends Command {","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"     * Increases all housekeeper\u0027s age by one and records housekeeper who has exceed age limit. Housekeeper who exceed","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"     * age limit will be removed from the list.","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"     * @param listContainer The list of information.","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"     * @param ui The instance of the Ui class used for printing additional messages when a command is executed.","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"    public void execute(ListContainer listContainer, Ui ui) {","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.increaseAllAgeByOne();","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"        ui.printMessage(\"Everyone age has increased by one\");","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"        ArrayList\u003cHousekeeper\u003e overAgeHousekeeperList \u003d housekeeperList.getHousekeeperExceedValidAgeList();","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"        ui.printMessage(\"**Over age limit housekeeper will be removed from list**\");","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"        ui.printOverAgeList(overAgeHousekeeperList);","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.deleteOverAgeHousekeeper();","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"FaliciaOng":24,"siewyangzhi":1}},{"path":"src/main/java/seedu/duke/AssignmentMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.storage.AssignmentListFileManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"public class AssignmentMap {","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"    HashMap\u003cInteger, String\u003e map;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"    public AssignmentMap(HashMap\u003cInteger, String\u003e map) {","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"        this.map \u003d map;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"    public void addAssignment(String name, int roomId) {","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"        map.put(roomId, name);","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"    public String getHouseKeeperNameByRoom(int roomId) {","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"        if (!map.containsKey(roomId)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"            return \"NA\";","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"        return map.get(roomId);","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"aiman-imtiaz"},"content":"    public void removeAssignment(String name) {","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"aiman-imtiaz"},"content":"        for (Map.Entry\u003cInteger, String\u003e entry: map.entrySet()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"aiman-imtiaz"},"content":"            if (entry.getValue().equals(name)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"aiman-imtiaz"},"content":"                int k \u003d entry.getKey();","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"aiman-imtiaz"},"content":"                map.remove(k);","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"aiman-imtiaz"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"XunyiiZ"},"content":"    public void save() throws IOException {","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"XunyiiZ"},"content":"        AssignmentListFileManager assignmentListFileManager \u003d new AssignmentListFileManager();","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"XunyiiZ"},"content":"        assignmentListFileManager.save(map);","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"aiman-imtiaz":22,"XunyiiZ":18}},{"path":"src/main/java/seedu/duke/AverageSatisfactionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" * Class that implements execution behavior for user command","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":" * \"average satisfaction.\" Contains override of execution","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":" * method in Command class that calculations the average","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":" * customer satisfaction rating of the given list of Satisfaction","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":" * objects.","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"public class AverageSatisfactionCommand extends Command {","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"     * Override of execute command in Command class.","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"     * Calculates the average customer satisfaction rating of the","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"     * given satisfactionList.","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"     * @param ui The user interface for this execution method.","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"        SatisfactionList satisfactionList \u003d listContainer.getSatisfactionList();","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"        System.out.println(\"Average customer satisfaction: \" + satisfactionList.calculateAverageSatisfaction());","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"zhenster":24,"XunyiiZ":1,"siewyangzhi":3}},{"path":"src/main/java/seedu/duke/CheckAllRoomCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":" * Class that implements execution behavior for listing all room.","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":" * information with its type, room id, level and vacancy status.","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"public class CheckAllRoomCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    private RoomList roomList;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"    public CheckAllRoomCommand() {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"     * Override of execute command in Command class.","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"     * Print out all room information including:","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"     * type, room number, level and status.","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"     * @param listContainer dfajdfkfl","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"     * @param ui            The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"    public void execute(ListContainer listContainer, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"        this.roomList \u003d listContainer.getRoomList();","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"        AssignmentMap assignmentMap \u003d listContainer.getAssignmentMap();","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"        ui.printTableHeader();","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"        for (Room room : roomList.getRoomList()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"            System.out.println(room.toString() + \"\\t\\t\\t\"","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"                    + assignmentMap.getHouseKeeperNameByRoom(room.getRoomId()));","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":11,"XunyiiZ":21,"siewyangzhi":2}},{"path":"src/main/java/seedu/duke/CheckInCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":" * Class that checks in a room and changes the status","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":" * of the room to be occupied.","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"public class CheckInCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"    RoomList roomList;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"    int roomId;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"     * Override of execute command in Command class.","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"     * Check in room with corresponding room number.","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"     * The room status will be changed to occupied.","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"     * After check in, it will print out corresponding room information.","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"     * @param listContainer asd","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"     * @param ui            The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"     * @throws InvalidRoomNumberException if the room number is not in the room list.","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws InvalidRoomNumberException, IOException {","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"        this.roomList \u003d listContainer.getRoomList();","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"        AssignmentMap assignmentMap \u003d listContainer.getAssignmentMap();","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"        for (Room room : roomList.getRoomList()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"            if (room.getRoomId() \u003d\u003d roomId) {","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"                room.checkIn();","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"XunyiiZ"},"content":"                ui.printTableHeader();","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"XunyiiZ"},"content":"                System.out.println(room + \"\\t\\t\\t\"","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"XunyiiZ"},"content":"                        + assignmentMap.getHouseKeeperNameByRoom(room.getRoomId()));","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"XunyiiZ"},"content":"                roomList.save();","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"                return;","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"        throw new InvalidRoomNumberException();","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"XunyiiZ"},"content":"     * Constructor that initializes the roomId.","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"XunyiiZ"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"XunyiiZ"},"content":"     * @param command contains the roomId.","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"    public CheckInCommand(String command) {","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"        roomId \u003d Integer.parseInt(command.trim());","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":19,"XunyiiZ":33,"siewyangzhi":1}},{"path":"src/main/java/seedu/duke/CheckOutCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":" * Class that checks out a room with corresponding room number","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":" * and changes its status to be vacant.","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"public class CheckOutCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"    RoomList roomList;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"    int roomId;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"     * Override of execute command in Command class.","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"     * Check out room with corresponding room number.","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"     * The room status will be changed to vacant","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"     * After check in, it will print out corresponding room information.","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"     * @param listContainer asd","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"     * @param ui            The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"     * @throws InvalidRoomNumberException if the room number is not in the room list.","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws InvalidRoomNumberException, IOException {","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"        this.roomList \u003d listContainer.getRoomList();","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"        AssignmentMap assignmentMap \u003d listContainer.getAssignmentMap();","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"        for (Room room : roomList.getRoomList()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"            if (room.getRoomId() \u003d\u003d roomId) {","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"                room.checkOut();","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"XunyiiZ"},"content":"                ui.printTableHeader();","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"XunyiiZ"},"content":"                System.out.println(room + \"\\t\\t\\t\"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"XunyiiZ"},"content":"                        + assignmentMap.getHouseKeeperNameByRoom(room.getRoomId()));","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"XunyiiZ"},"content":"                roomList.save();","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"                return;","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"        throw new InvalidRoomNumberException();","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"XunyiiZ"},"content":"     * Constructor that initializes the roomId.","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"XunyiiZ"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"XunyiiZ"},"content":"     * @param command contains the roomId.","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"    public CheckOutCommand(String command) {","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"        roomId \u003d Integer.parseInt(command.trim());","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":17,"XunyiiZ":32,"siewyangzhi":1}},{"path":"src/main/java/seedu/duke/CheckRoomByCatCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":" * Class that implements execution behavior for listing the information","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":" * of all rooms with corresponding category.","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":" * Information contains its type, room id, level and vacancy status","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"public class CheckRoomByCatCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"    private RoomType type;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"     * Extracts the room type from user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"     * @param commandStringWithoutCommand contains the information of the room type.","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"     * @throws InvalidCategoryException If the category is not valid.","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"    public CheckRoomByCatCommand(String commandStringWithoutCommand) throws InvalidCategoryException {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"        switch (commandStringWithoutCommand.trim()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"        case \"single\":","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"            type \u003d RoomType.Single;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"            break;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"        case \"double\":","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"            type \u003d RoomType.Double;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"            break;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"        case \"triple\":","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"            type \u003d RoomType.Triple;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"            break;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"        case \"queen\":","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"            type \u003d RoomType.Queen;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"            break;","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"        case \"twin\":","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"            type \u003d RoomType.Twin;","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"            break;","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"        case \"king\":","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"            type \u003d RoomType.King;","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"            break;","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"        default:  // throw !!!!!!!","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"            throw new InvalidCategoryException();","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"XunyiiZ"},"content":"     * Override of execute command in Command class.","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"XunyiiZ"},"content":"     * Print out all room information with corresponding room type","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"XunyiiZ"},"content":"     * including the information of:","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"XunyiiZ"},"content":"     * type, room number, level and status.","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"XunyiiZ"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"XunyiiZ"},"content":"     * @param listContainer asd","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"XunyiiZ"},"content":"     * @param ui            The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"XunyiiZ"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"XunyiiZ"},"content":"    public void execute(ListContainer listContainer, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"XunyiiZ"},"content":"        RoomList roomList \u003d listContainer.getRoomList();","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"XunyiiZ"},"content":"        AssignmentMap assignmentMap \u003d listContainer.getAssignmentMap();","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"XunyiiZ"},"content":"        ui.printTableHeader();","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"zhenster"},"content":"        for (Room room : roomList.getRoomList()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"zhenster"},"content":"            if (room.getType() \u003d\u003d type) {","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"XunyiiZ"},"content":"                System.out.println(room.toString() + \"\\t\\t\\t\"","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"XunyiiZ"},"content":"                        + assignmentMap.getHouseKeeperNameByRoom(room.getRoomId()));","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":37,"XunyiiZ":28,"siewyangzhi":2}},{"path":"src/main/java/seedu/duke/CheckRoomByLevelCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":" * Class that implements execution behavior for listing the information","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":" * of all rooms with corresponding category.","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":" * Information contains its type, room id, level and vacancy status","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"public class CheckRoomByLevelCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"    private int level;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"    private static String TABLE_HEAD \u003d \"Type\\t\\tRoom Id\\t\\tlevel\\t\\tStatus\\t\\t\\tHouse Keeper Name\";","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"     * Extracts the room level from user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"     * @param commandStringWithoutCommand contains the information of the level.","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"    public CheckRoomByLevelCommand(String commandStringWithoutCommand) {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"        level \u003d Integer.parseInt(commandStringWithoutCommand.trim());","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"     * Override of execute command in Command class.","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"     * Print out all room information with corresponding level","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"     * including the information of:","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"     * type, room number, level and status.","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"     * @param listContainer asdd","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"XunyiiZ"},"content":"     * @param ui            The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"XunyiiZ"},"content":"     * @throws InvalidLevelException if the level is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"XunyiiZ"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"XunyiiZ"},"content":"    public void execute(ListContainer listContainer, Ui ui)","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"            throws InvalidLevelException {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"XunyiiZ"},"content":"        RoomList roomList \u003d listContainer.getRoomList();","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"XunyiiZ"},"content":"        AssignmentMap assignmentMap \u003d listContainer.getAssignmentMap();","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"XunyiiZ"},"content":"        boolean isValidLevel \u003d isValidLevel(level, roomList);","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"        if (!isValidLevel) {","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"            throw new InvalidLevelException();","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"XunyiiZ"},"content":"        printRoom(level, roomList, assignmentMap);","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"XunyiiZ"},"content":"    private void printRoom(int level, RoomList roomList, AssignmentMap assignmentMap) {","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"        System.out.println(TABLE_HEAD);","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"        for (Room room : roomList.getRoomList()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"            if (room.getLevel() \u003d\u003d level) {","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"XunyiiZ"},"content":"                System.out.println(room.toString() + \"\\t\\t\\t\"","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"XunyiiZ"},"content":"                        + assignmentMap.getHouseKeeperNameByRoom(room.getRoomId()));","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"XunyiiZ"},"content":"    private boolean isValidLevel(int level, RoomList roomList) {","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"XunyiiZ"},"content":"        for (Room room : roomList.getRoomList()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"XunyiiZ"},"content":"            if (room.getLevel() \u003d\u003d level) {","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"XunyiiZ"},"content":"                return true;","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"XunyiiZ"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"XunyiiZ"},"content":"        return false;","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":20,"XunyiiZ":42,"siewyangzhi":2}},{"path":"src/main/java/seedu/duke/CheckRoomCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":" * Class that implements execution behavior to list room with corresponding","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":" * room number.","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":" * The information includes its type, room id, level and vacancy status.","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"public class CheckRoomCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"    private int roomId;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"     * Extracts the room level from user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"     * @param commandStringWithoutCommand contains the information of room number.","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"    public CheckRoomCommand(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"        String command \u003d commandStringWithoutCommand.trim();","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"        if (command.isEmpty()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"            throw new InvalidRoomNumberException();","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"        roomId \u003d Integer.parseInt(command);","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"     * Override of execute command in Command class.","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"     * Print out the room information with corresponding room number","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"     * including information of:","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"XunyiiZ"},"content":"     * type, room number, level and status.","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"XunyiiZ"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"XunyiiZ"},"content":"     * @param listContainer asd","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"XunyiiZ"},"content":"     * @param ui            The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"XunyiiZ"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"XunyiiZ"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws InvalidRoomNumberException {","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"XunyiiZ"},"content":"        RoomList roomList \u003d listContainer.getRoomList();","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"XunyiiZ"},"content":"        AssignmentMap assignmentMap \u003d listContainer.getAssignmentMap();","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"        for (Room room : roomList.getRoomList()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"            if (room.getRoomId() \u003d\u003d roomId) {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"XunyiiZ"},"content":"                ui.printTableHeader();","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"XunyiiZ"},"content":"                System.out.println(room + \"\\t\\t\\t\"","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"XunyiiZ"},"content":"                        + assignmentMap.getHouseKeeperNameByRoom(room.getRoomId()));","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"                return;","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"XunyiiZ"},"content":"        throw new InvalidRoomNumberException();","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":14,"XunyiiZ":35,"siewyangzhi":2}},{"path":"src/main/java/seedu/duke/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.itemcommand.AddItemCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.itemcommand.ViewItemWithZeroPaxCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.itemcommand.SearchItemCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.itemcommand.UpdateItemPaxCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.itemcommand.DeleteItemCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.itemcommand.UpdateItemNameCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.itemcommand.ViewItemListCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.command.assigncommand.AssignHousekeeperCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"import java.util.Locale;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":" * Class that implements behavior of parsing user input and linking","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":" * that user input to a Command class.","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"public class CommandParser {","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"    private static final String BYE \u003d \"bye\";","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ADD_ITEM_COMMAND \u003d \"add item \";","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"    private static final String VIEW_ITEM_LIST_COMMAND \u003d \"view item in inventory\";","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"    private static final String VIEW_ITEM_WITH_ZERO_PAX_IN_LIST_COMMAND \u003d \"view item with zero pax\";","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"    private static final String DELETE_ITEM_COMMAND \u003d \"delete item \";","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"    private static final String UPDATE_ITEM_PAX_COMMAND \u003d \"update item pax \";","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"    private static final String UPDATE_ITEM_NAME_COMMAND \u003d \"update item name \";","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ADD_HOUSEKEEPER_COMMAND \u003d \"add housekeeper \";","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"    private static final String SEARCH_ITEM_COMMAND \u003d \"search item \";","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"    private static final String ADD_PERFORMANCE_COMMAND \u003d \"add housekeeper performance\";","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"    private static final String VIEW_PERFORMANCES_COMMAND \u003d \"view housekeeper performances\";","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ADD_AVAILABILITY_COMMAND \u003d \"availability \";","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"    private static final String ADD_SATISFACTION_COMMAND \u003d \"add satisfaction\";","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"    private static final String VIEW_SATISFACTIONS_COMMAND \u003d \"view satisfactions\";","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"    private static final String AVERAGE_SATISFACTION_COMMAND \u003d \"average satisfaction\";","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"    private static final String CHECK_IN \u003d \"check in\";","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"    private static final String CHECK_OUT \u003d \"check out\";","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"    private static final String CHECK_ROOM \u003d \"check room\";","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"XunyiiZ"},"content":"    private static final String CHECK_ALL_ROOM \u003d \"check all\";","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"XunyiiZ"},"content":"    private static final String CHECK_ROOM_BY_LEVEL \u003d \"check level\";","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"XunyiiZ"},"content":"    private static final String CHECK_BY_CATEGORY \u003d \"check category\";","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ASSIGN_HOUSEKEEPER \u003d \"assign\";","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"    private static final String VIEW_HOUSEKEEPER_COMMAND \u003d \"view recorded housekeeper\";","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"    private static final String VIEW_AVAILABLE_HOUSEKEEPER_DAY \u003d \"get available on \";","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"    private static final String RESET_AVAILABILITY \u003d \"is a new week\";","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"    private static final String DELETE_PROFILE \u003d \"delete housekeeper \";","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"FaliciaOng"},"content":"    private static final String UPDATE_AGE_BY_ONE \u003d \"is a new year\";","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"     * Parses the user-provided command and creates the relevant Command object.","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"siewyangzhi"},"content":"     * @param userInput User input to be parsed and turned into a Command object.","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"zhenster"},"content":"     * @return The relevant Command object created based on the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"zhenster"},"content":"     * @throws HotelLiteManagerException If there is an error in user input that prevents it from being parsed into","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"zhenster"},"content":"     *                                   the relevant Command object.","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"siewyangzhi"},"content":"    public Command parse(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"siewyangzhi"},"content":"        String userInputLowerCase \u003d userInput.toLowerCase();","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"siewyangzhi"},"content":"        Command userCommand \u003d null;","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"siewyangzhi"},"content":"        String userInputLowerCaseWithoutCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"siewyangzhi"},"content":"        if (userInputLowerCase.equals(BYE)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"            userCommand \u003d new ExitCommand();","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(ADD_SATISFACTION_COMMAND)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"siewyangzhi"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replace(ADD_SATISFACTION_COMMAND, \"\").trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new AddSatisfactionCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(VIEW_SATISFACTIONS_COMMAND)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"zhenster"},"content":"            userCommand \u003d new ViewSatisfactionsCommand();","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(AVERAGE_SATISFACTION_COMMAND)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"zhenster"},"content":"            userCommand \u003d new AverageSatisfactionCommand();","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(ADD_ITEM_COMMAND)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"siewyangzhi"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replace(ADD_ITEM_COMMAND, \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new AddItemCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.equals(VIEW_ITEM_LIST_COMMAND)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new ViewItemListCommand();","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.equals(VIEW_ITEM_WITH_ZERO_PAX_IN_LIST_COMMAND)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new ViewItemWithZeroPaxCommand();","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(DELETE_ITEM_COMMAND)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"siewyangzhi"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replace(DELETE_ITEM_COMMAND, \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new DeleteItemCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith((ADD_HOUSEKEEPER_COMMAND))) {","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"siewyangzhi"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replace(ADD_HOUSEKEEPER_COMMAND, \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new AddHousekeeperCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(ADD_PERFORMANCE_COMMAND)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"siewyangzhi"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replace(ADD_PERFORMANCE_COMMAND, \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new AddHousekeeperPerformanceCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(VIEW_PERFORMANCES_COMMAND)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"zhenster"},"content":"            userCommand \u003d new ViewHousekeeperPerformancesCommand();","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(CHECK_IN)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"siewyangzhi"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replace(CHECK_IN, \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new CheckInCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(CHECK_OUT)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"siewyangzhi"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replace(CHECK_OUT, \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new CheckOutCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(CHECK_BY_CATEGORY)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"siewyangzhi"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replace(CHECK_BY_CATEGORY, \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new CheckRoomByCatCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(CHECK_ROOM)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"siewyangzhi"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replace(CHECK_ROOM, \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new CheckRoomCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(CHECK_ALL_ROOM)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"zhenster"},"content":"            userCommand \u003d new CheckAllRoomCommand();","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(CHECK_ROOM_BY_LEVEL)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"siewyangzhi"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replace(CHECK_ROOM_BY_LEVEL, \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new CheckRoomByLevelCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(UPDATE_ITEM_PAX_COMMAND)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"siewyangzhi"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replace(UPDATE_ITEM_PAX_COMMAND, \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new UpdateItemPaxCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(UPDATE_ITEM_NAME_COMMAND)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"siewyangzhi"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replace(UPDATE_ITEM_NAME_COMMAND, \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new UpdateItemNameCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(ADD_AVAILABILITY_COMMAND)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"siewyangzhi"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replace(ADD_AVAILABILITY_COMMAND, \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new AddAvailabilityCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.contains((VIEW_HOUSEKEEPER_COMMAND))) {","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"FaliciaOng"},"content":"            userCommand \u003d new ViewHousekeeperListCommand();","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(ASSIGN_HOUSEKEEPER)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"siewyangzhi"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replace(ASSIGN_HOUSEKEEPER, \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new AssignHousekeeperCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(VIEW_AVAILABLE_HOUSEKEEPER_DAY)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"siewyangzhi"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replace(VIEW_AVAILABLE_HOUSEKEEPER_DAY, \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new GetAvailableHousekeeperCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(RESET_AVAILABILITY)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"FaliciaOng"},"content":"            userCommand \u003d new ResetAvailabilityCommand();","lastModifiedDate":"2022-03-27"},{"lineNumber":126,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(DELETE_PROFILE)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":127,"author":{"gitId":"siewyangzhi"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replace(DELETE_PROFILE, \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":128,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new DeleteHousekeeperCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":129,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(UPDATE_AGE_BY_ONE)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"FaliciaOng"},"content":"            userCommand \u003d new AgeIncreaseCommand();","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(SEARCH_ITEM_COMMAND)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"siewyangzhi"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replace(SEARCH_ITEM_COMMAND, \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new SearchItemCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":134,"author":{"gitId":"siewyangzhi"},"content":"        } else {","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-03-28"},{"lineNumber":136,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":137,"author":{"gitId":"siewyangzhi"},"content":"        return userCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":140,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":141,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"aiman-imtiaz":1,"zhenster":29,"FaliciaOng":16,"XunyiiZ":4,"siewyangzhi":93}},{"path":"src/main/java/seedu/duke/DeleteHousekeeperCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"public class DeleteHousekeeperCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"    private String name;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    private static Logger logger \u003d Logger.getLogger(\"housekeeperDeletionLogger\");","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    public DeleteHousekeeperCommand(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"        if (commandStringWithoutCommand.isEmpty()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"            throw new EmptyNameException();","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"        name \u003d commandStringWithoutCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"    public String getName() {","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"        return name;","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"    public void setName(String name) {","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"     * Remove Housekeeper that is not active from the list and print out the total strength of housekeeper in the list.","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"     * @param listContainer List of information.","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"     * @param ui The instance of the Ui class (used for printing additional messages when a command is executed.","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"     * @throws UserDoesNotExistException User given is not in housekeeper list.","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws UserDoesNotExistException {","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.removeHousekeeperInList(name);","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"aiman-imtiaz"},"content":"        AssignmentMap assignmentMap \u003d listContainer.getAssignmentMap();","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"aiman-imtiaz"},"content":"        assignmentMap.removeAssignment(name);","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"        ui.printMessage(\"Deleted \" + name + \" from the list of profile\");","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"        ui.printMessage(\"Take note! Total pax of housekeeper:  \" + housekeeperList.getTotalHousekeeper());","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"aiman-imtiaz":2,"FaliciaOng":39,"siewyangzhi":1}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    private void run() {","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"        CommandParser commandParser \u003d new CommandParser();","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"        ListContainer listContainer \u003d null;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"            listContainer \u003d new ListContainer();","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"        boolean shouldExitProgram \u003d false;","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"        String userInput;","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"        while (!shouldExitProgram) {","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"            try {","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"                userInput \u003d ui.readUserInput();","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"                Command command \u003d commandParser.parse(userInput);","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"                command.execute(listContainer, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"                shouldExitProgram \u003d command.isExit();","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"            } catch (HotelLiteManagerException e) {","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"                ui.printErrorMessage(e);","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"XunyiiZ"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"        new Duke().run();","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"FaliciaOng":8,"XunyiiZ":10,"siewyangzhi":11,"-":10}},{"path":"src/main/java/seedu/duke/EmptyDayException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":" * Represents an exception which would be thrown when the user enters an empty day when querying for available","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":" * housekeepers.","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"public class EmptyDayException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Day given were Empty\";","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"FaliciaOng":14}},{"path":"src/main/java/seedu/duke/EmptyHousekeeperPerformanceNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"public class EmptyHousekeeperPerformanceNameException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Housekeeper name cannot be empty.\";","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"zhenster":10}},{"path":"src/main/java/seedu/duke/EmptyHousekeeperPerformanceRatingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"public class EmptyHousekeeperPerformanceRatingException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Housekeeper performance cannot be empty.\";","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"zhenster":10}},{"path":"src/main/java/seedu/duke/EmptyItemNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":" * Represents an exception which would be thrown when the user enters an empty item name in the Add Item or Update Item","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":" * Pax Command.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"public class EmptyItemNameException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Item Name cannot be empty.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"siewyangzhi":14}},{"path":"src/main/java/seedu/duke/EmptyItemPaxException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"public class EmptyItemPaxException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Item Pax cannot be empty.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"siewyangzhi":10}},{"path":"src/main/java/seedu/duke/EmptyKeywordException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"public class EmptyKeywordException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! The keywords used to search for items within the item list \"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"            + \"cannot be empty.\";","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"siewyangzhi":11}},{"path":"src/main/java/seedu/duke/EmptyNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"public class EmptyNameException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Name is empty\";","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"FaliciaOng":10}},{"path":"src/main/java/seedu/duke/EmptySatisfactionCustomerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":" * An exception for the \"Add Satisfaction [customerName] [satisfactionValue] command.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":" * This exception is thrown if the customer name is not provided.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"public class EmptySatisfactionCustomerException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Customer name cannot be empty.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":15}},{"path":"src/main/java/seedu/duke/EmptySatisfactionValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":" * An exception for the \"Add Satisfaction [customerName] [satisfactionValue] command.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":" * This exception is thrown if the satisfaction value is not provided.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"public class EmptySatisfactionValueException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Satisfaction value cannot be empty.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":16}},{"path":"src/main/java/seedu/duke/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"public class Event {","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"    protected LocalDate at;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"    public String description;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"    public Event(String description, LocalDate by) {","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"aiman-imtiaz"},"content":"    public String toString() {","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"aiman-imtiaz"},"content":"        String message \u003d \"Event \" + description","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"aiman-imtiaz"},"content":"                + \" (at: \" + getAt() + \")\";","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"aiman-imtiaz"},"content":"        return message;","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":"    public String toFileString() {","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"aiman-imtiaz"},"content":"        return getDescription() + \" | \" + getAt();","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"    public void setAt(String at) {","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"aiman-imtiaz"},"content":"        this.at \u003d LocalDate.parse(at);","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"aiman-imtiaz"},"content":"    public String getAt() {","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"aiman-imtiaz"},"content":"        return at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"aiman-imtiaz"},"content":"    public String getDescription() {","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"aiman-imtiaz"},"content":"        return description;","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"aiman-imtiaz":38}},{"path":"src/main/java/seedu/duke/EventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.storage.EventListFileManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.storage.RoomFileManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":" * Represents a data structure containing multiple Event objects.","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":" * The constructor will initialize all rooms with status vacant","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"aiman-imtiaz"},"content":"public class EventList {","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"aiman-imtiaz"},"content":"    private ArrayList\u003cEvent\u003e eventList;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"aiman-imtiaz"},"content":"    public EventList(ArrayList\u003cEvent\u003e eventList) {  // dummy data for initialization","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"aiman-imtiaz"},"content":"        this.eventList \u003d eventList;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"aiman-imtiaz"},"content":"    public ArrayList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"aiman-imtiaz"},"content":"        return this.eventList;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"    public void save() throws IOException {","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"        EventListFileManager eventFileManager \u003d new EventListFileManager();","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"        eventFileManager.save(eventList);","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"aiman-imtiaz":28}},{"path":"src/main/java/seedu/duke/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"    public ExitCommand() {","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"        isExit \u003d true;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"        System.out.println(\"see u again!\");","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"FaliciaOng":11,"siewyangzhi":3}},{"path":"src/main/java/seedu/duke/GetAvailableHousekeeperCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":" * Number given from user to view list of housekeeper available on any day from Monday to Sunday.","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"public class GetAvailableHousekeeperCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"    private int searchDay;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"    private static Logger logger \u003d Logger.getLogger(\"housekeeperLogger\");","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"    private static final int MONDAY_INDICATE \u003d 1;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"    private static final int SUNDAY_INDICATE \u003d 7;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"    public GetAvailableHousekeeperCommand(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"        if (commandStringWithoutCommand.isEmpty()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"            logger.log(Level.WARNING, \"Empty Day.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"            throw new EmptyDayException();","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"        searchDay \u003d checkCorrectDayGiven(commandStringWithoutCommand);","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"        assert (searchDay \u003e\u003d MONDAY_INDICATE \u0026 searchDay \u003c\u003d SUNDAY_INDICATE) : \"Input day incorrect range.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"     * This method checks the day input by the user is within 1 to 7.","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"     * @param commandStringWithoutCommand Day input given by user.","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"     * @return Day within valid range.","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"     * @throws InvalidDayException if input is not an integer or not between 1 and 7.","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"    private int checkCorrectDayGiven(String commandStringWithoutCommand) throws InvalidDayException {","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"        int day;","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"            day \u003d Integer.parseInt(commandStringWithoutCommand);","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"        } catch (NumberFormatException numberError) {","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"            logger.log(Level.WARNING, \"Day is not an integer.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidDayException();","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"        if (day \u003c MONDAY_INDICATE | day \u003e SUNDAY_INDICATE) {","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"            logger.log(Level.WARNING, \"Day is not within range.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidDayException();","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"        return day;","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"FaliciaOng"},"content":"    public int getSearchDay() {","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"FaliciaOng"},"content":"        return searchDay;","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"FaliciaOng"},"content":"    public void setSearchDay(int searchDay) {","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"FaliciaOng"},"content":"        this.searchDay \u003d searchDay;","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"FaliciaOng"},"content":"        ArrayList\u003cHousekeeper\u003e foundList \u003d housekeeperList.getAvailableHousekeeperByDay(searchDay);","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"FaliciaOng"},"content":"        ui.printFoundHousekeeperList(foundList, searchDay);","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"FaliciaOng":61,"siewyangzhi":1}},{"path":"src/main/java/seedu/duke/HotelLiteManagerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"public abstract class HotelLiteManagerException extends Exception {","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"\";","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"siewyangzhi":9}},{"path":"src/main/java/seedu/duke/Housekeeper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":" * Records the age, name and availability of each Housekeeper.","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"public class Housekeeper {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    private String name;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"    private int age;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    private String availability;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"    private ArrayList\u003cInteger\u003e availableList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"    private static final String[] daysList \u003d {\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\",","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"        \"Sunday\"};","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"    public Housekeeper(String name, int age) {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"        this.age \u003d age;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"     * Verifies if housekeeper is available of the day given.","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"     * @param day represent the day user is interested in.","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"     * @return True if housekeeper is available, false if housekeeper is not available.","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"    public boolean isAvailableOn(int day) {","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"        day -\u003d 1;","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"        for (Integer i : availableList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"            if (i \u003d\u003d day) {","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"                return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"        return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"    public String getAvailability() {","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"        if (availability \u003d\u003d null) {","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"            return \"\u003cEnter Availability\u003e\";","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"        String availableStr \u003d \"( \";","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"        for (Integer i : availableList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"            availableStr +\u003d daysList[i] + \" \";","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"        availableStr +\u003d \")\";","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"        return availableStr;","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"FaliciaOng"},"content":"    public void setAvailability(String availability) {","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"FaliciaOng"},"content":"        this.availability \u003d availability;","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"FaliciaOng"},"content":"        availableList.clear();","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"FaliciaOng"},"content":"        String[] days \u003d availability.split(\",\");","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"FaliciaOng"},"content":"        for (String day : days) {","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"FaliciaOng"},"content":"            int convertToCorrectDay \u003d Integer.parseInt(day) - 1;","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"FaliciaOng"},"content":"            if (!(availableList.contains(convertToCorrectDay))) {","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"FaliciaOng"},"content":"                availableList.add(convertToCorrectDay);","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"FaliciaOng"},"content":"    public String getName() {","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"FaliciaOng"},"content":"        return name;","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"FaliciaOng"},"content":"    public void setName(String name) {","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"FaliciaOng"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"FaliciaOng"},"content":"    public int getAge() {","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"FaliciaOng"},"content":"        return age;","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"FaliciaOng"},"content":"    public void setAge(int age) {","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"FaliciaOng"},"content":"        this.age \u003d age;","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"FaliciaOng"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"FaliciaOng"},"content":"        return \"[\" + getName().toUpperCase() + \"]: \" + \"Age: \" + getAge() + \", Availability: \" + getAvailability();","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"FaliciaOng"},"content":"    public void setNullAvailability() {","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"FaliciaOng"},"content":"        this.availability \u003d null;","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"FaliciaOng":85}},{"path":"src/main/java/seedu/duke/HousekeeperList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"import static java.util.stream.Collectors.toList;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":" * Represents a data structure containing all housekeeper profiles.","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"public class HousekeeperList {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"    private ArrayList\u003cHousekeeper\u003e housekeeperList;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"    private static final int ONE_HOUSEKEEPER \u003d 1;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"    private ArrayList\u003cHousekeeper\u003e housekeeperExceedValidAgeList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"    private static final int ONE_YEAR \u003d 1;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"    private static final int MAX_AGE_ACCEPTED \u003d 60;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"    private static Logger logger \u003d Logger.getLogger(\"housekeeperListLogger\");","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"    public HousekeeperList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"        ArrayList\u003cHousekeeper\u003e housekeeperList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"        setHousekeeperList(housekeeperList);","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"    public Housekeeper getHousekeeper(int index) {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"        return housekeeperList.get(index);","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"    public void addHousekeeper(Housekeeper newHousekeeper) {","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"        getHousekeeperList().add(newHousekeeper);","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"     * Method checks if Housekeeper name is current in records.","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"     * @param name The name of the housekeeper.","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"     * @return false If name is not in records and true if name is in records.","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"    public boolean hasNameAdded(String name) {","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"        String convertNameToLowerCase \u003d name.toLowerCase();","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"        ArrayList\u003cHousekeeper\u003e housekeeperFound \u003d (ArrayList\u003cHousekeeper\u003e) housekeeperList.stream()","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"                .filter((t) -\u003e t.getName().toLowerCase().equals(convertNameToLowerCase))","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"                .collect(toList());","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"        if (housekeeperFound.size() \u003e\u003d ONE_HOUSEKEEPER) {","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"            return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"        return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"FaliciaOng"},"content":"    public int getTotalHousekeeper() {","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"FaliciaOng"},"content":"        return housekeeperList.size();","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"FaliciaOng"},"content":"    public void setHousekeeperList(ArrayList\u003cHousekeeper\u003e housekeeperList) {","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"FaliciaOng"},"content":"        this.housekeeperList \u003d housekeeperList;","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"FaliciaOng"},"content":"    public ArrayList\u003cHousekeeper\u003e getHousekeeperList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"FaliciaOng"},"content":"        return housekeeperList;","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"FaliciaOng"},"content":"     * Store a list of Housekeeper valid on day user is querying.","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"FaliciaOng"},"content":"     * @param day Input day user is interested to view.","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"FaliciaOng"},"content":"     * @return List of found housekeeper.","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"FaliciaOng"},"content":"    public ArrayList\u003cHousekeeper\u003e getAvailableHousekeeperByDay(int day) {","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"FaliciaOng"},"content":"        ArrayList\u003cHousekeeper\u003e foundList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"FaliciaOng"},"content":"        for (Housekeeper housekeeper : housekeeperList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"FaliciaOng"},"content":"            if (housekeeper.isAvailableOn(day)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"FaliciaOng"},"content":"                foundList.add(housekeeper);","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"FaliciaOng"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"FaliciaOng"},"content":"        return foundList;","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"FaliciaOng"},"content":"     * Method to find the housekeeper name in the records and add their availability into the records.","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"FaliciaOng"},"content":"     * @param name         Housekeeper Name.","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"FaliciaOng"},"content":"     * @param availability Housekeeper\u0027s availability to be added in records.","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"FaliciaOng"},"content":"    public void addAvailabilityInList(String name, String availability) throws UserDoesNotExistException {","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"FaliciaOng"},"content":"        boolean isExist \u003d false;","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"FaliciaOng"},"content":"        String nameConvertLowerCase \u003d name.toLowerCase();","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"FaliciaOng"},"content":"        for (int i \u003d 0; i \u003c housekeeperList.size(); i++) {","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"FaliciaOng"},"content":"            Housekeeper housekeeperToCompare \u003d housekeeperList.get(i);","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"FaliciaOng"},"content":"            String housekeeperToCompareName \u003d housekeeperToCompare.getName().toLowerCase();","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"FaliciaOng"},"content":"            if (housekeeperToCompareName.equals(nameConvertLowerCase)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"FaliciaOng"},"content":"                isExist \u003d true;","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"FaliciaOng"},"content":"                housekeeperToCompare.setAvailability(availability);","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"FaliciaOng"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"FaliciaOng"},"content":"        if (!isExist) {","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"FaliciaOng"},"content":"            throw new UserDoesNotExistException();","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"FaliciaOng"},"content":"     * This method calls housekeeper\u0027s method to set each housekeeper availability as false.","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"FaliciaOng"},"content":"    public void resetAvailability() {","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"FaliciaOng"},"content":"        for (Housekeeper housekeeper : housekeeperList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"FaliciaOng"},"content":"            housekeeper.setNullAvailability();","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"FaliciaOng"},"content":"     * Finds the housekeeper\u0027s index in the list.","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"FaliciaOng"},"content":"     * @param name Housekeeper to be remove.","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"FaliciaOng"},"content":"     * @return Index of the housekeeper to be remove in the list.","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"FaliciaOng"},"content":"    public int getHousekeeperRemove(String name) {","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"FaliciaOng"},"content":"        int index \u003d 0;","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"FaliciaOng"},"content":"        int i \u003d 0;","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"FaliciaOng"},"content":"        String nameLowerCase \u003d name.trim().toLowerCase();","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"FaliciaOng"},"content":"        for (Housekeeper housekeeper : housekeeperList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"FaliciaOng"},"content":"            String nameForCompare \u003d housekeeper.getName().toLowerCase();","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"FaliciaOng"},"content":"            if (nameForCompare.equals(nameLowerCase)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"FaliciaOng"},"content":"                index \u003d i;","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"FaliciaOng"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"FaliciaOng"},"content":"            i +\u003d 1;","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":126,"author":{"gitId":"FaliciaOng"},"content":"        return index;","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"FaliciaOng"},"content":"    public void removeHousekeeper(int housekeeperToRemoveIndex) {","lastModifiedDate":"2022-03-27"},{"lineNumber":130,"author":{"gitId":"FaliciaOng"},"content":"        getHousekeeperList().remove(housekeeperToRemoveIndex);","lastModifiedDate":"2022-03-27"},{"lineNumber":131,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":133,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":134,"author":{"gitId":"FaliciaOng"},"content":"     * Increases each housekeeper\u0027s age by one and records housekeeper who are over the age limit into another list.","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":136,"author":{"gitId":"FaliciaOng"},"content":"    public void increaseAllAgeByOne() {","lastModifiedDate":"2022-03-28"},{"lineNumber":137,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperExceedValidAgeList.clear();","lastModifiedDate":"2022-03-28"},{"lineNumber":138,"author":{"gitId":"FaliciaOng"},"content":"        for (Housekeeper housekeeper : housekeeperList) {","lastModifiedDate":"2022-03-28"},{"lineNumber":139,"author":{"gitId":"FaliciaOng"},"content":"            int increasedAge \u003d housekeeper.getAge() + ONE_YEAR;","lastModifiedDate":"2022-03-28"},{"lineNumber":140,"author":{"gitId":"FaliciaOng"},"content":"            if (increasedAge \u003e MAX_AGE_ACCEPTED) {","lastModifiedDate":"2022-03-28"},{"lineNumber":141,"author":{"gitId":"FaliciaOng"},"content":"                housekeeperExceedValidAgeList.add(housekeeper);","lastModifiedDate":"2022-03-28"},{"lineNumber":142,"author":{"gitId":"FaliciaOng"},"content":"            } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":143,"author":{"gitId":"FaliciaOng"},"content":"                housekeeper.setAge(increasedAge);","lastModifiedDate":"2022-03-28"},{"lineNumber":144,"author":{"gitId":"FaliciaOng"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":145,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":146,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":147,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":148,"author":{"gitId":"FaliciaOng"},"content":"    public ArrayList\u003cHousekeeper\u003e getHousekeeperExceedValidAgeList() {","lastModifiedDate":"2022-03-28"},{"lineNumber":149,"author":{"gitId":"FaliciaOng"},"content":"        return housekeeperExceedValidAgeList;","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":151,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":152,"author":{"gitId":"FaliciaOng"},"content":"    public void deleteOverAgeHousekeeper() {","lastModifiedDate":"2022-03-28"},{"lineNumber":153,"author":{"gitId":"FaliciaOng"},"content":"        for (Housekeeper housekeeper : housekeeperExceedValidAgeList) {","lastModifiedDate":"2022-03-28"},{"lineNumber":154,"author":{"gitId":"FaliciaOng"},"content":"            int indexToRemove \u003d getHousekeeperRemove(housekeeper.getName());","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"FaliciaOng"},"content":"            removeHousekeeper(indexToRemove);","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":157,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":158,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":159,"author":{"gitId":"FaliciaOng"},"content":"    public void addHousekeeperInList(Housekeeper housekeeper) throws InvalidUserException {","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"FaliciaOng"},"content":"        boolean isRecorded \u003d hasNameAdded(housekeeper.getName());","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"FaliciaOng"},"content":"        if (!isRecorded) {","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"FaliciaOng"},"content":"            addHousekeeper(housekeeper);","lastModifiedDate":"2022-03-29"},{"lineNumber":163,"author":{"gitId":"FaliciaOng"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":164,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidUserException();","lastModifiedDate":"2022-03-29"},{"lineNumber":165,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":166,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":167,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":168,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"FaliciaOng"},"content":"    public void removeHousekeeperInList(String name) throws UserDoesNotExistException {","lastModifiedDate":"2022-03-29"},{"lineNumber":170,"author":{"gitId":"FaliciaOng"},"content":"        boolean isRecorded \u003d hasNameAdded(name);","lastModifiedDate":"2022-03-29"},{"lineNumber":171,"author":{"gitId":"FaliciaOng"},"content":"        if (isRecorded) {","lastModifiedDate":"2022-03-29"},{"lineNumber":172,"author":{"gitId":"FaliciaOng"},"content":"            int housekeeperToRemoveIndex \u003d getHousekeeperRemove(name);","lastModifiedDate":"2022-03-29"},{"lineNumber":173,"author":{"gitId":"FaliciaOng"},"content":"            removeHousekeeper(housekeeperToRemoveIndex);","lastModifiedDate":"2022-03-29"},{"lineNumber":174,"author":{"gitId":"FaliciaOng"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":175,"author":{"gitId":"FaliciaOng"},"content":"            logger.log(Level.WARNING, \"Housekeeper to be deleted was not in the list.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":176,"author":{"gitId":"FaliciaOng"},"content":"            throw new UserDoesNotExistException();","lastModifiedDate":"2022-03-29"},{"lineNumber":177,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":178,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":179,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"FaliciaOng":179}},{"path":"src/main/java/seedu/duke/HousekeeperPerformance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":" * Records the name and performance rating of a Housekeeper. Performance rating is an integer from 1-5, inclusive.","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"public class HousekeeperPerformance {","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"    private String name;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"    private int rating;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    public HousekeeperPerformance(String name, int rating) {","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"        this.rating \u003d rating;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"    public String getName() {","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"        return name;","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"    public void setName(String name) {","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"    public int getRating() {","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"        return rating;","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"    public void setRating(int rating) {","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"        this.rating \u003d rating;","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"    public String toString() {","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"        return \"[ \" + getName() + \" ]: \" + getRating();","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"zhenster":35}},{"path":"src/main/java/seedu/duke/HousekeeperPerformanceList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":" * Represents a data structure containing all housekeeper performance ratings.","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"public class HousekeeperPerformanceList {","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"    private ArrayList\u003cHousekeeperPerformance\u003e housekeeperPerformanceList;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"    public HousekeeperPerformanceList() {","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"        ArrayList\u003cHousekeeperPerformance\u003e housekeeperPerformanceList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"        setHousekeeperPerformanceList(housekeeperPerformanceList);","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"    public void addHousekeeperPerformance(HousekeeperPerformance newHousekeeperPerformance) {","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"        getHousekeeperPerformanceList().add(newHousekeeperPerformance);","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"        sortHousekeeperPerformances();","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"    public ArrayList\u003cHousekeeperPerformance\u003e getHousekeeperPerformanceList() {","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"        return housekeeperPerformanceList;","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"    public void setHousekeeperPerformanceList(ArrayList\u003cHousekeeperPerformance\u003e housekeeperPerformanceList) {","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"        this.housekeeperPerformanceList \u003d housekeeperPerformanceList;","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"    public int getSize() {","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"        return housekeeperPerformanceList.size();","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"     * Checks if the housekeeper with the specified name already has a recorded performance rating.","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"     * @param housekeeperName The name of the specified housekeeper.","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"     * @return true if the Housekeeper already has a recorded performance rating, false otherwise.","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"    public boolean isHousekeeperInPerformanceList(String housekeeperName) {","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"        for (HousekeeperPerformance housekeeperPerformance : housekeeperPerformanceList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"            if (housekeeperName.equals(housekeeperPerformance.getName())) {","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"                return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"        return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"     * Pretty-prints the list of HousekeeperPerformance objects. Displays the name and rating associated with","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"     * each HousekeeperPerformance object.","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"zhenster"},"content":"    public void viewPerformances() {","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"zhenster"},"content":"        if (getSize() \u003d\u003d 0) {","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"zhenster"},"content":"            System.out.println(\"There have not been any housekeeper performances recorded yet.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"zhenster"},"content":"        } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"zhenster"},"content":"            System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Housekeeper Performance List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"zhenster"},"content":"            int number \u003d 1;","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"zhenster"},"content":"            for (HousekeeperPerformance housekeeperPerformance : housekeeperPerformanceList) {","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"zhenster"},"content":"                System.out.println(Integer.toString(number) + \". [ \" + housekeeperPerformance.getName()","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"zhenster"},"content":"                        + \" ]: \" + housekeeperPerformance.getRating());","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"                number +\u003d 1;","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"zhenster"},"content":"            System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"zhenster"},"content":"     * Sorts the HousekeeperPerformance objects based on rating in descending order.","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"zhenster"},"content":"    public void sortHousekeeperPerformances() {","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"zhenster"},"content":"        Collections.sort(housekeeperPerformanceList,new Comparator\u003cHousekeeperPerformance\u003e() {","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"zhenster"},"content":"            @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"zhenster"},"content":"            public int compare(HousekeeperPerformance a, HousekeeperPerformance b) {","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"zhenster"},"content":"                return a.getRating() \u003e b.getRating() ? -1 : (a.getRating() \u003e b.getRating() ? 1 : 0);","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"zhenster"},"content":"        });","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"zhenster":80}},{"path":"src/main/java/seedu/duke/InvalidAgeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":" * An exception for the \"Add Housekeeper [housekeeperName] ~ [age] command.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":" * This exception is thrown if the add housekeeper command has a given age which is not an integer.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"public class InvalidAgeException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! AGE must be integer.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":1,"FaliciaOng":14}},{"path":"src/main/java/seedu/duke/InvalidAvailabilityException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":" * An exception for the \"Availability [housekeeperName] @ [daysAvailable] command.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":" * This exception is thrown if the add housekeeper availability command has empty days available.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"public class InvalidAvailabilityException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Invalid Command -\u003e Availability NAME @ 1,2\";","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"FaliciaOng":14}},{"path":"src/main/java/seedu/duke/InvalidCategoryException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":" * An exception to check room type.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":" * This exception is thrown if the room type is beyond","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":" * {single, double, triple, queen, twin, king}.","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"public class InvalidCategoryException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Room category is invalid\";","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"XunyiiZ":16}},{"path":"src/main/java/seedu/duke/InvalidCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":" * Represents an exception which would be thrown when the format of the Add Item, View Item or Update Item Pax command","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":" * that the user inputs is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"public class InvalidCommandException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Invalid Command.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"siewyangzhi":14}},{"path":"src/main/java/seedu/duke/InvalidDayException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"public class InvalidDayException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Day give must be an Integer between 1 and 7.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"FaliciaOng":10}},{"path":"src/main/java/seedu/duke/InvalidHousekeeperPerformanceRatingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"public class InvalidHousekeeperPerformanceRatingException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Housekeeper performance rating must be an integer between \"","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"            + \"1 and 5, inclusive.\";","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"zhenster":11}},{"path":"src/main/java/seedu/duke/InvalidHousekeeperProfile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"public class InvalidHousekeeperProfile extends HotelLiteManagerException {","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Invalid Command -\u003e Add Housekeeper NAME @ INT AGE\";","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"FaliciaOng":10}},{"path":"src/main/java/seedu/duke/InvalidItemPaxException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":" * Represents an exception which would be thrown when the user enters an invalid item pax.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"public class InvalidItemPaxException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Item Pax is invalid.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"siewyangzhi":13}},{"path":"src/main/java/seedu/duke/InvalidLevelException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":" * An exception to check room level.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":" * This exception is thrown if the room level is beyond level range.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"public class InvalidLevelException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Room level is invalid\";","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"XunyiiZ":14}},{"path":"src/main/java/seedu/duke/InvalidRoomNumberException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":" * An exception to check room number.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":" * This exception is thrown if the room number is not in the room list.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"public class InvalidRoomNumberException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Room number is invalid\";","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"XunyiiZ":14}},{"path":"src/main/java/seedu/duke/InvalidSatisfactionValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":" * An exception for the \"Add Satisfaction [customerName] [satisfactionValue] command.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":" * This exception is thrown if the satisfaction value is invalid (i.e. is not an integer","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" * between 1 and 5).","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"public class InvalidSatisfactionValueException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Satisfaction value must be an integer \"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"            + \"between 1 and 5, inclusive.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":18}},{"path":"src/main/java/seedu/duke/InvalidUserException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":" * An exception to prevent multiple adding of the same name.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":" * This exception is thrown if housekeeper profile has already been entered.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"public class InvalidUserException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! This person has already been recorded.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"FaliciaOng":15}},{"path":"src/main/java/seedu/duke/Item.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":" * Represents an item that is stored within the inventory. An item object consists of the item\u0027s name as well as its","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":" * pax.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"public class Item {","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"    private String name;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"    private int pax;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    public Item(String name, int pax) {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"        setName(name);","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"        setPax(pax);","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"    public Item(String name) {","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"        setName(name);","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"    public String getName() {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"        return name;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"    public void setName(String name) {","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"    public int getPax() {","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"        return pax;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"    public void setPax(int pax) {","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"        this.pax \u003d pax;","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"siewyangzhi":35}},{"path":"src/main/java/seedu/duke/ItemList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":" * Represents a list of the items within the inventory. An ItemList object contains the methods to add items to the","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":" * item list as well as update the paxs of the current items within the item List.","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"public class ItemList {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"    ArrayList\u003cItem\u003e listOfItems;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"    private static Logger itemLogger \u003d Logger.getLogger(\"itemLogger\");","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"    public ItemList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"        ArrayList\u003cItem\u003e listOfItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"        setListOfItems(listOfItems);","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"    public ArrayList\u003cItem\u003e getListOfItems() {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"        return listOfItems;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"    public void setListOfItems(ArrayList\u003cItem\u003e listOfItems) {","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"        this.listOfItems \u003d listOfItems;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"    public boolean addItemToList(Item item) {","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"        boolean isItemAlreadyInTheList \u003d checkForItemDuplicates(item.getName());","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"        if (isItemAlreadyInTheList \u003d\u003d true) {","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"            return isItemAlreadyInTheList;","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"        listOfItems.add(item);","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"        return isItemAlreadyInTheList;","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"    public int getSize() {","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"        return listOfItems.size();","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"    public boolean checkForItemDuplicates(String nameOfItemToAdd) {","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"siewyangzhi"},"content":"        boolean isItemAlreadyInTheList \u003d false;","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"        int numberOfItemsInItemList \u003d listOfItems.size();","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"siewyangzhi"},"content":"        if (numberOfItemsInItemList \u003d\u003d 0) {","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"siewyangzhi"},"content":"            return isItemAlreadyInTheList;","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"        String itemName;","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"        Item item;","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"        for (int itemIndex \u003d 0; itemIndex \u003c numberOfItemsInItemList; itemIndex++) {","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"siewyangzhi"},"content":"            item \u003d listOfItems.get(itemIndex);","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"siewyangzhi"},"content":"            itemName \u003d item.getName();","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"siewyangzhi"},"content":"            if (itemName.equals(nameOfItemToAdd)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"siewyangzhi"},"content":"                isItemAlreadyInTheList \u003d true;","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"siewyangzhi"},"content":"                break;","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"siewyangzhi"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"siewyangzhi"},"content":"        return isItemAlreadyInTheList;","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"siewyangzhi"},"content":"     * Returns a specific item within the item list based on the index passed in.","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"siewyangzhi"},"content":"     * @param index The index of the item within the list that would be returned.","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"siewyangzhi"},"content":"     * @return The item specified by the index passed into the function.","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"siewyangzhi"},"content":"    public Item getItem(int index) {","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"siewyangzhi"},"content":"        ArrayList\u003cItem\u003e listOfItems \u003d getListOfItems();","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d listOfItems.get(index);","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"siewyangzhi"},"content":"        return item;","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"siewyangzhi"},"content":"     * Updates the pax of a specific item within the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"siewyangzhi"},"content":"     * @param item The item within the inventory that the user wants to update. The item object contains the item name","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"siewyangzhi"},"content":"     *             and the new pax.","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"siewyangzhi"},"content":"     * @throws ItemNotFoundException if the item name within the item object does not exist in the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"siewyangzhi"},"content":"    public void updateItemPaxInList(Item item) throws ItemNotFoundException {","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"siewyangzhi"},"content":"        String nameOfItemToUpdate \u003d item.getName();","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"siewyangzhi"},"content":"        int paxOfItemToUpdate \u003d item.getPax();","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"siewyangzhi"},"content":"        assert (paxOfItemToUpdate \u003e\u003d 0) : \"Assertion Failed! Item to update has a pax that is lesser than 0\";","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"siewyangzhi"},"content":"        assert (!nameOfItemToUpdate.isEmpty()) : \"Assertion Failed! Item to update has an empty name.\";","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"siewyangzhi"},"content":"        boolean isItemFound \u003d false;","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"siewyangzhi"},"content":"        Item currentItem;","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"siewyangzhi"},"content":"        String currentItemName;","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"siewyangzhi"},"content":"        ArrayList\u003cItem\u003e listOfItems \u003d getListOfItems();","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"siewyangzhi"},"content":"        for (int itemIndex \u003d 0; itemIndex \u003c listOfItems.size(); itemIndex++) {","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"siewyangzhi"},"content":"            currentItem \u003d listOfItems.get(itemIndex);","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"siewyangzhi"},"content":"            currentItemName \u003d currentItem.getName();","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"siewyangzhi"},"content":"            if (currentItemName.equals(nameOfItemToUpdate)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"siewyangzhi"},"content":"                currentItem.setPax(paxOfItemToUpdate);","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"siewyangzhi"},"content":"                isItemFound \u003d true;","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"siewyangzhi"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"siewyangzhi"},"content":"        if (isItemFound \u003d\u003d false) {","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"The item whose pax is to be updated cannot be found within the Item \"","lastModifiedDate":"2022-03-17"},{"lineNumber":98,"author":{"gitId":"siewyangzhi"},"content":"                    + \"List. Exception thrown.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"siewyangzhi"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"siewyangzhi"},"content":"    public void deleteItemInList(Item item) throws ItemNotFoundException {","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"siewyangzhi"},"content":"        String nameOfItemToDelete \u003d item.getName();","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"siewyangzhi"},"content":"        assert (!nameOfItemToDelete.isEmpty()) : \"Assertion Failed! Name of the item to delete is empty.\";","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"siewyangzhi"},"content":"        boolean isItemFound \u003d false;","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"siewyangzhi"},"content":"        Item currentItem;","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"siewyangzhi"},"content":"        String currentItemName;","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"siewyangzhi"},"content":"        ArrayList\u003cItem\u003e listOfItems \u003d getListOfItems();","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"siewyangzhi"},"content":"        for (int itemIndex \u003d 0; itemIndex \u003c listOfItems.size(); itemIndex++) {","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"siewyangzhi"},"content":"            currentItem \u003d listOfItems.get(itemIndex);","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"siewyangzhi"},"content":"            currentItemName \u003d currentItem.getName();","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"siewyangzhi"},"content":"            if (currentItemName.equals(nameOfItemToDelete)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"siewyangzhi"},"content":"                listOfItems.remove(itemIndex);","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"siewyangzhi"},"content":"                isItemFound \u003d true;","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"siewyangzhi"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"siewyangzhi"},"content":"        if (isItemFound \u003d\u003d false) {","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"The item to delete cannot be found within the Item List. Exception \"","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"siewyangzhi"},"content":"                    + \"thrown.\");","lastModifiedDate":"2022-03-26"},{"lineNumber":121,"author":{"gitId":"siewyangzhi"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2022-03-26"},{"lineNumber":122,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":123,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":124,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"siewyangzhi"},"content":"    public void updateItemNameInList(String currentItemName, String newItemName) throws ItemNotFoundException {","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"siewyangzhi"},"content":"        boolean isItemFound \u003d false;","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"siewyangzhi"},"content":"        ArrayList\u003cItem\u003e listOfItems \u003d getListOfItems();","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"siewyangzhi"},"content":"        Item item;","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"siewyangzhi"},"content":"        String itemName;","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"siewyangzhi"},"content":"        for (int itemIndex \u003d 0; itemIndex \u003c listOfItems.size(); itemIndex++) {","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"siewyangzhi"},"content":"            item \u003d listOfItems.get(itemIndex);","lastModifiedDate":"2022-03-28"},{"lineNumber":132,"author":{"gitId":"siewyangzhi"},"content":"            itemName \u003d item.getName();","lastModifiedDate":"2022-03-28"},{"lineNumber":133,"author":{"gitId":"siewyangzhi"},"content":"            if (itemName.equals(currentItemName)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":134,"author":{"gitId":"siewyangzhi"},"content":"                item.setName(newItemName);","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"siewyangzhi"},"content":"                isItemFound \u003d true;","lastModifiedDate":"2022-03-28"},{"lineNumber":136,"author":{"gitId":"siewyangzhi"},"content":"                break;","lastModifiedDate":"2022-03-28"},{"lineNumber":137,"author":{"gitId":"siewyangzhi"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":138,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":139,"author":{"gitId":"siewyangzhi"},"content":"        if (isItemFound \u003d\u003d false) {","lastModifiedDate":"2022-03-28"},{"lineNumber":140,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"The item whose name we want to update cannot be found within the \"","lastModifiedDate":"2022-03-28"},{"lineNumber":141,"author":{"gitId":"siewyangzhi"},"content":"                    + \"Item List. Exception thrown.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":142,"author":{"gitId":"siewyangzhi"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2022-03-28"},{"lineNumber":143,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":144,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":145,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":146,"author":{"gitId":"siewyangzhi"},"content":"    public ItemList findItemsInList(String keyword) {","lastModifiedDate":"2022-03-28"},{"lineNumber":147,"author":{"gitId":"siewyangzhi"},"content":"        ItemList listOfMatchingItems \u003d new ItemList();","lastModifiedDate":"2022-03-28"},{"lineNumber":148,"author":{"gitId":"siewyangzhi"},"content":"        ArrayList\u003cItem\u003e listOfItems \u003d getListOfItems();","lastModifiedDate":"2022-03-28"},{"lineNumber":149,"author":{"gitId":"siewyangzhi"},"content":"        Item item;","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"siewyangzhi"},"content":"        String itemName;","lastModifiedDate":"2022-03-28"},{"lineNumber":151,"author":{"gitId":"siewyangzhi"},"content":"        for (int itemIndex \u003d 0; itemIndex \u003c listOfItems.size(); itemIndex++) {","lastModifiedDate":"2022-03-28"},{"lineNumber":152,"author":{"gitId":"siewyangzhi"},"content":"            item \u003d listOfItems.get(itemIndex);","lastModifiedDate":"2022-03-28"},{"lineNumber":153,"author":{"gitId":"siewyangzhi"},"content":"            itemName \u003d item.getName();","lastModifiedDate":"2022-03-28"},{"lineNumber":154,"author":{"gitId":"siewyangzhi"},"content":"            if (itemName.contains(keyword)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"siewyangzhi"},"content":"                listOfMatchingItems.addItemToList(item);","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"siewyangzhi"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":157,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":158,"author":{"gitId":"siewyangzhi"},"content":"        return listOfMatchingItems;","lastModifiedDate":"2022-03-28"},{"lineNumber":159,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"siewyangzhi"},"content":"    public ItemList findItemsWithZeroPaxInList() {","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"siewyangzhi"},"content":"        ItemList listOfMatchingItems \u003d new ItemList();","lastModifiedDate":"2022-03-29"},{"lineNumber":163,"author":{"gitId":"siewyangzhi"},"content":"        Item item;","lastModifiedDate":"2022-03-29"},{"lineNumber":164,"author":{"gitId":"siewyangzhi"},"content":"        int itemPax;","lastModifiedDate":"2022-03-29"},{"lineNumber":165,"author":{"gitId":"siewyangzhi"},"content":"        for (int itemIndex \u003d 0; itemIndex \u003c listOfItems.size(); itemIndex++) {","lastModifiedDate":"2022-03-29"},{"lineNumber":166,"author":{"gitId":"siewyangzhi"},"content":"            item \u003d listOfItems.get(itemIndex);","lastModifiedDate":"2022-03-29"},{"lineNumber":167,"author":{"gitId":"siewyangzhi"},"content":"            itemPax \u003d item.getPax();","lastModifiedDate":"2022-03-29"},{"lineNumber":168,"author":{"gitId":"siewyangzhi"},"content":"            if (itemPax \u003d\u003d 0) {","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"siewyangzhi"},"content":"                listOfMatchingItems.addItemToList(item);","lastModifiedDate":"2022-03-29"},{"lineNumber":170,"author":{"gitId":"siewyangzhi"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":171,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":172,"author":{"gitId":"siewyangzhi"},"content":"        return listOfMatchingItems;","lastModifiedDate":"2022-03-29"},{"lineNumber":173,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":174,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"siewyangzhi":174}},{"path":"src/main/java/seedu/duke/ItemNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":" * Represents an exception which would be thrown when the item that the user is searching for within the item list","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":" * is not found.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"public class ItemNotFoundException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Item not found in inventory.\";","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"siewyangzhi":14}},{"path":"src/main/java/seedu/duke/ListContainer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.storage.AssignmentListFileManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.storage.RoomFileManager;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"public class ListContainer {","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"    private HousekeeperList housekeeperList;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"    private HousekeeperPerformanceList housekeeperPerformanceList;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"    private SatisfactionList satisfactionList;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"    private AssignmentMap assignmentMap;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"    private RoomList roomList;","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"    private ItemList itemList;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"aiman-imtiaz"},"content":"    private EventList eventList;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"    public ListContainer() throws IOException {","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"        satisfactionList \u003d new SatisfactionList();","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"        housekeeperList \u003d new HousekeeperList();","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"        housekeeperPerformanceList \u003d new HousekeeperPerformanceList();","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"        AssignmentListFileManager assignmentListFileManager \u003d new AssignmentListFileManager();","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"        HashMap\u003cInteger,String\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"        assignmentListFileManager.load(map);","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"        assignmentMap \u003d new AssignmentMap(map);","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"        RoomFileManager roomFileManager \u003d new RoomFileManager();","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"XunyiiZ"},"content":"        ArrayList\u003cRoom\u003e roomArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"XunyiiZ"},"content":"        roomFileManager.load(roomArrayList);","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"XunyiiZ"},"content":"        roomList \u003d new RoomList(roomArrayList);","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"XunyiiZ"},"content":"        itemList \u003d new ItemList();","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"XunyiiZ"},"content":"    public HousekeeperList getHousekeeperList() {","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"XunyiiZ"},"content":"        return housekeeperList;","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"XunyiiZ"},"content":"    public HousekeeperPerformanceList getHousekeeperPerformanceList() {","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"XunyiiZ"},"content":"        return housekeeperPerformanceList;","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"XunyiiZ"},"content":"    public SatisfactionList getSatisfactionList() {","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"XunyiiZ"},"content":"        return satisfactionList;","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"XunyiiZ"},"content":"    public AssignmentMap getAssignmentMap() {","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"XunyiiZ"},"content":"        return assignmentMap;","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"XunyiiZ"},"content":"    public RoomList getRoomList() {","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"XunyiiZ"},"content":"        return roomList;","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"XunyiiZ"},"content":"    public ItemList getItemList() {","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"XunyiiZ"},"content":"        return itemList;","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"aiman-imtiaz":1,"XunyiiZ":61}},{"path":"src/main/java/seedu/duke/NonexistentHousekeeperException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":" * An exception for the \"add housekeeper performance [housekeeperName] [performanceRating]\" command.","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":" * This exception is thrown if the user attempts to record a housekeeper performance for a housekeeper","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" * that does not exist in the HousekeeperList records.","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"public class NonexistentHousekeeperException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! You are attempting to record a houseekeeper performance\"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"            + \" for a housekeeper that does not exist in the housekeeper records.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"zhenster":17}},{"path":"src/main/java/seedu/duke/OverAgeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"public class OverAgeException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Unable to accept housekeeper age 61 and above.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"FaliciaOng":11}},{"path":"src/main/java/seedu/duke/RepeatCustomerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":" * Exception for the \"Add Satisfaction [customerName] [satisfactionValue]\" command.","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":" * This exception is thrown if a Satisfaction instance with the given customer name","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" * already exists. Ensures that the same customer cannot have multiple satisfaction","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":" * values attributed to it.","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"public class RepeatCustomerException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! The given customer\u0027s satisfaction value has \"","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"            + \"already been recorded.\";","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"zhenster":18}},{"path":"src/main/java/seedu/duke/RepeatHousekeeperPerformanceNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":" * An exception for the \"add housekeeper performance [housekeeperName] [performanceRating]\" command.","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":" * This exception is thrown if the user attempts to add a HousekeeperPerformance object that corresponds to","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" * a name which has already been stored in the HousekeeperPerformanceList.","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"public class RepeatHousekeeperPerformanceNameException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! The performance rating for this housekeeper \"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"            + \" has already been recorded.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"zhenster":17}},{"path":"src/main/java/seedu/duke/ResetAvailabilityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":" * Reset availability of each housekeeper when needed such as a start of a new week.","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"public class ResetAvailabilityCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"     * Call method to reset every housekeeper availability to null and print out the new list for verification.","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"     * @param listContainer List of information.","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"     * @param ui The instance of the Ui class (used for printing additional messages when a command is executed.","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"    public void execute(ListContainer listContainer, Ui ui) {","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.resetAvailability();","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"        ui.printHousekeeperListReset(housekeeperList);","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"FaliciaOng":20,"siewyangzhi":2}},{"path":"src/main/java/seedu/duke/Room.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":" * Room class has the parameter of roomId, level type and vacancy status.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"public class Room {","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"    private int roomId;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"    private int level;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"    private RoomType type; // can implement it as enumeration","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"    private boolean isVacant;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"    public Room(int roomId, int level, RoomType type) {","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"        this.roomId \u003d roomId;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"        this.level \u003d level;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"        isVacant \u003d true;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"    public Room(int roomId, int level, RoomType type, String status) {","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"        this.roomId \u003d roomId;","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"        this.level \u003d level;","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"        isVacant \u003d (status.equals(\"Vacant\")) ? true : false;","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"    public int getRoomId() {","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"        return roomId;","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"XunyiiZ"},"content":"    public int getLevel() {","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"XunyiiZ"},"content":"        return level;","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"XunyiiZ"},"content":"    public RoomType getType() {","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"XunyiiZ"},"content":"        return type;","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"XunyiiZ"},"content":"    public boolean getIsVacant() {","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"XunyiiZ"},"content":"        return isVacant;","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"XunyiiZ"},"content":"    public void checkIn() {","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"XunyiiZ"},"content":"        isVacant \u003d false;","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"XunyiiZ"},"content":"    public void checkOut() {","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"XunyiiZ"},"content":"        isVacant \u003d true;","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"XunyiiZ"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"XunyiiZ"},"content":"        return getType() + \"\\t\\t\" + getRoomId() + \"\\t\\t\\t \"","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"XunyiiZ"},"content":"                + getLevel() + \"\\t\\t\\t\" + (getIsVacant() ? \"Vacant  \" : \"Occupied\");","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"XunyiiZ"},"content":"    public String toFileString() {","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"XunyiiZ"},"content":"        return getType() + \" | \" + getRoomId() + \" | \" + getLevel() + \" | \" + (getIsVacant() ? \"Vacant\" : \"Occupied\");","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"XunyiiZ":59}},{"path":"src/main/java/seedu/duke/RoomList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.storage.RoomFileManager;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":" * Represents a data structure containing multiple Satisfaction objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":" * The constructor will initialize all rooms with status vacant","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"public class RoomList {","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"    private ArrayList\u003cRoom\u003e roomList;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"    public RoomList(ArrayList\u003cRoom\u003e roomArrayList) {  // dummy data for initialization","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"        roomList \u003d roomArrayList;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"    public ArrayList\u003cRoom\u003e getRoomList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"        return roomList;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"    public void save() throws IOException {","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"        RoomFileManager roomFileManager \u003d new RoomFileManager();","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"        roomFileManager.save(roomList);","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"XunyiiZ":27}},{"path":"src/main/java/seedu/duke/RoomType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"public enum RoomType {","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"    Single, Double, Triple, Queen, King, Twin","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"XunyiiZ":5}},{"path":"src/main/java/seedu/duke/Satisfaction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":" * Represents a Satisfaction object. Attributes include satisfactionValue","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":" * (a value from 1-5) and customerName (the name of the customer with","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" * this satisfactionValue).","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"public class Satisfaction {","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    protected String customerName;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"    protected int satisfactionValue;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"    public Satisfaction(String customerName, int satisfactionValue) {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"        this.customerName \u003d customerName;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"        this.satisfactionValue \u003d satisfactionValue;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"    public String getCustomerName() {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"        return customerName;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"    public int getSatisfactionValue() {","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"        return satisfactionValue;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"    public void setCustomerName(String customerName) {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"        this.customerName \u003d customerName;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"    public void setSatisfactionValue(int satisfactionValue) {","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"        this.satisfactionValue \u003d satisfactionValue;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":35}},{"path":"src/main/java/seedu/duke/SatisfactionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" * Represents a data structure containing multiple Satisfaction objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":" * Uses an ArrayList to store the Satisfaction objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"public class SatisfactionList {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"    private ArrayList\u003cSatisfaction\u003e satisfactionList;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"    public SatisfactionList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"        ArrayList\u003cSatisfaction\u003e satisfactionList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"        setSatisfactionList(satisfactionList);","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"    public void addSatisfaction(Satisfaction newSatisfaction) {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"        getSatisfactionList().add(newSatisfaction);","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"    public ArrayList\u003cSatisfaction\u003e getSatisfactionList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"        return satisfactionList;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"    public void setSatisfactionList(ArrayList\u003cSatisfaction\u003e satisfactionList) {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"        this.satisfactionList \u003d satisfactionList;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"    public int getSize() {","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"        return satisfactionList.size();","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"     * Helper for ViewSatisfactionCommand class.","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"     * Prints out the information of the Satisfaction objects","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"     * in this satisfactionList (i.e. prints out each Satisfaction object\u0027s","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"     * corresponding customer name and satisfaction value).","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"    public void viewSatisfactions() {","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"        int number \u003d 1;","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"        if (getSize() \u003d\u003d 0) {","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"            System.out.println(\"There are no recorded satisfactions.\");","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"        } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"            System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Customer Satisfaction List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"            for (Satisfaction satisfaction : satisfactionList) {","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"                System.out.println(Integer.toString(number) + \". [ \" + satisfaction.getCustomerName()","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"                        + \" ]: \" + satisfaction.getSatisfactionValue());","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"                number +\u003d 1;","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"            System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"zhenster"},"content":"     * Helper for AddSatisfactionCommand class.","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"zhenster"},"content":"     * Check if the given customer already has a","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"zhenster"},"content":"     * corresponding Satisfaction object in this satisfactionList.","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"zhenster"},"content":"     * @param customerName The name of the given customer.","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"zhenster"},"content":"     * @return A boolean value (true if the customer already has corresponding Satisfaction object, false otherwise).","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"zhenster"},"content":"    public boolean isCustomerInSatisfactionList(String customerName) {","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"        for (Satisfaction satisfaction : satisfactionList) {","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"            if (customerName.equals(satisfaction.getCustomerName())) {","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"zhenster"},"content":"                return true;","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"zhenster"},"content":"        return false;","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":71,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"zhenster"},"content":"     * Helper for AverageSatisfactionCommand class.","lastModifiedDate":"2022-03-19"},{"lineNumber":73,"author":{"gitId":"zhenster"},"content":"     * Calculates the average customer satisfaction rating of","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"zhenster"},"content":"     * the Satisfaction objects in this satisfactionList.","lastModifiedDate":"2022-03-19"},{"lineNumber":75,"author":{"gitId":"zhenster"},"content":"     * @return The average customer satisfaction rating.","lastModifiedDate":"2022-03-19"},{"lineNumber":76,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":77,"author":{"gitId":"zhenster"},"content":"    public double calculateAverageSatisfaction() {","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"zhenster"},"content":"        int satisfactionSum \u003d 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"zhenster"},"content":"        for (Satisfaction satisfaction : satisfactionList) {","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"zhenster"},"content":"            satisfactionSum +\u003d satisfaction.getSatisfactionValue();","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":82,"author":{"gitId":"zhenster"},"content":"        double satisfactionAverage \u003d (double) satisfactionSum / (double) getSize();","lastModifiedDate":"2022-03-19"},{"lineNumber":83,"author":{"gitId":"zhenster"},"content":"        return satisfactionAverage;","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":85,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":86,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":87}},{"path":"src/main/java/seedu/duke/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"import java.util.Locale;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"import static javax.swing.plaf.synth.Region.TABLE_HEADER;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":" * Represents the User Interface component of the program.","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":" * The Ui object handles all interactions with the user such as printing the outputs to the user","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":" * as well as reading in the user inputs .","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"public class Ui {","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"    private Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"    private static final int ARRAY_INDEX_OFFSET \u003d 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"    private static final String LINE \u003d \"-------------------------------------------------------------------\";","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ITEM_LIST_HEADER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Item List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"    private static final String END_OF_LIST_LINE \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"    private static final String TABLE_HEADER \u003d \"Type\\t\\tRoom Id\\t\\tlevel\\t\\tStatus\\t\\t\\tHousekeeper Name\";","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"     * Returns a string containing the user input.","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"     * @return User input","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"    public String readUserInput() {","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"        String userInput \u003d in.nextLine();","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"        return userInput;","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"    public void printErrorMessage(HotelLiteManagerException exception) {","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(exception.getErrorMessage());","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"        System.out.println(message);","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"    public void printHousekeeperNoted(Housekeeper housekeeper) {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted ! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"        System.out.println(housekeeper);","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"     * Prints out an acknowledgement message to inform the user that the item has been added to the item list as well","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"     * as the number of items within the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"siewyangzhi"},"content":"     * @param listOfItems The item list containing all the items in the inventory.","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"siewyangzhi"},"content":"    public void printAddItemAcknowledgementMessage(ItemList listOfItems) {","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(\"The item and its pax has been added to the list of items in the inventory.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"siewyangzhi"},"content":"        assert (listOfItems.getSize() \u003e 0) : \"Assertion Failed! Number of items in the item list is 0 after an item \"","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"siewyangzhi"},"content":"                + \"was added to it.\";","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"siewyangzhi"},"content":"        System.out.printf(\"There are currently %d items within the inventory.\\n\", listOfItems.getSize());","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"siewyangzhi"},"content":"    public void printItemAlreadyInTheListErrorMessage(String nameOfItemToAdd) {","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"siewyangzhi"},"content":"        System.out.printf(\"Error! %s has already been added to the item list.\\n\", nameOfItemToAdd);","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"siewyangzhi"},"content":"     * Prints out the item name ,pax as well as index for each item that is found within the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"siewyangzhi"},"content":"     * @param listOfItems The item list containing all the items in the inventory.","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"siewyangzhi"},"content":"    public void printItemList(ItemList listOfItems) {","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"siewyangzhi"},"content":"        String itemName;","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"siewyangzhi"},"content":"        int itemPax;","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"siewyangzhi"},"content":"        Item currentItem;","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"siewyangzhi"},"content":"        int currentListIndex;","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(ITEM_LIST_HEADER);","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"siewyangzhi"},"content":"        for (int i \u003d 0; i \u003c listOfItems.getSize(); i++) {","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"siewyangzhi"},"content":"            currentItem \u003d listOfItems.getItem(i);","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"siewyangzhi"},"content":"            itemName \u003d currentItem.getName();","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"siewyangzhi"},"content":"            itemName \u003d itemName.toUpperCase();","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"siewyangzhi"},"content":"            itemPax \u003d currentItem.getPax();","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"siewyangzhi"},"content":"            assert (itemPax \u003e\u003d 0) : \"Assertion Failed! Pax of an item within the listOfItems is less than 0 !\";","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"siewyangzhi"},"content":"            assert (!itemName.isEmpty()) : \"Assertion Failed! The name of the item within the listOfItems is empty !\";","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"siewyangzhi"},"content":"            currentListIndex \u003d i + ARRAY_INDEX_OFFSET;","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"siewyangzhi"},"content":"            System.out.printf(\"%d. Item Name: %s Item Pax: %d\\n\", currentListIndex, itemName, itemPax);","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(END_OF_LIST_LINE);","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"siewyangzhi"},"content":"    public void printNoItemsFoundInListAcknowledgementMessage() {","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(\"No Item matching the keyword has been found.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"FaliciaOng"},"content":"    public void printHousekeeperList(HousekeeperList housekeeperList) {","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"FaliciaOng"},"content":"        printMessage(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Housekeeper List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"FaliciaOng"},"content":"        for (int i \u003d 0; i \u003c housekeeperList.getTotalHousekeeper(); i++) {","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"FaliciaOng"},"content":"            System.out.println((i + 1) + \". \" + housekeeperList.getHousekeeper(i));","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"FaliciaOng"},"content":"        printMessage(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"FaliciaOng"},"content":"    public void printHousekeeperListReset(HousekeeperList housekeeperList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"FaliciaOng"},"content":"        printMessage(\"Housekeeper\u0027s availability has been reset!\");","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"FaliciaOng"},"content":"        printHousekeeperList(housekeeperList);","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"FaliciaOng"},"content":"    public void printFoundHousekeeperList(ArrayList\u003cHousekeeper\u003e housekeeperPrintList, int dayInteger) {","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"FaliciaOng"},"content":"        String day \u003d getDayInString(dayInteger);","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"FaliciaOng"},"content":"        printMessage(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d \" + day + \" List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"FaliciaOng"},"content":"        if (housekeeperPrintList.isEmpty()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"FaliciaOng"},"content":"            printMessage(\"TAKE NOTE! NO ONE IS AVAILABLE!!\");","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"FaliciaOng"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"FaliciaOng"},"content":"        for (Housekeeper housekeeper : housekeeperPrintList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"FaliciaOng"},"content":"            System.out.println(i + \". \" + housekeeper.getName());","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"FaliciaOng"},"content":"            i +\u003d 1;","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"FaliciaOng"},"content":"        printMessage(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"FaliciaOng"},"content":"    private String getDayInString(int dayInteger) {","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"FaliciaOng"},"content":"        String day;","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"FaliciaOng"},"content":"        switch (dayInteger) {","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"FaliciaOng"},"content":"        case 1:","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"FaliciaOng"},"content":"            day \u003d \"Monday\";","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"FaliciaOng"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":126,"author":{"gitId":"FaliciaOng"},"content":"        case 2:","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"FaliciaOng"},"content":"            day \u003d \"Tuesday\";","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"FaliciaOng"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"FaliciaOng"},"content":"        case 3:","lastModifiedDate":"2022-03-27"},{"lineNumber":130,"author":{"gitId":"FaliciaOng"},"content":"            day \u003d \"Wednesday\";","lastModifiedDate":"2022-03-27"},{"lineNumber":131,"author":{"gitId":"FaliciaOng"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"FaliciaOng"},"content":"        case 4:","lastModifiedDate":"2022-03-27"},{"lineNumber":133,"author":{"gitId":"FaliciaOng"},"content":"            day \u003d \"Thursday\";","lastModifiedDate":"2022-03-27"},{"lineNumber":134,"author":{"gitId":"FaliciaOng"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"FaliciaOng"},"content":"        case 5:","lastModifiedDate":"2022-03-27"},{"lineNumber":136,"author":{"gitId":"FaliciaOng"},"content":"            day \u003d \"Friday\";","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"FaliciaOng"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":138,"author":{"gitId":"FaliciaOng"},"content":"        case 6:","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"FaliciaOng"},"content":"            day \u003d \"Saturday\";","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"FaliciaOng"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"FaliciaOng"},"content":"        case 7:","lastModifiedDate":"2022-03-27"},{"lineNumber":142,"author":{"gitId":"FaliciaOng"},"content":"            day \u003d \"Sunday\";","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"FaliciaOng"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"FaliciaOng"},"content":"        default:","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"FaliciaOng"},"content":"            day \u003d \"None of Day\";","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":147,"author":{"gitId":"FaliciaOng"},"content":"        return day;","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"FaliciaOng"},"content":"    public void printOverAgeList(ArrayList\u003cHousekeeper\u003e housekeeperPrintList) {","lastModifiedDate":"2022-03-28"},{"lineNumber":151,"author":{"gitId":"FaliciaOng"},"content":"        printMessage(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Age Limit Exceed List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-28"},{"lineNumber":152,"author":{"gitId":"FaliciaOng"},"content":"        if (housekeeperPrintList.isEmpty()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":153,"author":{"gitId":"FaliciaOng"},"content":"            printMessage(\"Everyone is within age limit\");","lastModifiedDate":"2022-03-28"},{"lineNumber":154,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"FaliciaOng"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"FaliciaOng"},"content":"        for (Housekeeper housekeeper : housekeeperPrintList) {","lastModifiedDate":"2022-03-28"},{"lineNumber":157,"author":{"gitId":"FaliciaOng"},"content":"            System.out.println(i + \". \" + housekeeper);","lastModifiedDate":"2022-03-28"},{"lineNumber":158,"author":{"gitId":"FaliciaOng"},"content":"            i +\u003d 1;","lastModifiedDate":"2022-03-28"},{"lineNumber":159,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"FaliciaOng"},"content":"        printMessage(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":162,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":163,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"siewyangzhi"},"content":"     * Prints an acknowledgement message informing the user that the pax of the item was successfully updated.","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":166,"author":{"gitId":"siewyangzhi"},"content":"     * @param updatedItem The item within the inventory whose pax has been updated by the user.","lastModifiedDate":"2022-03-16"},{"lineNumber":167,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":168,"author":{"gitId":"siewyangzhi"},"content":"    public void printUpdateItemPaxAcknowledgementMessage(Item updatedItem) {","lastModifiedDate":"2022-03-16"},{"lineNumber":169,"author":{"gitId":"siewyangzhi"},"content":"        String updatedItemName \u003d updatedItem.getName();","lastModifiedDate":"2022-03-17"},{"lineNumber":170,"author":{"gitId":"siewyangzhi"},"content":"        updatedItemName \u003d updatedItemName.toUpperCase();","lastModifiedDate":"2022-03-29"},{"lineNumber":171,"author":{"gitId":"siewyangzhi"},"content":"        int updatedItemNewPax \u003d updatedItem.getPax();","lastModifiedDate":"2022-03-17"},{"lineNumber":172,"author":{"gitId":"siewyangzhi"},"content":"        assert (!updatedItemName.isEmpty()) : \"Assertion Failed! Updated item has an empty item name.\";","lastModifiedDate":"2022-03-17"},{"lineNumber":173,"author":{"gitId":"siewyangzhi"},"content":"        assert (updatedItemNewPax \u003e\u003d 0) : \"Assertion Failed! Updated item has a pax that is less than 0.\";","lastModifiedDate":"2022-03-17"},{"lineNumber":174,"author":{"gitId":"siewyangzhi"},"content":"        System.out.printf(\"The pax of %s has been updated to %d.\\n\", updatedItemName, updatedItemNewPax);","lastModifiedDate":"2022-03-17"},{"lineNumber":175,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":176,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":177,"author":{"gitId":"siewyangzhi"},"content":"    public void printUpdateItemNameAcknowledgementMessage(String oldItemName, String newItemName) {","lastModifiedDate":"2022-03-28"},{"lineNumber":178,"author":{"gitId":"siewyangzhi"},"content":"        System.out.printf(\"The name of %s has been updated to %s.\\n\", oldItemName, newItemName);","lastModifiedDate":"2022-03-28"},{"lineNumber":179,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":180,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":181,"author":{"gitId":"zhenster"},"content":"    public void printAddSatisfactionAcknowledgementMessage(SatisfactionList satisfactionList,","lastModifiedDate":"2022-03-16"},{"lineNumber":182,"author":{"gitId":"zhenster"},"content":"                                                           Satisfaction recentSatisfaction) {","lastModifiedDate":"2022-03-16"},{"lineNumber":183,"author":{"gitId":"zhenster"},"content":"        System.out.println(\"The Satisfaction instance \" + recentSatisfaction.getCustomerName() + \": \"","lastModifiedDate":"2022-03-16"},{"lineNumber":184,"author":{"gitId":"zhenster"},"content":"                + recentSatisfaction.getSatisfactionValue() + \" has been added to the list of Satisfactions.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":185,"author":{"gitId":"zhenster"},"content":"        System.out.printf(\"There are currently %d recorded customer satisfactions.\\n\", satisfactionList.getSize());","lastModifiedDate":"2022-03-28"},{"lineNumber":186,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":187,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":188,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":189,"author":{"gitId":"siewyangzhi"},"content":"    public void printDeleteItemAcknowledgementMessage(Item updatedItem, ItemList listOfItems) {","lastModifiedDate":"2022-03-26"},{"lineNumber":190,"author":{"gitId":"siewyangzhi"},"content":"        String itemName \u003d updatedItem.getName();","lastModifiedDate":"2022-03-26"},{"lineNumber":191,"author":{"gitId":"siewyangzhi"},"content":"        itemName \u003d itemName.toUpperCase();","lastModifiedDate":"2022-03-29"},{"lineNumber":192,"author":{"gitId":"siewyangzhi"},"content":"        assert (!itemName.isEmpty()) : \"Assertion Failed! Updated item has an empty item name.\";","lastModifiedDate":"2022-03-26"},{"lineNumber":193,"author":{"gitId":"siewyangzhi"},"content":"        System.out.printf(\"%s has been removed from the Item List.\\n\", itemName);","lastModifiedDate":"2022-03-26"},{"lineNumber":194,"author":{"gitId":"siewyangzhi"},"content":"        System.out.printf(\"There are currently %d items within the Item List.\\n\", listOfItems.getSize());","lastModifiedDate":"2022-03-26"},{"lineNumber":195,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":196,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":197,"author":{"gitId":"zhenster"},"content":"    public void printAddHousekeeperPerformanceAcknowledgementMessage(HousekeeperPerformanceList","lastModifiedDate":"2022-03-26"},{"lineNumber":198,"author":{"gitId":"zhenster"},"content":"                                                                             housekeeperPerformanceList,","lastModifiedDate":"2022-03-26"},{"lineNumber":199,"author":{"gitId":"zhenster"},"content":"                                                                     HousekeeperPerformance housekeeperPerformance) {","lastModifiedDate":"2022-03-26"},{"lineNumber":200,"author":{"gitId":"zhenster"},"content":"        System.out.println(\"The HousekeeperPerformance instance \" + housekeeperPerformance.getName() + \": \"","lastModifiedDate":"2022-03-26"},{"lineNumber":201,"author":{"gitId":"zhenster"},"content":"                + housekeeperPerformance.getRating() + \" has been added to the list of housekeeper performances.\");","lastModifiedDate":"2022-03-26"},{"lineNumber":202,"author":{"gitId":"zhenster"},"content":"        System.out.printf(\"There are currently %d recorded housekeeper performances.\\n\",","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"zhenster"},"content":"                housekeeperPerformanceList.getSize());","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":205,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"XunyiiZ"},"content":"    public void printTableHeader() {","lastModifiedDate":"2022-03-28"},{"lineNumber":207,"author":{"gitId":"XunyiiZ"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-03-28"},{"lineNumber":208,"author":{"gitId":"XunyiiZ"},"content":"        System.out.println(TABLE_HEADER);","lastModifiedDate":"2022-03-28"},{"lineNumber":209,"author":{"gitId":"XunyiiZ"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-03-28"},{"lineNumber":210,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":211,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":212,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"zhenster":14,"FaliciaOng":86,"XunyiiZ":10,"siewyangzhi":102}},{"path":"src/main/java/seedu/duke/UnderAgeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"public class UnderAgeException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! The user is underage(\u003c21) and not allowed to work.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"FaliciaOng":11}},{"path":"src/main/java/seedu/duke/UserDoesNotExistException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":" * This exception is thrown if housekeeper profile has has not been entered and user tries to add his/her availability.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"public class UserDoesNotExistException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! User does not exist.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"FaliciaOng":13}},{"path":"src/main/java/seedu/duke/ViewHousekeeperListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"public class ViewHousekeeperListCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"     * Printing the list of housekeeper name, age and availability.","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"     * @param ui The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"        ui.printHousekeeperList(housekeeperList);","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"aiman-imtiaz":1,"FaliciaOng":13,"XunyiiZ":1,"siewyangzhi":3}},{"path":"src/main/java/seedu/duke/ViewHousekeeperPerformancesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" * Represents a command to view the list of housekeeper performances.","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":" * The user command is \"view housekeeper performances.\"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"public class ViewHousekeeperPerformancesCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"        HousekeeperPerformanceList housekeeperPerformanceList \u003d listContainer.getHousekeeperPerformanceList();","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"        housekeeperPerformanceList.viewPerformances();","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"zhenster":14,"siewyangzhi":3}},{"path":"src/main/java/seedu/duke/ViewSatisfactionsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" * Class that implements execution behavior for user command","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":" * \"View Satisfactions.\" Contains override of execution","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":" * method in Command class that prints out the information of the Satisfaction objects","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":" * in the given satisfactionList (i.e. prints out each Satisfaction object\u0027s","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":" * corresponding customer name and satisfaction value).","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"public class ViewSatisfactionsCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"     * Override of execute command in Command class.","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"     * Prints out the information of the Satisfaction objects","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"     * in the given satisfactionList (i.e. prints out each Satisfaction object\u0027s","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"     * corresponding customer name and satisfaction value).","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"     * @param ui               The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"    public void execute(ListContainer listContainer, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"        SatisfactionList satisfactionList \u003d listContainer.getSatisfactionList();","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"        satisfactionList.viewSatisfactions();","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"    ","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":26,"FaliciaOng":1,"XunyiiZ":2,"siewyangzhi":2}},{"path":"src/main/java/seedu/duke/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.HotelLiteManagerException;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":" * Abstract class that generalizes all Commands.","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":" * Contains an abstract \"execute\" method and keeps track of","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":" * whether the program should exit.","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"public abstract class Command {","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"    protected boolean isExit;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"    protected Command() {","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"     * Abstract execute command that all Command classes should","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"     * override based on their specific behavior.","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"     * @param ui The instance of the Ui class (used for printing additional messages when a command is executed.","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"     * @throws HotelLiteManagerException If there is any error with user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"    public abstract void execute(ListContainer listContainer, Ui ui)","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"            throws HotelLiteManagerException, IOException;","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"        return this.isExit;","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"zhenster":15,"FaliciaOng":12,"XunyiiZ":6,"siewyangzhi":5}},{"path":"src/main/java/seedu/duke/command/assigncommand/AssignHousekeeperCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package seedu.duke.command.assigncommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.HotelLiteManagerException;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.InvalidAvailabilityException;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.Room;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.AssignmentMap;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.RoomList;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.HousekeeperList;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.Housekeeper;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.InvalidRoomNumberException;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.InvalidHousekeeperProfile;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"aiman-imtiaz"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":" * Identifies the name of the housekeeper and assign to room id","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"aiman-imtiaz"},"content":" * housekeeper list.","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"public class AssignHousekeeperCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"    private String name;","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"aiman-imtiaz"},"content":"    private String roomID;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final String ASSIGNMENT_INDICATE \u003d \"##\";","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final int ONLY_ONE_FIELD_ENTERED \u003d 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"aiman-imtiaz"},"content":"    private static Logger logger \u003d Logger.getLogger(\"Assign Housekeeper\");","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"aiman-imtiaz"},"content":"    public AssignHousekeeperCommand(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"aiman-imtiaz"},"content":"        if (commandStringWithoutCommand.isEmpty()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new InvalidAvailabilityException();","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"aiman-imtiaz"},"content":"        String[] input \u003d extractInput(commandStringWithoutCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"aiman-imtiaz"},"content":"        String name \u003d input[0].trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"aiman-imtiaz"},"content":"        if (input.length \u003d\u003d ONLY_ONE_FIELD_ENTERED) {","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new InvalidAvailabilityException();","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"aiman-imtiaz"},"content":"        String id \u003d input[1].trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"aiman-imtiaz"},"content":"        if (id.isEmpty()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new InvalidAvailabilityException();","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"aiman-imtiaz"},"content":"        setName(name);","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"aiman-imtiaz"},"content":"        setRoomID(id);","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"aiman-imtiaz"},"content":"        logger.log(Level.INFO, \"Assign Command parsed\");","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"aiman-imtiaz"},"content":"     * Method used to extract the name and availability of the housekeeper.","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"aiman-imtiaz"},"content":"     * @param commandStringWithoutCommand Input entered by the user.","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"aiman-imtiaz"},"content":"     * @return Input consisting of housekeeper name and availability.","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"aiman-imtiaz"},"content":"     * @throws HotelLiteManagerException When description of availability is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"aiman-imtiaz"},"content":"    private String[] extractInput(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"aiman-imtiaz"},"content":"        boolean isSymbolIncorrect \u003d !commandStringWithoutCommand.contains(ASSIGNMENT_INDICATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"aiman-imtiaz"},"content":"        if (isSymbolIncorrect) {","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new InvalidAvailabilityException();","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"aiman-imtiaz"},"content":"        String[] input \u003d commandStringWithoutCommand.split(ASSIGNMENT_INDICATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"aiman-imtiaz"},"content":"        return input;","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"aiman-imtiaz"},"content":"    public String getName() {","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"aiman-imtiaz"},"content":"        return name;","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"aiman-imtiaz"},"content":"    public void setName(String name) {","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"aiman-imtiaz"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"aiman-imtiaz"},"content":"    public String getroomID() {","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"aiman-imtiaz"},"content":"        return roomID;","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"aiman-imtiaz"},"content":"    public void setRoomID(String roomID) {","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"aiman-imtiaz"},"content":"        this.roomID \u003d roomID;","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"aiman-imtiaz"},"content":"     * Get the Name of the housekeeper and verify that housekeeper is in records. If in records, add","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"aiman-imtiaz"},"content":"     * his/her availability into housekeeper list.","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"XunyiiZ"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"aiman-imtiaz"},"content":"     * @param ui The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"aiman-imtiaz"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"XunyiiZ"},"content":"    public void execute(ListContainer listContainer, Ui ui)","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"XunyiiZ"},"content":"            throws InvalidRoomNumberException, InvalidHousekeeperProfile, IOException {","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"XunyiiZ"},"content":"        final AssignmentMap assignmentMap \u003d listContainer.getAssignmentMap();","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"XunyiiZ"},"content":"        final HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"XunyiiZ"},"content":"        final RoomList roomList \u003d listContainer.getRoomList();","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"aiman-imtiaz"},"content":"        String roomID \u003d getroomID();","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"aiman-imtiaz"},"content":"        assert !roomID.isEmpty() : \"ID should not be empty\";","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"aiman-imtiaz"},"content":"        String name \u003d getName();","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"aiman-imtiaz"},"content":"        assert !name.isEmpty() : \"name should not be empty\";","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"XunyiiZ"},"content":"        if (!isNameExist(name, housekeeperList)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"XunyiiZ"},"content":"            throw new InvalidHousekeeperProfile();","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"XunyiiZ"},"content":"        int roomIdNumber \u003d Integer.parseInt(roomID);","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"XunyiiZ"},"content":"        if (!isRoomIdValid(roomIdNumber, roomList)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"XunyiiZ"},"content":"            throw new InvalidRoomNumberException();","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"XunyiiZ"},"content":"        assignmentMap.addAssignment(name, roomIdNumber);","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"XunyiiZ"},"content":"        assignmentMap.save();","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"aiman-imtiaz"},"content":"        ui.printMessage(\"Assigned \" + name + \" to room no. \" + roomID + \".\");","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"aiman-imtiaz"},"content":"        logger.log(Level.INFO, \"end of processing\");","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"XunyiiZ"},"content":"    private boolean isRoomIdValid(int roomIdNumber, RoomList roomList) {","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"XunyiiZ"},"content":"        for (Room room : roomList.getRoomList()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"XunyiiZ"},"content":"            if (room.getRoomId() \u003d\u003d roomIdNumber) {","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"XunyiiZ"},"content":"                return true;","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"XunyiiZ"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"XunyiiZ"},"content":"        return false;","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"XunyiiZ"},"content":"    private boolean isNameExist(String name, HousekeeperList housekeeperList) {","lastModifiedDate":"2022-03-29"},{"lineNumber":127,"author":{"gitId":"XunyiiZ"},"content":"        for (Housekeeper housekeeper : housekeeperList.getHousekeeperList()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":128,"author":{"gitId":"XunyiiZ"},"content":"            if (housekeeper.getName().equals(name)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":129,"author":{"gitId":"XunyiiZ"},"content":"                return true;","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"XunyiiZ"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"XunyiiZ"},"content":"        return false;","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":134,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"aiman-imtiaz":86,"XunyiiZ":47,"siewyangzhi":1}},{"path":"src/main/java/seedu/duke/command/eventcommands/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package seedu.duke.command.eventcommands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"public class AddEventCommand {","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"    ","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"aiman-imtiaz":5}},{"path":"src/main/java/seedu/duke/command/eventcommands/RemoveEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package seedu.duke.command.eventcommands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"public class RemoveEventCommand {","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"aiman-imtiaz":4}},{"path":"src/main/java/seedu/duke/command/eventcommands/ViewEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package seedu.duke.command.eventcommands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"public class ViewEventCommand {","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"aiman-imtiaz":4}},{"path":"src/main/java/seedu/duke/command/itemcommand/AddItemCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke.command.itemcommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.HotelLiteManagerException;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.EmptyItemPaxException;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.EmptyItemNameException;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.InvalidCommandException;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.Item;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.ItemList;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.InvalidItemPaxException;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"import java.util.Locale;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"import java.util.StringTokenizer;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":" * Represents a command to add a new item to the item list. An AddItemCommand object consists of the name of the item","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":" * to add as well as its pax.","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"public class AddItemCommand extends Command {","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"    private static final String DELIMITER \u003d \"/\";","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"    private static final int NUMBER_OF_PARTS_IN_COMMAND \u003d 2;","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"    private Item item;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"    private static Logger itemLogger \u003d Logger.getLogger(\"itemLogger\");","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"     * Takes in the user input and checks if the formatting of the Add Item Command within the user input is","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"     * valid.","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"     * Extracts out the item name and item pax from the user input and creates an AddItemCommand object.","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if the formatting of the add item pax command is invalid, the item pax is","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"     *                                   empty or invalid, the item name is empty, or the item name and pax are both","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"     *                                   empty.","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"    public AddItemCommand(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"        if (userInput.startsWith(DELIMITER)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Detected an empty item name for AddItemCommand. Exception thrown.\");","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"siewyangzhi"},"content":"            throw new EmptyItemNameException();","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"siewyangzhi"},"content":"        if (userInput.endsWith(DELIMITER)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Detected an empty item name for AddItemCommand. Exception thrown.\");","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"siewyangzhi"},"content":"            throw new EmptyItemPaxException();","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"        StringTokenizer tokens \u003d new StringTokenizer(userInput, DELIMITER);","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"        if (tokens.countTokens() !\u003d NUMBER_OF_PARTS_IN_COMMAND) {","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Invalid formatting for AddItemCommand detected. Exception thrown.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"siewyangzhi"},"content":"        String itemName \u003d extractItemName(tokens);","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"siewyangzhi"},"content":"        int itemPax \u003d extractItemPax(tokens);","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d new Item(itemName, itemPax);","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"siewyangzhi"},"content":"        setItem(item);","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"siewyangzhi"},"content":"     * Returns the item name extracted from the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"siewyangzhi"},"content":"     * @param tokens String tokens of the user input.","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"siewyangzhi"},"content":"     * @return The item name within the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if item name is empty.","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"siewyangzhi"},"content":"    private String extractItemName(StringTokenizer tokens) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"siewyangzhi"},"content":"        String itemName \u003d tokens.nextToken();","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"siewyangzhi"},"content":"        itemName \u003d itemName.trim();","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"siewyangzhi"},"content":"        if (itemName.isEmpty()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Detected an empty item name for AddItemCommand. Exception thrown.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"siewyangzhi"},"content":"            throw new EmptyItemNameException();","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"siewyangzhi"},"content":"        return itemName;","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"siewyangzhi"},"content":"     * Returns the item pax extracted from the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"siewyangzhi"},"content":"     * @param token A string token containing the user input after the delimiter.","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"siewyangzhi"},"content":"     * @return The item pax within the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if item pax is empty or invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"siewyangzhi"},"content":"    private int extractItemPax(StringTokenizer token) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"siewyangzhi"},"content":"        int itemPax;","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"siewyangzhi"},"content":"        String itemPaxStringVersion \u003d token.nextToken();","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"siewyangzhi"},"content":"        itemPaxStringVersion \u003d itemPaxStringVersion.trim();","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"siewyangzhi"},"content":"        if (itemPaxStringVersion.isEmpty()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Detected an empty item name for AddItemCommand. Exception thrown.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"siewyangzhi"},"content":"            throw new EmptyItemPaxException();","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"siewyangzhi"},"content":"        try {","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"siewyangzhi"},"content":"            itemPax \u003d Integer.parseInt(itemPaxStringVersion);","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"siewyangzhi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Detected an invalid item pax for AddItemCommand. Exception thrown.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":96,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidItemPaxException();","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"siewyangzhi"},"content":"        if (itemPax \u003c\u003d 0) {","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Detected an invalid item pax for AddItemCommand. Exception thrown.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidItemPaxException();","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"siewyangzhi"},"content":"        return itemPax;","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"siewyangzhi"},"content":"     * Adds a new item to the item list using the item name and pax found in the instance variable","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"siewyangzhi"},"content":"     * named item within the AddItemPaxCommand object.","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"siewyangzhi"},"content":"     * Returns an acknowledgement message to inform the user that the item has been added to the item list as well","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"siewyangzhi"},"content":"     * as the number of items within the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"siewyangzhi"},"content":"     * @param ui The object that deals with user interface for the program.","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if the item name within the item object does not exist in the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"siewyangzhi"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"XunyiiZ"},"content":"        ItemList listOfItems \u003d listContainer.getItemList();","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d getItem();","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"siewyangzhi"},"content":"        assert (item !\u003d null) : \"Assertion Failed! There is no item within the AddItemCommand object.\";","lastModifiedDate":"2022-03-17"},{"lineNumber":118,"author":{"gitId":"siewyangzhi"},"content":"        boolean isItemAlreadyInTheList \u003d listOfItems.addItemToList(item);","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"siewyangzhi"},"content":"        if (isItemAlreadyInTheList \u003d\u003d true) {","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"siewyangzhi"},"content":"            String nameOfItemToAdd \u003d item.getName();","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"siewyangzhi"},"content":"            nameOfItemToAdd \u003d nameOfItemToAdd.toUpperCase();","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"siewyangzhi"},"content":"            ui.printItemAlreadyInTheListErrorMessage(nameOfItemToAdd);","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"siewyangzhi"},"content":"            return;","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"siewyangzhi"},"content":"        ui.printAddItemAcknowledgementMessage(listOfItems);","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"siewyangzhi"},"content":"    public Item getItem() {","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"siewyangzhi"},"content":"        return item;","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"siewyangzhi"},"content":"    public void setItem(Item item) {","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"siewyangzhi"},"content":"        this.item \u003d item;","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"XunyiiZ":1,"siewyangzhi":135}},{"path":"src/main/java/seedu/duke/command/itemcommand/DeleteItemCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke.command.itemcommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.HotelLiteManagerException;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.Item;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.EmptyItemNameException;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.ItemList;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"public class DeleteItemCommand extends Command {","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"    private Item item;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"    private static Logger itemLogger \u003d Logger.getLogger(\"itemLogger\");","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"    public DeleteItemCommand(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"        if (userInput.isEmpty()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"            throw new EmptyItemNameException();","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"        String itemName \u003d userInput.trim();","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d new Item(itemName.trim());","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"        setItem(item);","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"    public Item getItem() {","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"        return item;","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"    private void setItem(Item item) {","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"        this.item \u003d item;","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"        Item itemToDelete \u003d getItem();","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"        ItemList listOfItems \u003d listContainer.getItemList();","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"        listOfItems.deleteItemInList(itemToDelete);","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"        ui.printDeleteItemAcknowledgementMessage(itemToDelete, listOfItems);","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"siewyangzhi":41}},{"path":"src/main/java/seedu/duke/command/itemcommand/SearchItemCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke.command.itemcommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.HotelLiteManagerException;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.EmptyKeywordException;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.ItemList;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"public class SearchItemCommand extends Command {","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    private String keyword;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"    public SearchItemCommand(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"        String keyword \u003d userInput.trim();","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"            throw new EmptyKeywordException();","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"        setKeyword(keyword);","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"        ItemList listOfItems \u003d listContainer.getItemList();","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"        String keyword \u003d getKeyword();","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"        ItemList listOfMatchingItems \u003d listOfItems.findItemsInList(keyword);","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"        int numberOfItemsFound \u003d listOfMatchingItems.getSize();","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"        if (numberOfItemsFound \u003d\u003d 0) {","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"            ui.printNoItemsFoundInListAcknowledgementMessage();","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"        } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"            ui.printItemList(listOfMatchingItems);","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"    public String getKeyword() {","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"        return keyword;","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"    public void setKeyword(String keyword) {","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"siewyangzhi":41}},{"path":"src/main/java/seedu/duke/command/itemcommand/UpdateItemNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke.command.itemcommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.HotelLiteManagerException;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.EmptyItemNameException;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.InvalidCommandException;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.ItemList;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"import java.util.Locale;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"import java.util.StringTokenizer;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"public class UpdateItemNameCommand extends Command {","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"    private static final String DELIMITER \u003d \"/\";","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"    private String oldItemName;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"    private String newItemName;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"    private static final int NUMBER_OF_PARTS_IN_COMMAND \u003d 2;","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"    private static Logger itemLogger \u003d Logger.getLogger(\"itemLogger\");","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"    public UpdateItemNameCommand(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"        if (userInput.startsWith(DELIMITER)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"The item name of the item to update is empty for the Update Item Name \"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"                    + \"Command. Exception thrown.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"            throw new EmptyItemNameException();","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"        if (userInput.endsWith(DELIMITER)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"The new item name of the item to update is empty for the Update Item \"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"                    + \"Name Command. Exception thrown\");","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"            throw new EmptyItemNameException();","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"        StringTokenizer tokens \u003d new StringTokenizer(userInput, DELIMITER);","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"        if (tokens.countTokens() !\u003d NUMBER_OF_PARTS_IN_COMMAND) {","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Invalid formatting for the Update Item Name Command detected.\"","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"                    + \" Exception thrown.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"        String oldItemName \u003d extractCurrentItemName(tokens);","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"        String newItemName \u003d extractNewItemName(tokens);","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"siewyangzhi"},"content":"        setOldItemName(oldItemName);","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"        setNewItemName(newItemName);","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"siewyangzhi"},"content":"    private String extractCurrentItemName(StringTokenizer tokens) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"        String currentItemName \u003d tokens.nextToken();","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"        currentItemName \u003d currentItemName.trim();","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"        if (currentItemName.isEmpty()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Detected an empty item name for the item whose name we want to update\"","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"siewyangzhi"},"content":"                    + \"in the Update Item Name Command. Exception thrown.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"siewyangzhi"},"content":"            throw new EmptyItemNameException();","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"siewyangzhi"},"content":"        return currentItemName;","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"siewyangzhi"},"content":"    private String extractNewItemName(StringTokenizer tokens) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"siewyangzhi"},"content":"        String newItemName \u003d tokens.nextToken();","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"siewyangzhi"},"content":"        newItemName \u003d newItemName.trim();","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"siewyangzhi"},"content":"        if (newItemName.isEmpty()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"The new name of the item whose name we want to update is empty\"","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"siewyangzhi"},"content":"                    + \"in the Update Item Name Command. Exception thrown.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"siewyangzhi"},"content":"            throw new EmptyItemNameException();","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"siewyangzhi"},"content":"        return newItemName;","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"siewyangzhi"},"content":"    public String getOldItemName() {","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"siewyangzhi"},"content":"        return oldItemName;","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"siewyangzhi"},"content":"    public void setOldItemName(String oldItemName) {","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"siewyangzhi"},"content":"        this.oldItemName \u003d oldItemName;","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"siewyangzhi"},"content":"    public String getNewItemName() {","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"siewyangzhi"},"content":"        return newItemName;","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"siewyangzhi"},"content":"    public void setNewItemName(String newItemName) {","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"siewyangzhi"},"content":"        this.newItemName \u003d newItemName;","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"siewyangzhi"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"siewyangzhi"},"content":"        ItemList listOfItems \u003d listContainer.getItemList();","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"siewyangzhi"},"content":"        String oldItemName \u003d getOldItemName();","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"siewyangzhi"},"content":"        String newItemName \u003d getNewItemName();","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"siewyangzhi"},"content":"        listOfItems.updateItemNameInList(oldItemName, newItemName);","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"siewyangzhi"},"content":"        oldItemName \u003d oldItemName.toUpperCase();","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"siewyangzhi"},"content":"        newItemName \u003d newItemName.toUpperCase();","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"siewyangzhi"},"content":"        ui.printUpdateItemNameAcknowledgementMessage(oldItemName, newItemName);","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"siewyangzhi":93}},{"path":"src/main/java/seedu/duke/command/itemcommand/UpdateItemPaxCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke.command.itemcommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.Item;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.HotelLiteManagerException;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.EmptyItemNameException;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.EmptyItemPaxException;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.InvalidCommandException;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.InvalidItemPaxException;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.ItemList;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"import java.util.StringTokenizer;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":" * Represents a command to update the pax of an item within the item list. An UpdateItemPaxCommand object consists of","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":" * the name of the item to update and the new pax value.","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"public class UpdateItemPaxCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"    private Item item;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"    private static final String DELIMITER \u003d \"/\";","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"    private static final int NUMBER_OF_PARTS_IN_COMMAND \u003d 2;","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"    private static Logger itemLogger \u003d Logger.getLogger(\"itemLogger\");","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"     * Takes in the user input and checks if the formatting of the Update Item Pax Command within the user input is","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"     * valid.","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"     * Extracts out the item name and item pax from the user input and creates an UpdateItemPaxCommand object.","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if the formatting of the update item pax command is invalid, the item pax is","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"     *                                   empty or invalid, the item name is empty, or the item name and pax are both","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"     *                                   empty.","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"    public UpdateItemPaxCommand(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"        if (userInput.startsWith(DELIMITER)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Detected an empty item name for UpdateItemCommand. \"","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"                    + \"Exception thrown.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"            throw new EmptyItemNameException();","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"        if (userInput.endsWith(DELIMITER)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Detected an empty item name for UpdateItemCommand. \"","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"siewyangzhi"},"content":"                    + \"Exception thrown.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"siewyangzhi"},"content":"            throw new EmptyItemPaxException();","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"        StringTokenizer tokens \u003d new StringTokenizer(userInput, DELIMITER);","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"        if (tokens.countTokens() !\u003d NUMBER_OF_PARTS_IN_COMMAND) {","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Invalid formatting for UpdateItemCommand detected.\"","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"siewyangzhi"},"content":"                    + \" Exception thrown.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"siewyangzhi"},"content":"        String itemName \u003d extractItemName(tokens);","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"siewyangzhi"},"content":"        int itemPax \u003d extractItemPax(tokens);","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d new Item(itemName, itemPax);","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"siewyangzhi"},"content":"        setItem(item);","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"siewyangzhi"},"content":"     * Returns the item name extracted from the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"siewyangzhi"},"content":"     * @param tokens String tokens of the user input.","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"siewyangzhi"},"content":"     * @return The item name within the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if item name is empty.","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"siewyangzhi"},"content":"    private String extractItemName(StringTokenizer tokens) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"siewyangzhi"},"content":"        String itemName \u003d tokens.nextToken();","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"siewyangzhi"},"content":"        itemName \u003d itemName.trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"siewyangzhi"},"content":"        if (itemName.isEmpty()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Detected an empty item name for UpdateItemPaxCommand. \"","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"siewyangzhi"},"content":"                    + \"Exception thrown.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"siewyangzhi"},"content":"            throw new EmptyItemNameException();","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"siewyangzhi"},"content":"        return itemName;","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"siewyangzhi"},"content":"     * Returns the item pax extracted from the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"siewyangzhi"},"content":"     * @param token A string token containing the user input after the delimiter.","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"siewyangzhi"},"content":"     * @return The item pax within the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if item pax is empty or invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"siewyangzhi"},"content":"    private int extractItemPax(StringTokenizer token) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"siewyangzhi"},"content":"        int itemPax;","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"siewyangzhi"},"content":"        String itemPaxStringVersion \u003d token.nextToken();","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"siewyangzhi"},"content":"        itemPaxStringVersion \u003d itemPaxStringVersion.trim();","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"siewyangzhi"},"content":"        if (itemPaxStringVersion.isEmpty()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Detected an empty item name for UpdateItemPaxCommand. \"","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"siewyangzhi"},"content":"                    + \"Exception thrown.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"siewyangzhi"},"content":"            throw new EmptyItemPaxException();","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"siewyangzhi"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"siewyangzhi"},"content":"            itemPax \u003d Integer.parseInt(itemPaxStringVersion);","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"siewyangzhi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Detected an invalid item pax for UpdateItemPaxCommand. \"","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"siewyangzhi"},"content":"                    + \"Exception thrown.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidItemPaxException();","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"siewyangzhi"},"content":"        if (itemPax \u003c 0) {","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Detected an invalid item pax for UpdateItemPaxCommand. \"","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"siewyangzhi"},"content":"                    + \"Exception thrown.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidItemPaxException();","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"siewyangzhi"},"content":"        return itemPax;","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"siewyangzhi"},"content":"     * Updates the pax of the item within the item list using the item name and new pax found in the instance","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"siewyangzhi"},"content":"     * variable named item within the UpdateItemPaxCommand object.","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"siewyangzhi"},"content":"     * @param ui The object that deals with user interface for the program.","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if the item name within the item object does not exist in the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"XunyiiZ"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"XunyiiZ"},"content":"        ItemList listOfItems \u003d listContainer.getItemList();","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"siewyangzhi"},"content":"        assert (item !\u003d null) : \"Assertion Failed! There is no item within the UpdateItemPaxCommand object.\";","lastModifiedDate":"2022-03-17"},{"lineNumber":121,"author":{"gitId":"siewyangzhi"},"content":"        listOfItems.updateItemPaxInList(item);","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"siewyangzhi"},"content":"        ui.printUpdateItemPaxAcknowledgementMessage(item);","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"siewyangzhi"},"content":"    public Item getItem() {","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"siewyangzhi"},"content":"        return item;","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"siewyangzhi"},"content":"    public void setItem(Item item) {","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"siewyangzhi"},"content":"        this.item \u003d item;","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"XunyiiZ":2,"siewyangzhi":130}},{"path":"src/main/java/seedu/duke/command/itemcommand/ViewItemListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke.command.itemcommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.ItemList;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":" * Represents a command to view all the items currently within the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"public class ViewItemListCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"     * Prints out the item name ,pax as well as index for each item that is found within the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"     * @param housekeeperList  The list of housekeeper recorded. N/A for this class, but","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"     *                         must be included for the execution override.","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"     * @param satisfactionList The given list of Satisfaction objects. N/A for this class, but","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"     *                         must be included for the execution override.","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"     * @param assignmentMap    The assignments of the various housekeepers.","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"     * @param roomList         The given list of Room objects. N/A for this class, but","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"     *                         must be included for the execution override.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"     * @param listOfItems      The list of items within the inventory.","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"     * @param ui               The object that deals with user interface for the program.","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if the item name within the item object does not exist in the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"    public void execute(ListContainer listContainer, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"        ItemList listOfItems \u003d listContainer.getItemList();","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"        ui.printItemList(listOfItems);","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"XunyiiZ":2,"siewyangzhi":29}},{"path":"src/main/java/seedu/duke/command/itemcommand/ViewItemWithZeroPaxCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke.command.itemcommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.ItemList;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"public class ViewItemWithZeroPaxCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"    public void execute(ListContainer listContainer, Ui ui) {","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"        ItemList listOfItems \u003d listContainer.getItemList();","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"        ItemList listOfItemsWithZeroPax \u003d listOfItems.findItemsWithZeroPaxInList();","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"        ui.printItemList(listOfItemsWithZeroPax);","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"siewyangzhi":14}},{"path":"src/main/java/seedu/duke/storage/AssignmentListFileManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke.storage;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.Room;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.RoomType;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"import java.io.File;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"public class AssignmentListFileManager extends FileManager {","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"    private static final String FILE_PATH \u003d \"assignment_list.txt\";","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"    public void load(HashMap\u003cInteger, String\u003e map) throws IOException {","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"        Boolean isNewFile \u003d !isFileExist(FILE_PATH);","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"        File file \u003d getFile(FILE_PATH);","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"        if (isNewFile) {","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"            return;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"        Scanner scan \u003d new Scanner(file);","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"        while (scan.hasNext()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"            String line \u003d scan.nextLine();","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"            String[] splitData \u003d line.split(FILE_SEPARATOR);","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"            int roomId \u003d Integer.parseInt(splitData[0].trim());","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"            String name \u003d splitData[1].trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"            map.put(roomId, name);","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"XunyiiZ"},"content":"    public void save(HashMap\u003cInteger, String\u003e map) throws IOException {","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"XunyiiZ"},"content":"        File file \u003d getFile(FILE_PATH);","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"XunyiiZ"},"content":"        FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"XunyiiZ"},"content":"        for (Map.Entry\u003cInteger, String\u003e set :","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"XunyiiZ"},"content":"                map.entrySet()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"XunyiiZ"},"content":"            fileWriter.write(set.getKey() + \" | \" + set.getValue()","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"XunyiiZ"},"content":"                    + System.lineSeparator());","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"XunyiiZ"},"content":"        fileWriter.close();","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"XunyiiZ":44}},{"path":"src/main/java/seedu/duke/storage/EventListFileManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package seedu.duke.storage;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.Event;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.Room;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.RoomType;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"import java.io.File;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"aiman-imtiaz"},"content":"public class EventListFileManager extends FileManager {","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final String FILE_PATH \u003d \"event_file.txt\";","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"aiman-imtiaz"},"content":"    public void load(ArrayList\u003cEvent\u003e eventList) throws IOException {","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"aiman-imtiaz"},"content":"        Boolean isNewFile \u003d !isFileExist(FILE_PATH);","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"aiman-imtiaz"},"content":"        File file \u003d getFile(FILE_PATH);","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"aiman-imtiaz"},"content":"        Scanner scan \u003d new Scanner(file);","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"aiman-imtiaz"},"content":"        while (scan.hasNext()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":"            String line \u003d scan.nextLine();","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"aiman-imtiaz"},"content":"            String[] splitData \u003d line.split(FILE_SEPARATOR);","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"            String description \u003d splitData[0].trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"            LocalDate by \u003d LocalDate.parse((splitData[1].trim()));","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"            Event event \u003d new Event(description, by);","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"aiman-imtiaz"},"content":"            eventList.add(event);","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"aiman-imtiaz"},"content":"    public void save(ArrayList\u003cEvent\u003e eventList) throws IOException {","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"aiman-imtiaz"},"content":"        File file \u003d getFile(FILE_PATH);","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"aiman-imtiaz"},"content":"        FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"aiman-imtiaz"},"content":"        for (Event event : eventList) {","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"aiman-imtiaz"},"content":"            fileWriter.write(event.toFileString() + System.lineSeparator());","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"aiman-imtiaz"},"content":"        fileWriter.close();","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"aiman-imtiaz":41}},{"path":"src/main/java/seedu/duke/storage/FileManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke.storage;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"import java.io.File;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"public abstract class FileManager {","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"    public static final String FILE_SEPARATOR \u003d \"\\\\|\";","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"    public File getFile(String filePath) throws IOException {","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"        if (!file.exists()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"            file.createNewFile();","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"        return file;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"    public boolean isFileExist(String filePath) {","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"        return file.exists();","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"XunyiiZ":21}},{"path":"src/main/java/seedu/duke/storage/RoomFileManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke.storage;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.Room;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.RoomType;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"import java.io.File;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"public class RoomFileManager extends FileManager {","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"    private static final String FILE_PATH \u003d \"room_file.txt\";","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"    public void load(ArrayList\u003cRoom\u003e roomList) throws IOException {","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"        Boolean isNewFile \u003d !isFileExist(FILE_PATH);","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"        File file \u003d getFile(FILE_PATH);","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"        if (isNewFile) {","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"            createNewRoomList(roomList);","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"            return;","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"        Scanner scan \u003d new Scanner(file);","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"        while (scan.hasNext()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"            String line \u003d scan.nextLine();","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"            String[] splitData \u003d line.split(FILE_SEPARATOR);","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"            String type \u003d splitData[0].trim();","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"            RoomType roomType \u003d getRoomTypeStr(type);","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"            int id \u003d Integer.parseInt(splitData[1].trim());","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"            int level \u003d Integer.parseInt(splitData[2].trim());","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"            String status \u003d splitData[3].trim();","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"XunyiiZ"},"content":"            Room room \u003d new Room(id, level, roomType, status);","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"XunyiiZ"},"content":"            roomList.add(room);","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"XunyiiZ"},"content":"    private void createNewRoomList(ArrayList\u003cRoom\u003e roomList) {","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"XunyiiZ"},"content":"        Room r1 \u003d new Room(101, 1, RoomType.Single);","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(102, 1, RoomType.Single);","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(103, 1, RoomType.Double);","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(201, 2, RoomType.Double);","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(201, 2, RoomType.Triple);","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(202, 2, RoomType.Triple);","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(203, 2, RoomType.Queen);","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(301, 3, RoomType.Queen);","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(302, 3, RoomType.King);","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(303, 3, RoomType.King);","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(401, 4, RoomType.Twin);","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(402, 4, RoomType.Twin);","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"XunyiiZ"},"content":"    private RoomType getRoomTypeStr(String type) {","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"XunyiiZ"},"content":"        switch (type) {","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"XunyiiZ"},"content":"        case \"Single\":","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"XunyiiZ"},"content":"            return RoomType.Single;","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"XunyiiZ"},"content":"        case \"Double\":","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"XunyiiZ"},"content":"            return RoomType.Double;","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"XunyiiZ"},"content":"        case \"Triple\":","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"XunyiiZ"},"content":"            return RoomType.Triple;","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"XunyiiZ"},"content":"        case \"Queen\":","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"XunyiiZ"},"content":"            return RoomType.Queen;","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"XunyiiZ"},"content":"        case \"King\":","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"XunyiiZ"},"content":"            return RoomType.King;","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"XunyiiZ"},"content":"        case \"Twin\":","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"XunyiiZ"},"content":"            return RoomType.Twin;","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"XunyiiZ"},"content":"        default: return null;","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"XunyiiZ"},"content":"    public void save(ArrayList\u003cRoom\u003e roomArrayList) throws IOException {","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"XunyiiZ"},"content":"        File file \u003d getFile(FILE_PATH);","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"XunyiiZ"},"content":"        FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"XunyiiZ"},"content":"        for (Room room : roomArrayList) {","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"XunyiiZ"},"content":"            //String housekeeperName \u003d assignmentMap.getHouseKeeperNameByRoom(room);","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"XunyiiZ"},"content":"            fileWriter.write(room.toFileString() + System.lineSeparator());","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"XunyiiZ"},"content":"        fileWriter.close();","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"XunyiiZ":91}},{"path":"src/main/java/seedu/duke/storage/SatisfactionListFileManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke.storage;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.AssignmentMap;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.Room;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.Satisfaction;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"import java.io.File;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"public class SatisfactionListFileManager extends FileManager {","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"    private static final String FILE_PATH \u003d \"satisfaction_list.txt\";","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"    public void save(ArrayList\u003cSatisfaction\u003e satisfactions) throws IOException {","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"        File file \u003d getFile(FILE_PATH);","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"        FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"XunyiiZ":20}},{"path":"src/test/java/seedu/duke/AddAvailabilityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"public class AddAvailabilityTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_addCommandNameAvailability_success() throws Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"        CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"        Command command \u003d parser.parse(\"availability Susan / 1,3\");","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"        AddAvailabilityCommand addAvailabilityCommand \u003d (AddAvailabilityCommand) command;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(\"1,3\", addAvailabilityCommand.getAvailability());","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(\"susan\", addAvailabilityCommand.getName());","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_addCommandInvalidAvailability_exceptionThrown() {","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(InvalidAvailabilityException.class, () -\u003e new CommandParser().parse(\"availability Susan / \"));","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"FaliciaOng":22,"siewyangzhi":3}},{"path":"src/test/java/seedu/duke/AddHousekeeperTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"public class AddHousekeeperTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_addCommandNameAge_success() throws Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"        CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"        Command command \u003d parser.parse(\"add housekeeper Susan / 23\");","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"        AddHousekeeperCommand addHousekeeperCommand \u003d (AddHousekeeperCommand) command;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(\"susan\", addHousekeeperCommand.getHousekeeper().getName());","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(23, addHousekeeperCommand.getHousekeeper().getAge());","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_addCommandInvalidAge_exceptionThrown() {","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(InvalidAgeException.class, () -\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"                new CommandParser().parse(\"add housekeeper Susan / fifty\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_addCommandEmptyDescription_exceptionThrown() {","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(InvalidHousekeeperProfile.class, () -\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"                new CommandParser().parse(\"add housekeeper / \"));","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_addCommandUnderage_exceptionThrown() {","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(UnderAgeException.class, () -\u003e new CommandParser().parse(\"add housekeeper Jane / 12\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_addCommandOverage_exceptionThrown() {","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(OverAgeException.class, () -\u003e new CommandParser().parse(\"add housekeeper Sally / 81\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_nameCorrect() throws Exception {","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"        CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"        Command command \u003d parser.parse(\"add housekeeper Susan / 23\");","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"        AddHousekeeperCommand addHousekeeperCommand \u003d (AddHousekeeperCommand) command;","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(\"susan\", addHousekeeperCommand.getHousekeeper().getName());","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(23, addHousekeeperCommand.getHousekeeper().getAge());","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"FaliciaOng"},"content":"        command \u003d parser.parse(\"delete housekeeper susan\");","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"FaliciaOng"},"content":"        DeleteHousekeeperCommand deleteHousekeeperCommand \u003d (DeleteHousekeeperCommand) command;","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(\"susan\", deleteHousekeeperCommand.getName());","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"FaliciaOng":51,"siewyangzhi":4}},{"path":"src/test/java/seedu/duke/AddSatisfactionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"public class AddSatisfactionCommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"    public void commandParser_addCommandWithNonEmptySatisfactionCustomerAndSatisfactionValue_success()","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"            throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"        CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"        Command command1 \u003d parser.parse(\"add satisfaction Bob Jones / 3\");","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"        AddSatisfactionCommand addSatisfactionCommand1 \u003d (AddSatisfactionCommand) command1;","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"        Satisfaction satisfaction1 \u003d addSatisfactionCommand1.getSatisfaction();","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"        assertEquals(\"bob jones\", satisfaction1.getCustomerName());","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"        assertEquals(3, satisfaction1.getSatisfactionValue());","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"        Command command2 \u003d parser.parse(\"add satisfaction Fred / 4\");","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"        AddSatisfactionCommand addSatisfactionCommand2 \u003d (AddSatisfactionCommand) command2;","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"        Satisfaction satisfaction2 \u003d addSatisfactionCommand2.getSatisfaction();","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"        assertEquals(\"fred\", satisfaction2.getCustomerName());","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"        assertEquals(4, satisfaction2.getSatisfactionValue());","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"    public void commandParser_addCommandWithEmptySatisfactionCustomer_exceptionThrown() {","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"        assertThrows(EmptySatisfactionCustomerException.class, ()","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"            -\u003e new CommandParser().parse(\"add satisfaction / 4\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"    public void commandParser_addCommandWithEmptySatisfactionValue_exceptionThrown() {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"        assertThrows(EmptySatisfactionValueException.class, ()","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"            -\u003e new CommandParser().parse(\"add satisfaction Bob / \"));","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"    public void commandParser_addCommandWithNoSlash_exceptionThrown() {","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"        assertThrows(InvalidCommandException.class, ()","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"            -\u003e new CommandParser().parse(\"add satisfaction Bob 5\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"    public void commandParser_addCommandWithInvalidSatisfactionValue_exceptionThrown() {","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"        assertThrows(InvalidSatisfactionValueException.class, ()","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"            -\u003e new CommandParser().parse(\"add satisfaction Joe / -1\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":51,"siewyangzhi":2}},{"path":"src/test/java/seedu/duke/AssignHousekeeperTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.command.assigncommand.AssignHousekeeperCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"public class AssignHousekeeperTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"aiman-imtiaz"},"content":"    public void commandParser_addCommandNameAvailability_success() throws Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"        ListContainer listContainer \u003d new ListContainer();","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"aiman-imtiaz"},"content":"        String inputCommand \u003d \"301\";","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"aiman-imtiaz"},"content":"        CheckInCommand checkInCommand \u003d new CheckInCommand(inputCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"        checkInCommand.execute(listContainer, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"        RoomList inputRoomList \u003d listContainer.getRoomList();","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"aiman-imtiaz"},"content":"        Room expectedRoom \u003d null;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"aiman-imtiaz"},"content":"        for (Room room : inputRoomList.getRoomList()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":"            if (room.getRoomId() \u003d\u003d 301) {","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"aiman-imtiaz"},"content":"                expectedRoom \u003d room;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"aiman-imtiaz"},"content":"        CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"        Command command1 \u003d parser.parse(\"add housekeeper Susan / 23\");","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"aiman-imtiaz"},"content":"        AddHousekeeperCommand addHousekeeperCommand \u003d (AddHousekeeperCommand) command1;","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"aiman-imtiaz"},"content":"        Command command \u003d parser.parse(\"Assign Susan ## 301\");","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"aiman-imtiaz"},"content":"        AssignHousekeeperCommand assignHousekeeperCommand \u003d (AssignHousekeeperCommand) command;","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"aiman-imtiaz"},"content":"        assertEquals(\"301\", assignHousekeeperCommand.getroomID());","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(\"susan\", assignHousekeeperCommand.getName());","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"aiman-imtiaz":31,"FaliciaOng":1,"XunyiiZ":3,"siewyangzhi":2}},{"path":"src/test/java/seedu/duke/CheckInCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"class CheckInCommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"    // format","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"    // methodBeingTested_InputCondition_expectedOutcome","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"    // test for successful and fail and how it fails","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"    //Happy path","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"    void execute_validRoomNumber_expectRoomBeingOccupied() throws HotelLiteManagerException {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"        ListContainer listContainer \u003d null;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"            listContainer \u003d new ListContainer();","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"        RoomList inputRoomList \u003d listContainer.getRoomList();","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"        String inputCommand \u003d \"301\";","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"        CheckInCommand checkInCommand \u003d new CheckInCommand(inputCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"            checkInCommand.execute(listContainer, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"XunyiiZ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"XunyiiZ"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"XunyiiZ"},"content":"        Room expectedRoom \u003d null;","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"XunyiiZ"},"content":"        for (Room room : inputRoomList.getRoomList()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"XunyiiZ"},"content":"            if (room.getRoomId() \u003d\u003d 301) {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"XunyiiZ"},"content":"                expectedRoom \u003d room;","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"XunyiiZ"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"XunyiiZ"},"content":"        assertEquals(\"Queen\\t\\t301\\t\\t\\t 3\\t\\t\\tOccupied\", expectedRoom.toString());","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"XunyiiZ"},"content":"    //unhappy","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"XunyiiZ"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"XunyiiZ"},"content":"    void execute_inValidRoomNumber_throwException() throws IOException {","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"XunyiiZ"},"content":"        ListContainer listContainer \u003d new ListContainer();","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"XunyiiZ"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"XunyiiZ"},"content":"        String inputCommand \u003d \"601\";","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"XunyiiZ"},"content":"        CheckInCommand checkInCommand \u003d new CheckInCommand(inputCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"XunyiiZ"},"content":"        Room expectedRoom \u003d null;","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"XunyiiZ"},"content":"        assertThrows(InvalidRoomNumberException.class,","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"XunyiiZ"},"content":"            () -\u003e checkInCommand.execute(listContainer,ui));","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"XunyiiZ":55}},{"path":"src/test/java/seedu/duke/CheckRoomByCatCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"class CheckRoomByCatCommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"    void execute_invalidCat_expectException()  {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"        //RoomList inputRoomList \u003d new RoomList();","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"        String inputCommand \u003d \"president\";","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"        assertThrows(InvalidCategoryException.class,","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"            () -\u003e new CheckRoomByCatCommand(inputCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"XunyiiZ":17}},{"path":"src/test/java/seedu/duke/DukeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.itemcommand.AddItemCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class DukeTest {","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"    public void commandParser_addCommandWithNonEmptyItemNameAndPax_success() throws Exception {","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"        CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"        Command command \u003d parser.parse(\"Add Item Toilet Roll / 5\");","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"        AddItemCommand addItemCommand \u003d (AddItemCommand) command;","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d addItemCommand.getItem();","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(\"toilet roll\", item.getName());","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(5, item.getPax());","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"    public void commandParser_addCommandWithEmptyItemName_exceptionThrown() {","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(EmptyItemNameException.class, () -\u003e new CommandParser().parse(\"Add Item /5\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"    public void commandParser_addCommandWithEmptyItemPax_exceptionThrown() {","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(EmptyItemPaxException.class, () -\u003e new CommandParser().parse(\"Add Item Toilet Roll /\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"    public void commandParser_addCommandWithEmptyItemNameAndPax_exceptionThrown() {","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e new CommandParser().parse(\"Add Item \"));","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_addCommandInvalidView_exceptionThrown() {","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e new CommandParser().parse(\"ViewRecorded Housekeeper\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"FaliciaOng":5,"siewyangzhi":31,"-":12}},{"path":"src/test/java/seedu/duke/UpdateItemCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.itemcommand.UpdateItemPaxCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"public class UpdateItemCommandTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"    public void commandParser_updateCommandWithNonEmptyItemNameAndItemPax_success()","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"            throws Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"        CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"        Command command \u003d parser.parse(\"Update Item Pax Toilet Roll / 5\");","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"        UpdateItemPaxCommand updateItemPaxCommand \u003d (UpdateItemPaxCommand) command;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d updateItemPaxCommand.getItem();","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(\"toilet roll\", item.getName());","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(5, item.getPax());","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"    public void commandParser_updateItemPaxCommandWithEmptyItemName_exceptionThrown() {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(EmptyItemNameException.class, () -\u003e new CommandParser().parse(\"Update Item Pax / 5\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"    public void commandParser_updateItemPaxCommandWithEmptyItemPax_exceptionThrown() {","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(EmptyItemPaxException.class, () -\u003e new CommandParser().parse(\"Update Item Pax \"","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"                + \"Toilet Roll /\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"    public void commandParser_updateItemPaxCommandWithEmptyItemNameAndPax_exceptionThrown() {","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e new CommandParser().parse(\"Update Item Pax \"));","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"    public void commandParser_updateItemPaxCommandWithInvalidItemPax_exceptionThrown() {","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(InvalidItemPaxException.class, () -\u003e new CommandParser().parse(\"Update Item Pax \"","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"                + \"Toilet Roll /-1\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"siewyangzhi":44}}]
