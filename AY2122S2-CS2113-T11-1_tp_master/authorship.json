[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"run {","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"siewyangzhi":4,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Siew Yang Zhi | [Github](https://github.com/siewyangzhi) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ong Siying Falicia | [Github](https://github.com/FaliciaOng) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Zeng Xunyi | [Github](https://github.com/XunyiiZ) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"![](team/aiman_assignment/profile-picture.jpg) | Aiman Imtiaz | [Github](https://github.com/aiman-imtiaz) | [Portfolio](docs/team/aimanimtiaz.md)","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Alina Zheng | [Github](https://github.com/zhenster) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"zhenster":1,"aiman-imtiaz":6,"-":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2022-04-10"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"- [Architecture](#architecture)","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"- [Design and Implementation](#design-and-implementation)","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"  - [Design](#design)","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"  - [Implementation](#implementation)","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"    - [Assign a housekeeper to a room](#assign-a-housekeeper-to-a-room)","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"    - [Adding a customer\u0027s satisfaction rating](#adding-a-customers-satisfaction-rating)","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"    - [Add Housekeeper feature](#add-housekeeper-feature)","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    - [Delete Housekeeper feature](#delete-housekeeper-feature)","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"    - [Item Related Commands](#item-related-commands)","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    - [Check room information by level](#check-room-information-by-level)","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"- [Product Scope](#product-scope)","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"  - [Target user profile](#target-user-profile)","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"  - [Value proposition](#value-proposition)","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"- [User Stories](#user-stories)","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"- [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"- [Instructions for manual testing](#instructions-for-manual-testing)","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"## Warning","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"**Please do not touch the save files (in the `ListFolder` folder) that save the","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"user\u0027s application usage history.** This will interfere with the function of the program.","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"## Architecture","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"![Architecture Design](team/architectureDesign/architectureDesign.jpg)","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"The Architecture Diagram given above explains the high-level design of the App.","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"Given below is the quick overview of the main components and how they interact with each other.","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"### Main components of the architecture","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"`Main` is responsible for,","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"- When the app launches: It retrieves the contents of the various lists from their respective files.","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"- When the user inputs a command: It receives the user input from the UI and passes it to the command parser component ","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"to identify and parse the command.","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"- When the app shuts downs: It closes down the various components.","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"Besides `Main`, the application also consists of four components which are:","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"- `UI`: The UI of the App.","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"siewyangzhi"},"content":"- `Command Parser`: Deals with identifying the various commands from the user input and parsing the user input.","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"- `Command`: Executes the various commands inputted by the user.","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"siewyangzhi"},"content":"- `Storage`: Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"siewyangzhi"},"content":"- `Tasks`: Represents the various commands which would be executed by the command component.","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"## Design","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"FaliciaOng"},"content":"### Add Housekeeper Command","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"FaliciaOng"},"content":"The objective of the `AddHousekeeperCommand` is to take in user input and spilt it into two parts which is the name and ","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"FaliciaOng"},"content":"age of a Housekeeper. These details make up parts of the Housekeeper profile. With the name and age derived, ","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"FaliciaOng"},"content":"this information will be added into a new Housekeeper object, which will be recorded into the list of ","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"FaliciaOng"},"content":"housekeeper. The class diagram below depicts how the `AddHousekeeperCommand` interacts with other classes.","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"FaliciaOng"},"content":"PLEASE NOTE: This class diagram omits the details of some classes involved, like the `Duke`, `CommandParser` and `Command` class.","lastModifiedDate":"2022-04-10"},{"lineNumber":59,"author":{"gitId":"FaliciaOng"},"content":"It also omits some unused methods.","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"FaliciaOng"},"content":"![class](team/falicia_addHousekeeperCommand/classAddHousekeeperFinal.jpg)","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"FaliciaOng"},"content":"Below is an example showing the usage of `AddHousekeeperCommand`.","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":64,"author":{"gitId":"FaliciaOng"},"content":"Step 1: Command given from the user: `add housekeeper susan / 33`. This command meant to add a new housekeeper called susan who is 33 years old.","lastModifiedDate":"2022-04-10"},{"lineNumber":65,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":66,"author":{"gitId":"FaliciaOng"},"content":"Step 2: The parse method from `CommandParser` will run parse to create `AddHousekeeperCommand` and would be return to Duke.","lastModifiedDate":"2022-04-10"},{"lineNumber":67,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":68,"author":{"gitId":"FaliciaOng"},"content":"Step 3: The execute method in `AddHousekeeperCommand` will be performed. It would get the `housekeeperList` from `ListContainer`.","lastModifiedDate":"2022-04-10"},{"lineNumber":69,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":70,"author":{"gitId":"FaliciaOng"},"content":"Step 4: The `addHousekeeperInList` method from `HousekeeperList` would be called to check if the housekeeper has been recorded.","lastModifiedDate":"2022-04-10"},{"lineNumber":71,"author":{"gitId":"FaliciaOng"},"content":"name of the housekeeper to be added has been recorded into the list. ","lastModifiedDate":"2022-04-10"},{"lineNumber":72,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":73,"author":{"gitId":"FaliciaOng"},"content":"Step 5: `addHousekeeperInList` will verify if housekeeper name is in the list by calling `hasNameAdded` and stores the ","lastModifiedDate":"2022-04-10"},{"lineNumber":74,"author":{"gitId":"FaliciaOng"},"content":"result in boolean.","lastModifiedDate":"2022-04-10"},{"lineNumber":75,"author":{"gitId":"FaliciaOng"},"content":"If it has not been recorded, housekeeperList would then add this new user into the records by calling `addHousekeeper`","lastModifiedDate":"2022-04-10"},{"lineNumber":76,"author":{"gitId":"FaliciaOng"},"content":"method. ","lastModifiedDate":"2022-04-10"},{"lineNumber":77,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":78,"author":{"gitId":"FaliciaOng"},"content":"Step 6: `printHousekeeperNoted` will be called to print a confirmation to show that the housekeeper ","lastModifiedDate":"2022-04-10"},{"lineNumber":79,"author":{"gitId":"FaliciaOng"},"content":"has been entered into the list.","lastModifiedDate":"2022-04-10"},{"lineNumber":80,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":81,"author":{"gitId":"FaliciaOng"},"content":"Step 7. Housekeeper file storing all profile will be updated by calling `writeHousekeeperToFile` method.","lastModifiedDate":"2022-04-11"},{"lineNumber":82,"author":{"gitId":"FaliciaOng"},"content":"This method will then call method `save` from `HousekeeperFileManager`.","lastModifiedDate":"2022-04-11"},{"lineNumber":83,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":84,"author":{"gitId":"FaliciaOng"},"content":"### Delete Housekeeper Command","lastModifiedDate":"2022-04-10"},{"lineNumber":85,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":86,"author":{"gitId":"FaliciaOng"},"content":"The objective of the `DeleteHousekeeperCommand` is to take in the housekeeper\u0027s name to be deleted from the list. The ","lastModifiedDate":"2022-04-10"},{"lineNumber":87,"author":{"gitId":"FaliciaOng"},"content":"housekeeper\u0027s profile would be completely removed from records in the `housekeeperList`. The class diagram below depicts how the `DeleteHousekeeperCommand` interacts with other classes.","lastModifiedDate":"2022-04-10"},{"lineNumber":88,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":89,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":90,"author":{"gitId":"FaliciaOng"},"content":"PLEASE NOTE: This class diagram omits the details of some classes involved, like the `Duke`, `CommandParser` and `Command` class.","lastModifiedDate":"2022-04-10"},{"lineNumber":91,"author":{"gitId":"FaliciaOng"},"content":"It also omits unused methods.","lastModifiedDate":"2022-04-11"},{"lineNumber":92,"author":{"gitId":"FaliciaOng"},"content":"![Class Delete](team/falicia_deleteHousekeeperCommand/deleteHousekeeperClassFINAL.jpg)","lastModifiedDate":"2022-04-11"},{"lineNumber":93,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":94,"author":{"gitId":"FaliciaOng"},"content":"Below is an example showing the usage of `DeleteHousekeeperCommand`.","lastModifiedDate":"2022-04-10"},{"lineNumber":95,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":96,"author":{"gitId":"FaliciaOng"},"content":"Step 1: Command given from the user: `delete housekeeper susan`. This command meant to delete housekeeper called susan.","lastModifiedDate":"2022-04-10"},{"lineNumber":97,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":98,"author":{"gitId":"FaliciaOng"},"content":"Step 2: The parse method from `CommandParser` will run parse to create `DeleteHousekeeperCommand` and would be return to Duke.","lastModifiedDate":"2022-04-10"},{"lineNumber":99,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":100,"author":{"gitId":"FaliciaOng"},"content":"Step 3: The execute method in `DeleteHousekeeperCommand` will be performed. It would get the `housekeeperList` from `ListContainer`.","lastModifiedDate":"2022-04-10"},{"lineNumber":101,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":102,"author":{"gitId":"FaliciaOng"},"content":"Step 4: The `removeHousekeeperInList` method from `HousekeeperList` would be called to check if the housekeeper\u0027s name","lastModifiedDate":"2022-04-10"},{"lineNumber":103,"author":{"gitId":"FaliciaOng"},"content":"is in the `housekeeperList`.","lastModifiedDate":"2022-04-10"},{"lineNumber":104,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":105,"author":{"gitId":"FaliciaOng"},"content":"Step 5: `removeHousekeeperInList` will call `getHousekeeperRemove` method which will derive the index of the housekeeper","lastModifiedDate":"2022-04-10"},{"lineNumber":106,"author":{"gitId":"FaliciaOng"},"content":"recorded in the list. It would return an integer. Assume housekeeper `susan` is recorded in the list and is in index `0`","lastModifiedDate":"2022-04-11"},{"lineNumber":107,"author":{"gitId":"FaliciaOng"},"content":"of the list.","lastModifiedDate":"2022-04-10"},{"lineNumber":108,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":109,"author":{"gitId":"FaliciaOng"},"content":"Step 6: With the index given, method `removeHousekeeper` will be called to remove housekeeper profile from the list.","lastModifiedDate":"2022-04-10"},{"lineNumber":110,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":111,"author":{"gitId":"FaliciaOng"},"content":"Step 7: User will then be able to see a message notifying them that the housekeeper `susan` has been deleted and the total","lastModifiedDate":"2022-04-10"},{"lineNumber":112,"author":{"gitId":"FaliciaOng"},"content":"number of housekeeper currently in working in the hotel.","lastModifiedDate":"2022-04-10"},{"lineNumber":113,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":114,"author":{"gitId":"FaliciaOng"},"content":"Step 8: To update the current `housekeeperList` into housekeeper file, `writeHousekeeperToFile` method will be call in which","lastModifiedDate":"2022-04-11"},{"lineNumber":115,"author":{"gitId":"FaliciaOng"},"content":"it calls `save` method from `HousekeeperFileManager` to reload housekeeper\u0027s information into the housekeeper file.","lastModifiedDate":"2022-04-11"},{"lineNumber":116,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":117,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":118,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":119,"author":{"gitId":"siewyangzhi"},"content":"Below is the partial class diagram detailing the design of the Add Item Command Class as well as its interactions with ","lastModifiedDate":"2022-04-11"},{"lineNumber":120,"author":{"gitId":"siewyangzhi"},"content":"the various other classes required to execute the Add Item Command.","lastModifiedDate":"2022-04-11"},{"lineNumber":121,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":122,"author":{"gitId":"siewyangzhi"},"content":"PLEASE NOTE: This class diagram omits the details of some classes involved, like the Duke, CommandParser and Command class","lastModifiedDate":"2022-04-11"},{"lineNumber":123,"author":{"gitId":"siewyangzhi"},"content":"![alt text](team/SiewYangZhi_addItemCommand/AddItemCommandClassDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":124,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":129,"author":{"gitId":"siewyangzhi"},"content":"### Delete Item Command","lastModifiedDate":"2022-04-11"},{"lineNumber":130,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":131,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":132,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":133,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":134,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":135,"author":{"gitId":"FaliciaOng"},"content":"## Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":136,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":137,"author":{"gitId":"FaliciaOng"},"content":"### Assign a housekeeper to a room","lastModifiedDate":"2022-04-11"},{"lineNumber":138,"author":{"gitId":"aiman-imtiaz"},"content":"The assignment of housekeeper to a room is facilitated by `AssignHousekeeperCommand`. This command objects uses `AssignmentMap`, which keeps a `HashMap`, to help us map a `Room` object to a `Housekeeper` object. ","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":140,"author":{"gitId":"aiman-imtiaz"},"content":"``","lastModifiedDate":"2022-03-24"},{"lineNumber":141,"author":{"gitId":"aiman-imtiaz"},"content":"Map\u003cRoom, Housekeeper\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":142,"author":{"gitId":"aiman-imtiaz"},"content":"``","lastModifiedDate":"2022-03-24"},{"lineNumber":143,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":144,"author":{"gitId":"aiman-imtiaz"},"content":"The following steps exhibit how `AssignHousekeeperCommand` ","lastModifiedDate":"2022-03-24"},{"lineNumber":145,"author":{"gitId":"aiman-imtiaz"},"content":"and `AssignmentMap` fit together in the structure and how the mechanism for adding an assingment behaves at each step.","lastModifiedDate":"2022-04-11"},{"lineNumber":146,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":147,"author":{"gitId":"aiman-imtiaz"},"content":"__Step 1.__ The user launches the application. In the `Duke` class, an empty instance of the `AssignmentMap` class,","lastModifiedDate":"2022-03-24"},{"lineNumber":148,"author":{"gitId":"aiman-imtiaz"},"content":"called `assignmentMap`, is created.","lastModifiedDate":"2022-03-24"},{"lineNumber":149,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":150,"author":{"gitId":"aiman-imtiaz"},"content":"![Step 1](team/aiman_assignment/step1.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":151,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":152,"author":{"gitId":"aiman-imtiaz"},"content":"__Step 2.__ The user types the command `Assign susan / 301`. In the `Duke` class, a `Command` object","lastModifiedDate":"2022-04-11"},{"lineNumber":153,"author":{"gitId":"aiman-imtiaz"},"content":"is created by invoking the `CommandParser` class\u0027s constructor on the user input. The details of this","lastModifiedDate":"2022-03-24"},{"lineNumber":154,"author":{"gitId":"aiman-imtiaz"},"content":"step are further described below.","lastModifiedDate":"2022-03-24"},{"lineNumber":155,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":156,"author":{"gitId":"aiman-imtiaz"},"content":"![Step 2](team/aiman_assignment/step2.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":157,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":158,"author":{"gitId":"aiman-imtiaz"},"content":"__Step 3.__ The `CommandParser` class replaces the `assign susan / 301` in the user input with an empty string,","lastModifiedDate":"2022-04-11"},{"lineNumber":159,"author":{"gitId":"aiman-imtiaz"},"content":"leaving just `susan / 301`. Then, an instance of `AssignHousekeeperCommand` is created which extends the class `Command`.","lastModifiedDate":"2022-04-11"},{"lineNumber":160,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":161,"author":{"gitId":"aiman-imtiaz"},"content":"![Step 3](team/aiman_assignment/step3.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":162,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"aiman-imtiaz"},"content":"__Step 4.__ The `assignHousekeeperCommand` object parses the name of the housekeeper and the ID of the room and send both to the the `assignmentMap`.","lastModifiedDate":"2022-03-24"},{"lineNumber":164,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":165,"author":{"gitId":"aiman-imtiaz"},"content":"![Step 4](team/aiman_assignment/step4.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":166,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":167,"author":{"gitId":"aiman-imtiaz"},"content":"__Step 5.__ The `assignmentMap` looks for the appropriate `Room` object for `301` in the `RoomList` and then looks for the appropriate `Housekeeper` object for `Susan`. It then adds both to the hashmap contained inside itself.","lastModifiedDate":"2022-03-24"},{"lineNumber":168,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":169,"author":{"gitId":"aiman-imtiaz"},"content":"![Step 5](team/aiman_assignment/step5.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":170,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":171,"author":{"gitId":"aiman-imtiaz"},"content":"__Interaction__ To understand the interaction between objects of these classes in order to actually add an entry into the hash map inside an `AssignmentMap`, refer to the sequence diagram below.","lastModifiedDate":"2022-03-24"},{"lineNumber":172,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":173,"author":{"gitId":"aiman-imtiaz"},"content":"![Step Sequence Diagram](team/aiman_assignment/sequence.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":174,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":175,"author":{"gitId":"aiman-imtiaz"},"content":"The command object passes on the ID of the room and the name of the housekeeper to the `AssignmentMap` object after parsing the input appropriately. The `addAssignment` function first locates the appropriate `Room` object from `RoomList`, and then looks for the `Housekeeper` object in the `HousekeeperList` and finally adds the mapping to the hash map.","lastModifiedDate":"2022-03-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":177,"author":{"gitId":"FaliciaOng"},"content":"### Adding a customer\u0027s satisfaction rating","lastModifiedDate":"2022-04-11"},{"lineNumber":178,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":179,"author":{"gitId":"zhenster"},"content":"The mechanism for adding a customer satisfaction (represented by the Satisfaction class) is facilitated","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"zhenster"},"content":"by `AddSatisfactionCommand`. The constructor parses user input to create a `Satisfaction` object (which contains","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"zhenster"},"content":"attributes storing the customer\u0027s name and their satisfaction rating, represented as an integer from 1 to 5).","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"zhenster"},"content":"`AddSatisfactionCommand` extends `Command` and contains an override of the `Command` class\u0027s execute method.","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"zhenster"},"content":"This execute method adds the `Satisfaction` object created from parsing user command into `satisfactionList`, the","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"zhenster"},"content":"object of type `SatisfactionList` that stores the `Satisfaction` objects. This `SatisfactionList` is ","lastModifiedDate":"2022-04-09"},{"lineNumber":185,"author":{"gitId":"zhenster"},"content":"stored in a `ListContainer` object (the object that stores references to all of the data structures","lastModifiedDate":"2022-04-09"},{"lineNumber":186,"author":{"gitId":"zhenster"},"content":"that the application uses). Additionally, it implements the following operations:","lastModifiedDate":"2022-04-09"},{"lineNumber":187,"author":{"gitId":"zhenster"},"content":"* `AddSatisfactionCommand#extractCustomerName(String userInput)`: Extracts the customer\u0027s name (a string) from the","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"zhenster"},"content":"  provided string of user input.","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"zhenster"},"content":"* `AddSatisfactionCommand#extractSatisfactionValue(String userInput)`: Extracts the customer\u0027s satisfaction rating","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"zhenster"},"content":"  (an integer from 1 to 5) from the provided string of user input.","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"zhenster"},"content":"* `AddSatisfactionCommand#getSatisfaction()`: Grabs the value of the `satisfaction` instance variable.","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"zhenster"},"content":"* `AddSatisfactionCommand#setSatisfaction(Satisfaction satisfaction)`: Sets the `satisfaction` instance variable to the","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"zhenster"},"content":"  provided `Satisfaction` object.","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":195,"author":{"gitId":"zhenster"},"content":"Given below is an example usage scenario and how the mechanism for adding a satisfaction behaves at each step.","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":197,"author":{"gitId":"zhenster"},"content":"Step 1. The user launches the application. In the `Duke` class, a `ListContainer` object is instantiated. ","lastModifiedDate":"2022-04-09"},{"lineNumber":198,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":199,"author":{"gitId":"zhenster"},"content":"![Step 1 Object Diagram](team/alinazheng_addsatisfactioncommand_uml/addsatisfaction_objectdiagram_1.png)","lastModifiedDate":"2022-04-09"},{"lineNumber":200,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":201,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":202,"author":{"gitId":"zhenster"},"content":"Step 2. The user types the command `add satisfaction bob 5`. In the `Duke` class, a `Command` object","lastModifiedDate":"2022-04-09"},{"lineNumber":203,"author":{"gitId":"zhenster"},"content":"is created by invoking the `CommandParser` class\u0027s constructor on the user input. The details of this","lastModifiedDate":"2022-03-22"},{"lineNumber":204,"author":{"gitId":"zhenster"},"content":"step are further described below.","lastModifiedDate":"2022-03-22"},{"lineNumber":205,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":206,"author":{"gitId":"zhenster"},"content":"![Step 1 Object Diagram](team/alinazheng_addsatisfactioncommand_uml/addsatisfaction_objectdiagram_2.png)","lastModifiedDate":"2022-04-09"},{"lineNumber":207,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":208,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":209,"author":{"gitId":"zhenster"},"content":"Step 3. The `CommandParser` class replaces the `add satisfaction` in the user input with an empty string,","lastModifiedDate":"2022-03-22"},{"lineNumber":210,"author":{"gitId":"zhenster"},"content":"leaving just `bob 5`. Then, the `AddSatisfactionCommand` class\u0027s constructor is invoked with `bob 5`.","lastModifiedDate":"2022-04-09"},{"lineNumber":211,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":212,"author":{"gitId":"zhenster"},"content":"![Step 1 Object Diagram](team/alinazheng_addsatisfactioncommand_uml/addsatisfaction_objectdiagram_3.png)","lastModifiedDate":"2022-04-09"},{"lineNumber":213,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":214,"author":{"gitId":"zhenster"},"content":"Step 4. The `AddSatisfactionCommand` class\u0027s constructor parses `bob 5`, extracting the customer name `Bob` using the","lastModifiedDate":"2022-04-09"},{"lineNumber":215,"author":{"gitId":"zhenster"},"content":"`AddSatisfactionCommand#extractCustomerName(String userInput)` method and extracting the customer satisfaction rating","lastModifiedDate":"2022-03-22"},{"lineNumber":216,"author":{"gitId":"zhenster"},"content":"`5`using the `AddSatisfactionCommand#extractSatisfactionValue(String userInput)` method. The `AddSatisfactionCommand`","lastModifiedDate":"2022-03-22"},{"lineNumber":217,"author":{"gitId":"zhenster"},"content":"class constructor then invokes the `Satisfaction` class\u0027s constructor to create a new `Satisfaction` object, passing in","lastModifiedDate":"2022-03-22"},{"lineNumber":218,"author":{"gitId":"zhenster"},"content":"customer name `bob` and satisfaction rating `5`.","lastModifiedDate":"2022-04-09"},{"lineNumber":219,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":220,"author":{"gitId":"zhenster"},"content":"![Step 1 Object Diagram](team/alinazheng_addsatisfactioncommand_uml/addsatisfaction_objectdiagram_4.png)","lastModifiedDate":"2022-04-09"},{"lineNumber":221,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":222,"author":{"gitId":"zhenster"},"content":"Step 5. When the `AddSatisfactionCommand` object is executed in the `Duke` class, the `satisfactionList` object is ","lastModifiedDate":"2022-04-09"},{"lineNumber":223,"author":{"gitId":"zhenster"},"content":"obtained from the `ListContainer` object. Then, the `satisfaction` is added to the `satisfactionList`. ","lastModifiedDate":"2022-04-09"},{"lineNumber":224,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":225,"author":{"gitId":"zhenster"},"content":"![Step 1 Object Diagram](team/alinazheng_addsatisfactioncommand_uml/addsatisfaction_objectdiagram_5.png)","lastModifiedDate":"2022-04-09"},{"lineNumber":226,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":227,"author":{"gitId":"zhenster"},"content":"The following sequence diagram shows what would happen if the user typed `add satisfaction bob 5`.","lastModifiedDate":"2022-04-09"},{"lineNumber":228,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":229,"author":{"gitId":"zhenster"},"content":"PLEASE NOTE: This sequence diagram omits the details of some behavior and classes involved, like the `Duke` and ","lastModifiedDate":"2022-04-11"},{"lineNumber":230,"author":{"gitId":"zhenster"},"content":"`CommandParser` classes.","lastModifiedDate":"2022-04-11"},{"lineNumber":231,"author":{"gitId":"zhenster"},"content":"![Sequence Diagram](team/alinazheng_addsatisfactioncommand_uml/sequenceAddSatisfactionCommandFinal.drawio.png)","lastModifiedDate":"2022-04-11"},{"lineNumber":232,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":233,"author":{"gitId":"FaliciaOng"},"content":"### Add Housekeeper feature","lastModifiedDate":"2022-03-24"},{"lineNumber":234,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":235,"author":{"gitId":"FaliciaOng"},"content":"PLEASE NOTE: This sequence diagram omits the details of some behavior and classes involved, like the `Duke` class.","lastModifiedDate":"2022-04-10"},{"lineNumber":236,"author":{"gitId":"FaliciaOng"},"content":"It gives an overview of how the AddHousekeeperCommands runs.","lastModifiedDate":"2022-04-11"},{"lineNumber":237,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":238,"author":{"gitId":"FaliciaOng"},"content":"The add housekeeper mechanism is facilitated by `AddHousekeeperCommand`. It extends command. Additionally, ","lastModifiedDate":"2022-03-30"},{"lineNumber":239,"author":{"gitId":"FaliciaOng"},"content":"it implements the following operations:","lastModifiedDate":"2022-03-30"},{"lineNumber":240,"author":{"gitId":"FaliciaOng"},"content":"* `AddHousekeeperCommand#extractName()`— Derive the name of the Housekeeper","lastModifiedDate":"2022-03-24"},{"lineNumber":241,"author":{"gitId":"FaliciaOng"},"content":"* `AddHousekeeperCommand#extractAge()`— Derive the age of Housekeeper and cast it into an integer","lastModifiedDate":"2022-03-24"},{"lineNumber":242,"author":{"gitId":"FaliciaOng"},"content":"* `AddHousekeeperCommand#execute()` — Executes the addition of new housekeeper into list","lastModifiedDate":"2022-03-24"},{"lineNumber":243,"author":{"gitId":"FaliciaOng"},"content":"* `AddHousekeeperCommand#writeHousekeeperToFile()`— Executes the updating of housekeeper list to housekeeper file","lastModifiedDate":"2022-04-11"},{"lineNumber":244,"author":{"gitId":"FaliciaOng"},"content":"* `HousekeeperList#addHousekeeperInList()` — Facilitates the adding of new housekeeper into the list","lastModifiedDate":"2022-04-10"},{"lineNumber":245,"author":{"gitId":"FaliciaOng"},"content":"* `HousekeeperList#hasNameAdded()` — Checks if name of housekeeper has been recorded","lastModifiedDate":"2022-04-10"},{"lineNumber":246,"author":{"gitId":"FaliciaOng"},"content":"* `HousekeeperList#addHousekeeper()` — Method to add housekeeper into the list","lastModifiedDate":"2022-04-10"},{"lineNumber":247,"author":{"gitId":"FaliciaOng"},"content":"* `Ui#printHousekeeperNoted()`  — Prints a message to show user that housekeeper has been added into the list","lastModifiedDate":"2022-04-10"},{"lineNumber":248,"author":{"gitId":"FaliciaOng"},"content":"* `HousekeeperFileManager#save()` — Updates the new housekeeper added into housekeeper file","lastModifiedDate":"2022-04-10"},{"lineNumber":249,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":250,"author":{"gitId":"FaliciaOng"},"content":"Given below is an example usage scenario of how AddHousekeeperCommand behaves at each step.","lastModifiedDate":"2022-03-24"},{"lineNumber":251,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":252,"author":{"gitId":"FaliciaOng"},"content":"Step 1: User launches the application for the first time. The list of housekeeper in records is empty.","lastModifiedDate":"2022-03-24"},{"lineNumber":253,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":254,"author":{"gitId":"FaliciaOng"},"content":"Step 2: User give an add housekeeper command `add housekeeper susan / 33`. The input will be split by the delimiter","lastModifiedDate":"2022-03-30"},{"lineNumber":255,"author":{"gitId":"FaliciaOng"},"content":"`/` to derive `susan` and `33`. The `CommandParser` runs parse which will return a new `AddHousekeeperCommand`.","lastModifiedDate":"2022-03-30"},{"lineNumber":256,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":257,"author":{"gitId":"FaliciaOng"},"content":"Step 3: `AddHousekeeperCommand#extractName()`and `AddHousekeeperCommand#extractAge()` will derive `susan` and `33`.","lastModifiedDate":"2022-04-10"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":259,"author":{"gitId":"FaliciaOng"},"content":"Step 4: The `AddHousekeeperCommand` will now contain `susan` and `33`.","lastModifiedDate":"2022-03-30"},{"lineNumber":260,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":261,"author":{"gitId":"FaliciaOng"},"content":"Step 5: The execute method will derive the housekeeper name, `susan` which would first get the list of housekeeper","lastModifiedDate":"2022-04-10"},{"lineNumber":262,"author":{"gitId":"FaliciaOng"},"content":"from `ListContainer`. It will then call the `HousekeeperList#addHousekeeperInList()`.","lastModifiedDate":"2022-04-10"},{"lineNumber":263,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":264,"author":{"gitId":"FaliciaOng"},"content":"Step 6: `HousekeeperList#hasNameAdded()` will be called to check if housekeeper name has already been recorded in list.","lastModifiedDate":"2022-04-10"},{"lineNumber":265,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":266,"author":{"gitId":"FaliciaOng"},"content":"If housekeeper name has been recorded, `InavlidUserException()` will be thrown. ","lastModifiedDate":"2022-04-10"},{"lineNumber":267,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":268,"author":{"gitId":"FaliciaOng"},"content":"If housekeeper name has not been recorded `HousekeeperList#addHousekeeper()` would be called to","lastModifiedDate":"2022-04-10"},{"lineNumber":269,"author":{"gitId":"FaliciaOng"},"content":"add the housekeeper, `susan` and `33` into the housekeeperList.","lastModifiedDate":"2022-03-30"},{"lineNumber":270,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":271,"author":{"gitId":"FaliciaOng"},"content":"Step 7: It will then call `Ui#printHousekeeperNoted()` to notify user that housekeeper has been added into the list.","lastModifiedDate":"2022-04-10"},{"lineNumber":272,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":273,"author":{"gitId":"FaliciaOng"},"content":"Step 8: Since a housekeeper has been added, `AddHousekeeperCommand#writeHousekeeperToFile()` will be run. It then invoked","lastModifiedDate":"2022-04-11"},{"lineNumber":274,"author":{"gitId":"FaliciaOng"},"content":"`HousekeeperFileManager#save()` method to save the contents of the `housekeeperlist` into housekeeper file.","lastModifiedDate":"2022-04-11"},{"lineNumber":275,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":276,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":277,"author":{"gitId":"FaliciaOng"},"content":"![Sequence](team/falicia_addHousekeeperCommand/sequenceAddHousekeeperCommandFinal.jpg)","lastModifiedDate":"2022-04-11"},{"lineNumber":278,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":279,"author":{"gitId":"FaliciaOng"},"content":"### Delete Housekeeper feature ","lastModifiedDate":"2022-03-30"},{"lineNumber":280,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":281,"author":{"gitId":"FaliciaOng"},"content":"PLEASE NOTE: This sequence diagram omits the details of some behavior and classes involved, like the `Duke` class.","lastModifiedDate":"2022-04-10"},{"lineNumber":282,"author":{"gitId":"FaliciaOng"},"content":"It gives an overview of how the DeleteHousekeeperCommand runs.","lastModifiedDate":"2022-04-11"},{"lineNumber":283,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":284,"author":{"gitId":"FaliciaOng"},"content":"The add housekeeper mechanism is facilitated by `DeleteHousekeeperCommand`. It extends command. Additionally, it ","lastModifiedDate":"2022-03-30"},{"lineNumber":285,"author":{"gitId":"FaliciaOng"},"content":"implements the following operations:","lastModifiedDate":"2022-03-30"},{"lineNumber":286,"author":{"gitId":"FaliciaOng"},"content":"* `DeleteHousekeeperCommand#execute()` — Executes the addition of new housekeeper into list","lastModifiedDate":"2022-03-30"},{"lineNumber":287,"author":{"gitId":"FaliciaOng"},"content":"* `DeleteHousekeeperCommand#writeHousekeeperToFile()` — Update the housekeeper file after deletion of a housekeeper","lastModifiedDate":"2022-04-11"},{"lineNumber":288,"author":{"gitId":"FaliciaOng"},"content":"* `HousekeeperList#hasNameAdded()` — Checks if name of housekeeper has been recorded","lastModifiedDate":"2022-04-10"},{"lineNumber":289,"author":{"gitId":"FaliciaOng"},"content":"* `HousekeeperList#removeHousekeeperInlist()`  — Checks if housekeeper name exist and remove them from the list","lastModifiedDate":"2022-04-10"},{"lineNumber":290,"author":{"gitId":"FaliciaOng"},"content":"* `HousekeeperList#getHousekeeperRemove()` — Derive the index of the housekeeper name in the list","lastModifiedDate":"2022-04-10"},{"lineNumber":291,"author":{"gitId":"FaliciaOng"},"content":"* `HousekeeperList#removeHouseekeeper()` — Given housekeeper\u0027s index in the list, remove housekeeper from the list","lastModifiedDate":"2022-04-10"},{"lineNumber":292,"author":{"gitId":"FaliciaOng"},"content":"* `Ui#printNotifiedDeletionOfHousekeeper()` — Prints all information to notify user on total pax of housekeeper left and","lastModifiedDate":"2022-04-11"},{"lineNumber":293,"author":{"gitId":"FaliciaOng"},"content":"  housekeeper to be deleted has been deleted","lastModifiedDate":"2022-04-11"},{"lineNumber":294,"author":{"gitId":"FaliciaOng"},"content":"* `Ui#printNoted()` — Prints noted line at the top of message","lastModifiedDate":"2022-04-10"},{"lineNumber":295,"author":{"gitId":"FaliciaOng"},"content":"* `Ui#printBottomLine` — Prints bottom line to denote end of message","lastModifiedDate":"2022-04-10"},{"lineNumber":296,"author":{"gitId":"FaliciaOng"},"content":"* `Ui#printMessage()` — Used to inform user total pax left in list as well as housekeeper\u0027s profile has already","lastModifiedDate":"2022-04-10"},{"lineNumber":297,"author":{"gitId":"FaliciaOng"},"content":"been deleted","lastModifiedDate":"2022-04-10"},{"lineNumber":298,"author":{"gitId":"FaliciaOng"},"content":"  ","lastModifiedDate":"2022-03-30"},{"lineNumber":299,"author":{"gitId":"FaliciaOng"},"content":"Given below is an example usage scenario of how DeleteHousekeeperCommand behaves at each step.","lastModifiedDate":"2022-03-30"},{"lineNumber":300,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":301,"author":{"gitId":"FaliciaOng"},"content":"Step 1: User has already added a housekeeper called `susan`, age `33`. Sally is not keen in working as a housekeeper","lastModifiedDate":"2022-03-30"},{"lineNumber":302,"author":{"gitId":"FaliciaOng"},"content":"anymore and resigns. User has to delete the records of `susan` form `housekeeperlist`.","lastModifiedDate":"2022-03-30"},{"lineNumber":303,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":304,"author":{"gitId":"FaliciaOng"},"content":"Step 2: User gives a delete housekeeper command `delete housekeeper susan` The input will derive the name parameter of ","lastModifiedDate":"2022-04-10"},{"lineNumber":305,"author":{"gitId":"FaliciaOng"},"content":"the delete command which is `susan`.","lastModifiedDate":"2022-03-30"},{"lineNumber":306,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":307,"author":{"gitId":"FaliciaOng"},"content":"Step 3:  The `DeleteHousekeeperCommand` will now contain `susan`.","lastModifiedDate":"2022-03-30"},{"lineNumber":308,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":309,"author":{"gitId":"FaliciaOng"},"content":"Step 4: The execute method will call `HousekeeperList#removeHousekeeperInlist()`. The remove method in housekeeper list","lastModifiedDate":"2022-03-30"},{"lineNumber":310,"author":{"gitId":"FaliciaOng"},"content":"will then call `HousekeeperList#hasNameAdded()` where it would use streams to store the housekeeper name which matches","lastModifiedDate":"2022-04-10"},{"lineNumber":311,"author":{"gitId":"FaliciaOng"},"content":"the name for the housekeeper to be deleted. Assuming `susan` exist, this method will then return true.","lastModifiedDate":"2022-03-30"},{"lineNumber":312,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":313,"author":{"gitId":"FaliciaOng"},"content":"Step 5: Since `susan` is recorded in the list, the program can proceed to delete `susan` from `housekeeperList`. ","lastModifiedDate":"2022-03-30"},{"lineNumber":314,"author":{"gitId":"FaliciaOng"},"content":"`HousekeeperList#getHousekeeperRemove()` will be called to derive the index of `susan` in the `housekeeperList`.","lastModifiedDate":"2022-03-30"},{"lineNumber":315,"author":{"gitId":"FaliciaOng"},"content":"Assuming `susan` is in the front of the list, the method will return `0`. This index will then be pass to ","lastModifiedDate":"2022-03-30"},{"lineNumber":316,"author":{"gitId":"FaliciaOng"},"content":"`HousekeeperList#removeHouseekeeper()` which removes `susan` from the list","lastModifiedDate":"2022-04-10"},{"lineNumber":317,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":318,"author":{"gitId":"FaliciaOng"},"content":"Step 6: It will then proceed to invoked `Ui#printNotifiedDeletionOfHousekeeper()` to print noted message to inform user ","lastModifiedDate":"2022-04-11"},{"lineNumber":319,"author":{"gitId":"FaliciaOng"},"content":"that the deletion has been completed and the total head count of housekeeper currently working in the hotel","lastModifiedDate":"2022-04-11"},{"lineNumber":320,"author":{"gitId":"FaliciaOng"},"content":"by calling `Ui#printNoted()`, `Ui#printMessage()` and `Ui#printBottomLine`.","lastModifiedDate":"2022-04-11"},{"lineNumber":321,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":322,"author":{"gitId":"FaliciaOng"},"content":"Step 7: Changes in the list will be updated to file by calling `DeleteHousekeeperCommand#writeHousekeeperToFile()` which","lastModifiedDate":"2022-04-11"},{"lineNumber":323,"author":{"gitId":"FaliciaOng"},"content":"invokes the`HousekeeperFileManager#save()` method.","lastModifiedDate":"2022-04-11"},{"lineNumber":324,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":325,"author":{"gitId":"FaliciaOng"},"content":"![Sequence](team/falicia_deleteHousekeeperCommand/sequenceDeleteHousekeeperFinal.jpg)","lastModifiedDate":"2022-04-11"},{"lineNumber":326,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":327,"author":{"gitId":"siewyangzhi"},"content":"### Item Related Commands","lastModifiedDate":"2022-04-11"},{"lineNumber":328,"author":{"gitId":"siewyangzhi"},"content":"This section showcases how some of the various item related commands such as Add, Search Item Commands are implemented.","lastModifiedDate":"2022-04-11"},{"lineNumber":329,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":330,"author":{"gitId":"siewyangzhi"},"content":"#### Add Item, Delete Item, Update Item Pax, Update Item Name Command","lastModifiedDate":"2022-04-11"},{"lineNumber":331,"author":{"gitId":"siewyangzhi"},"content":"The Add Item, Delete Item, Update Item Pax, Update Item Name Commands have similiar class and sequence diagrams with the exception of some differing methods for each  command.","lastModifiedDate":"2022-04-11"},{"lineNumber":332,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":333,"author":{"gitId":"siewyangzhi"},"content":"Below is the class diagram showcasing how the class interact with each other when executing the Add Item Command.","lastModifiedDate":"2022-04-11"},{"lineNumber":334,"author":{"gitId":"siewyangzhi"},"content":"![alt text](team/SiewYangZhi_addItemCommand/AddItemCommandClassDiagram.png)","lastModifiedDate":"2022-04-11"},{"lineNumber":335,"author":{"gitId":"siewyangzhi"},"content":":information_source: **Note:** : This class diagram omits the details of some classes involved, like the Duke, CommandParser and Command class","lastModifiedDate":"2022-04-11"},{"lineNumber":336,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":337,"author":{"gitId":"siewyangzhi"},"content":"Below is the sequence diagram which illustrates the process when an `Add Item` Command `Add Item Toilet Roll` is executed.","lastModifiedDate":"2022-04-11"},{"lineNumber":338,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":339,"author":{"gitId":"siewyangzhi"},"content":"![alt text](team/SiewYangZhi_addItemCommand/AddItemCommandSequenceDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":340,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":341,"author":{"gitId":"siewyangzhi"},"content":"Step 1: The user enters the `Add Item Toilet Roll / 15` command to add a new item which is `Toilet Roll` that has a pax of `15` into the item list. The `parse` method of `CommandParser` is called and the user input `Add Item Toilet Roll / 15` is passed to it.","lastModifiedDate":"2022-04-11"},{"lineNumber":342,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":343,"author":{"gitId":"siewyangzhi"},"content":"Step 2: The `parse` method would identify the user input as an Add Item Command by searching for the keyword `Add Item` within the user input. It would then remove `Add Item` from the user input causing the user input to be just `Toilet Roll / 15`. The `parse` method would then call the constructor of `AddItemCommand` and pass it `Toilet Roll / 15`.","lastModifiedDate":"2022-04-11"},{"lineNumber":344,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":345,"author":{"gitId":"siewyangzhi"},"content":"Step 3:  An `AddItemCommand` object would be created. The constructor of `AddItemCommand` would call the `extractItemPax` and `extractItemName` method of `AddItemCommand` to extract out `15` and `Toilet Roll` from the user input respectively. The constructor of `Item` would then be called and it would create an `Item` object containing `Toilet Roll` and `15`.","lastModifiedDate":"2022-04-11"},{"lineNumber":346,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":347,"author":{"gitId":"siewyangzhi"},"content":"Step 4: The `Item` object would then be returned to the constructor of `AddItemCommand`. The `Item` object would be saved to the `AddItemCommand` object using the `setItem` method of `AddItemCommand`. The `AddItemCommand` object would be passed back to the `parse` method of `CommandParser`.","lastModifiedDate":"2022-04-11"},{"lineNumber":348,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":349,"author":{"gitId":"siewyangzhi"},"content":"Step 5: The `parse` method would then call the `execute` method of `AddItemCommand` which would call the `getItem` method of `AddItemCommand` to extract out the `item` object currently saved within the `AddItemCommand` object.","lastModifiedDate":"2022-04-11"},{"lineNumber":350,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":351,"author":{"gitId":"siewyangzhi"},"content":"Step 6: The `getName` method of `item` would be called and it would extract the item name of the `item` object.","lastModifiedDate":"2022-04-11"},{"lineNumber":352,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":353,"author":{"gitId":"siewyangzhi"},"content":"Step 7: The `checkForItemDuplicates` method would then be called and it would check if there are any items within the item list with the same name as the item we are about to add.","lastModifiedDate":"2022-04-11"},{"lineNumber":354,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":355,"author":{"gitId":"siewyangzhi"},"content":"Step 8: If there are is an item with a matching name found, we would then throw an `ItemAlreadyInListException` and the `ItemAlreadyInListException` would be thrown to the Duke class whereby the `printErrorMessage` method of the `UI` class would be called and the exception `ItemAlreadyInListException` would be passed to it.","lastModifiedDate":"2022-04-11"},{"lineNumber":356,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":357,"author":{"gitId":"siewyangzhi"},"content":"Step 9: The `printErrorMessage` method would then print out  a message informing the user that the item to add is already found within the item list. Steps 10 to would then be skipped.","lastModifiedDate":"2022-04-11"},{"lineNumber":358,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":359,"author":{"gitId":"siewyangzhi"},"content":"Step 10: If there are no items with a matching name found, we would then add the `Item` object to the ArrayList of `Item` objects called listOfItems. The  `printAddItemAcknowledgementMessage` method of `UI` would be executed. It would then print an acknowledgement message to the user informing him that the item has been added into the item list.","lastModifiedDate":"2022-04-11"},{"lineNumber":360,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":361,"author":{"gitId":"siewyangzhi"},"content":":information_source: **Note:** As the Add Item, Delete Item, Update Item Pax or Update Item Name Commands have similair class and sequence diagrams, we only require a few changes to be able to use the above class and sequence diagrams to represent the Delete Item, Update Item Pax or Update Item Name Commands. The changes would be mentioned below.","lastModifiedDate":"2022-04-11"},{"lineNumber":362,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":363,"author":{"gitId":"siewyangzhi"},"content":"The `Delete Item` Command is similar to that of the `Add Item` Command with the difference being:","lastModifiedDate":"2022-04-11"},{"lineNumber":364,"author":{"gitId":"siewyangzhi"},"content":"1. The `Delete Item` command uses the `Item(name:String)` constructor instead of `item(name:String,pax:Int)` constructor as the `Delete Item` command only uses the `name` variable.","lastModifiedDate":"2022-04-11"},{"lineNumber":365,"author":{"gitId":"siewyangzhi"},"content":"2. The `writeItemListToFile` method is replaced with the `deleteItemInList` method and the `extractItemName(tokens:StringTokenizer)` and `extractItemPax(token:StringTokenizer)` methods are omitted.","lastModifiedDate":"2022-04-11"},{"lineNumber":366,"author":{"gitId":"siewyangzhi"},"content":"3. The `addItemToList` method is replaced with the `deleteItemInList` method;","lastModifiedDate":"2022-04-11"},{"lineNumber":367,"author":{"gitId":"siewyangzhi"},"content":"4. The `checkForItemDuplicates` method is removed.","lastModifiedDate":"2022-04-11"},{"lineNumber":368,"author":{"gitId":"siewyangzhi"},"content":"5. The `printAddItemAcknowledgementMessage` method is replaced with the `printDeleteItemAcknowledgementMessage` method.","lastModifiedDate":"2022-04-11"},{"lineNumber":369,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":370,"author":{"gitId":"siewyangzhi"},"content":"The `Update Item Pax` Command is similar to that of the `Add Item` Command with the difference being:","lastModifiedDate":"2022-04-11"},{"lineNumber":371,"author":{"gitId":"siewyangzhi"},"content":"1. The `addItemToList` method is replaced with the `updateItemPaxInList` method.","lastModifiedDate":"2022-04-11"},{"lineNumber":372,"author":{"gitId":"siewyangzhi"},"content":"2. The `checkForItemDuplicates` method is removed.","lastModifiedDate":"2022-04-11"},{"lineNumber":373,"author":{"gitId":"siewyangzhi"},"content":"3. The `printAddItemAcknowledgementMessage` method is replaced with the `printUpdateItemPaxAcknowledgementMessage` method.","lastModifiedDate":"2022-04-11"},{"lineNumber":374,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":375,"author":{"gitId":"siewyangzhi"},"content":"The `Update Item Name` Command is similar to that of the `Add Item` Command with the difference being:","lastModifiedDate":"2022-04-11"},{"lineNumber":376,"author":{"gitId":"siewyangzhi"},"content":"1. The `extractItemName(tokens)` and `extractItemPax(tokens)` methods are replaced with `extractCurrentItemName(tokens)` and `extractNewItemName(tokens)`;","lastModifiedDate":"2022-04-11"},{"lineNumber":377,"author":{"gitId":"siewyangzhi"},"content":"2. The `Item(name:String,pax:Int)` constructor is replaced with the `Item(oldItemName:String, newItemName:String)` constructor;","lastModifiedDate":"2022-04-11"},{"lineNumber":378,"author":{"gitId":"siewyangzhi"},"content":"3. The `printAddItemAcknowledgementMessage` method is replaced with the `updateItemNameInList` method.","lastModifiedDate":"2022-04-11"},{"lineNumber":379,"author":{"gitId":"siewyangzhi"},"content":"4. The `Update Item Name` throws an extra exception called `DuplicateItemNameException` if the `oldItemName` is equals to the `newItemName`.","lastModifiedDate":"2022-04-11"},{"lineNumber":380,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":381,"author":{"gitId":"siewyangzhi"},"content":"#### Search Item Commands","lastModifiedDate":"2022-04-11"},{"lineNumber":382,"author":{"gitId":"siewyangzhi"},"content":"Below is the class diagram showcasing how the classes interact with each other when executing the Search Item Command.","lastModifiedDate":"2022-04-11"},{"lineNumber":383,"author":{"gitId":"siewyangzhi"},"content":"![alt text](team/SiewYangZhi_searchItemCommand/SearchItemCommandClassDiagram.png)","lastModifiedDate":"2022-04-11"},{"lineNumber":384,"author":{"gitId":"siewyangzhi"},"content":":information_source: **Note:** : This class diagram omits the details of some classes involved, like the Duke, CommandParser and Command class","lastModifiedDate":"2022-04-11"},{"lineNumber":385,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":386,"author":{"gitId":"siewyangzhi"},"content":"Below is the sequence diagram which illustrates the process when an `Search Item` Command `Search Item Toilet Roll` is executed.","lastModifiedDate":"2022-04-11"},{"lineNumber":387,"author":{"gitId":"siewyangzhi"},"content":"![alt text](team/SiewYangZhi_searchItemCommand/SearchItemCommandSequenceDiagram.png)","lastModifiedDate":"2022-04-11"},{"lineNumber":388,"author":{"gitId":"siewyangzhi"},"content":":information_source: **Note:** : This sequence diagram omits some of the more trivial details such as the getters and setters methods involved.","lastModifiedDate":"2022-04-11"},{"lineNumber":389,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":390,"author":{"gitId":"siewyangzhi"},"content":"Step 1: The user enters the `Search Item Toilet Roll` command to search for an item in the item list whose item name contains the string `Toilet Roll`. The `parse` method of `CommandParser` is called and the user input `Search Item Toilet Roll` is passed to it.","lastModifiedDate":"2022-04-11"},{"lineNumber":391,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":392,"author":{"gitId":"siewyangzhi"},"content":"Step 2: The `parse` method would identify the user input as a Search Item Command as the user input starts with `Search Item`. It would then remove `Search Item` from the user input causing the user input to be just `Toilet Roll`. The `parse` method would then call the constructor of `SearchItemCommand` and pass it `Toilet Roll`.","lastModifiedDate":"2022-04-11"},{"lineNumber":393,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":394,"author":{"gitId":"siewyangzhi"},"content":"Step 3:  A `SearchItemCommand` object would be created and it would contain the keyword `Toilet Roll`. The `SearchItemCommand` object would be passed back to the `parse` method of `CommandParser`.","lastModifiedDate":"2022-04-11"},{"lineNumber":395,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":396,"author":{"gitId":"siewyangzhi"},"content":"Step 5: The `parse` method would then call the `execute` method of `SearchItemCommand`. The `execute` method would then call the `getItemList` method of the `ListContainer` to get the `Item List` object stored within the `ListContainer`.","lastModifiedDate":"2022-04-11"},{"lineNumber":397,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":398,"author":{"gitId":"siewyangzhi"},"content":"Step 6: The `execute` method of `SearchItemCommand` would then call the `findItemsInList` method of the `Item List` object which would return an `Item List` object called listOfMatchingItems to the execute method.","lastModifiedDate":"2022-04-11"},{"lineNumber":399,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":400,"author":{"gitId":"siewyangzhi"},"content":"Step 7: The `execute` method would then call the `getSize` method of listOfMatchingItems.","lastModifiedDate":"2022-04-11"},{"lineNumber":401,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":402,"author":{"gitId":"siewyangzhi"},"content":"Step 8: If the `getSize` method returns 0 then the `execute` method would call the `printNoItemsFoundInListAcknowledgementMessage` method of the `UI` class which would print a message informing the user that there is no item within the item list whose item name contains their keyword. Step 9 is skipped.","lastModifiedDate":"2022-04-11"},{"lineNumber":403,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":404,"author":{"gitId":"siewyangzhi"},"content":"Step 9: If the `getSize` method returns an integer that is not zero then the `execute` method would call the `printItemList` method of the `UI` class which would print out the item name and pax of those items in the item list whose item name contains the keyword.","lastModifiedDate":"2022-04-11"},{"lineNumber":405,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":406,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":407,"author":{"gitId":"siewyangzhi"},"content":"### check room information by level","lastModifiedDate":"2022-03-25"},{"lineNumber":408,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":409,"author":{"gitId":"XunyiiZ"},"content":"The checking room information by level mechanism is facilitated `CheckRoomByLevelCommand`. It extends command. Additionally, it implements the following operations:","lastModifiedDate":"2022-03-24"},{"lineNumber":410,"author":{"gitId":"XunyiiZ"},"content":"* `CheckRoomByLevelCommand#isValidLevel(int level, RoomList roomList)` - Checks if the level number is valid","lastModifiedDate":"2022-03-24"},{"lineNumber":411,"author":{"gitId":"XunyiiZ"},"content":"* `CheckRoomByLevelCommand#printRoom(int level, RoomList roomlist)` - Prints all room information ar target level","lastModifiedDate":"2022-03-24"},{"lineNumber":412,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":413,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":414,"author":{"gitId":"XunyiiZ"},"content":"Given below is an example usage scenario of how `CheckRoomByLevelCommand` behaves at each step.","lastModifiedDate":"2022-03-24"},{"lineNumber":415,"author":{"gitId":"XunyiiZ"},"content":"Step 1: The user enters the `check level 2` command to check all room information at level 2. ","lastModifiedDate":"2022-04-09"},{"lineNumber":416,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":417,"author":{"gitId":"XunyiiZ"},"content":"Step 2: The `CommandParser` runs phase which will return a new `CheckRoomByLevelCommand`,","lastModifiedDate":"2022-04-09"},{"lineNumber":418,"author":{"gitId":"XunyiiZ"},"content":"and it will parse the parameter after replace command `check level` to ``.","lastModifiedDate":"2022-03-24"},{"lineNumber":419,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":420,"author":{"gitId":"XunyiiZ"},"content":"Step 3: The `CheckRoomByLevelCommand` will now contain `2`.","lastModifiedDate":"2022-03-24"},{"lineNumber":421,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":422,"author":{"gitId":"XunyiiZ"},"content":"Step 4: The `execute` method will call `isValidLevel(int level, RoomList roomList)` method to check if the level number is valid.","lastModifiedDate":"2022-03-24"},{"lineNumber":423,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":424,"author":{"gitId":"XunyiiZ"},"content":"Step 5: The `excute` method will then call `ui.printTableHeader` method to print room table header.","lastModifiedDate":"2022-04-09"},{"lineNumber":425,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":426,"author":{"gitId":"XunyiiZ"},"content":"Step 6. In the `CheckRoomByLevelCommand`, it will iterate for roomList and print information of all room at level 2.","lastModifiedDate":"2022-04-09"},{"lineNumber":427,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":428,"author":{"gitId":"XunyiiZ"},"content":"![sequence diagram](team/xunyi_checkroombylevelcommand_uml/XunyiZeng_checkRoomByLevel_Sequence.png)","lastModifiedDate":"2022-04-09"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":430,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2022-03-24"},{"lineNumber":431,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2022-03-24"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":434,"author":{"gitId":"aiman-imtiaz"},"content":"This application is designed for __hotel managers__ who:","lastModifiedDate":"2022-04-11"},{"lineNumber":435,"author":{"gitId":"aiman-imtiaz"},"content":"* have a need to manage inventory of items in the hotel","lastModifiedDate":"2022-04-11"},{"lineNumber":436,"author":{"gitId":"aiman-imtiaz"},"content":"* have a need to store and view the events happening in the hotel","lastModifiedDate":"2022-04-11"},{"lineNumber":437,"author":{"gitId":"aiman-imtiaz"},"content":"* have a need to view and record the status of rooms (whether they\u0027ve been checked into or checked out of)","lastModifiedDate":"2022-04-11"},{"lineNumber":438,"author":{"gitId":"aiman-imtiaz"},"content":"* need to keep track of the information related to their housekeeping staff, including their available hours","lastModifiedDate":"2022-04-11"},{"lineNumber":439,"author":{"gitId":"aiman-imtiaz"},"content":"  and performance ratings","lastModifiedDate":"2022-04-11"},{"lineNumber":440,"author":{"gitId":"aiman-imtiaz"},"content":"* like to keep track of customer ratings","lastModifiedDate":"2022-04-11"},{"lineNumber":441,"author":{"gitId":"aiman-imtiaz"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2022-04-11"},{"lineNumber":442,"author":{"gitId":"aiman-imtiaz"},"content":"* can type fast","lastModifiedDate":"2022-04-11"},{"lineNumber":443,"author":{"gitId":"aiman-imtiaz"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2022-04-11"},{"lineNumber":444,"author":{"gitId":"aiman-imtiaz"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2022-04-11"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":446,"author":{"gitId":"zhenster"},"content":"### Value proposition","lastModifiedDate":"2022-03-24"},{"lineNumber":447,"author":{"gitId":"zhenster"},"content":"Hotels can be difficult to manage, as hotel managers must keep track of their employees, their inventory, and","lastModifiedDate":"2022-04-11"},{"lineNumber":448,"author":{"gitId":"zhenster"},"content":"the checked-in/checked-out status of their rooms. Thus, this application:","lastModifiedDate":"2022-04-11"},{"lineNumber":449,"author":{"gitId":"zhenster"},"content":"* Allows hotel managers to view and record inventory.","lastModifiedDate":"2022-04-11"},{"lineNumber":450,"author":{"gitId":"zhenster"},"content":"* Allows hotel managers to view and record the status of rooms (whether they\u0027ve been checked into or checked out of).","lastModifiedDate":"2022-04-11"},{"lineNumber":451,"author":{"gitId":"zhenster"},"content":"* Allows hotel managers to manage the information of their housekeeping staff, including their available hours","lastModifiedDate":"2022-04-11"},{"lineNumber":452,"author":{"gitId":"zhenster"},"content":"  and performance ratings.","lastModifiedDate":"2022-04-11"},{"lineNumber":453,"author":{"gitId":"zhenster"},"content":"* Allows hotel managers to view and record customer satisfaction ratings to gauge their hotel\u0027s performance.","lastModifiedDate":"2022-04-11"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":455,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2022-03-24"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":457,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2022-03-24"},{"lineNumber":458,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2022-03-24"},{"lineNumber":459,"author":{"gitId":"FaliciaOng"},"content":"|v1.0|Hotel Manager|Add the items inside the Inventory|record the items that are in the inventory|","lastModifiedDate":"2022-04-11"},{"lineNumber":460,"author":{"gitId":"FaliciaOng"},"content":"|v1.0|Hotel Manager|Update the items details inside the inventory|ensure the information of items in the inventory are up to date|","lastModifiedDate":"2022-04-11"},{"lineNumber":461,"author":{"gitId":"FaliciaOng"},"content":"|v1.0|Hotel Manager|View the items inside the inventory along with its paxs|know what are the items currently in the inventory|","lastModifiedDate":"2022-04-11"},{"lineNumber":462,"author":{"gitId":"FaliciaOng"},"content":"|v1.0|Hotel Manager|View the items inside the inventory with a pax of 0|quickly identify the items that need to be replenish|","lastModifiedDate":"2022-04-11"},{"lineNumber":463,"author":{"gitId":"FaliciaOng"},"content":"|v1.0|Hotel Manager|Add housekeeper profile|save a record of current housekeepers|","lastModifiedDate":"2022-04-11"},{"lineNumber":464,"author":{"gitId":"FaliciaOng"},"content":"|v1.0|Hotel Manager|Add housekeeper availabilities|record the availability of the housekeepers|","lastModifiedDate":"2022-04-11"},{"lineNumber":465,"author":{"gitId":"FaliciaOng"},"content":"|v1.0|Hotel Manager|View housekeeper availabilities|quickly allocate the shift times to each housekeepers|","lastModifiedDate":"2022-04-11"},{"lineNumber":466,"author":{"gitId":"FaliciaOng"},"content":"|v1.0|Hotel Manager|Assign housekeeper to a room|keep a record of which housekeeper is currently assigned to which room|","lastModifiedDate":"2022-04-11"},{"lineNumber":467,"author":{"gitId":"FaliciaOng"},"content":"|v1.0|Hotel Manager|View where the housekeeper is assigned to|ensure that there is a maximum of 2 housekeepers assigned to each floor|","lastModifiedDate":"2022-04-11"},{"lineNumber":468,"author":{"gitId":"FaliciaOng"},"content":"|v1.0|Hotel Manager|Update room vacancy status|keep a record of which rooms are currently occupied |","lastModifiedDate":"2022-04-11"},{"lineNumber":469,"author":{"gitId":"FaliciaOng"},"content":"|v1.0|Hotel Manager|View room vacancy status|identify how many rooms are vacant per floor inorder to determine how many housekeeper will be assigned to each floor|","lastModifiedDate":"2022-04-11"},{"lineNumber":470,"author":{"gitId":"FaliciaOng"},"content":"|v1.0|Hotel Manager|View number of vacant rooms per category|quickly determine if the type of room a guest wants is available|","lastModifiedDate":"2022-04-11"},{"lineNumber":471,"author":{"gitId":"FaliciaOng"},"content":"|v1.0|Hotel Manager|View housekeeper profile|know who are the current housekeepers as well as the total number of housekeepers to prevent over-hiring|","lastModifiedDate":"2022-04-11"},{"lineNumber":472,"author":{"gitId":"FaliciaOng"},"content":"|v1.0|Hotel Manager|Add housekeeper performance|save a record of each housekeepers performance|","lastModifiedDate":"2022-04-11"},{"lineNumber":473,"author":{"gitId":"FaliciaOng"},"content":"|v1.0|Hotel Manager|Add housekeeper performance|save a record of each housekeepers performance|","lastModifiedDate":"2022-04-11"},{"lineNumber":474,"author":{"gitId":"FaliciaOng"},"content":"|v1.0|Hotel Manager|View housekeeper performance|know who are the under-performing employees |","lastModifiedDate":"2022-04-11"},{"lineNumber":475,"author":{"gitId":"FaliciaOng"},"content":"|v1.0|Hotel Manager|Add each customer satisfaction|record the average satisfaction level of the customers|","lastModifiedDate":"2022-04-11"},{"lineNumber":476,"author":{"gitId":"FaliciaOng"},"content":"|v1.0|Hotel Manager|View overall customer satisfaction|ensure that the customers are satisfied and improve hotel\u0027s service accordingly|","lastModifiedDate":"2022-04-11"},{"lineNumber":477,"author":{"gitId":"FaliciaOng"},"content":"|v2.0|Hotel Manager|Add events happening |keep track of events happening in the hotel|","lastModifiedDate":"2022-04-11"},{"lineNumber":478,"author":{"gitId":"FaliciaOng"},"content":"|v2.0|Hotel Manager|View the list of all events|know which events are happening where|","lastModifiedDate":"2022-04-11"},{"lineNumber":479,"author":{"gitId":"FaliciaOng"},"content":"|v2.0|Hotel Manager|Delete an event| update the list of events as circumstances change|","lastModifiedDate":"2022-04-11"},{"lineNumber":480,"author":{"gitId":"FaliciaOng"},"content":"|v2.0|Hotel Manager|Update every housekeeper age when a new year begins|easily determine which housekeeper is over the age limit and have an updated age list of the housekeeper|","lastModifiedDate":"2022-04-11"},{"lineNumber":481,"author":{"gitId":"FaliciaOng"},"content":"|v2.0|Hotel Manager|Delete housekeeper\u0027s profile from list|keep track of active Housekeepers|","lastModifiedDate":"2022-04-11"},{"lineNumber":482,"author":{"gitId":"FaliciaOng"},"content":"|v2.0|Hotel Manager|Reset the availability of housekeeper| re-enter every housekeeper\u0027s available at the start of each week|","lastModifiedDate":"2022-04-11"},{"lineNumber":483,"author":{"gitId":"FaliciaOng"},"content":"|v2.0|Hotel Manager|View housekeepers available from Monday to Sunday|determine which days have no available housekeeper|","lastModifiedDate":"2022-04-11"},{"lineNumber":484,"author":{"gitId":"FaliciaOng"},"content":"|v2.0|Hotel Manager|Search for the items inside the item list using a keyword|quickly find the items I want in the item list quickly and easily without having to scroll through the entire item list|","lastModifiedDate":"2022-04-11"},{"lineNumber":485,"author":{"gitId":"FaliciaOng"},"content":"|v2.0|Hotel Manager|View overall customer satisfaction|ensure that the customers are satisfied and improve hotel\u0027s service accordingly|","lastModifiedDate":"2022-04-11"},{"lineNumber":486,"author":{"gitId":"FaliciaOng"},"content":"|v2.0|Hotel Manager|View housekeeper performance| know who are the under-performing employees|","lastModifiedDate":"2022-04-11"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":488,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2022-03-24"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":490,"author":{"gitId":"FaliciaOng"},"content":"* Most operating systems, including Windows, Linux, OS-X, and Unix, should be able to run the program.","lastModifiedDate":"2022-04-11"},{"lineNumber":491,"author":{"gitId":"FaliciaOng"},"content":"* Program should work with Java `11` or above installed.","lastModifiedDate":"2022-04-11"},{"lineNumber":492,"author":{"gitId":"FaliciaOng"},"content":"* This program can support:","lastModifiedDate":"2022-04-11"},{"lineNumber":493,"author":{"gitId":"FaliciaOng"},"content":"  * Maximum of `1million` item pax can be recorded into file.","lastModifiedDate":"2022-04-11"},{"lineNumber":494,"author":{"gitId":"FaliciaOng"},"content":"  * Maximum of `1000` customer\u0027s satisfaction in list without experiencing any slowness.","lastModifiedDate":"2022-04-11"},{"lineNumber":495,"author":{"gitId":"FaliciaOng"},"content":"  * Maximum of `1000` items in list without experiencing any slowness.","lastModifiedDate":"2022-04-11"},{"lineNumber":496,"author":{"gitId":"FaliciaOng"},"content":"  * Maximum of `1000` housekeeper\u0027s profiles in list without experiencing any slowness.","lastModifiedDate":"2022-04-11"},{"lineNumber":497,"author":{"gitId":"FaliciaOng"},"content":"  * Maximum of `1000` event\u0027s details in list without experiencing any slowness.","lastModifiedDate":"2022-04-11"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":499,"author":{"gitId":"zhenster"},"content":"## Instructions for manual testing","lastModifiedDate":"2022-03-24"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":501,"author":{"gitId":"FaliciaOng"},"content":"The instructions below provide a quick summary of how to manually test the functions.","lastModifiedDate":"2022-04-11"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":503,"author":{"gitId":"FaliciaOng"},"content":"* [Set up and Launching the program](#set-up-and-launching-the-program)","lastModifiedDate":"2022-04-11"},{"lineNumber":504,"author":{"gitId":"FaliciaOng"},"content":"* [Ending the Program](#ending-the-program)","lastModifiedDate":"2022-04-11"},{"lineNumber":505,"author":{"gitId":"FaliciaOng"},"content":"* [Satisfaction Related Functions](#satisfaction-related-functions)","lastModifiedDate":"2022-04-11"},{"lineNumber":506,"author":{"gitId":"FaliciaOng"},"content":"* [Housekeeper Related Functions](#housekeeper-related-functions)","lastModifiedDate":"2022-04-11"},{"lineNumber":507,"author":{"gitId":"FaliciaOng"},"content":"* [Room Related Functions](#room-related-functions)","lastModifiedDate":"2022-04-11"},{"lineNumber":508,"author":{"gitId":"FaliciaOng"},"content":"* [Item Related Functions](#item-related-functions)","lastModifiedDate":"2022-04-11"},{"lineNumber":509,"author":{"gitId":"FaliciaOng"},"content":"* [Event Related Functions](#event-related-functions)","lastModifiedDate":"2022-04-11"},{"lineNumber":510,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":511,"author":{"gitId":"FaliciaOng"},"content":"---","lastModifiedDate":"2022-04-11"},{"lineNumber":512,"author":{"gitId":"FaliciaOng"},"content":"### Set up and Launching the program","lastModifiedDate":"2022-04-11"},{"lineNumber":513,"author":{"gitId":"FaliciaOng"},"content":"1. Download the JAR file ","lastModifiedDate":"2022-04-11"},{"lineNumber":514,"author":{"gitId":"FaliciaOng"},"content":"2. Open command terminal and go to the directory that stores the JAR file","lastModifiedDate":"2022-04-11"},{"lineNumber":515,"author":{"gitId":"FaliciaOng"},"content":"3. Run the application by typing: `java -jar NameOfFile`. NameOfFile represents","lastModifiedDate":"2022-04-11"},{"lineNumber":516,"author":{"gitId":"FaliciaOng"},"content":"the JAR file name","lastModifiedDate":"2022-04-11"},{"lineNumber":517,"author":{"gitId":"FaliciaOng"},"content":"   ","lastModifiedDate":"2022-04-11"},{"lineNumber":518,"author":{"gitId":"FaliciaOng"},"content":"---","lastModifiedDate":"2022-04-11"},{"lineNumber":519,"author":{"gitId":"FaliciaOng"},"content":"### Ending the Program","lastModifiedDate":"2022-04-11"},{"lineNumber":520,"author":{"gitId":"FaliciaOng"},"content":"1. To end the program, type `bye`.","lastModifiedDate":"2022-04-11"},{"lineNumber":521,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":522,"author":{"gitId":"FaliciaOng"},"content":"---","lastModifiedDate":"2022-04-11"},{"lineNumber":523,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":524,"author":{"gitId":"FaliciaOng"},"content":"### Satisfaction Related Functions","lastModifiedDate":"2022-04-11"},{"lineNumber":525,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":526,"author":{"gitId":"FaliciaOng"},"content":"|                                      **Test Case**                                       | **Command**                           | **Expected Result**  |","lastModifiedDate":"2022-04-11"},{"lineNumber":527,"author":{"gitId":"zhenster"},"content":"|:----------------------------------------------------------------------------------------:|:--------------------------------------|:---------------------|","lastModifiedDate":"2022-04-11"},{"lineNumber":528,"author":{"gitId":"zhenster"},"content":"|                                   Add 1 Satisfaction.                                    | `add satisfaction Bob / 5`            | Adds a Satisfaction object representing customer Bob with rating 5 |","lastModifiedDate":"2022-04-11"},{"lineNumber":529,"author":{"gitId":"zhenster"},"content":"| Add Satisfaction corresponding to customer whose satisfaction has already been recorded. | `add satisfaction Bob / 5`            | Error message to user|","lastModifiedDate":"2022-04-11"},{"lineNumber":530,"author":{"gitId":"zhenster"},"content":"|                                  Missing customer name.                                  | `add Satisfaction / 5`                | Error message to user|","lastModifiedDate":"2022-04-11"},{"lineNumber":531,"author":{"gitId":"zhenster"},"content":"|                                     Missing rating.                                      | `add satisfaction Bob / `             | Error message to user|","lastModifiedDate":"2022-04-11"},{"lineNumber":532,"author":{"gitId":"zhenster"},"content":"|           Customer name contains non-alphabetic (excluding space) characters.            | `add satisfaction Bob123 / 5`         | Error message to user|","lastModifiedDate":"2022-04-11"},{"lineNumber":533,"author":{"gitId":"zhenster"},"content":"|                        Rating is out of range of 1-5, inclusive.                         | `add satisfaction Bob / -1`           | Error message to user|","lastModifiedDate":"2022-04-11"},{"lineNumber":534,"author":{"gitId":"zhenster"},"content":"|                               View recorded satisfactions.                               | `view satifactions`                   | Lists out all satisfactions that user has recorded so far|","lastModifiedDate":"2022-04-11"},{"lineNumber":535,"author":{"gitId":"zhenster"},"content":"|               Add extra characters to view recorded satisfactions command.               | `view satisfactions blah blah `       | Error message to user|","lastModifiedDate":"2022-04-11"},{"lineNumber":536,"author":{"gitId":"zhenster"},"content":"| View average satisfaction. | `view average satisfaction`           | Reports the average customer satisfaction|","lastModifiedDate":"2022-04-11"},{"lineNumber":537,"author":{"gitId":"zhenster"},"content":"|Add extra characters to view average satisfaction. | `view average satisfaction blah blah` | Error message to user|","lastModifiedDate":"2022-04-11"},{"lineNumber":538,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":539,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":540,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":541,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":542,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":543,"author":{"gitId":"FaliciaOng"},"content":"---","lastModifiedDate":"2022-04-11"},{"lineNumber":544,"author":{"gitId":"FaliciaOng"},"content":"### Housekeeper Related Functions","lastModifiedDate":"2022-04-11"},{"lineNumber":545,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":546,"author":{"gitId":"FaliciaOng"},"content":"#### Housekeeper functions","lastModifiedDate":"2022-04-11"},{"lineNumber":547,"author":{"gitId":"FaliciaOng"},"content":"* Assume that the `HousekeeperList` has a `Housekeeper` named `Steve` and a `Housekeeper` named `Fred`.","lastModifiedDate":"2022-04-11"},{"lineNumber":548,"author":{"gitId":"FaliciaOng"},"content":"* Assume `Steve` is `24` years old and is available on `Monday`.","lastModifiedDate":"2022-04-11"},{"lineNumber":549,"author":{"gitId":"FaliciaOng"},"content":"* Assume `Fred` is `30` years old and is available on `Monday` and `Wednesday`.","lastModifiedDate":"2022-04-11"},{"lineNumber":550,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":551,"author":{"gitId":"FaliciaOng"},"content":"| **Test Case** | **Command** | **Expected Result** |","lastModifiedDate":"2022-04-11"},{"lineNumber":552,"author":{"gitId":"FaliciaOng"},"content":"|:-------------:|:-------------|:-------------------|","lastModifiedDate":"2022-04-11"},{"lineNumber":553,"author":{"gitId":"FaliciaOng"},"content":"|Add 1 housekeeper.|`add housekeeper mary / 33`  | Adds housekeeper name `mary` and is `33` years old |","lastModifiedDate":"2022-04-11"},{"lineNumber":554,"author":{"gitId":"FaliciaOng"},"content":"|Add empty name and empty age.|`add housekeeper /` |Error message to user |","lastModifiedDate":"2022-04-11"},{"lineNumber":555,"author":{"gitId":"FaliciaOng"},"content":"|Add existing housekeeper.|`add housekeeper steve / 33` |Error message to user  |","lastModifiedDate":"2022-04-11"},{"lineNumber":556,"author":{"gitId":"FaliciaOng"},"content":"|Add availability to `Steve`.|`availability Steve/1,3`  | Adds `steve` availability to `Monday` and `Wednesday` |","lastModifiedDate":"2022-04-11"},{"lineNumber":557,"author":{"gitId":"FaliciaOng"},"content":"|Add availability is not between 1 and 7.|`availability Steve/1,3,10`  | Error message to user |","lastModifiedDate":"2022-04-11"},{"lineNumber":558,"author":{"gitId":"FaliciaOng"},"content":"|View recorded housekeepers in the list.|```view recorded housekeepers`` | Lists out all housekeeper profiles that user has recorded so far|","lastModifiedDate":"2022-04-11"},{"lineNumber":559,"author":{"gitId":"FaliciaOng"},"content":"|Delete housekeeper `Fred`.| `delete housekeeper Fred` |`Fred` has been deleted from the list|","lastModifiedDate":"2022-04-11"},{"lineNumber":560,"author":{"gitId":"FaliciaOng"},"content":"|Delete housekeeper not in list.| `delete housekeeper Manny` | Error message to user |","lastModifiedDate":"2022-04-11"},{"lineNumber":561,"author":{"gitId":"FaliciaOng"},"content":"|Get Housekeeper available on Monday.|`get available on 1`| Shows `Fred` and `Steve` being available to work on Monday|","lastModifiedDate":"2022-04-11"},{"lineNumber":562,"author":{"gitId":"FaliciaOng"},"content":"|Get Housekeeper available on not valid day.|`get available on 18` | Error message to user|","lastModifiedDate":"2022-04-11"},{"lineNumber":563,"author":{"gitId":"FaliciaOng"},"content":"|Reset availability of all housekeepers.|`is a new week ` | All housekeeper availabilities in the list will now show `N/A`|","lastModifiedDate":"2022-04-11"},{"lineNumber":564,"author":{"gitId":"FaliciaOng"},"content":"|Increase all age of housekeeper by one.| `is a new year `| All housekeeper age increase by one. \u003cbr/\u003e `Fred` age :` 31` \u003cbr/\u003e `Steve` age : `25`|","lastModifiedDate":"2022-04-11"},{"lineNumber":565,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":566,"author":{"gitId":"FaliciaOng"},"content":"#### Housekeeper Performance functions","lastModifiedDate":"2022-04-11"},{"lineNumber":567,"author":{"gitId":"zhenster"},"content":"* Prerequisite: For `HousekeeperPerformance`-related commands, the the `HousekeeperList` must contain all the housekeepers that the user wants to record performances for.","lastModifiedDate":"2022-04-11"},{"lineNumber":568,"author":{"gitId":"FaliciaOng"},"content":"* Assume that the `HousekeeperList` has a `Housekeeper` named `Steve` and a `Housekeeper` named `Fred`.","lastModifiedDate":"2022-04-11"},{"lineNumber":569,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":570,"author":{"gitId":"FaliciaOng"},"content":"| **Test Case** | **Command** | **Expected Result** |","lastModifiedDate":"2022-04-11"},{"lineNumber":571,"author":{"gitId":"FaliciaOng"},"content":"|:-------------:|:-------------|:-------------------|","lastModifiedDate":"2022-04-11"},{"lineNumber":572,"author":{"gitId":"zhenster"},"content":"| Add 1 housekeeper performance for `Steve`| `add performance Steve / 3`.| Adds performance rating of `3` for housekeeper `Steve`|","lastModifiedDate":"2022-04-11"},{"lineNumber":573,"author":{"gitId":"zhenster"},"content":"| Add 1 housekeeper performance for `Joe`, who is not in the `HousekeeperList`.| `add performance Joe / 3`| Error message to user|","lastModifiedDate":"2022-04-11"},{"lineNumber":574,"author":{"gitId":"zhenster"},"content":"| Add 1 housekeeper performance for `Fred` with rating that is not within range of 1-5, inclusive. | `add performance Fred / -1` | Error message to user|","lastModifiedDate":"2022-04-11"},{"lineNumber":575,"author":{"gitId":"zhenster"},"content":"| View recorded housekeeper performances | `view performances` | Lists out all housekeeper performances that user has recorded so far|","lastModifiedDate":"2022-04-11"},{"lineNumber":576,"author":{"gitId":"zhenster"},"content":"| Add extra characters to view recorded housekeeper performances | `view performances blah blah` | Error message to user |","lastModifiedDate":"2022-04-11"},{"lineNumber":577,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":578,"author":{"gitId":"FaliciaOng"},"content":"#### Assignment of Housekeeper function","lastModifiedDate":"2022-04-11"},{"lineNumber":579,"author":{"gitId":"aiman-imtiaz"},"content":"* The format of the command is `assign NAME / ROOMID`.","lastModifiedDate":"2022-04-11"},{"lineNumber":580,"author":{"gitId":"aiman-imtiaz"},"content":"* Prerequisites:","lastModifiedDate":"2022-04-11"},{"lineNumber":581,"author":{"gitId":"aiman-imtiaz"},"content":"    - the housekeeper with this `NAME` should already exist in the system.","lastModifiedDate":"2022-04-11"},{"lineNumber":582,"author":{"gitId":"aiman-imtiaz"},"content":"    - the room with this `ROOMID` should already exist in the system.","lastModifiedDate":"2022-04-11"},{"lineNumber":583,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":584,"author":{"gitId":"aiman-imtiaz"},"content":"| **Test Case** | **Command** | **Expected Result** |","lastModifiedDate":"2022-04-11"},{"lineNumber":585,"author":{"gitId":"aiman-imtiaz"},"content":"|:-------------:|:-------------|:-------------------|","lastModifiedDate":"2022-04-11"},{"lineNumber":586,"author":{"gitId":"aiman-imtiaz"},"content":"| Assign `Susan` to room `301` |`assign susan / 301`  | Registers the assignment|","lastModifiedDate":"2022-04-11"},{"lineNumber":587,"author":{"gitId":"aiman-imtiaz"},"content":"| Assign housekeeper that does not exist |`assign james / 301`  | Error message to the user|","lastModifiedDate":"2022-04-11"},{"lineNumber":588,"author":{"gitId":"aiman-imtiaz"},"content":"| Add `susan` to invalid room  | `assign susan / 90` | Error message to the user|","lastModifiedDate":"2022-04-11"},{"lineNumber":589,"author":{"gitId":"aiman-imtiaz"},"content":"| Add `susan` to non-integer room id | `assign susan / ioduf`  | Error message to the user|","lastModifiedDate":"2022-04-11"},{"lineNumber":590,"author":{"gitId":"aiman-imtiaz"},"content":"| Fail to separate fields | `assign susan 301`  | Error message to the user|","lastModifiedDate":"2022-04-11"},{"lineNumber":591,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":592,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":593,"author":{"gitId":"FaliciaOng"},"content":"---","lastModifiedDate":"2022-04-11"},{"lineNumber":594,"author":{"gitId":"FaliciaOng"},"content":"### Room Related Functions","lastModifiedDate":"2022-04-11"},{"lineNumber":595,"author":{"gitId":"FaliciaOng"},"content":"| **Test Case** | **Command** | **Expected Result** |","lastModifiedDate":"2022-04-11"},{"lineNumber":596,"author":{"gitId":"FaliciaOng"},"content":"|:-------------:|:-------------|:-------------------|","lastModifiedDate":"2022-04-11"},{"lineNumber":597,"author":{"gitId":"XunyiiZ"},"content":"|Check in room `201`| `check in 201`  | Change Status of room `201` from `Vacant` to `Occupied` |","lastModifiedDate":"2022-04-11"},{"lineNumber":598,"author":{"gitId":"XunyiiZ"},"content":"|Check in room `501`, which is not in the `RoomList` | `check in 501` | Error message to user|","lastModifiedDate":"2022-04-11"},{"lineNumber":599,"author":{"gitId":"XunyiiZ"},"content":"|Check all room of `double` type | `check category double `| Lists out all room of `double` category|","lastModifiedDate":"2022-04-11"},{"lineNumber":600,"author":{"gitId":"XunyiiZ"},"content":"|check all room of `president` type, which is not valid in `RoomList` | `check category president` | Error message to user |","lastModifiedDate":"2022-04-11"},{"lineNumber":601,"author":{"gitId":"XunyiiZ"},"content":"|check all room in level `3`| `check level 3`| Lists out all room in level `3`|","lastModifiedDate":"2022-04-11"},{"lineNumber":602,"author":{"gitId":"XunyiiZ"},"content":"|check all room in level `5`, which is not within the level range of 1-4| check level `5`| Error message to user|","lastModifiedDate":"2022-04-11"},{"lineNumber":603,"author":{"gitId":"FaliciaOng"},"content":"---","lastModifiedDate":"2022-04-11"},{"lineNumber":604,"author":{"gitId":"FaliciaOng"},"content":"### Item Related Functions","lastModifiedDate":"2022-04-11"},{"lineNumber":605,"author":{"gitId":"FaliciaOng"},"content":"| **Test Case** | **Command** | **Expected Result** |","lastModifiedDate":"2022-04-11"},{"lineNumber":606,"author":{"gitId":"FaliciaOng"},"content":"|:-------------:|:-------------|:-------------------|","lastModifiedDate":"2022-04-11"},{"lineNumber":607,"author":{"gitId":"FaliciaOng"},"content":"|x|x  | x|","lastModifiedDate":"2022-04-11"},{"lineNumber":608,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":609,"author":{"gitId":"FaliciaOng"},"content":"---","lastModifiedDate":"2022-04-11"},{"lineNumber":610,"author":{"gitId":"FaliciaOng"},"content":"### Event Related Functions","lastModifiedDate":"2022-04-11"},{"lineNumber":611,"author":{"gitId":"aiman-imtiaz"},"content":"#### Add Event","lastModifiedDate":"2022-04-11"},{"lineNumber":612,"author":{"gitId":"aiman-imtiaz"},"content":"* The format of the command is `add event DESCRIPTION / DATE`.","lastModifiedDate":"2022-04-11"},{"lineNumber":613,"author":{"gitId":"aiman-imtiaz"},"content":"* Prerequisites:  ","lastModifiedDate":"2022-04-11"},{"lineNumber":614,"author":{"gitId":"aiman-imtiaz"},"content":"  - date should be in `yyyy-mm-dd` format.","lastModifiedDate":"2022-04-11"},{"lineNumber":615,"author":{"gitId":"aiman-imtiaz"},"content":"  - the description should only contain alphanumeric characters.","lastModifiedDate":"2022-04-11"},{"lineNumber":616,"author":{"gitId":"aiman-imtiaz"},"content":"  - the event should not already exist in the system.","lastModifiedDate":"2022-04-11"},{"lineNumber":617,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":618,"author":{"gitId":"FaliciaOng"},"content":"| **Test Case** | **Command** | **Expected Result** |","lastModifiedDate":"2022-04-11"},{"lineNumber":619,"author":{"gitId":"FaliciaOng"},"content":"|:-------------:|:-------------|:-------------------|","lastModifiedDate":"2022-04-11"},{"lineNumber":620,"author":{"gitId":"aiman-imtiaz"},"content":"| Add event `study` on 19 Nov 2022 |`add event study / 2022-11-19`  | Adds the event|","lastModifiedDate":"2022-04-11"},{"lineNumber":621,"author":{"gitId":"aiman-imtiaz"},"content":"| Add event `study` with no date |`add event study`  | Error message to the user|","lastModifiedDate":"2022-04-11"},{"lineNumber":622,"author":{"gitId":"aiman-imtiaz"},"content":"| Add event `st*\u0026udy` |`add event st*\u0026udy / 2022-11-21`  | Error message to the user|","lastModifiedDate":"2022-04-11"},{"lineNumber":623,"author":{"gitId":"aiman-imtiaz"},"content":"| Add duplicate event | `add event study / 2022-11-19`  | Error message to the user|","lastModifiedDate":"2022-04-11"},{"lineNumber":624,"author":{"gitId":"aiman-imtiaz"},"content":"| Add extra fields to the command | `add event submit TP / 2022-04-11 / blah`  | Error message to the user|","lastModifiedDate":"2022-04-11"},{"lineNumber":625,"author":{"gitId":"aiman-imtiaz"},"content":"| Fail to separate fields | `add event submit TP 2022-04-11`  | Error message to the user|","lastModifiedDate":"2022-04-11"},{"lineNumber":626,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":627,"author":{"gitId":"aiman-imtiaz"},"content":"#### Delete Event","lastModifiedDate":"2022-04-11"},{"lineNumber":628,"author":{"gitId":"aiman-imtiaz"},"content":"* The format of the command is `delete event INDEX`.","lastModifiedDate":"2022-04-11"},{"lineNumber":629,"author":{"gitId":"aiman-imtiaz"},"content":"* Prerequisites:","lastModifiedDate":"2022-04-11"},{"lineNumber":630,"author":{"gitId":"aiman-imtiaz"},"content":"    - index should be an integer.","lastModifiedDate":"2022-04-11"},{"lineNumber":631,"author":{"gitId":"aiman-imtiaz"},"content":"    - the event should exist in the system.","lastModifiedDate":"2022-04-11"},{"lineNumber":632,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":633,"author":{"gitId":"aiman-imtiaz"},"content":"| **Test Case** | **Command** | **Expected Result** |","lastModifiedDate":"2022-04-11"},{"lineNumber":634,"author":{"gitId":"aiman-imtiaz"},"content":"|:-------------:|:-------------|:-------------------|","lastModifiedDate":"2022-04-11"},{"lineNumber":635,"author":{"gitId":"aiman-imtiaz"},"content":"| Delete event `study` from the list |`delete event 1`  | Deletes the event|","lastModifiedDate":"2022-04-11"},{"lineNumber":636,"author":{"gitId":"aiman-imtiaz"},"content":"| Delete event with index out of bounds |`delete event 6`  | Error message to the user|","lastModifiedDate":"2022-04-11"},{"lineNumber":637,"author":{"gitId":"aiman-imtiaz"},"content":"| Delete event with non-integer index |`delete event sf`  | Error message to the user|","lastModifiedDate":"2022-04-11"},{"lineNumber":638,"author":{"gitId":"aiman-imtiaz"},"content":"| Delete event with no index |`delete event`  | Error message to the user|","lastModifiedDate":"2022-04-11"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"zhenster":91,"aiman-imtiaz":86,"FaliciaOng":296,"XunyiiZ":26,"siewyangzhi":112,"-":28}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"Hotel Lite is an easy-to-use application for hoteliers to manage their operations.","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"This application includes features for managing hotel inventory, monitoring housekeeping staff records, ","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"recording customer satisfaction ratings, assigning housekeepers to rooms, adding, removing, viewing hotel events, ","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"and keeping track of checked-in/checked-out rooms.","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"* [User Guide](https://ay2122s2-cs2113-t11-1.github.io/tp/UserGuide.html)","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"* [Developer Guide](https://ay2122s2-cs2113-t11-1.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"* [About Us](https://ay2122s2-cs2113-t11-1.github.io/tp/AboutUs.html)","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"FaliciaOng":8,"-":4}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"Hotel Lite is a convenient tool for hotel managers to keep track of multiple management tasks. ","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"This application offers functionalities for keeping track of hotel inventory,","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"managing housekeeper staff records, recording customer satisfaction ratings, ","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"assigning housekeepers to rooms, ","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"adding, deleting, viewing events happening in the hotel,","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"and maintaining the state of checked-in/checked-out rooms. ","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"aiman-imtiaz"},"content":"2. Download the latest version of `Hotel Lite` from [here](http://link.to/duke).","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"3. To get a list of commands available type `help` after running the application.","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"4. **WARNING: Please do not touch the save files (in the `ListFolder` folder) that save the","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"user\u0027s application usage history.** This will interfere with the function of the program. ","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"1. [Customer Satisfaction Related Commands](#customer-satisfaction-related-commands)","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"    * Add Customer Satisfaction ","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"    * View All Customer Satisfactions","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"    * Calculate Average Satisfaction","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"2. [Housekeeper Related Commands](#housekeeper-related-commands)","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"   * Add Housekeeper Profile","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"   * Add/Update Availability of Housekeeper","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"   * View Recorded Housekeeper List","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"   * Delete Housekeeper","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"   * Obtain Housekeepers on Days of Interest","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"   * Reset Housekeeper Availability","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"   * Increase Age of All Housekeepers","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"   * Adding Housekeeper Performance Rating","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"   * View All Housekeeper Performances","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"aiman-imtiaz"},"content":"   * Assign a housekeeper to a room","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"3. [Event Related Commands](#event-related-commands)","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"aiman-imtiaz"},"content":"   * Add an event","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"aiman-imtiaz"},"content":"   * Delete an event","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"aiman-imtiaz"},"content":"   * View previously added events","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"4. [Room Related Commands](#room-related-commands)","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"XunyiiZ"},"content":"   * Check in a room","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"XunyiiZ"},"content":"   * Check out a room","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"XunyiiZ"},"content":"   * Check room information","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"XunyiiZ"},"content":"   * Check all room information","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"XunyiiZ"},"content":"   * Check room information by level","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"XunyiiZ"},"content":"   * Check room information by category","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"5. [Item Related Commands](#item-related-commands)","lastModifiedDate":"2022-04-10"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"   * Add A New Item To The Item List","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"   * Update The Pax Of An Item In The Item List","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"   * Update The Name Of An Item In The Item List","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"siewyangzhi"},"content":"   * Delete An Item In The Item List","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"siewyangzhi"},"content":"   * View All Items","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"siewyangzhi"},"content":"   * View All Items Within The Item List With A Pax Of Zero","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"siewyangzhi"},"content":"   * Search For Items Within The Item List","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"FaliciaOng"},"content":"## Customer Satisfaction Related Commands","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"zhenster"},"content":"### Adding a customer satisfaction: `add satifaction`","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"zhenster"},"content":"Adds a new customer satisfaction (name of customer and their satisfaction rating from 1-5) to the list of ","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"zhenster"},"content":"customer satisfactions.","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"zhenster"},"content":"Format: `add satisfaction CUSTOMER_NAME / SATISFACTION_RATING`","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"* The `CUSTOMER_NAME` can be in a natural language format. It must not be ","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"zhenster"},"content":"the name of a customer whose satisfaction rating was already recorded. ","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"zhenster"},"content":"It must not contain any non-alphabetical characters (aside from spaces). ","lastModifiedDate":"2022-04-06"},{"lineNumber":67,"author":{"gitId":"zhenster"},"content":"* The `SATISFACTION_RATING` must be an integer from 1 to 5, inclusive. ","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"zhenster"},"content":"Example of usage:","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"zhenster"},"content":"`add satisfaction Will Smith / 3`","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"zhenster"},"content":"Expected output: ","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted ! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"zhenster"},"content":"The Satisfaction instance WILL SMITH: 3 has been added to the list of Satisfactions.","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"zhenster"},"content":"There are currently 1 recorded customer satisfactions.","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"zhenster"},"content":"### View all customer satisfactions: `view satisfactions`","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"zhenster"},"content":"Lists out all customer satisfactions recorded so far in a user-readable format. ","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"zhenster"},"content":"Format: `view satisfactions`","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"zhenster"},"content":"Example of usage:","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"zhenster"},"content":"`add satisfaction Will Smith / 3`  \u003cbr /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"zhenster"},"content":"`add satisfaction Bob / 5`  \u003cbr /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"zhenster"},"content":"`add satisfaction Chris Rock / 4`  \u003cbr /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"zhenster"},"content":"`view satisfactions`","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"zhenster"},"content":"Expected output:","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted ! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"zhenster"},"content":"The Satisfaction instance WILL SMITH: 3 has been added to the list of Satisfactions.","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"zhenster"},"content":"There are currently 1 recorded customer satisfactions.","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted ! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"zhenster"},"content":"The Satisfaction instance BOB: 5 has been added to the list of Satisfactions.","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"zhenster"},"content":"There are currently 2 recorded customer satisfactions.","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted ! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"zhenster"},"content":"The Satisfaction instance CHRIS ROCK: 4 has been added to the list of Satisfactions.","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"zhenster"},"content":"There are currently 3 recorded customer satisfactions.","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Customer Satisfaction List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"zhenster"},"content":"1. [ WILL SMITH ]: 3","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"zhenster"},"content":"2. [ BOB ]: 5","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"zhenster"},"content":"3. [ CHRIS ROCK ]: 4","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":121,"author":{"gitId":"zhenster"},"content":"### Calculate average satisfaction: `average satisfaction`","lastModifiedDate":"2022-04-06"},{"lineNumber":122,"author":{"gitId":"zhenster"},"content":"Calculates the mean customer satisfaction. ","lastModifiedDate":"2022-04-06"},{"lineNumber":123,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":124,"author":{"gitId":"zhenster"},"content":"Format: `average satisfaction`","lastModifiedDate":"2022-04-06"},{"lineNumber":125,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":126,"author":{"gitId":"zhenster"},"content":"Example of usage:","lastModifiedDate":"2022-04-06"},{"lineNumber":127,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":128,"author":{"gitId":"zhenster"},"content":"`add satisfaction Will Smith / 3`  \u003cbr /\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":129,"author":{"gitId":"zhenster"},"content":"`add satisfaction Bob / 5`  \u003cbr /\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":130,"author":{"gitId":"zhenster"},"content":"`add satisfaction Chris Rock / 4`  \u003cbr /\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":131,"author":{"gitId":"zhenster"},"content":"`average satisfaction`","lastModifiedDate":"2022-04-06"},{"lineNumber":132,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":133,"author":{"gitId":"zhenster"},"content":"Expected output:","lastModifiedDate":"2022-04-06"},{"lineNumber":134,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-04-06"},{"lineNumber":135,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted ! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-06"},{"lineNumber":136,"author":{"gitId":"zhenster"},"content":"The Satisfaction instance WILL SMITH: 3 has been added to the list of Satisfactions.","lastModifiedDate":"2022-04-06"},{"lineNumber":137,"author":{"gitId":"zhenster"},"content":"There are currently 1 recorded customer satisfactions.","lastModifiedDate":"2022-04-06"},{"lineNumber":138,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-06"},{"lineNumber":139,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":140,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted ! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-06"},{"lineNumber":141,"author":{"gitId":"zhenster"},"content":"The Satisfaction instance BOB: 5 has been added to the list of Satisfactions.","lastModifiedDate":"2022-04-06"},{"lineNumber":142,"author":{"gitId":"zhenster"},"content":"There are currently 2 recorded customer satisfactions.","lastModifiedDate":"2022-04-06"},{"lineNumber":143,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-06"},{"lineNumber":144,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":145,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted ! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-06"},{"lineNumber":146,"author":{"gitId":"zhenster"},"content":"The Satisfaction instance CHRIS ROCK: 4 has been added to the list of Satisfactions.","lastModifiedDate":"2022-04-06"},{"lineNumber":147,"author":{"gitId":"zhenster"},"content":"There are currently 3 recorded customer satisfactions.","lastModifiedDate":"2022-04-06"},{"lineNumber":148,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-06"},{"lineNumber":149,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":150,"author":{"gitId":"zhenster"},"content":"Average customer satisfaction: 4.0","lastModifiedDate":"2022-04-06"},{"lineNumber":151,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-04-06"},{"lineNumber":152,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":153,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":154,"author":{"gitId":"FaliciaOng"},"content":"## Housekeeper Related Commands","lastModifiedDate":"2022-03-29"},{"lineNumber":155,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":156,"author":{"gitId":"FaliciaOng"},"content":"### Adding Housekeeper Profile : `add housekeeper`","lastModifiedDate":"2022-03-29"},{"lineNumber":157,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":158,"author":{"gitId":"FaliciaOng"},"content":"Adds a new housekeeper profile into the list of housekeepers. The add profile command includes the name and age of the","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"FaliciaOng"},"content":"new housekeeper to be added. As housekeeper is being added for the first time, availability shown will be empty (\"N/A\").","lastModifiedDate":"2022-03-30"},{"lineNumber":160,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"FaliciaOng"},"content":"Format: `add housekeeper NAME / AGE`","lastModifiedDate":"2022-03-29"},{"lineNumber":163,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":164,"author":{"gitId":"FaliciaOng"},"content":"* The `NAME` cannot have digits and symbols.","lastModifiedDate":"2022-03-30"},{"lineNumber":165,"author":{"gitId":"FaliciaOng"},"content":"* The `NAME` given must not exist in the housekeeper list.","lastModifiedDate":"2022-03-30"},{"lineNumber":166,"author":{"gitId":"FaliciaOng"},"content":"* The `AGE` must be between 21 and 60.","lastModifiedDate":"2022-03-29"},{"lineNumber":167,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":168,"author":{"gitId":"FaliciaOng"},"content":"Example of usage:","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":170,"author":{"gitId":"FaliciaOng"},"content":"`add housekeeper susan / 46`","lastModifiedDate":"2022-03-29"},{"lineNumber":171,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":172,"author":{"gitId":"FaliciaOng"},"content":"`add housekeeper jane / 33`","lastModifiedDate":"2022-03-29"},{"lineNumber":173,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":174,"author":{"gitId":"FaliciaOng"},"content":"Expected output:","lastModifiedDate":"2022-03-29"},{"lineNumber":175,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":176,"author":{"gitId":"FaliciaOng"},"content":"If housekeeper has not been recorded:","lastModifiedDate":"2022-03-30"},{"lineNumber":177,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":178,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted ! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":179,"author":{"gitId":"FaliciaOng"},"content":"[SUSAN]: Age: 46, Availability: N/A","lastModifiedDate":"2022-03-30"},{"lineNumber":180,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":181,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":182,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":183,"author":{"gitId":"FaliciaOng"},"content":"If housekeeper has been recorded:","lastModifiedDate":"2022-03-30"},{"lineNumber":184,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":185,"author":{"gitId":"FaliciaOng"},"content":"Error! This person has already been recorded.","lastModifiedDate":"2022-03-30"},{"lineNumber":186,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":187,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":188,"author":{"gitId":"FaliciaOng"},"content":"### Add/Update Availability of Housekeeper : `availability`","lastModifiedDate":"2022-03-30"},{"lineNumber":189,"author":{"gitId":"FaliciaOng"},"content":"Declare housekeeper\u0027s availability in the week using numbers from 1 to 7 where each number represents a day in a week.","lastModifiedDate":"2022-03-29"},{"lineNumber":190,"author":{"gitId":"FaliciaOng"},"content":"User can update availability by calling the command again.","lastModifiedDate":"2022-03-30"},{"lineNumber":191,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":192,"author":{"gitId":"FaliciaOng"},"content":"Numbers from 1 to 7 are map to a day in a week by: \u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":193,"author":{"gitId":"FaliciaOng"},"content":"`1`: Monday \u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":194,"author":{"gitId":"FaliciaOng"},"content":"`2`: Tuesday \u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":195,"author":{"gitId":"FaliciaOng"},"content":"`3`: Wednesday\u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":196,"author":{"gitId":"FaliciaOng"},"content":"`4`: Thursday \u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":197,"author":{"gitId":"FaliciaOng"},"content":"`5`: Friday \u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":198,"author":{"gitId":"FaliciaOng"},"content":"`6`: Saturday \u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":199,"author":{"gitId":"FaliciaOng"},"content":"`7`: Sunday \u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":200,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":201,"author":{"gitId":"FaliciaOng"},"content":"Format: `availability NAME / DAY(S)`","lastModifiedDate":"2022-03-30"},{"lineNumber":202,"author":{"gitId":"FaliciaOng"},"content":"* `NAME` given must be in the records of housekeeper list to be eligible to add availability.","lastModifiedDate":"2022-03-29"},{"lineNumber":203,"author":{"gitId":"FaliciaOng"},"content":"* `DAY(S)` given must be between 1 and 7. Multiple days can be represented using commas.","lastModifiedDate":"2022-03-30"},{"lineNumber":204,"author":{"gitId":"FaliciaOng"},"content":"* `DAY(S)` given can be duplicated as long as it is an integer between 1 and 7. The duplicated days will be recorded only","lastModifiedDate":"2022-04-06"},{"lineNumber":205,"author":{"gitId":"FaliciaOng"},"content":"once in the list","lastModifiedDate":"2022-04-06"},{"lineNumber":206,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":207,"author":{"gitId":"FaliciaOng"},"content":"Example of usage:","lastModifiedDate":"2022-03-29"},{"lineNumber":208,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":209,"author":{"gitId":"FaliciaOng"},"content":"`availability sally / 1`","lastModifiedDate":"2022-03-29"},{"lineNumber":210,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":211,"author":{"gitId":"FaliciaOng"},"content":"`availability jane / 1,3,5,7,3`","lastModifiedDate":"2022-04-06"},{"lineNumber":212,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":213,"author":{"gitId":"FaliciaOng"},"content":"`availability susan / 1,3,5,`","lastModifiedDate":"2022-03-30"},{"lineNumber":214,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":215,"author":{"gitId":"FaliciaOng"},"content":"Expected output:","lastModifiedDate":"2022-03-30"},{"lineNumber":216,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":217,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":218,"author":{"gitId":"FaliciaOng"},"content":"Added sally availability into records","lastModifiedDate":"2022-03-30"},{"lineNumber":219,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":220,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":221,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":222,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":223,"author":{"gitId":"FaliciaOng"},"content":"### View Recorded Housekeeper List : `view recorded housekeepers`","lastModifiedDate":"2022-04-06"},{"lineNumber":224,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":225,"author":{"gitId":"FaliciaOng"},"content":"View all housekeeper in the list with their name, age and availability. Availability will not be shown if user","lastModifiedDate":"2022-03-30"},{"lineNumber":226,"author":{"gitId":"FaliciaOng"},"content":"have not entered it yet.","lastModifiedDate":"2022-03-30"},{"lineNumber":227,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":228,"author":{"gitId":"FaliciaOng"},"content":"Format: `view recorded housekeepers`","lastModifiedDate":"2022-04-06"},{"lineNumber":229,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":230,"author":{"gitId":"FaliciaOng"},"content":"Example of usage:","lastModifiedDate":"2022-03-30"},{"lineNumber":231,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":232,"author":{"gitId":"FaliciaOng"},"content":"add housekeeper susan / 46","lastModifiedDate":"2022-03-30"},{"lineNumber":233,"author":{"gitId":"FaliciaOng"},"content":"add housekeeper jane / 33","lastModifiedDate":"2022-03-30"},{"lineNumber":234,"author":{"gitId":"FaliciaOng"},"content":"add housekeeper sally / 33","lastModifiedDate":"2022-03-30"},{"lineNumber":235,"author":{"gitId":"FaliciaOng"},"content":"availability sally / 1,7,","lastModifiedDate":"2022-03-30"},{"lineNumber":236,"author":{"gitId":"FaliciaOng"},"content":"view recorded housekeepers","lastModifiedDate":"2022-04-06"},{"lineNumber":237,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":238,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":239,"author":{"gitId":"FaliciaOng"},"content":"Expected output:","lastModifiedDate":"2022-03-29"},{"lineNumber":240,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":241,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted ! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":242,"author":{"gitId":"FaliciaOng"},"content":"[SUSAN]: Age: 46, Availability: N/A","lastModifiedDate":"2022-03-30"},{"lineNumber":243,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":244,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":245,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted ! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":246,"author":{"gitId":"FaliciaOng"},"content":"[JANE]: Age: 33, Availability: N/A","lastModifiedDate":"2022-03-30"},{"lineNumber":247,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":248,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":249,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted ! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":250,"author":{"gitId":"FaliciaOng"},"content":"[SALLY]: Age: 33, Availability: N/A","lastModifiedDate":"2022-03-30"},{"lineNumber":251,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":252,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":253,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":254,"author":{"gitId":"FaliciaOng"},"content":"Added sally availability into records","lastModifiedDate":"2022-03-30"},{"lineNumber":255,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":256,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":257,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Housekeeper List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":258,"author":{"gitId":"FaliciaOng"},"content":"1. [SUSAN]: Age: 46, Availability: N/A","lastModifiedDate":"2022-03-30"},{"lineNumber":259,"author":{"gitId":"FaliciaOng"},"content":"2. [JANE]: Age: 33, Availability: N/A","lastModifiedDate":"2022-03-30"},{"lineNumber":260,"author":{"gitId":"FaliciaOng"},"content":"3. [SALLY]: Age: 33, Availability: Monday Sunday ","lastModifiedDate":"2022-03-30"},{"lineNumber":261,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":262,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":263,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":264,"author":{"gitId":"FaliciaOng"},"content":"### Delete Housekeeper : `delete housekeeper `","lastModifiedDate":"2022-03-29"},{"lineNumber":265,"author":{"gitId":"FaliciaOng"},"content":"When a housekeeper resigns, the deleted housekeeper command removes the resigning housekeeper from the list of ","lastModifiedDate":"2022-04-06"},{"lineNumber":266,"author":{"gitId":"FaliciaOng"},"content":"housekeepers. This command will also display the number of housekeepers remaining in the housekeeper list.","lastModifiedDate":"2022-03-30"},{"lineNumber":267,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":268,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":269,"author":{"gitId":"FaliciaOng"},"content":"Format: `delete housekeeper NAME`","lastModifiedDate":"2022-03-29"},{"lineNumber":270,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":271,"author":{"gitId":"FaliciaOng"},"content":"* `NAME` given must be in the records of housekeeper list to be eligible for deletion.","lastModifiedDate":"2022-03-29"},{"lineNumber":272,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":273,"author":{"gitId":"FaliciaOng"},"content":"Example of usage:","lastModifiedDate":"2022-03-29"},{"lineNumber":274,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":275,"author":{"gitId":"FaliciaOng"},"content":"delete housekeeper sally","lastModifiedDate":"2022-03-29"},{"lineNumber":276,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":277,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":278,"author":{"gitId":"FaliciaOng"},"content":"Expected output:","lastModifiedDate":"2022-03-29"},{"lineNumber":279,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":280,"author":{"gitId":"FaliciaOng"},"content":"If housekeeper to be deleted exists in the list for deletion:","lastModifiedDate":"2022-03-30"},{"lineNumber":281,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":282,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":283,"author":{"gitId":"FaliciaOng"},"content":"Deleted sally from the list of profile","lastModifiedDate":"2022-03-29"},{"lineNumber":284,"author":{"gitId":"FaliciaOng"},"content":"Take note! Total pax of housekeeper:  2","lastModifiedDate":"2022-03-29"},{"lineNumber":285,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":286,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":287,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":288,"author":{"gitId":"FaliciaOng"},"content":"If housekeeper to be deleted does not exist in the list for deletion:","lastModifiedDate":"2022-03-30"},{"lineNumber":289,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":290,"author":{"gitId":"FaliciaOng"},"content":"Error! User does not exist.","lastModifiedDate":"2022-03-30"},{"lineNumber":291,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":292,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":293,"author":{"gitId":"FaliciaOng"},"content":"### Obtain Housekeepers on Days of Interest : `get available on `","lastModifiedDate":"2022-03-30"},{"lineNumber":294,"author":{"gitId":"FaliciaOng"},"content":"Derive a list of housekeeper available from any day in a week. If command is used on days with no housekeeper ","lastModifiedDate":"2022-03-29"},{"lineNumber":295,"author":{"gitId":"FaliciaOng"},"content":"available, list printed will indicate that no housekeeper is available on that day.","lastModifiedDate":"2022-03-29"},{"lineNumber":296,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":297,"author":{"gitId":"FaliciaOng"},"content":"Format:","lastModifiedDate":"2022-03-29"},{"lineNumber":298,"author":{"gitId":"FaliciaOng"},"content":"`get available on DAY`","lastModifiedDate":"2022-03-29"},{"lineNumber":299,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":300,"author":{"gitId":"FaliciaOng"},"content":"* `DAY` have to be between 1 and 7.","lastModifiedDate":"2022-03-29"},{"lineNumber":301,"author":{"gitId":"FaliciaOng"},"content":"* Numbers from 1 to 7 are map to a `DAY` in a week by: \u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":302,"author":{"gitId":"FaliciaOng"},"content":"  `1`: Monday \u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":303,"author":{"gitId":"FaliciaOng"},"content":"  `2`: Tuesday \u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":304,"author":{"gitId":"FaliciaOng"},"content":"  `3`: Wednesday\u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":305,"author":{"gitId":"FaliciaOng"},"content":"  `4`: Thursday \u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":306,"author":{"gitId":"FaliciaOng"},"content":"  `5`: Friday \u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":307,"author":{"gitId":"FaliciaOng"},"content":"  `6`: Saturday \u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":308,"author":{"gitId":"FaliciaOng"},"content":"  `7`: Sunday \u003cbr/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":309,"author":{"gitId":"FaliciaOng"},"content":"  ","lastModifiedDate":"2022-03-29"},{"lineNumber":310,"author":{"gitId":"FaliciaOng"},"content":"* Only one day can be enquired at a time.","lastModifiedDate":"2022-03-29"},{"lineNumber":311,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":312,"author":{"gitId":"FaliciaOng"},"content":"Example of usage:","lastModifiedDate":"2022-03-29"},{"lineNumber":313,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":314,"author":{"gitId":"FaliciaOng"},"content":"add housekeeper sally / 33","lastModifiedDate":"2022-03-30"},{"lineNumber":315,"author":{"gitId":"FaliciaOng"},"content":"availability sally / 1,7,","lastModifiedDate":"2022-03-30"},{"lineNumber":316,"author":{"gitId":"FaliciaOng"},"content":"get available on 1","lastModifiedDate":"2022-03-30"},{"lineNumber":317,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":318,"author":{"gitId":"FaliciaOng"},"content":"Expected output:","lastModifiedDate":"2022-03-29"},{"lineNumber":319,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":320,"author":{"gitId":"FaliciaOng"},"content":"If there exist any housekeeper on Monday:","lastModifiedDate":"2022-03-29"},{"lineNumber":321,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":322,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Monday List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":323,"author":{"gitId":"FaliciaOng"},"content":"1. sally","lastModifiedDate":"2022-03-29"},{"lineNumber":324,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":325,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":326,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":327,"author":{"gitId":"FaliciaOng"},"content":"If there is no housekeeper available on Monday:","lastModifiedDate":"2022-03-29"},{"lineNumber":328,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":329,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Monday List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":330,"author":{"gitId":"FaliciaOng"},"content":"TAKE NOTE! NO ONE IS AVAILABLE!!","lastModifiedDate":"2022-03-29"},{"lineNumber":331,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":332,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":333,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":334,"author":{"gitId":"FaliciaOng"},"content":"### Reset Housekeeper Availability : `is a new week`","lastModifiedDate":"2022-03-29"},{"lineNumber":335,"author":{"gitId":"FaliciaOng"},"content":"When a new week begins, all housekeeper availabilities can be reset by calling this command. For verification,","lastModifiedDate":"2022-03-29"},{"lineNumber":336,"author":{"gitId":"FaliciaOng"},"content":"command will also print out the list with all availabilities being reset.","lastModifiedDate":"2022-03-29"},{"lineNumber":337,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":338,"author":{"gitId":"FaliciaOng"},"content":"Format: `is a new week`","lastModifiedDate":"2022-03-29"},{"lineNumber":339,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":340,"author":{"gitId":"FaliciaOng"},"content":"Expected output:","lastModifiedDate":"2022-03-29"},{"lineNumber":341,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":342,"author":{"gitId":"FaliciaOng"},"content":"Initial Housekeeper List Recorded:","lastModifiedDate":"2022-03-30"},{"lineNumber":343,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":344,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Housekeeper List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":345,"author":{"gitId":"FaliciaOng"},"content":"1. [SUSAN]: Age: 46, Availability: Monday Wednesday Thursday Friday ","lastModifiedDate":"2022-03-30"},{"lineNumber":346,"author":{"gitId":"FaliciaOng"},"content":"2. [JANE]: Age: 33, Availability: Monday Wednesday Friday Saturday ","lastModifiedDate":"2022-03-30"},{"lineNumber":347,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":348,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":349,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":350,"author":{"gitId":"FaliciaOng"},"content":"After calling new week command:","lastModifiedDate":"2022-03-30"},{"lineNumber":351,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":352,"author":{"gitId":"FaliciaOng"},"content":"Housekeeper\u0027s availability has been reset!","lastModifiedDate":"2022-03-29"},{"lineNumber":353,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Housekeeper List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":354,"author":{"gitId":"FaliciaOng"},"content":"1. [SUSAN]: Age: 46, Availability: N/A","lastModifiedDate":"2022-03-30"},{"lineNumber":355,"author":{"gitId":"FaliciaOng"},"content":"2. [JANE]: Age: 33, Availability: N/A","lastModifiedDate":"2022-03-30"},{"lineNumber":356,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":357,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":358,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":359,"author":{"gitId":"FaliciaOng"},"content":"### Increase Age of All Housekeepers : `is a new year`","lastModifiedDate":"2022-03-29"},{"lineNumber":360,"author":{"gitId":"FaliciaOng"},"content":"This command can be used to increase the age of all housekeepers by one when a new year begins.","lastModifiedDate":"2022-03-30"},{"lineNumber":361,"author":{"gitId":"FaliciaOng"},"content":"Housekeepers who exceed the age restriction of 60 after increment will be removed from the list of ","lastModifiedDate":"2022-03-30"},{"lineNumber":362,"author":{"gitId":"FaliciaOng"},"content":"housekeepers, as the age limit for working as a housekeeper at the hotel is 21 to 60 years old. When the ","lastModifiedDate":"2022-03-30"},{"lineNumber":363,"author":{"gitId":"FaliciaOng"},"content":"housekeepers are removed, a list of those who are over the age restriction will be displayed.","lastModifiedDate":"2022-03-30"},{"lineNumber":364,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":365,"author":{"gitId":"FaliciaOng"},"content":"Format: `is a new year`","lastModifiedDate":"2022-03-29"},{"lineNumber":366,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":367,"author":{"gitId":"FaliciaOng"},"content":"Expected output:","lastModifiedDate":"2022-03-29"},{"lineNumber":368,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":369,"author":{"gitId":"FaliciaOng"},"content":"If list of housekeeper has housekeeper which exceed age limit:","lastModifiedDate":"2022-03-29"},{"lineNumber":370,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":371,"author":{"gitId":"FaliciaOng"},"content":"Initial Recorded Housekeeper List:","lastModifiedDate":"2022-03-30"},{"lineNumber":372,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":373,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Housekeeper List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":374,"author":{"gitId":"FaliciaOng"},"content":"1. [SUSAN]: Age: 46, Availability: N/A","lastModifiedDate":"2022-03-30"},{"lineNumber":375,"author":{"gitId":"FaliciaOng"},"content":"2. [JANE]: Age: 33, Availability: N/A","lastModifiedDate":"2022-03-30"},{"lineNumber":376,"author":{"gitId":"FaliciaOng"},"content":"3. [LUCY]: Age: 60, Availability: N/A","lastModifiedDate":"2022-03-30"},{"lineNumber":377,"author":{"gitId":"FaliciaOng"},"content":"4. [JON]: Age: 60, Availability: N/A","lastModifiedDate":"2022-03-30"},{"lineNumber":378,"author":{"gitId":"FaliciaOng"},"content":"5. [CALLY]: Age: 59, Availability: N/A","lastModifiedDate":"2022-03-30"},{"lineNumber":379,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":380,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":381,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":382,"author":{"gitId":"FaliciaOng"},"content":"After calling new year command:","lastModifiedDate":"2022-03-30"},{"lineNumber":383,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":384,"author":{"gitId":"FaliciaOng"},"content":"Everyone age has increased by one","lastModifiedDate":"2022-03-29"},{"lineNumber":385,"author":{"gitId":"FaliciaOng"},"content":"**Over age limit housekeeper will be removed from list**","lastModifiedDate":"2022-03-29"},{"lineNumber":386,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Age Limit Exceed List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":387,"author":{"gitId":"FaliciaOng"},"content":"1. [LUCY]: Age: 60, Availability: N/A","lastModifiedDate":"2022-03-30"},{"lineNumber":388,"author":{"gitId":"FaliciaOng"},"content":"2. [JON]: Age: 60, Availability: N/A","lastModifiedDate":"2022-03-30"},{"lineNumber":389,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":390,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":391,"author":{"gitId":"FaliciaOng"},"content":"Recorded Housekeeper List after command:","lastModifiedDate":"2022-03-30"},{"lineNumber":392,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":393,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Housekeeper List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":394,"author":{"gitId":"FaliciaOng"},"content":"1. [SUSAN]: Age: 47, Availability: N/A","lastModifiedDate":"2022-03-30"},{"lineNumber":395,"author":{"gitId":"FaliciaOng"},"content":"2. [JANE]: Age: 34, Availability: N/A","lastModifiedDate":"2022-03-30"},{"lineNumber":396,"author":{"gitId":"FaliciaOng"},"content":"3. [CALLY]: Age: 60, Availability: N/A","lastModifiedDate":"2022-03-30"},{"lineNumber":397,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":398,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":399,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":400,"author":{"gitId":"FaliciaOng"},"content":"However, If none of the housekeeper exceed age limit:","lastModifiedDate":"2022-03-30"},{"lineNumber":401,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":402,"author":{"gitId":"FaliciaOng"},"content":"Everyone age has increased by one","lastModifiedDate":"2022-03-29"},{"lineNumber":403,"author":{"gitId":"FaliciaOng"},"content":"**Over age limit housekeeper will be removed from list**","lastModifiedDate":"2022-03-29"},{"lineNumber":404,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Age Limit Exceed List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":405,"author":{"gitId":"FaliciaOng"},"content":"Everyone is within age limit","lastModifiedDate":"2022-03-29"},{"lineNumber":406,"author":{"gitId":"FaliciaOng"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":407,"author":{"gitId":"FaliciaOng"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":408,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":409,"author":{"gitId":"aiman-imtiaz"},"content":"### Assign housekeeper to a room `assign housekeeper `","lastModifiedDate":"2022-03-30"},{"lineNumber":410,"author":{"gitId":"aiman-imtiaz"},"content":"A housekeeper can be assigned to be responsible for a room. The room may or may not have a houskeeper assigned to it.","lastModifiedDate":"2022-03-30"},{"lineNumber":411,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":412,"author":{"gitId":"aiman-imtiaz"},"content":"Format: `assign housekeeper NAME / ROOMID`","lastModifiedDate":"2022-03-30"},{"lineNumber":413,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":414,"author":{"gitId":"aiman-imtiaz"},"content":"The `NAME` should be of a housekeeper already added in the system. The `ROOMID` should represent a room number of a room that is present in the system.","lastModifiedDate":"2022-03-30"},{"lineNumber":415,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":416,"author":{"gitId":"aiman-imtiaz"},"content":"Sample input: ","lastModifiedDate":"2022-03-30"},{"lineNumber":417,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":418,"author":{"gitId":"aiman-imtiaz"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":419,"author":{"gitId":"aiman-imtiaz"},"content":"assign susan / 301","lastModifiedDate":"2022-03-30"},{"lineNumber":420,"author":{"gitId":"aiman-imtiaz"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":421,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":422,"author":{"gitId":"aiman-imtiaz"},"content":"Expected output:","lastModifiedDate":"2022-03-30"},{"lineNumber":423,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":424,"author":{"gitId":"aiman-imtiaz"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":425,"author":{"gitId":"aiman-imtiaz"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":426,"author":{"gitId":"aiman-imtiaz"},"content":" I have assigned susan to room number 301.","lastModifiedDate":"2022-03-30"},{"lineNumber":427,"author":{"gitId":"aiman-imtiaz"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":428,"author":{"gitId":"aiman-imtiaz"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":429,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":430,"author":{"gitId":"zhenster"},"content":"### Adding a housekeeper\u0027s performance: `add performance`","lastModifiedDate":"2022-03-30"},{"lineNumber":431,"author":{"gitId":"zhenster"},"content":"Adds a new housekeeper performance (name of housekeeper and their performance rating from 1-5) to the list of","lastModifiedDate":"2022-03-30"},{"lineNumber":432,"author":{"gitId":"zhenster"},"content":"housekeeper performances.","lastModifiedDate":"2022-03-30"},{"lineNumber":433,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":434,"author":{"gitId":"zhenster"},"content":"Format: `add performance HOUSEKEEPER_NAME / PERFORMANCE_RATING`","lastModifiedDate":"2022-03-30"},{"lineNumber":435,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":436,"author":{"gitId":"zhenster"},"content":"* The `HOUSEKEEPER_NAME` can be in a natural language format. It must not be the name of a","lastModifiedDate":"2022-03-30"},{"lineNumber":437,"author":{"gitId":"zhenster"},"content":"  housekeeper who already has a recorded performance rating, and it must be the name of a","lastModifiedDate":"2022-03-30"},{"lineNumber":438,"author":{"gitId":"zhenster"},"content":"  housekeeper who has a corresponding record in the list of housekeepers. It must not contain any ","lastModifiedDate":"2022-04-06"},{"lineNumber":439,"author":{"gitId":"zhenster"},"content":"  non-alphabetical characters (aside from spaces).","lastModifiedDate":"2022-04-06"},{"lineNumber":440,"author":{"gitId":"zhenster"},"content":"* The `PERFORMANCE_RATING` must be an integer from 1-5, inclusive.","lastModifiedDate":"2022-03-30"},{"lineNumber":441,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":442,"author":{"gitId":"zhenster"},"content":"Example of usage:","lastModifiedDate":"2022-03-30"},{"lineNumber":443,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":444,"author":{"gitId":"zhenster"},"content":"`add performance Fred Jones / 4`","lastModifiedDate":"2022-03-30"},{"lineNumber":445,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":446,"author":{"gitId":"zhenster"},"content":"Expected output:","lastModifiedDate":"2022-03-30"},{"lineNumber":447,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":448,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":449,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted ! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":450,"author":{"gitId":"zhenster"},"content":"The HousekeeperPerformance instance FRED JONES: 4 has been added to the list of housekeeper performances.","lastModifiedDate":"2022-03-30"},{"lineNumber":451,"author":{"gitId":"zhenster"},"content":"There are currently 1 recorded housekeeper performances.","lastModifiedDate":"2022-03-30"},{"lineNumber":452,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":453,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":454,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":455,"author":{"gitId":"zhenster"},"content":"### View all housekeeper performances: `view performances`","lastModifiedDate":"2022-03-30"},{"lineNumber":456,"author":{"gitId":"zhenster"},"content":"Lists out all housekeeper performances recorded so far in a user-readable format. The performance","lastModifiedDate":"2022-03-30"},{"lineNumber":457,"author":{"gitId":"zhenster"},"content":"ratings are sorted in descending order (from highest to lowest).","lastModifiedDate":"2022-03-30"},{"lineNumber":458,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":459,"author":{"gitId":"zhenster"},"content":"Format: `view performances`","lastModifiedDate":"2022-03-30"},{"lineNumber":460,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":461,"author":{"gitId":"zhenster"},"content":"Example of usage:","lastModifiedDate":"2022-03-30"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":463,"author":{"gitId":"zhenster"},"content":"`add performance Fred Jones / 4`  \u003cbr /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":464,"author":{"gitId":"zhenster"},"content":"`add performance Joe Johnson / 2`  \u003cbr /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":465,"author":{"gitId":"zhenster"},"content":"`add performance John Smith / 3`  \u003cbr /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":466,"author":{"gitId":"zhenster"},"content":"`view performances`","lastModifiedDate":"2022-03-30"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":468,"author":{"gitId":"zhenster"},"content":"Expected output:","lastModifiedDate":"2022-03-30"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":470,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":471,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted ! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":472,"author":{"gitId":"zhenster"},"content":"The HousekeeperPerformance instance FRED JONES: 4 has been added to the list of housekeeper performances.","lastModifiedDate":"2022-03-30"},{"lineNumber":473,"author":{"gitId":"zhenster"},"content":"There are currently 1 recorded housekeeper performances.","lastModifiedDate":"2022-03-30"},{"lineNumber":474,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":476,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted ! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":477,"author":{"gitId":"zhenster"},"content":"The HousekeeperPerformance instance JOE JOHNSON: 2 has been added to the list of housekeeper performances.","lastModifiedDate":"2022-03-30"},{"lineNumber":478,"author":{"gitId":"zhenster"},"content":"There are currently 2 recorded housekeeper performances.","lastModifiedDate":"2022-03-30"},{"lineNumber":479,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":481,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted ! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":482,"author":{"gitId":"zhenster"},"content":"The HousekeeperPerformance instance JOHN SMITH: 3 has been added to the list of housekeeper performances.","lastModifiedDate":"2022-03-30"},{"lineNumber":483,"author":{"gitId":"zhenster"},"content":"There are currently 3 recorded housekeeper performances.","lastModifiedDate":"2022-03-30"},{"lineNumber":484,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":486,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Housekeeper Performance List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":487,"author":{"gitId":"zhenster"},"content":"1. [ FRED JONES ]: 4","lastModifiedDate":"2022-03-30"},{"lineNumber":488,"author":{"gitId":"zhenster"},"content":"2. [ JOHN SMITH ]: 3","lastModifiedDate":"2022-03-30"},{"lineNumber":489,"author":{"gitId":"zhenster"},"content":"3. [ JOE JOHNSON ]: 2","lastModifiedDate":"2022-03-30"},{"lineNumber":490,"author":{"gitId":"zhenster"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":491,"author":{"gitId":"zhenster"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":494,"author":{"gitId":"aiman-imtiaz"},"content":"## Event Related Commands","lastModifiedDate":"2022-03-30"},{"lineNumber":495,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":496,"author":{"gitId":"aiman-imtiaz"},"content":"### Add an event: `add event`","lastModifiedDate":"2022-03-30"},{"lineNumber":497,"author":{"gitId":"aiman-imtiaz"},"content":"Adds an event inside the list on a given date. ","lastModifiedDate":"2022-03-30"},{"lineNumber":498,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":499,"author":{"gitId":"aiman-imtiaz"},"content":"Format: `add event DESCRIPTION / DATE`","lastModifiedDate":"2022-03-30"},{"lineNumber":500,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":501,"author":{"gitId":"aiman-imtiaz"},"content":"The date has to strictly be in the format `yyyy-mm-dd` or the command will not go through.","lastModifiedDate":"2022-04-05"},{"lineNumber":502,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":503,"author":{"gitId":"aiman-imtiaz"},"content":"Sample input:","lastModifiedDate":"2022-03-30"},{"lineNumber":504,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":505,"author":{"gitId":"aiman-imtiaz"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":506,"author":{"gitId":"aiman-imtiaz"},"content":"add event study / 2022-12-13","lastModifiedDate":"2022-04-06"},{"lineNumber":507,"author":{"gitId":"aiman-imtiaz"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":508,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":509,"author":{"gitId":"aiman-imtiaz"},"content":"Expected output:","lastModifiedDate":"2022-03-30"},{"lineNumber":510,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":511,"author":{"gitId":"aiman-imtiaz"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":512,"author":{"gitId":"aiman-imtiaz"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-06"},{"lineNumber":513,"author":{"gitId":"aiman-imtiaz"},"content":"I have added the following event in your list:","lastModifiedDate":"2022-03-30"},{"lineNumber":514,"author":{"gitId":"aiman-imtiaz"},"content":"\tEvent study (at: Dec 13 2022)","lastModifiedDate":"2022-04-06"},{"lineNumber":515,"author":{"gitId":"aiman-imtiaz"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-06"},{"lineNumber":516,"author":{"gitId":"aiman-imtiaz"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":517,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":518,"author":{"gitId":"aiman-imtiaz"},"content":"### View the list of events: `view events`","lastModifiedDate":"2022-04-11"},{"lineNumber":519,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":520,"author":{"gitId":"aiman-imtiaz"},"content":"Lists all the events present in the system in order. No additional argument is required. The list of events inside the system will not change; the existing events will merely be displayed.","lastModifiedDate":"2022-03-30"},{"lineNumber":521,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":522,"author":{"gitId":"aiman-imtiaz"},"content":"This command helps us know which index each event is added in. The index from this list can be referenced when the `delete` function (described below) is called.","lastModifiedDate":"2022-03-30"},{"lineNumber":523,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":524,"author":{"gitId":"aiman-imtiaz"},"content":"Format: `view events`","lastModifiedDate":"2022-04-11"},{"lineNumber":525,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":526,"author":{"gitId":"aiman-imtiaz"},"content":"Expected output:","lastModifiedDate":"2022-03-30"},{"lineNumber":527,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":528,"author":{"gitId":"aiman-imtiaz"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":529,"author":{"gitId":"aiman-imtiaz"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-06"},{"lineNumber":530,"author":{"gitId":"aiman-imtiaz"},"content":"Here are all the events in your list:","lastModifiedDate":"2022-03-30"},{"lineNumber":531,"author":{"gitId":"aiman-imtiaz"},"content":"\t1. Event study (at: Dec 12 2022)","lastModifiedDate":"2022-04-06"},{"lineNumber":532,"author":{"gitId":"aiman-imtiaz"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-06"},{"lineNumber":533,"author":{"gitId":"aiman-imtiaz"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":534,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":535,"author":{"gitId":"aiman-imtiaz"},"content":"### Delete an event: `delete event `","lastModifiedDate":"2022-03-30"},{"lineNumber":536,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":537,"author":{"gitId":"aiman-imtiaz"},"content":"Deletes an event at a particular position in the list. The event will disappear from the system forever. It will not only get deleted from the list, it will vanish from the computer memory as well. ","lastModifiedDate":"2022-03-30"},{"lineNumber":538,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":539,"author":{"gitId":"aiman-imtiaz"},"content":"Format: `delete event INDEX`","lastModifiedDate":"2022-03-30"},{"lineNumber":540,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":541,"author":{"gitId":"aiman-imtiaz"},"content":"Make sure that you put the correct index for the event to be removed. Indexes can be seen when the list of events is printed.","lastModifiedDate":"2022-03-30"},{"lineNumber":542,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":543,"author":{"gitId":"aiman-imtiaz"},"content":"Sample input: `delete event 1`","lastModifiedDate":"2022-04-06"},{"lineNumber":544,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":545,"author":{"gitId":"aiman-imtiaz"},"content":"Expected output:","lastModifiedDate":"2022-03-30"},{"lineNumber":546,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":547,"author":{"gitId":"aiman-imtiaz"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":548,"author":{"gitId":"aiman-imtiaz"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-06"},{"lineNumber":549,"author":{"gitId":"aiman-imtiaz"},"content":"I have deleted the following event from your list:","lastModifiedDate":"2022-03-30"},{"lineNumber":550,"author":{"gitId":"aiman-imtiaz"},"content":"\tEvent study (at: Dec 12 2022)","lastModifiedDate":"2022-04-06"},{"lineNumber":551,"author":{"gitId":"aiman-imtiaz"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-06"},{"lineNumber":552,"author":{"gitId":"aiman-imtiaz"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":553,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":554,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":555,"author":{"gitId":"XunyiiZ"},"content":"## Room Related Commands","lastModifiedDate":"2022-03-29"},{"lineNumber":556,"author":{"gitId":"XunyiiZ"},"content":"This app is targeted for one hotel, thus the room has been fixed and the information of room cannot be modified.","lastModifiedDate":"2022-04-02"},{"lineNumber":557,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":558,"author":{"gitId":"XunyiiZ"},"content":"### Check in a room: `check in`","lastModifiedDate":"2022-03-29"},{"lineNumber":559,"author":{"gitId":"XunyiiZ"},"content":"Checks in a room according to the room number. The status of room will change to ","lastModifiedDate":"2022-03-29"},{"lineNumber":560,"author":{"gitId":"XunyiiZ"},"content":"Occupied","lastModifiedDate":"2022-03-29"},{"lineNumber":561,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":562,"author":{"gitId":"XunyiiZ"},"content":"Format: `check in ROOM_NUMBMR`","lastModifiedDate":"2022-03-29"},{"lineNumber":563,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":564,"author":{"gitId":"XunyiiZ"},"content":"* The `ROOM_NUMBER` must be inside the room list.","lastModifiedDate":"2022-03-29"},{"lineNumber":565,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":566,"author":{"gitId":"XunyiiZ"},"content":"Example of usage:","lastModifiedDate":"2022-03-29"},{"lineNumber":567,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":568,"author":{"gitId":"XunyiiZ"},"content":"`check in 203`","lastModifiedDate":"2022-03-29"},{"lineNumber":569,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":570,"author":{"gitId":"XunyiiZ"},"content":"Expected output:","lastModifiedDate":"2022-03-29"},{"lineNumber":571,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":572,"author":{"gitId":"XunyiiZ"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":573,"author":{"gitId":"XunyiiZ"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":574,"author":{"gitId":"XunyiiZ"},"content":"Type           Room Id        Level          Status         Housekeeper    ","lastModifiedDate":"2022-04-11"},{"lineNumber":575,"author":{"gitId":"XunyiiZ"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":576,"author":{"gitId":"XunyiiZ"},"content":"Triple         203            2              Occupied       NA    ","lastModifiedDate":"2022-03-29"},{"lineNumber":577,"author":{"gitId":"XunyiiZ"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":578,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":579,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":580,"author":{"gitId":"XunyiiZ"},"content":"### Check out a room: `check out`","lastModifiedDate":"2022-03-29"},{"lineNumber":581,"author":{"gitId":"XunyiiZ"},"content":"Checks out a room according to the room number. The status of room will change to","lastModifiedDate":"2022-03-29"},{"lineNumber":582,"author":{"gitId":"XunyiiZ"},"content":"Vaccant","lastModifiedDate":"2022-03-29"},{"lineNumber":583,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":584,"author":{"gitId":"XunyiiZ"},"content":"Format: `check out ROOM_NUMBMR`","lastModifiedDate":"2022-03-29"},{"lineNumber":585,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":586,"author":{"gitId":"XunyiiZ"},"content":"* The `ROOM_NUMBER` must be inside the room list.","lastModifiedDate":"2022-03-29"},{"lineNumber":587,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":588,"author":{"gitId":"XunyiiZ"},"content":"Example of usage:","lastModifiedDate":"2022-03-29"},{"lineNumber":589,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":590,"author":{"gitId":"XunyiiZ"},"content":"`check out 203`","lastModifiedDate":"2022-03-29"},{"lineNumber":591,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":592,"author":{"gitId":"XunyiiZ"},"content":"Expected output:","lastModifiedDate":"2022-03-29"},{"lineNumber":593,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":594,"author":{"gitId":"XunyiiZ"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":595,"author":{"gitId":"XunyiiZ"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":596,"author":{"gitId":"XunyiiZ"},"content":"Type           Room Id        Level          Status         Housekeeper    ","lastModifiedDate":"2022-04-11"},{"lineNumber":597,"author":{"gitId":"XunyiiZ"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":598,"author":{"gitId":"XunyiiZ"},"content":"Triple         203            2              Vacant         NA      ","lastModifiedDate":"2022-04-11"},{"lineNumber":599,"author":{"gitId":"XunyiiZ"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":600,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":601,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":602,"author":{"gitId":"XunyiiZ"},"content":"### Check room information: `check room`","lastModifiedDate":"2022-03-29"},{"lineNumber":603,"author":{"gitId":"XunyiiZ"},"content":"Checks the information of the room","lastModifiedDate":"2022-03-29"},{"lineNumber":604,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":605,"author":{"gitId":"XunyiiZ"},"content":"Format: `check room ROOM_NUMBMR`","lastModifiedDate":"2022-03-29"},{"lineNumber":606,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":607,"author":{"gitId":"XunyiiZ"},"content":"* The `ROOM_NUMBER` must be inside the room list.","lastModifiedDate":"2022-03-29"},{"lineNumber":608,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":609,"author":{"gitId":"XunyiiZ"},"content":"Example of usage:","lastModifiedDate":"2022-03-29"},{"lineNumber":610,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":611,"author":{"gitId":"XunyiiZ"},"content":"`check room 203`","lastModifiedDate":"2022-03-29"},{"lineNumber":612,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":613,"author":{"gitId":"XunyiiZ"},"content":"Expected output:","lastModifiedDate":"2022-03-29"},{"lineNumber":614,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":615,"author":{"gitId":"XunyiiZ"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":616,"author":{"gitId":"XunyiiZ"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":617,"author":{"gitId":"XunyiiZ"},"content":"Type           Room Id        Level          Status         Housekeeper    ","lastModifiedDate":"2022-04-11"},{"lineNumber":618,"author":{"gitId":"XunyiiZ"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":619,"author":{"gitId":"XunyiiZ"},"content":"Triple         203            2              Vacant         NA    ","lastModifiedDate":"2022-04-11"},{"lineNumber":620,"author":{"gitId":"XunyiiZ"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":621,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":622,"author":{"gitId":"XunyiiZ"},"content":"### Check room information by level: `check level`","lastModifiedDate":"2022-03-29"},{"lineNumber":623,"author":{"gitId":"XunyiiZ"},"content":"Checks information of all room at target level (1-4)","lastModifiedDate":"2022-04-02"},{"lineNumber":624,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":625,"author":{"gitId":"XunyiiZ"},"content":"Format: `check level LEVEL_NUMBER`","lastModifiedDate":"2022-03-29"},{"lineNumber":626,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":627,"author":{"gitId":"XunyiiZ"},"content":"* The `LEVEL_NUMBER` must has at least one room.","lastModifiedDate":"2022-03-29"},{"lineNumber":628,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":629,"author":{"gitId":"XunyiiZ"},"content":"Example of usage:","lastModifiedDate":"2022-03-29"},{"lineNumber":630,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":631,"author":{"gitId":"XunyiiZ"},"content":"`check level 2`","lastModifiedDate":"2022-03-29"},{"lineNumber":632,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":633,"author":{"gitId":"XunyiiZ"},"content":"Expected output:","lastModifiedDate":"2022-03-29"},{"lineNumber":634,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":635,"author":{"gitId":"XunyiiZ"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":636,"author":{"gitId":"XunyiiZ"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":637,"author":{"gitId":"XunyiiZ"},"content":"Type           Room Id        Level          Status         Housekeeper    ","lastModifiedDate":"2022-04-11"},{"lineNumber":638,"author":{"gitId":"XunyiiZ"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":639,"author":{"gitId":"XunyiiZ"},"content":"Double         201            2              Vacant         NA                            ","lastModifiedDate":"2022-04-11"},{"lineNumber":640,"author":{"gitId":"XunyiiZ"},"content":"Triple         202            2              Vacant         NA                            ","lastModifiedDate":"2022-04-11"},{"lineNumber":641,"author":{"gitId":"XunyiiZ"},"content":"Triple         203            2              Vacant         NA                            ","lastModifiedDate":"2022-04-11"},{"lineNumber":642,"author":{"gitId":"XunyiiZ"},"content":"Queen          204            2              Vacant         NA   ","lastModifiedDate":"2022-03-29"},{"lineNumber":643,"author":{"gitId":"XunyiiZ"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":644,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":645,"author":{"gitId":"XunyiiZ"},"content":"### Check room information by category: `check category`","lastModifiedDate":"2022-03-29"},{"lineNumber":646,"author":{"gitId":"XunyiiZ"},"content":"Checks information of all room at target category (single, double, triple, queen, king, twin)","lastModifiedDate":"2022-04-02"},{"lineNumber":647,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":648,"author":{"gitId":"XunyiiZ"},"content":"Format: `check category CATEGORY`","lastModifiedDate":"2022-03-29"},{"lineNumber":649,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":650,"author":{"gitId":"XunyiiZ"},"content":"* The `LEVEL_NUMBER` must has at least one room.","lastModifiedDate":"2022-03-29"},{"lineNumber":651,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":652,"author":{"gitId":"XunyiiZ"},"content":"Example of usage:","lastModifiedDate":"2022-03-29"},{"lineNumber":653,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":654,"author":{"gitId":"XunyiiZ"},"content":"`check category Queen`","lastModifiedDate":"2022-03-29"},{"lineNumber":655,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":656,"author":{"gitId":"XunyiiZ"},"content":"Expected output:","lastModifiedDate":"2022-03-29"},{"lineNumber":657,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":658,"author":{"gitId":"XunyiiZ"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":659,"author":{"gitId":"XunyiiZ"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":660,"author":{"gitId":"XunyiiZ"},"content":"Type           Room Id        Level          Status         Housekeeper    ","lastModifiedDate":"2022-04-11"},{"lineNumber":661,"author":{"gitId":"XunyiiZ"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":662,"author":{"gitId":"XunyiiZ"},"content":"Queen          204            2              Vacant         NA                            ","lastModifiedDate":"2022-03-29"},{"lineNumber":663,"author":{"gitId":"XunyiiZ"},"content":"Queen          301            3              Vacant         NA    ","lastModifiedDate":"2022-04-11"},{"lineNumber":664,"author":{"gitId":"XunyiiZ"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":665,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":666,"author":{"gitId":"XunyiiZ"},"content":"### Check all room information: `check all room`","lastModifiedDate":"2022-03-29"},{"lineNumber":667,"author":{"gitId":"XunyiiZ"},"content":"Checks information of all room at target category","lastModifiedDate":"2022-03-29"},{"lineNumber":668,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":669,"author":{"gitId":"XunyiiZ"},"content":"Format: `check all room`","lastModifiedDate":"2022-03-29"},{"lineNumber":670,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":671,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":672,"author":{"gitId":"XunyiiZ"},"content":"Example of usage:","lastModifiedDate":"2022-03-29"},{"lineNumber":673,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":674,"author":{"gitId":"XunyiiZ"},"content":"`check all room`","lastModifiedDate":"2022-03-29"},{"lineNumber":675,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":676,"author":{"gitId":"XunyiiZ"},"content":"Expected output:","lastModifiedDate":"2022-03-29"},{"lineNumber":677,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":678,"author":{"gitId":"XunyiiZ"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":679,"author":{"gitId":"XunyiiZ"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":680,"author":{"gitId":"XunyiiZ"},"content":"Type           Room Id        Level          Status         Housekeeper    ","lastModifiedDate":"2022-04-11"},{"lineNumber":681,"author":{"gitId":"XunyiiZ"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":682,"author":{"gitId":"XunyiiZ"},"content":"Single         101            1              Vacant         NA                            ","lastModifiedDate":"2022-04-11"},{"lineNumber":683,"author":{"gitId":"XunyiiZ"},"content":"Single         102            1              Vacant         NA                            ","lastModifiedDate":"2022-03-29"},{"lineNumber":684,"author":{"gitId":"XunyiiZ"},"content":"Double         103            1              Vacant         NA                            ","lastModifiedDate":"2022-03-29"},{"lineNumber":685,"author":{"gitId":"XunyiiZ"},"content":"Double         201            2              Vacant         NA                            ","lastModifiedDate":"2022-04-11"},{"lineNumber":686,"author":{"gitId":"XunyiiZ"},"content":"Triple         202            2              Vacant         NA                            ","lastModifiedDate":"2022-04-11"},{"lineNumber":687,"author":{"gitId":"XunyiiZ"},"content":"Triple         203            2              Vacant         NA                            ","lastModifiedDate":"2022-04-11"},{"lineNumber":688,"author":{"gitId":"XunyiiZ"},"content":"Queen          204            2              Vacant         NA                            ","lastModifiedDate":"2022-03-29"},{"lineNumber":689,"author":{"gitId":"XunyiiZ"},"content":"Queen          301            3              Vacant         NA                            ","lastModifiedDate":"2022-04-11"},{"lineNumber":690,"author":{"gitId":"XunyiiZ"},"content":"King           302            3              Vacant         NA                            ","lastModifiedDate":"2022-04-11"},{"lineNumber":691,"author":{"gitId":"XunyiiZ"},"content":"King           303            3              Vacant         NA                            ","lastModifiedDate":"2022-03-29"},{"lineNumber":692,"author":{"gitId":"XunyiiZ"},"content":"Twin           401            4              Vacant         NA                            ","lastModifiedDate":"2022-04-11"},{"lineNumber":693,"author":{"gitId":"XunyiiZ"},"content":"Twin           402            4              Vacant         NA                            ","lastModifiedDate":"2022-04-11"},{"lineNumber":694,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":695,"author":{"gitId":"XunyiiZ"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":696,"author":{"gitId":"siewyangzhi"},"content":"## Item Related Commands","lastModifiedDate":"2022-03-30"},{"lineNumber":697,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":698,"author":{"gitId":"siewyangzhi"},"content":"### Add A New Item To The Item List: `add item`","lastModifiedDate":"2022-03-30"},{"lineNumber":699,"author":{"gitId":"siewyangzhi"},"content":"Adds a new item (name of item and its pax) to the item list which represents all the items found within the inventory.","lastModifiedDate":"2022-03-30"},{"lineNumber":700,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":701,"author":{"gitId":"siewyangzhi"},"content":"Format: `add item ITEM NAME / PAX`","lastModifiedDate":"2022-03-30"},{"lineNumber":702,"author":{"gitId":"siewyangzhi"},"content":"* `add item` is not case-sensitive.","lastModifiedDate":"2022-03-30"},{"lineNumber":703,"author":{"gitId":"siewyangzhi"},"content":"* `Item Name` must only contain alphabetical characters, digits, whitespaces or apostrophe  ","lastModifiedDate":"2022-04-04"},{"lineNumber":704,"author":{"gitId":"siewyangzhi"},"content":"* `Item Name` given must not be currently present within the item list.","lastModifiedDate":"2022-03-30"},{"lineNumber":705,"author":{"gitId":"siewyangzhi"},"content":"* `Pax` given must be from 1 to 1000000.","lastModifiedDate":"2022-04-04"},{"lineNumber":706,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":707,"author":{"gitId":"siewyangzhi"},"content":"Example of usage:","lastModifiedDate":"2022-03-30"},{"lineNumber":708,"author":{"gitId":"siewyangzhi"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":709,"author":{"gitId":"siewyangzhi"},"content":"add item Toilet Roll / 15","lastModifiedDate":"2022-03-30"},{"lineNumber":710,"author":{"gitId":"siewyangzhi"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":711,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":712,"author":{"gitId":"siewyangzhi"},"content":"Expected output:","lastModifiedDate":"2022-03-30"},{"lineNumber":713,"author":{"gitId":"siewyangzhi"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":714,"author":{"gitId":"siewyangzhi"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":715,"author":{"gitId":"siewyangzhi"},"content":"The item and its pax has been added to the item list.","lastModifiedDate":"2022-03-30"},{"lineNumber":716,"author":{"gitId":"siewyangzhi"},"content":"There are currently 1 items within the item list.","lastModifiedDate":"2022-03-30"},{"lineNumber":717,"author":{"gitId":"siewyangzhi"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":718,"author":{"gitId":"siewyangzhi"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":719,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":720,"author":{"gitId":"siewyangzhi"},"content":"### Update The Pax Of An Item In The Item List: `update item pax`","lastModifiedDate":"2022-03-30"},{"lineNumber":721,"author":{"gitId":"siewyangzhi"},"content":"Updates the pax of an item that is currently found within the item list to reflect an actual item within the inventory increasing or decreasing.","lastModifiedDate":"2022-03-30"},{"lineNumber":722,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":723,"author":{"gitId":"siewyangzhi"},"content":"Format: `update item pax ITEM NAME / PAX`","lastModifiedDate":"2022-03-30"},{"lineNumber":724,"author":{"gitId":"siewyangzhi"},"content":"* `update item pax` is not case-sensitive.","lastModifiedDate":"2022-03-30"},{"lineNumber":725,"author":{"gitId":"siewyangzhi"},"content":"* `ITEM NAME` given must be found within the item list to be eligible to be updated.","lastModifiedDate":"2022-03-30"},{"lineNumber":726,"author":{"gitId":"siewyangzhi"},"content":"* `ITEM NAME` is not case-sensitive.","lastModifiedDate":"2022-03-30"},{"lineNumber":727,"author":{"gitId":"siewyangzhi"},"content":"* `ITEM NAME` must only contain alphabetical characters, digits, whitespaces or apostrophes.","lastModifiedDate":"2022-04-04"},{"lineNumber":728,"author":{"gitId":"siewyangzhi"},"content":"* `Pax` given must have a range from 0 to 1000000.","lastModifiedDate":"2022-04-04"},{"lineNumber":729,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":730,"author":{"gitId":"siewyangzhi"},"content":"Example of usage:","lastModifiedDate":"2022-03-30"},{"lineNumber":731,"author":{"gitId":"siewyangzhi"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":732,"author":{"gitId":"siewyangzhi"},"content":"update item pax Toilet Roll / 300","lastModifiedDate":"2022-03-30"},{"lineNumber":733,"author":{"gitId":"siewyangzhi"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":734,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":735,"author":{"gitId":"siewyangzhi"},"content":"Expected output:","lastModifiedDate":"2022-03-30"},{"lineNumber":736,"author":{"gitId":"siewyangzhi"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":737,"author":{"gitId":"siewyangzhi"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":738,"author":{"gitId":"siewyangzhi"},"content":"The pax of TOILET ROLL has been updated to 300.","lastModifiedDate":"2022-03-30"},{"lineNumber":739,"author":{"gitId":"siewyangzhi"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":740,"author":{"gitId":"siewyangzhi"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":741,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":742,"author":{"gitId":"siewyangzhi"},"content":"### Update The Name Of An Item In The Item List: `update item name`","lastModifiedDate":"2022-03-30"},{"lineNumber":743,"author":{"gitId":"siewyangzhi"},"content":"Updates the name of an item that is currently found within the item list.","lastModifiedDate":"2022-03-30"},{"lineNumber":744,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":745,"author":{"gitId":"siewyangzhi"},"content":"Format: `update item name OLD ITEM NAME / NEW ITEM NAME`","lastModifiedDate":"2022-03-30"},{"lineNumber":746,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":747,"author":{"gitId":"siewyangzhi"},"content":"* `update item name` is not case-sensitive.","lastModifiedDate":"2022-03-30"},{"lineNumber":748,"author":{"gitId":"siewyangzhi"},"content":"* `OLD ITEM NAME` given must be found within the item list as it is the name of the item currently within the item list which we want to update. ","lastModifiedDate":"2022-03-30"},{"lineNumber":749,"author":{"gitId":"siewyangzhi"},"content":"* `OLD ITEM NAME` cannot be the same as `NEW ITEM NAME`.","lastModifiedDate":"2022-04-04"},{"lineNumber":750,"author":{"gitId":"siewyangzhi"},"content":"* `OLD ITEM NAME` must only contain alphabetical characters, digits, whitespaces or apostrophes.","lastModifiedDate":"2022-04-04"},{"lineNumber":751,"author":{"gitId":"siewyangzhi"},"content":"* `NEW ITEM NAME` is the new name for the updated item.","lastModifiedDate":"2022-03-30"},{"lineNumber":752,"author":{"gitId":"siewyangzhi"},"content":"* `NEW ITEM NAME` is not case-sensitive.","lastModifiedDate":"2022-03-30"},{"lineNumber":753,"author":{"gitId":"siewyangzhi"},"content":"* `NEW ITEM NAME` must only contain alphabetical characters, digits, whitespaces or apostrophes.","lastModifiedDate":"2022-04-04"},{"lineNumber":754,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":755,"author":{"gitId":"siewyangzhi"},"content":"Example of usage:","lastModifiedDate":"2022-03-30"},{"lineNumber":756,"author":{"gitId":"siewyangzhi"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":757,"author":{"gitId":"siewyangzhi"},"content":"update item name Toilet Roll / Premium Toilet Roll","lastModifiedDate":"2022-03-30"},{"lineNumber":758,"author":{"gitId":"siewyangzhi"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":759,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":760,"author":{"gitId":"siewyangzhi"},"content":"Expected output:","lastModifiedDate":"2022-03-30"},{"lineNumber":761,"author":{"gitId":"siewyangzhi"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":762,"author":{"gitId":"siewyangzhi"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":763,"author":{"gitId":"siewyangzhi"},"content":"The name of TOILET ROLL has been updated to PREMIUM TOILET ROLL.","lastModifiedDate":"2022-03-30"},{"lineNumber":764,"author":{"gitId":"siewyangzhi"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":765,"author":{"gitId":"siewyangzhi"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":766,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":767,"author":{"gitId":"siewyangzhi"},"content":"### Delete An Item In The Item List: `delete item`","lastModifiedDate":"2022-03-30"},{"lineNumber":768,"author":{"gitId":"siewyangzhi"},"content":"Removes an item that is currently found within the item list to reflect that we are no longer storing that product within the inventory.","lastModifiedDate":"2022-03-30"},{"lineNumber":769,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":770,"author":{"gitId":"siewyangzhi"},"content":"Format: `delete item NAME`","lastModifiedDate":"2022-03-30"},{"lineNumber":771,"author":{"gitId":"siewyangzhi"},"content":"* `delete item` is not case-sensitive.","lastModifiedDate":"2022-03-30"},{"lineNumber":772,"author":{"gitId":"siewyangzhi"},"content":"* `NAME` given must be found within the item list to be eligible to be deleted.","lastModifiedDate":"2022-03-30"},{"lineNumber":773,"author":{"gitId":"siewyangzhi"},"content":"* `NAME` is not case-sensitive.","lastModifiedDate":"2022-03-30"},{"lineNumber":774,"author":{"gitId":"siewyangzhi"},"content":"* `NAME` must only contain alphabetical characters, digits, whitespaces or apostrophes.","lastModifiedDate":"2022-04-04"},{"lineNumber":775,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":776,"author":{"gitId":"siewyangzhi"},"content":"Example of usage:","lastModifiedDate":"2022-03-30"},{"lineNumber":777,"author":{"gitId":"siewyangzhi"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":778,"author":{"gitId":"siewyangzhi"},"content":"delete item Premium Toilet Roll","lastModifiedDate":"2022-03-30"},{"lineNumber":779,"author":{"gitId":"siewyangzhi"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":780,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":781,"author":{"gitId":"siewyangzhi"},"content":"Expected output:","lastModifiedDate":"2022-03-30"},{"lineNumber":782,"author":{"gitId":"siewyangzhi"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":783,"author":{"gitId":"siewyangzhi"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":784,"author":{"gitId":"siewyangzhi"},"content":"PREMIUM TOILET ROLL has been removed from the Item List.","lastModifiedDate":"2022-03-30"},{"lineNumber":785,"author":{"gitId":"siewyangzhi"},"content":"There are currently 0 items within the Item List.","lastModifiedDate":"2022-03-30"},{"lineNumber":786,"author":{"gitId":"siewyangzhi"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":787,"author":{"gitId":"siewyangzhi"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":788,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":789,"author":{"gitId":"siewyangzhi"},"content":"### View All Items: `view all items`","lastModifiedDate":"2022-03-30"},{"lineNumber":790,"author":{"gitId":"siewyangzhi"},"content":"Lists out all the items along with their respective pax within the list in a user-readable format.","lastModifiedDate":"2022-03-30"},{"lineNumber":791,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":792,"author":{"gitId":"siewyangzhi"},"content":"Format: `view all items`","lastModifiedDate":"2022-03-30"},{"lineNumber":793,"author":{"gitId":"siewyangzhi"},"content":"* `view all items` is not case-sensitive.","lastModifiedDate":"2022-03-30"},{"lineNumber":794,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":795,"author":{"gitId":"siewyangzhi"},"content":"Example of usage:","lastModifiedDate":"2022-03-30"},{"lineNumber":796,"author":{"gitId":"siewyangzhi"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":797,"author":{"gitId":"siewyangzhi"},"content":"add item Toilet Roll / 15","lastModifiedDate":"2022-03-30"},{"lineNumber":798,"author":{"gitId":"siewyangzhi"},"content":"add item Tissue Paper / 20","lastModifiedDate":"2022-03-30"},{"lineNumber":799,"author":{"gitId":"siewyangzhi"},"content":"add item Tables / 30","lastModifiedDate":"2022-03-30"},{"lineNumber":800,"author":{"gitId":"siewyangzhi"},"content":"view all items","lastModifiedDate":"2022-03-30"},{"lineNumber":801,"author":{"gitId":"siewyangzhi"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":802,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":803,"author":{"gitId":"siewyangzhi"},"content":"Expected output:","lastModifiedDate":"2022-03-30"},{"lineNumber":804,"author":{"gitId":"siewyangzhi"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":805,"author":{"gitId":"siewyangzhi"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":806,"author":{"gitId":"siewyangzhi"},"content":"The item and its pax has been added to the item list.","lastModifiedDate":"2022-03-30"},{"lineNumber":807,"author":{"gitId":"siewyangzhi"},"content":"There are currently 1 items within the item list.","lastModifiedDate":"2022-03-30"},{"lineNumber":808,"author":{"gitId":"siewyangzhi"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":809,"author":{"gitId":"siewyangzhi"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":810,"author":{"gitId":"siewyangzhi"},"content":"The item and its pax has been added to the item list.","lastModifiedDate":"2022-03-30"},{"lineNumber":811,"author":{"gitId":"siewyangzhi"},"content":"There are currently 2 items within the item list.","lastModifiedDate":"2022-03-30"},{"lineNumber":812,"author":{"gitId":"siewyangzhi"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":813,"author":{"gitId":"siewyangzhi"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":814,"author":{"gitId":"siewyangzhi"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Item List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":815,"author":{"gitId":"siewyangzhi"},"content":"The item and its pax has been added to the item list.","lastModifiedDate":"2022-03-30"},{"lineNumber":816,"author":{"gitId":"siewyangzhi"},"content":"There are currently 3 items within the item list.","lastModifiedDate":"2022-03-30"},{"lineNumber":817,"author":{"gitId":"siewyangzhi"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":818,"author":{"gitId":"siewyangzhi"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Item List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":819,"author":{"gitId":"siewyangzhi"},"content":"1. Item Name: TOILET ROLL Item Pax: 15","lastModifiedDate":"2022-03-30"},{"lineNumber":820,"author":{"gitId":"siewyangzhi"},"content":"2. Item Name: TISSUE PAPER Item Pax: 20","lastModifiedDate":"2022-03-30"},{"lineNumber":821,"author":{"gitId":"siewyangzhi"},"content":"3. Item Name: TABLES Item Pax: 30","lastModifiedDate":"2022-03-30"},{"lineNumber":822,"author":{"gitId":"siewyangzhi"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":823,"author":{"gitId":"siewyangzhi"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":824,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":825,"author":{"gitId":"siewyangzhi"},"content":"### View All Items Within The Item List With A Pax Of Zero: `view items with zero pax`","lastModifiedDate":"2022-03-30"},{"lineNumber":826,"author":{"gitId":"siewyangzhi"},"content":"Lists out all the items which has a pax of zero within the item list in a user-readable format.This allows the user to easily know which items have run out in the inventory and need to be replenished.","lastModifiedDate":"2022-03-30"},{"lineNumber":827,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":828,"author":{"gitId":"siewyangzhi"},"content":"Format: `view items with zero pax`","lastModifiedDate":"2022-03-30"},{"lineNumber":829,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":830,"author":{"gitId":"siewyangzhi"},"content":"* `view items with zero pax` is not case-sensitive.","lastModifiedDate":"2022-03-30"},{"lineNumber":831,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":832,"author":{"gitId":"siewyangzhi"},"content":"Example of usage:","lastModifiedDate":"2022-03-30"},{"lineNumber":833,"author":{"gitId":"siewyangzhi"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":834,"author":{"gitId":"siewyangzhi"},"content":"update item pax Toilet Roll / 0","lastModifiedDate":"2022-03-30"},{"lineNumber":835,"author":{"gitId":"siewyangzhi"},"content":"update item pax Tissue Paper / 0","lastModifiedDate":"2022-03-30"},{"lineNumber":836,"author":{"gitId":"siewyangzhi"},"content":"view items with zero pax","lastModifiedDate":"2022-03-30"},{"lineNumber":837,"author":{"gitId":"siewyangzhi"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":838,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":839,"author":{"gitId":"siewyangzhi"},"content":"Expected output:","lastModifiedDate":"2022-03-30"},{"lineNumber":840,"author":{"gitId":"siewyangzhi"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":841,"author":{"gitId":"siewyangzhi"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":842,"author":{"gitId":"siewyangzhi"},"content":"The pax of TOILET ROLL has been updated to 0.","lastModifiedDate":"2022-03-30"},{"lineNumber":843,"author":{"gitId":"siewyangzhi"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":844,"author":{"gitId":"siewyangzhi"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":845,"author":{"gitId":"siewyangzhi"},"content":"The pax of TISSUE PAPER has been updated to 0.","lastModifiedDate":"2022-03-30"},{"lineNumber":846,"author":{"gitId":"siewyangzhi"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":847,"author":{"gitId":"siewyangzhi"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Item List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":848,"author":{"gitId":"siewyangzhi"},"content":"1. Item Name: TOILET ROLL Item Pax: 0","lastModifiedDate":"2022-03-30"},{"lineNumber":849,"author":{"gitId":"siewyangzhi"},"content":"2. Item Name: TISSUE PAPER Item Pax: 0","lastModifiedDate":"2022-03-30"},{"lineNumber":850,"author":{"gitId":"siewyangzhi"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":851,"author":{"gitId":"siewyangzhi"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":852,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":853,"author":{"gitId":"siewyangzhi"},"content":"### Search For Items Within The Item List: `search item`","lastModifiedDate":"2022-03-30"},{"lineNumber":854,"author":{"gitId":"siewyangzhi"},"content":"Displays all items (item name and pax) within the item list that matches the input keyword.","lastModifiedDate":"2022-03-30"},{"lineNumber":855,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":856,"author":{"gitId":"siewyangzhi"},"content":"Format: `search item KEYWORD`","lastModifiedDate":"2022-03-30"},{"lineNumber":857,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":858,"author":{"gitId":"siewyangzhi"},"content":"Example of usage:","lastModifiedDate":"2022-03-30"},{"lineNumber":859,"author":{"gitId":"siewyangzhi"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":860,"author":{"gitId":"siewyangzhi"},"content":"search item Toilet","lastModifiedDate":"2022-03-30"},{"lineNumber":861,"author":{"gitId":"siewyangzhi"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":862,"author":{"gitId":"siewyangzhi"},"content":"* `search item` is not case-sensitive.","lastModifiedDate":"2022-03-30"},{"lineNumber":863,"author":{"gitId":"siewyangzhi"},"content":"* `KEYWORD` is not case-sensitive.","lastModifiedDate":"2022-03-30"},{"lineNumber":864,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":865,"author":{"gitId":"siewyangzhi"},"content":"Expected output:","lastModifiedDate":"2022-03-30"},{"lineNumber":866,"author":{"gitId":"siewyangzhi"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":867,"author":{"gitId":"siewyangzhi"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Item List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":868,"author":{"gitId":"siewyangzhi"},"content":"1. Item Name: TOILET ROLL Item Pax: 0","lastModifiedDate":"2022-03-30"},{"lineNumber":869,"author":{"gitId":"siewyangzhi"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":870,"author":{"gitId":"siewyangzhi"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":871,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":872,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":873,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":874,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":875,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":876,"author":{"gitId":"-"},"content":"**A**: {your answer here}","lastModifiedDate":"2020-05-24"},{"lineNumber":877,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":878,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2022-03-30"},{"lineNumber":879,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":880,"author":{"gitId":"FaliciaOng"},"content":"| General Command | Format, Example |","lastModifiedDate":"2022-03-30"},{"lineNumber":881,"author":{"gitId":"FaliciaOng"},"content":"| --- | --- |","lastModifiedDate":"2022-03-30"},{"lineNumber":882,"author":{"gitId":"FaliciaOng"},"content":"| bye | ```bye``` |","lastModifiedDate":"2022-03-30"},{"lineNumber":883,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":884,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":885,"author":{"gitId":"zhenster"},"content":"| Satisfaction Command      | Format, Example                                                                                   |","lastModifiedDate":"2022-04-09"},{"lineNumber":886,"author":{"gitId":"zhenster"},"content":"|---------------------------|---------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-09"},{"lineNumber":887,"author":{"gitId":"zhenster"},"content":"| add satisfaction          | ```add satisfaction CUSTOMER_NAME / SATISFACTION_RATING```\u003cbr/\u003eeg. ```add satisfaction bob / 5``` |","lastModifiedDate":"2022-04-09"},{"lineNumber":888,"author":{"gitId":"zhenster"},"content":"| view satisfactions        | ```view satisfactions```                                                                          |","lastModifiedDate":"2022-04-09"},{"lineNumber":889,"author":{"gitId":"zhenster"},"content":"| view average satisfaction | ```view average satisfaction```                                                                   |","lastModifiedDate":"2022-04-09"},{"lineNumber":890,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":891,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":892,"author":{"gitId":"FaliciaOng"},"content":"| Housekeeper Command | Format, Example                                                                                     |","lastModifiedDate":"2022-03-30"},{"lineNumber":893,"author":{"gitId":"zhenster"},"content":"| --- |-----------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-09"},{"lineNumber":894,"author":{"gitId":"FaliciaOng"},"content":"| add housekeeper | ```add housekeeper NAME / AGE```\u003cbr/\u003eeg. ```add housekeeper susan / 46```                           |","lastModifiedDate":"2022-03-30"},{"lineNumber":895,"author":{"gitId":"FaliciaOng"},"content":"| availability | ```availability NAME / DAY(S)```\u003cbr/\u003eeg.```availability jane / 1,3,5,7```                           |","lastModifiedDate":"2022-03-30"},{"lineNumber":896,"author":{"gitId":"FaliciaOng"},"content":"| view recorded housekeepers | ```view recorded housekeepers```                                                                    |","lastModifiedDate":"2022-04-06"},{"lineNumber":897,"author":{"gitId":"FaliciaOng"},"content":"| delete | ```delete housekeeper NAME``` \u003cbr/\u003eeg. ```delete housekeeper sally```                               |","lastModifiedDate":"2022-03-30"},{"lineNumber":898,"author":{"gitId":"FaliciaOng"},"content":"| get available on | ```get available on DAY ```\u003cbr/\u003eeg.```get available on 1```                                         |","lastModifiedDate":"2022-03-30"},{"lineNumber":899,"author":{"gitId":"FaliciaOng"},"content":"| is a new week | ```is a new week ```                                                                                |","lastModifiedDate":"2022-03-30"},{"lineNumber":900,"author":{"gitId":"FaliciaOng"},"content":"| is a new year | ```is a new year ```                                                                                |","lastModifiedDate":"2022-03-30"},{"lineNumber":901,"author":{"gitId":"aiman-imtiaz"},"content":"| assign housekeeper | ```assign NAME / ROOM_NUMBER```\u003cbr/\u003eeg.```assign susan / 301```                                     |","lastModifiedDate":"2022-03-30"},{"lineNumber":902,"author":{"gitId":"zhenster"},"content":"| add housekeeper performance | ``` add performance HOUSEKEEPER_NAME / PERFORMANCE_RATING``` \u003cbr/\u003eeg. ```add performance bob / 5``` |","lastModifiedDate":"2022-04-09"},{"lineNumber":903,"author":{"gitId":"zhenster"},"content":"| view all housekeeper performances | ``` view performances```                                                                            |","lastModifiedDate":"2022-04-09"},{"lineNumber":904,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":905,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":906,"author":{"gitId":"XunyiiZ"},"content":"| Room Command | Format, Example |","lastModifiedDate":"2022-03-30"},{"lineNumber":907,"author":{"gitId":"XunyiiZ"},"content":"| --- | --- |","lastModifiedDate":"2022-03-30"},{"lineNumber":908,"author":{"gitId":"XunyiiZ"},"content":"| check in a room | ```check in ROOM_NUMBER```\u003cbr/\u003eeg. ```check in 301```|","lastModifiedDate":"2022-03-30"},{"lineNumber":909,"author":{"gitId":"XunyiiZ"},"content":"| check out a room | ```check out ROOM_NUMBER```\u003cbr/\u003eeg. ```check out 301```|","lastModifiedDate":"2022-03-30"},{"lineNumber":910,"author":{"gitId":"XunyiiZ"},"content":"| check room information | ```check room ROOM_NUMBER```\u003cbr/\u003eeg. ```check room 301```|","lastModifiedDate":"2022-03-30"},{"lineNumber":911,"author":{"gitId":"XunyiiZ"},"content":"| check all room information | ```check all room``` \u003cbr/\u003eeg. ```check all room```|","lastModifiedDate":"2022-03-30"},{"lineNumber":912,"author":{"gitId":"XunyiiZ"},"content":"| check room information by level | ```check level LEVEL_NUMBER ```\u003cbr/\u003eeg.```check level 4``` |","lastModifiedDate":"2022-03-30"},{"lineNumber":913,"author":{"gitId":"XunyiiZ"},"content":"| check room information by category | ```check category CATEGORY ```\u003cbr/\u003eeg.```check category single``` |","lastModifiedDate":"2022-03-30"},{"lineNumber":914,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":915,"author":{"gitId":"siewyangzhi"},"content":"| Item Command                       | Format, Example |","lastModifiedDate":"2022-03-30"},{"lineNumber":916,"author":{"gitId":"siewyangzhi"},"content":"|------------------------------------| --- |","lastModifiedDate":"2022-03-30"},{"lineNumber":917,"author":{"gitId":"siewyangzhi"},"content":"| add Item                           | ```add item ITEM NAME / PAX```\u003cbr/\u003eeg. ```add item Toilet Roll / 15```|","lastModifiedDate":"2022-03-30"},{"lineNumber":918,"author":{"gitId":"siewyangzhi"},"content":"| update item pax                   | ```update item pax ITEM NAME / PAX```\u003cbr/\u003eeg. ```update item pax Toilet Roll / 300```|","lastModifiedDate":"2022-03-30"},{"lineNumber":919,"author":{"gitId":"siewyangzhi"},"content":"| update item name             | ```update item name OLD ITEM NAME / NEW ITEM NAME```\u003cbr/\u003eeg. ```update item name Toilet Roll / Premium Toilet Roll```|","lastModifiedDate":"2022-03-30"},{"lineNumber":920,"author":{"gitId":"siewyangzhi"},"content":"| delete item         | ```delete item NAME``` \u003cbr/\u003eeg. ```delete item Premium Toilet Roll```|","lastModifiedDate":"2022-03-30"},{"lineNumber":921,"author":{"gitId":"siewyangzhi"},"content":"| view all items    | ```view all items ``` |","lastModifiedDate":"2022-03-30"},{"lineNumber":922,"author":{"gitId":"siewyangzhi"},"content":"| view items with zero pax | ```view items with zero pax ```|","lastModifiedDate":"2022-03-30"},{"lineNumber":923,"author":{"gitId":"siewyangzhi"},"content":"| search item | ```search item KEYWORD ```\u003cbr/\u003eeg.```search item Toilet``` |","lastModifiedDate":"2022-03-30"},{"lineNumber":924,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":925,"author":{"gitId":"aiman-imtiaz"},"content":"| Event Command | Format, Example |","lastModifiedDate":"2022-03-30"},{"lineNumber":926,"author":{"gitId":"aiman-imtiaz"},"content":"| --- | --- |","lastModifiedDate":"2022-03-30"},{"lineNumber":927,"author":{"gitId":"aiman-imtiaz"},"content":"| add an event | ```add event DESCRIPTION / DATE```\u003cbr/\u003eeg. ```add event Submit TP / 2022-04-11```|","lastModifiedDate":"2022-04-05"},{"lineNumber":928,"author":{"gitId":"aiman-imtiaz"},"content":"| delete an event | ```delete event INDEX```\u003cbr/\u003eeg. ```delete event 1```|","lastModifiedDate":"2022-04-05"},{"lineNumber":929,"author":{"gitId":"aiman-imtiaz"},"content":"| view all events | ```view events```|","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"aiman-imtiaz":97,"zhenster":174,"FaliciaOng":280,"XunyiiZ":161,"siewyangzhi":188,"-":29}},{"path":"docs/team/aiman-imtiaz.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"# Aiman Imtiaz - Project Portfolio Page","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"## Overview","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"I am one of the developers of Hotel Lite, a CLI application designed for hotel owners to keep track of multiple management tasks.","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"This application offers functionalities for keeping track of hotel inventory,","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"managing housekeeper staff records, recording customer satisfaction ratings,","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"assigning housekeepers to rooms,","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"adding, deleting, viewing events happening in the hotel,","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"and maintaining the state of checked-in/checked-out rooms.","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"aiman-imtiaz"},"content":"### Summary of Contributions","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"aiman-imtiaz"},"content":"My code contributions to the project can be viewed using the link below.","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"aiman-imtiaz"},"content":"[Aiman Imtiaz - Reposense](https://nus-cs2113-ay2122s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003daiman-imtiaz\u0026tabRepo\u003dAY2122S2-CS2113-T11-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"aiman-imtiaz"},"content":"#### Event-related functionalities","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":"I added a suite of event-related commands in the application, allowing the user to add, delete and view events happening on the hotel premises. Events can be added using `add event DESCRIPTION / DATE` command where the `DATE` has to be in the `yyyy-mm-dd` format. I used the package `LocalDate` to accommodate the date format.","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"Using `LocalDate` presented a challenge while implementing the `FileManager` for `EventList`, as the our string conversion command converted a date to `mmm d yyyy` format, however while parsing lines from the file, we needed it in the `yyyy-mm-dd` format again for to be added to `EventList`. Some conversions here and there were required to work around this issue.","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"Another challenge while using `LocalDate` was adding a check to see whether the user used the correct format for date. I created an exception which gave out the message that the date needed to be in a certain format. In order to \"catch\" when I can throw this exception, I used the `try.. catch` around `LocalDate.parse()`. This way if parse did not succeed, I would be able to \"catch\" the case and throw an internal `HotelLiteManagerException`.","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"aiman-imtiaz"},"content":"This suite allows the user to do the following:","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"aiman-imtiaz"},"content":"* Create a new event happening in the hotel using `add event  DESCRIPTION / DATE` format. ","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"aiman-imtiaz"},"content":"* Delete an event using `delete event INDEX`","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"aiman-imtiaz"},"content":"* View all added events using `list events`.","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"aiman-imtiaz"},"content":"#### Link between room-related functionalities and housekeeper-related functionalities","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"aiman-imtiaz"},"content":"I added a command which links the functionalities added by my teammates __Xunyi__ and __Falicia__. The command I added to assign a houskeeper to a room is in the formal `assign NAME / ROOMID`. This required quite an interplay between my teammates code and mine. Some of the examples of this interplay are provided below:","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"aiman-imtiaz"},"content":"* Every time the `assign` command is called, the housekeeper list maintained by __Falicia__ is referred to see whether a housekeeper by the given name even exists.","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"aiman-imtiaz"},"content":"* The `RoomList` provided by __Xunyi__ is checked to see whether the room exists at all.","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"aiman-imtiaz"},"content":"* After these checks pass, the information is stored in `AssignmentMap` which contains a `HashMap` to store which room (key) is attached to which housekeeper (value). The `AssignmentMap` class also has contributions from __Xunyi__.","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"aiman-imtiaz"},"content":"* Once __Falicia__\u0027s `delete housekeeper` command is called, I also use `AssignmentMap` to make sure that the given assignment entry is deleted from the program as well.","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"aiman-imtiaz"},"content":"* The `FileManager` for `AssignmentMap` saves both the `ROOMID` and the `NAME` to ensure that correct information is restored from the files once the program is reloaded.","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"aiman-imtiaz"},"content":"### General outlook","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"aiman-imtiaz"},"content":"I made the greeting for our application that uses a function to print a pattern of `*`s. The size of the pattern was set at `5` rows and can be increased in the `Ui` class.","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"aiman-imtiaz"},"content":"```","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"aiman-imtiaz"},"content":"    *","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"aiman-imtiaz"},"content":"   ***","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"aiman-imtiaz"},"content":"  *****","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"aiman-imtiaz"},"content":" *******","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"aiman-imtiaz"},"content":"*********","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"aiman-imtiaz"},"content":" *******","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"aiman-imtiaz"},"content":"  *****","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"aiman-imtiaz"},"content":"   ***","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"aiman-imtiaz"},"content":"    *","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"aiman-imtiaz"},"content":"Hi, I am Hotel Lite, and I will do the managing for you.","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"aiman-imtiaz"},"content":"What shall we start with today?","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"aiman-imtiaz"},"content":"(You may type \u0027help\u0027 to get a full list of commands.)","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"aiman-imtiaz"},"content":"```","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"aiman-imtiaz"},"content":"Incidentally, I implemented a generalised command to help the user. I collated all commands written by my teammates and me to be printed when user types `help`. It allowed me to thoroughly go through the User Guide and even test out the commands written by everyone. The `help` command returns the following message:","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"aiman-imtiaz"},"content":"```","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"aiman-imtiaz"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"aiman-imtiaz"},"content":"I am here to help! ","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"aiman-imtiaz"},"content":"Given below are the formats commands related to customer satisfaction: ","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"aiman-imtiaz"},"content":"\t 1. add satisfaction CUSTOMER_NAME / SATISFACTION_RATING ","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"aiman-imtiaz"},"content":"\t 2. view satisfactions ","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"aiman-imtiaz"},"content":"\t 3. view average satisfaction ","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"aiman-imtiaz"},"content":"------------------------------------------","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"aiman-imtiaz"},"content":"For commands related with housekeepers, use following formats: ","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"aiman-imtiaz"},"content":"\t 1. add housekeeper NAME / AGE ","lastModifiedDate":"2022-04-11"},{"lineNumber":72,"author":{"gitId":"aiman-imtiaz"},"content":"\t 2. availability NAME / DAY(S) ","lastModifiedDate":"2022-04-11"},{"lineNumber":73,"author":{"gitId":"aiman-imtiaz"},"content":"\t 3. view recorded housekeepers ","lastModifiedDate":"2022-04-11"},{"lineNumber":74,"author":{"gitId":"aiman-imtiaz"},"content":"\t 4. delete housekeeper NAME ","lastModifiedDate":"2022-04-11"},{"lineNumber":75,"author":{"gitId":"aiman-imtiaz"},"content":"\t 5. get available on DAY ","lastModifiedDate":"2022-04-11"},{"lineNumber":76,"author":{"gitId":"aiman-imtiaz"},"content":"\t 6. is a new week ","lastModifiedDate":"2022-04-11"},{"lineNumber":77,"author":{"gitId":"aiman-imtiaz"},"content":"\t 7. is a new year ","lastModifiedDate":"2022-04-11"},{"lineNumber":78,"author":{"gitId":"aiman-imtiaz"},"content":"\t 8. assign NAME / ROOM_NUMBER ","lastModifiedDate":"2022-04-11"},{"lineNumber":79,"author":{"gitId":"aiman-imtiaz"},"content":"\t 9. add performance HOUSEKEEPER_NAME / PERFORMANCE_RATING ","lastModifiedDate":"2022-04-11"},{"lineNumber":80,"author":{"gitId":"aiman-imtiaz"},"content":"\t 10. view performances ","lastModifiedDate":"2022-04-11"},{"lineNumber":81,"author":{"gitId":"aiman-imtiaz"},"content":"------------------------------------------","lastModifiedDate":"2022-04-11"},{"lineNumber":82,"author":{"gitId":"aiman-imtiaz"},"content":"For commands related with rooms, use following formats: ","lastModifiedDate":"2022-04-11"},{"lineNumber":83,"author":{"gitId":"aiman-imtiaz"},"content":"\t 1. check in ROOM_NUMBER ","lastModifiedDate":"2022-04-11"},{"lineNumber":84,"author":{"gitId":"aiman-imtiaz"},"content":"\t 2. check out ROOM_NUMBER ","lastModifiedDate":"2022-04-11"},{"lineNumber":85,"author":{"gitId":"aiman-imtiaz"},"content":"\t 3. check room ROOM_NUMBER ","lastModifiedDate":"2022-04-11"},{"lineNumber":86,"author":{"gitId":"aiman-imtiaz"},"content":"\t 4. check all room ","lastModifiedDate":"2022-04-11"},{"lineNumber":87,"author":{"gitId":"aiman-imtiaz"},"content":"\t 5. check level LEVEL_NUMBER ","lastModifiedDate":"2022-04-11"},{"lineNumber":88,"author":{"gitId":"aiman-imtiaz"},"content":"\t 6. check category CATEGORY ","lastModifiedDate":"2022-04-11"},{"lineNumber":89,"author":{"gitId":"aiman-imtiaz"},"content":"------------------------------------------","lastModifiedDate":"2022-04-11"},{"lineNumber":90,"author":{"gitId":"aiman-imtiaz"},"content":"For commands related with inventory, use following formats:  ","lastModifiedDate":"2022-04-11"},{"lineNumber":91,"author":{"gitId":"aiman-imtiaz"},"content":"\t 1. add item ITEM NAME / PAX ","lastModifiedDate":"2022-04-11"},{"lineNumber":92,"author":{"gitId":"aiman-imtiaz"},"content":"\t 2. update item pax ITEM NAME / PAX ","lastModifiedDate":"2022-04-11"},{"lineNumber":93,"author":{"gitId":"aiman-imtiaz"},"content":"\t 3. update item name OLD ITEM NAME / NEW ITEM NAME ","lastModifiedDate":"2022-04-11"},{"lineNumber":94,"author":{"gitId":"aiman-imtiaz"},"content":"\t 4. delete item NAME ","lastModifiedDate":"2022-04-11"},{"lineNumber":95,"author":{"gitId":"aiman-imtiaz"},"content":"\t 5. view all items ","lastModifiedDate":"2022-04-11"},{"lineNumber":96,"author":{"gitId":"aiman-imtiaz"},"content":"\t 6. view items with zero pax ","lastModifiedDate":"2022-04-11"},{"lineNumber":97,"author":{"gitId":"aiman-imtiaz"},"content":"\t 7. search item KEYWORD ","lastModifiedDate":"2022-04-11"},{"lineNumber":98,"author":{"gitId":"aiman-imtiaz"},"content":"------------------------------------------","lastModifiedDate":"2022-04-11"},{"lineNumber":99,"author":{"gitId":"aiman-imtiaz"},"content":"```","lastModifiedDate":"2022-04-11"},{"lineNumber":100,"author":{"gitId":"aiman-imtiaz"},"content":"### Review Contributions","lastModifiedDate":"2022-04-07"},{"lineNumber":101,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":102,"author":{"gitId":"aiman-imtiaz"},"content":"I reviewed my teammates PRs on many occasions. Some of them are linked below:","lastModifiedDate":"2022-04-07"},{"lineNumber":103,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":104,"author":{"gitId":"aiman-imtiaz"},"content":"1. [https://github.com/AY2122S2-CS2113-T11-1/tp/pull/341](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/341)","lastModifiedDate":"2022-04-07"},{"lineNumber":105,"author":{"gitId":"aiman-imtiaz"},"content":"2. [https://github.com/AY2122S2-CS2113-T11-1/tp/pull/337](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/337)","lastModifiedDate":"2022-04-07"},{"lineNumber":106,"author":{"gitId":"aiman-imtiaz"},"content":"3. [https://github.com/AY2122S2-CS2113-T11-1/tp/pull/268](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/268)","lastModifiedDate":"2022-04-07"},{"lineNumber":107,"author":{"gitId":"aiman-imtiaz"},"content":"4. [https://github.com/AY2122S2-CS2113-T11-1/tp/pull/265](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/265)","lastModifiedDate":"2022-04-07"},{"lineNumber":108,"author":{"gitId":"aiman-imtiaz"},"content":"5. [https://github.com/AY2122S2-CS2113-T11-1/tp/pull/262](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/262)","lastModifiedDate":"2022-04-07"},{"lineNumber":109,"author":{"gitId":"aiman-imtiaz"},"content":"6. [https://github.com/AY2122S2-CS2113-T11-1/tp/pull/254](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/254)","lastModifiedDate":"2022-04-07"},{"lineNumber":110,"author":{"gitId":"aiman-imtiaz"},"content":"7. [https://github.com/AY2122S2-CS2113-T11-1/tp/pull/200](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/200)","lastModifiedDate":"2022-04-07"},{"lineNumber":111,"author":{"gitId":"aiman-imtiaz"},"content":"8. [https://github.com/AY2122S2-CS2113-T11-1/tp/pull/199](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/199)","lastModifiedDate":"2022-04-07"},{"lineNumber":112,"author":{"gitId":"aiman-imtiaz"},"content":"9. [https://github.com/AY2122S2-CS2113-T11-1/tp/pull/198](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/198)","lastModifiedDate":"2022-04-07"},{"lineNumber":113,"author":{"gitId":"aiman-imtiaz"},"content":"10. [https://github.com/AY2122S2-CS2113-T11-1/tp/pull/195](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/195)","lastModifiedDate":"2022-04-07"},{"lineNumber":114,"author":{"gitId":"aiman-imtiaz"},"content":"11. [https://github.com/AY2122S2-CS2113-T11-1/tp/pull/156](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/156)","lastModifiedDate":"2022-04-07"},{"lineNumber":115,"author":{"gitId":"aiman-imtiaz"},"content":"12. [https://github.com/AY2122S2-CS2113-T11-1/tp/pull/140](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/140)","lastModifiedDate":"2022-04-07"},{"lineNumber":116,"author":{"gitId":"aiman-imtiaz"},"content":"13. [https://github.com/AY2122S2-CS2113-T11-1/tp/pull/103](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/103)","lastModifiedDate":"2022-04-07"},{"lineNumber":117,"author":{"gitId":"aiman-imtiaz"},"content":"14. [https://github.com/AY2122S2-CS2113-T11-1/tp/pull/98](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/98)","lastModifiedDate":"2022-04-07"},{"lineNumber":118,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":119,"author":{"gitId":"aiman-imtiaz"},"content":"I made sure that all PRs by my teammates were added to the correct milestone and assigned to the correct person, such that their work would be detected and recognised.","lastModifiedDate":"2022-04-07"},{"lineNumber":120,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":121,"author":{"gitId":"aiman-imtiaz"},"content":"### Contributions to the Developer Guide (Extracts)","lastModifiedDate":"2022-04-07"},{"lineNumber":122,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":123,"author":{"gitId":"aiman-imtiaz"},"content":"#### Assign a housekeeper to a room","lastModifiedDate":"2022-04-07"},{"lineNumber":124,"author":{"gitId":"aiman-imtiaz"},"content":"The assignment of housekeeper to a room is facilitated by `AssignHousekeeperCommand`. This command objects uses `AssignmentMap`, which keeps a `HashMap`, to help us map a `Room` object to a `Housekeeper` object.","lastModifiedDate":"2022-04-07"},{"lineNumber":125,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":126,"author":{"gitId":"aiman-imtiaz"},"content":"``","lastModifiedDate":"2022-04-07"},{"lineNumber":127,"author":{"gitId":"aiman-imtiaz"},"content":"Map\u003cRoom, Housekeeper\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-04-07"},{"lineNumber":128,"author":{"gitId":"aiman-imtiaz"},"content":"``","lastModifiedDate":"2022-04-07"},{"lineNumber":129,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":130,"author":{"gitId":"aiman-imtiaz"},"content":"The following steps exhibit how `AssignHousekeeperCommand`","lastModifiedDate":"2022-04-07"},{"lineNumber":131,"author":{"gitId":"aiman-imtiaz"},"content":"and `AssignmentMap` fit together in the structure and how the mechanism for adding an assignment behaves at each step.","lastModifiedDate":"2022-04-11"},{"lineNumber":132,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":133,"author":{"gitId":"aiman-imtiaz"},"content":"__Step 1.__ The user launches the application. In the `Duke` class, an empty instance of the `AssignmentMap` class,","lastModifiedDate":"2022-04-07"},{"lineNumber":134,"author":{"gitId":"aiman-imtiaz"},"content":"called `assignmentMap`, is created.","lastModifiedDate":"2022-04-07"},{"lineNumber":135,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":136,"author":{"gitId":"aiman-imtiaz"},"content":"![Step 1](aiman_assignment/step1.png)","lastModifiedDate":"2022-04-07"},{"lineNumber":137,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":138,"author":{"gitId":"aiman-imtiaz"},"content":"__Step 2.__ The user types the command `assign susan / 301`. In the `Duke` class, a `Command` object","lastModifiedDate":"2022-04-11"},{"lineNumber":139,"author":{"gitId":"aiman-imtiaz"},"content":"is created by invoking the `CommandParser` class\u0027s constructor on the user input. The details of this","lastModifiedDate":"2022-04-07"},{"lineNumber":140,"author":{"gitId":"aiman-imtiaz"},"content":"step are further described below.","lastModifiedDate":"2022-04-07"},{"lineNumber":141,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":142,"author":{"gitId":"aiman-imtiaz"},"content":"![Step 2](aiman_assignment/step2.png)","lastModifiedDate":"2022-04-07"},{"lineNumber":143,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":144,"author":{"gitId":"aiman-imtiaz"},"content":"__Step 3.__ The `CommandParser` class replaces the `assign susan / 301` in the user input with an empty string,","lastModifiedDate":"2022-04-11"},{"lineNumber":145,"author":{"gitId":"aiman-imtiaz"},"content":"leaving just `susan / 301`. Then, an instance of `AssignHousekeeperCommand` is created which extends the class `Command`.","lastModifiedDate":"2022-04-11"},{"lineNumber":146,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":147,"author":{"gitId":"aiman-imtiaz"},"content":"![Step 3](aiman_assignment/step3.png)","lastModifiedDate":"2022-04-07"},{"lineNumber":148,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":149,"author":{"gitId":"aiman-imtiaz"},"content":"__Step 4.__ The `assignHousekeeperCommand` object parses the name of the housekeeper and the ID of the room and send both to the the `assignmentMap`.","lastModifiedDate":"2022-04-07"},{"lineNumber":150,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":151,"author":{"gitId":"aiman-imtiaz"},"content":"![Step 4](aiman_assignment/step4.png)","lastModifiedDate":"2022-04-07"},{"lineNumber":152,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":153,"author":{"gitId":"aiman-imtiaz"},"content":"__Step 5.__ The `assignmentMap` looks for the appropriate `Room` object for `301` in the `RoomList` and then looks for the appropriate `Housekeeper` object for `Susan`. It then adds both to the hashmap contained inside itself.","lastModifiedDate":"2022-04-07"},{"lineNumber":154,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":155,"author":{"gitId":"aiman-imtiaz"},"content":"![Step 5](aiman_assignment/step5.png)","lastModifiedDate":"2022-04-07"},{"lineNumber":156,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":157,"author":{"gitId":"aiman-imtiaz"},"content":"__Interaction__ To understand the interaction between objects of these classes in order to actually add an entry into the hash map inside an `AssignmentMap`, refer to the sequence diagram below.","lastModifiedDate":"2022-04-07"},{"lineNumber":158,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":159,"author":{"gitId":"aiman-imtiaz"},"content":"![Step Sequence Diagram](aiman_assignment/sequence.png)","lastModifiedDate":"2022-04-07"},{"lineNumber":160,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":161,"author":{"gitId":"aiman-imtiaz"},"content":"The command object passes on the ID of the room and the name of the housekeeper to the `AssignmentMap` object after parsing the input appropriately. The `addAssignment` function first locates the appropriate `Room` object from `RoomList`, and then looks for the `Housekeeper` object in the `HousekeeperList` and finally adds the mapping to the hash map.","lastModifiedDate":"2022-04-07"},{"lineNumber":162,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":163,"author":{"gitId":"aiman-imtiaz"},"content":"## Manual Testing","lastModifiedDate":"2022-04-11"},{"lineNumber":164,"author":{"gitId":"aiman-imtiaz"},"content":"#### Assign Housekeeper","lastModifiedDate":"2022-04-11"},{"lineNumber":165,"author":{"gitId":"aiman-imtiaz"},"content":"* The format of the command is `assign NAME / ROOMID`.","lastModifiedDate":"2022-04-11"},{"lineNumber":166,"author":{"gitId":"aiman-imtiaz"},"content":"* Prerequisites:","lastModifiedDate":"2022-04-11"},{"lineNumber":167,"author":{"gitId":"aiman-imtiaz"},"content":"    - the housekeeper with this `NAME` should already exist in the system.","lastModifiedDate":"2022-04-11"},{"lineNumber":168,"author":{"gitId":"aiman-imtiaz"},"content":"    - the room with this `ROOMID` should already exist in the system.","lastModifiedDate":"2022-04-11"},{"lineNumber":169,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":170,"author":{"gitId":"aiman-imtiaz"},"content":"| **Test Case** | **Command** | **Expected Result** |","lastModifiedDate":"2022-04-11"},{"lineNumber":171,"author":{"gitId":"aiman-imtiaz"},"content":"|:-------------:|:-------------|:-------------------|","lastModifiedDate":"2022-04-11"},{"lineNumber":172,"author":{"gitId":"aiman-imtiaz"},"content":"| Assign `Susan` to room `301` |`assign susan / 301`  | Registers the assignment|","lastModifiedDate":"2022-04-11"},{"lineNumber":173,"author":{"gitId":"aiman-imtiaz"},"content":"| Assign housekeeper that does not exist |`assign james / 301`  | Error message to the user|","lastModifiedDate":"2022-04-11"},{"lineNumber":174,"author":{"gitId":"aiman-imtiaz"},"content":"| Add `susan` to invalid room  | `assign susan / 90` | Error message to the user|","lastModifiedDate":"2022-04-11"},{"lineNumber":175,"author":{"gitId":"aiman-imtiaz"},"content":"| Add `susan` to non-integer room id | `assign susan / ioduf`  | Error message to the user|","lastModifiedDate":"2022-04-11"},{"lineNumber":176,"author":{"gitId":"aiman-imtiaz"},"content":"| Fail to separate fields | `assign susan 301`  | Error message to the user|","lastModifiedDate":"2022-04-11"},{"lineNumber":177,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":178,"author":{"gitId":"aiman-imtiaz"},"content":"### Event Related Functions","lastModifiedDate":"2022-04-11"},{"lineNumber":179,"author":{"gitId":"aiman-imtiaz"},"content":"#### Add Event","lastModifiedDate":"2022-04-11"},{"lineNumber":180,"author":{"gitId":"aiman-imtiaz"},"content":"* The format of the command is `add event DESCRIPTION / DATE`.","lastModifiedDate":"2022-04-11"},{"lineNumber":181,"author":{"gitId":"aiman-imtiaz"},"content":"* Prerequisites:","lastModifiedDate":"2022-04-11"},{"lineNumber":182,"author":{"gitId":"aiman-imtiaz"},"content":"    - date should be in `yyyy-mm-dd` format.","lastModifiedDate":"2022-04-11"},{"lineNumber":183,"author":{"gitId":"aiman-imtiaz"},"content":"    - the description should only contain alphanumeric characters.","lastModifiedDate":"2022-04-11"},{"lineNumber":184,"author":{"gitId":"aiman-imtiaz"},"content":"    - the event should not already exist in the system.","lastModifiedDate":"2022-04-11"},{"lineNumber":185,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":186,"author":{"gitId":"aiman-imtiaz"},"content":"| **Test Case** | **Command** | **Expected Result** |","lastModifiedDate":"2022-04-11"},{"lineNumber":187,"author":{"gitId":"aiman-imtiaz"},"content":"|:-------------:|:-------------|:-------------------|","lastModifiedDate":"2022-04-11"},{"lineNumber":188,"author":{"gitId":"aiman-imtiaz"},"content":"| Add event `study` on 19 Nov 2022 |`add event study / 2022-11-19`  | Adds the event|","lastModifiedDate":"2022-04-11"},{"lineNumber":189,"author":{"gitId":"aiman-imtiaz"},"content":"| Add event `study` with no date |`add event study`  | Error message to the user|","lastModifiedDate":"2022-04-11"},{"lineNumber":190,"author":{"gitId":"aiman-imtiaz"},"content":"| Add event `st*\u0026udy` |`add event st*\u0026udy / 2022-11-21`  | Error message to the user|","lastModifiedDate":"2022-04-11"},{"lineNumber":191,"author":{"gitId":"aiman-imtiaz"},"content":"| Add duplicate event | `add event study / 2022-11-19`  | Error message to the user|","lastModifiedDate":"2022-04-11"},{"lineNumber":192,"author":{"gitId":"aiman-imtiaz"},"content":"| Add extra fields to the command | `add event submit TP / 2022-04-11 / blah`  | Error message to the user|","lastModifiedDate":"2022-04-11"},{"lineNumber":193,"author":{"gitId":"aiman-imtiaz"},"content":"| Fail to separate fields | `add event submit TP 2022-04-11`  | Error message to the user|","lastModifiedDate":"2022-04-11"},{"lineNumber":194,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":195,"author":{"gitId":"aiman-imtiaz"},"content":"#### Delete Event","lastModifiedDate":"2022-04-11"},{"lineNumber":196,"author":{"gitId":"aiman-imtiaz"},"content":"* The format of the command is `delete event INDEX`.","lastModifiedDate":"2022-04-11"},{"lineNumber":197,"author":{"gitId":"aiman-imtiaz"},"content":"* Prerequisites:","lastModifiedDate":"2022-04-11"},{"lineNumber":198,"author":{"gitId":"aiman-imtiaz"},"content":"    - index should be an integer.","lastModifiedDate":"2022-04-11"},{"lineNumber":199,"author":{"gitId":"aiman-imtiaz"},"content":"    - the event should exist in the system.","lastModifiedDate":"2022-04-11"},{"lineNumber":200,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":201,"author":{"gitId":"aiman-imtiaz"},"content":"| **Test Case** | **Command** | **Expected Result** |","lastModifiedDate":"2022-04-11"},{"lineNumber":202,"author":{"gitId":"aiman-imtiaz"},"content":"|:-------------:|:-------------|:-------------------|","lastModifiedDate":"2022-04-11"},{"lineNumber":203,"author":{"gitId":"aiman-imtiaz"},"content":"| Delete event `study` from the list |`delete event 1`  | Deletes the event|","lastModifiedDate":"2022-04-11"},{"lineNumber":204,"author":{"gitId":"aiman-imtiaz"},"content":"| Delete event with index out of bounds |`delete event 6`  | Error message to the user|","lastModifiedDate":"2022-04-11"},{"lineNumber":205,"author":{"gitId":"aiman-imtiaz"},"content":"| Delete event with non-integer index |`delete event sf`  | Error message to the user|","lastModifiedDate":"2022-04-11"},{"lineNumber":206,"author":{"gitId":"aiman-imtiaz"},"content":"| Delete event with no index |`delete event`  | Error message to the user|","lastModifiedDate":"2022-04-11"},{"lineNumber":207,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":208,"author":{"gitId":"aiman-imtiaz"},"content":"## Product scope","lastModifiedDate":"2022-04-11"},{"lineNumber":209,"author":{"gitId":"aiman-imtiaz"},"content":"### Target user profile","lastModifiedDate":"2022-04-11"},{"lineNumber":210,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":211,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":212,"author":{"gitId":"aiman-imtiaz"},"content":"This application is designed for __hotel managers__ who:","lastModifiedDate":"2022-04-11"},{"lineNumber":213,"author":{"gitId":"aiman-imtiaz"},"content":"* have a need to manage inventory of items in the hotel","lastModifiedDate":"2022-04-11"},{"lineNumber":214,"author":{"gitId":"aiman-imtiaz"},"content":"* have a need to store and view the events happening in the hotel","lastModifiedDate":"2022-04-11"},{"lineNumber":215,"author":{"gitId":"aiman-imtiaz"},"content":"* have a need to view and record the status of rooms (whether they\u0027ve been checked into or checked out of)","lastModifiedDate":"2022-04-11"},{"lineNumber":216,"author":{"gitId":"aiman-imtiaz"},"content":"* need to keep track of the information related to their housekeeping staff, including their available hours","lastModifiedDate":"2022-04-11"},{"lineNumber":217,"author":{"gitId":"aiman-imtiaz"},"content":"  and performance ratings","lastModifiedDate":"2022-04-11"},{"lineNumber":218,"author":{"gitId":"aiman-imtiaz"},"content":"* like to keep track of customer ratings","lastModifiedDate":"2022-04-11"},{"lineNumber":219,"author":{"gitId":"aiman-imtiaz"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2022-04-11"},{"lineNumber":220,"author":{"gitId":"aiman-imtiaz"},"content":"* can type fast","lastModifiedDate":"2022-04-11"},{"lineNumber":221,"author":{"gitId":"aiman-imtiaz"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2022-04-11"},{"lineNumber":222,"author":{"gitId":"aiman-imtiaz"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2022-04-11"},{"lineNumber":223,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"aiman-imtiaz":223}},{"path":"docs/team/alinazheng_addsatisfactioncommand_uml/AddSatisfactionCommandObjectDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"object Duke","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"object ListContainer","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"ListContainer : name \u003d \"listContainer\"","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"Duke ..\u003e ListContainer","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"object CommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"CommandParser : name \u003d \"commandParser\"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"Duke ..\u003e CommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"object Command","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"Command : name \u003d \"command\"","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"Duke ..\u003e Command","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"object AddSatisfactionCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"AddSatisfactionCommand : name \u003d \"userCommand\"","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"AddSatisfactionCommand --|\u003e Command","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"CommandParser ..\u003e AddSatisfactionCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"object Satisfaction","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"Satisfaction : name \u003d \"satisfaction\"","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"AddSatisfactionCommand --\u003e Satisfaction","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"object SatisfactionList","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"SatisfactionList : name \u003d \"satisfactionList\"","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"ListContainer --\u003e SatisfactionList","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"SatisfactionList ..\u003e Satisfaction","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"@enduml","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"zhenster":33}},{"path":"docs/team/alinazheng_addsatisfactioncommand_uml/AddSatisfactionCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"\u0027autonumber","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"\u0027","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"\u0027Alice -\u003e Bob: Authentication Request","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"\u0027Bob --\u003e Alice: Authentication Response","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"\u0027","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"\u0027Alice -\u003e Bob: Another authentication Request","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"\u0027Alice \u003c-- Bob: another authentication Response","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"Duke --\u003e\u003e SatisfactionList ** : SatisfactionList()","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"User -\u003e Duke ++: run()","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"Duke --\u003e\u003e CommandParser ** : CommandParser()","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"User -\u003e Duke ++ : add satisfaction Bob 5","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"Duke -\u003e CommandParser ++ : parse(add satisfaction Bob 5)","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"CommandParser -\u003e\u003e AddSatisfactionCommand ** : AddSatisfactionCommand()","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"AddSatisfactionCommand -\u003e AddSatisfactionCommand ++ : extractCustomerName()","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"AddSatisfactionCommand -\u003e AddSatisfactionCommand ++ : extractSatisfactionValue()","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"AddSatisfactionCommand --\u003e\u003e Satisfaction ** : Satisfaction(Bob, 5)","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"Duke -\u003e AddSatisfactionCommand ++ : execute(SatisfactionList)","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"AddSatisfactionCommand -\u003e SatisfactionList ++: addSatisfaction(Satisfaction)","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"zhenster":22}},{"path":"docs/team/faliciaong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"# Falicia Ong \u0027s Project Portfolio Page","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"## Project: Hotel Lite ","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"Hotel Lite - A convenient tool for hotel owners to manage their businesses.","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"The user interacts with it using a CLI. It is written in Java and has about 7kLoC.","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"Given below are my contribution to the projects:","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"* __New Feature__: Implement the ability to add housekeeper into list.","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    * What it does: Allows user to add newly join housekeeper into the list.","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"    * Justification: User should be able to add housekeeper into the list to store information.","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"    * Highlights: ","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"      * Information given by the user through add housekeeper command will be used for collating","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"    all housekeeper\u0027s availability based on day in the week and making sure housekeeper is within the age limit.","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"      * The name given would be used in the assignment of housekeeper to their respective rooms needed to be cleaned. ","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"      * The name given would also be used to record their performance.","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"* __New Feature__: Implement the ability to add/update availability of housekeeper.","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"    * What it does: Allow user to add/update availability of housekeeper.","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"    * Justification: This feature will allow user to update the available days of housekeeper, which would be useful","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"      to keep track of how many housekeepers is available any day in the week.","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"    * Highlights: ","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"      * User is able to easily and efficiently type out the available days in the week of the housekeeper by","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"    indicating the days in number instead of typing out the name of day.","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"      * User can enter many availabilities in one command just by differentiating the different days using commas.","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"      * User can afford to enter duplicated days as Hotel Lite would be able to detect the duplication of days and","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"        regard it as one.","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"      ","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"* __New Feature__: Implement the ability to view list of housekeeper.","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"    * What it does: Shows the full list of housekeeper currently working in the hotel. Information includes their name,","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"      age and availabilities.","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"    * Justification: This provides the user with a comprehensive list of all available housekeepers.","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"* __New Feature__: Implement the ability to get available housekeeper any day from Monday to Sunday.","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"    * What it does: Shows user the housekeeper available on a day in the week.","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"    * Justification: If a user needs to know if there will be enough housekeeping on a given day, he or she may simply","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"      utilize this function to get the names of the available housekeepers. This would assist the user in determining ","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"      whether extra housekeepers are required to complete the day\u0027s tasks efficiently.","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"    * Highlights: Able to quickly type out the command by indicate the day in the week with integers instead of typing","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"      out the name of the day","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"FaliciaOng"},"content":"* __New Feature__: Implement the ability to Reset Housekeeper availability when a new week begins.","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"FaliciaOng"},"content":"    * What it does: When a new week begins, user can reset every housekeeper availability using this feature","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"FaliciaOng"},"content":"    * Justification: This is such that user will not have to re-update every housekeeper availability.","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"FaliciaOng"},"content":"* __New Feature__: Implement the ability to Increment every housekeeper age when a new year begins.","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"FaliciaOng"},"content":"    * What it does: Increment every housekeeper\u0027s age in the list by one when a new year begins.","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"FaliciaOng"},"content":"    * Justification: When a new year begins, everyone ages would be updated by increasing by one. User","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"FaliciaOng"},"content":"      do not have to go through each housekeeper to update their age.","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"    * Highlights: It will automatically remove and inform the user that the housekeeper has exceeded the age limit.","lastModifiedDate":"2022-04-06"},{"lineNumber":58,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":60,"author":{"gitId":"FaliciaOng"},"content":"* __New Feature__: Implement the ability to Delete housekeeper from records.","lastModifiedDate":"2022-04-06"},{"lineNumber":61,"author":{"gitId":"FaliciaOng"},"content":"    * What it does: Delete records of the housekeeper from the list.","lastModifiedDate":"2022-04-06"},{"lineNumber":62,"author":{"gitId":"FaliciaOng"},"content":"    * Justification: This is needed when the housekeeper resigns.","lastModifiedDate":"2022-04-06"},{"lineNumber":63,"author":{"gitId":"FaliciaOng"},"content":"    * Highlights: Gives total pax of housekeeper left after removal to alert the user such that","lastModifiedDate":"2022-04-06"},{"lineNumber":64,"author":{"gitId":"FaliciaOng"},"content":"      the hotel will not be lack of manpower. ","lastModifiedDate":"2022-04-06"},{"lineNumber":65,"author":{"gitId":"FaliciaOng"},"content":"    ","lastModifiedDate":"2022-04-06"},{"lineNumber":66,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":67,"author":{"gitId":"FaliciaOng"},"content":"* __Code Contribution__: Link to code [here](https://nus-cs2113-ay2122s2.github.io/tp-dashboard/?search\u003dfaliciaong\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-04-06"},{"lineNumber":68,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":69,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":70,"author":{"gitId":"FaliciaOng"},"content":"* __Contribution to UG__:","lastModifiedDate":"2022-04-06"},{"lineNumber":71,"author":{"gitId":"FaliciaOng"},"content":"    * Suggested the use of Links/Content Page.","lastModifiedDate":"2022-04-06"},{"lineNumber":72,"author":{"gitId":"FaliciaOng"},"content":"    * Write-up for","lastModifiedDate":"2022-04-06"},{"lineNumber":73,"author":{"gitId":"FaliciaOng"},"content":"        * add housekeeper,","lastModifiedDate":"2022-04-06"},{"lineNumber":74,"author":{"gitId":"FaliciaOng"},"content":"        * add/update availability of housekeeper,","lastModifiedDate":"2022-04-06"},{"lineNumber":75,"author":{"gitId":"FaliciaOng"},"content":"        * view recorded housekeeper,","lastModifiedDate":"2022-04-06"},{"lineNumber":76,"author":{"gitId":"FaliciaOng"},"content":"        * get available housekeeper any day from Monday to Sunday,","lastModifiedDate":"2022-04-06"},{"lineNumber":77,"author":{"gitId":"FaliciaOng"},"content":"        * Reset Housekeeper availability when a new week begins,","lastModifiedDate":"2022-04-06"},{"lineNumber":78,"author":{"gitId":"FaliciaOng"},"content":"        * Increment every housekeeper age when a new year begins,","lastModifiedDate":"2022-04-06"},{"lineNumber":79,"author":{"gitId":"FaliciaOng"},"content":"        * Delete housekeeper from records.","lastModifiedDate":"2022-04-06"},{"lineNumber":80,"author":{"gitId":"FaliciaOng"},"content":"    * Command Summary Table to summary seven commands.","lastModifiedDate":"2022-04-06"},{"lineNumber":81,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":82,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":83,"author":{"gitId":"FaliciaOng"},"content":"* __Contribution to DG__:","lastModifiedDate":"2022-04-06"},{"lineNumber":84,"author":{"gitId":"FaliciaOng"},"content":"    * Consolidate all user stories into DG.","lastModifiedDate":"2022-04-11"},{"lineNumber":85,"author":{"gitId":"FaliciaOng"},"content":"    * Created content page in DG.","lastModifiedDate":"2022-04-11"},{"lineNumber":86,"author":{"gitId":"FaliciaOng"},"content":"    * Formatting for manual testing and housekeeper related testing.","lastModifiedDate":"2022-04-11"},{"lineNumber":87,"author":{"gitId":"FaliciaOng"},"content":"    * Stating some Non-Functional requirements.","lastModifiedDate":"2022-04-11"},{"lineNumber":88,"author":{"gitId":"FaliciaOng"},"content":"    * Create a Sequence Diagram and Class Diagram for","lastModifiedDate":"2022-04-11"},{"lineNumber":89,"author":{"gitId":"FaliciaOng"},"content":"        * Add housekeeper command","lastModifiedDate":"2022-04-06"},{"lineNumber":90,"author":{"gitId":"FaliciaOng"},"content":"        * Delete housekeeper command","lastModifiedDate":"2022-04-06"},{"lineNumber":91,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":92,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":93,"author":{"gitId":"FaliciaOng"},"content":"* __Contribution to team-based tasks__:","lastModifiedDate":"2022-04-06"},{"lineNumber":94,"author":{"gitId":"FaliciaOng"},"content":"    * Created Command Parser,","lastModifiedDate":"2022-04-06"},{"lineNumber":95,"author":{"gitId":"FaliciaOng"},"content":"    * Did up and compiled User Stories for version 1,","lastModifiedDate":"2022-04-06"},{"lineNumber":96,"author":{"gitId":"FaliciaOng"},"content":"    * Added links into README.md,","lastModifiedDate":"2022-04-06"},{"lineNumber":97,"author":{"gitId":"FaliciaOng"},"content":"    * Update Description of Hotel Lite Manager in README.md","lastModifiedDate":"2022-04-06"},{"lineNumber":98,"author":{"gitId":"FaliciaOng"},"content":"    * Disable logging","lastModifiedDate":"2022-04-06"},{"lineNumber":99,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":100,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":101,"author":{"gitId":"FaliciaOng"},"content":"* __Enhancements to existing features__:","lastModifiedDate":"2022-04-06"},{"lineNumber":102,"author":{"gitId":"FaliciaOng"},"content":"    * Added logging into the code such that I am able to record the events that has occurred","lastModifiedDate":"2022-04-06"},{"lineNumber":103,"author":{"gitId":"FaliciaOng"},"content":"    * Implemented assertion in code to test assumptions on program such as testing the age and day range","lastModifiedDate":"2022-04-06"},{"lineNumber":104,"author":{"gitId":"FaliciaOng"},"content":"    * Implement Regular Expression (REGEX) to ensure naming of the housekeeper does not accept symbols and number","lastModifiedDate":"2022-04-06"},{"lineNumber":105,"author":{"gitId":"FaliciaOng"},"content":"    * Implement commands to be case-insensitive","lastModifiedDate":"2022-04-06"},{"lineNumber":106,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":107,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":108,"author":{"gitId":"FaliciaOng"},"content":"* __Community__:","lastModifiedDate":"2022-04-06"},{"lineNumber":109,"author":{"gitId":"FaliciaOng"},"content":"    * Reported bugs and suggestions for other teams in the class ","lastModifiedDate":"2022-04-06"},{"lineNumber":110,"author":{"gitId":"FaliciaOng"},"content":"    * Suggested and review other team\u0027s DG","lastModifiedDate":"2022-04-06"},{"lineNumber":111,"author":{"gitId":"FaliciaOng"},"content":"         * [Reviewed Group T09-3](https://github.com/nus-cs2113-AY2122S2/tp/pull/3/files#diff-1a95edf069a4136e9cb71bee758b0dc86996f6051f0d438ec2c424557de7160b)","lastModifiedDate":"2022-04-06"},{"lineNumber":112,"author":{"gitId":"FaliciaOng"},"content":"         * [Reviewed Group F12-2](https://github.com/nus-cs2113-AY2122S2/tp/pull/21/files#diff-1a95edf069a4136e9cb71bee758b0dc86996f6051f0d438ec2c424557de7160b)","lastModifiedDate":"2022-04-06"},{"lineNumber":113,"author":{"gitId":"FaliciaOng"},"content":"    * Reviewed IP project PRs","lastModifiedDate":"2022-04-11"},{"lineNumber":114,"author":{"gitId":"FaliciaOng"},"content":"         * [ChengXu PR](https://github.com/nus-cs2113-AY2122S2/ip/pull/39)","lastModifiedDate":"2022-04-11"},{"lineNumber":115,"author":{"gitId":"FaliciaOng"},"content":"         * [Mu Changrui PR](https://github.com/nus-cs2113-AY2122S2/ip/pull/4)","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"FaliciaOng":115}},{"path":"docs/team/siewyangzhi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"# Siew Yang Zhi - Project Portfolio Page","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"##Project: Hotel Lite","lastModifiedDate":"2022-04-06"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"Hotel Lite - A convenient tool for hotel owners to manage their businesses.","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"The user interacts with it using a CLI. It is written in Java and has about 7kLoC.","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"* **New Feature**: Added the add items command to the item list.","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"  * What it does: allows the user to add a new item and its pax to the item list.","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"  * Justification: This feature allows the user to add an item and its pax into the item list when a new item has been added to the ","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"  hotel inventory hence ensuring that the item list accurately reflects the hotel\u0027s inventory.","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"* **New Feature**: Updating of the item pax in the item list.","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"  * What it does: allows the user to update the pax of the item to reflect the new pax of that item in the inventory ","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"  whenever an existing item is added to the inventory or when one pax of an existing item is taken out.","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"    * Eg, currently there are 15 dove shampoos within the inventory, when 1 is taken out of the inventory to replenish a","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"    room, the user can use the update item pax command to reduce the pax of dove shampoos from 15 to 14 in the item list.","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"  * Justification: This feature  allows the user to update the pax of items that have been added / remove from the ","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"  inventory ensuring that the item list accurately reflects the inventory.","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"* **New Feature**: Updating of the item name in the item list.","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"  * What it does: allows the user to update the name of the item to reflect the new name of that item in the inventory","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"    whenever the name of an existing item is changed in the inventory.","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"    * Eg, the product was originally called dove shampoo but now the company has changed the shampoo name to be ","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"    dove coconut and hydration shampoo. Hence, the user can change the item name within the item list from dove ","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"    shampoo to dove coconut and hydration shampoo.","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"  * Justification: This feature  allows the user to update the name of items in the item list ensuring that the item ","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"  list accurately reflects the inventory.","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"* **New Feature**: Viewing all items in the item list.","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"  * What it does: allows the users to view all the items within the item list.","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"  * Justification: This feature allows the user to quickly and easily see what are the items currently within the ","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"  inventory as well as its pax.","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"* **New Feature**: View all the items in the item list that has a pax of zero.","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"  * What it does: allows the user to view all the items within the item list that has a pax of zero with a single command.","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"  * Justification: This feature allows the user to quickly and easily see what are the items within the inventory that has run out","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"siewyangzhi"},"content":"  so that the user can replenish them inorder to ensure that the inventory is well stocked up.","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"  * Highlight: Able to quickly identify all the items with a pax of zero instead of having to scroll through all the items within the item list.","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"siewyangzhi"},"content":"* **New Feature**: Search item within the item list.","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"  * What it does: allows the user to search for an item within the item list using a keyword.","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"  * Justification: This feature allows the user to quickly check the inventory to see if it stores a particular item.","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"  * Highlight: Able to search for an item quickly by entering an item name partially as the keyword instead entering the full item name.","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"siewyangzhi"},"content":"* **New Feature**: Delete item within the item list.","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"siewyangzhi"},"content":"  * What it does: allows the user to delete an item within the item list.","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"siewyangzhi"},"content":"  * Justification: This feature allows the user to easily delete a particular item from the item list whenever ","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"siewyangzhi"},"content":"  the hotel no longer stocks up that item. This allows the item list to accurate reflect the contents of the inventory.","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"siewyangzhi"},"content":"  ","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"siewyangzhi"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2113-ay2122s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dsiewyangzhi\u0026tabRepo\u003dAY2122S2-CS2113-T11-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-04-06"},{"lineNumber":58,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":60,"author":{"gitId":"siewyangzhi"},"content":"* **Project management**: ","lastModifiedDate":"2022-04-06"},{"lineNumber":61,"author":{"gitId":"siewyangzhi"},"content":"  * Managed releases v1.0 - v2.0 (2 releases) on GitHub ","lastModifiedDate":"2022-04-06"},{"lineNumber":62,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":63,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":64,"author":{"gitId":"siewyangzhi"},"content":"* **Documentation**:","lastModifiedDate":"2022-04-06"},{"lineNumber":65,"author":{"gitId":"siewyangzhi"},"content":"  * User Guide:","lastModifiedDate":"2022-04-06"},{"lineNumber":66,"author":{"gitId":"siewyangzhi"},"content":"    * Added documentation for the item related features `add item` , `update item pax`, `update item name`, `delete item`, `view all items`, `view items with zero pax`, `search item KEYWORD`","lastModifiedDate":"2022-04-06"},{"lineNumber":67,"author":{"gitId":"siewyangzhi"},"content":"    * Added these item related features into the content page as well as the command summary page.","lastModifiedDate":"2022-04-06"},{"lineNumber":68,"author":{"gitId":"siewyangzhi"},"content":"  * Developer Guide:","lastModifiedDate":"2022-04-06"},{"lineNumber":69,"author":{"gitId":"siewyangzhi"},"content":"    * Added the Item Related Commands section within the Implementation section of the developer guide.","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"siewyangzhi"},"content":"    * Added the Instructions for manual testing for item related commands.","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"siewyangzhi"},"content":"    * Added the explanations of each component for the architecture diagram.","lastModifiedDate":"2022-04-11"},{"lineNumber":72,"author":{"gitId":"siewyangzhi"},"content":"    ","lastModifiedDate":"2022-04-06"},{"lineNumber":73,"author":{"gitId":"siewyangzhi"},"content":"* **Community**:","lastModifiedDate":"2022-04-06"},{"lineNumber":74,"author":{"gitId":"siewyangzhi"},"content":"  * Reported bugs and suggestions for other teams in the class: [#132](https://github.com/AY2122S2-CS2113T-T10-4/tp/issues/132),","lastModifiedDate":"2022-04-06"},{"lineNumber":75,"author":{"gitId":"siewyangzhi"},"content":"[#130](https://github.com/AY2122S2-CS2113T-T10-4/tp/issues/130),  [#127](https://github.com/AY2122S2-CS2113T-T10-4/tp/issues/127),","lastModifiedDate":"2022-04-06"},{"lineNumber":76,"author":{"gitId":"siewyangzhi"},"content":"[#124](https://github.com/AY2122S2-CS2113T-T10-4/tp/issues/124), [#123](https://github.com/AY2122S2-CS2113T-T10-4/tp/issues/123),","lastModifiedDate":"2022-04-06"},{"lineNumber":77,"author":{"gitId":"siewyangzhi"},"content":"[#121](https://github.com/AY2122S2-CS2113T-T10-4/tp/issues/121), [#119](https://github.com/AY2122S2-CS2113T-T10-4/tp/issues/119),","lastModifiedDate":"2022-04-06"},{"lineNumber":78,"author":{"gitId":"siewyangzhi"},"content":"[#115](https://github.com/AY2122S2-CS2113T-T10-4/tp/issues/115), [#111](https://github.com/AY2122S2-CS2113T-T10-4/tp/issues/111),","lastModifiedDate":"2022-04-06"},{"lineNumber":79,"author":{"gitId":"siewyangzhi"},"content":"[#107](https://github.com/AY2122S2-CS2113T-T10-4/tp/issues/107), [#103](https://github.com/AY2122S2-CS2113T-T10-4/tp/issues/103),","lastModifiedDate":"2022-04-06"},{"lineNumber":80,"author":{"gitId":"siewyangzhi"},"content":"[#17](https://github.com/nus-cs2113-AY2122S2/ip/pull/17), [#54](https://github.com/nus-cs2113-AY2122S2/ip/pull/54)","lastModifiedDate":"2022-04-06"},{"lineNumber":81,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"siewyangzhi":81}},{"path":"docs/team/xunyi_checkroombylevelcommand_uml/XunyiZeng_checkRoomByLevel_Sequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"@startuml","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"title check room information by level","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"hide footbox","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"commandParser -\u003e CheckRoomByLevelCommand: new CheckRoomByLevelCommand(2)","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"activate CheckRoomByLevelCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"commandParser -\u003e CheckRoomByLevelCommand: execute()","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"CheckRoomByLevelCommand -\u003e ListContainer: getRoomList()","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"activate ListContainer","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"ListContainer --\u003e CheckRoomByLevelCommand: roomList","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"CheckRoomByLevelCommand -\u003e ListContainer: getAssignmentMap()","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"ListContainer --\u003e CheckRoomByLevelCommand: assignmentMap","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"loop all room in roomList","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"    CheckRoomByLevelCommand -\u003e Room: getLevel()","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"    activate Room","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"    Room --\u003e CheckRoomByLevelCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"    opt room level is (2)","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"    CheckRoomByLevelCommand -\u003e AssignmentMap: getHouseKeeperNameByRoom(roomId)","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"    activate AssignmentMap","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"    AssignmentMap --\u003e CheckRoomByLevelCommand: name","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"    end","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"end","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"@enduml","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"XunyiiZ":23}},{"path":"docs/team/xunyiiz.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"# Xunyi Zeng - Project Portfolio Page","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"## Overview","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"I was one of the developers of Hotel Lite, an application to help hotel managers easily ","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"manage their businesses. This application offers functionalities for keeping track of hotel inventory,","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"managing housekeeper records, recording customer satisfaction ratings,","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"assigning housekeepers to rooms, adding, deleting, viewing events happening in the hotel,","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"and maintaining the taste of check-in/ check-out rooms.","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"### Summary of Contributions","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"#### Code contributed","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"[Xunyi_Zeng: tp code dashboard](https://nus-cs2113-ay2122s2.github.io/tp-dashboard/?search\u003dxunyiiz\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"I was responsible for implementing the functionality to update and view room status","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"and implement file storage.","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"The updating and viewing of room required the implementation of the following classes: a `Room` class","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"representing a single room, and a `RoomList` which stored the list of Rooms. ","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"Updating the room status requires following `CheckInCommand` and `CheckOutCommand`.","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"The `CheckInCommand` class parses the user\u0027s input when they invoke \"check in\" command, changes a room status from vacant to occupied. ","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"The `CheckOutCommand` class parses the user\u0027s output when they invoke \"check out\" command, changes a room status from occupied to vacant.","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"When parsing user input, I consider the following edge cases/possible user errors.","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"* User inputs empty room id.","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"* User inputs invalid room id (i.e. room id is not inside the room list).","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"* User inputs room id which the room is already in occupied/vacant status.","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"XunyiiZ"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":32,"author":{"gitId":"XunyiiZ"},"content":"Viewing room information can be implemented by `CheckRoomCommand` to check one room according to the room id, `CheckAllRoomCommand`","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"XunyiiZ"},"content":"to list the information of all room, `CheckRoomByLevelCommand` to list the information of room according to the level and `CheckRoomByCategoryCommand`","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"XunyiiZ"},"content":"to list the room information according to the category.","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"XunyiiZ"},"content":"When parsing user input, I consider the following edge cases/possible user errors.","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"XunyiiZ"},"content":"* User inputs empty room id.","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"XunyiiZ"},"content":"* User inputs invalid room id (i.e. room id is not inside the room list).","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"XunyiiZ"},"content":"* User inputs invalid category (valid category: single, double, triple, queen, king, twin)","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"XunyiiZ"},"content":"* User inputs invalid level (valid level is from 1 to 4)","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"XunyiiZ"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"XunyiiZ"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"XunyiiZ"},"content":"I also implemented `AssignmentMap` to record the room and assigned housekeeper name. This is implemented using HashMap","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"XunyiiZ"},"content":"data structure. The key of the map is room id and the corresponding value is assigned housekeeper name.","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"XunyiiZ"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"XunyiiZ"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"XunyiiZ"},"content":"Specific exception classes (that inherited from the parent exception class, `HotelLiteManagerException`) were created","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"XunyiiZ"},"content":"for most of the edge cases above (i.e. `InvalidRoomRoomNumberException`, `InvalidLevelException`, `InvalidLevelException`)","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"XunyiiZ"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"XunyiiZ"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"XunyiiZ"},"content":"I implemented the abstract class `FileManager` which other file manager classes can inherit from.","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"XunyiiZ"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"XunyiiZ"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"XunyiiZ"},"content":"I implemented the `ListContainer` so that all the list classes (i.e. `RoomList`, `SatisfactionList`) can be retrieved from it.","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"XunyiiZ"},"content":"When passing lists to execute function of Command class, we only need to pass one `ListContainer` object, rather than all the ","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"XunyiiZ"},"content":"list objects.","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"XunyiiZ"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"XunyiiZ"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":58,"author":{"gitId":"XunyiiZ"},"content":"Finally, saving the room status and housekeeper assignment map required the implementation of the `RoomFileManager` ","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"XunyiiZ"},"content":"and `AssignmentListFileManager` classes.","lastModifiedDate":"2022-04-06"},{"lineNumber":60,"author":{"gitId":"XunyiiZ"},"content":"#### Contributions to the UG","lastModifiedDate":"2022-04-06"},{"lineNumber":61,"author":{"gitId":"XunyiiZ"},"content":"I wrote the instructions for the \"Check in a room: `check in`\",","lastModifiedDate":"2022-04-06"},{"lineNumber":62,"author":{"gitId":"XunyiiZ"},"content":"Check out a room: `check out`, \"Check room information: `check room`\",","lastModifiedDate":"2022-04-06"},{"lineNumber":63,"author":{"gitId":"XunyiiZ"},"content":"\"Check room information by level: `check level`\", \"Check room information by category: `check category`\",","lastModifiedDate":"2022-04-06"},{"lineNumber":64,"author":{"gitId":"XunyiiZ"},"content":"and \"Check all room information: `check all room`\".","lastModifiedDate":"2022-04-06"},{"lineNumber":65,"author":{"gitId":"XunyiiZ"},"content":"#### Contributions to the DG","lastModifiedDate":"2022-04-06"},{"lineNumber":66,"author":{"gitId":"XunyiiZ"},"content":"I wrote the documentation for \"check room information by level\" section.","lastModifiedDate":"2022-04-06"},{"lineNumber":67,"author":{"gitId":"XunyiiZ"},"content":"#### Contributions to team-based tasks","lastModifiedDate":"2022-04-06"},{"lineNumber":68,"author":{"gitId":"XunyiiZ"},"content":"I helped maintain the issue tracker.","lastModifiedDate":"2022-04-06"},{"lineNumber":69,"author":{"gitId":"XunyiiZ"},"content":"#### Reviewing/mentoring contributions","lastModifiedDate":"2022-04-06"},{"lineNumber":70,"author":{"gitId":"XunyiiZ"},"content":"I often reviewed and approved the pull requests of other members of my team.","lastModifiedDate":"2022-04-06"},{"lineNumber":71,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":72,"author":{"gitId":"XunyiiZ"},"content":"During team meetings, I participated in the tasks at hand, whether it was brainstorming, bug-fixing, or resolving","lastModifiedDate":"2022-04-06"},{"lineNumber":73,"author":{"gitId":"XunyiiZ"},"content":"conflicting files.","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"XunyiiZ":73}},{"path":"docs/team/zhenster.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"# Alina Zheng - Project Portfolio Page","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"## Overview","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"I was one of the developers of Hotel Lite, an application to help hotel managers easily","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"manage their businesses. This application offers functionalities for keeping track of hotel inventory,","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"managing housekeeper staff records, recording customer satisfaction ratings,","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"assigning housekeepers to rooms, adding, deleting, viewing events happening in the hotel,","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"and maintaining the state of checked-in/checked-out rooms.","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"### Summary of Contributions","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"#### Code contributed","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"[Alina Zheng: tP code dashboard](https://nus-cs2113-ay2122s2.github.io/tp-dashboard/?search\u003dzhenster\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"**New feature** Implemented functionality for managing customer satisfaction ratings, including adding, ","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"viewing, and calculating the average ratings.","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"The customer satisfaction ratings required the implementation of the following classes: a `Satisfaction` object ","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"representing a single customer satisfaction rating, and a `SatisfactionList` which stored the list of Satisfactions. ","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"The `AddSatisfactionCommand` class parses the user\u0027s input when they invoke the \"add satisfaction\" command, turns that ","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"input into a `Satisfaction` object, and adds the `Satisfaction` object to the `SatisfactionList`. When parsing user","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"input, I considered the following edge cases/possible user errors. ","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"* User inputs empty customer name and/or empty satisfaction value.","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"* User inputs customer name with non-alphabetical characters. We assume that names only contain alphabetical characters","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"and spaces. ","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"* User inputs an invalid satisfaction value (i.e. not an integer between 1 and 5, inclusive). We assume that","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"satisfaction ratings follow the conventional \"5 star\" rating system.","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"* User fails to include the \"/\" delimiter separating the customer\u0027s name from their satisfaction value. ","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"* User includes too many \"/\" delimiters in their command. ","lastModifiedDate":"2022-04-06"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"* User types in duplicate commands, i.e. \"add satisfaction add satisfaction Bob / 5\".","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"Specific exception classes (that inherited from the parent exception class, `HotelLiteManagerException`) were created ","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"for most of the edge cases above. One edge case that did not have a specific corresponding exception class was the ","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"\"too many \u0027/\u0027 delimiters\" case, which corresponded to the more general `InvalidCommandException` class.","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"The user may view all the satisfactions they\u0027ve recorded with the \"view satisfactions\" command (implemented via ","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"the `ViewSatisfactionsCommand` class). The user can also calculate the average customer satisfaction, ","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"which is implemented via the `AverageSatisfactionCommand` class. ","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"**New feature**: Implemented functionality for managing housekeeper performance ratings, including adding and","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"viewing ratings. The housekeeper performance ratings were implemented similarly to the customer satisfaction ratings. ","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"Like the `Satisfaction`, `SatisfactionList`, and `AddSatisfactionCommand` classes, I created the ","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"`HousekeeperPerformance`, `HousekeeperPerformanceList`, and `AddHousekeeperPerformanceCommand` classes. ","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"A `HousekeeperPerformance` object contains the housekeeper\u0027s name and their corresponding performance rating, (like","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"how a `Satisfaction` object contains the customer\u0027s name and their satisfaction rating), so ","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"the structure of the \"add performance\" command is very similar to that of the \"add satisfaction\" command. ","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"As such, the edge cases for the \"add satisfaction\" command listed above are very similar to those implemented","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"for the \"add performance\" command as well. The additional special edge case for \"add performance\" was checking whether ","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"the housekeeper for which the user wants to add a rating for is in `HousekeeperList`; the user should not be able ","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"zhenster"},"content":"to record a performance for a housekeeper that does not exist in the records. ","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"zhenster"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"zhenster"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"zhenster"},"content":"Additionally, the \"view performances\" command (implemented via the `ViewHousekeeperPerformanceCommand` class)","lastModifiedDate":"2022-04-06"},{"lineNumber":58,"author":{"gitId":"zhenster"},"content":"allows the user to view all housekeeper performances, respectively, that they\u0027ve recorded so","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"zhenster"},"content":"far. The housekeeper performances are sorted from highest to lowest rating. This helps the hotel ","lastModifiedDate":"2022-04-06"},{"lineNumber":60,"author":{"gitId":"zhenster"},"content":"manager easily distinguish the highest- and lowest-performing housekeepers. ","lastModifiedDate":"2022-04-06"},{"lineNumber":61,"author":{"gitId":"zhenster"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":62,"author":{"gitId":"zhenster"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"**New Feature**: Satisfactions and housekeeper performance ratings are automatically saved. This behavior is ","lastModifiedDate":"2022-04-06"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"implemented through the `SatisfactionListFileManager` and `HousekeeperPerformanceFileManager` classes. ","lastModifiedDate":"2022-04-06"},{"lineNumber":65,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":66,"author":{"gitId":"zhenster"},"content":"#### Contributions to the UG","lastModifiedDate":"2022-04-06"},{"lineNumber":67,"author":{"gitId":"zhenster"},"content":"I wrote the instructions for the \"Adding a customer satisfaction: `add satifaction`\",","lastModifiedDate":"2022-04-06"},{"lineNumber":68,"author":{"gitId":"zhenster"},"content":"\"View all customer satisfactions: `view satisfactions`\", \"Calculate average satisfaction: `average satisfaction`\",","lastModifiedDate":"2022-04-06"},{"lineNumber":69,"author":{"gitId":"zhenster"},"content":"\"Adding a housekeeper\u0027s performance: `add performance`\", and \"View all housekeeper performances: `view performances`\"","lastModifiedDate":"2022-04-06"},{"lineNumber":70,"author":{"gitId":"zhenster"},"content":"sections.","lastModifiedDate":"2022-04-06"},{"lineNumber":71,"author":{"gitId":"zhenster"},"content":"#### Contributions to the DG","lastModifiedDate":"2022-04-06"},{"lineNumber":72,"author":{"gitId":"zhenster"},"content":"I wrote the documentation for how the `Add Satisfaction` command is executed (under the \"Adding a customer\u0027s ","lastModifiedDate":"2022-04-06"},{"lineNumber":73,"author":{"gitId":"zhenster"},"content":"satisfaction rating\" section. ","lastModifiedDate":"2022-04-06"},{"lineNumber":74,"author":{"gitId":"zhenster"},"content":"#### Contributions to team-based tasks","lastModifiedDate":"2022-04-06"},{"lineNumber":75,"author":{"gitId":"zhenster"},"content":"I helped maintain the issue tracker and also wrote the \"Introduction\" section of the User Guide. ","lastModifiedDate":"2022-04-06"},{"lineNumber":76,"author":{"gitId":"zhenster"},"content":"#### Reviewing/mentoring contributions","lastModifiedDate":"2022-04-06"},{"lineNumber":77,"author":{"gitId":"zhenster"},"content":"I often reviewed and approved the pull requests of other members of my team. Below is a list of these pull requests. ","lastModifiedDate":"2022-04-06"},{"lineNumber":78,"author":{"gitId":"zhenster"},"content":"* [Update room vacancy](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/32)","lastModifiedDate":"2022-04-06"},{"lineNumber":79,"author":{"gitId":"zhenster"},"content":"* [View room by category](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/36)","lastModifiedDate":"2022-04-06"},{"lineNumber":80,"author":{"gitId":"zhenster"},"content":"* [View room vacancy](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/37)","lastModifiedDate":"2022-04-06"},{"lineNumber":81,"author":{"gitId":"zhenster"},"content":"* [fixes #84](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/89)","lastModifiedDate":"2022-04-06"},{"lineNumber":82,"author":{"gitId":"zhenster"},"content":"* [Developer Guide - Aiman Imtiaz](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/99)","lastModifiedDate":"2022-04-06"},{"lineNumber":83,"author":{"gitId":"zhenster"},"content":"* [transparent images issue resolved in DG](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/101)","lastModifiedDate":"2022-04-06"},{"lineNumber":84,"author":{"gitId":"zhenster"},"content":"* [Zxy dg](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/106)","lastModifiedDate":"2022-04-06"},{"lineNumber":85,"author":{"gitId":"zhenster"},"content":"* [Add reset availability function](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/136)","lastModifiedDate":"2022-04-06"},{"lineNumber":86,"author":{"gitId":"zhenster"},"content":"* [fixes #172, fixes #173](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/174)","lastModifiedDate":"2022-04-06"},{"lineNumber":87,"author":{"gitId":"zhenster"},"content":"* [Delete assignment](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/178)","lastModifiedDate":"2022-04-06"},{"lineNumber":88,"author":{"gitId":"zhenster"},"content":"* [Add javadoc 3](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/204)","lastModifiedDate":"2022-04-06"},{"lineNumber":89,"author":{"gitId":"zhenster"},"content":"* [Faliciaong fix slashes](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/224)","lastModifiedDate":"2022-04-06"},{"lineNumber":90,"author":{"gitId":"zhenster"},"content":"* [Handling the case for no description in add event command](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/232)","lastModifiedDate":"2022-04-06"},{"lineNumber":91,"author":{"gitId":"zhenster"},"content":"* [Bug fix](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/326)","lastModifiedDate":"2022-04-06"},{"lineNumber":92,"author":{"gitId":"zhenster"},"content":"* [Update code to implement the item name constraint and add it in the UG](https://github.com/AY2122S2-CS2113-T11-1/tp/pull/330) ","lastModifiedDate":"2022-04-06"},{"lineNumber":93,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":94,"author":{"gitId":"zhenster"},"content":"During team meetings, I participated in the tasks at hand, whether it was brainstorming, bug-fixing, or resolving ","lastModifiedDate":"2022-04-06"},{"lineNumber":95,"author":{"gitId":"zhenster"},"content":"conflicting files. When not in meetings, ","lastModifiedDate":"2022-04-06"},{"lineNumber":96,"author":{"gitId":"zhenster"},"content":"#### Contributions beyond the project team ","lastModifiedDate":"2022-04-06"},{"lineNumber":97,"author":{"gitId":"zhenster"},"content":"During the practical exam dry run, I reported 13 bugs in another team\u0027s project, which I was later","lastModifiedDate":"2022-04-06"},{"lineNumber":98,"author":{"gitId":"zhenster"},"content":"informed was an above-average number of bugs. Indeed, I did try to be as thorough as possible, and I tried to ","lastModifiedDate":"2022-04-06"},{"lineNumber":99,"author":{"gitId":"zhenster"},"content":"think of as many edge cases and user errors as I could. My own project team was quite thorough in our implementation","lastModifiedDate":"2022-04-06"},{"lineNumber":100,"author":{"gitId":"zhenster"},"content":"of edge cases, and I wanted to make sure that other teams thought of the same possibilities for user error. ","lastModifiedDate":"2022-04-06"},{"lineNumber":101,"author":{"gitId":"zhenster"},"content":"![img.png](alinaZheng_PE_DR.png)","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"zhenster":101}},{"path":"src/main/java/seedu/duke/AssignmentMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.storage.AssignmentListFileManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"public class AssignmentMap {","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"    HashMap\u003cInteger, String\u003e map;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"    public AssignmentMap(HashMap\u003cInteger, String\u003e map) {","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"        this.map \u003d map;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"    public void addAssignment(String name, int roomId) {","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"        map.put(roomId, name);","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"    public String getHouseKeeperNameByRoom(int roomId) {","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"        if (!map.containsKey(roomId)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"            return \"NA\";","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"        return map.get(roomId);","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"aiman-imtiaz"},"content":"    public void removeAssignment(String name) {","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"aiman-imtiaz"},"content":"        for (Map.Entry\u003cInteger, String\u003e entry: map.entrySet()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"aiman-imtiaz"},"content":"            if (entry.getValue().equals(name)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"aiman-imtiaz"},"content":"                int k \u003d entry.getKey();","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"aiman-imtiaz"},"content":"                map.remove(k);","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"aiman-imtiaz"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"    public void save() throws IOException, HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"XunyiiZ"},"content":"        AssignmentListFileManager assignmentListFileManager \u003d new AssignmentListFileManager();","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"XunyiiZ"},"content":"        assignmentListFileManager.save(map);","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"aiman-imtiaz":22,"zhenster":1,"XunyiiZ":17,"siewyangzhi":1}},{"path":"src/main/java/seedu/duke/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.command.HelpCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"import seedu.duke.command.customercommands.AddSatisfactionCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"import seedu.duke.command.customercommands.ViewAverageSatisfactionCommand;","lastModifiedDate":"2022-04-10"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"import seedu.duke.command.customercommands.ViewSatisfactionsCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.command.eventcommands.AddEventCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.command.eventcommands.DeleteEventCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.command.eventcommands.ViewEventsCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.itemcommands.AddItemCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.itemcommands.ViewItemsWithZeroPaxCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.itemcommands.SearchItemCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.itemcommands.UpdateItemPaxCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.itemcommands.DeleteItemCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.itemcommands.UpdateItemNameCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.itemcommands.ViewItemListCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.command.assigncommand.AssignHousekeeperCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.command.roomcommand.CheckAllRoomCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.housekeepercommands.ViewHousekeeperListCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.housekeepercommands.AgeIncreaseCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.housekeepercommands.AddHousekeeperCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.housekeepercommands.ResetAvailabilityCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.housekeepercommands.AddHousekeeperPerformanceCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.housekeepercommands.AddAvailabilityCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.housekeepercommands.ViewHousekeeperPerformancesCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.housekeepercommands.GetAvailableHousekeeperCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.housekeepercommands.DeleteHousekeeperCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.command.roomcommand.CheckInCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.command.roomcommand.CheckOutCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.command.roomcommand.CheckRoomCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.command.roomcommand.CheckRoomByLevelCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.command.roomcommand.CheckRoomByCatCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidCommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":" * Class that implements behavior of parsing user input and linking","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":" * that user input to a Command class.","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"public class CommandParser {","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"    private static final String SPACE \u003d \" \";","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"siewyangzhi"},"content":"    private static final String BYE \u003d \"bye\";","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"    private static final String DELETE \u003d \"delete \";","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ADD \u003d \"add \";","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"XunyiiZ"},"content":"    private static final String CHECK \u003d \"check \";","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final String VIEW \u003d \"view \";","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final String HELP \u003d \"help\";","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ADD_ITEM_COMMAND \u003d \"add item \";","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"siewyangzhi"},"content":"    private static final String VIEW_ITEM_LIST_COMMAND \u003d \"view all items\";","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"siewyangzhi"},"content":"    private static final String VIEW_ITEMS_WITH_ZERO_PAX_COMMAND \u003d \"view items with zero pax\";","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"siewyangzhi"},"content":"    private static final String DELETE_ITEM_COMMAND \u003d \"delete item \";","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"siewyangzhi"},"content":"    private static final String UPDATE_ITEM_PAX_COMMAND \u003d \"update item pax \";","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"siewyangzhi"},"content":"    private static final String UPDATE_ITEM_NAME_COMMAND \u003d \"update item name \";","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ADD_HOUSEKEEPER_COMMAND \u003d \"add housekeeper \";","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"siewyangzhi"},"content":"    private static final String SEARCH_ITEM_COMMAND \u003d \"search item \";","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"zhenster"},"content":"    private static final String ADD_PERFORMANCE_COMMAND \u003d \"add performance \";","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"zhenster"},"content":"    private static final String VIEW_PERFORMANCES_COMMAND \u003d \"view performances\";","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ADD_AVAILABILITY_COMMAND \u003d \"availability \";","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"zhenster"},"content":"    private static final String ADD_SATISFACTION_COMMAND \u003d \"add satisfaction \";","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"    private static final String VIEW_SATISFACTIONS_COMMAND \u003d \"view satisfactions\";","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"    private static final String AVERAGE_SATISFACTION_COMMAND \u003d \"view average satisfaction\";","lastModifiedDate":"2022-04-09"},{"lineNumber":65,"author":{"gitId":"zhenster"},"content":"    private static final String CHECK_IN \u003d \"check in \";","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"zhenster"},"content":"    private static final String CHECK_OUT \u003d \"check out \";","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"zhenster"},"content":"    private static final String CHECK_ROOM \u003d \"check room \";","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"XunyiiZ"},"content":"    private static final String CHECK_ALL_ROOM \u003d \"check all room\";","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"XunyiiZ"},"content":"    private static final String CHECK_ROOM_BY_LEVEL \u003d \"check level \";","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"XunyiiZ"},"content":"    private static final String CHECK_BY_CATEGORY \u003d \"check category \";","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ASSIGN_HOUSEKEEPER \u003d \"assign \";","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"FaliciaOng"},"content":"    private static final String VIEW_HOUSEKEEPER_COMMAND \u003d \"view recorded housekeepers\";","lastModifiedDate":"2022-04-06"},{"lineNumber":73,"author":{"gitId":"FaliciaOng"},"content":"    private static final String VIEW_AVAILABLE_HOUSEKEEPER_DAY \u003d \"get available on \";","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"FaliciaOng"},"content":"    private static final String RESET_AVAILABILITY \u003d \"is a new week\";","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"FaliciaOng"},"content":"    private static final String DELETE_PROFILE \u003d \"delete housekeeper \";","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"FaliciaOng"},"content":"    private static final String UPDATE_AGE_BY_ONE \u003d \"is a new year\";","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final String ADD_EVENT \u003d \"add event \";","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final String VIEW_EVENTS \u003d \"view events\";","lastModifiedDate":"2022-04-11"},{"lineNumber":79,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final String DELETE_EVENT \u003d \"delete event \";","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"zhenster"},"content":"     * Parses the user-provided command and creates the relevant Command object.","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"siewyangzhi"},"content":"     * @param userInput User input to be parsed and turned into a Command object.","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"zhenster"},"content":"     * @return The relevant Command object created based on the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"zhenster"},"content":"     * @throws HotelLiteManagerException If there is an error in user input that prevents it from being parsed into","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"zhenster"},"content":"     *                                   the relevant Command object.","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"siewyangzhi"},"content":"    public Command parse(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"siewyangzhi"},"content":"        String userInputLowerCase \u003d userInput.toLowerCase();","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"siewyangzhi"},"content":"        Command userCommand \u003d null;","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"siewyangzhi"},"content":"        String userInputLowerCaseWithoutCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"zhenster"},"content":"        if (userInputLowerCase.startsWith(SPACE)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"zhenster"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"FaliciaOng"},"content":"        } else if (userInputLowerCase.startsWith(ADD)) {","lastModifiedDate":"2022-04-08"},{"lineNumber":96,"author":{"gitId":"FaliciaOng"},"content":"            userCommand \u003d parseAdd(userInputLowerCase);","lastModifiedDate":"2022-04-08"},{"lineNumber":97,"author":{"gitId":"zhenster"},"content":"        } else if (userInputLowerCase.startsWith(DELETE)) {","lastModifiedDate":"2022-04-08"},{"lineNumber":98,"author":{"gitId":"zhenster"},"content":"            userCommand \u003d parseDelete(userInputLowerCase);","lastModifiedDate":"2022-04-08"},{"lineNumber":99,"author":{"gitId":"XunyiiZ"},"content":"        } else if (userInputLowerCase.startsWith(CHECK)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":100,"author":{"gitId":"XunyiiZ"},"content":"            userCommand \u003d parseCheck(userInputLowerCase);","lastModifiedDate":"2022-04-09"},{"lineNumber":101,"author":{"gitId":"aiman-imtiaz"},"content":"        } else if (userInputLowerCase.startsWith(VIEW)) {","lastModifiedDate":"2022-04-11"},{"lineNumber":102,"author":{"gitId":"aiman-imtiaz"},"content":"            userCommand \u003d parseView(userInputLowerCase);","lastModifiedDate":"2022-04-11"},{"lineNumber":103,"author":{"gitId":"zhenster"},"content":"        } else {","lastModifiedDate":"2022-04-08"},{"lineNumber":104,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d parseMiscellaneous(userInputLowerCase);","lastModifiedDate":"2022-04-09"},{"lineNumber":105,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-04-08"},{"lineNumber":106,"author":{"gitId":"zhenster"},"content":"        return userCommand;","lastModifiedDate":"2022-04-08"},{"lineNumber":107,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":108,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":109,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":110,"author":{"gitId":"zhenster"},"content":"     * Parses the user-provided delete-related command and creates the relevant Command object.","lastModifiedDate":"2022-04-08"},{"lineNumber":111,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-08"},{"lineNumber":112,"author":{"gitId":"zhenster"},"content":"     * @param userInputLowerCase User input to be parsed and turned into a delete-related Command object.","lastModifiedDate":"2022-04-08"},{"lineNumber":113,"author":{"gitId":"zhenster"},"content":"     * @return The relevant Command object created based on the user input.","lastModifiedDate":"2022-04-08"},{"lineNumber":114,"author":{"gitId":"zhenster"},"content":"     * @throws HotelLiteManagerException If there is an error in user input that prevents it from being parsed into","lastModifiedDate":"2022-04-08"},{"lineNumber":115,"author":{"gitId":"FaliciaOng"},"content":"     *                                   the relevant Command object.","lastModifiedDate":"2022-04-08"},{"lineNumber":116,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":117,"author":{"gitId":"zhenster"},"content":"    public Command parseDelete(String userInputLowerCase) throws HotelLiteManagerException {","lastModifiedDate":"2022-04-08"},{"lineNumber":118,"author":{"gitId":"zhenster"},"content":"        Command userCommand \u003d null;","lastModifiedDate":"2022-04-08"},{"lineNumber":119,"author":{"gitId":"zhenster"},"content":"        String userInputLowerCaseWithoutCommand;","lastModifiedDate":"2022-04-08"},{"lineNumber":120,"author":{"gitId":"zhenster"},"content":"        if (userInputLowerCase.startsWith(DELETE_ITEM_COMMAND)) {","lastModifiedDate":"2022-04-08"},{"lineNumber":121,"author":{"gitId":"siewyangzhi"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replaceFirst(DELETE_ITEM_COMMAND, \"\");","lastModifiedDate":"2022-04-10"},{"lineNumber":122,"author":{"gitId":"zhenster"},"content":"            userCommand \u003d new DeleteItemCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-04-08"},{"lineNumber":123,"author":{"gitId":"zhenster"},"content":"        } else if (userInputLowerCase.startsWith(DELETE_PROFILE)) {","lastModifiedDate":"2022-04-08"},{"lineNumber":124,"author":{"gitId":"FaliciaOng"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replaceFirst(DELETE_PROFILE, \"\");","lastModifiedDate":"2022-04-09"},{"lineNumber":125,"author":{"gitId":"zhenster"},"content":"            userCommand \u003d new DeleteHousekeeperCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-04-08"},{"lineNumber":126,"author":{"gitId":"aiman-imtiaz"},"content":"        } else if (userInputLowerCase.startsWith(DELETE_EVENT)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":127,"author":{"gitId":"aiman-imtiaz"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replace(DELETE_EVENT, \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":128,"author":{"gitId":"aiman-imtiaz"},"content":"            userCommand \u003d new DeleteEventCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":129,"author":{"gitId":"zhenster"},"content":"        } else {","lastModifiedDate":"2022-04-08"},{"lineNumber":130,"author":{"gitId":"zhenster"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-04-08"},{"lineNumber":131,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":132,"author":{"gitId":"siewyangzhi"},"content":"        return userCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":136,"author":{"gitId":"XunyiiZ"},"content":"     * Parses the user-provided check-related command and creates the relevant Command object.","lastModifiedDate":"2022-04-09"},{"lineNumber":137,"author":{"gitId":"XunyiiZ"},"content":"     *","lastModifiedDate":"2022-04-09"},{"lineNumber":138,"author":{"gitId":"XunyiiZ"},"content":"     * @param userInputLowerCase User input to be parsed and turned into a check-related Command object.","lastModifiedDate":"2022-04-09"},{"lineNumber":139,"author":{"gitId":"XunyiiZ"},"content":"     * @return The relevant Command object created based on the user input.","lastModifiedDate":"2022-04-09"},{"lineNumber":140,"author":{"gitId":"XunyiiZ"},"content":"     * @throws HotelLiteManagerException If there is an error in user input that prevents it from being parsed into","lastModifiedDate":"2022-04-09"},{"lineNumber":141,"author":{"gitId":"XunyiiZ"},"content":"     *                                   the relevant Command object.","lastModifiedDate":"2022-04-09"},{"lineNumber":142,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":143,"author":{"gitId":"XunyiiZ"},"content":"    private Command parseCheck(String userInputLowerCase) throws HotelLiteManagerException {","lastModifiedDate":"2022-04-09"},{"lineNumber":144,"author":{"gitId":"XunyiiZ"},"content":"        Command userCommand \u003d null;","lastModifiedDate":"2022-04-09"},{"lineNumber":145,"author":{"gitId":"XunyiiZ"},"content":"        String userInputLowerCaseWithoutCommand;","lastModifiedDate":"2022-04-09"},{"lineNumber":146,"author":{"gitId":"XunyiiZ"},"content":"        if (userInputLowerCase.startsWith(CHECK_IN)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":147,"author":{"gitId":"XunyiiZ"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replace(CHECK_IN, \"\");","lastModifiedDate":"2022-04-09"},{"lineNumber":148,"author":{"gitId":"XunyiiZ"},"content":"            userCommand \u003d new CheckInCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-04-09"},{"lineNumber":149,"author":{"gitId":"XunyiiZ"},"content":"        } else if (userInputLowerCase.startsWith(CHECK_OUT)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":150,"author":{"gitId":"XunyiiZ"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replace(CHECK_OUT, \"\");","lastModifiedDate":"2022-04-09"},{"lineNumber":151,"author":{"gitId":"XunyiiZ"},"content":"            userCommand \u003d new CheckOutCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-04-09"},{"lineNumber":152,"author":{"gitId":"XunyiiZ"},"content":"        } else if (userInputLowerCase.startsWith(CHECK_BY_CATEGORY)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":153,"author":{"gitId":"XunyiiZ"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replace(CHECK_BY_CATEGORY, \"\");","lastModifiedDate":"2022-04-09"},{"lineNumber":154,"author":{"gitId":"XunyiiZ"},"content":"            userCommand \u003d new CheckRoomByCatCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-04-09"},{"lineNumber":155,"author":{"gitId":"XunyiiZ"},"content":"        } else if (userInputLowerCase.startsWith(CHECK_ROOM)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":156,"author":{"gitId":"XunyiiZ"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replace(CHECK_ROOM, \"\");","lastModifiedDate":"2022-04-09"},{"lineNumber":157,"author":{"gitId":"XunyiiZ"},"content":"            userCommand \u003d new CheckRoomCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-04-09"},{"lineNumber":158,"author":{"gitId":"XunyiiZ"},"content":"        } else if (userInputLowerCase.trim().equals(CHECK_ALL_ROOM)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":159,"author":{"gitId":"XunyiiZ"},"content":"            userCommand \u003d new CheckAllRoomCommand();","lastModifiedDate":"2022-04-09"},{"lineNumber":160,"author":{"gitId":"XunyiiZ"},"content":"        } else if (userInputLowerCase.startsWith(CHECK_ROOM_BY_LEVEL)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":161,"author":{"gitId":"XunyiiZ"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replace(CHECK_ROOM_BY_LEVEL, \"\");","lastModifiedDate":"2022-04-09"},{"lineNumber":162,"author":{"gitId":"XunyiiZ"},"content":"            userCommand \u003d new CheckRoomByLevelCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-04-09"},{"lineNumber":163,"author":{"gitId":"XunyiiZ"},"content":"        } else {","lastModifiedDate":"2022-04-09"},{"lineNumber":164,"author":{"gitId":"XunyiiZ"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-04-09"},{"lineNumber":165,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":166,"author":{"gitId":"XunyiiZ"},"content":"        return userCommand;","lastModifiedDate":"2022-04-09"},{"lineNumber":167,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":168,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":169,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":170,"author":{"gitId":"FaliciaOng"},"content":"     * Parses the user-provided add-related command and creates the relevant Command object.","lastModifiedDate":"2022-04-08"},{"lineNumber":171,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-08"},{"lineNumber":172,"author":{"gitId":"FaliciaOng"},"content":"     * @param userInputLowerCase User input to be parsed and turned into a delete-related Command object.","lastModifiedDate":"2022-04-08"},{"lineNumber":173,"author":{"gitId":"FaliciaOng"},"content":"     * @return The relevant Command object created based on the user input.","lastModifiedDate":"2022-04-08"},{"lineNumber":174,"author":{"gitId":"FaliciaOng"},"content":"     * @throws HotelLiteManagerException If there is an error in user input that prevents it from being parsed into","lastModifiedDate":"2022-04-08"},{"lineNumber":175,"author":{"gitId":"FaliciaOng"},"content":"     *                                   the relevant Command object.","lastModifiedDate":"2022-04-08"},{"lineNumber":176,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":177,"author":{"gitId":"FaliciaOng"},"content":"    public Command parseAdd(String userInputLowerCase) throws HotelLiteManagerException {","lastModifiedDate":"2022-04-08"},{"lineNumber":178,"author":{"gitId":"FaliciaOng"},"content":"        Command userCommand \u003d null;","lastModifiedDate":"2022-04-08"},{"lineNumber":179,"author":{"gitId":"FaliciaOng"},"content":"        String userInputLowerCaseWithoutCommand;","lastModifiedDate":"2022-04-08"},{"lineNumber":180,"author":{"gitId":"FaliciaOng"},"content":"        if (userInputLowerCase.startsWith(ADD_SATISFACTION_COMMAND)) {","lastModifiedDate":"2022-04-08"},{"lineNumber":181,"author":{"gitId":"siewyangzhi"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replaceFirst(ADD_SATISFACTION_COMMAND, \"\")","lastModifiedDate":"2022-04-09"},{"lineNumber":182,"author":{"gitId":"siewyangzhi"},"content":"                    .trim();","lastModifiedDate":"2022-04-09"},{"lineNumber":183,"author":{"gitId":"FaliciaOng"},"content":"            userCommand \u003d new AddSatisfactionCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-04-08"},{"lineNumber":184,"author":{"gitId":"FaliciaOng"},"content":"        } else if (userInputLowerCase.startsWith(ADD_ITEM_COMMAND)) {","lastModifiedDate":"2022-04-08"},{"lineNumber":185,"author":{"gitId":"siewyangzhi"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replaceFirst(ADD_ITEM_COMMAND, \"\");","lastModifiedDate":"2022-04-10"},{"lineNumber":186,"author":{"gitId":"FaliciaOng"},"content":"            userCommand \u003d new AddItemCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-04-08"},{"lineNumber":187,"author":{"gitId":"FaliciaOng"},"content":"        } else if (userInputLowerCase.startsWith((ADD_HOUSEKEEPER_COMMAND))) {","lastModifiedDate":"2022-04-08"},{"lineNumber":188,"author":{"gitId":"FaliciaOng"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replaceFirst(ADD_HOUSEKEEPER_COMMAND, \"\");","lastModifiedDate":"2022-04-09"},{"lineNumber":189,"author":{"gitId":"FaliciaOng"},"content":"            userCommand \u003d new AddHousekeeperCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-04-08"},{"lineNumber":190,"author":{"gitId":"FaliciaOng"},"content":"        } else if (userInputLowerCase.startsWith(ADD_PERFORMANCE_COMMAND)) {","lastModifiedDate":"2022-04-08"},{"lineNumber":191,"author":{"gitId":"FaliciaOng"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replaceFirst(ADD_PERFORMANCE_COMMAND, \"\");","lastModifiedDate":"2022-04-08"},{"lineNumber":192,"author":{"gitId":"FaliciaOng"},"content":"            userCommand \u003d new AddHousekeeperPerformanceCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-04-08"},{"lineNumber":193,"author":{"gitId":"FaliciaOng"},"content":"        } else if (userInputLowerCase.startsWith(ADD_EVENT)) {","lastModifiedDate":"2022-04-08"},{"lineNumber":194,"author":{"gitId":"FaliciaOng"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replace(ADD_EVENT, \"\");","lastModifiedDate":"2022-04-08"},{"lineNumber":195,"author":{"gitId":"FaliciaOng"},"content":"            userCommand \u003d new AddEventCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-04-08"},{"lineNumber":196,"author":{"gitId":"FaliciaOng"},"content":"        } else {","lastModifiedDate":"2022-04-08"},{"lineNumber":197,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-04-08"},{"lineNumber":198,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-04-08"},{"lineNumber":199,"author":{"gitId":"FaliciaOng"},"content":"        return userCommand;","lastModifiedDate":"2022-04-08"},{"lineNumber":200,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":201,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":202,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":203,"author":{"gitId":"siewyangzhi"},"content":"     * Parses the user-provided commands that are neither an add, delete, view nor room-related commands. It then","lastModifiedDate":"2022-04-09"},{"lineNumber":204,"author":{"gitId":"siewyangzhi"},"content":"     * creates the relevant Command object.","lastModifiedDate":"2022-04-09"},{"lineNumber":205,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-04-09"},{"lineNumber":206,"author":{"gitId":"siewyangzhi"},"content":"     * @param userInputLowerCase User input to be parsed and turned into the relevant Command object.","lastModifiedDate":"2022-04-09"},{"lineNumber":207,"author":{"gitId":"siewyangzhi"},"content":"     * @return The relevant Command object created based on the user input.","lastModifiedDate":"2022-04-09"},{"lineNumber":208,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException If there is an error in user input that prevents it from being parsed into","lastModifiedDate":"2022-04-09"},{"lineNumber":209,"author":{"gitId":"siewyangzhi"},"content":"     *                                   the relevant Command object or if the command is invalid.","lastModifiedDate":"2022-04-09"},{"lineNumber":210,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":211,"author":{"gitId":"siewyangzhi"},"content":"    public Command parseMiscellaneous(String userInputLowerCase) throws HotelLiteManagerException {","lastModifiedDate":"2022-04-09"},{"lineNumber":212,"author":{"gitId":"siewyangzhi"},"content":"        Command userCommand \u003d null;","lastModifiedDate":"2022-04-09"},{"lineNumber":213,"author":{"gitId":"siewyangzhi"},"content":"        String userInputLowerCaseWithoutCommand;","lastModifiedDate":"2022-04-09"},{"lineNumber":214,"author":{"gitId":"siewyangzhi"},"content":"        if (userInputLowerCase.equals(BYE)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":215,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new ExitCommand();","lastModifiedDate":"2022-04-09"},{"lineNumber":216,"author":{"gitId":"aiman-imtiaz"},"content":"        } else if (userInputLowerCase.startsWith(HELP)) {","lastModifiedDate":"2022-04-11"},{"lineNumber":217,"author":{"gitId":"aiman-imtiaz"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replace(HELP, \"\");","lastModifiedDate":"2022-04-11"},{"lineNumber":218,"author":{"gitId":"aiman-imtiaz"},"content":"            userCommand \u003d new HelpCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-04-11"},{"lineNumber":219,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(ADD_AVAILABILITY_COMMAND)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":220,"author":{"gitId":"siewyangzhi"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replace(ADD_AVAILABILITY_COMMAND, \"\");","lastModifiedDate":"2022-04-09"},{"lineNumber":221,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new AddAvailabilityCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-04-09"},{"lineNumber":222,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(VIEW_AVAILABLE_HOUSEKEEPER_DAY)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":223,"author":{"gitId":"siewyangzhi"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replaceFirst(VIEW_AVAILABLE_HOUSEKEEPER_DAY,","lastModifiedDate":"2022-04-09"},{"lineNumber":224,"author":{"gitId":"siewyangzhi"},"content":"                    \"\");","lastModifiedDate":"2022-04-09"},{"lineNumber":225,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new GetAvailableHousekeeperCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-04-09"},{"lineNumber":226,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(RESET_AVAILABILITY)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":227,"author":{"gitId":"siewyangzhi"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.trim();","lastModifiedDate":"2022-04-09"},{"lineNumber":228,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new ResetAvailabilityCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-04-09"},{"lineNumber":229,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(UPDATE_AGE_BY_ONE)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":230,"author":{"gitId":"siewyangzhi"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.trim();","lastModifiedDate":"2022-04-09"},{"lineNumber":231,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new AgeIncreaseCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-04-09"},{"lineNumber":232,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(ASSIGN_HOUSEKEEPER)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":233,"author":{"gitId":"aiman-imtiaz"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replace(ASSIGN_HOUSEKEEPER, \"\");","lastModifiedDate":"2022-04-11"},{"lineNumber":234,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new AssignHousekeeperCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-04-09"},{"lineNumber":235,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(SEARCH_ITEM_COMMAND)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":236,"author":{"gitId":"siewyangzhi"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replaceFirst(SEARCH_ITEM_COMMAND, \"\");","lastModifiedDate":"2022-04-10"},{"lineNumber":237,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new SearchItemCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-04-09"},{"lineNumber":238,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(UPDATE_ITEM_PAX_COMMAND)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":239,"author":{"gitId":"siewyangzhi"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replaceFirst(UPDATE_ITEM_PAX_COMMAND, \"\");","lastModifiedDate":"2022-04-10"},{"lineNumber":240,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new UpdateItemPaxCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-04-09"},{"lineNumber":241,"author":{"gitId":"siewyangzhi"},"content":"        } else if (userInputLowerCase.startsWith(UPDATE_ITEM_NAME_COMMAND)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":242,"author":{"gitId":"siewyangzhi"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replaceFirst(UPDATE_ITEM_NAME_COMMAND, \"\");","lastModifiedDate":"2022-04-10"},{"lineNumber":243,"author":{"gitId":"siewyangzhi"},"content":"            userCommand \u003d new UpdateItemNameCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-04-09"},{"lineNumber":244,"author":{"gitId":"siewyangzhi"},"content":"        } else {","lastModifiedDate":"2022-04-09"},{"lineNumber":245,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-04-09"},{"lineNumber":246,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":247,"author":{"gitId":"siewyangzhi"},"content":"        return userCommand;","lastModifiedDate":"2022-04-09"},{"lineNumber":248,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":249,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":250,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":251,"author":{"gitId":"aiman-imtiaz"},"content":"     * Parses the user-provided view-related command and creates the relevant Command object.","lastModifiedDate":"2022-04-11"},{"lineNumber":252,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":253,"author":{"gitId":"aiman-imtiaz"},"content":"     * @param userInputLowerCase User input to be parsed and turned into a delete-related Command object.","lastModifiedDate":"2022-04-11"},{"lineNumber":254,"author":{"gitId":"aiman-imtiaz"},"content":"     * @return The relevant Command object created based on the user input.","lastModifiedDate":"2022-04-11"},{"lineNumber":255,"author":{"gitId":"aiman-imtiaz"},"content":"     * @throws HotelLiteManagerException If there is an error in user input that prevents it from being parsed into","lastModifiedDate":"2022-04-11"},{"lineNumber":256,"author":{"gitId":"aiman-imtiaz"},"content":"     *                                   the relevant Command object.","lastModifiedDate":"2022-04-11"},{"lineNumber":257,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":258,"author":{"gitId":"aiman-imtiaz"},"content":"    public Command parseView(String userInputLowerCase) throws HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":259,"author":{"gitId":"aiman-imtiaz"},"content":"        Command userCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":260,"author":{"gitId":"aiman-imtiaz"},"content":"        String userInputLowerCaseWithoutCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":261,"author":{"gitId":"aiman-imtiaz"},"content":"        if (userInputLowerCase.trim().equals(VIEW_SATISFACTIONS_COMMAND)) {","lastModifiedDate":"2022-04-11"},{"lineNumber":262,"author":{"gitId":"aiman-imtiaz"},"content":"            userCommand \u003d new ViewSatisfactionsCommand();","lastModifiedDate":"2022-04-11"},{"lineNumber":263,"author":{"gitId":"aiman-imtiaz"},"content":"        } else if (userInputLowerCase.startsWith(VIEW_ITEM_LIST_COMMAND)) {","lastModifiedDate":"2022-04-11"},{"lineNumber":264,"author":{"gitId":"aiman-imtiaz"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replaceFirst(VIEW_ITEM_LIST_COMMAND, \"\");","lastModifiedDate":"2022-04-11"},{"lineNumber":265,"author":{"gitId":"aiman-imtiaz"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCaseWithoutCommand.trim();","lastModifiedDate":"2022-04-11"},{"lineNumber":266,"author":{"gitId":"aiman-imtiaz"},"content":"            userCommand \u003d new ViewItemListCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-04-11"},{"lineNumber":267,"author":{"gitId":"aiman-imtiaz"},"content":"        } else if (userInputLowerCase.startsWith(VIEW_ITEMS_WITH_ZERO_PAX_COMMAND)) {","lastModifiedDate":"2022-04-11"},{"lineNumber":268,"author":{"gitId":"aiman-imtiaz"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replaceFirst(VIEW_ITEMS_WITH_ZERO_PAX_COMMAND,","lastModifiedDate":"2022-04-11"},{"lineNumber":269,"author":{"gitId":"aiman-imtiaz"},"content":"                    \"\");","lastModifiedDate":"2022-04-11"},{"lineNumber":270,"author":{"gitId":"aiman-imtiaz"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCaseWithoutCommand.trim();","lastModifiedDate":"2022-04-11"},{"lineNumber":271,"author":{"gitId":"aiman-imtiaz"},"content":"            userCommand \u003d new ViewItemsWithZeroPaxCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-04-11"},{"lineNumber":272,"author":{"gitId":"aiman-imtiaz"},"content":"        } else if (userInputLowerCase.trim().equals(VIEW_PERFORMANCES_COMMAND)) {","lastModifiedDate":"2022-04-11"},{"lineNumber":273,"author":{"gitId":"aiman-imtiaz"},"content":"            userCommand \u003d new ViewHousekeeperPerformancesCommand();","lastModifiedDate":"2022-04-11"},{"lineNumber":274,"author":{"gitId":"aiman-imtiaz"},"content":"        } else if (userInputLowerCase.contains((VIEW_HOUSEKEEPER_COMMAND))) {","lastModifiedDate":"2022-04-11"},{"lineNumber":275,"author":{"gitId":"aiman-imtiaz"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.trim();","lastModifiedDate":"2022-04-11"},{"lineNumber":276,"author":{"gitId":"aiman-imtiaz"},"content":"            userCommand \u003d new ViewHousekeeperListCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-04-11"},{"lineNumber":277,"author":{"gitId":"aiman-imtiaz"},"content":"        } else if (userInputLowerCase.equals(AVERAGE_SATISFACTION_COMMAND)) {","lastModifiedDate":"2022-04-11"},{"lineNumber":278,"author":{"gitId":"aiman-imtiaz"},"content":"            userCommand \u003d new ViewAverageSatisfactionCommand();","lastModifiedDate":"2022-04-11"},{"lineNumber":279,"author":{"gitId":"aiman-imtiaz"},"content":"        } else if (userInputLowerCase.startsWith(VIEW_EVENTS)) {","lastModifiedDate":"2022-04-11"},{"lineNumber":280,"author":{"gitId":"aiman-imtiaz"},"content":"            userInputLowerCaseWithoutCommand \u003d userInputLowerCase.replace(VIEW_EVENTS, \"\");","lastModifiedDate":"2022-04-11"},{"lineNumber":281,"author":{"gitId":"aiman-imtiaz"},"content":"            userCommand \u003d new ViewEventsCommand(userInputLowerCaseWithoutCommand);","lastModifiedDate":"2022-04-11"},{"lineNumber":282,"author":{"gitId":"aiman-imtiaz"},"content":"        } else {","lastModifiedDate":"2022-04-11"},{"lineNumber":283,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-04-11"},{"lineNumber":284,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-04-11"},{"lineNumber":285,"author":{"gitId":"aiman-imtiaz"},"content":"        return userCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":286,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":287,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":288,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":289,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":290,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":291,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"aiman-imtiaz":57,"zhenster":55,"FaliciaOng":59,"XunyiiZ":46,"siewyangzhi":74}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2022-04-02"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"import seedu.duke.command.customercommands.AddSatisfactionCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.housekeepercommands.AddAvailabilityCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.housekeepercommands.AddHousekeeperCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.housekeepercommands.AgeIncreaseCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.housekeepercommands.ResetAvailabilityCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.housekeepercommands.DeleteHousekeeperCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"import seedu.duke.command.housekeepercommands.AddHousekeeperPerformanceCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.itemcommands.AddItemCommand;","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.itemcommands.DeleteItemCommand;","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.itemcommands.UpdateItemNameCommand;","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.itemcommands.UpdateItemPaxCommand;","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.command.roomcommand.CheckAllRoomCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.command.roomcommand.CheckInCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.command.roomcommand.CheckOutCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.command.roomcommand.CheckRoomByCatCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.command.roomcommand.CheckRoomByLevelCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.command.roomcommand.CheckRoomCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.roomlists.RoomList;","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.storage.RoomFileManager;","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"     * Updates the list saved within the respective files based on the type of command the user has inputted.","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"     * @param command       The command object that was constructed by the command parser based on the command the user","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"     *                      inputted.","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"     * @param listContainer The object containing the lists to update depending on the command inputted by the user.","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"     * @throws IOException if we are unable to write to the respective file found within the ListFolder directory.","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"XunyiiZ"},"content":"    private void writeListsToFile(Command command, ListContainer listContainer)","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"XunyiiZ"},"content":"            throws IOException, HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"XunyiiZ"},"content":"        if (command instanceof AddItemCommand || command instanceof UpdateItemPaxCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"XunyiiZ"},"content":"                || command instanceof UpdateItemNameCommand || command instanceof UpdateItemNameCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"XunyiiZ"},"content":"                || command instanceof DeleteItemCommand) {","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"            writeItemListsToFile(command, listContainer);","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"        } else if (command instanceof AddAvailabilityCommand || command instanceof AddHousekeeperCommand || command","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"                instanceof AgeIncreaseCommand || command instanceof ResetAvailabilityCommand || command","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"                instanceof DeleteHousekeeperCommand || command instanceof AddHousekeeperPerformanceCommand) {","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"            writeHousekeeperListsToFile(command, listContainer);","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"XunyiiZ"},"content":"        } else if (command instanceof CheckAllRoomCommand || command instanceof CheckInCommand || command","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"XunyiiZ"},"content":"                instanceof CheckOutCommand || command instanceof CheckRoomByCatCommand || command","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"XunyiiZ"},"content":"                instanceof CheckRoomByLevelCommand || command instanceof CheckRoomCommand) {","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"XunyiiZ"},"content":"            writeRoomListToFile(listContainer);","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"        } else if (command instanceof AddSatisfactionCommand) {","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"            writeSatisfactionListsToFile(command, listContainer);","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"FaliciaOng"},"content":"     * Updates the list saved within the respective files based on the type of housekeeper related","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"FaliciaOng"},"content":"     * commands given by the user.","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"FaliciaOng"},"content":"     * @param command       The command object that was constructed by the command parser based on the command the user","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"FaliciaOng"},"content":"     *                      inputted.","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"FaliciaOng"},"content":"     * @param listContainer The object containing the lists to update depending on the command inputted by the user.","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"FaliciaOng"},"content":"     * @throws IOException if we are unable to write to the respective file found within the ListFolder directory.","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"FaliciaOng"},"content":"    private void writeHousekeeperListsToFile(Command command, ListContainer listContainer) throws IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"FaliciaOng"},"content":"        if (command instanceof AddHousekeeperCommand) {","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"FaliciaOng"},"content":"            AddHousekeeperCommand addHousekeeperCommand \u003d (AddHousekeeperCommand) command;","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"FaliciaOng"},"content":"            addHousekeeperCommand.writeHousekeeperToFile(listContainer);","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"FaliciaOng"},"content":"        } else if (command instanceof AddAvailabilityCommand) {","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"FaliciaOng"},"content":"            AddAvailabilityCommand addAvailabilityCommand \u003d (AddAvailabilityCommand) command;","lastModifiedDate":"2022-04-11"},{"lineNumber":72,"author":{"gitId":"FaliciaOng"},"content":"            addAvailabilityCommand.writeAvailabilityToFile(listContainer);","lastModifiedDate":"2022-04-11"},{"lineNumber":73,"author":{"gitId":"FaliciaOng"},"content":"        } else if (command instanceof AgeIncreaseCommand) {","lastModifiedDate":"2022-04-11"},{"lineNumber":74,"author":{"gitId":"FaliciaOng"},"content":"            AgeIncreaseCommand ageIncreaseCommand \u003d (AgeIncreaseCommand) command;","lastModifiedDate":"2022-04-11"},{"lineNumber":75,"author":{"gitId":"FaliciaOng"},"content":"            ageIncreaseCommand.writeAgeIncreaseToFile(listContainer);","lastModifiedDate":"2022-04-11"},{"lineNumber":76,"author":{"gitId":"FaliciaOng"},"content":"        } else if (command instanceof DeleteHousekeeperCommand) {","lastModifiedDate":"2022-04-11"},{"lineNumber":77,"author":{"gitId":"FaliciaOng"},"content":"            DeleteHousekeeperCommand deleteHousekeeperCommand \u003d (DeleteHousekeeperCommand) command;","lastModifiedDate":"2022-04-11"},{"lineNumber":78,"author":{"gitId":"FaliciaOng"},"content":"            deleteHousekeeperCommand.writeHousekeeperToFile(listContainer);","lastModifiedDate":"2022-04-11"},{"lineNumber":79,"author":{"gitId":"FaliciaOng"},"content":"        } else if (command instanceof ResetAvailabilityCommand) {","lastModifiedDate":"2022-04-11"},{"lineNumber":80,"author":{"gitId":"FaliciaOng"},"content":"            ResetAvailabilityCommand resetAvailabilityCommand \u003d (ResetAvailabilityCommand) command;","lastModifiedDate":"2022-04-11"},{"lineNumber":81,"author":{"gitId":"FaliciaOng"},"content":"            resetAvailabilityCommand.writeHousekeeperToFile(listContainer);","lastModifiedDate":"2022-04-11"},{"lineNumber":82,"author":{"gitId":"zhenster"},"content":"        } else if (command instanceof AddHousekeeperPerformanceCommand) {","lastModifiedDate":"2022-04-11"},{"lineNumber":83,"author":{"gitId":"zhenster"},"content":"            AddHousekeeperPerformanceCommand addHousekeeperPerformanceCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":84,"author":{"gitId":"zhenster"},"content":"                    \u003d (AddHousekeeperPerformanceCommand) command;","lastModifiedDate":"2022-04-11"},{"lineNumber":85,"author":{"gitId":"zhenster"},"content":"            addHousekeeperPerformanceCommand.writeHousekeeperPerformanceListToFile(listContainer);","lastModifiedDate":"2022-04-11"},{"lineNumber":86,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-04-11"},{"lineNumber":87,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":88,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":89,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":90,"author":{"gitId":"XunyiiZ"},"content":"    private void writeRoomListToFile(ListContainer listContainer) throws IOException, HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":91,"author":{"gitId":"XunyiiZ"},"content":"        RoomList roomList \u003d listContainer.getRoomList();","lastModifiedDate":"2022-04-11"},{"lineNumber":92,"author":{"gitId":"XunyiiZ"},"content":"        RoomFileManager fileManager \u003d new RoomFileManager();","lastModifiedDate":"2022-04-11"},{"lineNumber":93,"author":{"gitId":"XunyiiZ"},"content":"        fileManager.save(roomList.getRoomList());","lastModifiedDate":"2022-04-11"},{"lineNumber":94,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":95,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":96,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":97,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":98,"author":{"gitId":"siewyangzhi"},"content":"     * Updates the item list saved within the file ListFolder/ItemList.txt with the current item list.","lastModifiedDate":"2022-04-11"},{"lineNumber":99,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":100,"author":{"gitId":"siewyangzhi"},"content":"     * @param command       The command object that was constructed by the command parser based on the command the user","lastModifiedDate":"2022-04-11"},{"lineNumber":101,"author":{"gitId":"siewyangzhi"},"content":"     *                      inputted.","lastModifiedDate":"2022-04-11"},{"lineNumber":102,"author":{"gitId":"siewyangzhi"},"content":"     * @param listContainer The object containing the data structure necessary to update the ItemList stored within","lastModifiedDate":"2022-04-11"},{"lineNumber":103,"author":{"gitId":"siewyangzhi"},"content":"     *                      the ListFolder/ItemList.txt file.","lastModifiedDate":"2022-04-11"},{"lineNumber":104,"author":{"gitId":"siewyangzhi"},"content":"     *                      In this case, we require access to the ItemList object which is within listContainer.","lastModifiedDate":"2022-04-11"},{"lineNumber":105,"author":{"gitId":"siewyangzhi"},"content":"     * @throws IOException if we are unable to write to the file ListFolder/ItemList.txt","lastModifiedDate":"2022-04-11"},{"lineNumber":106,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":107,"author":{"gitId":"siewyangzhi"},"content":"    private void writeItemListsToFile(Command command, ListContainer listContainer) throws IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":108,"author":{"gitId":"siewyangzhi"},"content":"        if (command instanceof AddItemCommand) {","lastModifiedDate":"2022-04-10"},{"lineNumber":109,"author":{"gitId":"siewyangzhi"},"content":"            AddItemCommand addItemCommand \u003d (AddItemCommand) command;","lastModifiedDate":"2022-04-10"},{"lineNumber":110,"author":{"gitId":"siewyangzhi"},"content":"            addItemCommand.writeItemListToFile(listContainer);","lastModifiedDate":"2022-04-10"},{"lineNumber":111,"author":{"gitId":"siewyangzhi"},"content":"        } else if (command instanceof UpdateItemPaxCommand) {","lastModifiedDate":"2022-04-10"},{"lineNumber":112,"author":{"gitId":"siewyangzhi"},"content":"            UpdateItemPaxCommand updateItemPaxCommand \u003d (UpdateItemPaxCommand) command;","lastModifiedDate":"2022-04-10"},{"lineNumber":113,"author":{"gitId":"siewyangzhi"},"content":"            updateItemPaxCommand.writeItemListToFile(listContainer);","lastModifiedDate":"2022-04-10"},{"lineNumber":114,"author":{"gitId":"siewyangzhi"},"content":"        } else if (command instanceof UpdateItemNameCommand) {","lastModifiedDate":"2022-04-10"},{"lineNumber":115,"author":{"gitId":"siewyangzhi"},"content":"            UpdateItemNameCommand updateItemNameCommand \u003d (UpdateItemNameCommand) command;","lastModifiedDate":"2022-04-10"},{"lineNumber":116,"author":{"gitId":"siewyangzhi"},"content":"            updateItemNameCommand.writeItemListToFile(listContainer);","lastModifiedDate":"2022-04-10"},{"lineNumber":117,"author":{"gitId":"siewyangzhi"},"content":"        } else if (command instanceof DeleteItemCommand) {","lastModifiedDate":"2022-04-10"},{"lineNumber":118,"author":{"gitId":"siewyangzhi"},"content":"            DeleteItemCommand deleteItemNameCommand \u003d (DeleteItemCommand) command;","lastModifiedDate":"2022-04-10"},{"lineNumber":119,"author":{"gitId":"siewyangzhi"},"content":"            deleteItemNameCommand.writeItemListToFile(listContainer);","lastModifiedDate":"2022-04-10"},{"lineNumber":120,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-04-10"},{"lineNumber":121,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":122,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":123,"author":{"gitId":"zhenster"},"content":"    private void writeSatisfactionListsToFile(Command command, ListContainer listContainer) throws IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":124,"author":{"gitId":"zhenster"},"content":"        if (command instanceof AddSatisfactionCommand) {","lastModifiedDate":"2022-04-11"},{"lineNumber":125,"author":{"gitId":"zhenster"},"content":"            AddSatisfactionCommand addSatisfactionCommand \u003d (AddSatisfactionCommand) command;","lastModifiedDate":"2022-04-11"},{"lineNumber":126,"author":{"gitId":"zhenster"},"content":"            addSatisfactionCommand.writeSatisfactionListToFile(listContainer);","lastModifiedDate":"2022-04-11"},{"lineNumber":127,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-04-11"},{"lineNumber":128,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":129,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":130,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":131,"author":{"gitId":"siewyangzhi"},"content":"     * The primary method that the duke program executes.","lastModifiedDate":"2022-04-11"},{"lineNumber":132,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":133,"author":{"gitId":"siewyangzhi"},"content":"    private void run() {","lastModifiedDate":"2022-03-13"},{"lineNumber":134,"author":{"gitId":"siewyangzhi"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"siewyangzhi"},"content":"        ui.printGreeting();","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"FaliciaOng"},"content":"        CommandParser commandParser \u003d new CommandParser();","lastModifiedDate":"2022-03-13"},{"lineNumber":137,"author":{"gitId":"XunyiiZ"},"content":"        ListContainer listContainer \u003d null;","lastModifiedDate":"2022-03-28"},{"lineNumber":138,"author":{"gitId":"XunyiiZ"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":139,"author":{"gitId":"XunyiiZ"},"content":"            listContainer \u003d new ListContainer();","lastModifiedDate":"2022-03-28"},{"lineNumber":140,"author":{"gitId":"XunyiiZ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":141,"author":{"gitId":"XunyiiZ"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-28"},{"lineNumber":142,"author":{"gitId":"siewyangzhi"},"content":"        } catch (HotelLiteManagerException e) {","lastModifiedDate":"2022-03-30"},{"lineNumber":143,"author":{"gitId":"siewyangzhi"},"content":"            ui.printErrorMessage(e);","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":145,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":146,"author":{"gitId":"FaliciaOng"},"content":"        boolean shouldExitProgram \u003d false;","lastModifiedDate":"2022-03-13"},{"lineNumber":147,"author":{"gitId":"siewyangzhi"},"content":"        String userInput;","lastModifiedDate":"2022-03-13"},{"lineNumber":148,"author":{"gitId":"FaliciaOng"},"content":"        while (!shouldExitProgram) {","lastModifiedDate":"2022-03-13"},{"lineNumber":149,"author":{"gitId":"siewyangzhi"},"content":"            Command command \u003d null;","lastModifiedDate":"2022-04-10"},{"lineNumber":150,"author":{"gitId":"FaliciaOng"},"content":"            try {","lastModifiedDate":"2022-03-13"},{"lineNumber":151,"author":{"gitId":"siewyangzhi"},"content":"                userInput \u003d ui.readUserInput();","lastModifiedDate":"2022-03-13"},{"lineNumber":152,"author":{"gitId":"siewyangzhi"},"content":"                command \u003d commandParser.parse(userInput);","lastModifiedDate":"2022-04-10"},{"lineNumber":153,"author":{"gitId":"XunyiiZ"},"content":"                command.execute(listContainer, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":154,"author":{"gitId":"siewyangzhi"},"content":"                writeListsToFile(command, listContainer);","lastModifiedDate":"2022-04-10"},{"lineNumber":155,"author":{"gitId":"FaliciaOng"},"content":"                shouldExitProgram \u003d command.isExit();","lastModifiedDate":"2022-03-13"},{"lineNumber":156,"author":{"gitId":"siewyangzhi"},"content":"            } catch (HotelLiteManagerException e) {","lastModifiedDate":"2022-03-14"},{"lineNumber":157,"author":{"gitId":"siewyangzhi"},"content":"                ui.printErrorMessage(e);","lastModifiedDate":"2022-03-14"},{"lineNumber":158,"author":{"gitId":"XunyiiZ"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":159,"author":{"gitId":"XunyiiZ"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"FaliciaOng"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":161,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":162,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":163,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2022-04-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-03-13"},{"lineNumber":168,"author":{"gitId":"FaliciaOng"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2022-04-02"},{"lineNumber":169,"author":{"gitId":"siewyangzhi"},"content":"        new Duke().run();","lastModifiedDate":"2022-03-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"zhenster":18,"FaliciaOng":45,"XunyiiZ":34,"siewyangzhi":62,"-":12}},{"path":"src/main/java/seedu/duke/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"    public ExitCommand() {","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"        isExit \u003d true;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"        System.out.println(\"see u again!\");","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"zhenster":1,"FaliciaOng":11,"siewyangzhi":3}},{"path":"src/main/java/seedu/duke/ListContainer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.HousekeeperList;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperperformancelists.HousekeeperPerformanceList;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.itemlists.ItemList;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.eventlists.EventList;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.eventlists.Event;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.roomlists.Room;","lastModifiedDate":"2022-04-02"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.roomlists.RoomList;","lastModifiedDate":"2022-04-02"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.satisfactionlists.SatisfactionList;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"import seedu.duke.storage.AssignmentListFileManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"import seedu.duke.storage.RoomFileManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"import seedu.duke.storage.EventListFileManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"import seedu.duke.storage.ItemListFileManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"import seedu.duke.storage.SatisfactionListFileManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"import seedu.duke.storage.HousekeeperPerformanceFileManager;","lastModifiedDate":"2022-04-03"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.storage.HousekeeperFileManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"public class ListContainer {","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"    private HousekeeperList housekeeperList;","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"    private HousekeeperPerformanceList housekeeperPerformanceList;","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"    private SatisfactionList satisfactionList;","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"    private AssignmentMap assignmentMap;","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"    private RoomList roomList;","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"XunyiiZ"},"content":"    private ItemList itemList;","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"aiman-imtiaz"},"content":"    private EventList eventList;","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"    public ListContainer() throws IOException, HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"XunyiiZ"},"content":"        satisfactionList \u003d new SatisfactionList();","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"XunyiiZ"},"content":"        housekeeperList \u003d new HousekeeperList();","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"XunyiiZ"},"content":"        housekeeperPerformanceList \u003d new HousekeeperPerformanceList();","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"XunyiiZ"},"content":"        AssignmentListFileManager assignmentListFileManager \u003d new AssignmentListFileManager();","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"XunyiiZ"},"content":"        HashMap\u003cInteger,String\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"XunyiiZ"},"content":"        assignmentListFileManager.load(map);","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"XunyiiZ"},"content":"        assignmentMap \u003d new AssignmentMap(map);","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"XunyiiZ"},"content":"        RoomFileManager roomFileManager \u003d new RoomFileManager();","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"XunyiiZ"},"content":"        ArrayList\u003cRoom\u003e roomArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"XunyiiZ"},"content":"        roomFileManager.load(roomArrayList);","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"XunyiiZ"},"content":"        roomList \u003d new RoomList(roomArrayList);","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"aiman-imtiaz"},"content":"        EventListFileManager eventFileManager \u003d new EventListFileManager();","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"aiman-imtiaz"},"content":"        ArrayList\u003cEvent\u003e eventArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"aiman-imtiaz"},"content":"        eventFileManager.load(eventArrayList);","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"aiman-imtiaz"},"content":"        eventList \u003d new EventList(eventArrayList);","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"siewyangzhi"},"content":"        ItemListFileManager itemListFileManager \u003d new ItemListFileManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"siewyangzhi"},"content":"        itemList \u003d itemListFileManager.load();","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperFileManager housekeeperFileManager \u003d new HousekeeperFileManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList \u003d housekeeperFileManager.load();","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"zhenster"},"content":"        HousekeeperPerformanceFileManager housekeeperPerformanceFileManager \u003d new HousekeeperPerformanceFileManager();","lastModifiedDate":"2022-04-03"},{"lineNumber":61,"author":{"gitId":"zhenster"},"content":"        housekeeperPerformanceList \u003d housekeeperPerformanceFileManager.load();","lastModifiedDate":"2022-04-03"},{"lineNumber":62,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"        SatisfactionListFileManager satisfactionListFileManager \u003d new SatisfactionListFileManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"        satisfactionList \u003d satisfactionListFileManager.load();","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"XunyiiZ"},"content":"    public HousekeeperList getHousekeeperList() {","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"XunyiiZ"},"content":"        return housekeeperList;","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"XunyiiZ"},"content":"    public HousekeeperPerformanceList getHousekeeperPerformanceList() {","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"XunyiiZ"},"content":"        return housekeeperPerformanceList;","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"XunyiiZ"},"content":"    public SatisfactionList getSatisfactionList() {","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"XunyiiZ"},"content":"        return satisfactionList;","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"XunyiiZ"},"content":"    public AssignmentMap getAssignmentMap() {","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"XunyiiZ"},"content":"        return assignmentMap;","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"XunyiiZ"},"content":"    public RoomList getRoomList() {","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"XunyiiZ"},"content":"        return roomList;","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"XunyiiZ"},"content":"    public ItemList getItemList() {","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"XunyiiZ"},"content":"        return itemList;","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"aiman-imtiaz"},"content":"    public EventList getEventList() {","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"aiman-imtiaz"},"content":"        return eventList;","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"zhenster":13,"aiman-imtiaz":13,"FaliciaOng":10,"XunyiiZ":58,"siewyangzhi":3}},{"path":"src/main/java/seedu/duke/ParsingUtils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-04-05"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-04-05"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":" * Contains common parsing helper methods.","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-04-05"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"public class ParsingUtils {","lastModifiedDate":"2022-04-05"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"    private static final String DELIMITER \u003d \"/\";","lastModifiedDate":"2022-04-05"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-04-05"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"     * Counts the number of delimiters in a string.","lastModifiedDate":"2022-04-05"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"     * @param string The given string.","lastModifiedDate":"2022-04-05"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"     * @return The number of slashes in the string.","lastModifiedDate":"2022-04-05"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-04-05"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"    public int countSlashes(String string) {","lastModifiedDate":"2022-04-05"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"        int slashCount \u003d 0;","lastModifiedDate":"2022-04-05"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"        for (int i \u003d 0; i \u003c string.length(); i++) {","lastModifiedDate":"2022-04-05"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"            String curChar \u003d Character.toString(string.charAt(i));","lastModifiedDate":"2022-04-05"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"            if (curChar.equals(DELIMITER)) {","lastModifiedDate":"2022-04-05"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"                slashCount +\u003d 1;","lastModifiedDate":"2022-04-05"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-04-05"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"        return slashCount;","lastModifiedDate":"2022-04-05"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-04-05"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"     * Checks if a string contains only alphabetical characters.","lastModifiedDate":"2022-04-05"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"     * Useful for checking the validity of names.","lastModifiedDate":"2022-04-05"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"     * @param string The given string.","lastModifiedDate":"2022-04-05"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"     * @return A boolean (true if the string contains only alphabetical characters, false otherwise).","lastModifiedDate":"2022-04-05"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-04-05"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"    public boolean isAlpha(String string) {","lastModifiedDate":"2022-04-05"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"        String stringWithoutSpaces \u003d string.replaceAll(\"\\\\s+\", \"\");","lastModifiedDate":"2022-04-05"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"        return stringWithoutSpaces.matches(\"[a-zA-Z]+\");","lastModifiedDate":"2022-04-05"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-04-05"}],"authorContributionMap":{"zhenster":36}},{"path":"src/main/java/seedu/duke/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.Housekeeper;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.HousekeeperList;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperperformancelists.HousekeeperPerformance;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperperformancelists.HousekeeperPerformanceList;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.itemlists.Item;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.itemlists.ItemList;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.eventlists.Event;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.satisfactionlists.Satisfaction;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.satisfactionlists.SatisfactionList;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":" * Represents the User Interface component of the program.","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":" * The Ui object handles all interactions with the user such as printing the outputs to the user","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":" * as well as reading in the user inputs .","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"public class Ui {","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"    private Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"    private static final int ARRAY_INDEX_OFFSET \u003d 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"    private static final String LINE \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2022-04-02"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ITEM_LIST_HEADER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Item List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"    private static final String END_OF_LIST_LINE \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"    private static final String MESSAGE_HEADER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"    private static final String END_OF_MESSAGE_LINE \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"    private static final String TABLE_HEADER \u003d String.format(\"%-15s%-15s%-15s%-15s%-15s\", \"Type\",","lastModifiedDate":"2022-04-02"},{"lineNumber":31,"author":{"gitId":"XunyiiZ"},"content":"            \"Room Id\", \"Level\", \"Status\", \"Housekeeper\");","lastModifiedDate":"2022-04-02"},{"lineNumber":32,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"     * Returns a string containing the user input.","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"     * @return User input","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"    public String readUserInput() {","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"        String userInput \u003d in.nextLine();","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"        return userInput;","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"aiman-imtiaz"},"content":"    public void printHelp(String message) {","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"aiman-imtiaz"},"content":"        System.out.println(MESSAGE_HEADER);","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"aiman-imtiaz"},"content":"        System.out.println(message);","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"aiman-imtiaz"},"content":"        System.out.println(END_OF_MESSAGE_LINE);","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"aiman-imtiaz"},"content":"    public void printEventAdded(Event event) {","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(MESSAGE_HEADER);","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"aiman-imtiaz"},"content":"        System.out.println(\"I have added the following event in your list:\");","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"aiman-imtiaz"},"content":"        System.out.println(\"\\t\" + event.toString());","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(END_OF_MESSAGE_LINE);","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"aiman-imtiaz"},"content":"    public void printAllEvents(ArrayList\u003cEvent\u003e events) {","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(MESSAGE_HEADER);","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"aiman-imtiaz"},"content":"        System.out.println(\"Here are all the events in your list:\");","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"aiman-imtiaz"},"content":"        int j \u003d 0;","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"aiman-imtiaz"},"content":"        for (Event event : events) {","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"aiman-imtiaz"},"content":"            j \u003d j + 1;","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"aiman-imtiaz"},"content":"            System.out.println(\"\\t\" + j + \". \" + event.toString());","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(END_OF_MESSAGE_LINE);","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"aiman-imtiaz"},"content":"    public void printGreeting() {","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"aiman-imtiaz"},"content":"        int row \u003d 5;","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"aiman-imtiaz"},"content":"        int i;","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"aiman-imtiaz"},"content":"        int j;","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"aiman-imtiaz"},"content":"        int space \u003d row - 1;","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"aiman-imtiaz"},"content":"        for (j \u003d 1; j \u003c\u003d row; j++) {","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"aiman-imtiaz"},"content":"            for (i \u003d 1; i \u003c\u003d space; i++) {","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"aiman-imtiaz"},"content":"                System.out.print(\" \");","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"aiman-imtiaz"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"aiman-imtiaz"},"content":"            space--;","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"aiman-imtiaz"},"content":"            for (i \u003d 1; i \u003c\u003d 2 * j - 1; i++) {","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"aiman-imtiaz"},"content":"                System.out.print(\"*\");","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"aiman-imtiaz"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"aiman-imtiaz"},"content":"            System.out.println(\"\");","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"aiman-imtiaz"},"content":"        space \u003d 1;","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"aiman-imtiaz"},"content":"        for (j \u003d 1; j \u003c\u003d row - 1; j++) {","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"aiman-imtiaz"},"content":"            for (i \u003d 1; i \u003c\u003d space; i++) {","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"aiman-imtiaz"},"content":"                System.out.print(\" \");","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"aiman-imtiaz"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"aiman-imtiaz"},"content":"            space++;","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"aiman-imtiaz"},"content":"            for (i \u003d 1; i \u003c\u003d 2 * (row - j) - 1; i++) {","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"aiman-imtiaz"},"content":"                System.out.print(\"*\");","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"aiman-imtiaz"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"aiman-imtiaz"},"content":"            System.out.println(\"\");","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"aiman-imtiaz"},"content":"        System.out.println(\"Hi, I am Hotel Lite, and \"","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"aiman-imtiaz"},"content":"                + \"I will do the managing for you.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"aiman-imtiaz"},"content":"        System.out.println(\"What shall we start with today?\");","lastModifiedDate":"2022-04-11"},{"lineNumber":96,"author":{"gitId":"aiman-imtiaz"},"content":"        System.out.println(\"(You may type \u0027help\u0027 to get a full \"","lastModifiedDate":"2022-04-11"},{"lineNumber":97,"author":{"gitId":"aiman-imtiaz"},"content":"                + \"list of commands.)\");","lastModifiedDate":"2022-04-11"},{"lineNumber":98,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"aiman-imtiaz"},"content":"    public void printEventDeleted(Event event) {","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(MESSAGE_HEADER);","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"aiman-imtiaz"},"content":"        System.out.println(\"I have deleted the following event from your list:\");","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"aiman-imtiaz"},"content":"        System.out.println(\"\\t\" + event.toString());","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(END_OF_MESSAGE_LINE);","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"aiman-imtiaz"},"content":"    public void printAssignedHousekeeper(String roomID, String name) {","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(MESSAGE_HEADER);","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"aiman-imtiaz"},"content":"        System.out.println(\"I have assigned \" + name","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"aiman-imtiaz"},"content":"                + \" to room number \" + roomID + \".\");","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(END_OF_MESSAGE_LINE);","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":116,"author":{"gitId":"siewyangzhi"},"content":"     * Prints out the error message associated with the exception that is passed into the function.","lastModifiedDate":"2022-04-11"},{"lineNumber":117,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":118,"author":{"gitId":"siewyangzhi"},"content":"     * @param exception The exception whose error message the program wants to print out.","lastModifiedDate":"2022-04-11"},{"lineNumber":119,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":120,"author":{"gitId":"siewyangzhi"},"content":"    public void printErrorMessage(HotelLiteManagerException exception) {","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(exception.getErrorMessage());","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"FaliciaOng"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"FaliciaOng"},"content":"        System.out.println(message);","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":129,"author":{"gitId":"FaliciaOng"},"content":"     * Uses toString method from the housekeeper class to print the name, age and available of the housekeeper to be","lastModifiedDate":"2022-04-11"},{"lineNumber":130,"author":{"gitId":"FaliciaOng"},"content":"     * added into the list.","lastModifiedDate":"2022-04-11"},{"lineNumber":131,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":132,"author":{"gitId":"FaliciaOng"},"content":"     * @param housekeeper Housekeeper to be added into list.","lastModifiedDate":"2022-04-11"},{"lineNumber":133,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":134,"author":{"gitId":"FaliciaOng"},"content":"    public void printHousekeeperNoted(Housekeeper housekeeper) {","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(MESSAGE_HEADER);","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"FaliciaOng"},"content":"        System.out.println(housekeeper);","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(END_OF_MESSAGE_LINE);","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":139,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":140,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"siewyangzhi"},"content":"     * Prints out an acknowledgement message to inform the user that the item has been added to the item list as well","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"siewyangzhi"},"content":"     * as the number of items within the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"siewyangzhi"},"content":"     * @param listOfItems The item list containing all the items in the inventory.","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"siewyangzhi"},"content":"    public void printAddItemAcknowledgementMessage(ItemList listOfItems) {","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(MESSAGE_HEADER);","lastModifiedDate":"2022-03-30"},{"lineNumber":148,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(\"The item and its pax has been added to the item list.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":149,"author":{"gitId":"siewyangzhi"},"content":"        assert (listOfItems.getSize() \u003e 0) : \"Assertion Failed! Number of items in the item list is 0 after an item \"","lastModifiedDate":"2022-03-17"},{"lineNumber":150,"author":{"gitId":"siewyangzhi"},"content":"                + \"was added to it.\";","lastModifiedDate":"2022-03-17"},{"lineNumber":151,"author":{"gitId":"siewyangzhi"},"content":"        System.out.printf(\"There are currently %d items within the item list.\\n\", listOfItems.getSize());","lastModifiedDate":"2022-03-29"},{"lineNumber":152,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(END_OF_MESSAGE_LINE);","lastModifiedDate":"2022-03-30"},{"lineNumber":153,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":156,"author":{"gitId":"siewyangzhi"},"content":"     * Prints out the item name ,pax as well as index for each item that is found within the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":157,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"siewyangzhi"},"content":"     * @param listOfItems The item list containing all the items in the inventory.","lastModifiedDate":"2022-03-16"},{"lineNumber":159,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":160,"author":{"gitId":"siewyangzhi"},"content":"    public void printItemList(ItemList listOfItems) {","lastModifiedDate":"2022-03-16"},{"lineNumber":161,"author":{"gitId":"siewyangzhi"},"content":"        String itemName;","lastModifiedDate":"2022-03-16"},{"lineNumber":162,"author":{"gitId":"siewyangzhi"},"content":"        int itemPax;","lastModifiedDate":"2022-03-16"},{"lineNumber":163,"author":{"gitId":"siewyangzhi"},"content":"        Item currentItem;","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"siewyangzhi"},"content":"        int currentListIndex;","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(ITEM_LIST_HEADER);","lastModifiedDate":"2022-03-29"},{"lineNumber":166,"author":{"gitId":"siewyangzhi"},"content":"        if (listOfItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2022-03-29"},{"lineNumber":167,"author":{"gitId":"siewyangzhi"},"content":"            System.out.println(\"No item found within the item list.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":168,"author":{"gitId":"siewyangzhi"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"siewyangzhi"},"content":"            for (int i \u003d 0; i \u003c listOfItems.getSize(); i++) {","lastModifiedDate":"2022-03-16"},{"lineNumber":170,"author":{"gitId":"siewyangzhi"},"content":"                currentItem \u003d listOfItems.getItem(i);","lastModifiedDate":"2022-03-16"},{"lineNumber":171,"author":{"gitId":"siewyangzhi"},"content":"                itemName \u003d currentItem.getName();","lastModifiedDate":"2022-03-16"},{"lineNumber":172,"author":{"gitId":"siewyangzhi"},"content":"                itemName \u003d itemName.toUpperCase();","lastModifiedDate":"2022-03-29"},{"lineNumber":173,"author":{"gitId":"siewyangzhi"},"content":"                itemPax \u003d currentItem.getPax();","lastModifiedDate":"2022-03-16"},{"lineNumber":174,"author":{"gitId":"siewyangzhi"},"content":"                assert (itemPax \u003e\u003d 0) : \"Assertion Failed! Pax of an item within the listOfItems is less than 0 !\";","lastModifiedDate":"2022-03-17"},{"lineNumber":175,"author":{"gitId":"siewyangzhi"},"content":"                assert (!itemName.isEmpty()) : \"Assertion Failed! The name of the item within the listOfItems is empty \"","lastModifiedDate":"2022-03-29"},{"lineNumber":176,"author":{"gitId":"siewyangzhi"},"content":"                        + \"!\";","lastModifiedDate":"2022-03-29"},{"lineNumber":177,"author":{"gitId":"siewyangzhi"},"content":"                currentListIndex \u003d i + ARRAY_INDEX_OFFSET;","lastModifiedDate":"2022-03-16"},{"lineNumber":178,"author":{"gitId":"siewyangzhi"},"content":"                System.out.printf(\"%d. Item Name: %s Item Pax: %d\\n\", currentListIndex, itemName, itemPax);","lastModifiedDate":"2022-03-16"},{"lineNumber":179,"author":{"gitId":"siewyangzhi"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":180,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":181,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(END_OF_LIST_LINE);","lastModifiedDate":"2022-03-29"},{"lineNumber":182,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":183,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":184,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":185,"author":{"gitId":"siewyangzhi"},"content":"     * Prints out an acknowledgement message saying that there were no items within the item list that matches the","lastModifiedDate":"2022-04-11"},{"lineNumber":186,"author":{"gitId":"siewyangzhi"},"content":"     * user specified criteria.","lastModifiedDate":"2022-04-11"},{"lineNumber":187,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":188,"author":{"gitId":"siewyangzhi"},"content":"    public void printNoItemsFoundInListAcknowledgementMessage() {","lastModifiedDate":"2022-03-28"},{"lineNumber":189,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(MESSAGE_HEADER);","lastModifiedDate":"2022-03-30"},{"lineNumber":190,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(\"No Item matching the criteria has been found.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":191,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(END_OF_MESSAGE_LINE);","lastModifiedDate":"2022-03-30"},{"lineNumber":192,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":193,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":194,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":195,"author":{"gitId":"FaliciaOng"},"content":"     * This method prints the name, age and availability of each housekeeper in the list.","lastModifiedDate":"2022-04-11"},{"lineNumber":196,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":197,"author":{"gitId":"FaliciaOng"},"content":"     * @param housekeeperList Contains the list of housekeeper\u0027s profiles.","lastModifiedDate":"2022-04-11"},{"lineNumber":198,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":199,"author":{"gitId":"FaliciaOng"},"content":"    public void printHousekeeperList(HousekeeperList housekeeperList) {","lastModifiedDate":"2022-03-16"},{"lineNumber":200,"author":{"gitId":"FaliciaOng"},"content":"        printMessage(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Housekeeper List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-30"},{"lineNumber":201,"author":{"gitId":"FaliciaOng"},"content":"        for (int i \u003d 0; i \u003c housekeeperList.getTotalHousekeeper(); i++) {","lastModifiedDate":"2022-03-16"},{"lineNumber":202,"author":{"gitId":"FaliciaOng"},"content":"            System.out.println((i + 1) + \". \" + housekeeperList.getHousekeeper(i));","lastModifiedDate":"2022-03-16"},{"lineNumber":203,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":204,"author":{"gitId":"FaliciaOng"},"content":"        printMessage(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-30"},{"lineNumber":205,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":206,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":207,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":208,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":209,"author":{"gitId":"FaliciaOng"},"content":"     * This method notifies user that every housekeeper availability has been rested and prints the list of housekeeper","lastModifiedDate":"2022-04-11"},{"lineNumber":210,"author":{"gitId":"FaliciaOng"},"content":"     * with their name, age and availability. The availability column seen should now be \u0027N/A\u0027.","lastModifiedDate":"2022-04-11"},{"lineNumber":211,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":212,"author":{"gitId":"FaliciaOng"},"content":"     * @param housekeeperList Contains the list of housekeeper\u0027s profiles.","lastModifiedDate":"2022-04-11"},{"lineNumber":213,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":214,"author":{"gitId":"FaliciaOng"},"content":"    public void printHousekeeperListReset(HousekeeperList housekeeperList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":215,"author":{"gitId":"FaliciaOng"},"content":"        printMessage(\"Housekeeper\u0027s availability has been reset!\");","lastModifiedDate":"2022-03-27"},{"lineNumber":216,"author":{"gitId":"FaliciaOng"},"content":"        printHousekeeperList(housekeeperList);","lastModifiedDate":"2022-03-27"},{"lineNumber":217,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":218,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":219,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":220,"author":{"gitId":"FaliciaOng"},"content":"     * Given the day interested from the user, this method will print the list of housekeeper available on the","lastModifiedDate":"2022-04-11"},{"lineNumber":221,"author":{"gitId":"FaliciaOng"},"content":"     * day of interest.","lastModifiedDate":"2022-04-11"},{"lineNumber":222,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":223,"author":{"gitId":"FaliciaOng"},"content":"     * @param housekeeperPrintList Contains the list of housekeeper\u0027s profiles.","lastModifiedDate":"2022-04-11"},{"lineNumber":224,"author":{"gitId":"FaliciaOng"},"content":"     * @param dayInteger           The Day user is interested to know which housekeepers are available.","lastModifiedDate":"2022-04-11"},{"lineNumber":225,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":226,"author":{"gitId":"FaliciaOng"},"content":"    public void printFoundHousekeeperList(ArrayList\u003cHousekeeper\u003e housekeeperPrintList, int dayInteger) {","lastModifiedDate":"2022-03-27"},{"lineNumber":227,"author":{"gitId":"FaliciaOng"},"content":"        String day \u003d getDayInString(dayInteger);","lastModifiedDate":"2022-03-27"},{"lineNumber":228,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":229,"author":{"gitId":"FaliciaOng"},"content":"        printMessage(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d \" + day + \" List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-30"},{"lineNumber":230,"author":{"gitId":"FaliciaOng"},"content":"        if (housekeeperPrintList.isEmpty()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":231,"author":{"gitId":"FaliciaOng"},"content":"            printMessage(\"TAKE NOTE! NO ONE IS AVAILABLE!!\");","lastModifiedDate":"2022-03-27"},{"lineNumber":232,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":233,"author":{"gitId":"FaliciaOng"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-03-27"},{"lineNumber":234,"author":{"gitId":"FaliciaOng"},"content":"        for (Housekeeper housekeeper : housekeeperPrintList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":235,"author":{"gitId":"FaliciaOng"},"content":"            System.out.println(i + \". \" + housekeeper.getName());","lastModifiedDate":"2022-03-27"},{"lineNumber":236,"author":{"gitId":"FaliciaOng"},"content":"            i +\u003d 1;","lastModifiedDate":"2022-03-27"},{"lineNumber":237,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":238,"author":{"gitId":"FaliciaOng"},"content":"        printMessage(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-30"},{"lineNumber":239,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":240,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":241,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":242,"author":{"gitId":"FaliciaOng"},"content":"     * Converts the day from integer to their string equivalent. For example, 1 represents Monday.","lastModifiedDate":"2022-04-11"},{"lineNumber":243,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":244,"author":{"gitId":"FaliciaOng"},"content":"     * @param dayInteger Day given in integer.","lastModifiedDate":"2022-04-11"},{"lineNumber":245,"author":{"gitId":"FaliciaOng"},"content":"     * @return The actual name of the day in string.","lastModifiedDate":"2022-04-11"},{"lineNumber":246,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":247,"author":{"gitId":"FaliciaOng"},"content":"    private String getDayInString(int dayInteger) {","lastModifiedDate":"2022-03-27"},{"lineNumber":248,"author":{"gitId":"FaliciaOng"},"content":"        String day;","lastModifiedDate":"2022-03-27"},{"lineNumber":249,"author":{"gitId":"FaliciaOng"},"content":"        switch (dayInteger) {","lastModifiedDate":"2022-03-27"},{"lineNumber":250,"author":{"gitId":"FaliciaOng"},"content":"        case 1:","lastModifiedDate":"2022-03-27"},{"lineNumber":251,"author":{"gitId":"FaliciaOng"},"content":"            day \u003d \"Monday\";","lastModifiedDate":"2022-03-27"},{"lineNumber":252,"author":{"gitId":"FaliciaOng"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":253,"author":{"gitId":"FaliciaOng"},"content":"        case 2:","lastModifiedDate":"2022-03-27"},{"lineNumber":254,"author":{"gitId":"FaliciaOng"},"content":"            day \u003d \"Tuesday\";","lastModifiedDate":"2022-03-27"},{"lineNumber":255,"author":{"gitId":"FaliciaOng"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":256,"author":{"gitId":"FaliciaOng"},"content":"        case 3:","lastModifiedDate":"2022-03-27"},{"lineNumber":257,"author":{"gitId":"FaliciaOng"},"content":"            day \u003d \"Wednesday\";","lastModifiedDate":"2022-03-27"},{"lineNumber":258,"author":{"gitId":"FaliciaOng"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":259,"author":{"gitId":"FaliciaOng"},"content":"        case 4:","lastModifiedDate":"2022-03-27"},{"lineNumber":260,"author":{"gitId":"FaliciaOng"},"content":"            day \u003d \"Thursday\";","lastModifiedDate":"2022-03-27"},{"lineNumber":261,"author":{"gitId":"FaliciaOng"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":262,"author":{"gitId":"FaliciaOng"},"content":"        case 5:","lastModifiedDate":"2022-03-27"},{"lineNumber":263,"author":{"gitId":"FaliciaOng"},"content":"            day \u003d \"Friday\";","lastModifiedDate":"2022-03-27"},{"lineNumber":264,"author":{"gitId":"FaliciaOng"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":265,"author":{"gitId":"FaliciaOng"},"content":"        case 6:","lastModifiedDate":"2022-03-27"},{"lineNumber":266,"author":{"gitId":"FaliciaOng"},"content":"            day \u003d \"Saturday\";","lastModifiedDate":"2022-03-27"},{"lineNumber":267,"author":{"gitId":"FaliciaOng"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":268,"author":{"gitId":"FaliciaOng"},"content":"        case 7:","lastModifiedDate":"2022-03-27"},{"lineNumber":269,"author":{"gitId":"FaliciaOng"},"content":"            day \u003d \"Sunday\";","lastModifiedDate":"2022-03-27"},{"lineNumber":270,"author":{"gitId":"FaliciaOng"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":271,"author":{"gitId":"FaliciaOng"},"content":"        default:","lastModifiedDate":"2022-03-27"},{"lineNumber":272,"author":{"gitId":"FaliciaOng"},"content":"            day \u003d \"None of Day\";","lastModifiedDate":"2022-03-27"},{"lineNumber":273,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":274,"author":{"gitId":"FaliciaOng"},"content":"        return day;","lastModifiedDate":"2022-03-27"},{"lineNumber":275,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":276,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":277,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":278,"author":{"gitId":"FaliciaOng"},"content":"     * Prints the list of housekeepers who exceed age limit after user given the command to indicate a new year","lastModifiedDate":"2022-04-11"},{"lineNumber":279,"author":{"gitId":"FaliciaOng"},"content":"     * has started. It will also notifies user if none of the housekeeper\u0027s age has exceeded the age limit.","lastModifiedDate":"2022-04-11"},{"lineNumber":280,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":281,"author":{"gitId":"FaliciaOng"},"content":"     * @param housekeeperPrintList Consist the list of housekeeper whose age has exceed the age limit which is 61 and","lastModifiedDate":"2022-04-11"},{"lineNumber":282,"author":{"gitId":"FaliciaOng"},"content":"     *                             above.","lastModifiedDate":"2022-04-11"},{"lineNumber":283,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":284,"author":{"gitId":"FaliciaOng"},"content":"    public void printOverAgeList(ArrayList\u003cHousekeeper\u003e housekeeperPrintList) {","lastModifiedDate":"2022-03-28"},{"lineNumber":285,"author":{"gitId":"FaliciaOng"},"content":"        printMessage(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Age Limit Exceed List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-28"},{"lineNumber":286,"author":{"gitId":"FaliciaOng"},"content":"        if (housekeeperPrintList.isEmpty()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":287,"author":{"gitId":"FaliciaOng"},"content":"            printMessage(\"No one exceed age limit\");","lastModifiedDate":"2022-03-30"},{"lineNumber":288,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":289,"author":{"gitId":"FaliciaOng"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-03-28"},{"lineNumber":290,"author":{"gitId":"FaliciaOng"},"content":"        for (Housekeeper housekeeper : housekeeperPrintList) {","lastModifiedDate":"2022-03-28"},{"lineNumber":291,"author":{"gitId":"FaliciaOng"},"content":"            System.out.println(i + \". \" + housekeeper);","lastModifiedDate":"2022-03-28"},{"lineNumber":292,"author":{"gitId":"FaliciaOng"},"content":"            i +\u003d 1;","lastModifiedDate":"2022-03-28"},{"lineNumber":293,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":294,"author":{"gitId":"FaliciaOng"},"content":"        printMessage(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-30"},{"lineNumber":295,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":296,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":297,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":298,"author":{"gitId":"siewyangzhi"},"content":"     * Prints an acknowledgement message informing the user that the pax of the item was successfully updated.","lastModifiedDate":"2022-03-16"},{"lineNumber":299,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":300,"author":{"gitId":"siewyangzhi"},"content":"     * @param updatedItem The item within the item list whose pax has been updated by the user.","lastModifiedDate":"2022-03-29"},{"lineNumber":301,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":302,"author":{"gitId":"siewyangzhi"},"content":"    public void printUpdateItemPaxAcknowledgementMessage(Item updatedItem) {","lastModifiedDate":"2022-03-16"},{"lineNumber":303,"author":{"gitId":"siewyangzhi"},"content":"        String updatedItemName \u003d updatedItem.getName();","lastModifiedDate":"2022-03-17"},{"lineNumber":304,"author":{"gitId":"siewyangzhi"},"content":"        updatedItemName \u003d updatedItemName.toUpperCase();","lastModifiedDate":"2022-03-29"},{"lineNumber":305,"author":{"gitId":"siewyangzhi"},"content":"        int updatedItemNewPax \u003d updatedItem.getPax();","lastModifiedDate":"2022-03-17"},{"lineNumber":306,"author":{"gitId":"siewyangzhi"},"content":"        assert (!updatedItemName.isEmpty()) : \"Assertion Failed! Updated item has an empty item name.\";","lastModifiedDate":"2022-03-17"},{"lineNumber":307,"author":{"gitId":"siewyangzhi"},"content":"        assert (updatedItemNewPax \u003e\u003d 0) : \"Assertion Failed! Updated item has a pax that is less than 0.\";","lastModifiedDate":"2022-03-17"},{"lineNumber":308,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(MESSAGE_HEADER);","lastModifiedDate":"2022-03-30"},{"lineNumber":309,"author":{"gitId":"siewyangzhi"},"content":"        System.out.printf(\"The pax of %s has been updated to %d.\\n\", updatedItemName, updatedItemNewPax);","lastModifiedDate":"2022-03-17"},{"lineNumber":310,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(END_OF_MESSAGE_LINE);","lastModifiedDate":"2022-03-30"},{"lineNumber":311,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":312,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":313,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":314,"author":{"gitId":"siewyangzhi"},"content":"     * Prints an acknowledgement message informing the user that the item name of the item to update was successfully","lastModifiedDate":"2022-04-11"},{"lineNumber":315,"author":{"gitId":"siewyangzhi"},"content":"     * updated.","lastModifiedDate":"2022-04-11"},{"lineNumber":316,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":317,"author":{"gitId":"siewyangzhi"},"content":"     * @param oldItemName The current item name of the item to update within the item list.","lastModifiedDate":"2022-04-11"},{"lineNumber":318,"author":{"gitId":"siewyangzhi"},"content":"     * @param newItemName The new item name of the item to update within the item list.","lastModifiedDate":"2022-04-11"},{"lineNumber":319,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":320,"author":{"gitId":"siewyangzhi"},"content":"    public void printUpdateItemNameAcknowledgementMessage(String oldItemName, String newItemName) {","lastModifiedDate":"2022-03-28"},{"lineNumber":321,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(MESSAGE_HEADER);","lastModifiedDate":"2022-03-30"},{"lineNumber":322,"author":{"gitId":"siewyangzhi"},"content":"        System.out.printf(\"The name of %s has been updated to %s.\\n\", oldItemName, newItemName);","lastModifiedDate":"2022-03-28"},{"lineNumber":323,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(END_OF_MESSAGE_LINE);","lastModifiedDate":"2022-03-30"},{"lineNumber":324,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":325,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":326,"author":{"gitId":"zhenster"},"content":"    public void printAddSatisfactionAcknowledgementMessage(SatisfactionList satisfactionList,","lastModifiedDate":"2022-03-16"},{"lineNumber":327,"author":{"gitId":"zhenster"},"content":"                                                           Satisfaction recentSatisfaction) {","lastModifiedDate":"2022-03-16"},{"lineNumber":328,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(MESSAGE_HEADER);","lastModifiedDate":"2022-03-30"},{"lineNumber":329,"author":{"gitId":"zhenster"},"content":"        System.out.println(\"The Satisfaction instance \" + recentSatisfaction.getCustomerName().toUpperCase() + \": \"","lastModifiedDate":"2022-03-30"},{"lineNumber":330,"author":{"gitId":"zhenster"},"content":"                + recentSatisfaction.getSatisfactionValue() + \" has been added to the list of Satisfactions.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":331,"author":{"gitId":"zhenster"},"content":"        System.out.printf(\"There are currently %d recorded customer satisfactions.\\n\", satisfactionList.getSize());","lastModifiedDate":"2022-03-28"},{"lineNumber":332,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(END_OF_MESSAGE_LINE);","lastModifiedDate":"2022-03-30"},{"lineNumber":333,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":334,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":335,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":336,"author":{"gitId":"siewyangzhi"},"content":"     * Prints an acknowledgement message informing the user that the item to delete has been deleted from the item list.","lastModifiedDate":"2022-04-11"},{"lineNumber":337,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":338,"author":{"gitId":"siewyangzhi"},"content":"     * @param itemToDelete The item object which contains the item name of the item to be deleted from the item list.","lastModifiedDate":"2022-04-11"},{"lineNumber":339,"author":{"gitId":"siewyangzhi"},"content":"     * @param listOfItems  The item list which containing all the items.","lastModifiedDate":"2022-04-11"},{"lineNumber":340,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":341,"author":{"gitId":"siewyangzhi"},"content":"    public void printDeleteItemAcknowledgementMessage(Item itemToDelete, ItemList listOfItems) {","lastModifiedDate":"2022-04-11"},{"lineNumber":342,"author":{"gitId":"siewyangzhi"},"content":"        String itemName \u003d itemToDelete.getName();","lastModifiedDate":"2022-04-11"},{"lineNumber":343,"author":{"gitId":"siewyangzhi"},"content":"        itemName \u003d itemName.toUpperCase();","lastModifiedDate":"2022-03-29"},{"lineNumber":344,"author":{"gitId":"siewyangzhi"},"content":"        assert (!itemName.isEmpty()) : \"Assertion Failed! Updated item has an empty item name.\";","lastModifiedDate":"2022-03-26"},{"lineNumber":345,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(MESSAGE_HEADER);","lastModifiedDate":"2022-03-30"},{"lineNumber":346,"author":{"gitId":"siewyangzhi"},"content":"        System.out.printf(\"%s has been removed from the Item List.\\n\", itemName);","lastModifiedDate":"2022-03-26"},{"lineNumber":347,"author":{"gitId":"siewyangzhi"},"content":"        System.out.printf(\"There are currently %d items within the Item List.\\n\", listOfItems.getSize());","lastModifiedDate":"2022-03-26"},{"lineNumber":348,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(END_OF_MESSAGE_LINE);","lastModifiedDate":"2022-03-30"},{"lineNumber":349,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":350,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":351,"author":{"gitId":"zhenster"},"content":"    public void printAddHousekeeperPerformanceAcknowledgementMessage(HousekeeperPerformanceList","lastModifiedDate":"2022-03-26"},{"lineNumber":352,"author":{"gitId":"zhenster"},"content":"                                                                             housekeeperPerformanceList,","lastModifiedDate":"2022-03-26"},{"lineNumber":353,"author":{"gitId":"zhenster"},"content":"                                                                     HousekeeperPerformance housekeeperPerformance) {","lastModifiedDate":"2022-03-26"},{"lineNumber":354,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(MESSAGE_HEADER);","lastModifiedDate":"2022-03-30"},{"lineNumber":355,"author":{"gitId":"zhenster"},"content":"        System.out.println(\"The HousekeeperPerformance instance \" + housekeeperPerformance.getName().toUpperCase()","lastModifiedDate":"2022-03-30"},{"lineNumber":356,"author":{"gitId":"zhenster"},"content":"                + \": \" + housekeeperPerformance.getRating() + \" has been added to the list \"","lastModifiedDate":"2022-03-30"},{"lineNumber":357,"author":{"gitId":"zhenster"},"content":"                + \"of housekeeper performances.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":358,"author":{"gitId":"zhenster"},"content":"        System.out.printf(\"There are currently %d recorded housekeeper performances.\\n\",","lastModifiedDate":"2022-03-28"},{"lineNumber":359,"author":{"gitId":"zhenster"},"content":"                housekeeperPerformanceList.getSize());","lastModifiedDate":"2022-03-28"},{"lineNumber":360,"author":{"gitId":"siewyangzhi"},"content":"        System.out.println(END_OF_MESSAGE_LINE);","lastModifiedDate":"2022-03-30"},{"lineNumber":361,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":362,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":363,"author":{"gitId":"XunyiiZ"},"content":"    public void printTableHeader() {","lastModifiedDate":"2022-03-28"},{"lineNumber":364,"author":{"gitId":"XunyiiZ"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-03-28"},{"lineNumber":365,"author":{"gitId":"XunyiiZ"},"content":"        System.out.println(TABLE_HEADER);","lastModifiedDate":"2022-03-28"},{"lineNumber":366,"author":{"gitId":"XunyiiZ"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-03-28"},{"lineNumber":367,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":368,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":369,"author":{"gitId":"FaliciaOng"},"content":"    public void printNotedLine() {","lastModifiedDate":"2022-03-30"},{"lineNumber":370,"author":{"gitId":"FaliciaOng"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Noted! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-30"},{"lineNumber":371,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":372,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":373,"author":{"gitId":"FaliciaOng"},"content":"    public void printBottomLine() {","lastModifiedDate":"2022-03-30"},{"lineNumber":374,"author":{"gitId":"FaliciaOng"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-30"},{"lineNumber":375,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":376,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":377,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":378,"author":{"gitId":"FaliciaOng"},"content":"     * This method print the confirmation that the housekeeper has been delete as well as the total pax of","lastModifiedDate":"2022-04-11"},{"lineNumber":379,"author":{"gitId":"FaliciaOng"},"content":"     * housekeeper currently working in the hotel.","lastModifiedDate":"2022-04-11"},{"lineNumber":380,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":381,"author":{"gitId":"FaliciaOng"},"content":"     * @param housekeeperList Contains the list of housekeeper\u0027s profiles.","lastModifiedDate":"2022-04-11"},{"lineNumber":382,"author":{"gitId":"FaliciaOng"},"content":"     * @param name            Name of housekeeper to be deleted.","lastModifiedDate":"2022-04-11"},{"lineNumber":383,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":384,"author":{"gitId":"FaliciaOng"},"content":"    public void printNotifiedDeletionOfHousekeeper(HousekeeperList housekeeperList, String name) {","lastModifiedDate":"2022-04-11"},{"lineNumber":385,"author":{"gitId":"FaliciaOng"},"content":"        printNotedLine();","lastModifiedDate":"2022-04-11"},{"lineNumber":386,"author":{"gitId":"FaliciaOng"},"content":"        printMessage(\"Deleted \" + name + \" from the list of profile\");","lastModifiedDate":"2022-04-11"},{"lineNumber":387,"author":{"gitId":"FaliciaOng"},"content":"        printMessage(\"Take note! Total pax of housekeeper:  \" + housekeeperList.getTotalHousekeeper());","lastModifiedDate":"2022-04-11"},{"lineNumber":388,"author":{"gitId":"FaliciaOng"},"content":"        printBottomLine();","lastModifiedDate":"2022-04-11"},{"lineNumber":389,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":390,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":391,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"aiman-imtiaz":65,"zhenster":17,"FaliciaOng":149,"XunyiiZ":10,"siewyangzhi":150}},{"path":"src/main/java/seedu/duke/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":" * Abstract class that generalizes all Commands.","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":" * Contains an abstract \"execute\" method and keeps track of","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":" * whether the program should exit.","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"public abstract class Command {","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"    protected boolean isExit;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"    protected Command() {","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"     * Abstract execute command that all Command classes should","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"     * override based on their specific behavior.","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"     * @param ui The instance of the Ui class (used for printing additional messages when a command is executed.","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"     * @throws HotelLiteManagerException If there is any error with user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"    public abstract void execute(ListContainer listContainer, Ui ui) throws HotelLiteManagerException, IOException;","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"        return this.isExit;","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"zhenster":16,"FaliciaOng":12,"XunyiiZ":2,"siewyangzhi":5}},{"path":"src/main/java/seedu/duke/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.exceptions.InvalidHelpException;","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final String line \u003d \"------------------------------------------\\n\";","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final String HELP_MESSAGE \u003d \"I am here to help! \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"Given below are the formats commands related to customer satisfaction: \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 1. add satisfaction CUSTOMER_NAME / SATISFACTION_RATING \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 2. view satisfactions \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 3. view average satisfaction \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"aiman-imtiaz"},"content":"            + line","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"For commands related with housekeepers, use following formats: \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 1. add housekeeper NAME / AGE \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 2. availability NAME / DAY(S) \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 3. view recorded housekeepers \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 4. delete housekeeper NAME \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 5. get available on DAY \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 6. is a new week \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 7. is a new year \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 8. assign NAME / ROOM_NUMBER \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 9. add performance HOUSEKEEPER_NAME / PERFORMANCE_RATING \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 10. view performances \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"aiman-imtiaz"},"content":"            + line","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"For commands related with rooms, use following formats: \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 1. check in ROOM_NUMBER \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 2. check out ROOM_NUMBER \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 3. check room ROOM_NUMBER \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 4. check all room \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 5. check level LEVEL_NUMBER \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 6. check category CATEGORY \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"aiman-imtiaz"},"content":"            + line","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"For commands related with inventory, use following formats:  \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 1. add item ITEM NAME / PAX \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 2. update item pax ITEM NAME / PAX \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 3. update item name OLD ITEM NAME / NEW ITEM NAME \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 4. delete item NAME \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 5. view all items \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 6. view items with zero pax \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 7. search item KEYWORD \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"aiman-imtiaz"},"content":"            + line","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"For commands related with events happening in the hotel, use following formats: \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 1. add event DESCRIPTION / DATE \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 2. delete event INDEX \\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"\\t 3. view events\";","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"aiman-imtiaz"},"content":"    public HelpCommand(String c) throws HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"aiman-imtiaz"},"content":"        if (!c.equals(\"\")) {","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new InvalidHelpException();","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"aiman-imtiaz"},"content":"     * Print the list of commands available to user.","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"aiman-imtiaz"},"content":"     * @param ui The user interface for this execution method.","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"XunyiiZ"},"content":"     * @return","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"aiman-imtiaz"},"content":"    @Override","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"aiman-imtiaz"},"content":"    public void execute(ListContainer listContainer, Ui ui)","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"aiman-imtiaz"},"content":"            throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"aiman-imtiaz"},"content":"        ui.printHelp(HELP_MESSAGE);","lastModifiedDate":"2022-04-11"},{"lineNumber":72,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":73,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"aiman-imtiaz":72,"XunyiiZ":1}},{"path":"src/main/java/seedu/duke/command/assigncommand/AssignHousekeeperCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package seedu.duke.command.assigncommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidAssignmentException;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.Housekeeper;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidRoomNumberException;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.roomlists.RoomList;","lastModifiedDate":"2022-04-02"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.AssignmentMap;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.HousekeeperList;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.roomlists.Room;","lastModifiedDate":"2022-04-02"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidHousekeeperNameException;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"aiman-imtiaz"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"aiman-imtiaz"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"aiman-imtiaz"},"content":" * Identifies the name of the housekeeper and assign to room id","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":" * housekeeper list.","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"public class AssignHousekeeperCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"aiman-imtiaz"},"content":"    private String name;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"aiman-imtiaz"},"content":"    private String roomID;","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final String ASSIGNMENT_INDICATE \u003d \"/\";","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final int FIELDS_ENTERED \u003d 2;","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"aiman-imtiaz"},"content":"    private static Logger logger \u003d Logger.getLogger(\"Assign Housekeeper\");","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"aiman-imtiaz"},"content":"    public AssignHousekeeperCommand(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"aiman-imtiaz"},"content":"        if (commandStringWithoutCommand.isEmpty()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new InvalidAssignmentException();","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"aiman-imtiaz"},"content":"        String[] input \u003d extractInput(commandStringWithoutCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"aiman-imtiaz"},"content":"        String name \u003d input[0].trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"aiman-imtiaz"},"content":"        if (input.length !\u003d FIELDS_ENTERED) {","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new InvalidAssignmentException();","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"aiman-imtiaz"},"content":"        String id \u003d input[1].trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"aiman-imtiaz"},"content":"        if (id.isEmpty()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new InvalidAssignmentException();","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"aiman-imtiaz"},"content":"        setName(name);","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"aiman-imtiaz"},"content":"        setRoomID(id);","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"aiman-imtiaz"},"content":"        logger.log(Level.INFO, \"Assign Command parsed\");","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"aiman-imtiaz"},"content":"     * Method used to extract the name and availability of the housekeeper.","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"aiman-imtiaz"},"content":"     * @param commandStringWithoutCommand Input entered by the user.","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"aiman-imtiaz"},"content":"     * @return Input consisting of housekeeper name and availability.","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"aiman-imtiaz"},"content":"     * @throws HotelLiteManagerException When description of availability is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"aiman-imtiaz"},"content":"    private String[] extractInput(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"aiman-imtiaz"},"content":"        boolean isSymbolIncorrect \u003d !commandStringWithoutCommand.contains(ASSIGNMENT_INDICATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"aiman-imtiaz"},"content":"        if (isSymbolIncorrect) {","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new InvalidAssignmentException();","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"aiman-imtiaz"},"content":"        String[] input \u003d commandStringWithoutCommand.split(ASSIGNMENT_INDICATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"aiman-imtiaz"},"content":"        return input;","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"aiman-imtiaz"},"content":"    public String getName() {","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"aiman-imtiaz"},"content":"        return name;","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"aiman-imtiaz"},"content":"    public void setName(String name) {","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"aiman-imtiaz"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"aiman-imtiaz"},"content":"    public String getroomID() {","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"aiman-imtiaz"},"content":"        return roomID;","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"aiman-imtiaz"},"content":"    public void setRoomID(String roomID) {","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"aiman-imtiaz"},"content":"        this.roomID \u003d roomID;","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"aiman-imtiaz"},"content":"     * Get the Name of the housekeeper and verify that housekeeper is in records. If in records, add","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"aiman-imtiaz"},"content":"     * his/her availability into housekeeper list.","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"XunyiiZ"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"aiman-imtiaz"},"content":"     * @param ui The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"XunyiiZ"},"content":"     * @return","lastModifiedDate":"2022-04-11"},{"lineNumber":89,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"aiman-imtiaz"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"XunyiiZ"},"content":"    public void execute(ListContainer listContainer, Ui ui)","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"siewyangzhi"},"content":"            throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"XunyiiZ"},"content":"        final AssignmentMap assignmentMap \u003d listContainer.getAssignmentMap();","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"XunyiiZ"},"content":"        final HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"XunyiiZ"},"content":"        final RoomList roomList \u003d listContainer.getRoomList();","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"aiman-imtiaz"},"content":"        String roomID \u003d getroomID();","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"aiman-imtiaz"},"content":"        assert !roomID.isEmpty() : \"ID should not be empty\";","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"aiman-imtiaz"},"content":"        String name \u003d getName();","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"aiman-imtiaz"},"content":"        assert !name.isEmpty() : \"name should not be empty\";","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"XunyiiZ"},"content":"        if (!isNameExist(name, housekeeperList)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new InvalidHousekeeperNameException();","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"aiman-imtiaz"},"content":"        int roomIdNumber \u003d 0;","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"aiman-imtiaz"},"content":"        try {","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"aiman-imtiaz"},"content":"            roomIdNumber \u003d Integer.parseInt(roomID);","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"aiman-imtiaz"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new InvalidRoomNumberException();","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"XunyiiZ"},"content":"        if (!isRoomIdValid(roomIdNumber, roomList)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"XunyiiZ"},"content":"            throw new InvalidRoomNumberException();","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"XunyiiZ"},"content":"        assignmentMap.addAssignment(name, roomIdNumber);","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"XunyiiZ"},"content":"        assignmentMap.save();","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"aiman-imtiaz"},"content":"        ui.printAssignedHousekeeper(roomID, name);","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"aiman-imtiaz"},"content":"        ui.printMessage(\"Assigned \" + name + \" to room no. \" + roomID + \".\");","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"aiman-imtiaz"},"content":"        logger.log(Level.INFO, \"end of processing\");","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":127,"author":{"gitId":"XunyiiZ"},"content":"    private boolean isRoomIdValid(int roomIdNumber, RoomList roomList) {","lastModifiedDate":"2022-03-29"},{"lineNumber":128,"author":{"gitId":"XunyiiZ"},"content":"        for (Room room : roomList.getRoomList()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":129,"author":{"gitId":"XunyiiZ"},"content":"            if (room.getRoomId() \u003d\u003d roomIdNumber) {","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"XunyiiZ"},"content":"                return true;","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"XunyiiZ"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"XunyiiZ"},"content":"        return false;","lastModifiedDate":"2022-03-29"},{"lineNumber":134,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":135,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"XunyiiZ"},"content":"    private boolean isNameExist(String name, HousekeeperList housekeeperList) {","lastModifiedDate":"2022-03-29"},{"lineNumber":137,"author":{"gitId":"XunyiiZ"},"content":"        for (Housekeeper housekeeper : housekeeperList.getHousekeeperList()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":138,"author":{"gitId":"XunyiiZ"},"content":"            if (housekeeper.getName().equals(name)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"XunyiiZ"},"content":"                return true;","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"XunyiiZ"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":141,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":142,"author":{"gitId":"XunyiiZ"},"content":"        return false;","lastModifiedDate":"2022-03-29"},{"lineNumber":143,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":144,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"aiman-imtiaz":96,"zhenster":4,"FaliciaOng":2,"XunyiiZ":41,"siewyangzhi":1}},{"path":"src/main/java/seedu/duke/command/customercommands/AddSatisfactionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.command.customercommands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"import seedu.duke.ParsingUtils;","lastModifiedDate":"2022-04-05"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-04-05"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidCommandException;","lastModifiedDate":"2022-04-05"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.DuplicateCommandException;","lastModifiedDate":"2022-04-05"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.EmptySatisfactionValueException;","lastModifiedDate":"2022-04-05"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.EmptySatisfactionCustomerException;","lastModifiedDate":"2022-04-05"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidSatisfactionValueException;","lastModifiedDate":"2022-04-05"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidSatisfactionCustomerNameException;","lastModifiedDate":"2022-04-05"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.RepeatCustomerException;","lastModifiedDate":"2022-04-05"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"import seedu.duke.itemlists.ItemList;","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.satisfactionlists.Satisfaction;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.satisfactionlists.SatisfactionList;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"import seedu.duke.storage.ItemListFileManager;","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"import seedu.duke.storage.SatisfactionListFileManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":" * Class that implements execution behavior for adding a Satisfaction","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":" * object (e.g. when user types \"Add Satisfaction [customerName] [satisfactionValue]\").","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":" * Constructor creates the Satisfaction object from user input, and execute","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":" * method overrides the Command class\u0027s execute method to add the Satisfaction","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":" * object to the given satisfactionList (data structure that stores all the","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":" * Satisfaction objects). Each Satisfaction object corresponds to a customer and","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":" * a satisfaction rating from1 to 5 inclusive.","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"public class AddSatisfactionCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"    private static final String DELIMITER \u003d \"/\";","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"    private Satisfaction satisfaction;","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"    private static Logger logger \u003d Logger.getLogger(\"satisfactionLogger\");","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"    private static final String ADD_SATISFACTION_COMMAND \u003d \"add satisfaction\";","lastModifiedDate":"2022-04-05"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"    private ParsingUtils parsingUtils \u003d new ParsingUtils();","lastModifiedDate":"2022-04-05"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"     * Extracts the customer name and satisfaction value from user input,","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"     * uses these two values to create a corresponding Satisfaction object.","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"     * @param userInput The user input (should be of form \"[customerName] [satisfactionValue]\").","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"     * @throws HotelLiteManagerException If there is an error in user input (e.g. empty customer name, empty","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"     *                                   satisfaction value, or invalid satisfaction value).","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"    public AddSatisfactionCommand(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"        userInput \u003d userInput.toLowerCase();","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"        if (userInput.contains(ADD_SATISFACTION_COMMAND)) {","lastModifiedDate":"2022-04-05"},{"lineNumber":54,"author":{"gitId":"zhenster"},"content":"            throw new DuplicateCommandException();","lastModifiedDate":"2022-04-05"},{"lineNumber":55,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":56,"author":{"gitId":"zhenster"},"content":"        if (!userInput.contains(DELIMITER)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"zhenster"},"content":"            logger.log(Level.WARNING, \"A \u0027/\u0027 character is needed to separate the customer\u0027s name \"","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"zhenster"},"content":"                    + \"from their rating.\");","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"zhenster"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"zhenster"},"content":"        if (parsingUtils.countSlashes(userInput) \u003e 1) {","lastModifiedDate":"2022-04-05"},{"lineNumber":62,"author":{"gitId":"zhenster"},"content":"            logger.log(Level.WARNING, \"More than one \u0027/\u0027 character detected. There should only be a single \u0027/\u0027\"","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"                    + \" that separates the customer\u0027s name from their rating.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"zhenster"},"content":"        if (userInput.trim().equals(DELIMITER)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"zhenster"},"content":"            logger.log(Level.WARNING, \"Customer name and satisfaction value were both found to be empty.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"zhenster"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"zhenster"},"content":"        String customerName \u003d extractCustomerName(userInput);","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"zhenster"},"content":"        int satisfactionValue \u003d extractSatisfactionValue(userInput);","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"zhenster"},"content":"        assert (!customerName.isEmpty()) : \"The customer\u0027s name should be non-empty.\";","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"zhenster"},"content":"        assert (satisfactionValue \u003c\u003d 5 \u0026\u0026 satisfactionValue \u003e\u003d 1) : \"The satisfaction value must be an integer between\"","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"zhenster"},"content":"                + \"1 and 5.\";","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"zhenster"},"content":"        Satisfaction satisfaction \u003d new Satisfaction(customerName, satisfactionValue);","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"zhenster"},"content":"        setSatisfaction(satisfaction);","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":80,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"zhenster"},"content":"     * Helper method for AddSatisfactionCommand. Extracts the customer\u0027s name","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"zhenster"},"content":"     * from the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"zhenster"},"content":"     * @param userInput The user input (should be of form \"[customerName] [satisfactionValue]\").","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"zhenster"},"content":"     * @return The name of the customer (String).","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"zhenster"},"content":"     * @throws HotelLiteManagerException If there is an error in user input (the customer\u0027s name is empty).","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"zhenster"},"content":"    private String extractCustomerName(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"zhenster"},"content":"        String[] splitInput \u003d userInput.split(DELIMITER);","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"zhenster"},"content":"        String customerName \u003d \"\";","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"zhenster"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"zhenster"},"content":"            customerName \u003d splitInput[0].trim();","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"zhenster"},"content":"            if (customerName.isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"zhenster"},"content":"                throw new EmptySatisfactionCustomerException();","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"zhenster"},"content":"            if (!parsingUtils.isAlpha(customerName)) {","lastModifiedDate":"2022-04-05"},{"lineNumber":97,"author":{"gitId":"zhenster"},"content":"                throw new InvalidSatisfactionCustomerNameException();","lastModifiedDate":"2022-04-05"},{"lineNumber":98,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-04-05"},{"lineNumber":99,"author":{"gitId":"zhenster"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"zhenster"},"content":"            throw new EmptySatisfactionValueException();","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"zhenster"},"content":"        return customerName;","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"zhenster"},"content":"     * Helper method for AddSatisfactionCommand. Extracts the customer\u0027s satisfaction value","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"zhenster"},"content":"     * from user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"zhenster"},"content":"     * @param userInput The user input (should be of form \"[customerName] [satisfactionValue]\").","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"zhenster"},"content":"     * @return The customer\u0027s satisfaction value (should be an integer from 1-5 inclusive).","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"zhenster"},"content":"     * @throws HotelLiteManagerException If there is an error in user input (the satisfaction value is","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"zhenster"},"content":"     *                                   empty or is not an integer between 1 and 5).","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"zhenster"},"content":"    private int extractSatisfactionValue(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"zhenster"},"content":"        String[] splitInput \u003d userInput.split(DELIMITER);","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"zhenster"},"content":"        if (splitInput.length \u003c 2) {","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"zhenster"},"content":"            throw new EmptySatisfactionValueException();","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"zhenster"},"content":"        String satisfactionString \u003d splitInput[1].trim();","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"zhenster"},"content":"        int satisfactionValue;","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"zhenster"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"zhenster"},"content":"            satisfactionValue \u003d Integer.parseInt(satisfactionString);","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"zhenster"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"zhenster"},"content":"            throw new InvalidSatisfactionValueException();","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"zhenster"},"content":"        if (satisfactionValue \u003c 1 || satisfactionValue \u003e 5) {","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"zhenster"},"content":"            throw new InvalidSatisfactionValueException();","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"zhenster"},"content":"        return satisfactionValue;","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":133,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"zhenster"},"content":"     * Override of execute command in Command class.","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"zhenster"},"content":"     * Adds the Satisfaction object created in the constructor","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"zhenster"},"content":"     * to the given list of Satisfaction objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"zhenster"},"content":"     * @param satisfactionList The given list of Satisfaction objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"zhenster"},"content":"     * @param roomList The given list of Room objects. N/A for this class, but","lastModifiedDate":"2022-03-16"},{"lineNumber":140,"author":{"gitId":"zhenster"},"content":"     *                 must be included for the execution override.","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"zhenster"},"content":"     * @param itemList The given list of Item objects. N/A for this class, but","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"zhenster"},"content":"     *                 must be included for the execution override.","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"zhenster"},"content":"     * @param ui The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"zhenster"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-03-30"},{"lineNumber":146,"author":{"gitId":"XunyiiZ"},"content":"        SatisfactionList satisfactionList \u003d listContainer.getSatisfactionList();","lastModifiedDate":"2022-03-26"},{"lineNumber":147,"author":{"gitId":"zhenster"},"content":"        if (satisfactionList.isCustomerInSatisfactionList(satisfaction.getCustomerName())) {","lastModifiedDate":"2022-03-19"},{"lineNumber":148,"author":{"gitId":"zhenster"},"content":"            throw new RepeatCustomerException();","lastModifiedDate":"2022-03-19"},{"lineNumber":149,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":150,"author":{"gitId":"zhenster"},"content":"        satisfactionList.addSatisfaction(satisfaction);","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"zhenster"},"content":"        ui.printAddSatisfactionAcknowledgementMessage(satisfactionList, satisfaction);","lastModifiedDate":"2022-03-16"},{"lineNumber":152,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":153,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":154,"author":{"gitId":"zhenster"},"content":"    public void writeSatisfactionListToFile(ListContainer listContainer) throws IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":155,"author":{"gitId":"zhenster"},"content":"        SatisfactionList satisfactionList \u003d listContainer.getSatisfactionList();","lastModifiedDate":"2022-04-11"},{"lineNumber":156,"author":{"gitId":"zhenster"},"content":"        SatisfactionListFileManager satisfactionListFileManager \u003d new SatisfactionListFileManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":157,"author":{"gitId":"zhenster"},"content":"        satisfactionListFileManager.save(satisfactionList);","lastModifiedDate":"2022-04-08"},{"lineNumber":158,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":159,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":160,"author":{"gitId":"zhenster"},"content":"    public Satisfaction getSatisfaction() {","lastModifiedDate":"2022-03-15"},{"lineNumber":161,"author":{"gitId":"zhenster"},"content":"        return satisfaction;","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"zhenster"},"content":"    public void setSatisfaction(Satisfaction satisfaction) {","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"zhenster"},"content":"        this.satisfaction \u003d satisfaction;","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":167,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":159,"aiman-imtiaz":3,"FaliciaOng":2,"XunyiiZ":1,"siewyangzhi":2}},{"path":"src/main/java/seedu/duke/command/customercommands/ViewAverageSatisfactionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.command.customercommands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.satisfactionlists.SatisfactionList;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":" * Class that implements execution behavior for user command","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":" * \"average satisfaction.\" Contains override of execution","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":" * method in Command class that calculations the average","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":" * customer satisfaction rating of the given list of Satisfaction","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":" * objects.","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"public class ViewAverageSatisfactionCommand extends Command {","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"     * Override of execute command in Command class.","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"     * Calculates the average customer satisfaction rating of the","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"     * given satisfactionList.","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"     * @param ui The user interface for this execution method.","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"     * @return","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"        SatisfactionList satisfactionList \u003d listContainer.getSatisfactionList();","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"        System.out.println(\"Average customer satisfaction: \" + satisfactionList.calculateAverageSatisfaction());","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"zhenster":27,"FaliciaOng":1,"XunyiiZ":2,"siewyangzhi":3}},{"path":"src/main/java/seedu/duke/command/customercommands/ViewSatisfactionsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.command.customercommands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.satisfactionlists.SatisfactionList;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":" * Class that implements execution behavior for user command","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":" * \"View Satisfactions.\" Contains override of execution","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":" * method in Command class that prints out the information of the Satisfaction objects","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":" * in the given satisfactionList (i.e. prints out each Satisfaction object\u0027s","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":" * corresponding customer name and satisfaction value).","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"public class ViewSatisfactionsCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"     * Override of execute command in Command class.","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"     * Prints out the information of the Satisfaction objects","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"     * in the given satisfactionList (i.e. prints out each Satisfaction object\u0027s","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"     * corresponding customer name and satisfaction value).","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"     * @param ui               The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"     * @return","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"    public void execute(ListContainer listContainer, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"        SatisfactionList satisfactionList \u003d listContainer.getSatisfactionList();","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"        satisfactionList.viewSatisfactions();","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"    ","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":28,"FaliciaOng":2,"XunyiiZ":3,"siewyangzhi":2}},{"path":"src/main/java/seedu/duke/command/eventcommands/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package seedu.duke.command.eventcommands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.exceptions.InvalidDescriptionException;","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.eventlists.EventList;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidEventException;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"aiman-imtiaz"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"aiman-imtiaz"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"aiman-imtiaz"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"aiman-imtiaz"},"content":"    private String description;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"aiman-imtiaz"},"content":"    private String at;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final String REGEX \u003d \"[a-zA-Z0-9 ]*\";","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final String EVENT_INDICATE \u003d \"/\";","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final int NUMBER_OF_FIELDS \u003d 2;","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":"    private static Logger logger \u003d Logger.getLogger(\"Add Event\");","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"    public AddEventCommand(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"        if (commandStringWithoutCommand.isEmpty()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"            logger.log(Level.INFO, \"empty string\");","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"aiman-imtiaz"},"content":"        String[] input \u003d extractInput(commandStringWithoutCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"aiman-imtiaz"},"content":"        String description \u003d input[0].trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"aiman-imtiaz"},"content":"        if (input.length !\u003d NUMBER_OF_FIELDS) {","lastModifiedDate":"2022-04-06"},{"lineNumber":32,"author":{"gitId":"aiman-imtiaz"},"content":"            logger.log(Level.INFO, \"only one field entered\");","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"aiman-imtiaz"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"aiman-imtiaz"},"content":"            logger.log(Level.INFO, \"no description added\");","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"aiman-imtiaz"},"content":"        String at \u003d input[1].trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"aiman-imtiaz"},"content":"        if (at.isEmpty()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"aiman-imtiaz"},"content":"        if (!description.matches(REGEX)) {","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new InvalidDescriptionException();","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"aiman-imtiaz"},"content":"        setDescription(description);","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"aiman-imtiaz"},"content":"        setAt(at);","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"aiman-imtiaz"},"content":"        logger.log(Level.INFO, \"Event command parsed\");","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"aiman-imtiaz"},"content":"     * Method used to extract the name and availability of the housekeeper.","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"aiman-imtiaz"},"content":"     * @param commandStringWithoutCommand Input entered by the user.","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"aiman-imtiaz"},"content":"     * @return Input consisting of housekeeper name and availability.","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"aiman-imtiaz"},"content":"     * @throws HotelLiteManagerException When description of availability is invalid.","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"aiman-imtiaz"},"content":"    private String[] extractInput(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"aiman-imtiaz"},"content":"        boolean isSymbolIncorrect \u003d !commandStringWithoutCommand.contains(EVENT_INDICATE);","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"aiman-imtiaz"},"content":"        if (isSymbolIncorrect) {","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2022-04-05"},{"lineNumber":63,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"aiman-imtiaz"},"content":"        String[] input \u003d commandStringWithoutCommand.split(EVENT_INDICATE);","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"aiman-imtiaz"},"content":"        return input;","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"aiman-imtiaz"},"content":"    public String getDescription() {","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"aiman-imtiaz"},"content":"        return this.description;","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"aiman-imtiaz"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"aiman-imtiaz"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"aiman-imtiaz"},"content":"    public String getAt() {","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"aiman-imtiaz"},"content":"        return this.at;","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"aiman-imtiaz"},"content":"    public void setAt(String at) {","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"aiman-imtiaz"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"aiman-imtiaz"},"content":"     * Get the Name of the housekeeper and verify that housekeeper is in records. If in records, add","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"aiman-imtiaz"},"content":"     * his/her availability into housekeeper list.","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"aiman-imtiaz"},"content":"     * @param ui The user interface for this execution method.","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"XunyiiZ"},"content":"     * @return","lastModifiedDate":"2022-04-11"},{"lineNumber":90,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"aiman-imtiaz"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"aiman-imtiaz"},"content":"    public void execute(ListContainer listContainer, Ui ui)","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"siewyangzhi"},"content":"            throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"aiman-imtiaz"},"content":"        final EventList eventList \u003d listContainer.getEventList();","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"aiman-imtiaz"},"content":"        String description \u003d getDescription();","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"aiman-imtiaz"},"content":"        assert !description.isEmpty() : \"description should not be empty\";","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"aiman-imtiaz"},"content":"        String at \u003d getAt();","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"aiman-imtiaz"},"content":"        assert !at.isEmpty() : \"at should not be empty\";","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"aiman-imtiaz"},"content":"        eventList.add(description, at);","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"aiman-imtiaz"},"content":"        logger.log(Level.INFO, \"about to add to file.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"aiman-imtiaz"},"content":"        eventList.save();","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"aiman-imtiaz"},"content":"        logger.log(Level.INFO, \"end of adding event.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"aiman-imtiaz":103,"zhenster":2,"XunyiiZ":1,"siewyangzhi":1}},{"path":"src/main/java/seedu/duke/command/eventcommands/DeleteEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package seedu.duke.command.eventcommands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.eventlists.EventList;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.exceptions.InvalidDeleteEventException;","lastModifiedDate":"2022-04-05"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"aiman-imtiaz"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"public class DeleteEventCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"aiman-imtiaz"},"content":"    private String index;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final String EVENT_INDICATE \u003d \"/\";","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final int ONLY_ONE_FIELD_ENTERED \u003d 1;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"aiman-imtiaz"},"content":"    private static Logger logger \u003d Logger.getLogger(\"Add Event\");","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"aiman-imtiaz"},"content":"    public DeleteEventCommand(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":"        if (commandStringWithoutCommand.isEmpty()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"aiman-imtiaz"},"content":"            logger.log(Level.INFO, \"empty string\");","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new InvalidDeleteEventException();","lastModifiedDate":"2022-04-05"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"        String[] input \u003d extractInput(commandStringWithoutCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"aiman-imtiaz"},"content":"        String n \u003d input[0].trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"aiman-imtiaz"},"content":"        if (input.length !\u003d ONLY_ONE_FIELD_ENTERED) {","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"aiman-imtiaz"},"content":"            logger.log(Level.INFO, \"more than one field entered\");","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new InvalidDeleteEventException();","lastModifiedDate":"2022-04-05"},{"lineNumber":31,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"aiman-imtiaz"},"content":"        setIndex(n);","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"aiman-imtiaz"},"content":"        logger.log(Level.INFO, \"Event command parsed\");","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"aiman-imtiaz"},"content":"     * Method used to extract the name and availability of the housekeeper.","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"aiman-imtiaz"},"content":"     * @param commandStringWithoutCommand Input entered by the user.","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"aiman-imtiaz"},"content":"     * @return Input consisting of housekeeper name and availability.","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"aiman-imtiaz"},"content":"     * @throws HotelLiteManagerException When description of availability is invalid.","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"aiman-imtiaz"},"content":"    private String[] extractInput(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"aiman-imtiaz"},"content":"        String[] input \u003d commandStringWithoutCommand.split(EVENT_INDICATE);","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"aiman-imtiaz"},"content":"        return input;","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"aiman-imtiaz"},"content":"    public String getIndex() {","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"aiman-imtiaz"},"content":"        return this.index;","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"aiman-imtiaz"},"content":"    public void setIndex(String index) {","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"aiman-imtiaz"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"aiman-imtiaz"},"content":"     * Get the Name of the housekeeper and verify that housekeeper is in records. If in records, add","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"aiman-imtiaz"},"content":"     * his/her availability into housekeeper list.","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"aiman-imtiaz"},"content":"     * @param ui The user interface for this execution method.","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"XunyiiZ"},"content":"     * @return","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"aiman-imtiaz"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"aiman-imtiaz"},"content":"    public void execute(ListContainer listContainer, Ui ui)","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"siewyangzhi"},"content":"            throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"aiman-imtiaz"},"content":"        final EventList eventList \u003d listContainer.getEventList();","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"aiman-imtiaz"},"content":"        String n \u003d getIndex();","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"aiman-imtiaz"},"content":"        assert !n.isEmpty() : \"event number should not be empty\";","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"aiman-imtiaz"},"content":"        eventList.delete(n);","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"aiman-imtiaz"},"content":"        logger.log(Level.INFO, \"about to update file.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"aiman-imtiaz"},"content":"        eventList.save();","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"aiman-imtiaz"},"content":"        logger.log(Level.INFO, \"end of deleting event.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"aiman-imtiaz":76,"zhenster":1,"XunyiiZ":1,"siewyangzhi":1}},{"path":"src/main/java/seedu/duke/command/eventcommands/ViewEventsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package seedu.duke.command.eventcommands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.eventlists.EventList;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.exceptions.InvalidViewEventException;","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidRoomNumberException;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"aiman-imtiaz"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"aiman-imtiaz"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"aiman-imtiaz"},"content":"public class ViewEventsCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"aiman-imtiaz"},"content":"    private static Logger logger \u003d Logger.getLogger(\"log: View events present in the list of events.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"aiman-imtiaz"},"content":"    public ViewEventsCommand(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"aiman-imtiaz"},"content":"        if (!commandStringWithoutCommand.equals(\"\")) {","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new InvalidViewEventException();","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"aiman-imtiaz"},"content":"        logger.log(Level.INFO, \"View events command parsed\");","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"aiman-imtiaz"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"aiman-imtiaz"},"content":"     * Get the Name of the housekeeper and verify that housekeeper is in records. If in records, add","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"aiman-imtiaz"},"content":"     * his/her availability into housekeeper list.","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"aiman-imtiaz"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"aiman-imtiaz"},"content":"     * @param ui The user interface for this execution method.","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"XunyiiZ"},"content":"     * @return","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"aiman-imtiaz"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"aiman-imtiaz"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"aiman-imtiaz"},"content":"    public void execute(ListContainer listContainer, Ui ui)","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"aiman-imtiaz"},"content":"            throws InvalidRoomNumberException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"aiman-imtiaz"},"content":"        final EventList eventList \u003d listContainer.getEventList();","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"aiman-imtiaz"},"content":"        ui.printAllEvents(eventList.getEventList());","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"aiman-imtiaz"},"content":"        logger.log(Level.INFO, \"log: all events displayed\");","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"aiman-imtiaz":39,"zhenster":2,"XunyiiZ":1}},{"path":"src/main/java/seedu/duke/command/housekeepercommands/AddAvailabilityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke.command.housekeepercommands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidAvailabilityException;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidDayException;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.HousekeeperList;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.storage.HousekeeperFileManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":" * Identifies the name and availability of the housekeeper and update availability into the","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":" * housekeeper list. An AddAvailabilityCommand object consists of the name of the housekeeper in list together with","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":" * their availabilities given. This can be used for updating or adding availabilities.","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"public class AddAvailabilityCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"    private String name;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"    private String availability;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"    private static final String AVAILABILITY_INDICATE \u003d \"/\";","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"    private static final char AVAILABILITY_INDICATE_CHARACTER \u003d \u0027/\u0027;","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"    private static final int MONDAY_INDICATE \u003d 1;","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"    private static final int SUNDAY_INDICATE \u003d 7;","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"    private static final int CONTAIN_ONE_SLASH_ONLY \u003d 1;","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"    private static Logger logger \u003d Logger.getLogger(\"housekeeperLogger\");","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"    public AddAvailabilityCommand(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"        String[] input;","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"        String inputName;","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"        String inputAvailability;","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"        if (commandStringWithoutCommand.isEmpty()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidAvailabilityException();","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"        try {","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"            input \u003d extractInput(commandStringWithoutCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"            inputName \u003d input[0].trim();","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"            inputAvailability \u003d input[1].trim();","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"            logger.log(Level.WARNING, \"Availability Housekeeper command is found to be empty.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidAvailabilityException();","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"        String name \u003d checkValidExtract(inputName);","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"        String availability \u003d checkValidAvailability(inputAvailability);","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"FaliciaOng"},"content":"        assert (!name.isEmpty()) : \"Name of Housekeeper should not be empty.\";","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"FaliciaOng"},"content":"        assert (!availability.isEmpty()) : \"Availability should not be empty\";","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"FaliciaOng"},"content":"        setName(name);","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"FaliciaOng"},"content":"        setAvailability(availability);","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"FaliciaOng"},"content":"     * This method checks if the availability given by the user is valid. It is valid if any of the days in week given","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"FaliciaOng"},"content":"     * is within 1 to 7 where 1 represents Monday and 7 represents Sunday.","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"FaliciaOng"},"content":"     * @param inputAvailability Availability given by the user.","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"FaliciaOng"},"content":"     * @return A valid availability.","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"FaliciaOng"},"content":"     * @throws HotelLiteManagerException When the given availability is not integer and between 1 and 7.","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"FaliciaOng"},"content":"    private String checkValidAvailability(String inputAvailability) throws HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"FaliciaOng"},"content":"        String availability \u003d checkValidExtract(inputAvailability);","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"FaliciaOng"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"FaliciaOng"},"content":"            String[] splitDays \u003d availability.split(\",\");","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"FaliciaOng"},"content":"            for (String day : splitDays) {","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"FaliciaOng"},"content":"                String trimDay \u003d day.trim();","lastModifiedDate":"2022-04-02"},{"lineNumber":68,"author":{"gitId":"FaliciaOng"},"content":"                String validDay \u003d checkLengthInput(trimDay);","lastModifiedDate":"2022-04-02"},{"lineNumber":69,"author":{"gitId":"FaliciaOng"},"content":"                int availableDay \u003d Integer.parseInt(validDay);","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"FaliciaOng"},"content":"                if (availableDay \u003c MONDAY_INDICATE || availableDay \u003e SUNDAY_INDICATE) {","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"FaliciaOng"},"content":"                    logger.log(Level.WARNING, \"Days given were not valid.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"FaliciaOng"},"content":"                    throw new InvalidDayException();","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"FaliciaOng"},"content":"                }","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"FaliciaOng"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"FaliciaOng"},"content":"        } catch (NumberFormatException numberError) {","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"FaliciaOng"},"content":"            logger.log(Level.WARNING, \"Number given not Integer.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidDayException();","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"FaliciaOng"},"content":"        return availability;","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"FaliciaOng"},"content":"     * This method ensures that the derive day has a length of one as the user only can key in a single integer","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"FaliciaOng"},"content":"     * number.","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"FaliciaOng"},"content":"     * @param day Number used to indicate the day in the week.","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"FaliciaOng"},"content":"     * @return Valid day.","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"FaliciaOng"},"content":"     * @throws HotelLiteManagerException When the day given has length more than1. Eg (12,2DF)","lastModifiedDate":"2022-04-11"},{"lineNumber":89,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"FaliciaOng"},"content":"    private String checkLengthInput(String day) throws HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":91,"author":{"gitId":"FaliciaOng"},"content":"        String trimmedDay \u003d day.trim();","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"FaliciaOng"},"content":"        if (trimmedDay.length() \u003e 1) {","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"FaliciaOng"},"content":"            logger.log(Level.WARNING, \"Length given was more than 1.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidDayException();","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"FaliciaOng"},"content":"        assert (trimmedDay.length() \u003d\u003d 1) : \"Day mention has more than length of 1\";","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"FaliciaOng"},"content":"        return trimmedDay;","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"FaliciaOng"},"content":"     * This method verifies that input given by user is not empty.","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"FaliciaOng"},"content":"     * @param inputGiven Either the name or availability given by user.","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"FaliciaOng"},"content":"     * @return Either the valid Name or Availability.","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"FaliciaOng"},"content":"     * @throws HotelLiteManagerException When input given is empty.","lastModifiedDate":"2022-04-11"},{"lineNumber":106,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"FaliciaOng"},"content":"    private String checkValidExtract(String inputGiven) throws HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":108,"author":{"gitId":"FaliciaOng"},"content":"        if (inputGiven.isEmpty()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidAvailabilityException();","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"FaliciaOng"},"content":"        return inputGiven;","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"FaliciaOng"},"content":"     * Method used to extract the name and availability of the housekeeper. Ensure slash given is only one and","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"FaliciaOng"},"content":"     * is of correct delimiter.","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"FaliciaOng"},"content":"     * @param commandStringWithoutCommand Input entered by the user.","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"FaliciaOng"},"content":"     * @return Input consisting of housekeeper name and availability.","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"FaliciaOng"},"content":"     * @throws HotelLiteManagerException When description of availability is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"FaliciaOng"},"content":"    private String[] extractInput(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"FaliciaOng"},"content":"        boolean isSymbolIncorrect \u003d !commandStringWithoutCommand.contains(AVAILABILITY_INDICATE);","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"FaliciaOng"},"content":"        if (isSymbolIncorrect) {","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"FaliciaOng"},"content":"            logger.log(Level.WARNING, \"Availability Housekeeper command usage is wrong.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidAvailabilityException();","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"FaliciaOng"},"content":"        long slashCounts \u003d commandStringWithoutCommand.codePoints()","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"FaliciaOng"},"content":"                .filter(t -\u003e t \u003d\u003d AVAILABILITY_INDICATE_CHARACTER)","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"FaliciaOng"},"content":"                .count();","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"FaliciaOng"},"content":"        if (!(slashCounts \u003d\u003d CONTAIN_ONE_SLASH_ONLY)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"FaliciaOng"},"content":"            logger.log(Level.WARNING, \"Contains more than one slash.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidAvailabilityException();","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"FaliciaOng"},"content":"        String[] input \u003d commandStringWithoutCommand.split(AVAILABILITY_INDICATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"FaliciaOng"},"content":"        return input;","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"FaliciaOng"},"content":"    public String getName() {","lastModifiedDate":"2022-03-16"},{"lineNumber":140,"author":{"gitId":"FaliciaOng"},"content":"        return name;","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"FaliciaOng"},"content":"    public void setName(String name) {","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"FaliciaOng"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"FaliciaOng"},"content":"    public String getAvailability() {","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"FaliciaOng"},"content":"        return availability;","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"FaliciaOng"},"content":"    public void setAvailability(String availability) {","lastModifiedDate":"2022-03-16"},{"lineNumber":152,"author":{"gitId":"FaliciaOng"},"content":"        this.availability \u003d availability;","lastModifiedDate":"2022-03-16"},{"lineNumber":153,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":154,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":156,"author":{"gitId":"FaliciaOng"},"content":"     * Get the Name of the housekeeper and verify that housekeeper is in records. If in records, add","lastModifiedDate":"2022-03-16"},{"lineNumber":157,"author":{"gitId":"FaliciaOng"},"content":"     * his/her availability into housekeeper list.","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":159,"author":{"gitId":"FaliciaOng"},"content":"     * @param listContainer The object containing the lists to update depending on the command inputted by the user.","lastModifiedDate":"2022-04-11"},{"lineNumber":160,"author":{"gitId":"FaliciaOng"},"content":"     * @param ui            The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":161,"author":{"gitId":"FaliciaOng"},"content":"     * @throws HotelLiteManagerException If user does not exist in the records.","lastModifiedDate":"2022-04-11"},{"lineNumber":162,"author":{"gitId":"FaliciaOng"},"content":"     * @throws IOException Write to file has failed.","lastModifiedDate":"2022-04-11"},{"lineNumber":163,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"FaliciaOng"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":166,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-03-30"},{"lineNumber":167,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.addAvailabilityInList(name, availability);","lastModifiedDate":"2022-03-30"},{"lineNumber":168,"author":{"gitId":"FaliciaOng"},"content":"        ui.printNotedLine();","lastModifiedDate":"2022-03-30"},{"lineNumber":169,"author":{"gitId":"FaliciaOng"},"content":"        ui.printMessage(\"Added \" + name + \" availability into records\");","lastModifiedDate":"2022-03-29"},{"lineNumber":170,"author":{"gitId":"FaliciaOng"},"content":"        ui.printBottomLine();","lastModifiedDate":"2022-03-30"},{"lineNumber":171,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":172,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":173,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":174,"author":{"gitId":"FaliciaOng"},"content":"     * This methods update the housekeeper\u0027s availability into the housekeeper file.","lastModifiedDate":"2022-04-11"},{"lineNumber":175,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":176,"author":{"gitId":"FaliciaOng"},"content":"     * @param listContainer The object containing the lists to update depending on the command inputted by the user.","lastModifiedDate":"2022-04-11"},{"lineNumber":177,"author":{"gitId":"FaliciaOng"},"content":"     * @throws IOException Write to file has failed.","lastModifiedDate":"2022-04-11"},{"lineNumber":178,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":179,"author":{"gitId":"FaliciaOng"},"content":"    public void writeAvailabilityToFile(ListContainer listContainer) throws IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":180,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-04-11"},{"lineNumber":181,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperFileManager housekeeperFileManager \u003d new HousekeeperFileManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":182,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperFileManager.save(housekeeperList);","lastModifiedDate":"2022-03-30"},{"lineNumber":183,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":184,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"zhenster":3,"FaliciaOng":180,"siewyangzhi":1}},{"path":"src/main/java/seedu/duke/command/housekeepercommands/AddHousekeeperCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke.command.housekeepercommands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.InvalidAgeException;","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.InvalidHousekeeperProfileException;","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.UnderAgeException;","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.OverAgeException;","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.DuplicateCommandException;","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.NameNotStringException;","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.Housekeeper;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.HousekeeperList;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.storage.HousekeeperFileManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":" * Extract name and age of housekeeper from user input and record it into the housekeeper list.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"public class AddHousekeeperCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"    private static final int CONTAIN_ONE_SLASH_ONLY \u003d 1;","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ADD_HOUSEKEEPER_COMMAND \u003d \"add housekeeper\";","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"    private Housekeeper housekeeper;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"    private static final String AGE_INDICATE \u003d \"/\";","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"    private static final char AGE_INDICATE_CHARACTER \u003d \u0027/\u0027;","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"    private static final int MIN_AGE_ACCEPTED \u003d 21;","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"    private static final int MAX_AGE_ACCEPTED \u003d 60;","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"    private static Logger logger \u003d Logger.getLogger(\"housekeeperLogger\");","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"     * Creates a new housekeeper profile consisting of their name and age which would be recorded","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"     * into housekeeper list.","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"     * @param commandStringWithoutCommand Input of age and name given by user.","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"     * @throws HotelLiteManagerException When user input an empty data.","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"    public AddHousekeeperCommand(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"        if (commandStringWithoutCommand.isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"            logger.log(Level.WARNING, \"Housekeeper command usage is found to be wrong.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidHousekeeperProfileException();","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"        String inputWithNoSpace \u003d commandStringWithoutCommand.trim();","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"        if (inputWithNoSpace.contains(ADD_HOUSEKEEPER_COMMAND)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"FaliciaOng"},"content":"            logger.log(Level.WARNING, \"Repeated add housekeeper command given.\");","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"FaliciaOng"},"content":"            throw new DuplicateCommandException();","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":51,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeper \u003d extractDetails(commandStringWithoutCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"FaliciaOng"},"content":"        setHousekeeper(housekeeper);","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"FaliciaOng"},"content":"     * Extract name and age details of the housekeeper.","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"FaliciaOng"},"content":"     * @param commandStringWithoutCommand Input given by user.","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"FaliciaOng"},"content":"     * @return housekeeper profile.","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"FaliciaOng"},"content":"     * @throws HotelLiteManagerException Age enter is invalid and command enter regarding the housekeeper profile","lastModifiedDate":"2022-04-09"},{"lineNumber":61,"author":{"gitId":"FaliciaOng"},"content":"     *                                   is wrong.","lastModifiedDate":"2022-04-09"},{"lineNumber":62,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"FaliciaOng"},"content":"    private Housekeeper extractDetails(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-04-09"},{"lineNumber":64,"author":{"gitId":"FaliciaOng"},"content":"        boolean isSymbolIncorrect \u003d !commandStringWithoutCommand.contains(AGE_INDICATE);","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"FaliciaOng"},"content":"        if (isSymbolIncorrect) {","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"FaliciaOng"},"content":"            logger.log(Level.WARNING, \"Housekeeper command usage is found to be wrong.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidHousekeeperProfileException();","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"FaliciaOng"},"content":"        long slashCounts \u003d commandStringWithoutCommand.codePoints()","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"FaliciaOng"},"content":"                .filter(t -\u003e t \u003d\u003d AGE_INDICATE_CHARACTER)","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"FaliciaOng"},"content":"                .count();","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"FaliciaOng"},"content":"        if (!(slashCounts \u003d\u003d CONTAIN_ONE_SLASH_ONLY)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"FaliciaOng"},"content":"            logger.log(Level.WARNING, \"Contains more than one slash.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidHousekeeperProfileException();","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"FaliciaOng"},"content":"        String[] input;","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"FaliciaOng"},"content":"        String inputAge;","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"FaliciaOng"},"content":"        String inputName;","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"FaliciaOng"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"FaliciaOng"},"content":"            input \u003d commandStringWithoutCommand.split(AGE_INDICATE);","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"FaliciaOng"},"content":"            inputName \u003d input[0];","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"FaliciaOng"},"content":"            inputAge \u003d input[1];","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"FaliciaOng"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"FaliciaOng"},"content":"            logger.log(Level.WARNING, \"Housekeeper command is found to be empty.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidHousekeeperProfileException();","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"FaliciaOng"},"content":"        int ageNumber;","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"FaliciaOng"},"content":"        String name;","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"FaliciaOng"},"content":"        name \u003d extractName(inputName);","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"FaliciaOng"},"content":"        ageNumber \u003d extractAge(inputAge);","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"FaliciaOng"},"content":"        assert (!name.isEmpty()) : \"Housekeeper name should not be empty.\";","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeper \u003d new Housekeeper(name, ageNumber);","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"FaliciaOng"},"content":"        return housekeeper;","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"FaliciaOng"},"content":"     * This method extracts the age of housekeeper from the user input.","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"FaliciaOng"},"content":"     * @param inputAge Input age given by user.","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"FaliciaOng"},"content":"     * @return Valid age.","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"FaliciaOng"},"content":"     * @throws HotelLiteManagerException When age given is not valid.","lastModifiedDate":"2022-04-09"},{"lineNumber":102,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"FaliciaOng"},"content":"    private int extractAge(String inputAge) throws HotelLiteManagerException {","lastModifiedDate":"2022-04-09"},{"lineNumber":104,"author":{"gitId":"FaliciaOng"},"content":"        int ageNumber;","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"FaliciaOng"},"content":"        String age;","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"FaliciaOng"},"content":"        try {","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"FaliciaOng"},"content":"            age \u003d inputAge.trim();","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"FaliciaOng"},"content":"            ageNumber \u003d Integer.parseInt(age);","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"FaliciaOng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidAgeException();","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"FaliciaOng"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidAgeException();","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"FaliciaOng"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidAgeException();","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"FaliciaOng"},"content":"        assert (!age.isEmpty()) : \"Age should not be empty.\";","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"FaliciaOng"},"content":"        if (ageNumber \u003c MIN_AGE_ACCEPTED) {","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"FaliciaOng"},"content":"            throw new UnderAgeException();","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"FaliciaOng"},"content":"        if (ageNumber \u003e MAX_AGE_ACCEPTED) {","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"FaliciaOng"},"content":"            throw new OverAgeException();","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"FaliciaOng"},"content":"        assert (ageNumber \u003e\u003d MIN_AGE_ACCEPTED \u0026 ageNumber \u003c\u003d MAX_AGE_ACCEPTED) : \"Age range is invalid.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"FaliciaOng"},"content":"        return ageNumber;","lastModifiedDate":"2022-03-18"},{"lineNumber":125,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":128,"author":{"gitId":"FaliciaOng"},"content":"     * This method extracts the name of the housekeeper from the user input. It checks if there exist any digits","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"FaliciaOng"},"content":"     * or symbol in the name.","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":131,"author":{"gitId":"FaliciaOng"},"content":"     * @param inputName Input name give by user.","lastModifiedDate":"2022-03-18"},{"lineNumber":132,"author":{"gitId":"FaliciaOng"},"content":"     * @return Valid name.","lastModifiedDate":"2022-03-18"},{"lineNumber":133,"author":{"gitId":"FaliciaOng"},"content":"     * @throws HotelLiteManagerException When name given is empty and when name has symbols and digits.","lastModifiedDate":"2022-04-09"},{"lineNumber":134,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":135,"author":{"gitId":"FaliciaOng"},"content":"    private String extractName(String inputName) throws HotelLiteManagerException {","lastModifiedDate":"2022-04-09"},{"lineNumber":136,"author":{"gitId":"FaliciaOng"},"content":"        String name;","lastModifiedDate":"2022-03-18"},{"lineNumber":137,"author":{"gitId":"FaliciaOng"},"content":"        try {","lastModifiedDate":"2022-03-18"},{"lineNumber":138,"author":{"gitId":"FaliciaOng"},"content":"            name \u003d inputName.trim();","lastModifiedDate":"2022-03-18"},{"lineNumber":139,"author":{"gitId":"FaliciaOng"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-18"},{"lineNumber":140,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidHousekeeperProfileException();","lastModifiedDate":"2022-03-30"},{"lineNumber":141,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":142,"author":{"gitId":"FaliciaOng"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":143,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidHousekeeperProfileException();","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":145,"author":{"gitId":"FaliciaOng"},"content":"        if (!name.matches(\"^([a-z]|\\\\s|[A-Z])+$\")) {","lastModifiedDate":"2022-03-30"},{"lineNumber":146,"author":{"gitId":"FaliciaOng"},"content":"            throw new NameNotStringException();","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":148,"author":{"gitId":"FaliciaOng"},"content":"        return name;","lastModifiedDate":"2022-03-18"},{"lineNumber":149,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"FaliciaOng"},"content":"    public Housekeeper getHousekeeper() {","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"FaliciaOng"},"content":"        return housekeeper;","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"FaliciaOng"},"content":"    public void setHousekeeper(Housekeeper housekeeper) {","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"FaliciaOng"},"content":"        this.housekeeper \u003d housekeeper;","lastModifiedDate":"2022-03-15"},{"lineNumber":157,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":158,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":159,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":160,"author":{"gitId":"FaliciaOng"},"content":"     * Method to add new housekeeper profile into list and rejects any profile that has already been recorded.","lastModifiedDate":"2022-03-16"},{"lineNumber":161,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":162,"author":{"gitId":"FaliciaOng"},"content":"     * @param listContainer The object containing the lists to update depending on the command inputted by the user.","lastModifiedDate":"2022-04-11"},{"lineNumber":163,"author":{"gitId":"FaliciaOng"},"content":"     * @param ui            The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"FaliciaOng"},"content":"     * @throws HotelLiteManagerException If housekeeper to be added has already been added.","lastModifiedDate":"2022-04-11"},{"lineNumber":165,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":166,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":167,"author":{"gitId":"FaliciaOng"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":168,"author":{"gitId":"XunyiiZ"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-03-26"},{"lineNumber":169,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.addHousekeeperInList(getHousekeeper());","lastModifiedDate":"2022-03-29"},{"lineNumber":170,"author":{"gitId":"FaliciaOng"},"content":"        ui.printHousekeeperNoted(housekeeper);","lastModifiedDate":"2022-03-16"},{"lineNumber":171,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":172,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":173,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":174,"author":{"gitId":"FaliciaOng"},"content":"     * This method updates the new profile into the file.","lastModifiedDate":"2022-04-11"},{"lineNumber":175,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":176,"author":{"gitId":"FaliciaOng"},"content":"     * @param listContainer The object containing the lists to update depending on the command inputted by the user.","lastModifiedDate":"2022-04-11"},{"lineNumber":177,"author":{"gitId":"FaliciaOng"},"content":"     * @throws IOException Write to file has failed.","lastModifiedDate":"2022-04-11"},{"lineNumber":178,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":179,"author":{"gitId":"FaliciaOng"},"content":"    public void writeHousekeeperToFile(ListContainer listContainer) throws IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":180,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-04-11"},{"lineNumber":181,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperFileManager housekeeperFileManager \u003d new HousekeeperFileManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":182,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperFileManager.save(housekeeperList);","lastModifiedDate":"2022-03-30"},{"lineNumber":183,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":184,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"FaliciaOng":183,"XunyiiZ":1}},{"path":"src/main/java/seedu/duke/command/housekeepercommands/AddHousekeeperPerformanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke.command.housekeepercommands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"import seedu.duke.ParsingUtils;","lastModifiedDate":"2022-04-05"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidCommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.DuplicateCommandException;","lastModifiedDate":"2022-04-05"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.EmptyHousekeeperPerformanceRatingException;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.EmptyHousekeeperPerformanceNameException;","lastModifiedDate":"2022-04-05"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidHousekeeperPerformanceNameException;","lastModifiedDate":"2022-04-05"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidHousekeeperPerformanceRatingException;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.RepeatHousekeeperPerformanceNameException;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.NonexistentHousekeeperException;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"import seedu.duke.housekeeperperformancelists.HousekeeperPerformanceList;","lastModifiedDate":"2022-04-05"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"import seedu.duke.housekeeperperformancelists.HousekeeperPerformance;","lastModifiedDate":"2022-04-05"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"import seedu.duke.housekeeperlists.HousekeeperList;","lastModifiedDate":"2022-04-05"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-04-05"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-04-05"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"import seedu.duke.satisfactionlists.SatisfactionList;","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"import seedu.duke.storage.HousekeeperPerformanceFileManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"import seedu.duke.storage.SatisfactionListFileManager;","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":" * Represents a command to add a new HousekeeperPerformance object to the HousekeeperPerformanceList.","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":" * In other words, implements the user command of recording a housekeeper\u0027s name and their performance rating.","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"public class AddHousekeeperPerformanceCommand extends Command {","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"    private static Logger logger \u003d Logger.getLogger(\"housekeeperPerformanceLogger\");","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"    private static final String DELIMITER \u003d \"/\";","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"    private static final String ADD_PERFORMANCE_COMMAND \u003d \"add performance\";","lastModifiedDate":"2022-04-05"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"    private HousekeeperPerformance housekeeperPerformance;","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"    private ParsingUtils parsingUtils \u003d new ParsingUtils();","lastModifiedDate":"2022-04-05"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"     * Takes in the user input and checks if the formatting of the command for","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"     * adding a housekeeper\u0027s performance rating is valid.","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"     * Extracts the housekeeper\u0027s name and performance rating from the user input and creates an","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"     * AddHousekeeperPerformanceCommand object.","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"     * @throws HotelLiteManagerException If there is no \"/\" character included in the user input, if there is no","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"     *                                   housekeeper name provided, if there is no housekeeper rating provided, or if","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"     *                                   the rating is invalid (not an integer from 1-5 inclusive).","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"    public AddHousekeeperPerformanceCommand(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"        if (userInput.contains(ADD_PERFORMANCE_COMMAND)) {","lastModifiedDate":"2022-04-05"},{"lineNumber":54,"author":{"gitId":"zhenster"},"content":"            throw new DuplicateCommandException();","lastModifiedDate":"2022-04-05"},{"lineNumber":55,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":56,"author":{"gitId":"zhenster"},"content":"        if (!userInput.contains(DELIMITER)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"zhenster"},"content":"            logger.log(Level.WARNING, \"A \u0027/\u0027 character is needed to separate the housekeeper\u0027s name \"","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"zhenster"},"content":"                    + \"from their rating.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"zhenster"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"zhenster"},"content":"        if (parsingUtils.countSlashes(userInput) \u003e 1) {","lastModifiedDate":"2022-04-05"},{"lineNumber":62,"author":{"gitId":"zhenster"},"content":"            logger.log(Level.WARNING, \"More than one \u0027/\u0027 character detected. There should only be a single \u0027/\u0027\"","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"                    + \" that separates the housekeeper\u0027s name from their performance.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"zhenster"},"content":"        if (userInput.trim().equals(DELIMITER)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"zhenster"},"content":"            logger.log(Level.WARNING, \"Housekeeper name and performance rating were both found to be empty.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"zhenster"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"zhenster"},"content":"        String housekeeperName \u003d extractHousekeeperName(userInput);","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"zhenster"},"content":"        int housekeeperRating \u003d extractHousekeeperRating(userInput);","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"zhenster"},"content":"        HousekeeperPerformance housekeeperPerformance \u003d new HousekeeperPerformance(housekeeperName, housekeeperRating);","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"zhenster"},"content":"        setHousekeeperPerformance(housekeeperPerformance);","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"zhenster"},"content":"     * Returns the housekeeper\u0027s name that is extracted from user input.","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"zhenster"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"zhenster"},"content":"     * @return The name of the housekeeper specified in the user input.","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"zhenster"},"content":"     * @throws HotelLiteManagerException if the name provided by the user is empty.","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"zhenster"},"content":"    public String extractHousekeeperName(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"zhenster"},"content":"        String[] splitInput \u003d userInput.split(\"/\");","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"zhenster"},"content":"        String housekeeperName \u003d \"\";","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"zhenster"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"zhenster"},"content":"            housekeeperName \u003d splitInput[0].trim();","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"zhenster"},"content":"            if (housekeeperName.isEmpty()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"zhenster"},"content":"                throw new EmptyHousekeeperPerformanceNameException();","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"zhenster"},"content":"            if (!parsingUtils.isAlpha(housekeeperName)) {","lastModifiedDate":"2022-04-05"},{"lineNumber":92,"author":{"gitId":"zhenster"},"content":"                throw new InvalidHousekeeperPerformanceNameException();","lastModifiedDate":"2022-04-05"},{"lineNumber":93,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-04-05"},{"lineNumber":94,"author":{"gitId":"zhenster"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"zhenster"},"content":"            throw new EmptyHousekeeperPerformanceNameException();","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"zhenster"},"content":"        return housekeeperName;","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"zhenster"},"content":"     * Returns the housekeeper\u0027s performance rating that is extracted from user input.","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"zhenster"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"zhenster"},"content":"     * @return The performance rating of the housekeeper specified in user input.","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"zhenster"},"content":"     * @throws HotelLiteManagerException if the performance rating provided by the user is empty.","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"zhenster"},"content":"    public int extractHousekeeperRating(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"zhenster"},"content":"        String[] splitInput \u003d userInput.split(\"/\");","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"zhenster"},"content":"        String ratingString \u003d \"\";","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"zhenster"},"content":"        int ratingValue;","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"zhenster"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"zhenster"},"content":"            ratingString \u003d splitInput[1].trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"zhenster"},"content":"            ratingValue \u003d Integer.parseInt(ratingString);","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"zhenster"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"zhenster"},"content":"            throw new InvalidHousekeeperPerformanceRatingException();","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"zhenster"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"zhenster"},"content":"            throw new EmptyHousekeeperPerformanceRatingException();","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"zhenster"},"content":"        if (ratingValue \u003c 1 || ratingValue \u003e 5) {","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"zhenster"},"content":"            throw new InvalidHousekeeperPerformanceRatingException();","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":122,"author":{"gitId":"zhenster"},"content":"        return ratingValue;","lastModifiedDate":"2022-03-26"},{"lineNumber":123,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":124,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":125,"author":{"gitId":"zhenster"},"content":"    public HousekeeperPerformance getHousekeeperPerformance() {","lastModifiedDate":"2022-03-26"},{"lineNumber":126,"author":{"gitId":"zhenster"},"content":"        return housekeeperPerformance;","lastModifiedDate":"2022-03-26"},{"lineNumber":127,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":128,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"zhenster"},"content":"    public void setHousekeeperPerformance(HousekeeperPerformance housekeeperPerformance) {","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"zhenster"},"content":"        this.housekeeperPerformance \u003d housekeeperPerformance;","lastModifiedDate":"2022-03-26"},{"lineNumber":131,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":136,"author":{"gitId":"zhenster"},"content":"     * Adds a new HousekeeperPerformance object to the HousekeeperPerformanceList using the","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"zhenster"},"content":"     * housekeeper name and performance rating found in the housekeeperPerformance instance variable.","lastModifiedDate":"2022-03-27"},{"lineNumber":138,"author":{"gitId":"zhenster"},"content":"     * Returns an acknowledgement message to inform the user that the performance has been recorded.","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"zhenster"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"zhenster"},"content":"     * @param listContainer The object containing the data structures necessary for recording a housekeeper\u0027s","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"zhenster"},"content":"     *                      performance. In this case, we are manipulating the housekeeperPerformanceList object","lastModifiedDate":"2022-03-27"},{"lineNumber":142,"author":{"gitId":"zhenster"},"content":"     *                      (adding to it), and we require information from the housekeeperList object.","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"zhenster"},"content":"     * @param ui            The object that deals with user interface for the program.","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"zhenster"},"content":"     * @throws HotelLiteManagerException if the item name within the item object does not exist in the item list.","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"zhenster"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"XunyiiZ"},"content":"        HousekeeperPerformanceList housekeeperPerformanceList \u003d listContainer.getHousekeeperPerformanceList();","lastModifiedDate":"2022-03-26"},{"lineNumber":148,"author":{"gitId":"zhenster"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-03-27"},{"lineNumber":149,"author":{"gitId":"zhenster"},"content":"        // Checks if the user tries to add a housekeeper performance for a housekeeper not the HousekeeperList records","lastModifiedDate":"2022-03-27"},{"lineNumber":150,"author":{"gitId":"zhenster"},"content":"        if (!housekeeperList.hasNameAdded(housekeeperPerformance.getName())) {","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"zhenster"},"content":"            throw new NonexistentHousekeeperException();","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"zhenster"},"content":"        } else if (housekeeperPerformanceList.isHousekeeperInPerformanceList(housekeeperPerformance.getName())) {","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"zhenster"},"content":"            throw new RepeatHousekeeperPerformanceNameException();","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"zhenster"},"content":"        housekeeperPerformanceList.addHousekeeperPerformance(housekeeperPerformance);","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"zhenster"},"content":"        ui.printAddHousekeeperPerformanceAcknowledgementMessage(housekeeperPerformanceList, housekeeperPerformance);","lastModifiedDate":"2022-03-26"},{"lineNumber":157,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":158,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":159,"author":{"gitId":"zhenster"},"content":"    public void writeHousekeeperPerformanceListToFile(ListContainer listContainer) throws IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":160,"author":{"gitId":"zhenster"},"content":"        HousekeeperPerformanceList housekeeperPerformanceList \u003d listContainer.getHousekeeperPerformanceList();","lastModifiedDate":"2022-04-11"},{"lineNumber":161,"author":{"gitId":"zhenster"},"content":"        HousekeeperPerformanceFileManager housekeeperPerformanceFileManager \u003d new HousekeeperPerformanceFileManager();","lastModifiedDate":"2022-04-11"},{"lineNumber":162,"author":{"gitId":"zhenster"},"content":"        housekeeperPerformanceFileManager.save(housekeeperPerformanceList);","lastModifiedDate":"2022-04-11"},{"lineNumber":163,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":164,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":165,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":166,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"zhenster":159,"FaliciaOng":3,"XunyiiZ":1,"siewyangzhi":3}},{"path":"src/main/java/seedu/duke/command/housekeepercommands/AgeIncreaseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke.command.housekeepercommands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.Housekeeper;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.HousekeeperList;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidNewYearException;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.storage.HousekeeperFileManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":" * Represents a command to increase every housekeeper age by one and delete housekeeper whose age has exceeded age","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":" * limit.","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"public class AgeIncreaseCommand extends Command {","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"    private static final String UPDATE_AGE_BY_ONE \u003d \"is a new year\";","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"    public AgeIncreaseCommand(String input) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"        if (!input.equals(UPDATE_AGE_BY_ONE)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidNewYearException();","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"     * Increases all housekeeper\u0027s age by one and records housekeeper who has exceed age limit. Housekeeper who exceed","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"     * age limit will be removed from the list.","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"     * @param listContainer The object containing the lists to update depending on the command inputted by the user.","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"     * @param ui            The printing of message to notify user that every housekeeper age has increase by one","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"     *                      and also prints the the list of overage housekeepers.","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws IOException {","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.increaseAllAgeByOne();","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"        ui.printMessage(\"Everyone age has increased by one\");","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"        ArrayList\u003cHousekeeper\u003e overAgeHousekeeperList \u003d housekeeperList.getHousekeeperExceedValidAgeList();","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"        ui.printMessage(\"**Over age limit housekeeper will be removed from list**\");","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"        ui.printOverAgeList(overAgeHousekeeperList);","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.deleteOverAgeHousekeeper();","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"FaliciaOng"},"content":"     * This method updates all the age of housekeeper in records by one.","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"FaliciaOng"},"content":"     * @param listContainer The object containing the lists to update depending on the command inputted by the user.","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"FaliciaOng"},"content":"     * @throws IOException Write to has file failed.","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"FaliciaOng"},"content":"    public void writeAgeIncreaseToFile(ListContainer listContainer) throws IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperFileManager housekeeperFileManager \u003d new HousekeeperFileManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperFileManager.save(housekeeperList);","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"zhenster":2,"FaliciaOng":55,"siewyangzhi":1}},{"path":"src/main/java/seedu/duke/command/housekeepercommands/DeleteHousekeeperCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke.command.housekeepercommands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.DuplicateCommandException;","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.EmptyNameException;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.HousekeeperList;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.AssignmentMap;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.storage.HousekeeperFileManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":" * Represents a command to delete an existing housekeeper within the housekeeper list.","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":" * A DeleteHousekeeperCommand object consists of the name of the housekeeper to be deleted.","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"public class DeleteHousekeeperCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"    private String name;","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"    private static final String DELETE_PROFILE_COMMAND \u003d \"delete housekeeper\";","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"    private static Logger logger \u003d Logger.getLogger(\"housekeeperDeletionLogger\");","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"    public DeleteHousekeeperCommand(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"        if (commandStringWithoutCommand.isEmpty()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"            throw new EmptyNameException();","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"        String inputWithNoSpace \u003d commandStringWithoutCommand.trim();","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"        if (inputWithNoSpace.contains(DELETE_PROFILE_COMMAND)) {","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"            logger.log(Level.WARNING, \"Repeated delete housekeeper command given.\");","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"            throw new DuplicateCommandException();","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"        name \u003d commandStringWithoutCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"    public String getName() {","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"        return name;","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"    public void setName(String name) {","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"     * Remove Housekeeper that is not active from the list and print out the total strength of housekeeper in the list.","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"FaliciaOng"},"content":"     * @param listContainer List of information.","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"FaliciaOng"},"content":"     * @param ui            The instance of the Ui class used for printing additional messages when a command","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"FaliciaOng"},"content":"     *                      is executed.","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"FaliciaOng"},"content":"     * @throws HotelLiteManagerException User given is not in housekeeper list.","lastModifiedDate":"2022-04-09"},{"lineNumber":53,"author":{"gitId":"FaliciaOng"},"content":"     * @throws IOException               Write to file has failed.","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"aiman-imtiaz"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.removeHousekeeperInList(name);","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"aiman-imtiaz"},"content":"        AssignmentMap assignmentMap \u003d listContainer.getAssignmentMap();","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"aiman-imtiaz"},"content":"        assignmentMap.removeAssignment(name);","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"aiman-imtiaz"},"content":"        assignmentMap.save();","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"FaliciaOng"},"content":"        ui.printNotifiedDeletionOfHousekeeper(housekeeperList, name);","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"FaliciaOng"},"content":"     * After deletion of housekeeper, the housekeeper file has to be updated. This method will update","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"FaliciaOng"},"content":"     * by removing the housekeeper from the records.","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"FaliciaOng"},"content":"     * @param listContainer The object containing the lists to update depending on the command inputted by the user.","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"FaliciaOng"},"content":"     * @throws IOException Write to file has failed.","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":72,"author":{"gitId":"FaliciaOng"},"content":"    public void writeHousekeeperToFile(ListContainer listContainer) throws IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":73,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-04-11"},{"lineNumber":74,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperFileManager housekeeperFileManager \u003d new HousekeeperFileManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperFileManager.save(housekeeperList);","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"zhenster":2,"aiman-imtiaz":4,"FaliciaOng":70,"siewyangzhi":1}},{"path":"src/main/java/seedu/duke/command/housekeepercommands/GetAvailableHousekeeperCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke.command.housekeepercommands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.DuplicateCommandException;","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.Housekeeper;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.EmptyDayException;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.HousekeeperList;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidDayException;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":" * Number given from user to view list of housekeeper available on any day from Monday to Sunday.","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"public class GetAvailableHousekeeperCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"    private int searchDay;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"    private static Logger logger \u003d Logger.getLogger(\"housekeeperLogger\");","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"    private static final int MONDAY_INDICATE \u003d 1;","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"    private static final int SUNDAY_INDICATE \u003d 7;","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"    private static final String VIEW_AVAILABLE_HOUSEKEEPER_DAY \u003d \"get available on\";","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"    public GetAvailableHousekeeperCommand(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"        if (commandStringWithoutCommand.isEmpty()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"            logger.log(Level.WARNING, \"Empty Day.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"            throw new EmptyDayException();","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"        if (commandStringWithoutCommand.contains(VIEW_AVAILABLE_HOUSEKEEPER_DAY)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"            logger.log(Level.WARNING, \"Duplicated command.\");","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"            throw new DuplicateCommandException();","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"        searchDay \u003d checkCorrectDayGiven(commandStringWithoutCommand);","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"        assert (searchDay \u003e\u003d MONDAY_INDICATE \u0026 searchDay \u003c\u003d SUNDAY_INDICATE) : \"Input day incorrect range.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"     * This method checks the day input by the user is within 1 to 7.","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"     * @param commandStringWithoutCommand Day input given by user.","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"     * @return Day within valid range.","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"     * @throws HotelLiteManagerException if input is not an integer or not between 1 and 7.","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"    private int checkCorrectDayGiven(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"FaliciaOng"},"content":"        int day;","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"FaliciaOng"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"FaliciaOng"},"content":"            String trimmedInput \u003d commandStringWithoutCommand.trim();","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"FaliciaOng"},"content":"            day \u003d Integer.parseInt(trimmedInput);","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"FaliciaOng"},"content":"        } catch (NumberFormatException numberError) {","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"FaliciaOng"},"content":"            logger.log(Level.WARNING, \"Day is not an integer.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidDayException();","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"FaliciaOng"},"content":"        if (day \u003c MONDAY_INDICATE | day \u003e SUNDAY_INDICATE) {","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"            logger.log(Level.WARNING, \"Day is not within range.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidDayException();","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"FaliciaOng"},"content":"        return day;","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"FaliciaOng"},"content":"    public int getSearchDay() {","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"FaliciaOng"},"content":"        return searchDay;","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"FaliciaOng"},"content":"     * Method will derive all housekeeper available on the day given by the user in an list.","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"FaliciaOng"},"content":"     * @param listContainer The object containing the lists to update depending on the command inputted by the user.","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"FaliciaOng"},"content":"     * @param ui            The instance of the Ui class used for printing additional messages","lastModifiedDate":"2022-04-11"},{"lineNumber":72,"author":{"gitId":"FaliciaOng"},"content":"     *                      when a command is executed.","lastModifiedDate":"2022-04-11"},{"lineNumber":73,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":74,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"FaliciaOng"},"content":"    public void execute(ListContainer listContainer, Ui ui) {","lastModifiedDate":"2022-04-11"},{"lineNumber":76,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"FaliciaOng"},"content":"        ArrayList\u003cHousekeeper\u003e foundList \u003d housekeeperList.getAvailableHousekeeperByDay(searchDay);","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"FaliciaOng"},"content":"        ui.printFoundHousekeeperList(foundList, searchDay);","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"zhenster":3,"FaliciaOng":76,"siewyangzhi":1}},{"path":"src/main/java/seedu/duke/command/housekeepercommands/ResetAvailabilityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke.command.housekeepercommands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.HousekeeperList;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidNewWeekException;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.storage.HousekeeperFileManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":" * Reset availability of each housekeeper when needed such as a start of a new week.","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"public class ResetAvailabilityCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"    private static final String RESET_AVAILABILITY \u003d \"is a new week\";","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"    public ResetAvailabilityCommand(String input) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"        if (!input.equals(RESET_AVAILABILITY)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidNewWeekException();","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"     * Call method to reset every housekeeper availability to null and print out the new list for verification.","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"     * @param listContainer The object containing the lists to update depending on the command inputted by the user.","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"     * @param ui            The instance of the Ui class used for printing additional messages when a command is","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"     *                      executed.","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"     * @throws IOException Write to file has failed.","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws IOException {","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.resetAvailability();","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"        ui.printHousekeeperListReset(housekeeperList);","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"     * After all housekeeper\u0027s availability has been reset, this method will update the file and resets","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"     * every housekeeper availability.","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"     * @param listContainer The object containing the lists to update depending on the command inputted by the user.","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"     * @throws IOException Failed to write to file.","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"    public void writeHousekeeperToFile(ListContainer listContainer) throws IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperFileManager housekeeperFileManager \u003d new HousekeeperFileManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperFileManager.save(housekeeperList);","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"zhenster":2,"FaliciaOng":48,"siewyangzhi":2}},{"path":"src/main/java/seedu/duke/command/housekeepercommands/ViewHousekeeperListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke.command.housekeepercommands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidViewHousekeeperException;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.HousekeeperList;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"public class ViewHousekeeperListCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    private static final String VIEW_HOUSEKEEPER_COMMAND \u003d \"view recorded housekeepers\";","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"    public ViewHousekeeperListCommand(String input) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"        if (!input.equals(VIEW_HOUSEKEEPER_COMMAND)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidViewHousekeeperException();","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"     * Printing the list of housekeeper name, age and availability.","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"     * @param listContainer The object containing the lists to update depending on the command inputted by the user.","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"     * @param ui The user interface for this execution method.","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"    public void execute(ListContainer listContainer, Ui ui) {","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"        ui.printHousekeeperList(housekeeperList);","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"zhenster":2,"aiman-imtiaz":1,"FaliciaOng":25,"XunyiiZ":1,"siewyangzhi":2}},{"path":"src/main/java/seedu/duke/command/housekeepercommands/ViewHousekeeperPerformancesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke.command.housekeepercommands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperperformancelists.HousekeeperPerformanceList;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":" * Represents a command to view the list of housekeeper performances.","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":" * The user command is \"view housekeeper performances.\"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"public class ViewHousekeeperPerformancesCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"        HousekeeperPerformanceList housekeeperPerformanceList \u003d listContainer.getHousekeeperPerformanceList();","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"        housekeeperPerformanceList.viewPerformances();","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"zhenster":14,"FaliciaOng":4,"siewyangzhi":3}},{"path":"src/main/java/seedu/duke/command/itemcommands/AddItemCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke.command.itemcommands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.EmptyItemPaxException;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.EmptyItemNameException;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidCommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.InvalidItemPaxException;","lastModifiedDate":"2022-04-02"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.ItemAlreadyInListException;","lastModifiedDate":"2022-04-02"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.DuplicateCommandException;","lastModifiedDate":"2022-04-10"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.itemlists.Item;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.itemlists.ItemList;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.storage.ItemListFileManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"import java.util.StringTokenizer;","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":" * Represents a command to add a new item to the item list. An AddItemCommand object consists of the name of the item","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":" * to add as well as its pax.","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"public class AddItemCommand extends Command {","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"    private static final String DELIMITER \u003d \"/\";","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"    private static final int NUMBER_OF_PARTS_IN_COMMAND \u003d 2;","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ADD_ITEM_COMMAND \u003d \"add item\";","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"    private Item item;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"    private static Logger itemLogger \u003d Logger.getLogger(\"itemLogger\");","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"     * Takes in the user input and checks if the formatting of the add item command within the user input is","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"     * valid.","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"     * Extracts out the item name and item pax from the user input and creates an AddItemCommand object.","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if the edited user input still contains the string \"add item\", the formatting","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"     *                                   of the add item command is invalid, the item pax is empty or invalid, the item","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"siewyangzhi"},"content":"     *                                   name is empty, or the item name and pax are both empty.","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"siewyangzhi"},"content":"    public AddItemCommand(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"siewyangzhi"},"content":"        if (userInput.startsWith(DELIMITER)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Detected an empty item name for AddItemCommand. Exception thrown.\");","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"            throw new EmptyItemNameException();","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"        if (userInput.endsWith(DELIMITER)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Detected an empty item name for AddItemCommand. Exception thrown.\");","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"siewyangzhi"},"content":"            throw new EmptyItemPaxException();","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"siewyangzhi"},"content":"        if (userInput.contains(ADD_ITEM_COMMAND)) {","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Repeated add item command given.\");","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"siewyangzhi"},"content":"            throw new DuplicateCommandException();","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-04-10"},{"lineNumber":58,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":59,"author":{"gitId":"siewyangzhi"},"content":"        StringTokenizer tokens \u003d new StringTokenizer(userInput, DELIMITER);","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"siewyangzhi"},"content":"        if (tokens.countTokens() !\u003d NUMBER_OF_PARTS_IN_COMMAND) {","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Invalid formatting for AddItemCommand detected. Exception thrown.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"siewyangzhi"},"content":"        String itemName \u003d extractItemName(tokens);","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"siewyangzhi"},"content":"        int itemPax \u003d extractItemPax(tokens);","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d new Item(itemName, itemPax);","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"siewyangzhi"},"content":"        setItem(item);","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"siewyangzhi"},"content":"     * Returns the item name extracted from the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"siewyangzhi"},"content":"     * @param tokens String tokens of the user input.","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"siewyangzhi"},"content":"     * @return The item name within the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if item name is empty.","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"siewyangzhi"},"content":"    private String extractItemName(StringTokenizer tokens) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"siewyangzhi"},"content":"        String itemName \u003d tokens.nextToken();","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"siewyangzhi"},"content":"        itemName \u003d itemName.trim();","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"siewyangzhi"},"content":"        if (itemName.isEmpty()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Detected an empty item name for AddItemCommand. Exception thrown.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"siewyangzhi"},"content":"            throw new EmptyItemNameException();","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"siewyangzhi"},"content":"        return itemName;","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"siewyangzhi"},"content":"     * Returns the item pax extracted from the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"siewyangzhi"},"content":"     * @param tokens String tokens containing the user input after the delimiter.","lastModifiedDate":"2022-04-11"},{"lineNumber":91,"author":{"gitId":"siewyangzhi"},"content":"     * @return The item pax within the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if item pax is empty or invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"siewyangzhi"},"content":"    private int extractItemPax(StringTokenizer tokens) throws HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":96,"author":{"gitId":"siewyangzhi"},"content":"        int itemPax;","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"siewyangzhi"},"content":"        String itemPaxStringVersion \u003d tokens.nextToken();","lastModifiedDate":"2022-04-11"},{"lineNumber":98,"author":{"gitId":"siewyangzhi"},"content":"        itemPaxStringVersion \u003d itemPaxStringVersion.trim();","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"siewyangzhi"},"content":"        if (itemPaxStringVersion.isEmpty()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Detected an empty item name for AddItemCommand. Exception thrown.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"siewyangzhi"},"content":"            throw new EmptyItemPaxException();","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"siewyangzhi"},"content":"        try {","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"siewyangzhi"},"content":"            itemPax \u003d Integer.parseInt(itemPaxStringVersion);","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"siewyangzhi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Detected an invalid item pax for AddItemCommand. Exception thrown.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":107,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidItemPaxException();","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"siewyangzhi"},"content":"        if (itemPax \u003c\u003d 0 || itemPax \u003e 1000000) {","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Detected an invalid item pax for AddItemCommand. Exception thrown.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":111,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidItemPaxException();","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"siewyangzhi"},"content":"        return itemPax;","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"siewyangzhi"},"content":"     * Adds a new item to the item list using the item name and pax found in the instance variable","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"siewyangzhi"},"content":"     * named item within the AddItemPaxCommand object.","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"siewyangzhi"},"content":"     * Returns an acknowledgement message to inform the user that the item has been added to the item list as well","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"siewyangzhi"},"content":"     * as the number of items within the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"siewyangzhi"},"content":"     * @param listContainer The object containing the data structure necessary for adding an item into the item list.","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"siewyangzhi"},"content":"     *                      In this case, we require access to the ItemList object which is within listContainer.","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"siewyangzhi"},"content":"     * @param ui            The object that deals with user interface for the program.","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if the item name within the item object already exists in the item list.","lastModifiedDate":"2022-04-11"},{"lineNumber":126,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"siewyangzhi"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws HotelLiteManagerException {","lastModifiedDate":"2022-04-10"},{"lineNumber":128,"author":{"gitId":"XunyiiZ"},"content":"        ItemList listOfItems \u003d listContainer.getItemList();","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d getItem();","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"siewyangzhi"},"content":"        String nameOfItemToAdd \u003d item.getName();","lastModifiedDate":"2022-04-02"},{"lineNumber":131,"author":{"gitId":"siewyangzhi"},"content":"        assert (item !\u003d null) : \"Assertion Failed! There is no item within the AddItemCommand object.\";","lastModifiedDate":"2022-03-17"},{"lineNumber":132,"author":{"gitId":"siewyangzhi"},"content":"        boolean isItemAlreadyInTheList \u003d listOfItems.checkForItemDuplicates(nameOfItemToAdd);","lastModifiedDate":"2022-04-02"},{"lineNumber":133,"author":{"gitId":"siewyangzhi"},"content":"        if (isItemAlreadyInTheList \u003d\u003d true) {","lastModifiedDate":"2022-03-29"},{"lineNumber":134,"author":{"gitId":"siewyangzhi"},"content":"            throw new ItemAlreadyInListException();","lastModifiedDate":"2022-04-02"},{"lineNumber":135,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":137,"author":{"gitId":"siewyangzhi"},"content":"        listOfItems.addItemToList(item);","lastModifiedDate":"2022-04-02"},{"lineNumber":138,"author":{"gitId":"siewyangzhi"},"content":"        ui.printAddItemAcknowledgementMessage(listOfItems);","lastModifiedDate":"2022-03-15"},{"lineNumber":139,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":140,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":141,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":142,"author":{"gitId":"siewyangzhi"},"content":"     * Updates the item list saved within the file ListFolder/ItemList.txt with the current item list.","lastModifiedDate":"2022-04-11"},{"lineNumber":143,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":144,"author":{"gitId":"siewyangzhi"},"content":"     * @param listContainer The object containing the data structure necessary for adding an item into the item list.","lastModifiedDate":"2022-04-11"},{"lineNumber":145,"author":{"gitId":"siewyangzhi"},"content":"     *                      In this case, we require access to the ItemList object which is within listContainer.","lastModifiedDate":"2022-04-11"},{"lineNumber":146,"author":{"gitId":"siewyangzhi"},"content":"     * @throws IOException if we are unable to write to the file ListFolder/ItemList.txt","lastModifiedDate":"2022-04-11"},{"lineNumber":147,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":148,"author":{"gitId":"siewyangzhi"},"content":"    public void writeItemListToFile(ListContainer listContainer) throws IOException {","lastModifiedDate":"2022-04-10"},{"lineNumber":149,"author":{"gitId":"siewyangzhi"},"content":"        ItemList listOfItems \u003d listContainer.getItemList();","lastModifiedDate":"2022-04-10"},{"lineNumber":150,"author":{"gitId":"siewyangzhi"},"content":"        ItemListFileManager itemListFileManager \u003d new ItemListFileManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":151,"author":{"gitId":"siewyangzhi"},"content":"        itemListFileManager.save(listOfItems);","lastModifiedDate":"2022-04-11"},{"lineNumber":152,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":153,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":154,"author":{"gitId":"siewyangzhi"},"content":"    public Item getItem() {","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"siewyangzhi"},"content":"        return item;","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":157,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":158,"author":{"gitId":"siewyangzhi"},"content":"    public void setItem(Item item) {","lastModifiedDate":"2022-03-15"},{"lineNumber":159,"author":{"gitId":"siewyangzhi"},"content":"        this.item \u003d item;","lastModifiedDate":"2022-03-15"},{"lineNumber":160,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":161,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":162,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zhenster":3,"FaliciaOng":3,"XunyiiZ":1,"siewyangzhi":155}},{"path":"src/main/java/seedu/duke/command/itemcommands/DeleteItemCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke.command.itemcommands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.DuplicateCommandException;","lastModifiedDate":"2022-04-10"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.itemlists.Item;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.EmptyItemNameException;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.itemlists.ItemList;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.storage.ItemListFileManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":" * Represents a command to delete an existing item within the item list. A DeleteItemCommand object consists of the","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":" * name of the item to delete.","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"public class DeleteItemCommand extends Command {","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"    private Item item;","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"    private static final String DELETE_ITEM_COMMAND \u003d \"delete item\";","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"    private static Logger itemLogger \u003d Logger.getLogger(\"itemLogger\");","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"     * Takes in the user input and checks if the formatting of the delete item command within the user input is","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"     * valid.","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"     * If the user input is valid, the constructor would create an DeleteItemCommand object using the user input.","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if the item name is empty or if the edited user input still contains","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"     *                                   the string \"Delete Item\".","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"    public DeleteItemCommand(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"        if (userInput.isEmpty()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"            throw new EmptyItemNameException();","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"        if (userInput.contains(DELETE_ITEM_COMMAND)) {","lastModifiedDate":"2022-04-10"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Repeated delete item command given.\");","lastModifiedDate":"2022-04-10"},{"lineNumber":42,"author":{"gitId":"siewyangzhi"},"content":"            throw new DuplicateCommandException();","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-04-10"},{"lineNumber":44,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"siewyangzhi"},"content":"        String itemName \u003d userInput.trim();","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d new Item(itemName.trim());","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"        setItem(item);","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"siewyangzhi"},"content":"    public Item getItem() {","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"siewyangzhi"},"content":"        return item;","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"siewyangzhi"},"content":"    private void setItem(Item item) {","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"siewyangzhi"},"content":"        this.item \u003d item;","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"siewyangzhi"},"content":"     * Deletes the item in the item list specified by the user.","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"siewyangzhi"},"content":"     * Returns an acknowledgement message to inform the user that the item has been deleted from the item list as well","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"siewyangzhi"},"content":"     * as the number of items within the item list.","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"siewyangzhi"},"content":"     * @param listContainer The object containing the data structure necessary to delete items from the item","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"siewyangzhi"},"content":"     *                      list.","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"siewyangzhi"},"content":"     *                      In this case, we require access to the ItemList object which is within listContainer.","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"siewyangzhi"},"content":"     * @param ui            The object that deals with user interface for the program.","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if the item that the user wants to delete does not exist in the item list.","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"siewyangzhi"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws HotelLiteManagerException {","lastModifiedDate":"2022-04-10"},{"lineNumber":71,"author":{"gitId":"siewyangzhi"},"content":"        Item itemToDelete \u003d getItem();","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"siewyangzhi"},"content":"        ItemList listOfItems \u003d listContainer.getItemList();","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"siewyangzhi"},"content":"        listOfItems.deleteItemInList(itemToDelete);","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"siewyangzhi"},"content":"        ui.printDeleteItemAcknowledgementMessage(itemToDelete, listOfItems);","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":76,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":78,"author":{"gitId":"siewyangzhi"},"content":"     * Updates the item list saved within the file ListFolder/ItemList.txt with the current item list.","lastModifiedDate":"2022-04-11"},{"lineNumber":79,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":80,"author":{"gitId":"siewyangzhi"},"content":"     * @param listContainer The object containing the data structure necessary to delete items from the item","lastModifiedDate":"2022-04-11"},{"lineNumber":81,"author":{"gitId":"siewyangzhi"},"content":"     *                      list.","lastModifiedDate":"2022-04-11"},{"lineNumber":82,"author":{"gitId":"siewyangzhi"},"content":"     *                      In this case, we require access to the ItemList object which is within listContainer.","lastModifiedDate":"2022-04-11"},{"lineNumber":83,"author":{"gitId":"siewyangzhi"},"content":"     * @throws IOException if we are unable to write to the file ListFolder/ItemList.txt","lastModifiedDate":"2022-04-11"},{"lineNumber":84,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":85,"author":{"gitId":"siewyangzhi"},"content":"    public void writeItemListToFile(ListContainer listContainer) throws IOException {","lastModifiedDate":"2022-04-10"},{"lineNumber":86,"author":{"gitId":"siewyangzhi"},"content":"        ItemList listOfItems \u003d listContainer.getItemList();","lastModifiedDate":"2022-04-10"},{"lineNumber":87,"author":{"gitId":"siewyangzhi"},"content":"        ItemListFileManager itemListFileManager \u003d new ItemListFileManager();","lastModifiedDate":"2022-04-10"},{"lineNumber":88,"author":{"gitId":"siewyangzhi"},"content":"        itemListFileManager.save(listOfItems);","lastModifiedDate":"2022-04-11"},{"lineNumber":89,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"zhenster":1,"FaliciaOng":3,"siewyangzhi":86}},{"path":"src/main/java/seedu/duke/command/itemcommands/SearchItemCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke.command.itemcommands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.DuplicateCommandException;","lastModifiedDate":"2022-04-10"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.EmptyKeywordException;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.itemlists.ItemList;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-04-10"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":" * Represents a command to search for items within the item list that matches a specific keyword. An SearchItemCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":" * object consists of the keyword used to search for items within the item list.","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"public class SearchItemCommand extends Command {","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"    private String keyword;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"    private static final String SEARCH_ITEM_COMMAND \u003d \"search item\";","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"    private static Logger itemLogger \u003d Logger.getLogger(\"itemLogger\");","lastModifiedDate":"2022-04-10"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"     * Takes in the user input and checks if the formatting of the search item command within the user input is","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"     * valid.","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"     * Takes the user input and creates a SearchItemCommand object using it.","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if the keyword is empty or if the string userInput contains \"search item\".","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"    public SearchItemCommand(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"        String keyword \u003d userInput.trim();","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"        if (keyword.contains(SEARCH_ITEM_COMMAND)) {","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Repeated search item command given.\");","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"            throw new DuplicateCommandException();","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"            throw new EmptyKeywordException();","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"        setKeyword(keyword);","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"siewyangzhi"},"content":"     * Searches the item list for items whose name contains the keyword specified by the user.","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"siewyangzhi"},"content":"     * Prints out all the items whose name contains the keyword specified by the user.","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"siewyangzhi"},"content":"     * If no items are found, a message informing the user that there are no item in the item list whose name contains","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"     * the keyword would be displayed.","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"     * @param listContainer The object containing the data structure necessary to search for items within the item","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"siewyangzhi"},"content":"     *                      list.","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"siewyangzhi"},"content":"     *                      In this case, we require access to the ItemList object which is within listContainer.","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if the keyword is empty.","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"XunyiiZ"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"siewyangzhi"},"content":"        ItemList listOfItems \u003d listContainer.getItemList();","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"siewyangzhi"},"content":"        String keyword \u003d getKeyword();","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"siewyangzhi"},"content":"        ItemList listOfMatchingItems \u003d listOfItems.findItemsInList(keyword);","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"siewyangzhi"},"content":"        int numberOfItemsFound \u003d listOfMatchingItems.getSize();","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"siewyangzhi"},"content":"        if (numberOfItemsFound \u003d\u003d 0) {","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"siewyangzhi"},"content":"            ui.printNoItemsFoundInListAcknowledgementMessage();","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"siewyangzhi"},"content":"        } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"siewyangzhi"},"content":"            ui.printItemList(listOfMatchingItems);","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"siewyangzhi"},"content":"    public String getKeyword() {","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"siewyangzhi"},"content":"        return keyword;","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"siewyangzhi"},"content":"    public void setKeyword(String keyword) {","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"siewyangzhi"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"zhenster":2,"FaliciaOng":1,"XunyiiZ":1,"siewyangzhi":70}},{"path":"src/main/java/seedu/duke/command/itemcommands/UpdateItemNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke.command.itemcommands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidUpdateItemNameCommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.ItemNameAlreadyInListException;","lastModifiedDate":"2022-04-02"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.DuplicateItemNameException;","lastModifiedDate":"2022-04-10"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.DuplicateCommandException;","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.itemlists.Item;","lastModifiedDate":"2022-04-04"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.itemlists.ItemList;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.storage.ItemListFileManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"import java.util.StringTokenizer;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":" * Represents a command to update the name of an existing item within the item list.","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":" * A UpdateItemNameCommand object consists of the name of the item which the user wants to update (oldItemName) and the","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":" * name the user wants to update the item to (newItemName).","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"public class UpdateItemNameCommand extends Command {","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"    private static final String DELIMITER \u003d \"/\";","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"    private Item item;","lastModifiedDate":"2022-04-04"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"    private static final int NUMBER_OF_PARTS_IN_COMMAND \u003d 2;","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"    private static final String UPDATE_ITEM_NAME_COMMAND \u003d \"update item name\";","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"    private static Logger itemLogger \u003d Logger.getLogger(\"itemLogger\");","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"     * Takes in the user input and checks if the formatting of the update item name command within the user input is","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"     * valid.","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"     * Extracts out from the user input the current name of the item to update as well as its new name.","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if the edited user input still contains the string \"update item name\", the","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"     *                                   formatting of the update item name command is invalid, the current item name is","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"     *                                   empty or the new item name is empty.","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"    public UpdateItemNameCommand(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"siewyangzhi"},"content":"        if (userInput.startsWith(DELIMITER)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"The item name of the item to update is empty for the Update Item Name \"","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"siewyangzhi"},"content":"                    + \"Command. Exception thrown.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidUpdateItemNameCommandException();","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"        if (userInput.endsWith(DELIMITER)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"The new item name of the item to update is empty for the Update Item \"","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"siewyangzhi"},"content":"                    + \"Name Command. Exception thrown\");","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidUpdateItemNameCommandException();","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"siewyangzhi"},"content":"        if (userInput.contains(UPDATE_ITEM_NAME_COMMAND)) {","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Repeated update item name command given.\");","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"siewyangzhi"},"content":"            throw new DuplicateCommandException();","lastModifiedDate":"2022-04-10"},{"lineNumber":58,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-04-10"},{"lineNumber":59,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":60,"author":{"gitId":"siewyangzhi"},"content":"        StringTokenizer tokens \u003d new StringTokenizer(userInput, DELIMITER);","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"siewyangzhi"},"content":"        if (tokens.countTokens() !\u003d NUMBER_OF_PARTS_IN_COMMAND) {","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Invalid formatting for the Update Item Name Command detected.\"","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"siewyangzhi"},"content":"                    + \" Exception thrown.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidUpdateItemNameCommandException();","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"siewyangzhi"},"content":"        String oldItemName \u003d extractCurrentItemName(tokens);","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"siewyangzhi"},"content":"        String newItemName \u003d extractNewItemName(tokens);","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d new Item(oldItemName, newItemName);","lastModifiedDate":"2022-04-04"},{"lineNumber":69,"author":{"gitId":"siewyangzhi"},"content":"        setItem(item);","lastModifiedDate":"2022-04-04"},{"lineNumber":70,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"siewyangzhi"},"content":"     * Returns the current item name of the item to update (oldItemName) that is extracted from the user input.","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"siewyangzhi"},"content":"     * @param tokens String tokens of the user input.","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"siewyangzhi"},"content":"     * @return The current name of the item name to update.","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if the current item name is empty within the user input.","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"siewyangzhi"},"content":"    private String extractCurrentItemName(StringTokenizer tokens) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"siewyangzhi"},"content":"        String oldItemName \u003d tokens.nextToken();","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"siewyangzhi"},"content":"        oldItemName \u003d oldItemName.trim();","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"siewyangzhi"},"content":"        if (oldItemName.isEmpty()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Detected an empty item name for the item whose name we want to update\"","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"siewyangzhi"},"content":"                    + \"in the Update Item Name Command. Exception thrown.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidUpdateItemNameCommandException();","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"siewyangzhi"},"content":"        return oldItemName;","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"siewyangzhi"},"content":"     * Returns the new item name for the item to be updated (newItemName) which is extracted from the user","lastModifiedDate":"2022-04-11"},{"lineNumber":92,"author":{"gitId":"siewyangzhi"},"content":"     * input.","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"siewyangzhi"},"content":"     * @param tokens String tokens of the user input.","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"siewyangzhi"},"content":"     * @return The current name of the item name to update.","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if the current item name is empty within the user input.","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"siewyangzhi"},"content":"    private String extractNewItemName(StringTokenizer tokens) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"siewyangzhi"},"content":"        String newItemName \u003d tokens.nextToken();","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"siewyangzhi"},"content":"        newItemName \u003d newItemName.trim();","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"siewyangzhi"},"content":"        if (newItemName.isEmpty()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"The new name of the item whose name we want to update is empty\"","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"siewyangzhi"},"content":"                    + \"in the Update Item Name Command. Exception thrown.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidUpdateItemNameCommandException();","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"siewyangzhi"},"content":"        return newItemName;","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"siewyangzhi"},"content":"    public Item getItem() {","lastModifiedDate":"2022-04-04"},{"lineNumber":110,"author":{"gitId":"siewyangzhi"},"content":"        return item;","lastModifiedDate":"2022-04-04"},{"lineNumber":111,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"siewyangzhi"},"content":"    public void setItem(Item item) {","lastModifiedDate":"2022-04-04"},{"lineNumber":114,"author":{"gitId":"siewyangzhi"},"content":"        this.item \u003d item;","lastModifiedDate":"2022-04-04"},{"lineNumber":115,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"siewyangzhi"},"content":"     * Updates the item name of the item within the item list whose name matches the old item name.","lastModifiedDate":"2022-04-11"},{"lineNumber":119,"author":{"gitId":"siewyangzhi"},"content":"     * Returns an acknowledgement message to inform the user that the name of the updated item has been changed from","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"siewyangzhi"},"content":"     * the old item name to the new item name.","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"siewyangzhi"},"content":"     * @param listContainer The object containing the data structure necessary for updating the name of an item within","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"siewyangzhi"},"content":"     *                      the item list.","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"siewyangzhi"},"content":"     *                      In this case, we require access to the ItemList object which is within listContainer.","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"siewyangzhi"},"content":"     * @param ui            The object that deals with user interface for the program.","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if the item name within the item object does not exist in the item list.","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"siewyangzhi"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws HotelLiteManagerException {","lastModifiedDate":"2022-04-10"},{"lineNumber":130,"author":{"gitId":"siewyangzhi"},"content":"        ItemList listOfItems \u003d listContainer.getItemList();","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d getItem();","lastModifiedDate":"2022-04-04"},{"lineNumber":132,"author":{"gitId":"siewyangzhi"},"content":"        String oldItemName \u003d item.getName();","lastModifiedDate":"2022-04-04"},{"lineNumber":133,"author":{"gitId":"siewyangzhi"},"content":"        String newItemName \u003d item.getUpdatedName();","lastModifiedDate":"2022-04-04"},{"lineNumber":134,"author":{"gitId":"siewyangzhi"},"content":"        if (oldItemName.equals(newItemName)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"siewyangzhi"},"content":"            throw new DuplicateItemNameException();","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"siewyangzhi"},"content":"        boolean isNewItemNameAlreadyInList \u003d listOfItems.checkForItemDuplicates(newItemName);","lastModifiedDate":"2022-04-02"},{"lineNumber":138,"author":{"gitId":"siewyangzhi"},"content":"        if (isNewItemNameAlreadyInList \u003d\u003d true) {","lastModifiedDate":"2022-04-02"},{"lineNumber":139,"author":{"gitId":"siewyangzhi"},"content":"            throw new ItemNameAlreadyInListException();","lastModifiedDate":"2022-04-02"},{"lineNumber":140,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-04-02"},{"lineNumber":141,"author":{"gitId":"siewyangzhi"},"content":"        listOfItems.updateItemNameInList(oldItemName, newItemName);","lastModifiedDate":"2022-04-02"},{"lineNumber":142,"author":{"gitId":"siewyangzhi"},"content":"        oldItemName \u003d oldItemName.toUpperCase();","lastModifiedDate":"2022-04-02"},{"lineNumber":143,"author":{"gitId":"siewyangzhi"},"content":"        newItemName \u003d newItemName.toUpperCase();","lastModifiedDate":"2022-04-02"},{"lineNumber":144,"author":{"gitId":"siewyangzhi"},"content":"        ui.printUpdateItemNameAcknowledgementMessage(oldItemName, newItemName);","lastModifiedDate":"2022-03-28"},{"lineNumber":145,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":146,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":147,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":148,"author":{"gitId":"siewyangzhi"},"content":"     * Updates the item list saved within the file ListFolder/ItemList.txt.","lastModifiedDate":"2022-04-11"},{"lineNumber":149,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":150,"author":{"gitId":"siewyangzhi"},"content":"     * @param listContainer The object containing the data structure necessary for updating the name of an item within","lastModifiedDate":"2022-04-11"},{"lineNumber":151,"author":{"gitId":"siewyangzhi"},"content":"     *                      the item list.","lastModifiedDate":"2022-04-11"},{"lineNumber":152,"author":{"gitId":"siewyangzhi"},"content":"     *                      In this case, we require access to the ItemList object which is within listContainer.","lastModifiedDate":"2022-04-11"},{"lineNumber":153,"author":{"gitId":"siewyangzhi"},"content":"     * @throws IOException  if we are unable to write to the file ListFolder/ItemList.txt","lastModifiedDate":"2022-04-11"},{"lineNumber":154,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":155,"author":{"gitId":"siewyangzhi"},"content":"    public void writeItemListToFile(ListContainer listContainer) throws IOException {","lastModifiedDate":"2022-04-10"},{"lineNumber":156,"author":{"gitId":"siewyangzhi"},"content":"        ItemList listOfItems \u003d listContainer.getItemList();","lastModifiedDate":"2022-04-10"},{"lineNumber":157,"author":{"gitId":"siewyangzhi"},"content":"        ItemListFileManager itemListFileManager \u003d new ItemListFileManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":158,"author":{"gitId":"siewyangzhi"},"content":"        itemListFileManager.save(listOfItems);","lastModifiedDate":"2022-04-11"},{"lineNumber":159,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"zhenster":2,"FaliciaOng":1,"siewyangzhi":157}},{"path":"src/main/java/seedu/duke/command/itemcommands/UpdateItemPaxCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke.command.itemcommands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.EmptyItemNameException;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.EmptyItemPaxException;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.itemlists.Item;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.itemlists.ItemList;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidItemPaxException;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidUpdateItemPaxCommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.DuplicateCommandException;","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.storage.ItemListFileManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"import java.util.StringTokenizer;","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":" * Represents a command to update the pax of an item within the item list. An UpdateItemPaxCommand object consists of","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":" * the name of the item to update and the new pax value.","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"public class UpdateItemPaxCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"    private Item item;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"    private static final String DELIMITER \u003d \"/\";","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"    private static final int NUMBER_OF_PARTS_IN_COMMAND \u003d 2;","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"    private static final String UPDATE_ITEM_PAX_COMMAND \u003d \"update item pax\";","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"    private static Logger itemLogger \u003d Logger.getLogger(\"itemLogger\");","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"     * Takes in the user input and checks if the formatting of the Update Item Pax Command within the user input is","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"     * valid.","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"     * Extracts out the item name and item pax from the user input and creates an UpdateItemPaxCommand object.","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if the keyword is empty, the string userInput contains \"update item pax\",","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"     *                                   the formatting of the update item pax command is invalid, the item pax is","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"     *                                   empty or invalid, the item name is empty, or the item name and pax are both","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"siewyangzhi"},"content":"     *                                   empty.","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"siewyangzhi"},"content":"    public UpdateItemPaxCommand(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"siewyangzhi"},"content":"        if (userInput.startsWith(DELIMITER)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Detected an empty item name for UpdateItemCommand. \"","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"                    + \"Exception thrown.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"            throw new EmptyItemNameException();","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"siewyangzhi"},"content":"        if (userInput.endsWith(DELIMITER)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Detected an empty item Pax for UpdateItemCommand. \"","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"siewyangzhi"},"content":"                    + \"Exception thrown.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"siewyangzhi"},"content":"            throw new EmptyItemPaxException();","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"siewyangzhi"},"content":"        if (userInput.contains(UPDATE_ITEM_PAX_COMMAND)) {","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Repeated update item pax command given.\");","lastModifiedDate":"2022-04-10"},{"lineNumber":58,"author":{"gitId":"siewyangzhi"},"content":"            throw new DuplicateCommandException();","lastModifiedDate":"2022-04-10"},{"lineNumber":59,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-04-10"},{"lineNumber":60,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":61,"author":{"gitId":"siewyangzhi"},"content":"        StringTokenizer tokens \u003d new StringTokenizer(userInput, DELIMITER);","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"siewyangzhi"},"content":"        if (tokens.countTokens() !\u003d NUMBER_OF_PARTS_IN_COMMAND) {","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Invalid formatting for UpdateItemCommand detected.\"","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"siewyangzhi"},"content":"                    + \" Exception thrown.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidUpdateItemPaxCommandException();","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"siewyangzhi"},"content":"        String itemName \u003d extractItemName(tokens);","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"siewyangzhi"},"content":"        int itemPax \u003d extractItemPax(tokens);","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d new Item(itemName, itemPax);","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"siewyangzhi"},"content":"        setItem(item);","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"siewyangzhi"},"content":"     * Returns the item name extracted from the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"siewyangzhi"},"content":"     * @param tokens String tokens of the user input.","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"siewyangzhi"},"content":"     * @return The item name within the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if item name is empty.","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"siewyangzhi"},"content":"    private String extractItemName(StringTokenizer tokens) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"siewyangzhi"},"content":"        String itemName \u003d tokens.nextToken();","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"siewyangzhi"},"content":"        itemName \u003d itemName.trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"siewyangzhi"},"content":"        if (itemName.isEmpty()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Detected an empty item name for UpdateItemPaxCommand. \"","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"siewyangzhi"},"content":"                    + \"Exception thrown.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"siewyangzhi"},"content":"            throw new EmptyItemNameException();","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"siewyangzhi"},"content":"        return itemName;","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"siewyangzhi"},"content":"     * Returns the item pax extracted from the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"siewyangzhi"},"content":"     * @param token A string token containing the user input after the delimiter.","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"siewyangzhi"},"content":"     * @return The item pax within the user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if item pax is empty or invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"siewyangzhi"},"content":"    private int extractItemPax(StringTokenizer token) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"siewyangzhi"},"content":"        int itemPax;","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"siewyangzhi"},"content":"        String itemPaxStringVersion \u003d token.nextToken();","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"siewyangzhi"},"content":"        itemPaxStringVersion \u003d itemPaxStringVersion.trim();","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":104,"author":{"gitId":"siewyangzhi"},"content":"        if (itemPaxStringVersion.isEmpty()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Detected an empty item pax for UpdateItemPaxCommand. \"","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"siewyangzhi"},"content":"                    + \"Exception thrown.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"siewyangzhi"},"content":"            throw new EmptyItemPaxException();","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"siewyangzhi"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"siewyangzhi"},"content":"            itemPax \u003d Integer.parseInt(itemPaxStringVersion);","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"siewyangzhi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Detected an invalid item pax for UpdateItemPaxCommand. \"","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"siewyangzhi"},"content":"                    + \"Exception thrown.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidItemPaxException();","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"siewyangzhi"},"content":"        if (itemPax \u003c 0 || itemPax \u003e 1000000) {","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"Detected an invalid item pax for UpdateItemPaxCommand. \"","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"siewyangzhi"},"content":"                    + \"Exception thrown.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidItemPaxException();","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"siewyangzhi"},"content":"        return itemPax;","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"siewyangzhi"},"content":"     * Updates the pax of the item within the item list using the item name and new pax found in the instance","lastModifiedDate":"2022-03-27"},{"lineNumber":126,"author":{"gitId":"siewyangzhi"},"content":"     * variable named item within the UpdateItemPaxCommand object.","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"siewyangzhi"},"content":"     * @param ui The object that deals with user interface for the program.","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if the item name within the item object does not exist in the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"XunyiiZ"},"content":"     * @return","lastModifiedDate":"2022-04-11"},{"lineNumber":131,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"siewyangzhi"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws HotelLiteManagerException {","lastModifiedDate":"2022-04-10"},{"lineNumber":134,"author":{"gitId":"XunyiiZ"},"content":"        ItemList listOfItems \u003d listContainer.getItemList();","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"siewyangzhi"},"content":"        assert (item !\u003d null) : \"Assertion Failed! There is no item within the UpdateItemPaxCommand object.\";","lastModifiedDate":"2022-03-17"},{"lineNumber":136,"author":{"gitId":"siewyangzhi"},"content":"        listOfItems.updateItemPaxInList(item);","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"siewyangzhi"},"content":"        ui.printUpdateItemPaxAcknowledgementMessage(item);","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":139,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":140,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":141,"author":{"gitId":"siewyangzhi"},"content":"     * Updates the item list saved within the file ListFolder/ItemList.txt.","lastModifiedDate":"2022-04-11"},{"lineNumber":142,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":143,"author":{"gitId":"siewyangzhi"},"content":"     * @param listContainer The object containing the data structure necessary for updating the name of an item within","lastModifiedDate":"2022-04-11"},{"lineNumber":144,"author":{"gitId":"siewyangzhi"},"content":"     *                      the item list.","lastModifiedDate":"2022-04-11"},{"lineNumber":145,"author":{"gitId":"siewyangzhi"},"content":"     *                      In this case, we require access to the ItemList object which is within listContainer.","lastModifiedDate":"2022-04-11"},{"lineNumber":146,"author":{"gitId":"siewyangzhi"},"content":"     * @throws IOException if we are unable to write to the file ListFolder/ItemList.txt","lastModifiedDate":"2022-04-11"},{"lineNumber":147,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":148,"author":{"gitId":"siewyangzhi"},"content":"    public void writeItemListToFile(ListContainer listContainer) throws IOException {","lastModifiedDate":"2022-04-10"},{"lineNumber":149,"author":{"gitId":"siewyangzhi"},"content":"        ItemList listOfItems \u003d listContainer.getItemList();","lastModifiedDate":"2022-04-10"},{"lineNumber":150,"author":{"gitId":"siewyangzhi"},"content":"        ItemListFileManager itemListFileManager \u003d new ItemListFileManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":151,"author":{"gitId":"siewyangzhi"},"content":"        itemListFileManager.save(listOfItems);","lastModifiedDate":"2022-04-11"},{"lineNumber":152,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":153,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":154,"author":{"gitId":"siewyangzhi"},"content":"    public Item getItem() {","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"siewyangzhi"},"content":"        return item;","lastModifiedDate":"2022-03-16"},{"lineNumber":156,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":157,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"siewyangzhi"},"content":"    public void setItem(Item item) {","lastModifiedDate":"2022-03-16"},{"lineNumber":159,"author":{"gitId":"siewyangzhi"},"content":"        this.item \u003d item;","lastModifiedDate":"2022-03-16"},{"lineNumber":160,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":161,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"zhenster":4,"FaliciaOng":3,"XunyiiZ":2,"siewyangzhi":152}},{"path":"src/main/java/seedu/duke/command/itemcommands/ViewItemListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke.command.itemcommands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.itemlists.ItemList;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidViewItemsCommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":" * Represents a command to view all the items currently within the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"public class ViewItemListCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"     * Takes in the user input and checks if the formatting of the view item list command within the user input is","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"     * valid.","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"     * If the command is valid, it creates a ViewItemListCommand object.","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if the formatting of the view item list command that the user inputted is","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"     *                                   invalid.","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"    public ViewItemListCommand(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"        if (!userInput.isEmpty()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidViewItemsCommandException();","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"     * Prints out the item name ,pax as well as index for each item that is found within the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"     * @param listContainer The object containing the data structures necessary for viewing all the items within the","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"     *                      item list. In this case, we require access to the ItemList object which is within","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"     *                      listContainer.","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"     * @param ui            The object that deals with user interface for the program.","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"XunyiiZ"},"content":"     * @return","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"XunyiiZ"},"content":"    public void execute(ListContainer listContainer, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"XunyiiZ"},"content":"        ItemList listOfItems \u003d listContainer.getItemList();","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"        ui.printItemList(listOfItems);","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"zhenster":2,"FaliciaOng":1,"XunyiiZ":3,"siewyangzhi":37}},{"path":"src/main/java/seedu/duke/command/itemcommands/ViewItemsWithZeroPaxCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke.command.itemcommands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.itemlists.ItemList;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidViewItemsWithZeroPaxCommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":" * Represents a command to view all the items currently within the item list that have a pax of zero.","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"public class ViewItemsWithZeroPaxCommand extends Command {","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"     * Takes in the user input and checks if the formatting of the search item command within the user input is","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"     * valid.","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"     * Takes the user input and creates a SearchItemCommand object using it.","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if the keyword is empty or if the string userInput contains \"search item\".","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"    public ViewItemsWithZeroPaxCommand(String userInput) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"        if (!userInput.isEmpty()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidViewItemsWithZeroPaxCommandException();","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"     * Prints out the item name ,pax as well as index for items within the item list that have a pax of zero.","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"     * @param listContainer The object containing the data structures necessary for viewing all the items within the","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"     *                      item list with a pax of zero. In this case, we require access to the ItemList object which","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"     *                      is within listContainer.","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"     * @param ui            The object that deals with user interface for the program.","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"XunyiiZ"},"content":"     * @return","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"    public void execute(ListContainer listContainer, Ui ui) {","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"        ItemList listOfItems \u003d listContainer.getItemList();","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"        ItemList listOfItemsWithZeroPax \u003d listOfItems.findItemsWithZeroPaxInList();","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"        if (listOfItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"siewyangzhi"},"content":"            ui.printNoItemsFoundInListAcknowledgementMessage();","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"            return;","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"siewyangzhi"},"content":"        ui.printItemList(listOfItemsWithZeroPax);","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"zhenster":2,"FaliciaOng":1,"XunyiiZ":1,"siewyangzhi":43}},{"path":"src/main/java/seedu/duke/command/roomcommand/CheckAllRoomCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke.command.roomcommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.AssignmentMap;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.roomlists.Room;","lastModifiedDate":"2022-04-02"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.roomlists.RoomList;","lastModifiedDate":"2022-04-02"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":" * Class that implements execution behavior for listing all room.","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":" * information with its type, room id, level and vacancy status.","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"public class CheckAllRoomCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"    private RoomList roomList;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"    public CheckAllRoomCommand() {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"     * Override of execute command in Command class.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"     * Print out all room information including:","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"     * type, room number, level, status and assigned housekeeper.","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"     * @param listContainer The object containing the necessary data structure.","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"     * @param ui The object that deals with user interface for the program.","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"    public void execute(ListContainer listContainer, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"        this.roomList \u003d listContainer.getRoomList();","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"XunyiiZ"},"content":"        AssignmentMap assignmentMap \u003d listContainer.getAssignmentMap();","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"XunyiiZ"},"content":"        ui.printTableHeader();","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"        for (Room room : roomList.getRoomList()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"XunyiiZ"},"content":"            System.out.println(room.toString()","lastModifiedDate":"2022-04-02"},{"lineNumber":35,"author":{"gitId":"XunyiiZ"},"content":"                    + String.format(\"%-30s\", assignmentMap.getHouseKeeperNameByRoom(room.getRoomId()))","lastModifiedDate":"2022-04-02"},{"lineNumber":36,"author":{"gitId":"XunyiiZ"},"content":"            );","lastModifiedDate":"2022-04-02"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":11,"XunyiiZ":28,"siewyangzhi":1}},{"path":"src/main/java/seedu/duke/command/roomcommand/CheckInCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke.command.roomcommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.exceptions.RoomAlrOccupiedException;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.roomlists.RoomList;","lastModifiedDate":"2022-04-02"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.AssignmentMap;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.roomlists.Room;","lastModifiedDate":"2022-04-02"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidRoomNumberException;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":" * Class that checks in a room and changes the status","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":" * of the room to be occupied.","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"public class CheckInCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"    RoomList roomList;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"    int roomId;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"     * Override of execute command in Command class.","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"     * Check in room with corresponding room number.","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"     * The room status will be changed to occupied.","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"     * After check in, it will print out corresponding room information.","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"     * @param listContainer The object containing the necessary data structure.","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"XunyiiZ"},"content":"     * @param ui            The object that deals with user interface for the program.","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"XunyiiZ"},"content":"     * @throws HotelLiteManagerException if the room number is not in the room list.","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"XunyiiZ"},"content":"     * @return","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"XunyiiZ"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"XunyiiZ"},"content":"        this.roomList \u003d listContainer.getRoomList();","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"XunyiiZ"},"content":"        AssignmentMap assignmentMap \u003d listContainer.getAssignmentMap();","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"XunyiiZ"},"content":"        for (Room room : roomList.getRoomList()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"            if (room.getRoomId() \u003d\u003d roomId) {","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"XunyiiZ"},"content":"                if (!room.getIsVacant()) {","lastModifiedDate":"2022-04-02"},{"lineNumber":42,"author":{"gitId":"XunyiiZ"},"content":"                    throw new RoomAlrOccupiedException();","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"XunyiiZ"},"content":"                }","lastModifiedDate":"2022-04-02"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"                room.checkIn();","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"XunyiiZ"},"content":"                ui.printTableHeader();","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"XunyiiZ"},"content":"                System.out.println(room","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"XunyiiZ"},"content":"                        + String.format(\"%-30s\", assignmentMap.getHouseKeeperNameByRoom(room.getRoomId()))","lastModifiedDate":"2022-04-02"},{"lineNumber":48,"author":{"gitId":"XunyiiZ"},"content":"                );","lastModifiedDate":"2022-04-02"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"                return;","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"        throw new InvalidRoomNumberException();","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"XunyiiZ"},"content":"     * Constructor that initializes the roomId.","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"XunyiiZ"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"XunyiiZ"},"content":"     * @param command contains the roomId.","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"XunyiiZ"},"content":"    public CheckInCommand(String command) throws InvalidRoomNumberException {","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"XunyiiZ"},"content":"        if (!RoomHelper.isValidIntNumber(command.trim())) {","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"XunyiiZ"},"content":"            throw new InvalidRoomNumberException();","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"zhenster"},"content":"        roomId \u003d Integer.parseInt(command.trim());","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":20,"XunyiiZ":44,"siewyangzhi":4}},{"path":"src/main/java/seedu/duke/command/roomcommand/CheckOutCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke.command.roomcommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.exceptions.RoomAlrVacantException;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.roomlists.RoomList;","lastModifiedDate":"2022-04-02"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.AssignmentMap;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.roomlists.Room;","lastModifiedDate":"2022-04-02"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidRoomNumberException;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":" * Class that checks out a room with corresponding room number","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":" * and changes its status to be vacant.","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"public class CheckOutCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"    RoomList roomList;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"    int roomId;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"     * Override of execute command in Command class.","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"     * Check out room with corresponding room number.","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"     * The room status will be changed to vacant","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"     * After check in, it will print out corresponding room information.","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"     * @param listContainer The object containing the necessary data structure.","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"     * @param ui            The object that deals with user interface for the program.","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"XunyiiZ"},"content":"     * @throws InvalidRoomNumberException if the room number is not inside the room list.","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"XunyiiZ"},"content":"     * @return","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"XunyiiZ"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"XunyiiZ"},"content":"        this.roomList \u003d listContainer.getRoomList();","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"XunyiiZ"},"content":"        AssignmentMap assignmentMap \u003d listContainer.getAssignmentMap();","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"XunyiiZ"},"content":"        for (Room room : roomList.getRoomList()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"            if (room.getRoomId() \u003d\u003d roomId) {","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"XunyiiZ"},"content":"                if (room.getIsVacant()) {","lastModifiedDate":"2022-04-02"},{"lineNumber":41,"author":{"gitId":"XunyiiZ"},"content":"                    throw new RoomAlrVacantException();","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"XunyiiZ"},"content":"                }","lastModifiedDate":"2022-04-02"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"                room.checkOut();","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"XunyiiZ"},"content":"                ui.printTableHeader();","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"XunyiiZ"},"content":"                System.out.println(room","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"XunyiiZ"},"content":"                        + String.format(\"%-30s\", assignmentMap.getHouseKeeperNameByRoom(room.getRoomId()))","lastModifiedDate":"2022-04-02"},{"lineNumber":47,"author":{"gitId":"XunyiiZ"},"content":"                );","lastModifiedDate":"2022-04-02"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"                return;","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"        throw new InvalidRoomNumberException();","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"XunyiiZ"},"content":"     * Constructor that initializes the roomId.","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"XunyiiZ"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"XunyiiZ"},"content":"     * @param command contains the roomId.","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"XunyiiZ"},"content":"    public CheckOutCommand(String command) throws InvalidRoomNumberException {","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"XunyiiZ"},"content":"        if (!RoomHelper.isValidIntNumber(command.trim())) {","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"XunyiiZ"},"content":"            throw new InvalidRoomNumberException();","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"        roomId \u003d Integer.parseInt(command.trim());","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":18,"XunyiiZ":42,"siewyangzhi":5}},{"path":"src/main/java/seedu/duke/command/roomcommand/CheckRoomByCatCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke.command.roomcommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.AssignmentMap;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidCategoryException;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.roomlists.Room;","lastModifiedDate":"2022-04-02"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.roomlists.RoomList;","lastModifiedDate":"2022-04-02"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.roomlists.RoomType;","lastModifiedDate":"2022-04-02"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":" * Class that implements execution behavior for listing the information","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":" * of all rooms with corresponding category.","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":" * Information contains its type, room id, level and vacancy status","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"public class CheckRoomByCatCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"    private RoomType type;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"     * Extracts the room type from user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"     * @param commandStringWithoutCommand contains the information of the room type.","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"     * @throws InvalidCategoryException If the category is not valid.","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"    public CheckRoomByCatCommand(String commandStringWithoutCommand) throws InvalidCategoryException {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"        switch (commandStringWithoutCommand.trim()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"        case \"single\":","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"            type \u003d RoomType.Single;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"            break;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"        case \"double\":","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"            type \u003d RoomType.Double;","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"            break;","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"        case \"triple\":","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"            type \u003d RoomType.Triple;","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"            break;","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"        case \"queen\":","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"            type \u003d RoomType.Queen;","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"            break;","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"        case \"twin\":","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"            type \u003d RoomType.Twin;","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"            break;","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"        case \"king\":","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"            type \u003d RoomType.King;","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"            break;","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"        default:  // throw !!!!!!!","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"            throw new InvalidCategoryException();","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"XunyiiZ"},"content":"     * Override of execute command in Command class.","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"XunyiiZ"},"content":"     * Print out all room information with corresponding room type","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"XunyiiZ"},"content":"     * including the information of:","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"XunyiiZ"},"content":"     * type, room number, level, status and assigned housekeeper.","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"XunyiiZ"},"content":"     * @param listContainer The object containing the necessary data structure.","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"XunyiiZ"},"content":"     * @param ui The object that deals with user interface for the program.","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"XunyiiZ"},"content":"     * @return","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"XunyiiZ"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"XunyiiZ"},"content":"    public void execute(ListContainer listContainer, Ui ui) {","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"XunyiiZ"},"content":"        RoomList roomList \u003d listContainer.getRoomList();","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"XunyiiZ"},"content":"        AssignmentMap assignmentMap \u003d listContainer.getAssignmentMap();","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"XunyiiZ"},"content":"        ui.printTableHeader();","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"zhenster"},"content":"        for (Room room : roomList.getRoomList()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"zhenster"},"content":"            if (room.getType() \u003d\u003d type) {","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"XunyiiZ"},"content":"                System.out.println(room.toString()","lastModifiedDate":"2022-04-02"},{"lineNumber":70,"author":{"gitId":"XunyiiZ"},"content":"                        + String.format(\"%-30s\", assignmentMap.getHouseKeeperNameByRoom(room.getRoomId()))","lastModifiedDate":"2022-04-02"},{"lineNumber":71,"author":{"gitId":"XunyiiZ"},"content":"                );","lastModifiedDate":"2022-04-02"},{"lineNumber":72,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":38,"XunyiiZ":36,"siewyangzhi":2}},{"path":"src/main/java/seedu/duke/command/roomcommand/CheckRoomByLevelCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke.command.roomcommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.AssignmentMap;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidLevelException;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidRoomNumberException;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.roomlists.Room;","lastModifiedDate":"2022-04-02"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.roomlists.RoomList;","lastModifiedDate":"2022-04-02"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":" * Class that implements execution behavior for listing the information","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":" * of all rooms with corresponding category.","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":" * Information contains its type, room id, level and vacancy status","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"public class CheckRoomByLevelCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"    private int level;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"     * Extracts the room level from user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"     * @param commandStringWithoutCommand contains the information of the level.","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"    public CheckRoomByLevelCommand(String commandStringWithoutCommand) throws InvalidRoomNumberException {","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"        if (!RoomHelper.isValidIntNumber(commandStringWithoutCommand.trim())) {","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"            throw new InvalidRoomNumberException();","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"        level \u003d Integer.parseInt(commandStringWithoutCommand.trim());","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"XunyiiZ"},"content":"     * Override of execute command in Command class.","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"XunyiiZ"},"content":"     * Print out all room information with corresponding level","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"XunyiiZ"},"content":"     * including the information of:","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"XunyiiZ"},"content":"     * type, room number, level, status and assigned housekeeper.","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"XunyiiZ"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"XunyiiZ"},"content":"     * @param listContainer The object containing the necessary data structure.","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"XunyiiZ"},"content":"     * @param ui            The object that deals with user interface for the program.","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"XunyiiZ"},"content":"     * @throws InvalidLevelException if the level is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"XunyiiZ"},"content":"     * @return","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"XunyiiZ"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"XunyiiZ"},"content":"    public void execute(ListContainer listContainer, Ui ui)","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"            throws InvalidLevelException {","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"XunyiiZ"},"content":"        RoomList roomList \u003d listContainer.getRoomList();","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"XunyiiZ"},"content":"        AssignmentMap assignmentMap \u003d listContainer.getAssignmentMap();","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"XunyiiZ"},"content":"        boolean isValidLevel \u003d isValidLevel(level, roomList);","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"        if (!isValidLevel) {","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"            throw new InvalidLevelException();","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"XunyiiZ"},"content":"        ui.printTableHeader();","lastModifiedDate":"2022-04-09"},{"lineNumber":55,"author":{"gitId":"zhenster"},"content":"        for (Room room : roomList.getRoomList()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"zhenster"},"content":"            if (room.getLevel() \u003d\u003d level) {","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"XunyiiZ"},"content":"                System.out.println(room","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"XunyiiZ"},"content":"                        + String.format(\"%-30s\", assignmentMap.getHouseKeeperNameByRoom(room.getRoomId()))","lastModifiedDate":"2022-04-02"},{"lineNumber":59,"author":{"gitId":"XunyiiZ"},"content":"                );","lastModifiedDate":"2022-04-02"},{"lineNumber":60,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"XunyiiZ"},"content":"    private boolean isValidLevel(int level, RoomList roomList) {","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"XunyiiZ"},"content":"        for (Room room : roomList.getRoomList()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"XunyiiZ"},"content":"            if (room.getLevel() \u003d\u003d level) {","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"XunyiiZ"},"content":"                return true;","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"XunyiiZ"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"XunyiiZ"},"content":"        return false;","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":19,"XunyiiZ":52,"siewyangzhi":1}},{"path":"src/main/java/seedu/duke/command/roomcommand/CheckRoomCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke.command.roomcommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.AssignmentMap;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidRoomNumberException;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.ListContainer;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.roomlists.Room;","lastModifiedDate":"2022-04-02"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.roomlists.RoomList;","lastModifiedDate":"2022-04-02"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":" * Class that implements execution behavior to list room with corresponding","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":" * room number.","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":" * The information includes its type, room id, level and vacancy status.","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"public class CheckRoomCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"    private int roomId;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"     * Extracts the room level from user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"     * @param commandStringWithoutCommand contains the information of room number.","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"    public CheckRoomCommand(String commandStringWithoutCommand) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"        if (!RoomHelper.isValidIntNumber(commandStringWithoutCommand.trim())) {","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"            throw new InvalidRoomNumberException();","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"        roomId \u003d Integer.parseInt(commandStringWithoutCommand.trim());","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"XunyiiZ"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"XunyiiZ"},"content":"     * Override of execute command in Command class.","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"XunyiiZ"},"content":"     * Print out the room information with corresponding room number","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"XunyiiZ"},"content":"     * including information of:","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"XunyiiZ"},"content":"     * type, room number, level, status and assigned housekeeper.","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"XunyiiZ"},"content":"     *  @param listContainer The object containing the necessary data structure.","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"XunyiiZ"},"content":"     * @param ui            The object that deals with user interface for the program.","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"XunyiiZ"},"content":"     * @return","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"XunyiiZ"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"XunyiiZ"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"XunyiiZ"},"content":"    public void execute(ListContainer listContainer, Ui ui) throws InvalidRoomNumberException {","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"XunyiiZ"},"content":"        RoomList roomList \u003d listContainer.getRoomList();","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"XunyiiZ"},"content":"        AssignmentMap assignmentMap \u003d listContainer.getAssignmentMap();","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"        for (Room room : roomList.getRoomList()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"            if (room.getRoomId() \u003d\u003d roomId) {","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"XunyiiZ"},"content":"                ui.printTableHeader();","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"XunyiiZ"},"content":"                System.out.println(room.toString()","lastModifiedDate":"2022-04-02"},{"lineNumber":50,"author":{"gitId":"XunyiiZ"},"content":"                        + String.format(\"%-30s\", assignmentMap.getHouseKeeperNameByRoom(room.getRoomId()))","lastModifiedDate":"2022-04-02"},{"lineNumber":51,"author":{"gitId":"XunyiiZ"},"content":"                );","lastModifiedDate":"2022-04-02"},{"lineNumber":52,"author":{"gitId":"XunyiiZ"},"content":"                return;","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"XunyiiZ"},"content":"        throw new InvalidRoomNumberException();","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":15,"XunyiiZ":41,"siewyangzhi":2}},{"path":"src/main/java/seedu/duke/command/roomcommand/RoomHelper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke.command.roomcommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"public class RoomHelper {","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"    public static boolean isValidIntNumber(String numberStr) {","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"        if (numberStr \u003d\u003d null) {","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"            return false;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"            int num \u003d Integer.parseInt(numberStr);","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"            return false;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"        return true;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"XunyiiZ":17}},{"path":"src/main/java/seedu/duke/eventlists/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package seedu.duke.eventlists;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"public class Event {","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"    public LocalDate at;","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"    public String description;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"    public Event(String description, LocalDate at) {","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"aiman-imtiaz"},"content":"    public String toString() {","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"aiman-imtiaz"},"content":"        String message \u003d \"Event \" + description","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"aiman-imtiaz"},"content":"                + \" (at: \" + getAt() + \")\";","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"aiman-imtiaz"},"content":"        return message;","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":"    public String toFileString() {","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"aiman-imtiaz"},"content":"        return getDescription() + \" | \" + at.toString();","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"    public void setAt(String at) {","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"aiman-imtiaz"},"content":"        this.at \u003d LocalDate.parse(at);","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"aiman-imtiaz"},"content":"    public String getAt() {","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"aiman-imtiaz"},"content":"        return at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"aiman-imtiaz"},"content":"    public String getDescription() {","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"aiman-imtiaz"},"content":"        return description;","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"aiman-imtiaz":38}},{"path":"src/main/java/seedu/duke/eventlists/EventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package seedu.duke.eventlists;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.exceptions.EventExistsException;","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.exceptions.InvalidDateException;","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.exceptions.EventDoesNotExist;","lastModifiedDate":"2022-04-05"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.storage.EventListFileManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"aiman-imtiaz"},"content":" * Represents a data structure containing multiple Event objects.","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"aiman-imtiaz"},"content":" * The constructor will initialize all rooms with status vacant","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"aiman-imtiaz"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"aiman-imtiaz"},"content":"public class EventList {","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"aiman-imtiaz"},"content":"    private Ui ui;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"aiman-imtiaz"},"content":"    private ArrayList\u003cEvent\u003e eventList;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"aiman-imtiaz"},"content":"    public EventList(ArrayList\u003cEvent\u003e eventList) {  // dummy data for initialization","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"        this.eventList \u003d eventList;","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"aiman-imtiaz"},"content":"    public ArrayList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"aiman-imtiaz"},"content":"        return this.eventList;","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"aiman-imtiaz"},"content":"    public void add(String description, String atString) throws InvalidDateException, EventExistsException {","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"aiman-imtiaz"},"content":"        LocalDate at;","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"aiman-imtiaz"},"content":"        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"aiman-imtiaz"},"content":"            at \u003d LocalDate.parse(atString);","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"aiman-imtiaz"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"aiman-imtiaz"},"content":"        if (eventExists(description, at)) {","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new EventExistsException();","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"aiman-imtiaz"},"content":"        Event event \u003d new Event(description, at);","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"aiman-imtiaz"},"content":"        eventList.add(event);","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"aiman-imtiaz"},"content":"        ui.printEventAdded(event);","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"aiman-imtiaz"},"content":"    public void delete(String n) throws EventDoesNotExist {","lastModifiedDate":"2022-04-05"},{"lineNumber":48,"author":{"gitId":"aiman-imtiaz"},"content":"        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"aiman-imtiaz"},"content":"            int j \u003d Integer.parseInt(n) - 1;","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"aiman-imtiaz"},"content":"            Event deleted \u003d eventList.get(j);","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"aiman-imtiaz"},"content":"            eventList.remove(j);","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"aiman-imtiaz"},"content":"            ui.printEventDeleted(deleted);","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"aiman-imtiaz"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"aiman-imtiaz"},"content":"            throw new EventDoesNotExist();","lastModifiedDate":"2022-04-05"},{"lineNumber":55,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"aiman-imtiaz"},"content":"    public boolean eventExists(String description, LocalDate at) {","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"aiman-imtiaz"},"content":"        String atString \u003d at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-04-06"},{"lineNumber":60,"author":{"gitId":"aiman-imtiaz"},"content":"        for (Event e : eventList) {","lastModifiedDate":"2022-04-06"},{"lineNumber":61,"author":{"gitId":"aiman-imtiaz"},"content":"            String d \u003d e.getDescription();","lastModifiedDate":"2022-04-06"},{"lineNumber":62,"author":{"gitId":"aiman-imtiaz"},"content":"            String a \u003d e.getAt();","lastModifiedDate":"2022-04-06"},{"lineNumber":63,"author":{"gitId":"aiman-imtiaz"},"content":"            if (d.equals(description) \u0026\u0026 a.equals(atString)) {","lastModifiedDate":"2022-04-06"},{"lineNumber":64,"author":{"gitId":"aiman-imtiaz"},"content":"                return true;","lastModifiedDate":"2022-04-06"},{"lineNumber":65,"author":{"gitId":"aiman-imtiaz"},"content":"            }","lastModifiedDate":"2022-04-06"},{"lineNumber":66,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":67,"author":{"gitId":"aiman-imtiaz"},"content":"        return false;","lastModifiedDate":"2022-04-06"},{"lineNumber":68,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":69,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":70,"author":{"gitId":"siewyangzhi"},"content":"    public void save() throws IOException, HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"aiman-imtiaz"},"content":"        EventListFileManager eventFileManager \u003d new EventListFileManager();","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"aiman-imtiaz"},"content":"        eventFileManager.save(eventList);","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"aiman-imtiaz":72,"zhenster":1,"siewyangzhi":1}},{"path":"src/main/java/seedu/duke/exceptions/DuplicateCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-04-05"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"public class DuplicateCommandException extends HotelLiteManagerException {","lastModifiedDate":"2022-04-05"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Duplicate command string detected. Please enter the \"","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"            + \"command string only once.\";","lastModifiedDate":"2022-04-05"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-04-05"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-04-05"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-04-05"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-04-05"}],"authorContributionMap":{"zhenster":11}},{"path":"src/main/java/seedu/duke/exceptions/DuplicateItemNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"public class DuplicateItemNameException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! The item names cannot be the same.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zhenster":2,"siewyangzhi":9}},{"path":"src/main/java/seedu/duke/exceptions/EmptyDayException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":" * Represents an exception which would be thrown when the user enters an empty day when querying for available","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":" * housekeepers.","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"public class EmptyDayException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Day given were Empty\";","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"zhenster":2,"FaliciaOng":12}},{"path":"src/main/java/seedu/duke/exceptions/EmptyHousekeeperPerformanceNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"public class EmptyHousekeeperPerformanceNameException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Housekeeper name cannot be empty.\";","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"zhenster":10}},{"path":"src/main/java/seedu/duke/exceptions/EmptyHousekeeperPerformanceRatingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"public class EmptyHousekeeperPerformanceRatingException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Housekeeper performance cannot be empty.\";","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"zhenster":10}},{"path":"src/main/java/seedu/duke/exceptions/EmptyItemNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":" * Represents an exception which would be thrown when the user enters an empty item name in the Add Item, Update Item","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":" * Pax, Update Item Name or Delete Item Command.","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"public class EmptyItemNameException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Item Name cannot be empty.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"FaliciaOng":2,"siewyangzhi":12}},{"path":"src/main/java/seedu/duke/exceptions/EmptyItemPaxException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":" * Represents an exception which would be thrown when the user enters an empty item pax in the Add Item, Update Item Pax","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":" * Command.","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"public class EmptyItemPaxException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Item Pax cannot be empty.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zhenster":2,"siewyangzhi":12}},{"path":"src/main/java/seedu/duke/exceptions/EmptyKeywordException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"public class EmptyKeywordException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! The keywords used to search for items within the item list \"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"            + \"cannot be empty.\";","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"zhenster":1,"siewyangzhi":10}},{"path":"src/main/java/seedu/duke/exceptions/EmptyNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"public class EmptyNameException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Name is empty\";","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"zhenster":1,"FaliciaOng":9}},{"path":"src/main/java/seedu/duke/exceptions/EmptySatisfactionCustomerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":" * An exception for the \"Add Satisfaction [customerName] [satisfactionValue] command.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":" * This exception is thrown if the customer name is not provided.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"public class EmptySatisfactionCustomerException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Customer name cannot be empty.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":15}},{"path":"src/main/java/seedu/duke/exceptions/EmptySatisfactionValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":" * An exception for the \"Add Satisfaction [customerName] [satisfactionValue] command.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":" * This exception is thrown if the satisfaction value is not provided.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"public class EmptySatisfactionValueException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Satisfaction value cannot be empty.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":16}},{"path":"src/main/java/seedu/duke/exceptions/EventDoesNotExist.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-04-05"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"public class EventDoesNotExist  extends HotelLiteManagerException {","lastModifiedDate":"2022-04-05"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Event does not exist\";","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"    @Override","lastModifiedDate":"2022-04-05"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-04-05"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-04-05"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-04-05"}],"authorContributionMap":{"aiman-imtiaz":10}},{"path":"src/main/java/seedu/duke/exceptions/EventExistsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"public class EventExistsException extends HotelLiteManagerException {","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Event already exists.\";","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"    @Override","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"aiman-imtiaz":11}},{"path":"src/main/java/seedu/duke/exceptions/FileCreationFailException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"public class FileCreationFailException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Unable to create the folder required to store the file.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zhenster":1,"siewyangzhi":10}},{"path":"src/main/java/seedu/duke/exceptions/FolderCreationFailException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"public class FolderCreationFailException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Unable to create the file required for storage of the various \"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"            + \"lists.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zhenster":1,"siewyangzhi":10}},{"path":"src/main/java/seedu/duke/exceptions/HotelLiteManagerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"public abstract class HotelLiteManagerException extends Exception {","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"\";","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zhenster":1,"siewyangzhi":8}},{"path":"src/main/java/seedu/duke/exceptions/HousekeeperFileNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"public class HousekeeperFileNotFoundException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"            \u003d \"The file housekeeper_file.txt was not found and is unable to be created.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zhenster":1,"FaliciaOng":11}},{"path":"src/main/java/seedu/duke/exceptions/HousekeeperPerformanceFileNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"public class HousekeeperPerformanceFileNotFoundException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"    private static final String ERROR_MESSAGE \u003d \"The file performance_file.txt was not found and \"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"            + \"is unable to be created.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zhenster":11}},{"path":"src/main/java/seedu/duke/exceptions/InvalidAgeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":" * An exception for the \"Add Housekeeper [housekeeperName] ~ [age] command.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":" * This exception is thrown if the add housekeeper command has a given age which is not an integer.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"public class InvalidAgeException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! AGE must be integer.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":2,"FaliciaOng":13}},{"path":"src/main/java/seedu/duke/exceptions/InvalidAssignmentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"public class InvalidAssignmentException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Please add assignment with format: assign NAME / ROOMID\";","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zhenster":1,"aiman-imtiaz":9}},{"path":"src/main/java/seedu/duke/exceptions/InvalidAvailabilityException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":" * An exception for the \"Availability [housekeeperName] @ [daysAvailable] command.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":" * This exception is thrown if the add housekeeper availability command has empty days available.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"public class InvalidAvailabilityException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Invalid Command -\u003e Availability NAME / 1,2\";","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"zhenster":1,"FaliciaOng":13}},{"path":"src/main/java/seedu/duke/exceptions/InvalidCategoryException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":" * An exception to check room type.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":" * This exception is thrown if the room type is beyond","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":" * {single, double, triple, queen, twin, king}.","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"public class InvalidCategoryException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Room category is invalid\";","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zhenster":1,"XunyiiZ":15}},{"path":"src/main/java/seedu/duke/exceptions/InvalidCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":" * Represents an exception which would be thrown when the format of the Add Item, View Item or Update Item Pax command","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":" * that the user inputs is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"public class InvalidCommandException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Invalid Command.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zhenster":1,"siewyangzhi":13}},{"path":"src/main/java/seedu/duke/exceptions/InvalidDateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"public class InvalidDateException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Date give must be in the format yyyy-mm-dd.\";","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"zhenster":1,"aiman-imtiaz":9}},{"path":"src/main/java/seedu/duke/exceptions/InvalidDayException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"public class InvalidDayException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Day give must be an Integer between 1 and 7.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"zhenster":1,"FaliciaOng":9}},{"path":"src/main/java/seedu/duke/exceptions/InvalidDeleteEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-04-05"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"public class InvalidDeleteEventException extends HotelLiteManagerException {","lastModifiedDate":"2022-04-05"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Please delete event with format: delete event INDEX.\";","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"    @Override","lastModifiedDate":"2022-04-05"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-04-05"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-04-05"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-04-05"}],"authorContributionMap":{"aiman-imtiaz":10}},{"path":"src/main/java/seedu/duke/exceptions/InvalidDescriptionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"public class InvalidDescriptionException extends HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! The event description must only contain \"","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"            + \"alphanumeric characters.\";","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"    @Override","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"aiman-imtiaz":12}},{"path":"src/main/java/seedu/duke/exceptions/InvalidEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"public class InvalidEventException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Please add event with format: event DESCRIPTION / DATE.\"","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"            + \" The date should be in format yyyy-mm-dd.\";","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"zhenster":2,"aiman-imtiaz":10}},{"path":"src/main/java/seedu/duke/exceptions/InvalidHelpException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"public class InvalidHelpException extends HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! You might try typing: help\";","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"    @Override","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"aiman-imtiaz":10}},{"path":"src/main/java/seedu/duke/exceptions/InvalidHousekeeperNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"public class InvalidHousekeeperNameException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! A housekeeper by this name does not exist in the system.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zhenster":3,"aiman-imtiaz":9}},{"path":"src/main/java/seedu/duke/exceptions/InvalidHousekeeperPerformanceNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-04-05"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"public class InvalidHousekeeperPerformanceNameException extends HotelLiteManagerException {","lastModifiedDate":"2022-04-05"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Housekeeper\u0027s name must only contain alphabetical characters.\";","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-04-05"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-04-05"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-04-05"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-04-05"}],"authorContributionMap":{"zhenster":10}},{"path":"src/main/java/seedu/duke/exceptions/InvalidHousekeeperPerformanceRatingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"public class InvalidHousekeeperPerformanceRatingException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Housekeeper performance rating must be an integer between \"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"            + \"1 and 5, inclusive.\";","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"zhenster":13}},{"path":"src/main/java/seedu/duke/exceptions/InvalidHousekeeperProfileException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"public class InvalidHousekeeperProfileException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Invalid Command -\u003e Add Housekeeper NAME / INT AGE\";","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"FaliciaOng":10}},{"path":"src/main/java/seedu/duke/exceptions/InvalidItemNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-04-02"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":" * Represents an exception which would be thrown when the user enters an item name which violates the restriction where","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":" * item names can only contain alphabetical characters, numbers, blank spaces or apostrophes.","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"public class InvalidItemNameException extends HotelLiteManagerException {","lastModifiedDate":"2022-04-02"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! The item name is invalid. Item Names can only contain \"","lastModifiedDate":"2022-04-02"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"            + \"alphabetical characters, numbers, blank spaces or apostrophes.\";","lastModifiedDate":"2022-04-02"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-04-02"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-04-02"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-04-02"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-02"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-04-02"}],"authorContributionMap":{"siewyangzhi":15}},{"path":"src/main/java/seedu/duke/exceptions/InvalidItemPaxException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":" * Represents an exception which would be thrown when the user enters an invalid item pax in the Add Item, Update Item","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":" * Pax Command.","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"public class InvalidItemPaxException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Item Pax is invalid.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zhenster":2,"siewyangzhi":12}},{"path":"src/main/java/seedu/duke/exceptions/InvalidLevelException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":" * An exception to check room level.","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":" * This exception is thrown if the room level is beyond level range.","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"public class InvalidLevelException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Room level is invalid\";","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zhenster":3,"XunyiiZ":13}},{"path":"src/main/java/seedu/duke/exceptions/InvalidNewWeekException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":" * An exception that is throw when user input a extra words after \"is a new week\" command.","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"public class InvalidNewWeekException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Invalid Command -\u003e is a new week.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zhenster":3,"FaliciaOng":12}},{"path":"src/main/java/seedu/duke/exceptions/InvalidNewYearException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":" * An exception that is throw when user input a extra words after \"is a new week\" command.","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"public class InvalidNewYearException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Invalid Command -\u003e is a new year.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zhenster":3,"FaliciaOng":12}},{"path":"src/main/java/seedu/duke/exceptions/InvalidRoomNumberException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":" * An exception to check room number.","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":" * This exception is thrown if the room number is not in the room list.","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"public class InvalidRoomNumberException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Room number is invalid\";","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zhenster":3,"XunyiiZ":13}},{"path":"src/main/java/seedu/duke/exceptions/InvalidSatisfactionCustomerNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-04-05"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"public class InvalidSatisfactionCustomerNameException extends HotelLiteManagerException {","lastModifiedDate":"2022-04-05"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Customer\u0027s name must only contain alphabetical characters.\";","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-04-05"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-04-05"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-04-05"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-04-05"}],"authorContributionMap":{"zhenster":10}},{"path":"src/main/java/seedu/duke/exceptions/InvalidSatisfactionValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" * An exception for the \"Add Satisfaction [customerName] [satisfactionValue] command.","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":" * This exception is thrown if the satisfaction value is invalid (i.e. is not an integer","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":" * between 1 and 5).","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"public class InvalidSatisfactionValueException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Satisfaction value must be an integer \"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"            + \"between 1 and 5, inclusive.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":20}},{"path":"src/main/java/seedu/duke/exceptions/InvalidUpdateItemNameCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":" * Represents an exception which would be thrown when the user enters an invalid format for the update item name","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":" * command.","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"public class InvalidUpdateItemNameCommandException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Invalid Command -\u003e Update Item Name OLD NAME / NEW NAME\";","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zhenster":2,"siewyangzhi":12}},{"path":"src/main/java/seedu/duke/exceptions/InvalidUpdateItemPaxCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":" * Represents an exception which would be thrown when the user enters an invalid format for the update item pax","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":" * command.","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"public class InvalidUpdateItemPaxCommandException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Invalid Command -\u003e Update Item Pax ITEM NAME / NEW PAX\";","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zhenster":2,"siewyangzhi":12}},{"path":"src/main/java/seedu/duke/exceptions/InvalidUserException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":" * An exception to prevent multiple adding of the same name.","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":" * This exception is thrown if housekeeper profile has already been entered.","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"public class InvalidUserException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! This person has already been recorded.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"zhenster":3,"FaliciaOng":14}},{"path":"src/main/java/seedu/duke/exceptions/InvalidViewEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"public class InvalidViewEventException extends HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Please view events with format: view events.\";","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"    @Override","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"aiman-imtiaz":10}},{"path":"src/main/java/seedu/duke/exceptions/InvalidViewHousekeeperException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"public class InvalidViewHousekeeperException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Invalid Command -\u003e view recorded housekeeper.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zhenster":3,"FaliciaOng":9}},{"path":"src/main/java/seedu/duke/exceptions/InvalidViewItemsCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":" * Represents an exception which would be thrown when the user enters an invalid format for the view all items command.","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"public class InvalidViewItemsCommandException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Invalid Command -\u003e view all items\";","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zhenster":3,"siewyangzhi":12}},{"path":"src/main/java/seedu/duke/exceptions/InvalidViewItemsWithZeroPaxCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":" * Represents an exception which would be thrown when the user enters an invalid format for the view items with zero pax","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":" * command.","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"public class InvalidViewItemsWithZeroPaxCommandException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Invalid Command -\u003e view items with zero pax\";","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zhenster":2,"siewyangzhi":12}},{"path":"src/main/java/seedu/duke/exceptions/ItemAlreadyInListException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-04-02"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":" * Represents an exception which would be thrown when the user tries to add an item that is already in the item list.","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"public class ItemAlreadyInListException extends HotelLiteManagerException {","lastModifiedDate":"2022-04-02"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! The item to add already exists within the item list.\";","lastModifiedDate":"2022-04-02"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-04-02"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-04-02"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-04-02"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-02"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-04-02"}],"authorContributionMap":{"siewyangzhi":13}},{"path":"src/main/java/seedu/duke/exceptions/ItemFileNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":" * Represents an exception which would be thrown if the item file ItemList.txt is not found.","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"public class ItemFileNotFoundException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"The file ItemList.txt was not found and is unable to be created.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zhenster":2,"siewyangzhi":12}},{"path":"src/main/java/seedu/duke/exceptions/ItemNameAlreadyInListException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-04-02"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":" * Represents an exception which would be thrown when the new item name that the user wants to update an item","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":" * to already exists within the item list.","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"public class ItemNameAlreadyInListException extends HotelLiteManagerException {","lastModifiedDate":"2022-04-02"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! The new item name already exists within the item list.\";","lastModifiedDate":"2022-04-02"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-04-02"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-04-02"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-04-02"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-02"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-04-02"}],"authorContributionMap":{"siewyangzhi":14}},{"path":"src/main/java/seedu/duke/exceptions/ItemNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":" * Represents an exception which would be thrown when the item that the user is searching for within the item list","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":" * is not found.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"public class ItemNotFoundException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Item not found in inventory.\";","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"zhenster":2,"siewyangzhi":12}},{"path":"src/main/java/seedu/duke/exceptions/NameNotStringException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"public class NameNotStringException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Name entered has digits and symbol.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zhenster":3,"FaliciaOng":9}},{"path":"src/main/java/seedu/duke/exceptions/NewItemPaxSameAsCurrentPaxException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-04-02"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":" * Represents an exception which would be thrown when the new item pax is the same as the current item pax of the item","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":" * that the user wants to update.","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"public class NewItemPaxSameAsCurrentPaxException extends HotelLiteManagerException {","lastModifiedDate":"2022-04-02"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! The new item pax is the same as the current item pax.\";","lastModifiedDate":"2022-04-02"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"    @Override","lastModifiedDate":"2022-04-02"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-04-02"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-04-02"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-02"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-04-02"}],"authorContributionMap":{"siewyangzhi":15}},{"path":"src/main/java/seedu/duke/exceptions/NonexistentHousekeeperException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" * An exception for the \"add housekeeper performance [housekeeperName] [performanceRating]\" command.","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":" * This exception is thrown if the user attempts to record a housekeeper performance for a housekeeper","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":" * that does not exist in the HousekeeperList records.","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"public class NonexistentHousekeeperException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! You are attempting to record a houseekeeper performance\"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"            + \" for a housekeeper that does not exist in the housekeeper records.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"zhenster":19}},{"path":"src/main/java/seedu/duke/exceptions/OverAgeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"public class OverAgeException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! Unable to accept housekeeper age 61 and above.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"zhenster":3,"FaliciaOng":10}},{"path":"src/main/java/seedu/duke/exceptions/RepeatCustomerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" * Exception for the \"Add Satisfaction [customerName] [satisfactionValue]\" command.","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":" * This exception is thrown if a Satisfaction instance with the given customer name","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":" * already exists. Ensures that the same customer cannot have multiple satisfaction","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":" * values attributed to it.","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"public class RepeatCustomerException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! The given customer\u0027s satisfaction value has \"","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"            + \"already been recorded.\";","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"zhenster":20}},{"path":"src/main/java/seedu/duke/exceptions/RepeatHousekeeperPerformanceNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" * An exception for the \"add housekeeper performance [housekeeperName] [performanceRating]\" command.","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":" * This exception is thrown if the user attempts to add a HousekeeperPerformance object that corresponds to","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":" * a name which has already been stored in the HousekeeperPerformanceList.","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"public class RepeatHousekeeperPerformanceNameException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! The performance rating for this housekeeper\"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"            + \" has already been recorded.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"zhenster":19}},{"path":"src/main/java/seedu/duke/exceptions/RoomAlrOccupiedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"public class RoomAlrOccupiedException extends HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! The room is already occupied!\";","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"    @Override","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"XunyiiZ":10}},{"path":"src/main/java/seedu/duke/exceptions/RoomAlrVacantException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"public class RoomAlrVacantException extends HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! The room is already vacant!\";","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"    @Override","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"XunyiiZ":10}},{"path":"src/main/java/seedu/duke/exceptions/SatisfactionFileNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"public class SatisfactionFileNotFoundException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"    private static final String ERROR_MESSAGE \u003d \"The file satisfaction_list.txt was not found and \"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"            + \"is unable to be created.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zhenster":13}},{"path":"src/main/java/seedu/duke/exceptions/UnderAgeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"public class UnderAgeException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! The user is underage(\u003c21) and not allowed to work.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"zhenster":3,"FaliciaOng":10}},{"path":"src/main/java/seedu/duke/exceptions/UserDoesNotExistException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":" * This exception is thrown if housekeeper profile has has not been entered and user tries to add his/her availability.","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"public class UserDoesNotExistException extends HotelLiteManagerException {","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error! User does not exist.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"zhenster":3,"FaliciaOng":12}},{"path":"src/main/java/seedu/duke/housekeeperlists/Housekeeper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke.housekeeperlists;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":" * Records the age, name and availability of each Housekeeper.","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"public class Housekeeper {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"    private String name;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"    private int age;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"    private String availability;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"    private ArrayList\u003cInteger\u003e availableList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"    private static final String[] daysList \u003d {\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\",","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"        \"Sunday\"};","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"    public Housekeeper(String name, int age) {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"        this.age \u003d age;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"     * Verifies if housekeeper is available of the day given.","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"     * @param day represent the day user is interested in.","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"     * @return True if housekeeper is available, false if housekeeper is not available.","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"    public boolean isAvailableOn(int day) {","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"        day -\u003d 1;","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"        for (Integer i : availableList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"            if (i \u003d\u003d day) {","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"                return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"        return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"     * This method converts the given available day in int to the actual name of the day.","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"     * @return String of days the housekeeper is available to work on.","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"    public String getAvailability() {","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"        if (availability \u003d\u003d null) {","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"            return \"N/A\";","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"        String availableStr \u003d \"\";","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"        int incrementCounter \u003d 1;","lastModifiedDate":"2022-04-02"},{"lineNumber":48,"author":{"gitId":"FaliciaOng"},"content":"        for (Integer i : availableList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"FaliciaOng"},"content":"            if (availableList.size() \u003c\u003d incrementCounter) {","lastModifiedDate":"2022-04-02"},{"lineNumber":50,"author":{"gitId":"FaliciaOng"},"content":"                availableStr +\u003d daysList[i];","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"FaliciaOng"},"content":"            } else {","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"FaliciaOng"},"content":"                availableStr +\u003d daysList[i] + \" \";","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"FaliciaOng"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"FaliciaOng"},"content":"            incrementCounter +\u003d 1;","lastModifiedDate":"2022-04-02"},{"lineNumber":55,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"FaliciaOng"},"content":"        return availableStr;","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":60,"author":{"gitId":"FaliciaOng"},"content":"     * Ensure the availability written into the file is in the correct format such that the next time it loads the","lastModifiedDate":"2022-04-09"},{"lineNumber":61,"author":{"gitId":"FaliciaOng"},"content":"     * correct format of availability is given.","lastModifiedDate":"2022-04-09"},{"lineNumber":62,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-09"},{"lineNumber":63,"author":{"gitId":"FaliciaOng"},"content":"     * @param availability Availability of housekeeper given in integer.","lastModifiedDate":"2022-04-09"},{"lineNumber":64,"author":{"gitId":"FaliciaOng"},"content":"     * @return Valid format of availability to be written into housekeeper_file.txt.","lastModifiedDate":"2022-04-09"},{"lineNumber":65,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":66,"author":{"gitId":"FaliciaOng"},"content":"    public String getAvailabilityFile(String availability) {","lastModifiedDate":"2022-04-02"},{"lineNumber":67,"author":{"gitId":"FaliciaOng"},"content":"        if (availability \u003d\u003d null) {","lastModifiedDate":"2022-04-02"},{"lineNumber":68,"author":{"gitId":"FaliciaOng"},"content":"            return \"N/A\";","lastModifiedDate":"2022-04-02"},{"lineNumber":69,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-04-02"},{"lineNumber":70,"author":{"gitId":"FaliciaOng"},"content":"        String[] availabilitySplit \u003d availability.split(\",\");","lastModifiedDate":"2022-04-02"},{"lineNumber":71,"author":{"gitId":"FaliciaOng"},"content":"        String availabilityForFile \u003d \"\";","lastModifiedDate":"2022-04-02"},{"lineNumber":72,"author":{"gitId":"FaliciaOng"},"content":"        int incrementCounter \u003d 1;","lastModifiedDate":"2022-04-02"},{"lineNumber":73,"author":{"gitId":"FaliciaOng"},"content":"        for (String day: availabilitySplit) {","lastModifiedDate":"2022-04-02"},{"lineNumber":74,"author":{"gitId":"FaliciaOng"},"content":"            String trimDay \u003d day.trim();","lastModifiedDate":"2022-04-02"},{"lineNumber":75,"author":{"gitId":"FaliciaOng"},"content":"            if (!(incrementCounter \u003d\u003d availabilitySplit.length)) {","lastModifiedDate":"2022-04-02"},{"lineNumber":76,"author":{"gitId":"FaliciaOng"},"content":"                availabilityForFile +\u003d trimDay;","lastModifiedDate":"2022-04-02"},{"lineNumber":77,"author":{"gitId":"FaliciaOng"},"content":"                availabilityForFile +\u003d \",\";","lastModifiedDate":"2022-04-02"},{"lineNumber":78,"author":{"gitId":"FaliciaOng"},"content":"            } else {","lastModifiedDate":"2022-04-02"},{"lineNumber":79,"author":{"gitId":"FaliciaOng"},"content":"                availabilityForFile +\u003d trimDay;","lastModifiedDate":"2022-04-02"},{"lineNumber":80,"author":{"gitId":"FaliciaOng"},"content":"            }","lastModifiedDate":"2022-04-02"},{"lineNumber":81,"author":{"gitId":"FaliciaOng"},"content":"            incrementCounter +\u003d 1;","lastModifiedDate":"2022-04-02"},{"lineNumber":82,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-04-02"},{"lineNumber":83,"author":{"gitId":"FaliciaOng"},"content":"        return availabilityForFile;","lastModifiedDate":"2022-04-02"},{"lineNumber":84,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-02"},{"lineNumber":85,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":86,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":87,"author":{"gitId":"FaliciaOng"},"content":"     * Allows updating or adding availability of housekeeper and does not allow duplicated days to be recorded more","lastModifiedDate":"2022-04-09"},{"lineNumber":88,"author":{"gitId":"FaliciaOng"},"content":"     * than once.","lastModifiedDate":"2022-04-09"},{"lineNumber":89,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-09"},{"lineNumber":90,"author":{"gitId":"FaliciaOng"},"content":"     * @param availability Given by the user in integer format.","lastModifiedDate":"2022-04-09"},{"lineNumber":91,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":92,"author":{"gitId":"FaliciaOng"},"content":"    public void setAvailability(String availability) {","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"FaliciaOng"},"content":"        this.availability \u003d availability;","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"FaliciaOng"},"content":"        availableList.clear();","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"FaliciaOng"},"content":"        String[] days \u003d availability.split(\",\");","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"FaliciaOng"},"content":"        for (String day : days) {","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"FaliciaOng"},"content":"            String trimDay \u003d day.trim();","lastModifiedDate":"2022-04-02"},{"lineNumber":98,"author":{"gitId":"FaliciaOng"},"content":"            int convertToCorrectDay \u003d Integer.parseInt(trimDay) - 1;","lastModifiedDate":"2022-04-02"},{"lineNumber":99,"author":{"gitId":"FaliciaOng"},"content":"            if (!(availableList.contains(convertToCorrectDay))) {","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"FaliciaOng"},"content":"                availableList.add(convertToCorrectDay);","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"FaliciaOng"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"FaliciaOng"},"content":"    public String getName() {","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"FaliciaOng"},"content":"        return name;","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"FaliciaOng"},"content":"    public void setName(String name) {","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"FaliciaOng"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"FaliciaOng"},"content":"    public int getAge() {","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"FaliciaOng"},"content":"        return age;","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"FaliciaOng"},"content":"    public void setAge(int age) {","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"FaliciaOng"},"content":"        this.age \u003d age;","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"FaliciaOng"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"FaliciaOng"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"FaliciaOng"},"content":"        return \"[\" + getName().toUpperCase() + \"]: \" + \"Age: \" + getAge() + \", Availability: \" + getAvailability();","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"FaliciaOng"},"content":"    public String toFileString() {","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"FaliciaOng"},"content":"        return getName() + \" | \" + getAge() + \" | \" + getAvailabilityFile(availability);","lastModifiedDate":"2022-04-02"},{"lineNumber":128,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"FaliciaOng"},"content":"    public void setNullAvailability() {","lastModifiedDate":"2022-03-27"},{"lineNumber":131,"author":{"gitId":"FaliciaOng"},"content":"        this.availability \u003d null;","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":133,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"FaliciaOng":133}},{"path":"src/main/java/seedu/duke/housekeeperlists/HousekeeperList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke.housekeeperlists;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidUserException;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.UserDoesNotExistException;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"import static java.util.stream.Collectors.toList;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":" * Represents a data structure containing all housekeeper profiles.","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"public class HousekeeperList {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"    private ArrayList\u003cHousekeeper\u003e housekeeperList;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"    private static final int ONE_HOUSEKEEPER \u003d 1;","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"    private ArrayList\u003cHousekeeper\u003e housekeeperExceedValidAgeList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"    private static final int ONE_YEAR \u003d 1;","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"    private static final int MAX_AGE_ACCEPTED \u003d 60;","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"    private static Logger logger \u003d Logger.getLogger(\"housekeeperListLogger\");","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"    public HousekeeperList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"        ArrayList\u003cHousekeeper\u003e housekeeperList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"        setHousekeeperList(housekeeperList);","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"    public Housekeeper getHousekeeper(int index) {","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"        return housekeeperList.get(index);","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"    public void addHousekeeper(Housekeeper newHousekeeper) {","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"        getHousekeeperList().add(newHousekeeper);","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"     * Method checks if Housekeeper name is current in records.","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"     * @param name The name of the housekeeper.","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"     * @return false If name is not in records and true if name is in records.","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"    public boolean hasNameAdded(String name) {","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"        String convertNameToLowerCase \u003d name.toLowerCase();","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"        ArrayList\u003cHousekeeper\u003e housekeeperFound \u003d (ArrayList\u003cHousekeeper\u003e) housekeeperList.stream()","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"                .filter((t) -\u003e t.getName().toLowerCase().equals(convertNameToLowerCase))","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"                .collect(toList());","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"FaliciaOng"},"content":"        if (housekeeperFound.size() \u003e\u003d ONE_HOUSEKEEPER) {","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"FaliciaOng"},"content":"            return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"FaliciaOng"},"content":"        return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"FaliciaOng"},"content":"    public int getTotalHousekeeper() {","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"FaliciaOng"},"content":"        return housekeeperList.size();","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"FaliciaOng"},"content":"    public void setHousekeeperList(ArrayList\u003cHousekeeper\u003e housekeeperList) {","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"FaliciaOng"},"content":"        this.housekeeperList \u003d housekeeperList;","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"FaliciaOng"},"content":"    public ArrayList\u003cHousekeeper\u003e getHousekeeperList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"FaliciaOng"},"content":"        return housekeeperList;","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"FaliciaOng"},"content":"     * Store a list of Housekeeper valid on day user is querying.","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"FaliciaOng"},"content":"     * @param day Input day user is interested to view.","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"FaliciaOng"},"content":"     * @return List of found housekeeper.","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"FaliciaOng"},"content":"    public ArrayList\u003cHousekeeper\u003e getAvailableHousekeeperByDay(int day) {","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"FaliciaOng"},"content":"        ArrayList\u003cHousekeeper\u003e foundList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"FaliciaOng"},"content":"        for (Housekeeper housekeeper : housekeeperList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"FaliciaOng"},"content":"            if (housekeeper.isAvailableOn(day)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"FaliciaOng"},"content":"                foundList.add(housekeeper);","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"FaliciaOng"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"FaliciaOng"},"content":"        return foundList;","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"FaliciaOng"},"content":"     * Method to find the housekeeper name in the records and add their availability into the records.","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"FaliciaOng"},"content":"     * @param name         Housekeeper\u0027s name.","lastModifiedDate":"2022-04-11"},{"lineNumber":86,"author":{"gitId":"FaliciaOng"},"content":"     * @param availability Housekeeper\u0027s availability to be added in records.","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"FaliciaOng"},"content":"    public void addAvailabilityInList(String name, String availability) throws UserDoesNotExistException {","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"FaliciaOng"},"content":"        boolean isExist \u003d false;","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"FaliciaOng"},"content":"        String nameConvertLowerCase \u003d name.toLowerCase();","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"FaliciaOng"},"content":"        for (int i \u003d 0; i \u003c housekeeperList.size(); i++) {","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"FaliciaOng"},"content":"            Housekeeper housekeeperToCompare \u003d housekeeperList.get(i);","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"FaliciaOng"},"content":"            String housekeeperToCompareName \u003d housekeeperToCompare.getName().toLowerCase();","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"FaliciaOng"},"content":"            if (housekeeperToCompareName.equals(nameConvertLowerCase)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"FaliciaOng"},"content":"                isExist \u003d true;","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"FaliciaOng"},"content":"                housekeeperToCompare.setAvailability(availability);","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"FaliciaOng"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"FaliciaOng"},"content":"        if (!isExist) {","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"FaliciaOng"},"content":"            throw new UserDoesNotExistException();","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"FaliciaOng"},"content":"     * This method calls housekeeper\u0027s method to set each housekeeper availability as false.","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"FaliciaOng"},"content":"    public void resetAvailability() {","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"FaliciaOng"},"content":"        for (Housekeeper housekeeper : housekeeperList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"FaliciaOng"},"content":"            housekeeper.setNullAvailability();","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"FaliciaOng"},"content":"     * Finds the housekeeper\u0027s index in the list.","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"FaliciaOng"},"content":"     * @param name Housekeeper to be removed.","lastModifiedDate":"2022-04-11"},{"lineNumber":117,"author":{"gitId":"FaliciaOng"},"content":"     * @return Index of the housekeeper to be removed in the list.","lastModifiedDate":"2022-04-11"},{"lineNumber":118,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"FaliciaOng"},"content":"    private int getHousekeeperRemove(String name) {","lastModifiedDate":"2022-04-10"},{"lineNumber":120,"author":{"gitId":"FaliciaOng"},"content":"        int index \u003d 0;","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"FaliciaOng"},"content":"        int i \u003d 0;","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"FaliciaOng"},"content":"        String nameLowerCase \u003d name.trim().toLowerCase();","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"FaliciaOng"},"content":"        for (Housekeeper housekeeper : housekeeperList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"FaliciaOng"},"content":"            String nameForCompare \u003d housekeeper.getName().toLowerCase();","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"FaliciaOng"},"content":"            if (nameForCompare.equals(nameLowerCase)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":126,"author":{"gitId":"FaliciaOng"},"content":"                index \u003d i;","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"FaliciaOng"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"FaliciaOng"},"content":"            i +\u003d 1;","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":130,"author":{"gitId":"FaliciaOng"},"content":"        return index;","lastModifiedDate":"2022-03-27"},{"lineNumber":131,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":133,"author":{"gitId":"FaliciaOng"},"content":"    private void removeHousekeeper(int housekeeperToRemoveIndex) {","lastModifiedDate":"2022-04-10"},{"lineNumber":134,"author":{"gitId":"FaliciaOng"},"content":"        getHousekeeperList().remove(housekeeperToRemoveIndex);","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":136,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":137,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":138,"author":{"gitId":"FaliciaOng"},"content":"     * Increases each housekeeper\u0027s age by one and records housekeeper who are over the age limit into another list.","lastModifiedDate":"2022-03-28"},{"lineNumber":139,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":140,"author":{"gitId":"FaliciaOng"},"content":"    public void increaseAllAgeByOne() {","lastModifiedDate":"2022-03-28"},{"lineNumber":141,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperExceedValidAgeList.clear();","lastModifiedDate":"2022-03-28"},{"lineNumber":142,"author":{"gitId":"FaliciaOng"},"content":"        for (Housekeeper housekeeper : housekeeperList) {","lastModifiedDate":"2022-03-28"},{"lineNumber":143,"author":{"gitId":"FaliciaOng"},"content":"            int increasedAge \u003d housekeeper.getAge() + ONE_YEAR;","lastModifiedDate":"2022-03-28"},{"lineNumber":144,"author":{"gitId":"FaliciaOng"},"content":"            if (increasedAge \u003e MAX_AGE_ACCEPTED) {","lastModifiedDate":"2022-03-28"},{"lineNumber":145,"author":{"gitId":"FaliciaOng"},"content":"                housekeeperExceedValidAgeList.add(housekeeper);","lastModifiedDate":"2022-03-28"},{"lineNumber":146,"author":{"gitId":"FaliciaOng"},"content":"            } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":147,"author":{"gitId":"FaliciaOng"},"content":"                housekeeper.setAge(increasedAge);","lastModifiedDate":"2022-03-28"},{"lineNumber":148,"author":{"gitId":"FaliciaOng"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":149,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":151,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":152,"author":{"gitId":"FaliciaOng"},"content":"    public ArrayList\u003cHousekeeper\u003e getHousekeeperExceedValidAgeList() {","lastModifiedDate":"2022-03-28"},{"lineNumber":153,"author":{"gitId":"FaliciaOng"},"content":"        return housekeeperExceedValidAgeList;","lastModifiedDate":"2022-03-28"},{"lineNumber":154,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"FaliciaOng"},"content":"    public void deleteOverAgeHousekeeper() {","lastModifiedDate":"2022-03-28"},{"lineNumber":157,"author":{"gitId":"FaliciaOng"},"content":"        for (Housekeeper housekeeper : housekeeperExceedValidAgeList) {","lastModifiedDate":"2022-03-28"},{"lineNumber":158,"author":{"gitId":"FaliciaOng"},"content":"            int indexToRemove \u003d getHousekeeperRemove(housekeeper.getName());","lastModifiedDate":"2022-03-28"},{"lineNumber":159,"author":{"gitId":"FaliciaOng"},"content":"            removeHousekeeper(indexToRemove);","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":162,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":163,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":164,"author":{"gitId":"FaliciaOng"},"content":"     * This method make sures housekeeper name has not been recorded in the list to prevent duplicated names to be","lastModifiedDate":"2022-04-11"},{"lineNumber":165,"author":{"gitId":"FaliciaOng"},"content":"     * recorded in the list.","lastModifiedDate":"2022-04-11"},{"lineNumber":166,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":167,"author":{"gitId":"FaliciaOng"},"content":"     * @param housekeeper Housekeeper to be added into the housekeeper list.","lastModifiedDate":"2022-04-11"},{"lineNumber":168,"author":{"gitId":"FaliciaOng"},"content":"     * @throws HotelLiteManagerException If user has already been recorded in the list.","lastModifiedDate":"2022-04-11"},{"lineNumber":169,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":170,"author":{"gitId":"FaliciaOng"},"content":"    public void addHousekeeperInList(Housekeeper housekeeper) throws HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":171,"author":{"gitId":"FaliciaOng"},"content":"        boolean isRecorded \u003d hasNameAdded(housekeeper.getName());","lastModifiedDate":"2022-03-29"},{"lineNumber":172,"author":{"gitId":"FaliciaOng"},"content":"        if (!isRecorded) {","lastModifiedDate":"2022-03-29"},{"lineNumber":173,"author":{"gitId":"FaliciaOng"},"content":"            addHousekeeper(housekeeper);","lastModifiedDate":"2022-03-29"},{"lineNumber":174,"author":{"gitId":"FaliciaOng"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":175,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidUserException();","lastModifiedDate":"2022-03-29"},{"lineNumber":176,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":177,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":178,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":179,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":180,"author":{"gitId":"FaliciaOng"},"content":"     * This method will check if housekeeper\u0027s name exist in the list and remove housekeeper from the list if they","lastModifiedDate":"2022-04-11"},{"lineNumber":181,"author":{"gitId":"FaliciaOng"},"content":"     * exists.","lastModifiedDate":"2022-04-11"},{"lineNumber":182,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":183,"author":{"gitId":"FaliciaOng"},"content":"     * @param name Housekeeper\u0027s name to be removed.","lastModifiedDate":"2022-04-11"},{"lineNumber":184,"author":{"gitId":"FaliciaOng"},"content":"     * @throws HotelLiteManagerException If housekeeper to be delete does not exist in the list.","lastModifiedDate":"2022-04-11"},{"lineNumber":185,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":186,"author":{"gitId":"FaliciaOng"},"content":"    public void removeHousekeeperInList(String name) throws HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":187,"author":{"gitId":"FaliciaOng"},"content":"        boolean isRecorded \u003d hasNameAdded(name);","lastModifiedDate":"2022-03-29"},{"lineNumber":188,"author":{"gitId":"FaliciaOng"},"content":"        if (isRecorded) {","lastModifiedDate":"2022-03-29"},{"lineNumber":189,"author":{"gitId":"FaliciaOng"},"content":"            int housekeeperToRemoveIndex \u003d getHousekeeperRemove(name);","lastModifiedDate":"2022-03-29"},{"lineNumber":190,"author":{"gitId":"FaliciaOng"},"content":"            removeHousekeeper(housekeeperToRemoveIndex);","lastModifiedDate":"2022-03-29"},{"lineNumber":191,"author":{"gitId":"FaliciaOng"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":192,"author":{"gitId":"FaliciaOng"},"content":"            logger.log(Level.WARNING, \"Housekeeper to be deleted was not in the list.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":193,"author":{"gitId":"FaliciaOng"},"content":"            throw new UserDoesNotExistException();","lastModifiedDate":"2022-03-29"},{"lineNumber":194,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":195,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":196,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":197,"author":{"gitId":"zhenster"},"content":"    public void clearHousekeeperList() {","lastModifiedDate":"2022-04-11"},{"lineNumber":198,"author":{"gitId":"zhenster"},"content":"        housekeeperList.clear();","lastModifiedDate":"2022-04-11"},{"lineNumber":199,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":200,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":7,"FaliciaOng":193}},{"path":"src/main/java/seedu/duke/housekeeperperformancelists/HousekeeperPerformance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke.housekeeperperformancelists;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":" * Records the name and performance rating of a Housekeeper. Performance rating is an integer from 1-5, inclusive.","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"public class HousekeeperPerformance {","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"    private String name;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"    private int rating;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    public HousekeeperPerformance(String name, int rating) {","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"        this.rating \u003d rating;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"    public String getName() {","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"        return name;","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"    public void setName(String name) {","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"    public int getRating() {","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"        return rating;","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"    public void setRating(int rating) {","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"        this.rating \u003d rating;","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"    public String toString() {","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"        return \"[ \" + getName() + \" ]: \" + getRating();","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"zhenster":34,"FaliciaOng":1}},{"path":"src/main/java/seedu/duke/housekeeperperformancelists/HousekeeperPerformanceList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke.housekeeperperformancelists;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":" * Represents a data structure containing all housekeeper performance ratings.","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"public class HousekeeperPerformanceList {","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"    private ArrayList\u003cHousekeeperPerformance\u003e housekeeperPerformanceList;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"    public HousekeeperPerformanceList() {","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"        ArrayList\u003cHousekeeperPerformance\u003e housekeeperPerformanceList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"        setHousekeeperPerformanceList(housekeeperPerformanceList);","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"    public void addHousekeeperPerformance(HousekeeperPerformance newHousekeeperPerformance) {","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"        getHousekeeperPerformanceList().add(newHousekeeperPerformance);","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"        sortHousekeeperPerformances();","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"    public ArrayList\u003cHousekeeperPerformance\u003e getHousekeeperPerformanceList() {","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"        return housekeeperPerformanceList;","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"    public void setHousekeeperPerformanceList(ArrayList\u003cHousekeeperPerformance\u003e housekeeperPerformanceList) {","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"        this.housekeeperPerformanceList \u003d housekeeperPerformanceList;","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"    public int getSize() {","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"        return housekeeperPerformanceList.size();","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"     * Returns a performance within the list of housekeeper performances at the given index.","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"     * @param index The index of the item within the list that would be returned.","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"     * @return The index returned by the .","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"    public HousekeeperPerformance getPerformance(int index) {","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"        ArrayList\u003cHousekeeperPerformance\u003e performanceList \u003d getHousekeeperPerformanceList();","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"        HousekeeperPerformance performance \u003d performanceList.get(index);","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"        return performance;","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"     * Checks if the housekeeper with the specified name already has a recorded performance rating.","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"     * @param housekeeperName The name of the specified housekeeper.","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"     * @return true if the Housekeeper already has a recorded performance rating, false otherwise.","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"zhenster"},"content":"    public boolean isHousekeeperInPerformanceList(String housekeeperName) {","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"zhenster"},"content":"        for (HousekeeperPerformance housekeeperPerformance : housekeeperPerformanceList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"zhenster"},"content":"            if (housekeeperName.equals(housekeeperPerformance.getName())) {","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"zhenster"},"content":"                return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"zhenster"},"content":"        return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"     * Pretty-prints the list of HousekeeperPerformance objects. Displays the name and rating associated with","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"zhenster"},"content":"     * each HousekeeperPerformance object.","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"zhenster"},"content":"    public void viewPerformances() {","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"zhenster"},"content":"        if (getSize() \u003d\u003d 0) {","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"zhenster"},"content":"            System.out.println(\"There have not been any housekeeper performances recorded yet.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"zhenster"},"content":"        } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"zhenster"},"content":"            System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Housekeeper Performance List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"zhenster"},"content":"            int number \u003d 1;","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"zhenster"},"content":"            for (HousekeeperPerformance housekeeperPerformance : housekeeperPerformanceList) {","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"zhenster"},"content":"                System.out.println(Integer.toString(number) + \". [ \" + housekeeperPerformance.getName().toUpperCase()","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"zhenster"},"content":"                        + \" ]: \" + housekeeperPerformance.getRating());","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"zhenster"},"content":"                number +\u003d 1;","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"zhenster"},"content":"            System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"zhenster"},"content":"     * Sorts the HousekeeperPerformance objects based on rating in descending order.","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"zhenster"},"content":"    public void sortHousekeeperPerformances() {","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"zhenster"},"content":"        Collections.sort(housekeeperPerformanceList, new Comparator\u003cHousekeeperPerformance\u003e() {","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"zhenster"},"content":"            @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"zhenster"},"content":"            public int compare(HousekeeperPerformance a, HousekeeperPerformance b) {","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"zhenster"},"content":"                return a.getRating() \u003e b.getRating() ? -1 : (a.getRating() \u003e b.getRating() ? 1 : 0);","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"zhenster"},"content":"        });","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":94,"author":{"gitId":"zhenster"},"content":"    public void clearHousekeeperPerformanceList() {","lastModifiedDate":"2022-04-11"},{"lineNumber":95,"author":{"gitId":"zhenster"},"content":"        housekeeperPerformanceList.clear();","lastModifiedDate":"2022-04-11"},{"lineNumber":96,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":97,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"zhenster":95,"FaliciaOng":2}},{"path":"src/main/java/seedu/duke/itemlists/Item.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke.itemlists;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.InvalidItemNameException;","lastModifiedDate":"2022-04-02"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":" * Represents an item that is stored within the inventory. An item object consists of the item\u0027s name as well as its","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":" * pax.","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"public class Item {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"    private String name;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"    private int pax;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"    private String updatedName;","lastModifiedDate":"2022-04-04"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"    public Item(String name, int pax) throws InvalidItemNameException {","lastModifiedDate":"2022-04-02"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"        boolean isItemNameFormatValid \u003d checkIfItemNameFormatValid(name);","lastModifiedDate":"2022-04-02"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"        if (isItemNameFormatValid \u003d\u003d false) {","lastModifiedDate":"2022-04-02"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidItemNameException();","lastModifiedDate":"2022-04-02"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-04-02"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"        setName(name);","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"        setPax(pax);","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"    public Item(String name, String updatedName) throws InvalidItemNameException {","lastModifiedDate":"2022-04-04"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"        boolean isItemNameFormatValid \u003d checkIfItemNameFormatValid(name);","lastModifiedDate":"2022-04-04"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"        if (isItemNameFormatValid \u003d\u003d false) {","lastModifiedDate":"2022-04-04"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidItemNameException();","lastModifiedDate":"2022-04-04"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"        boolean isUpdatedItemNameFormatValid \u003d checkIfItemNameFormatValid(updatedName);","lastModifiedDate":"2022-04-04"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"        if (isUpdatedItemNameFormatValid \u003d\u003d false) {","lastModifiedDate":"2022-04-04"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidItemNameException();","lastModifiedDate":"2022-04-04"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"        setName(name);","lastModifiedDate":"2022-04-04"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"        setUpdatedName(updatedName);","lastModifiedDate":"2022-04-04"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"    public Item(String name) throws InvalidItemNameException {","lastModifiedDate":"2022-04-04"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"        boolean isItemNameFormatValid \u003d checkIfItemNameFormatValid(name);","lastModifiedDate":"2022-04-04"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"        if (isItemNameFormatValid \u003d\u003d false) {","lastModifiedDate":"2022-04-04"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"            throw new InvalidItemNameException();","lastModifiedDate":"2022-04-04"},{"lineNumber":42,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"        setName(name);","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"siewyangzhi"},"content":"    public String getName() {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"        return name;","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"siewyangzhi"},"content":"    public void setName(String name) {","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"siewyangzhi"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"siewyangzhi"},"content":"    public int getPax() {","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"siewyangzhi"},"content":"        return pax;","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"siewyangzhi"},"content":"    public void setPax(int pax) {","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"siewyangzhi"},"content":"        this.pax \u003d pax;","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":62,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"siewyangzhi"},"content":"     * Checks if the itemName contains only alphabetical characters, digits, whitespaces or apostrophe in accordance to","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"siewyangzhi"},"content":"     * the restrictions mentioned in the user guide.","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"siewyangzhi"},"content":"     * @param itemName The itemName within the command inputted by the user.","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"siewyangzhi"},"content":"     * @return true if the itemName did not violate any one of the restrictions mentioned above.false if the item name","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"siewyangzhi"},"content":"     *     violates any one of the restrictions.","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"siewyangzhi"},"content":"    private boolean checkIfItemNameFormatValid(String itemName) {","lastModifiedDate":"2022-04-02"},{"lineNumber":71,"author":{"gitId":"siewyangzhi"},"content":"        boolean isItemNameFormatValid \u003d false;","lastModifiedDate":"2022-04-02"},{"lineNumber":72,"author":{"gitId":"siewyangzhi"},"content":"        if (itemName.matches(\"^([a-z]|[A-Z]|[0-9]|\\\\s|\u0027)+$\")) {","lastModifiedDate":"2022-04-02"},{"lineNumber":73,"author":{"gitId":"siewyangzhi"},"content":"            isItemNameFormatValid \u003d true;","lastModifiedDate":"2022-04-02"},{"lineNumber":74,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-04-02"},{"lineNumber":75,"author":{"gitId":"siewyangzhi"},"content":"        return isItemNameFormatValid;","lastModifiedDate":"2022-04-02"},{"lineNumber":76,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-02"},{"lineNumber":77,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":78,"author":{"gitId":"siewyangzhi"},"content":"    public String getUpdatedName() {","lastModifiedDate":"2022-04-04"},{"lineNumber":79,"author":{"gitId":"siewyangzhi"},"content":"        return updatedName;","lastModifiedDate":"2022-04-04"},{"lineNumber":80,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":81,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":82,"author":{"gitId":"siewyangzhi"},"content":"    public void setUpdatedName(String updatedName) {","lastModifiedDate":"2022-04-04"},{"lineNumber":83,"author":{"gitId":"siewyangzhi"},"content":"        this.updatedName \u003d updatedName;","lastModifiedDate":"2022-04-04"},{"lineNumber":84,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":85,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"FaliciaOng":1,"siewyangzhi":84}},{"path":"src/main/java/seedu/duke/itemlists/ItemList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke.itemlists;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-04-02"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.ItemNotFoundException;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.NewItemPaxSameAsCurrentPaxException;","lastModifiedDate":"2022-04-02"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":" * Represents a list of the items within the inventory. An ItemList object contains the methods to add items to the","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":" * item list as well as update the paxs of the current items within the item List.","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"public class ItemList {","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"    ArrayList\u003cItem\u003e listOfItems;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"    private static Logger itemLogger \u003d Logger.getLogger(\"itemLogger\");","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"    public ItemList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"        ArrayList\u003cItem\u003e listOfItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"        setListOfItems(listOfItems);","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"    public ArrayList\u003cItem\u003e getListOfItems() {","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"        return listOfItems;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"    public void setListOfItems(ArrayList\u003cItem\u003e listOfItems) {","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"        this.listOfItems \u003d listOfItems;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"    public void addItemToList(Item item) {","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"        listOfItems.add(item);","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"    public int getSize() {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"        return listOfItems.size();","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"     * Checks if there is another item within the item list which has the same name as the item name passed","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"siewyangzhi"},"content":"     * into the function.","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"siewyangzhi"},"content":"     * @param nameOfItemToAdd Name of the item that the user wants to add into the item list.","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"siewyangzhi"},"content":"     * @return true if there is no items within the item list which has the same name as that passed into the function.","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"siewyangzhi"},"content":"     *      Otherwise, it returns false.","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"    public boolean checkForItemDuplicates(String nameOfItemToAdd) {","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"        boolean isItemAlreadyInTheList \u003d false;","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"siewyangzhi"},"content":"        int numberOfItemsInItemList \u003d listOfItems.size();","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"siewyangzhi"},"content":"        if (numberOfItemsInItemList \u003d\u003d 0) {","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"siewyangzhi"},"content":"            return isItemAlreadyInTheList;","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"siewyangzhi"},"content":"        String itemName;","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"siewyangzhi"},"content":"        Item item;","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"siewyangzhi"},"content":"        for (int itemIndex \u003d 0; itemIndex \u003c numberOfItemsInItemList; itemIndex++) {","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"siewyangzhi"},"content":"            item \u003d listOfItems.get(itemIndex);","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"siewyangzhi"},"content":"            itemName \u003d item.getName();","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"siewyangzhi"},"content":"            if (itemName.equals(nameOfItemToAdd)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"siewyangzhi"},"content":"                isItemAlreadyInTheList \u003d true;","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"siewyangzhi"},"content":"                break;","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"siewyangzhi"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"siewyangzhi"},"content":"        return isItemAlreadyInTheList;","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"siewyangzhi"},"content":"     * Returns a specific item within the item list based on the index passed in.","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"siewyangzhi"},"content":"     * @param index The index of the item within the list that would be returned.","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"siewyangzhi"},"content":"     * @return The item specified by the index passed into the function.","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"siewyangzhi"},"content":"    public Item getItem(int index) {","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"siewyangzhi"},"content":"        ArrayList\u003cItem\u003e listOfItems \u003d getListOfItems();","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d listOfItems.get(index);","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"siewyangzhi"},"content":"        return item;","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"siewyangzhi"},"content":"     * Updates the pax of a specific item within the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"siewyangzhi"},"content":"     * @param item The item within the inventory that the user wants to update. The item object contains the item name","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"siewyangzhi"},"content":"     *             and the new pax.","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"siewyangzhi"},"content":"     * @throws ItemNotFoundException if there does not exist an item in the item list whose item name matches the item","lastModifiedDate":"2022-04-11"},{"lineNumber":85,"author":{"gitId":"siewyangzhi"},"content":"     *                               name in the item object passed into the function or if the new item pax of the item","lastModifiedDate":"2022-04-11"},{"lineNumber":86,"author":{"gitId":"siewyangzhi"},"content":"     *                               to update is the same as its current item pax.","lastModifiedDate":"2022-04-11"},{"lineNumber":87,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"siewyangzhi"},"content":"    public void updateItemPaxInList(Item item) throws HotelLiteManagerException {","lastModifiedDate":"2022-04-02"},{"lineNumber":89,"author":{"gitId":"siewyangzhi"},"content":"        String nameOfItemToUpdate \u003d item.getName();","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"siewyangzhi"},"content":"        int paxOfItemToUpdate \u003d item.getPax();","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"siewyangzhi"},"content":"        assert (paxOfItemToUpdate \u003e\u003d 0) : \"Assertion Failed! Item to update has a pax that is lesser than 0\";","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"siewyangzhi"},"content":"        assert (!nameOfItemToUpdate.isEmpty()) : \"Assertion Failed! Item to update has an empty name.\";","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"siewyangzhi"},"content":"        boolean isItemFound \u003d false;","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"siewyangzhi"},"content":"        Item currentItem;","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"siewyangzhi"},"content":"        String currentItemName;","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"siewyangzhi"},"content":"        int currentItemPax;","lastModifiedDate":"2022-04-02"},{"lineNumber":97,"author":{"gitId":"siewyangzhi"},"content":"        ArrayList\u003cItem\u003e listOfItems \u003d getListOfItems();","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"siewyangzhi"},"content":"        for (int itemIndex \u003d 0; itemIndex \u003c listOfItems.size(); itemIndex++) {","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"siewyangzhi"},"content":"            currentItem \u003d listOfItems.get(itemIndex);","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"siewyangzhi"},"content":"            currentItemName \u003d currentItem.getName();","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"siewyangzhi"},"content":"            currentItemPax \u003d currentItem.getPax();","lastModifiedDate":"2022-04-02"},{"lineNumber":102,"author":{"gitId":"siewyangzhi"},"content":"            if (currentItemName.equals(nameOfItemToUpdate) \u0026\u0026 currentItemPax \u003d\u003d paxOfItemToUpdate) {","lastModifiedDate":"2022-04-02"},{"lineNumber":103,"author":{"gitId":"siewyangzhi"},"content":"                throw new NewItemPaxSameAsCurrentPaxException();","lastModifiedDate":"2022-04-02"},{"lineNumber":104,"author":{"gitId":"siewyangzhi"},"content":"            } else if (currentItemName.equals(nameOfItemToUpdate)) {","lastModifiedDate":"2022-04-02"},{"lineNumber":105,"author":{"gitId":"siewyangzhi"},"content":"                currentItem.setPax(paxOfItemToUpdate);","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"siewyangzhi"},"content":"                isItemFound \u003d true;","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"siewyangzhi"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"siewyangzhi"},"content":"        if (isItemFound \u003d\u003d false) {","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"The item whose pax is to be updated cannot be found within the Item \"","lastModifiedDate":"2022-03-17"},{"lineNumber":111,"author":{"gitId":"siewyangzhi"},"content":"                    + \"List. Exception thrown.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":112,"author":{"gitId":"siewyangzhi"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"siewyangzhi"},"content":"     * Deletes the item within the item list whose item name matches the item name specified by the user.","lastModifiedDate":"2022-04-11"},{"lineNumber":118,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"siewyangzhi"},"content":"     * @param item The item within the inventory that the user wants to delete. The item object contains the item name","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"siewyangzhi"},"content":"     *             of the item to delete.","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"siewyangzhi"},"content":"     * @throws ItemNotFoundException if the item that the user wants to delete does not exist within the item list.","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"siewyangzhi"},"content":"    public void deleteItemInList(Item item) throws ItemNotFoundException {","lastModifiedDate":"2022-03-26"},{"lineNumber":125,"author":{"gitId":"siewyangzhi"},"content":"        String nameOfItemToDelete \u003d item.getName();","lastModifiedDate":"2022-03-26"},{"lineNumber":126,"author":{"gitId":"siewyangzhi"},"content":"        assert (!nameOfItemToDelete.isEmpty()) : \"Assertion Failed! Name of the item to delete is empty.\";","lastModifiedDate":"2022-03-26"},{"lineNumber":127,"author":{"gitId":"siewyangzhi"},"content":"        boolean isItemFound \u003d false;","lastModifiedDate":"2022-03-26"},{"lineNumber":128,"author":{"gitId":"siewyangzhi"},"content":"        Item currentItem;","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"siewyangzhi"},"content":"        String currentItemName;","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"siewyangzhi"},"content":"        ArrayList\u003cItem\u003e listOfItems \u003d getListOfItems();","lastModifiedDate":"2022-03-26"},{"lineNumber":131,"author":{"gitId":"siewyangzhi"},"content":"        for (int itemIndex \u003d 0; itemIndex \u003c listOfItems.size(); itemIndex++) {","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"siewyangzhi"},"content":"            currentItem \u003d listOfItems.get(itemIndex);","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"siewyangzhi"},"content":"            currentItemName \u003d currentItem.getName();","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"siewyangzhi"},"content":"            if (currentItemName.equals(nameOfItemToDelete)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"siewyangzhi"},"content":"                listOfItems.remove(itemIndex);","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"siewyangzhi"},"content":"                isItemFound \u003d true;","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"siewyangzhi"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"siewyangzhi"},"content":"        if (isItemFound \u003d\u003d false) {","lastModifiedDate":"2022-03-26"},{"lineNumber":140,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"The item to delete cannot be found within the Item List. Exception \"","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"siewyangzhi"},"content":"                    + \"thrown.\");","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"siewyangzhi"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2022-03-26"},{"lineNumber":143,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":145,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":146,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"siewyangzhi"},"content":"     * Updates the pax of a specific item within the item list.","lastModifiedDate":"2022-03-30"},{"lineNumber":148,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":149,"author":{"gitId":"siewyangzhi"},"content":"     * @param currentItemName The current name of the item within the item list that the user wants to update.","lastModifiedDate":"2022-03-30"},{"lineNumber":150,"author":{"gitId":"siewyangzhi"},"content":"     * @param newItemName     The new name of the item within the item list that the user wants to update.","lastModifiedDate":"2022-03-30"},{"lineNumber":151,"author":{"gitId":"siewyangzhi"},"content":"     * @throws ItemNotFoundException if the item that the user wants to update does not exist in the item list.","lastModifiedDate":"2022-03-30"},{"lineNumber":152,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":153,"author":{"gitId":"siewyangzhi"},"content":"    public void updateItemNameInList(String currentItemName, String newItemName) throws ItemNotFoundException {","lastModifiedDate":"2022-03-28"},{"lineNumber":154,"author":{"gitId":"siewyangzhi"},"content":"        boolean isItemFound \u003d false;","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"siewyangzhi"},"content":"        ArrayList\u003cItem\u003e listOfItems \u003d getListOfItems();","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"siewyangzhi"},"content":"        Item item;","lastModifiedDate":"2022-03-28"},{"lineNumber":157,"author":{"gitId":"siewyangzhi"},"content":"        String itemName;","lastModifiedDate":"2022-03-28"},{"lineNumber":158,"author":{"gitId":"siewyangzhi"},"content":"        for (int itemIndex \u003d 0; itemIndex \u003c listOfItems.size(); itemIndex++) {","lastModifiedDate":"2022-03-28"},{"lineNumber":159,"author":{"gitId":"siewyangzhi"},"content":"            item \u003d listOfItems.get(itemIndex);","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"siewyangzhi"},"content":"            itemName \u003d item.getName();","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"siewyangzhi"},"content":"            if (itemName.equals(currentItemName)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":162,"author":{"gitId":"siewyangzhi"},"content":"                item.setName(newItemName);","lastModifiedDate":"2022-03-28"},{"lineNumber":163,"author":{"gitId":"siewyangzhi"},"content":"                isItemFound \u003d true;","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"siewyangzhi"},"content":"                break;","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"siewyangzhi"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":166,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":167,"author":{"gitId":"siewyangzhi"},"content":"        if (isItemFound \u003d\u003d false) {","lastModifiedDate":"2022-03-28"},{"lineNumber":168,"author":{"gitId":"siewyangzhi"},"content":"            itemLogger.log(Level.WARNING, \"The item whose name we want to update cannot be found within the \"","lastModifiedDate":"2022-03-28"},{"lineNumber":169,"author":{"gitId":"siewyangzhi"},"content":"                    + \"Item List. Exception thrown.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":170,"author":{"gitId":"siewyangzhi"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2022-03-28"},{"lineNumber":171,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":172,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":173,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":175,"author":{"gitId":"siewyangzhi"},"content":"     * Returns all the items in the item list whose name contains the keyword given by the user.","lastModifiedDate":"2022-03-30"},{"lineNumber":176,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":177,"author":{"gitId":"siewyangzhi"},"content":"     * @param keyword The keyword used to search the item list.","lastModifiedDate":"2022-03-30"},{"lineNumber":178,"author":{"gitId":"siewyangzhi"},"content":"     * @return An item list containing all the items whose names contain the keyword.","lastModifiedDate":"2022-03-30"},{"lineNumber":179,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":180,"author":{"gitId":"siewyangzhi"},"content":"    public ItemList findItemsInList(String keyword) {","lastModifiedDate":"2022-03-28"},{"lineNumber":181,"author":{"gitId":"siewyangzhi"},"content":"        ItemList listOfMatchingItems \u003d new ItemList();","lastModifiedDate":"2022-03-28"},{"lineNumber":182,"author":{"gitId":"siewyangzhi"},"content":"        ArrayList\u003cItem\u003e listOfItems \u003d getListOfItems();","lastModifiedDate":"2022-03-28"},{"lineNumber":183,"author":{"gitId":"siewyangzhi"},"content":"        Item item;","lastModifiedDate":"2022-03-28"},{"lineNumber":184,"author":{"gitId":"siewyangzhi"},"content":"        String itemName;","lastModifiedDate":"2022-03-28"},{"lineNumber":185,"author":{"gitId":"siewyangzhi"},"content":"        for (int itemIndex \u003d 0; itemIndex \u003c listOfItems.size(); itemIndex++) {","lastModifiedDate":"2022-03-28"},{"lineNumber":186,"author":{"gitId":"siewyangzhi"},"content":"            item \u003d listOfItems.get(itemIndex);","lastModifiedDate":"2022-03-28"},{"lineNumber":187,"author":{"gitId":"siewyangzhi"},"content":"            itemName \u003d item.getName();","lastModifiedDate":"2022-03-28"},{"lineNumber":188,"author":{"gitId":"siewyangzhi"},"content":"            if (itemName.contains(keyword)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":189,"author":{"gitId":"siewyangzhi"},"content":"                listOfMatchingItems.addItemToList(item);","lastModifiedDate":"2022-03-28"},{"lineNumber":190,"author":{"gitId":"siewyangzhi"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":191,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":192,"author":{"gitId":"siewyangzhi"},"content":"        return listOfMatchingItems;","lastModifiedDate":"2022-03-28"},{"lineNumber":193,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":194,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":195,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":196,"author":{"gitId":"siewyangzhi"},"content":"     * Returns all the items in the item list whose pax is zero.","lastModifiedDate":"2022-03-30"},{"lineNumber":197,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":198,"author":{"gitId":"siewyangzhi"},"content":"     * @return An item list containing all the items whose pax is zero.","lastModifiedDate":"2022-03-30"},{"lineNumber":199,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":200,"author":{"gitId":"siewyangzhi"},"content":"    public ItemList findItemsWithZeroPaxInList() {","lastModifiedDate":"2022-03-29"},{"lineNumber":201,"author":{"gitId":"siewyangzhi"},"content":"        ItemList listOfMatchingItems \u003d new ItemList();","lastModifiedDate":"2022-03-29"},{"lineNumber":202,"author":{"gitId":"siewyangzhi"},"content":"        Item item;","lastModifiedDate":"2022-03-29"},{"lineNumber":203,"author":{"gitId":"siewyangzhi"},"content":"        int itemPax;","lastModifiedDate":"2022-03-29"},{"lineNumber":204,"author":{"gitId":"siewyangzhi"},"content":"        for (int itemIndex \u003d 0; itemIndex \u003c listOfItems.size(); itemIndex++) {","lastModifiedDate":"2022-03-29"},{"lineNumber":205,"author":{"gitId":"siewyangzhi"},"content":"            item \u003d listOfItems.get(itemIndex);","lastModifiedDate":"2022-03-29"},{"lineNumber":206,"author":{"gitId":"siewyangzhi"},"content":"            itemPax \u003d item.getPax();","lastModifiedDate":"2022-03-29"},{"lineNumber":207,"author":{"gitId":"siewyangzhi"},"content":"            if (itemPax \u003d\u003d 0) {","lastModifiedDate":"2022-03-29"},{"lineNumber":208,"author":{"gitId":"siewyangzhi"},"content":"                listOfMatchingItems.addItemToList(item);","lastModifiedDate":"2022-03-29"},{"lineNumber":209,"author":{"gitId":"siewyangzhi"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":210,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":211,"author":{"gitId":"siewyangzhi"},"content":"        return listOfMatchingItems;","lastModifiedDate":"2022-03-29"},{"lineNumber":212,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":213,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":2,"FaliciaOng":1,"siewyangzhi":210}},{"path":"src/main/java/seedu/duke/roomlists/Room.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke.roomlists;","lastModifiedDate":"2022-04-02"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":" * Room class has the parameter of roomId, level type and vacancy status.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"public class Room {","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"    private int roomId;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"    private int level;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"    private RoomType type; // can implement it as enumeration","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"    private boolean isVacant;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"    public Room(int roomId, int level, RoomType type) {","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"        this.roomId \u003d roomId;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"        this.level \u003d level;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"        isVacant \u003d true;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"    public Room(int roomId, int level, RoomType type, String status) {","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"        this.roomId \u003d roomId;","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"        this.level \u003d level;","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"        isVacant \u003d (status.equals(\"Vacant\")) ? true : false;","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"    public int getRoomId() {","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"        return roomId;","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"XunyiiZ"},"content":"    public int getLevel() {","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"XunyiiZ"},"content":"        return level;","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"XunyiiZ"},"content":"    public RoomType getType() {","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"XunyiiZ"},"content":"        return type;","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"XunyiiZ"},"content":"    public boolean getIsVacant() {","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"XunyiiZ"},"content":"        return isVacant;","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"XunyiiZ"},"content":"    public void checkIn() {","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"XunyiiZ"},"content":"        isVacant \u003d false;","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"XunyiiZ"},"content":"    public void checkOut() {","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"XunyiiZ"},"content":"        isVacant \u003d true;","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"XunyiiZ"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"XunyiiZ"},"content":"        return String.format(\"%-15s%-15d%-15d%-15s\", getType(), getRoomId(), getLevel(),","lastModifiedDate":"2022-04-02"},{"lineNumber":53,"author":{"gitId":"XunyiiZ"},"content":"                (getIsVacant() ? \"Vacant  \" : \"Occupied\"));","lastModifiedDate":"2022-04-02"},{"lineNumber":54,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"XunyiiZ"},"content":"    public String toFileString() {","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"XunyiiZ"},"content":"        return getType() + \" | \" + getRoomId() + \" | \" + getLevel() + \" | \" + (getIsVacant() ? \"Vacant\" : \"Occupied\");","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"XunyiiZ":60}},{"path":"src/main/java/seedu/duke/roomlists/RoomList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke.roomlists;","lastModifiedDate":"2022-04-02"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.storage.RoomFileManager;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":" * Represents a data structure containing multiple Satisfaction objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":" * The constructor will initialize all rooms with status vacant","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"public class RoomList {","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"    private ArrayList\u003cRoom\u003e roomList;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"    public RoomList(ArrayList\u003cRoom\u003e roomArrayList) {  // dummy data for initialization","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"        roomList \u003d roomArrayList;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"    public ArrayList\u003cRoom\u003e getRoomList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"        return roomList;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zhenster":1,"XunyiiZ":23}},{"path":"src/main/java/seedu/duke/roomlists/RoomType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke.roomlists;","lastModifiedDate":"2022-04-02"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"public enum RoomType {","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"    Single, Double, Triple, Queen, King, Twin","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"XunyiiZ":5}},{"path":"src/main/java/seedu/duke/satisfactionlists/Satisfaction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke.satisfactionlists;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":" * Represents a Satisfaction object. Attributes include satisfactionValue","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":" * (a value from 1-5) and customerName (the name of the customer with","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":" * this satisfactionValue).","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"public class Satisfaction {","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"    protected String customerName;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"    protected int satisfactionValue;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"    public Satisfaction(String customerName, int satisfactionValue) {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"        this.customerName \u003d customerName;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"        this.satisfactionValue \u003d satisfactionValue;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"    public String getCustomerName() {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"        return customerName;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"    public int getSatisfactionValue() {","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"        return satisfactionValue;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"    public void setCustomerName(String customerName) {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"        this.customerName \u003d customerName;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"    public void setSatisfactionValue(int satisfactionValue) {","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"        this.satisfactionValue \u003d satisfactionValue;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":34,"FaliciaOng":1}},{"path":"src/main/java/seedu/duke/satisfactionlists/SatisfactionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke.satisfactionlists;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":" * Represents a data structure containing multiple Satisfaction objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":" * Uses an ArrayList to store the Satisfaction objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"public class SatisfactionList {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"    private ArrayList\u003cSatisfaction\u003e satisfactionList;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"    public SatisfactionList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"        ArrayList\u003cSatisfaction\u003e satisfactionList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"        setSatisfactionList(satisfactionList);","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"    public void addSatisfaction(Satisfaction newSatisfaction) {","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"        getSatisfactionList().add(newSatisfaction);","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"    public ArrayList\u003cSatisfaction\u003e getSatisfactionList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"        return satisfactionList;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"    public void setSatisfactionList(ArrayList\u003cSatisfaction\u003e satisfactionList) {","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"        this.satisfactionList \u003d satisfactionList;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"    public int getSize() {","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"        return satisfactionList.size();","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"     * Returns a specific satisfaction within the satisfaction list.","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"     * @param index The index of the satisfaction within the list that would be returned.","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"     * @return The satisfaction at the given index in the satisfaction list.","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"    public Satisfaction getSatisfaction(int index) {","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"        ArrayList\u003cSatisfaction\u003e satisfactionList \u003d getSatisfactionList();","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"        Satisfaction satisfaction \u003d satisfactionList.get(index);","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"        return satisfaction;","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"     * Helper for ViewSatisfactionCommand class.","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"     * Prints out the information of the Satisfaction objects","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"     * in this satisfactionList (i.e. prints out each Satisfaction object\u0027s","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"     * corresponding customer name and satisfaction value).","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"zhenster"},"content":"    public void viewSatisfactions() {","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"zhenster"},"content":"        int number \u003d 1;","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"zhenster"},"content":"        if (getSize() \u003d\u003d 0) {","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"zhenster"},"content":"            System.out.println(\"There are no recorded satisfactions.\");","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"zhenster"},"content":"        } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"zhenster"},"content":"            System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Customer Satisfaction List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"zhenster"},"content":"            for (Satisfaction satisfaction : satisfactionList) {","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"zhenster"},"content":"                System.out.println(Integer.toString(number) + \". [ \" + satisfaction.getCustomerName().toUpperCase()","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"                        + \" ]: \" + satisfaction.getSatisfactionValue());","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"                number +\u003d 1;","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"zhenster"},"content":"            System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":71,"author":{"gitId":"zhenster"},"content":"     * Helper for AddSatisfactionCommand class.","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"zhenster"},"content":"     * Check if the given customer already has a","lastModifiedDate":"2022-03-19"},{"lineNumber":73,"author":{"gitId":"zhenster"},"content":"     * corresponding Satisfaction object in this satisfactionList.","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"zhenster"},"content":"     * @param customerName The name of the given customer.","lastModifiedDate":"2022-03-19"},{"lineNumber":75,"author":{"gitId":"zhenster"},"content":"     * @return A boolean value (true if the customer already has corresponding Satisfaction object, false otherwise).","lastModifiedDate":"2022-03-19"},{"lineNumber":76,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":77,"author":{"gitId":"zhenster"},"content":"    public boolean isCustomerInSatisfactionList(String customerName) {","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"zhenster"},"content":"        for (Satisfaction satisfaction : satisfactionList) {","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"zhenster"},"content":"            if (customerName.equals(satisfaction.getCustomerName())) {","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"zhenster"},"content":"                return true;","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":82,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":83,"author":{"gitId":"zhenster"},"content":"        return false;","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":85,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":86,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":87,"author":{"gitId":"zhenster"},"content":"     * Helper for AverageSatisfactionCommand class.","lastModifiedDate":"2022-03-19"},{"lineNumber":88,"author":{"gitId":"zhenster"},"content":"     * Calculates the average customer satisfaction rating of","lastModifiedDate":"2022-03-19"},{"lineNumber":89,"author":{"gitId":"zhenster"},"content":"     * the Satisfaction objects in this satisfactionList.","lastModifiedDate":"2022-03-19"},{"lineNumber":90,"author":{"gitId":"zhenster"},"content":"     * @return The average customer satisfaction rating.","lastModifiedDate":"2022-03-19"},{"lineNumber":91,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"zhenster"},"content":"    public double calculateAverageSatisfaction() {","lastModifiedDate":"2022-03-19"},{"lineNumber":93,"author":{"gitId":"zhenster"},"content":"        int satisfactionSum \u003d 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"zhenster"},"content":"        for (Satisfaction satisfaction : satisfactionList) {","lastModifiedDate":"2022-03-19"},{"lineNumber":95,"author":{"gitId":"zhenster"},"content":"            satisfactionSum +\u003d satisfaction.getSatisfactionValue();","lastModifiedDate":"2022-03-19"},{"lineNumber":96,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"zhenster"},"content":"        double satisfactionAverage \u003d (double) satisfactionSum / (double) getSize();","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"zhenster"},"content":"        return satisfactionAverage;","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":101,"author":{"gitId":"zhenster"},"content":"    /**","lastModifiedDate":"2022-04-10"},{"lineNumber":102,"author":{"gitId":"zhenster"},"content":"     * Clears the list of satisfactions.","lastModifiedDate":"2022-04-10"},{"lineNumber":103,"author":{"gitId":"zhenster"},"content":"     */","lastModifiedDate":"2022-04-10"},{"lineNumber":104,"author":{"gitId":"zhenster"},"content":"    public void clearSatisfactionList() {","lastModifiedDate":"2022-04-10"},{"lineNumber":105,"author":{"gitId":"zhenster"},"content":"        satisfactionList.clear();","lastModifiedDate":"2022-04-10"},{"lineNumber":106,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":107,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":108,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":109,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":108,"FaliciaOng":1}},{"path":"src/main/java/seedu/duke/storage/AssignmentListFileManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke.storage;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"import java.io.File;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"public class AssignmentListFileManager extends FileManager {","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"    private static final String FILE_PATH \u003d \"ListFolder/assignment_list.txt\";","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"    public void load(HashMap\u003cInteger, String\u003e map) throws IOException, HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"        Boolean isNewFile \u003d !isFileExist(FILE_PATH);","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"        File file \u003d getFile(FILE_PATH);","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"        if (isNewFile) {","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"            return;","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"        Scanner scan \u003d new Scanner(file);","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"        while (scan.hasNext()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"            String line \u003d scan.nextLine();","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"            String[] splitData \u003d line.split(FILE_SEPARATOR);","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"            int roomId \u003d Integer.parseInt(splitData[0].trim());","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"            String name \u003d splitData[1].trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"            map.put(roomId, name);","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"    public void save(HashMap\u003cInteger, String\u003e map) throws IOException, HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"XunyiiZ"},"content":"        File file \u003d getFile(FILE_PATH);","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"XunyiiZ"},"content":"        FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"XunyiiZ"},"content":"        for (Map.Entry\u003cInteger, String\u003e set :","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"XunyiiZ"},"content":"                map.entrySet()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"XunyiiZ"},"content":"            fileWriter.write(set.getKey() + \" | \" + set.getValue()","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"XunyiiZ"},"content":"                    + System.lineSeparator());","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"XunyiiZ"},"content":"        fileWriter.close();","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"zhenster":1,"XunyiiZ":39,"siewyangzhi":3}},{"path":"src/main/java/seedu/duke/storage/EventListFileManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package seedu.duke.storage;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"import java.io.File;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"aiman-imtiaz"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"aiman-imtiaz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"aiman-imtiaz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.eventlists.Event;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"aiman-imtiaz"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"aiman-imtiaz"},"content":"public class EventListFileManager extends FileManager {","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"    private static final String FILE_PATH \u003d \"ListFolder/event_file.txt\";","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"    public void load(ArrayList\u003cEvent\u003e eventList) throws IOException, HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"aiman-imtiaz"},"content":"        File file \u003d getFile(FILE_PATH);","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"aiman-imtiaz"},"content":"        Scanner scan \u003d new Scanner(file);","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"aiman-imtiaz"},"content":"        while (scan.hasNext()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"aiman-imtiaz"},"content":"            String line \u003d scan.nextLine();","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"aiman-imtiaz"},"content":"            String[] splitData \u003d line.split(FILE_SEPARATOR);","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"aiman-imtiaz"},"content":"            String description \u003d splitData[0].trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"aiman-imtiaz"},"content":"            String atString \u003d splitData[1].trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"            LocalDate at \u003d LocalDate.parse(atString);","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"            Event event \u003d new Event(description, at);","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"            eventList.add(event);","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"    public void save(ArrayList\u003cEvent\u003e eventList) throws IOException, HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"aiman-imtiaz"},"content":"        File file \u003d getFile(FILE_PATH);","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"aiman-imtiaz"},"content":"        FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"aiman-imtiaz"},"content":"        for (Event event : eventList) {","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"aiman-imtiaz"},"content":"            fileWriter.write(event.toFileString() + System.lineSeparator());","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"aiman-imtiaz"},"content":"        fileWriter.close();","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"aiman-imtiaz":35,"zhenster":1,"siewyangzhi":3}},{"path":"src/main/java/seedu/duke/storage/FileManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke.storage;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"import java.io.File;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.FolderCreationFailException;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.FileCreationFailException;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"public abstract class FileManager {","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"    public static final String FILE_SEPARATOR \u003d \"\\\\|\";","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"     * Returns a file object which allows the program to write to or read from the file which contains the","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"     * list to update or read from.","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"     * @param filePath The path of the file containing the list to update or read from.","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"     * @return a File object which allows us to manipulate the file specified by the file path inputted into the","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"     *     function.","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if the folder that the file is stored in does not exist and we are unable to","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"     *                                   create it or if the file specified by the file path does not exist and we are","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"     *                                   unable to create it.","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"    public File getFile(String filePath) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"        boolean isDirectoryCreated;","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"        File directory \u003d file.getParentFile();","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"            isDirectoryCreated \u003d directory.mkdirs();","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"            if (!isDirectoryCreated) {","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"                throw new FolderCreationFailException();","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"XunyiiZ"},"content":"        if (!file.exists()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"            try {","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"XunyiiZ"},"content":"                file.createNewFile();","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"                throw new FileCreationFailException();","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"XunyiiZ"},"content":"        return file;","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"siewyangzhi"},"content":"     * Checks if the file specified by the file path exists.","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"     * @param filePath The path of the file containing the list to update or read from.","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"     * @return true if the file specified by the file path exists. Otherwise, false.","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"XunyiiZ"},"content":"    public boolean isFileExist(String filePath) {","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"XunyiiZ"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"XunyiiZ"},"content":"        return file.exists();","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"zhenster":3,"XunyiiZ":20,"siewyangzhi":31}},{"path":"src/main/java/seedu/duke/storage/HousekeeperFileManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke.storage;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.InvalidHousekeeperProfileException;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.HousekeeperList;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HousekeeperFileNotFoundException;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.Housekeeper;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidAgeException;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.OverAgeException;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.UnderAgeException;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.NameNotStringException;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"import java.io.File;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"public class HousekeeperFileManager extends FileManager {","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"    private static final String FILE_PATH \u003d \"ListFolder/housekeeper_file.txt\";","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"    private static final int MIN_AGE_ACCEPTED \u003d 21;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"    private static final int MAX_AGE_ACCEPTED \u003d 60;","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"     * Returns the Item List which contains the contents stored within the file ListFolder/housekeeper_file.txt.","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"     * @return the Housekeeper List containing the contents stored within the file ListFolder/housekeeper_file.txt","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"     * @throws HotelLiteManagerException if the folder that the file is stored in does not exist and we are unable to","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"     *                                   create it, if the file specified by the file path does not exist and we are","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"     *                                   unable to create it.","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"    public HousekeeperList load() throws HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d new HousekeeperList();","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeper;","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"        File file \u003d getFile(FILE_PATH);","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"        Scanner scan \u003d null;","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"        try {","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"            scan \u003d new Scanner(file);","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"            throw new HousekeeperFileNotFoundException();","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"        while (scan.hasNext()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"            String line \u003d scan.nextLine();","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"            String[] splitData \u003d line.split(FILE_SEPARATOR);","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"            String housekeeperName \u003d splitData[0];","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"            String housekeeperAge \u003d splitData[1];","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"FaliciaOng"},"content":"            String name;","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"FaliciaOng"},"content":"            name \u003d getName(housekeeperName);","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"FaliciaOng"},"content":"            int ageNumber;","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"FaliciaOng"},"content":"            ageNumber \u003d getAgeNumber(housekeeperAge);","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"FaliciaOng"},"content":"            housekeeper \u003d new Housekeeper(name, ageNumber);","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"FaliciaOng"},"content":"            housekeeperList.addHousekeeper(housekeeper);","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"FaliciaOng"},"content":"            String housekeeperAvailability \u003d splitData[2].trim();","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"FaliciaOng"},"content":"            if (!(housekeeperAvailability.equals(\"N/A\"))) {","lastModifiedDate":"2022-04-04"},{"lineNumber":56,"author":{"gitId":"FaliciaOng"},"content":"                housekeeperList.addAvailabilityInList(name, housekeeperAvailability);","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"FaliciaOng"},"content":"        return housekeeperList;","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"FaliciaOng"},"content":"     * This method verifies information of age in the housekeeper_file.txt is valid.","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"FaliciaOng"},"content":"     * @param housekeeperAge Housekeeper age given from the file.","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"FaliciaOng"},"content":"     * @return A valid age number.","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"FaliciaOng"},"content":"     * @throws HotelLiteManagerException If age given is not an integer or within age limit given.","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"FaliciaOng"},"content":"    private int getAgeNumber(String housekeeperAge) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"FaliciaOng"},"content":"        int ageNumber;","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"FaliciaOng"},"content":"        String age;","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"FaliciaOng"},"content":"        try {","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"FaliciaOng"},"content":"            age \u003d housekeeperAge.trim();","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"FaliciaOng"},"content":"            ageNumber \u003d Integer.parseInt(age);","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"FaliciaOng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidAgeException();","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"FaliciaOng"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidAgeException();","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"FaliciaOng"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidAgeException();","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"FaliciaOng"},"content":"        if (ageNumber \u003c MIN_AGE_ACCEPTED) {","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"FaliciaOng"},"content":"            throw new UnderAgeException();","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"FaliciaOng"},"content":"        if (ageNumber \u003e MAX_AGE_ACCEPTED) {","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"FaliciaOng"},"content":"            throw new OverAgeException();","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"FaliciaOng"},"content":"        return ageNumber;","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":92,"author":{"gitId":"FaliciaOng"},"content":"     * This method verifies that the housekeeper\u0027s name given from the housekeeper_file.txt does not contain","lastModifiedDate":"2022-04-11"},{"lineNumber":93,"author":{"gitId":"FaliciaOng"},"content":"     * any symbols or digits.","lastModifiedDate":"2022-04-11"},{"lineNumber":94,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":95,"author":{"gitId":"FaliciaOng"},"content":"     * @param housekeeperName Housekeeper name given from the file.","lastModifiedDate":"2022-04-11"},{"lineNumber":96,"author":{"gitId":"FaliciaOng"},"content":"     * @return A valid name.","lastModifiedDate":"2022-04-11"},{"lineNumber":97,"author":{"gitId":"FaliciaOng"},"content":"     * @throws HotelLiteManagerException If name contains integer and digits.","lastModifiedDate":"2022-04-11"},{"lineNumber":98,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":99,"author":{"gitId":"FaliciaOng"},"content":"    private String getName(String housekeeperName) throws HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"FaliciaOng"},"content":"        String name;","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"FaliciaOng"},"content":"        try {","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"FaliciaOng"},"content":"            name \u003d housekeeperName.trim();","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"FaliciaOng"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidHousekeeperProfileException();","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"FaliciaOng"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"FaliciaOng"},"content":"            throw new InvalidHousekeeperProfileException();","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"FaliciaOng"},"content":"        if (!name.matches(\"^([a-z]|\\\\s|[A-Z])+$\")) {","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"FaliciaOng"},"content":"            throw new NameNotStringException();","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"FaliciaOng"},"content":"        return name;","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":116,"author":{"gitId":"FaliciaOng"},"content":"     * Deletes all the content currently stored within the file ListFolder/housekeeper_file.txt.","lastModifiedDate":"2022-04-11"},{"lineNumber":117,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":118,"author":{"gitId":"FaliciaOng"},"content":"     * @throws IOException if we are unable to write to the file ListFolder/housekeeper_file.txt.","lastModifiedDate":"2022-04-11"},{"lineNumber":119,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":120,"author":{"gitId":"FaliciaOng"},"content":"    private void clearFileContents() throws IOException {","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"FaliciaOng"},"content":"        FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"FaliciaOng"},"content":"        fw.close();","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"FaliciaOng"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":126,"author":{"gitId":"FaliciaOng"},"content":"     * Update the contents stored within the file ListFolder/housekeeper_file.txt with the","lastModifiedDate":"2022-04-11"},{"lineNumber":127,"author":{"gitId":"FaliciaOng"},"content":"     * current content of the housekeeper list.","lastModifiedDate":"2022-04-11"},{"lineNumber":128,"author":{"gitId":"FaliciaOng"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":129,"author":{"gitId":"FaliciaOng"},"content":"     * @throws IOException if we are unable to write to the file ListFolder/housekeeper_file.txt.","lastModifiedDate":"2022-04-11"},{"lineNumber":130,"author":{"gitId":"FaliciaOng"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":131,"author":{"gitId":"FaliciaOng"},"content":"    public void save(HousekeeperList housekeeperList) throws IOException {","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"FaliciaOng"},"content":"        clearFileContents();","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"FaliciaOng"},"content":"        FileWriter fileWriter \u003d new FileWriter(FILE_PATH, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"FaliciaOng"},"content":"        for (int i \u003d 0; i \u003c housekeeperList.getTotalHousekeeper(); i++) {","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"FaliciaOng"},"content":"            Housekeeper housekeeper \u003d housekeeperList.getHousekeeper(i);","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"FaliciaOng"},"content":"            fileWriter.write(housekeeper.toFileString() + System.lineSeparator());","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"FaliciaOng"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"FaliciaOng"},"content":"        fileWriter.close();","lastModifiedDate":"2022-03-30"},{"lineNumber":139,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":140,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":141,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zhenster":6,"FaliciaOng":135}},{"path":"src/main/java/seedu/duke/storage/HousekeeperPerformanceFileManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke.storage;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperperformancelists.HousekeeperPerformance;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperperformancelists.HousekeeperPerformanceList;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HousekeeperPerformanceFileNotFoundException;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidHousekeeperPerformanceRatingException;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"import java.io.File;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"public class HousekeeperPerformanceFileManager extends FileManager {","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"    private static final String FILE_PATH \u003d \"ListFolder/performance_list.txt\";","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"    private void clearFileContents() throws IOException {","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"        FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"        fw.close();","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"    public HousekeeperPerformanceList load() throws HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"        HousekeeperPerformanceList housekeeperPerformanceList \u003d new HousekeeperPerformanceList();","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"        HousekeeperPerformance housekeeperPerformance;","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"        File file \u003d getFile(FILE_PATH);","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"        Scanner scan \u003d null;","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"        try {","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"            scan \u003d new Scanner(file);","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"            throw new HousekeeperPerformanceFileNotFoundException();","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"        while (scan.hasNext()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"            String line \u003d scan.nextLine();","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"            String[] splitData \u003d line.split(FILE_SEPARATOR);","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"            String housekeeperName \u003d splitData[0].trim();","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"            String performanceString \u003d splitData[1].trim();","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"            int performanceRating;","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"            try {","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"                performanceRating \u003d Integer.parseInt(performanceString);","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"                throw new InvalidHousekeeperPerformanceRatingException();","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"            housekeeperPerformance \u003d new HousekeeperPerformance(housekeeperName, performanceRating);","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"            housekeeperPerformanceList.addHousekeeperPerformance(housekeeperPerformance);","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"        return housekeeperPerformanceList;","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"    public void save(HousekeeperPerformanceList housekeeperPerformanceList) throws IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"        clearFileContents();","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"        FileWriter fw \u003d new FileWriter(FILE_PATH, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"        int lastIndexOfArrayList \u003d housekeeperPerformanceList.getSize() - 1;","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"zhenster"},"content":"        String housekeeperName;","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"zhenster"},"content":"        int rating;","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"zhenster"},"content":"        HousekeeperPerformance housekeeperPerformance;","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"zhenster"},"content":"        String performanceDetails \u003d \"\";","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"zhenster"},"content":"        for (int i \u003d 0; i \u003c housekeeperPerformanceList.getSize(); i++) {","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"zhenster"},"content":"            housekeeperPerformance \u003d housekeeperPerformanceList.getPerformance(i);","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"zhenster"},"content":"            housekeeperName \u003d housekeeperPerformance.getName();","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"zhenster"},"content":"            rating \u003d housekeeperPerformance.getRating();","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"zhenster"},"content":"            performanceDetails \u003d housekeeperName + \u0027|\u0027 + rating;","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"            if (i !\u003d lastIndexOfArrayList) {","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"                performanceDetails \u003d performanceDetails + System.lineSeparator();","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"zhenster"},"content":"            fw.write(performanceDetails);","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"zhenster"},"content":"        fw.close();","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zhenster":68,"FaliciaOng":2}},{"path":"src/main/java/seedu/duke/storage/ItemListFileManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke.storage;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.itemlists.ItemList;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.itemlists.Item;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.ItemFileNotFoundException;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidItemPaxException;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"import java.io.File;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"public class ItemListFileManager extends FileManager {","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"    private static final String FILE_PATH \u003d \"ListFolder/ItemList.txt\";","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"     * Returns the Item List which contains the contents stored within the file ListFolder/ItemList.txt","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"     * @return the Item List containing the contents stored within the file ListFolder/ItemList.txt","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"     * @throws HotelLiteManagerException if the folder that the file is stored in does not exist and we are unable to","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"     *                                   create it, if the file specified by the file path does not exist and we are","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"     *                                   unable to create it or if the item pax of an item stored within the","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"     *                                   ListFolder/ItemList.txt file is not an integer.","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"    public ItemList load() throws HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"        ItemList listOfItems \u003d new ItemList();","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"        Item item;","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"        File file \u003d getFile(FILE_PATH);","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"        Scanner scan \u003d null;","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"        try {","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"            scan \u003d new Scanner(file);","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"            throw new ItemFileNotFoundException();","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"        while (scan.hasNext()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"            String line \u003d scan.nextLine();","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"siewyangzhi"},"content":"            String[] splitData \u003d line.split(FILE_SEPARATOR);","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"            String itemName \u003d splitData[0].trim();","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"siewyangzhi"},"content":"            String itemPaxStringVersion \u003d splitData[1].trim();","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"siewyangzhi"},"content":"            int itemPax;","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"siewyangzhi"},"content":"            try {","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"                itemPax \u003d Integer.parseInt(itemPaxStringVersion);","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"                throw new InvalidItemPaxException();","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"siewyangzhi"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"siewyangzhi"},"content":"            item \u003d new Item(itemName, itemPax);","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"siewyangzhi"},"content":"            listOfItems.addItemToList(item);","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"siewyangzhi"},"content":"        return listOfItems;","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"siewyangzhi"},"content":"     * Deletes all the content currently stored within the file ListFolder/ItemList.txt","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"siewyangzhi"},"content":"     * @throws IOException if we are unable to write to the file ListFolder/ItemList.txt","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"siewyangzhi"},"content":"    private void clearFileContents() throws IOException {","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"siewyangzhi"},"content":"        FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"siewyangzhi"},"content":"        fw.close();","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"siewyangzhi"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"siewyangzhi"},"content":"     * Update the contents stored within the file ListFolder/ItemList.txt with the current content of the item list.","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"siewyangzhi"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"siewyangzhi"},"content":"     * @throws IOException if we are unable to write to the file ListFolder/ItemList.txt","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"siewyangzhi"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":72,"author":{"gitId":"siewyangzhi"},"content":"    public void save(ItemList listOfItems) throws IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":73,"author":{"gitId":"siewyangzhi"},"content":"        clearFileContents();","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"siewyangzhi"},"content":"        FileWriter fw \u003d new FileWriter(FILE_PATH, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"siewyangzhi"},"content":"        int lastIndexOfArrayList \u003d listOfItems.getSize() - 1;","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"siewyangzhi"},"content":"        String itemName;","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"siewyangzhi"},"content":"        int itemPax;","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"siewyangzhi"},"content":"        Item item;","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"siewyangzhi"},"content":"        String itemDetails;","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"siewyangzhi"},"content":"        for (int i \u003d 0; i \u003c listOfItems.getSize(); i++) {","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"siewyangzhi"},"content":"            item \u003d listOfItems.getItem(i);","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"siewyangzhi"},"content":"            itemName \u003d item.getName();","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"siewyangzhi"},"content":"            itemPax \u003d item.getPax();","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"siewyangzhi"},"content":"            itemDetails \u003d itemName + \u0027|\u0027 + itemPax;","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"siewyangzhi"},"content":"            if (i !\u003d lastIndexOfArrayList) {","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"siewyangzhi"},"content":"                itemDetails \u003d itemDetails + System.lineSeparator();","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"siewyangzhi"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"siewyangzhi"},"content":"            fw.write(itemDetails);","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"siewyangzhi"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"siewyangzhi"},"content":"        fw.close();","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zhenster":3,"FaliciaOng":2,"siewyangzhi":87}},{"path":"src/main/java/seedu/duke/storage/RoomFileManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke.storage;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.roomlists.Room;","lastModifiedDate":"2022-04-02"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.roomlists.RoomType;","lastModifiedDate":"2022-04-02"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"import java.io.File;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"public class RoomFileManager extends FileManager {","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"    private static final String FILE_PATH \u003d \"ListFolder/room_file.txt\";","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"    public void load(ArrayList\u003cRoom\u003e roomList) throws IOException, HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"        Boolean isNewFile \u003d !isFileExist(FILE_PATH);","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"        File file \u003d getFile(FILE_PATH);","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"        if (isNewFile) {","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"            createNewRoomList(roomList);","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"            this.save(roomList);","lastModifiedDate":"2022-04-02"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"            return;","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"        Scanner scan \u003d new Scanner(file);","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"        while (scan.hasNext()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"            String line \u003d scan.nextLine();","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"            String[] splitData \u003d line.split(FILE_SEPARATOR);","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"            String type \u003d splitData[0].trim();","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"            RoomType roomType \u003d getRoomTypeStr(type);","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"            int id \u003d Integer.parseInt(splitData[1].trim());","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"XunyiiZ"},"content":"            int level \u003d Integer.parseInt(splitData[2].trim());","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"XunyiiZ"},"content":"            String status \u003d splitData[3].trim();","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"XunyiiZ"},"content":"            Room room \u003d new Room(id, level, roomType, status);","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"XunyiiZ"},"content":"            roomList.add(room);","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"XunyiiZ"},"content":"    private void createNewRoomList(ArrayList\u003cRoom\u003e roomList) {","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"XunyiiZ"},"content":"        Room r1 \u003d new Room(101, 1, RoomType.Single);","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(102, 1, RoomType.Single);","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(103, 1, RoomType.Double);","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(201, 2, RoomType.Double);","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(202, 2, RoomType.Triple);","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(203, 2, RoomType.Triple);","lastModifiedDate":"2022-04-02"},{"lineNumber":50,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-04-02"},{"lineNumber":51,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(204, 2, RoomType.Queen);","lastModifiedDate":"2022-04-02"},{"lineNumber":52,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(301, 3, RoomType.Queen);","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(302, 3, RoomType.King);","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(303, 3, RoomType.King);","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(401, 4, RoomType.Twin);","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"XunyiiZ"},"content":"        r1 \u003d new Room(402, 4, RoomType.Twin);","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"XunyiiZ"},"content":"        roomList.add(r1);","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"XunyiiZ"},"content":"    private RoomType getRoomTypeStr(String type) {","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"XunyiiZ"},"content":"        switch (type) {","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"XunyiiZ"},"content":"        case \"Single\":","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"XunyiiZ"},"content":"            return RoomType.Single;","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"XunyiiZ"},"content":"        case \"Double\":","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"XunyiiZ"},"content":"            return RoomType.Double;","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"XunyiiZ"},"content":"        case \"Triple\":","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"XunyiiZ"},"content":"            return RoomType.Triple;","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"XunyiiZ"},"content":"        case \"Queen\":","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"XunyiiZ"},"content":"            return RoomType.Queen;","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"XunyiiZ"},"content":"        case \"King\":","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"XunyiiZ"},"content":"            return RoomType.King;","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"XunyiiZ"},"content":"        case \"Twin\":","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"XunyiiZ"},"content":"            return RoomType.Twin;","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"XunyiiZ"},"content":"        default: return null;","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"siewyangzhi"},"content":"    public void save(ArrayList\u003cRoom\u003e roomArrayList) throws IOException, HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"XunyiiZ"},"content":"        File file \u003d getFile(FILE_PATH);","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"XunyiiZ"},"content":"        FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"XunyiiZ"},"content":"        for (Room room : roomArrayList) {","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"XunyiiZ"},"content":"            fileWriter.write(room.toFileString() + System.lineSeparator());","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"XunyiiZ"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"XunyiiZ"},"content":"        fileWriter.close();","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"zhenster":1,"XunyiiZ":88,"siewyangzhi":3}},{"path":"src/main/java/seedu/duke/storage/SatisfactionListFileManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke.storage;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.satisfactionlists.SatisfactionList;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.satisfactionlists.Satisfaction;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.SatisfactionFileNotFoundException;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidSatisfactionValueException;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"import java.io.File;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"public class SatisfactionListFileManager extends FileManager {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"    private static final String FILE_PATH \u003d \"ListFolder/satisfaction_list.txt\";","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"    private void clearFileContents() throws IOException {","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"        FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"        fw.close();","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"    public SatisfactionList load() throws HotelLiteManagerException {","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"        SatisfactionList satisfactionList \u003d new SatisfactionList();","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"        Satisfaction satisfaction;","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"        File file \u003d getFile(FILE_PATH);","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"        Scanner scan \u003d null;","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"        try {","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"            scan \u003d new Scanner(file);","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"            throw new SatisfactionFileNotFoundException();","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"        while (scan.hasNext()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"            String line \u003d scan.nextLine();","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"            String[] splitData \u003d line.split(FILE_SEPARATOR);","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"            String customerName \u003d splitData[0].trim();","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"            String satisfactionString \u003d splitData[1].trim();","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"            int satisfactionValue;","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"            try {","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"                satisfactionValue \u003d Integer.parseInt(satisfactionString);","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"                throw new InvalidSatisfactionValueException();","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"            satisfaction \u003d new Satisfaction(customerName, satisfactionValue);","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"            satisfactionList.addSatisfaction(satisfaction);","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"        return satisfactionList;","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"    public void save(SatisfactionList satisfactionList) throws IOException {","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"        clearFileContents();","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"        FileWriter fw \u003d new FileWriter(FILE_PATH, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"        int lastIndexOfArrayList \u003d satisfactionList.getSize() - 1;","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"zhenster"},"content":"        String customerName;","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"zhenster"},"content":"        int satisfactionValue;","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"zhenster"},"content":"        Satisfaction satisfaction;","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"zhenster"},"content":"        String satisfactionDetails;","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"zhenster"},"content":"        for (int i \u003d 0; i \u003c satisfactionList.getSize(); i++) {","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"zhenster"},"content":"            satisfaction \u003d satisfactionList.getSatisfaction(i);","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"zhenster"},"content":"            customerName \u003d satisfaction.getCustomerName();","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"zhenster"},"content":"            satisfactionValue \u003d satisfaction.getSatisfactionValue();","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"zhenster"},"content":"            satisfactionDetails \u003d customerName + \u0027|\u0027 + satisfactionValue;","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"            if (i !\u003d lastIndexOfArrayList) {","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"                satisfactionDetails \u003d satisfactionDetails + System.lineSeparator();","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"zhenster"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"zhenster"},"content":"            fw.write(satisfactionDetails);","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"zhenster"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"zhenster"},"content":"        fw.close();","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"zhenster":56,"FaliciaOng":2,"XunyiiZ":11,"siewyangzhi":1}},{"path":"src/test/java/seedu/duke/AddAvailabilityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.housekeepercommands.AddAvailabilityCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidAvailabilityException;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.UserDoesNotExistException;","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.Housekeeper;","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.HousekeeperList;","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"public class AddAvailabilityTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"    private ListContainer listContainer;","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"    private static final int INDEX_OF_SALLY \u003d 1;","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"    public void pretestingSetUp() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"        listContainer \u003d new ListContainer();","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeperJame \u003d new Housekeeper(\"James\", 22);","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.addHousekeeperInList(housekeeperJame);","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeperSally \u003d new Housekeeper(\"Sally\", 30);","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.addHousekeeperInList(housekeeperSally);","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"    public void addAvailability_success() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"        AddAvailabilityCommand addAvailabilityCommand \u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"                new AddAvailabilityCommand(\"sally / 1,2\");","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"        addAvailabilityCommand.execute(listContainer, ui);","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeper \u003d housekeeperList.getHousekeeper(INDEX_OF_SALLY);","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(\"Monday Tuesday\", housekeeper.getAvailability());","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"    public void userDoesNotExist_exceptionThrown() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"        AddAvailabilityCommand addAvailabilityCommand \u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"FaliciaOng"},"content":"                new AddAvailabilityCommand(\"han / 1,2\");","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(UserDoesNotExistException.class, () -\u003e addAvailabilityCommand.execute(listContainer, ui));","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_addCommandNameAvailability_success() throws Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"FaliciaOng"},"content":"        CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"FaliciaOng"},"content":"        Command command \u003d parser.parse(\"availability Susan / 1,3\");","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"        AddAvailabilityCommand addAvailabilityCommand \u003d (AddAvailabilityCommand) command;","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(\"1,3\", addAvailabilityCommand.getAvailability());","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(\"susan\", addAvailabilityCommand.getName());","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_addCommandInvalidAvailability_exceptionThrown() {","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(InvalidAvailabilityException.class, () -\u003e new CommandParser()","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"FaliciaOng"},"content":"                .parse(\"availability Susan / \"));","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_addCommandExtraSlash_exceptionThrown() {","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(InvalidAvailabilityException.class, () -\u003e new CommandParser()","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"FaliciaOng"},"content":"                .parse(\"availability Susan /3/\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"zhenster":1,"FaliciaOng":69,"siewyangzhi":3}},{"path":"src/test/java/seedu/duke/AddHousekeeperPerformanceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-04-10"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-10"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-10"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-04-10"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-04-10"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"import seedu.duke.command.housekeepercommands.AddHousekeeperPerformanceCommand;","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.EmptyHousekeeperPerformanceNameException;","lastModifiedDate":"2022-04-10"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidHousekeeperPerformanceRatingException;","lastModifiedDate":"2022-04-10"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidHousekeeperPerformanceNameException;","lastModifiedDate":"2022-04-10"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidCommandException;","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.DuplicateCommandException;","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"import seedu.duke.housekeeperperformancelists.HousekeeperPerformance;","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"/**","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":" * Class to test \"add performance\" command for a housekeeper.","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":" */","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"public class AddHousekeeperPerformanceCommandTest {","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"    public void commandParser_addCommandWithNonEmptyNameAndRating_success()","lastModifiedDate":"2022-04-10"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"            throws Exception {","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"        CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"        Command command1 \u003d parser.parse(\"add performance Bob Jones / 3\");","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"        AddHousekeeperPerformanceCommand addHousekeeperPerformanceCommand \u003d (AddHousekeeperPerformanceCommand) command1;","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"        HousekeeperPerformance housekeeperPerformance \u003d addHousekeeperPerformanceCommand.getHousekeeperPerformance();","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"        assertEquals(\"bob jones\", housekeeperPerformance.getName());","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"        assertEquals(3, housekeeperPerformance.getRating());","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"    public void commandParser_addCommandWithEmptyHousekeeperPerformanceName_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"        assertThrows(EmptyHousekeeperPerformanceNameException.class, ()","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"            -\u003e new CommandParser().parse(\"add performance / 4\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"    public void commandParser_addCommandWithEmptyHousekeeperPerformanceRating_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"        assertThrows(InvalidHousekeeperPerformanceRatingException.class, ()","lastModifiedDate":"2022-04-10"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"            -\u003e new CommandParser().parse(\"add performance Bob / \"));","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"    public void commandParser_addCommandWithNoSlash_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"        assertThrows(InvalidCommandException.class, ()","lastModifiedDate":"2022-04-10"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"            -\u003e new CommandParser().parse(\"add performance Bob 5\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"    public void commandParser_addCommandWithInvalidPerformanceRating_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"        assertThrows(InvalidHousekeeperPerformanceRatingException.class, ()","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"zhenster"},"content":"            -\u003e new CommandParser().parse(\"add performance Joe / -1\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":58,"author":{"gitId":"zhenster"},"content":"    public void commandParser_addCommandWithHousekeeperPerformanceName_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":59,"author":{"gitId":"zhenster"},"content":"        assertThrows(InvalidHousekeeperPerformanceNameException.class, ()","lastModifiedDate":"2022-04-10"},{"lineNumber":60,"author":{"gitId":"zhenster"},"content":"            -\u003e new CommandParser().parse(\"add performance Steve the 3rd / 2\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":61,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":62,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"    public void commandParser_addCommandWithDuplicatePerformanceCommands_exceptionThrown() {","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"zhenster"},"content":"        assertThrows(DuplicateCommandException.class, ()","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"zhenster"},"content":"            -\u003e new CommandParser().parse(\"add performance add performance Steve / 2\"));","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"zhenster":68}},{"path":"src/test/java/seedu/duke/AddHousekeeperTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.housekeepercommands.AddHousekeeperCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"import seedu.duke.command.housekeepercommands.AddHousekeeperPerformanceCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.housekeepercommands.DeleteHousekeeperCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.InvalidUserException;","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.UnderAgeException;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.InvalidHousekeeperProfileException;","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.NameNotStringException;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.InvalidAgeException;","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.OverAgeException;","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.Housekeeper;","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.HousekeeperList;","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"import seedu.duke.housekeeperperformancelists.HousekeeperPerformance;","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"import seedu.duke.housekeeperperformancelists.HousekeeperPerformanceList;","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"public class AddHousekeeperTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"    private ListContainer listContainer;","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"    private static final int INDEX_OF_JON \u003d 2;","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"    private static final int INDEX_OF_JAMES \u003d 0;","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"    private static final int INDEX_OF_SALLY \u003d 0;","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"    public void pretestingSetUp() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"        listContainer \u003d new ListContainer();","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"        housekeeperList.clearHousekeeperList();","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeperJame \u003d new Housekeeper(\"James\", 22);","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.addHousekeeperInList(housekeeperJame);","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeperSally \u003d new Housekeeper(\"Sally\", 30);","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.addHousekeeperInList(housekeeperSally);","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"        HousekeeperPerformanceList housekeeperPerformanceList \u003d listContainer.getHousekeeperPerformanceList();","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"        housekeeperPerformanceList.clearHousekeeperPerformanceList();","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"FaliciaOng"},"content":"    public void execute_addHousekeeper_success() throws HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"FaliciaOng"},"content":"        AddHousekeeperCommand addHousekeeperCommand \u003d new AddHousekeeperCommand(\"jon / 30\");","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"FaliciaOng"},"content":"        addHousekeeperCommand.execute(listContainer, ui);","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeper \u003d housekeeperList.getHousekeeper(INDEX_OF_JON);","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(\"jon\", housekeeper.getName());","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(30, housekeeper.getAge());","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"zhenster"},"content":"    public void execute_addHousekeeperPerformanceLowerBoundaryRating_success()","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"            throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"        AddHousekeeperPerformanceCommand addHousekeeperPerformanceCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"zhenster"},"content":"                \u003d new AddHousekeeperPerformanceCommand(\"James / 1\");","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"zhenster"},"content":"        addHousekeeperPerformanceCommand.execute(listContainer, ui);","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"zhenster"},"content":"        HousekeeperPerformanceList housekeeperPerformanceList \u003d listContainer.getHousekeeperPerformanceList();","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"zhenster"},"content":"        HousekeeperPerformance housekeeperPerformance \u003d housekeeperPerformanceList.getPerformance(INDEX_OF_JAMES);","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"zhenster"},"content":"        assertEquals(\"James\", housekeeperPerformance.getName());","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"zhenster"},"content":"        assertEquals(1, housekeeperPerformance.getRating());","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"zhenster"},"content":"        housekeeperPerformanceList.clearHousekeeperPerformanceList();","lastModifiedDate":"2022-04-11"},{"lineNumber":72,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":73,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":74,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":75,"author":{"gitId":"zhenster"},"content":"    public void execute_addHousekeeperPerformanceUpperBoundaryRating_success()","lastModifiedDate":"2022-04-11"},{"lineNumber":76,"author":{"gitId":"zhenster"},"content":"            throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":77,"author":{"gitId":"zhenster"},"content":"        AddHousekeeperPerformanceCommand addHousekeeperPerformanceCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":78,"author":{"gitId":"zhenster"},"content":"                \u003d new AddHousekeeperPerformanceCommand(\"Sally / 5\");","lastModifiedDate":"2022-04-11"},{"lineNumber":79,"author":{"gitId":"zhenster"},"content":"        addHousekeeperPerformanceCommand.execute(listContainer, ui);","lastModifiedDate":"2022-04-11"},{"lineNumber":80,"author":{"gitId":"zhenster"},"content":"        HousekeeperPerformanceList housekeeperPerformanceList \u003d listContainer.getHousekeeperPerformanceList();","lastModifiedDate":"2022-04-11"},{"lineNumber":81,"author":{"gitId":"zhenster"},"content":"        HousekeeperPerformance housekeeperPerformance \u003d housekeeperPerformanceList.getPerformance(INDEX_OF_SALLY);","lastModifiedDate":"2022-04-11"},{"lineNumber":82,"author":{"gitId":"zhenster"},"content":"        assertEquals(\"Sally\", housekeeperPerformance.getName());","lastModifiedDate":"2022-04-11"},{"lineNumber":83,"author":{"gitId":"zhenster"},"content":"        assertEquals(5, housekeeperPerformance.getRating());","lastModifiedDate":"2022-04-11"},{"lineNumber":84,"author":{"gitId":"zhenster"},"content":"        housekeeperPerformanceList.clearHousekeeperPerformanceList();","lastModifiedDate":"2022-04-11"},{"lineNumber":85,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":86,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":87,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":88,"author":{"gitId":"FaliciaOng"},"content":"    public void addCommandUserExist_exceptionThrown() throws HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":89,"author":{"gitId":"FaliciaOng"},"content":"        AddHousekeeperCommand addHousekeeperCommand \u003d new AddHousekeeperCommand(\"sally / 30\");","lastModifiedDate":"2022-04-11"},{"lineNumber":90,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(InvalidUserException.class, () -\u003e addHousekeeperCommand.execute(listContainer, ui));","lastModifiedDate":"2022-04-11"},{"lineNumber":91,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":92,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_addCommandNameAge_success() throws Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"FaliciaOng"},"content":"        CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"FaliciaOng"},"content":"        Command command \u003d parser.parse(\"add housekeeper Susan / 23\");","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"FaliciaOng"},"content":"        AddHousekeeperCommand addHousekeeperCommand \u003d (AddHousekeeperCommand) command;","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(\"susan\", addHousekeeperCommand.getHousekeeper().getName());","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(23, addHousekeeperCommand.getHousekeeper().getAge());","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":103,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_addCommandNameAgeUpperBound_success() throws Exception {","lastModifiedDate":"2022-04-11"},{"lineNumber":104,"author":{"gitId":"FaliciaOng"},"content":"        CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2022-04-11"},{"lineNumber":105,"author":{"gitId":"FaliciaOng"},"content":"        Command command \u003d parser.parse(\"add housekeeper Susan / 60\");","lastModifiedDate":"2022-04-11"},{"lineNumber":106,"author":{"gitId":"FaliciaOng"},"content":"        AddHousekeeperCommand addHousekeeperCommand \u003d (AddHousekeeperCommand) command;","lastModifiedDate":"2022-04-11"},{"lineNumber":107,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(\"susan\", addHousekeeperCommand.getHousekeeper().getName());","lastModifiedDate":"2022-04-11"},{"lineNumber":108,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(60, addHousekeeperCommand.getHousekeeper().getAge());","lastModifiedDate":"2022-04-11"},{"lineNumber":109,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":110,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":111,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":112,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_addCommandNameAgeLowerBound_success() throws Exception {","lastModifiedDate":"2022-04-11"},{"lineNumber":113,"author":{"gitId":"FaliciaOng"},"content":"        CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2022-04-11"},{"lineNumber":114,"author":{"gitId":"FaliciaOng"},"content":"        Command command \u003d parser.parse(\"add housekeeper kelly / 21\");","lastModifiedDate":"2022-04-11"},{"lineNumber":115,"author":{"gitId":"FaliciaOng"},"content":"        AddHousekeeperCommand addHousekeeperCommand \u003d (AddHousekeeperCommand) command;","lastModifiedDate":"2022-04-11"},{"lineNumber":116,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(\"kelly\", addHousekeeperCommand.getHousekeeper().getName());","lastModifiedDate":"2022-04-11"},{"lineNumber":117,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(21, addHousekeeperCommand.getHousekeeper().getAge());","lastModifiedDate":"2022-04-11"},{"lineNumber":118,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":119,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":120,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_addCommandInvalidAge_exceptionThrown() {","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(InvalidAgeException.class, () -\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"FaliciaOng"},"content":"                new CommandParser().parse(\"add housekeeper Susan / fifty\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_addCommandEmptyDescription_exceptionThrown() {","lastModifiedDate":"2022-03-18"},{"lineNumber":128,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(InvalidHousekeeperProfileException.class, () -\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"FaliciaOng"},"content":"                new CommandParser().parse(\"add housekeeper / \"));","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":131,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":133,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_addCommandUnderage_exceptionThrown() {","lastModifiedDate":"2022-03-27"},{"lineNumber":134,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(UnderAgeException.class, () -\u003e new CommandParser().parse(\"add housekeeper Jane / 12\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":136,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":138,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_addCommandOverage_exceptionThrown() {","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(OverAgeException.class, () -\u003e new CommandParser().parse(\"add housekeeper Sally / 81\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":140,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":141,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":142,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":143,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_extraSlash_exceptionThrown() {","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(InvalidHousekeeperProfileException.class, () -\u003e new CommandParser()","lastModifiedDate":"2022-03-30"},{"lineNumber":145,"author":{"gitId":"FaliciaOng"},"content":"                .parse(\"add housekeeper Sally / 81/\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":146,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":148,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":149,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_addCommandInvalidName_exceptionThrown() {","lastModifiedDate":"2022-03-30"},{"lineNumber":150,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(NameNotStringException.class, () -\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":151,"author":{"gitId":"FaliciaOng"},"content":"                new CommandParser().parse(\"add housekeeper Susan12 / fifty\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":152,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":153,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":154,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":155,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_addCommandNoName_exceptionThrown() {","lastModifiedDate":"2022-04-11"},{"lineNumber":156,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(InvalidHousekeeperProfileException.class, () -\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":157,"author":{"gitId":"FaliciaOng"},"content":"                new CommandParser().parse(\"add housekeeper  / 30\"));","lastModifiedDate":"2022-04-11"},{"lineNumber":158,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":159,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":160,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_addCommandInvalidNameSymbol_exceptionThrown() {","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(NameNotStringException.class, () -\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"FaliciaOng"},"content":"                new CommandParser().parse(\"add housekeeper @@@@$S / fifty\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":164,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":165,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":166,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":167,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":168,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_addCommandInvalidSymbol_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":169,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(InvalidHousekeeperProfileException.class, () -\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":170,"author":{"gitId":"FaliciaOng"},"content":"                new CommandParser().parse(\"add housekeeper jane ^ 60\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":171,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":172,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":173,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":174,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_nameCorrect() throws Exception {","lastModifiedDate":"2022-03-27"},{"lineNumber":175,"author":{"gitId":"FaliciaOng"},"content":"        CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2022-03-27"},{"lineNumber":176,"author":{"gitId":"FaliciaOng"},"content":"        Command command \u003d parser.parse(\"add housekeeper Susan / 23\");","lastModifiedDate":"2022-03-28"},{"lineNumber":177,"author":{"gitId":"FaliciaOng"},"content":"        AddHousekeeperCommand addHousekeeperCommand \u003d (AddHousekeeperCommand) command;","lastModifiedDate":"2022-03-27"},{"lineNumber":178,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(\"susan\", addHousekeeperCommand.getHousekeeper().getName());","lastModifiedDate":"2022-03-29"},{"lineNumber":179,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(23, addHousekeeperCommand.getHousekeeper().getAge());","lastModifiedDate":"2022-03-27"},{"lineNumber":180,"author":{"gitId":"FaliciaOng"},"content":"        command \u003d parser.parse(\"delete housekeeper susan\");","lastModifiedDate":"2022-03-27"},{"lineNumber":181,"author":{"gitId":"FaliciaOng"},"content":"        DeleteHousekeeperCommand deleteHousekeeperCommand \u003d (DeleteHousekeeperCommand) command;","lastModifiedDate":"2022-03-27"},{"lineNumber":182,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(\"susan\", deleteHousekeeperCommand.getName());","lastModifiedDate":"2022-03-27"},{"lineNumber":183,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":184,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":185,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"zhenster":38,"FaliciaOng":143,"siewyangzhi":4}},{"path":"src/test/java/seedu/duke/AddItemCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-04-10"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-10"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-10"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.itemcommands.AddItemCommand;","lastModifiedDate":"2022-04-10"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.EmptyItemNameException;","lastModifiedDate":"2022-04-10"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.EmptyItemPaxException;","lastModifiedDate":"2022-04-10"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.InvalidItemPaxException;","lastModifiedDate":"2022-04-10"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.InvalidCommandException;","lastModifiedDate":"2022-04-10"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.ItemAlreadyInListException;","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.DuplicateCommandException;","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.itemlists.Item;","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.itemlists.ItemList;","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-04-10"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"public class AddItemCommandTest {","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"    private ListContainer listContainer;","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-04-10"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"    private static final int INDEX_OF_SHAMPOO \u003d 2;","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"    private static final int INDEX_OF_TOOTH_BRUSH \u003d 2;","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"    private static final int INDEX_OF_COMB \u003d 2;","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"    //Sets up the pretesting environment by creating an ItemList with 2 items and its corresponding pax.","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"    public void pretestingSetUp() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"        listContainer \u003d new ListContainer();","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"        ItemList itemList \u003d listContainer.getItemList();","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"        Item testItemToiletPaper \u003d new Item(\"Toilet Paper\", 15);","lastModifiedDate":"2022-04-10"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"        itemList.addItemToList(testItemToiletPaper);","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"        Item testItemSofa \u003d new Item(\"Sofa\", 30);","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"        itemList.addItemToList(testItemSofa);","lastModifiedDate":"2022-04-10"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":42,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":44,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_NonEmptyItemNameAndPax_success() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"siewyangzhi"},"content":"        AddItemCommand addItemPaxCommand \u003d new AddItemCommand(\"Shampoo / 30\");","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"siewyangzhi"},"content":"        addItemPaxCommand.execute(listContainer, ui);","lastModifiedDate":"2022-04-10"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"        ItemList itemList \u003d listContainer.getItemList();","lastModifiedDate":"2022-04-10"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d itemList.getItem(INDEX_OF_SHAMPOO);","lastModifiedDate":"2022-04-10"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(\"Shampoo\", item.getName());","lastModifiedDate":"2022-04-10"},{"lineNumber":50,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(30, item.getPax());","lastModifiedDate":"2022-04-10"},{"lineNumber":51,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":52,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_EmptyItemPax_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(EmptyItemPaxException.class, () -\u003e new AddItemCommand(\"Towels /\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(EmptyItemPaxException.class, () -\u003e new AddItemCommand(\"Towels /    \"));","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":58,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":59,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":60,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_itemPaxWithTheUpperBoundaryValue_success() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-10"},{"lineNumber":61,"author":{"gitId":"siewyangzhi"},"content":"        AddItemCommand addItemPaxCommand \u003d new AddItemCommand(\"Tooth Brush / 1000000\");","lastModifiedDate":"2022-04-10"},{"lineNumber":62,"author":{"gitId":"siewyangzhi"},"content":"        addItemPaxCommand.execute(listContainer, ui);","lastModifiedDate":"2022-04-10"},{"lineNumber":63,"author":{"gitId":"siewyangzhi"},"content":"        ItemList itemList \u003d listContainer.getItemList();","lastModifiedDate":"2022-04-10"},{"lineNumber":64,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d itemList.getItem(INDEX_OF_TOOTH_BRUSH);","lastModifiedDate":"2022-04-10"},{"lineNumber":65,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(\"Tooth Brush\", item.getName());","lastModifiedDate":"2022-04-10"},{"lineNumber":66,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(1000000, item.getPax());","lastModifiedDate":"2022-04-10"},{"lineNumber":67,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":68,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":69,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":70,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_itemPaxWithTheLowerBoundaryValue_success() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-10"},{"lineNumber":71,"author":{"gitId":"siewyangzhi"},"content":"        AddItemCommand addItemPaxCommand \u003d new AddItemCommand(\"Comb / 1\");","lastModifiedDate":"2022-04-10"},{"lineNumber":72,"author":{"gitId":"siewyangzhi"},"content":"        addItemPaxCommand.execute(listContainer, ui);","lastModifiedDate":"2022-04-10"},{"lineNumber":73,"author":{"gitId":"siewyangzhi"},"content":"        ItemList itemList \u003d listContainer.getItemList();","lastModifiedDate":"2022-04-10"},{"lineNumber":74,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d itemList.getItem(INDEX_OF_COMB);","lastModifiedDate":"2022-04-10"},{"lineNumber":75,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(\"Comb\", item.getName());","lastModifiedDate":"2022-04-10"},{"lineNumber":76,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(1, item.getPax());","lastModifiedDate":"2022-04-10"},{"lineNumber":77,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":78,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":79,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":80,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_itemPaxWithNegativeValue_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":81,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(InvalidItemPaxException.class, () -\u003e new AddItemCommand(\"Towels / -1\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":82,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":83,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":84,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":85,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_itemPaxWithValueAboveUpperBoundary_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":86,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(InvalidItemPaxException.class, () -\u003e new AddItemCommand(\"Towels / 1000001\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":87,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":88,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":89,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":90,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_itemPaxWithValueBelowLowerBoundary_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":91,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(InvalidItemPaxException.class, () -\u003e new AddItemCommand(\"Towels / 0\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":92,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":93,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":94,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":95,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_nonIntegerItemPax_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":96,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(InvalidItemPaxException.class, () -\u003e new AddItemCommand(\"Towels / abc\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":97,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":98,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":99,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":100,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_EmptyItemName_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":101,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(EmptyItemNameException.class, () -\u003e new AddItemCommand(\"/ 30\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":102,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(EmptyItemNameException.class, () -\u003e new AddItemCommand(\"  / 30\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":103,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":104,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":105,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":106,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_EmptyItemNameAndPax_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":107,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e new AddItemCommand(\"\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":108,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e new AddItemCommand(\"\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":109,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":110,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":111,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":112,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_DuplicateItem_exceptionThrown() throws HotelLiteManagerException {","lastModifiedDate":"2022-04-10"},{"lineNumber":113,"author":{"gitId":"siewyangzhi"},"content":"        AddItemCommand addItemPaxCommand \u003d new AddItemCommand(\"Toilet Paper / 50\");","lastModifiedDate":"2022-04-10"},{"lineNumber":114,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(ItemAlreadyInListException.class, () -\u003e addItemPaxCommand.execute(listContainer, ui));","lastModifiedDate":"2022-04-10"},{"lineNumber":115,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":116,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":117,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":118,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_AddItemCommandWithinItemNameOrPax_exceptionThrown()  {","lastModifiedDate":"2022-04-10"},{"lineNumber":119,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(DuplicateCommandException.class, () -\u003e new AddItemCommand(\"add item / 15\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":120,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(DuplicateCommandException.class, () -\u003e new AddItemCommand(\"Toilet Roll / add item\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":121,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":122,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"siewyangzhi":122}},{"path":"src/test/java/seedu/duke/AddSatisfactionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"import seedu.duke.command.customercommands.AddSatisfactionCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.EmptySatisfactionValueException;","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.EmptySatisfactionCustomerException;","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidSatisfactionValueException;","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidSatisfactionCustomerNameException;","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidCommandException;","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.DuplicateCommandException;","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.satisfactionlists.Satisfaction;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"import seedu.duke.satisfactionlists.SatisfactionList;","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"public class AddSatisfactionCommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"    private ListContainer listContainer;","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"    private Ui ui;","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"    private static final int INDEX_OF_FRED \u003d 0;","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"    private static final int INDEX_OF_ANGELA \u003d 0;","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"    private static final int INDEX_OF_STEVE \u003d 0;","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"    //Sets up the pretesting environment by creating an empty SatisfactionList","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"    public void pretestingSetUp() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"        listContainer \u003d new ListContainer();","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"        SatisfactionList satisfactionList \u003d listContainer.getSatisfactionList();","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"        satisfactionList.clearSatisfactionList();","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"    public void execute_NonEmptyCustomerNameAndRating_success() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"        AddSatisfactionCommand addSatisfactionCommand \u003d new AddSatisfactionCommand(\"Fred / 3\");","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"        addSatisfactionCommand.execute(listContainer, ui);","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"        SatisfactionList satisfactionList \u003d listContainer.getSatisfactionList();","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"        Satisfaction satisfaction \u003d satisfactionList.getSatisfaction(INDEX_OF_FRED);","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"        assertEquals(\"fred\", satisfaction.getCustomerName());","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"        assertEquals(3, satisfaction.getSatisfactionValue());","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"        satisfactionList.clearSatisfactionList();","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"    public void execute_satisfactionValueWithUpperBoundaryValue_success() throws HotelLiteManagerException,","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"            IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"        AddSatisfactionCommand addSatisfactionCommand \u003d new AddSatisfactionCommand(\"Angela / 5\");","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"zhenster"},"content":"        addSatisfactionCommand.execute(listContainer, ui);","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"zhenster"},"content":"        SatisfactionList satisfactionList \u003d listContainer.getSatisfactionList();","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"zhenster"},"content":"        Satisfaction satisfaction \u003d satisfactionList.getSatisfaction(INDEX_OF_ANGELA);","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"zhenster"},"content":"        assertEquals(\"angela\", satisfaction.getCustomerName());","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"zhenster"},"content":"        assertEquals(5, satisfaction.getSatisfactionValue());","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"zhenster"},"content":"        satisfactionList.clearSatisfactionList();","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"    public void execute_satisfactionValueWithLowerBoundaryValue_success() throws HotelLiteManagerException,","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"            IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"zhenster"},"content":"        AddSatisfactionCommand addSatisfactionCommand \u003d new AddSatisfactionCommand(\"Steve / 5\");","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"zhenster"},"content":"        addSatisfactionCommand.execute(listContainer, ui);","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"zhenster"},"content":"        SatisfactionList satisfactionList \u003d listContainer.getSatisfactionList();","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"zhenster"},"content":"        Satisfaction satisfaction \u003d satisfactionList.getSatisfaction(INDEX_OF_STEVE);","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"zhenster"},"content":"        assertEquals(\"steve\", satisfaction.getCustomerName());","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"zhenster"},"content":"        assertEquals(5, satisfaction.getSatisfactionValue());","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"zhenster"},"content":"        satisfactionList.clearSatisfactionList();","lastModifiedDate":"2022-04-11"},{"lineNumber":72,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":73,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":74,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"zhenster"},"content":"    public void commandParser_addCommandWithEmptySatisfactionCustomer_exceptionThrown() {","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"zhenster"},"content":"        assertThrows(EmptySatisfactionCustomerException.class, ()","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"zhenster"},"content":"            -\u003e new CommandParser().parse(\"add satisfaction / 4\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"zhenster"},"content":"    public void commandParser_addCommandWithEmptySatisfactionValue_exceptionThrown() {","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"zhenster"},"content":"        assertThrows(EmptySatisfactionValueException.class, ()","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"zhenster"},"content":"            -\u003e new CommandParser().parse(\"add satisfaction Bob / \"));","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"zhenster"},"content":"    public void commandParser_addCommandWithNoSlash_exceptionThrown() {","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"zhenster"},"content":"        assertThrows(InvalidCommandException.class, ()","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"zhenster"},"content":"            -\u003e new CommandParser().parse(\"add satisfaction Bob 5\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"zhenster"},"content":"    public void commandParser_addCommandWithNegativeSatisfactionValue_exceptionThrown() {","lastModifiedDate":"2022-04-11"},{"lineNumber":94,"author":{"gitId":"zhenster"},"content":"        assertThrows(InvalidSatisfactionValueException.class, ()","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"zhenster"},"content":"            -\u003e new CommandParser().parse(\"add satisfaction Joe / -1\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":99,"author":{"gitId":"zhenster"},"content":"    public void commandParser_addCommandWithTooHighSatisfactionValue_exceptionThrown() {","lastModifiedDate":"2022-04-11"},{"lineNumber":100,"author":{"gitId":"zhenster"},"content":"        assertThrows(InvalidSatisfactionValueException.class, ()","lastModifiedDate":"2022-04-11"},{"lineNumber":101,"author":{"gitId":"zhenster"},"content":"            -\u003e new CommandParser().parse(\"add satisfaction Joe / 6\"));","lastModifiedDate":"2022-04-11"},{"lineNumber":102,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":103,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":104,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":105,"author":{"gitId":"zhenster"},"content":"    public void commandParser_addCommandWithTooManySlashes_exceptionThrown() {","lastModifiedDate":"2022-04-11"},{"lineNumber":106,"author":{"gitId":"zhenster"},"content":"        assertThrows(InvalidCommandException.class, ()","lastModifiedDate":"2022-04-11"},{"lineNumber":107,"author":{"gitId":"zhenster"},"content":"            -\u003e new CommandParser().parse(\"add satisfaction Joe / 3 / 3\"));","lastModifiedDate":"2022-04-11"},{"lineNumber":108,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":109,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":110,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":111,"author":{"gitId":"zhenster"},"content":"    public void commandParser_addCommandWithDuplicateCommands_exceptionThrown() {","lastModifiedDate":"2022-04-11"},{"lineNumber":112,"author":{"gitId":"zhenster"},"content":"        assertThrows(DuplicateCommandException.class, ()","lastModifiedDate":"2022-04-11"},{"lineNumber":113,"author":{"gitId":"zhenster"},"content":"            -\u003e new CommandParser().parse(\"add satisfaction add satisfaction Joe / 3\"));","lastModifiedDate":"2022-04-11"},{"lineNumber":114,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":115,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":116,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":117,"author":{"gitId":"zhenster"},"content":"    public void commandParser_addCommandWithInvalidCustomerName_exceptionThrown() {","lastModifiedDate":"2022-04-11"},{"lineNumber":118,"author":{"gitId":"zhenster"},"content":"        assertThrows(InvalidSatisfactionCustomerNameException.class, ()","lastModifiedDate":"2022-04-11"},{"lineNumber":119,"author":{"gitId":"zhenster"},"content":"            -\u003e new CommandParser().parse(\"add satisfaction Joe 3213 / 3\"));","lastModifiedDate":"2022-04-11"},{"lineNumber":120,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":121,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":122,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"zhenster":121,"FaliciaOng":1,"siewyangzhi":1}},{"path":"src/test/java/seedu/duke/AgeIncreaseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-04-10"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-10"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.housekeepercommands.AgeIncreaseCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.InvalidNewYearException;","lastModifiedDate":"2022-04-10"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.Housekeeper;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.HousekeeperList;","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"public class AgeIncreaseTest {","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"    private ListContainer listContainer;","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"    private static final int INDEX_OF_MAN_EXCEEDING_AGE \u003d 0;","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"    private static final int INDEX_OF_SALLY \u003d 1;","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"    private static final int INDEX_OF_JAMES \u003d 0;","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"    public void pretestingSetUp() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"        listContainer \u003d new ListContainer();","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeperJame \u003d new Housekeeper(\"James\", 22);","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.addHousekeeperInList(housekeeperJame);","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeperSally \u003d new Housekeeper(\"Sally\", 30);","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.addHousekeeperInList(housekeeperSally);","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeperMan \u003d new Housekeeper(\"Man\", 60);","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.addHousekeeperInList(housekeeperMan);","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"    public void addAvailability_success() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"        AgeIncreaseCommand ageIncreaseCommand \u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"                new AgeIncreaseCommand(\"is a new year\");","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"        ageIncreaseCommand.execute(listContainer, ui);","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeperSally \u003d housekeeperList.getHousekeeper(INDEX_OF_SALLY);","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeperJames \u003d housekeeperList.getHousekeeper(INDEX_OF_JAMES);","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(31, housekeeperSally.getAge());","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(23, housekeeperJames.getAge());","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"        ArrayList\u003cHousekeeper\u003e exceedAgeLimit \u003d housekeeperList.getHousekeeperExceedValidAgeList();","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(\"Man\", exceedAgeLimit.get(INDEX_OF_MAN_EXCEEDING_AGE).getName());","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":52,"author":{"gitId":"FaliciaOng"},"content":"    public void extraWordIncreaseAgeCommand_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(InvalidNewYearException.class, () -\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"FaliciaOng"},"content":"                new CommandParser().parse(\"is a new year hello  \"));","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"FaliciaOng":56}},{"path":"src/test/java/seedu/duke/AssignHousekeeperTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aiman-imtiaz"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"aiman-imtiaz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"aiman-imtiaz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"aiman-imtiaz"},"content":"import seedu.duke.command.assigncommand.AssignHousekeeperCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.housekeepercommands.AddHousekeeperCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.command.roomcommand.CheckInCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.roomlists.Room;","lastModifiedDate":"2022-04-02"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.roomlists.RoomList;","lastModifiedDate":"2022-04-02"},{"lineNumber":12,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"aiman-imtiaz"},"content":"public class AssignHousekeeperTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"aiman-imtiaz"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"aiman-imtiaz"},"content":"    public void commandParser_addCommandNameAvailability_success() throws Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"        ListContainer listContainer \u003d new ListContainer();","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"aiman-imtiaz"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"aiman-imtiaz"},"content":"        String inputCommand \u003d \"301\";","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"aiman-imtiaz"},"content":"        CheckInCommand checkInCommand \u003d new CheckInCommand(inputCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"        checkInCommand.execute(listContainer, ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"        RoomList inputRoomList \u003d listContainer.getRoomList();","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"aiman-imtiaz"},"content":"        Room expectedRoom \u003d null;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"aiman-imtiaz"},"content":"        for (Room room : inputRoomList.getRoomList()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"aiman-imtiaz"},"content":"            if (room.getRoomId() \u003d\u003d 301) {","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"aiman-imtiaz"},"content":"                expectedRoom \u003d room;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"aiman-imtiaz"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"aiman-imtiaz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"aiman-imtiaz"},"content":"        CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"        Command command1 \u003d parser.parse(\"add housekeeper Susan / 23\");","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"aiman-imtiaz"},"content":"        AddHousekeeperCommand addHousekeeperCommand \u003d (AddHousekeeperCommand) command1;","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"aiman-imtiaz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"aiman-imtiaz"},"content":"        Command command \u003d parser.parse(\"Assign Susan / 301\");","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"aiman-imtiaz"},"content":"        AssignHousekeeperCommand assignHousekeeperCommand \u003d (AssignHousekeeperCommand) command;","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"aiman-imtiaz"},"content":"        assertEquals(\"301\", assignHousekeeperCommand.getroomID());","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(\"susan\", assignHousekeeperCommand.getName());","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"aiman-imtiaz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"aiman-imtiaz"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"aiman-imtiaz":31,"FaliciaOng":2,"XunyiiZ":6,"siewyangzhi":2}},{"path":"src/test/java/seedu/duke/CheckByCategoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.command.roomcommand.CheckRoomByCatCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.exceptions.InvalidCategoryException;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"public class CheckByCategoryTest {","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"    private ListContainer listContainer;","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"    private static final int INDEX_OF_204 \u003d 6;","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"    private static final int INDEX_OF_301 \u003d 7;","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"    public void pretestingSetUp() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"        listContainer \u003d new ListContainer();","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"    public void execute_validCategory_success() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"        CommandParser commandParser \u003d new CommandParser();","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"        Command cmd \u003d commandParser.parse(\"check category queen\");","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"        assertEquals(\"Queen\",listContainer.getRoomList().getRoomList().get(INDEX_OF_204).getType().toString());","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"XunyiiZ"},"content":"        assertEquals(\"Queen\",listContainer.getRoomList().getRoomList().get(INDEX_OF_301).getType().toString());","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"XunyiiZ"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"XunyiiZ"},"content":"    public void execute_invalidCategory_exceptionThrown() throws HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"XunyiiZ"},"content":"        assertThrows(InvalidCategoryException.class,() -\u003e new CheckRoomByCatCommand(\"abc\"));","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"XunyiiZ":39}},{"path":"src/test/java/seedu/duke/CheckInCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.command.roomcommand.CheckInCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.command.roomcommand.CheckOutCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidRoomNumberException;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.exceptions.RoomAlrOccupiedException;","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.exceptions.RoomAlrVacantException;","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.roomlists.Room;","lastModifiedDate":"2022-04-02"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.roomlists.RoomList;","lastModifiedDate":"2022-04-02"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"class CheckInCommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"    private ListContainer listContainer;","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"    private static final int INDEX_OF_201 \u003d 3;","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"    public void pretestingSetUp() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"        listContainer \u003d new ListContainer();","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"XunyiiZ"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"XunyiiZ"},"content":"    public void commandParser_CheckInRoomVacant_RoomBeingOccupied() throws Exception {","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"XunyiiZ"},"content":"        CommandParser commandParser \u003d new CommandParser();","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"XunyiiZ"},"content":"        Command command2 \u003d commandParser.parse(\"check in 201\");","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"XunyiiZ"},"content":"        command2.execute(listContainer, ui);","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"XunyiiZ"},"content":"        assertEquals(false, listContainer.getRoomList().getRoomList().get(INDEX_OF_201).getIsVacant());","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"XunyiiZ"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"XunyiiZ"},"content":"    public void commandParser_CheckInRoomOccupied_ExceptionThrown() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"XunyiiZ"},"content":"        CheckInCommand checkInCommand1 \u003d new CheckInCommand(\"202\");","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"XunyiiZ"},"content":"        checkInCommand1.execute(listContainer,ui);","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"XunyiiZ"},"content":"        CheckInCommand checkInCommand2 \u003d new CheckInCommand(\"202\");","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"XunyiiZ"},"content":"        assertThrows(RoomAlrOccupiedException.class, () -\u003e checkInCommand2.execute(listContainer, ui));","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"XunyiiZ"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"XunyiiZ"},"content":"    public void execute_CheckInRoomNotExist_ExceptionThrown() throws HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"XunyiiZ"},"content":"        CheckInCommand checkInCommand \u003d new CheckInCommand(\"105\");","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"XunyiiZ"},"content":"        assertThrows(InvalidRoomNumberException.class, () -\u003e checkInCommand.execute(listContainer, ui));","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"XunyiiZ"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"XunyiiZ"},"content":"    public void execute_CheckInRoomNotNumber_ExceptionThrown() throws HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"XunyiiZ"},"content":"        assertThrows(InvalidRoomNumberException.class, () -\u003e new CheckInCommand(\"abc\"));","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zhenster":2,"XunyiiZ":56}},{"path":"src/test/java/seedu/duke/CheckLevelTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.command.roomcommand.CheckRoomByLevelCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.exceptions.InvalidLevelException;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"public class CheckLevelTest {","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"    private ListContainer listContainer;","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"    public void pretestingSetUp() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"        listContainer \u003d new ListContainer();","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"    public void execute_invalidLevel_exceptionThrown() throws HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"        CheckRoomByLevelCommand checkRoomByLevelCommand1 \u003d new CheckRoomByLevelCommand(\"0\");","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"        CheckRoomByLevelCommand checkRoomByLevelCommand2 \u003d new CheckRoomByLevelCommand(\"5\");","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"        assertThrows(InvalidLevelException.class,() -\u003e checkRoomByLevelCommand1.execute(listContainer,ui));","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"        assertThrows(InvalidLevelException.class,() -\u003e checkRoomByLevelCommand2.execute(listContainer,ui));","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"XunyiiZ":31}},{"path":"src/test/java/seedu/duke/CheckOutCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.command.roomcommand.CheckOutCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.exceptions.InvalidRoomNumberException;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.exceptions.RoomAlrVacantException;","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"public class CheckOutCommandTest {","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"    private ListContainer listContainer;","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"    private static final int INDEX_OF_201 \u003d 3;","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"    public void pretestingSetUp() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"        listContainer \u003d new ListContainer();","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"    public void commandParser_CheckOutRoomOccupied_success() throws Exception {","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"        CommandParser commandParser \u003d new CommandParser();","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"XunyiiZ"},"content":"        Command command1 \u003d commandParser.parse(\"check in 201\");","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"XunyiiZ"},"content":"        command1.execute(listContainer, ui);","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"XunyiiZ"},"content":"        Command command2 \u003d commandParser.parse(\"check out 201\");","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"XunyiiZ"},"content":"        command2.execute(listContainer, ui);","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"XunyiiZ"},"content":"        assertEquals(true, listContainer.getRoomList().getRoomList().get(INDEX_OF_201).getIsVacant());","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"XunyiiZ"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"XunyiiZ"},"content":"    public void commandParser_CheckOutRoomVacant_ExceptionThrown() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"XunyiiZ"},"content":"        CheckOutCommand checkOutCommand \u003d new CheckOutCommand(\"202\");","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"XunyiiZ"},"content":"        assertThrows(RoomAlrVacantException.class, () -\u003e checkOutCommand.execute(listContainer, ui));","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"XunyiiZ"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"XunyiiZ"},"content":"    public void execute_CheckOutRoomNotExist_ExceptionThrown() throws HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"XunyiiZ"},"content":"        CheckOutCommand checkOutCommand \u003d new CheckOutCommand(\"105\");","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"XunyiiZ"},"content":"        assertThrows(InvalidRoomNumberException.class, () -\u003e checkOutCommand.execute(listContainer, ui));","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"XunyiiZ"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"XunyiiZ"},"content":"    public void execute_CheckOutRoomNotNumber_ExceptionThrown() throws HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"XunyiiZ"},"content":"        assertThrows(InvalidRoomNumberException.class, () -\u003e new CheckOutCommand(\"abc\"));","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"XunyiiZ":56}},{"path":"src/test/java/seedu/duke/CheckRoomTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XunyiiZ"},"content":"package seedu.duke;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"XunyiiZ"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"XunyiiZ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.command.roomcommand.CheckOutCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.command.roomcommand.CheckRoomCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.exceptions.InvalidRoomNumberException;","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"XunyiiZ"},"content":"import seedu.duke.exceptions.RoomAlrVacantException;","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"XunyiiZ"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"XunyiiZ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"XunyiiZ"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"XunyiiZ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"XunyiiZ"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"XunyiiZ"},"content":"public class CheckRoomTest {","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"XunyiiZ"},"content":"    private ListContainer listContainer;","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"XunyiiZ"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"XunyiiZ"},"content":"    public void pretestingSetUp() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"XunyiiZ"},"content":"        listContainer \u003d new ListContainer();","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"XunyiiZ"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"XunyiiZ"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"XunyiiZ"},"content":"    public void execute_CheckRoomNotExist_ExceptionThrown() throws HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"XunyiiZ"},"content":"        CheckRoomCommand checkRoomCommand \u003d new CheckRoomCommand(\"105\");","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"XunyiiZ"},"content":"        assertThrows(InvalidRoomNumberException.class, () -\u003e checkRoomCommand.execute(listContainer, ui));","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"XunyiiZ"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"XunyiiZ"},"content":"    public void execute_CheckOutRoomNotNumber_ExceptionThrown() throws HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"XunyiiZ"},"content":"        assertThrows(InvalidRoomNumberException.class, () -\u003e new CheckRoomCommand(\"abc\"));","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"XunyiiZ"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"XunyiiZ"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"XunyiiZ":39}},{"path":"src/test/java/seedu/duke/DeleteHousekeeperTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-04-10"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-10"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-04-10"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.housekeepercommands.AgeIncreaseCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.housekeepercommands.DeleteHousekeeperCommand;","lastModifiedDate":"2022-04-10"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.EmptyNameException;","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.DuplicateCommandException;","lastModifiedDate":"2022-04-10"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.UserDoesNotExistException;","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.Housekeeper;","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.HousekeeperList;","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"XunyiiZ"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"public class DeleteHousekeeperTest {","lastModifiedDate":"2022-04-10"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"    private ListContainer listContainer;","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"    public void pretestingSetUp() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"        listContainer \u003d new ListContainer();","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeperJame \u003d new Housekeeper(\"James\", 22);","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.addHousekeeperInList(housekeeperJame);","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeperSally \u003d new Housekeeper(\"Sally\", 30);","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.addHousekeeperInList(housekeeperSally);","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeperMan \u003d new Housekeeper(\"Man\", 60);","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.addHousekeeperInList(housekeeperMan);","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"    public void deleteHousekeeper_success() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"        DeleteHousekeeperCommand deleteHousekeeperCommand \u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"                new DeleteHousekeeperCommand(\"Man\");","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"        deleteHousekeeperCommand.execute(listContainer, ui);","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(2, housekeeperList.getTotalHousekeeper());","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"FaliciaOng"},"content":"    public void deleteHousekeeperNameDoesNotExist_exceptionThrown() throws HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"FaliciaOng"},"content":"        DeleteHousekeeperCommand deleteHousekeeperCommand \u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"FaliciaOng"},"content":"                new DeleteHousekeeperCommand(\"jerry\");","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(UserDoesNotExistException.class, () -\u003e deleteHousekeeperCommand.execute(listContainer, ui));","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_DeleteCommandName_success() throws Exception {","lastModifiedDate":"2022-04-10"},{"lineNumber":58,"author":{"gitId":"FaliciaOng"},"content":"        CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2022-04-10"},{"lineNumber":59,"author":{"gitId":"FaliciaOng"},"content":"        Command command \u003d parser.parse(\"delete housekeeper Susan\");","lastModifiedDate":"2022-04-10"},{"lineNumber":60,"author":{"gitId":"FaliciaOng"},"content":"        DeleteHousekeeperCommand deleteHousekeeperCommand \u003d (DeleteHousekeeperCommand) command;","lastModifiedDate":"2022-04-10"},{"lineNumber":61,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(\"susan\", deleteHousekeeperCommand.getName());","lastModifiedDate":"2022-04-10"},{"lineNumber":62,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":63,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":64,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":65,"author":{"gitId":"FaliciaOng"},"content":"    public void emptyName_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":66,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(EmptyNameException.class, () -\u003e new CommandParser().parse(\"Delete Housekeeper \"));","lastModifiedDate":"2022-04-10"},{"lineNumber":67,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":68,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":69,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":70,"author":{"gitId":"FaliciaOng"},"content":"    public void duplicateCommand_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":71,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(DuplicateCommandException.class, () -\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":72,"author":{"gitId":"FaliciaOng"},"content":"                new CommandParser().parse(\"Delete Housekeeper delete housekeeper \"));","lastModifiedDate":"2022-04-10"},{"lineNumber":73,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":74,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":75,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"FaliciaOng":74,"XunyiiZ":1}},{"path":"src/test/java/seedu/duke/DeleteItemCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-04-10"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-10"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-10"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.itemcommands.DeleteItemCommand;","lastModifiedDate":"2022-04-10"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.EmptyItemNameException;","lastModifiedDate":"2022-04-10"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.InvalidItemNameException;","lastModifiedDate":"2022-04-10"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.ItemNotFoundException;","lastModifiedDate":"2022-04-10"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.DuplicateCommandException;","lastModifiedDate":"2022-04-10"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.itemlists.Item;","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.itemlists.ItemList;","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"public class DeleteItemCommandTest {","lastModifiedDate":"2022-04-10"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"    private ListContainer listContainer;","lastModifiedDate":"2022-04-10"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-10"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"    //Sets up the pretesting environment by creating an ItemList with 2 items and its corresponding pax.","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"    public void pretestingSetUp() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"        listContainer \u003d new ListContainer();","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"        ItemList itemList \u003d listContainer.getItemList();","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"        Item testItemToiletPaper \u003d new Item(\"Toilet Paper\", 15);","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"        itemList.addItemToList(testItemToiletPaper);","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"        Item testItemSofa \u003d new Item(\"Sofa\", 30);","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"        itemList.addItemToList(testItemSofa);","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_NonEmptyItemName_success() throws HotelLiteManagerException {","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"        DeleteItemCommand itemNameCommand \u003d new DeleteItemCommand(\"Toilet Paper\");","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"        itemNameCommand.execute(listContainer, ui);","lastModifiedDate":"2022-04-10"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"        ItemList itemList \u003d listContainer.getItemList();","lastModifiedDate":"2022-04-10"},{"lineNumber":42,"author":{"gitId":"siewyangzhi"},"content":"        ItemList listOfMatchingItem \u003d itemList.findItemsInList(\"Toilet Paper\");","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(0, listOfMatchingItem.getSize());","lastModifiedDate":"2022-04-10"},{"lineNumber":44,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_EmptyItemName_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(EmptyItemNameException.class, () -\u003e new DeleteItemCommand(\"\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":50,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":51,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":52,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_ItemNameOfANonExistentItem_exceptionThrown() throws HotelLiteManagerException {","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"siewyangzhi"},"content":"        DeleteItemCommand itemNameCommand \u003d new DeleteItemCommand(\"Table\");","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e itemNameCommand.execute(listContainer, ui));","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":58,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_ItemNameWithInvalidSymbols_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":59,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(InvalidItemNameException.class, () -\u003e new DeleteItemCommand(\"{1,/0\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":60,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":61,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":62,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":63,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_DeleteItemCommandWithinItemNameOrPax_exceptionThrown()  {","lastModifiedDate":"2022-04-10"},{"lineNumber":64,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(DuplicateCommandException.class, () -\u003e new DeleteItemCommand(\"delete item\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":65,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":66,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"siewyangzhi":66}},{"path":"src/test/java/seedu/duke/DukeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.itemlists.Item;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.itemcommands.AddItemCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.EmptyItemNameException;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.EmptyItemPaxException;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidCommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"class DukeTest {","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"    public void commandParser_addCommandWithNonEmptyItemNameAndPax_success() throws Exception {","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"        CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"        Command command \u003d parser.parse(\"Add Item Toilet Roll / 5\");","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"        AddItemCommand addItemCommand \u003d (AddItemCommand) command;","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d addItemCommand.getItem();","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(\"toilet roll\", item.getName());","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(5, item.getPax());","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"    public void commandParser_addCommandWithEmptyItemName_exceptionThrown() {","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(EmptyItemNameException.class, () -\u003e new CommandParser().parse(\"Add Item /5\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"    public void commandParser_addCommandWithEmptyItemPax_exceptionThrown() {","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(EmptyItemPaxException.class, () -\u003e new CommandParser().parse(\"Add Item Toilet Roll /\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"    public void commandParser_addCommandWithEmptyItemNameAndPax_exceptionThrown() {","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e new CommandParser().parse(\"Add Item \"));","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_addCommandInvalidView_exceptionThrown() {","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e new CommandParser().parse(\"ViewRecorded Housekeeper\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"    public void commandParser_addCommandInvalidViewAverageSatisfaction_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"zhenster"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e new CommandParser().parse(\"View \"","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"zhenster"},"content":"                + \"average satisfaction blah\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"zhenster":8,"FaliciaOng":6,"siewyangzhi":31,"-":12}},{"path":"src/test/java/seedu/duke/GetAvailabilityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-04-10"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-10"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-04-10"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.housekeepercommands.AgeIncreaseCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.housekeepercommands.GetAvailableHousekeeperCommand;","lastModifiedDate":"2022-04-10"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.DuplicateCommandException;","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.EmptyDayException;","lastModifiedDate":"2022-04-10"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.InvalidDayException;","lastModifiedDate":"2022-04-10"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.Housekeeper;","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.HousekeeperList;","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"public class GetAvailabilityTest {","lastModifiedDate":"2022-04-10"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"    private ListContainer listContainer;","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"    private static final int INDEX_OF_MAN_AVAILABLE_ON_TWO \u003d 1;","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"    private static final int INDEX_OF_SALLY_AVAILABLE_ON_TWO \u003d 0;","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"    private static final int DAY_TWO_AVAILABILITY \u003d 2;","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"    public void pretestingSetUp() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"        listContainer \u003d new ListContainer();","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeperJame \u003d new Housekeeper(\"James\", 22);","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.addHousekeeperInList(housekeeperJame);","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeperSally \u003d new Housekeeper(\"Sally\", 30);","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.addHousekeeperInList(housekeeperSally);","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeperMan \u003d new Housekeeper(\"Man\", 60);","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.addHousekeeperInList(housekeeperMan);","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperJame.setAvailability(\"1,7,3\");","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperSally.setAvailability(\"5,2,7\");","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperMan.setAvailability(\"2,3\");","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"    public void getAvailability_success() throws HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"        ArrayList\u003cHousekeeper\u003e listOfHousekeeperAvailable \u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"FaliciaOng"},"content":"                housekeeperList.getAvailableHousekeeperByDay(DAY_TWO_AVAILABILITY);","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(\"Man\", listOfHousekeeperAvailable.get(INDEX_OF_MAN_AVAILABLE_ON_TWO).getName());","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(\"Sally\", listOfHousekeeperAvailable.get(INDEX_OF_SALLY_AVAILABLE_ON_TWO).getName());","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"FaliciaOng"},"content":"    public void commandParser_getAvailable_success() throws Exception {","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"FaliciaOng"},"content":"        CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"FaliciaOng"},"content":"        Command command \u003d parser.parse(\"get available on 1\");","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"        GetAvailableHousekeeperCommand getAvailableHousekeeperCommand \u003d (GetAvailableHousekeeperCommand) command;","lastModifiedDate":"2022-04-10"},{"lineNumber":58,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(1, getAvailableHousekeeperCommand.getSearchDay());","lastModifiedDate":"2022-04-10"},{"lineNumber":59,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":60,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":61,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":62,"author":{"gitId":"FaliciaOng"},"content":"    public void duplicateAvailableDayCommand_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":63,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(DuplicateCommandException.class, () -\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":64,"author":{"gitId":"FaliciaOng"},"content":"                new CommandParser().parse(\"get available on get available on  \"));","lastModifiedDate":"2022-04-10"},{"lineNumber":65,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":66,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":67,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":68,"author":{"gitId":"FaliciaOng"},"content":"    public void emptyDay_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":69,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(EmptyDayException.class, () -\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":70,"author":{"gitId":"FaliciaOng"},"content":"                new CommandParser().parse(\"get available on \"));","lastModifiedDate":"2022-04-10"},{"lineNumber":71,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":72,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":73,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":74,"author":{"gitId":"FaliciaOng"},"content":"    public void dayGivenNotInteger_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":75,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(InvalidDayException.class, () -\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":76,"author":{"gitId":"FaliciaOng"},"content":"                new CommandParser().parse(\"get available on x\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":77,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":78,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":79,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":80,"author":{"gitId":"FaliciaOng"},"content":"    public void dayGivenNotInLimitAboveBoundary_exceptionThrown() {","lastModifiedDate":"2022-04-11"},{"lineNumber":81,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(InvalidDayException.class, () -\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":82,"author":{"gitId":"FaliciaOng"},"content":"                new CommandParser().parse(\"get available on 100\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":83,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":84,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":85,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":86,"author":{"gitId":"FaliciaOng"},"content":"    public void dayGivenNotInLimitBelowBoundary_exceptionThrown() {","lastModifiedDate":"2022-04-11"},{"lineNumber":87,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(InvalidDayException.class, () -\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":88,"author":{"gitId":"FaliciaOng"},"content":"                new CommandParser().parse(\"get available on 0\"));","lastModifiedDate":"2022-04-11"},{"lineNumber":89,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":90,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"FaliciaOng":90}},{"path":"src/test/java/seedu/duke/ResetAvailabilityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-04-10"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-10"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"import org.w3c.dom.css.Rect;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.housekeepercommands.GetAvailableHousekeeperCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.housekeepercommands.ResetAvailabilityCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.InvalidNewWeekException;","lastModifiedDate":"2022-04-10"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.Housekeeper;","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.HousekeeperList;","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"FaliciaOng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"public class ResetAvailabilityTest {","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"    private ListContainer listContainer;","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"    private static final int INDEX_OF_MAN \u003d 2;","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"    private static final int INDEX_OF_SALLY \u003d 1;","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"    private static final int INDEX_OF_JAMES \u003d 0;","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"FaliciaOng"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"FaliciaOng"},"content":"    public void pretestingSetUp() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"FaliciaOng"},"content":"        listContainer \u003d new ListContainer();","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeperJame \u003d new Housekeeper(\"James\", 22);","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.addHousekeeperInList(housekeeperJame);","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeperSally \u003d new Housekeeper(\"Sally\", 30);","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.addHousekeeperInList(housekeeperSally);","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeperMan \u003d new Housekeeper(\"Man\", 60);","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.addHousekeeperInList(housekeeperMan);","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperJame.setAvailability(\"1,7,3\");","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperSally.setAvailability(\"5,2,7\");","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperMan.setAvailability(\"2,3\");","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"    public void resetAvailability_success() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"FaliciaOng"},"content":"        ResetAvailabilityCommand resetAvailabilityCommand \u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"FaliciaOng"},"content":"                new ResetAvailabilityCommand(\"is a new week\");","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"FaliciaOng"},"content":"        resetAvailabilityCommand.execute(listContainer, ui);","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(\"N/A\", housekeeperList.getHousekeeper(INDEX_OF_JAMES).getAvailability());","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(\"N/A\", housekeeperList.getHousekeeper(INDEX_OF_MAN).getAvailability());","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(\"N/A\", housekeeperList.getHousekeeper(INDEX_OF_SALLY).getAvailability());","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"FaliciaOng"},"content":"    public void extraWords_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(InvalidNewWeekException.class, () -\u003e new CommandParser().parse(\"is a new week yay \"));","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"FaliciaOng":57}},{"path":"src/test/java/seedu/duke/SearchItemCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-04-10"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-10"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-10"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.itemcommands.SearchItemCommand;","lastModifiedDate":"2022-04-10"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.DuplicateCommandException;","lastModifiedDate":"2022-04-10"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.EmptyKeywordException;","lastModifiedDate":"2022-04-10"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.itemlists.Item;","lastModifiedDate":"2022-04-10"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.itemlists.ItemList;","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"public class SearchItemCommandTest {","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"    private ListContainer listContainer;","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-04-10"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"    private static final int INDEX_OF_TOILET_PAPER \u003d 0;","lastModifiedDate":"2022-04-10"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"    //Sets up the pretesting environment by creating an ItemList with 2 items and its corresponding pax.","lastModifiedDate":"2022-04-10"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"    public void pretestingSetUp() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"        listContainer \u003d new ListContainer();","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"        ItemList itemList \u003d listContainer.getItemList();","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"        Item testItemToiletPaper \u003d new Item(\"Toilet Paper\", 15);","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"        itemList.addItemToList(testItemToiletPaper);","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"        Item testItemSofa \u003d new Item(\"Sofa\", 30);","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"        itemList.addItemToList(testItemSofa);","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_NonEmptyKeyword_success() throws HotelLiteManagerException {","lastModifiedDate":"2022-04-10"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"        SearchItemCommand itemNameCommand \u003d new SearchItemCommand(\"Toilet Paper\");","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"        itemNameCommand.execute(listContainer, ui);","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"        ItemList itemList \u003d listContainer.getItemList();","lastModifiedDate":"2022-04-10"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"        ItemList listOfMatchingItem \u003d itemList.findItemsInList(\"Toilet Paper\");","lastModifiedDate":"2022-04-10"},{"lineNumber":42,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d listOfMatchingItem.getItem(INDEX_OF_TOILET_PAPER);","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(\"Toilet Paper\", item.getName());","lastModifiedDate":"2022-04-10"},{"lineNumber":44,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_EmptyKeyword_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(EmptyKeywordException.class, () -\u003e new SearchItemCommand(\"\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":50,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":51,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":52,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_ItemNameOfANonExistentItem_success() throws HotelLiteManagerException {","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"siewyangzhi"},"content":"        SearchItemCommand itemNameCommand \u003d new SearchItemCommand(\"Table\");","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"siewyangzhi"},"content":"        ItemList itemList \u003d listContainer.getItemList();","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"siewyangzhi"},"content":"        String keyword \u003d itemNameCommand.getKeyword();","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"siewyangzhi"},"content":"        ItemList listOfMatchingItem \u003d itemList.findItemsInList(keyword);","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(0, listOfMatchingItem.getSize());","lastModifiedDate":"2022-04-10"},{"lineNumber":58,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":59,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":60,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":61,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_SearchItemCommandWithinItemNameOrPax_exceptionThrown()  {","lastModifiedDate":"2022-04-10"},{"lineNumber":62,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(DuplicateCommandException.class, () -\u003e new SearchItemCommand(\"search item\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":63,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":64,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":65,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"siewyangzhi":65}},{"path":"src/test/java/seedu/duke/UpdateItemNameCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-04-10"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-10"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-10"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.itemcommands.UpdateItemNameCommand;","lastModifiedDate":"2022-04-10"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-04-10"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.InvalidUpdateItemNameCommandException;","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.DuplicateItemNameException;","lastModifiedDate":"2022-04-10"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.InvalidItemNameException;","lastModifiedDate":"2022-04-10"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.ItemNotFoundException;","lastModifiedDate":"2022-04-10"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.ItemNameAlreadyInListException;","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.DuplicateCommandException;","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.itemlists.Item;","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.itemlists.ItemList;","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-04-10"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"public class UpdateItemNameCommandTest {","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"    private ListContainer listContainer;","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-04-10"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"    private static final int INDEX_OF_TOILET_PAPER \u003d 0;","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"    //Sets up the pretesting environment by creating an ItemList with 2 items and its corresponding pax.","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"    public void pretestingSetUp() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"        listContainer \u003d new ListContainer();","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"        ItemList itemList \u003d listContainer.getItemList();","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"        Item testItemToiletPaper \u003d new Item(\"Toilet Paper\", 15);","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"        itemList.addItemToList(testItemToiletPaper);","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"        Item testItemSofa \u003d new Item(\"Sofa\", 30);","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"        itemList.addItemToList(testItemSofa);","lastModifiedDate":"2022-04-10"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_NonEmptyItemNames_success() throws HotelLiteManagerException {","lastModifiedDate":"2022-04-10"},{"lineNumber":42,"author":{"gitId":"siewyangzhi"},"content":"        UpdateItemNameCommand itemNameCommand \u003d new UpdateItemNameCommand(\"Toilet Paper / Premium Toilet Paper\"","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"        );","lastModifiedDate":"2022-04-10"},{"lineNumber":44,"author":{"gitId":"siewyangzhi"},"content":"        itemNameCommand.execute(listContainer, ui);","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"siewyangzhi"},"content":"        ItemList itemList \u003d listContainer.getItemList();","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d itemList.getItem(INDEX_OF_TOILET_PAPER);","lastModifiedDate":"2022-04-10"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(\"Premium Toilet Paper\", item.getName());","lastModifiedDate":"2022-04-10"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":50,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":51,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_EmptyCurrentItemName_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":52,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(InvalidUpdateItemNameCommandException.class, () -\u003e new UpdateItemNameCommand(\"/ Premium \"","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"siewyangzhi"},"content":"                + \"Toilet Paper\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(InvalidUpdateItemNameCommandException.class, () -\u003e new UpdateItemNameCommand(\"   / Premium \"","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"siewyangzhi"},"content":"                + \"Toilet Paper\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":58,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":59,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_EmptyUpdatedItemName_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":60,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(InvalidUpdateItemNameCommandException.class, () -\u003e new UpdateItemNameCommand(\"Toilet \"","lastModifiedDate":"2022-04-10"},{"lineNumber":61,"author":{"gitId":"siewyangzhi"},"content":"                + \"Paper /\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":62,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(InvalidUpdateItemNameCommandException.class, () -\u003e new UpdateItemNameCommand(\"Toilet \"","lastModifiedDate":"2022-04-10"},{"lineNumber":63,"author":{"gitId":"siewyangzhi"},"content":"                + \"Paper /   \"));","lastModifiedDate":"2022-04-10"},{"lineNumber":64,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":65,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":66,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":67,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_EmptyCurrentAndUpdatedItemNames_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":68,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(InvalidUpdateItemNameCommandException.class, () -\u003e new UpdateItemNameCommand(\"\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":69,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":70,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":71,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":72,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_NewItemNameSameAsCurrentName_exceptionThrown() throws HotelLiteManagerException {","lastModifiedDate":"2022-04-10"},{"lineNumber":73,"author":{"gitId":"siewyangzhi"},"content":"        UpdateItemNameCommand updateItemNameCommand \u003d new UpdateItemNameCommand(\"Toilet Paper / Toilet Paper\");","lastModifiedDate":"2022-04-10"},{"lineNumber":74,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(DuplicateItemNameException.class, () -\u003e updateItemNameCommand.execute(listContainer, ui));","lastModifiedDate":"2022-04-10"},{"lineNumber":75,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":76,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":77,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":78,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_ItemNameWithInvalidSymbols_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":79,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(InvalidItemNameException.class, () -\u003e new UpdateItemNameCommand(\"{1,/0\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":80,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":81,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":82,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":83,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_ItemNameOfANonExistentItem_success() throws HotelLiteManagerException {","lastModifiedDate":"2022-04-10"},{"lineNumber":84,"author":{"gitId":"siewyangzhi"},"content":"        UpdateItemNameCommand itemNameCommand \u003d new UpdateItemNameCommand(\"Table / New Table\");","lastModifiedDate":"2022-04-10"},{"lineNumber":85,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e itemNameCommand.execute(listContainer, ui));","lastModifiedDate":"2022-04-10"},{"lineNumber":86,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":87,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":88,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":89,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_NewItemNameAlreadyFoundInItemList_success() throws HotelLiteManagerException {","lastModifiedDate":"2022-04-10"},{"lineNumber":90,"author":{"gitId":"siewyangzhi"},"content":"        UpdateItemNameCommand itemNameCommand \u003d new UpdateItemNameCommand(\"Sofa / Toilet Paper\");","lastModifiedDate":"2022-04-10"},{"lineNumber":91,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(ItemNameAlreadyInListException.class, () -\u003e itemNameCommand.execute(listContainer, ui));","lastModifiedDate":"2022-04-10"},{"lineNumber":92,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":93,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":94,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":95,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_UpdateItemNameCommandWithinItemNameOrPax_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":96,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(DuplicateCommandException.class, () -\u003e new UpdateItemNameCommand(\"update item name / \"","lastModifiedDate":"2022-04-10"},{"lineNumber":97,"author":{"gitId":"siewyangzhi"},"content":"                + \"Premium Toilet Roll\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":98,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(DuplicateCommandException.class, () -\u003e new UpdateItemNameCommand(\"Toilet Roll / update \"","lastModifiedDate":"2022-04-10"},{"lineNumber":99,"author":{"gitId":"siewyangzhi"},"content":"                + \"item name\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":100,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":101,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":102,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"siewyangzhi":102}},{"path":"src/test/java/seedu/duke/UpdateItemPaxCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"siewyangzhi"},"content":"package seedu.duke;","lastModifiedDate":"2022-04-10"},{"lineNumber":2,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":3,"author":{"gitId":"siewyangzhi"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-10"},{"lineNumber":4,"author":{"gitId":"siewyangzhi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-10"},{"lineNumber":5,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.command.itemcommands.UpdateItemPaxCommand;","lastModifiedDate":"2022-04-10"},{"lineNumber":6,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":7,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-04-10"},{"lineNumber":8,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.EmptyItemPaxException;","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.InvalidItemPaxException;","lastModifiedDate":"2022-04-10"},{"lineNumber":10,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.InvalidItemNameException;","lastModifiedDate":"2022-04-10"},{"lineNumber":11,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.ItemNotFoundException;","lastModifiedDate":"2022-04-10"},{"lineNumber":12,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.NewItemPaxSameAsCurrentPaxException;","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.EmptyItemNameException;","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.InvalidUpdateItemPaxCommandException;","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.exceptions.DuplicateCommandException;","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.itemlists.Item;","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"siewyangzhi"},"content":"import seedu.duke.itemlists.ItemList;","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"siewyangzhi"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":22,"author":{"gitId":"siewyangzhi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-10"},{"lineNumber":23,"author":{"gitId":"siewyangzhi"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"siewyangzhi"},"content":"public class UpdateItemPaxCommandTest {","lastModifiedDate":"2022-04-10"},{"lineNumber":26,"author":{"gitId":"siewyangzhi"},"content":"    private ListContainer listContainer;","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"siewyangzhi"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"siewyangzhi"},"content":"    private static final int INDEX_OF_TOILET_PAPER \u003d 0;","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"siewyangzhi"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"siewyangzhi"},"content":"    //Sets up the pretesting environment by creating an ItemList with 2 items and its corresponding pax.","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"siewyangzhi"},"content":"    public void pretestingSetUp() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"siewyangzhi"},"content":"        listContainer \u003d new ListContainer();","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"siewyangzhi"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"siewyangzhi"},"content":"        ItemList itemList \u003d listContainer.getItemList();","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"siewyangzhi"},"content":"        Item testItemToiletPaper \u003d new Item(\"Toilet Paper\", 15);","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"siewyangzhi"},"content":"        itemList.addItemToList(testItemToiletPaper);","lastModifiedDate":"2022-04-10"},{"lineNumber":38,"author":{"gitId":"siewyangzhi"},"content":"        Item testItemSofa \u003d new Item(\"Sofa\", 30);","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"siewyangzhi"},"content":"        itemList.addItemToList(testItemSofa);","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":41,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":42,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_NonEmptyItemNameAndPax_success() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-10"},{"lineNumber":44,"author":{"gitId":"siewyangzhi"},"content":"        UpdateItemPaxCommand updateItemPaxCommand \u003d new UpdateItemPaxCommand(\"Toilet Paper / 30\");","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"siewyangzhi"},"content":"        updateItemPaxCommand.execute(listContainer, ui);","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"siewyangzhi"},"content":"        ItemList itemList \u003d listContainer.getItemList();","lastModifiedDate":"2022-04-10"},{"lineNumber":47,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d itemList.getItem(INDEX_OF_TOILET_PAPER);","lastModifiedDate":"2022-04-10"},{"lineNumber":48,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(30, item.getPax());","lastModifiedDate":"2022-04-10"},{"lineNumber":49,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":50,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":51,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":52,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_EmptyItemPax_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(EmptyItemPaxException.class, () -\u003e new UpdateItemPaxCommand(\"Toilet Paper /\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(EmptyItemPaxException.class, () -\u003e new UpdateItemPaxCommand(\"Toilet Paper /   \"));","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":58,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_itemPaxWithTheUpperBoundaryValue_success() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-10"},{"lineNumber":59,"author":{"gitId":"siewyangzhi"},"content":"        UpdateItemPaxCommand updateItemPaxCommand \u003d new UpdateItemPaxCommand(\"Toilet Paper / 1000000\");","lastModifiedDate":"2022-04-10"},{"lineNumber":60,"author":{"gitId":"siewyangzhi"},"content":"        updateItemPaxCommand.execute(listContainer, ui);","lastModifiedDate":"2022-04-10"},{"lineNumber":61,"author":{"gitId":"siewyangzhi"},"content":"        ItemList itemList \u003d listContainer.getItemList();","lastModifiedDate":"2022-04-10"},{"lineNumber":62,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d itemList.getItem(INDEX_OF_TOILET_PAPER);","lastModifiedDate":"2022-04-10"},{"lineNumber":63,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(1000000, item.getPax());","lastModifiedDate":"2022-04-10"},{"lineNumber":64,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":65,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":66,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":67,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_itemPaxWithTheLowerBoundaryValue_success() throws HotelLiteManagerException {","lastModifiedDate":"2022-04-10"},{"lineNumber":68,"author":{"gitId":"siewyangzhi"},"content":"        UpdateItemPaxCommand updateItemPaxCommand \u003d new UpdateItemPaxCommand(\"Toilet Paper / 0\");","lastModifiedDate":"2022-04-10"},{"lineNumber":69,"author":{"gitId":"siewyangzhi"},"content":"        updateItemPaxCommand.execute(listContainer, ui);","lastModifiedDate":"2022-04-10"},{"lineNumber":70,"author":{"gitId":"siewyangzhi"},"content":"        ItemList itemList \u003d listContainer.getItemList();","lastModifiedDate":"2022-04-10"},{"lineNumber":71,"author":{"gitId":"siewyangzhi"},"content":"        Item item \u003d itemList.getItem(INDEX_OF_TOILET_PAPER);","lastModifiedDate":"2022-04-10"},{"lineNumber":72,"author":{"gitId":"siewyangzhi"},"content":"        assertEquals(0, item.getPax());","lastModifiedDate":"2022-04-10"},{"lineNumber":73,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":74,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":75,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":76,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_itemPaxWithNegativeValue_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":77,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(InvalidItemPaxException.class, () -\u003e new UpdateItemPaxCommand(\"Toilet Paper / -1\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":78,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":79,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":80,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":81,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_itemPaxWithValueAboveUpperBoundary_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":82,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(InvalidItemPaxException.class, () -\u003e new UpdateItemPaxCommand(\"Toilet Paper / 1000001\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":83,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":84,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":85,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":86,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_NewItemPaxSameAsCurrentPax_exceptionThrown() throws HotelLiteManagerException {","lastModifiedDate":"2022-04-10"},{"lineNumber":87,"author":{"gitId":"siewyangzhi"},"content":"        UpdateItemPaxCommand updateItemPaxCommand \u003d new UpdateItemPaxCommand(\"Toilet Paper / 15\");","lastModifiedDate":"2022-04-10"},{"lineNumber":88,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(NewItemPaxSameAsCurrentPaxException.class, () -\u003e updateItemPaxCommand.execute(listContainer, ui));","lastModifiedDate":"2022-04-10"},{"lineNumber":89,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":90,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":91,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":92,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_nonIntegerItemPax_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":93,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(InvalidItemPaxException.class, () -\u003e new UpdateItemPaxCommand(\"Towels / abc\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":94,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":95,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":96,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":97,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_EmptyItemName_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":98,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(EmptyItemNameException.class, () -\u003e new UpdateItemPaxCommand(\"/ 30\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":99,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(EmptyItemNameException.class, () -\u003e new UpdateItemPaxCommand(\"  / 30\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":100,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":101,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":102,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":103,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":104,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_EmptyItemNameAndPax_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":105,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(InvalidUpdateItemPaxCommandException.class, () -\u003e new UpdateItemPaxCommand(\"\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":106,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":107,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":108,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":109,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_ItemNameWithInvalidSymbols_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":110,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(InvalidItemNameException.class, () -\u003e new UpdateItemPaxCommand(\"{1,|0 / 15\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":111,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":112,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":113,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":114,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_ItemNameOfANonExistentItem_exceptionThrown() throws HotelLiteManagerException {","lastModifiedDate":"2022-04-10"},{"lineNumber":115,"author":{"gitId":"siewyangzhi"},"content":"        UpdateItemPaxCommand itemNameCommand \u003d new UpdateItemPaxCommand(\"Table / 15\");","lastModifiedDate":"2022-04-10"},{"lineNumber":116,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e itemNameCommand.execute(listContainer, ui));","lastModifiedDate":"2022-04-10"},{"lineNumber":117,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":118,"author":{"gitId":"siewyangzhi"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":119,"author":{"gitId":"siewyangzhi"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":120,"author":{"gitId":"siewyangzhi"},"content":"    public void execute_UpdateItemPaxCommandWithinItemNameOrPax_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":121,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(DuplicateCommandException.class, () -\u003e new UpdateItemPaxCommand(\"update item pax / 15\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":122,"author":{"gitId":"siewyangzhi"},"content":"        assertThrows(DuplicateCommandException.class, () -\u003e new UpdateItemPaxCommand(\"Toilet Roll / update \"","lastModifiedDate":"2022-04-10"},{"lineNumber":123,"author":{"gitId":"siewyangzhi"},"content":"                + \"item pax\"));","lastModifiedDate":"2022-04-10"},{"lineNumber":124,"author":{"gitId":"siewyangzhi"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":125,"author":{"gitId":"siewyangzhi"},"content":"}","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"siewyangzhi":125}},{"path":"src/test/java/seedu/duke/ViewHousekeeperListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FaliciaOng"},"content":"package seedu.duke;","lastModifiedDate":"2022-04-10"},{"lineNumber":2,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":3,"author":{"gitId":"FaliciaOng"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"FaliciaOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-10"},{"lineNumber":5,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.housekeepercommands.ResetAvailabilityCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.command.housekeepercommands.ViewHousekeeperListCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"import seedu.duke.command.housekeepercommands.ViewHousekeeperPerformancesCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.exceptions.InvalidViewHousekeeperException;","lastModifiedDate":"2022-04-10"},{"lineNumber":10,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.Housekeeper;","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"FaliciaOng"},"content":"import seedu.duke.housekeeperlists.HousekeeperList;","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"import seedu.duke.housekeeperperformancelists.HousekeeperPerformance;","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"import seedu.duke.housekeeperperformancelists.HousekeeperPerformanceList;","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"FaliciaOng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"FaliciaOng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"FaliciaOng"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"FaliciaOng"},"content":"public class ViewHousekeeperListTest {","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"FaliciaOng"},"content":"    private ListContainer listContainer;","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"FaliciaOng"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"FaliciaOng"},"content":"    private static final int INDEX_OF_MAN \u003d 2;","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"FaliciaOng"},"content":"    private static final int INDEX_OF_SALLY \u003d 1;","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"FaliciaOng"},"content":"    private static final int INDEX_OF_JAMES \u003d 0;","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"    private static final int INDEX_OF_SORTED_MAN \u003d 0;","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"    private static final int INDEX_OF_SORTED_SALLY \u003d 1;","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"    private static final int INDEX_OF_SORTED_JAMES \u003d 2;","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"FaliciaOng"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"FaliciaOng"},"content":"    public void pretestingSetUp() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"FaliciaOng"},"content":"        listContainer \u003d new ListContainer();","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"FaliciaOng"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"        housekeeperList.clearHousekeeperList();","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeperJame \u003d new Housekeeper(\"James\", 22);","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.addHousekeeperInList(housekeeperJame);","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeperSally \u003d new Housekeeper(\"Sally\", 30);","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.addHousekeeperInList(housekeeperSally);","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"FaliciaOng"},"content":"        Housekeeper housekeeperMan \u003d new Housekeeper(\"Man\", 60);","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperList.addHousekeeperInList(housekeeperMan);","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperJame.setAvailability(\"1,7,\");","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"FaliciaOng"},"content":"        housekeeperSally.setAvailability(\"5,2\");","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"        HousekeeperPerformanceList housekeeperPerformanceList \u003d listContainer.getHousekeeperPerformanceList();","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"        housekeeperPerformanceList.clearHousekeeperPerformanceList();","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"        HousekeeperPerformance housekeeperPerformanceJame \u003d new HousekeeperPerformance(\"James\", 3);","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"        housekeeperPerformanceList.addHousekeeperPerformance(housekeeperPerformanceJame);","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"        HousekeeperPerformance housekeeperPerformanceSally \u003d new HousekeeperPerformance(\"Sally\", 4);","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"        housekeeperPerformanceList.addHousekeeperPerformance(housekeeperPerformanceSally);","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"        HousekeeperPerformance housekeeperPerformanceMan \u003d new HousekeeperPerformance(\"Man\", 5);","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"        housekeeperPerformanceList.addHousekeeperPerformance(housekeeperPerformanceMan);","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"FaliciaOng"},"content":"    public void viewHousekeeperList_success() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"FaliciaOng"},"content":"        ViewHousekeeperListCommand viewHousekeeperListCommand \u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"FaliciaOng"},"content":"                new ViewHousekeeperListCommand(\"view recorded housekeepers\");","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"FaliciaOng"},"content":"        viewHousekeeperListCommand.execute(listContainer, ui);","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"FaliciaOng"},"content":"        HousekeeperList housekeeperList \u003d listContainer.getHousekeeperList();","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(\"James\", housekeeperList.getHousekeeper(INDEX_OF_JAMES).getName());","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(\"Man\", housekeeperList.getHousekeeper(INDEX_OF_MAN).getName());","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(\"Sally\", housekeeperList.getHousekeeper(INDEX_OF_SALLY).getName());","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(22, housekeeperList.getHousekeeper(INDEX_OF_JAMES).getAge());","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(60, housekeeperList.getHousekeeper(INDEX_OF_MAN).getAge());","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(30, housekeeperList.getHousekeeper(INDEX_OF_SALLY).getAge());","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(\"Monday Sunday\", housekeeperList.getHousekeeper(INDEX_OF_JAMES).getAvailability());","lastModifiedDate":"2022-04-11"},{"lineNumber":72,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(\"N/A\", housekeeperList.getHousekeeper(INDEX_OF_MAN).getAvailability());","lastModifiedDate":"2022-04-11"},{"lineNumber":73,"author":{"gitId":"FaliciaOng"},"content":"        assertEquals(\"Friday Tuesday\", housekeeperList.getHousekeeper(INDEX_OF_SALLY).getAvailability());","lastModifiedDate":"2022-04-11"},{"lineNumber":74,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":75,"author":{"gitId":"zhenster"},"content":"        housekeeperList.clearHousekeeperList();","lastModifiedDate":"2022-04-11"},{"lineNumber":76,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":77,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":78,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":79,"author":{"gitId":"zhenster"},"content":"    public void viewHousekeeperPerformances_success() throws HotelLiteManagerException {","lastModifiedDate":"2022-04-11"},{"lineNumber":80,"author":{"gitId":"zhenster"},"content":"        ViewHousekeeperPerformancesCommand viewHousekeeperPerformancesCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":81,"author":{"gitId":"zhenster"},"content":"                \u003d new ViewHousekeeperPerformancesCommand();","lastModifiedDate":"2022-04-11"},{"lineNumber":82,"author":{"gitId":"zhenster"},"content":"        viewHousekeeperPerformancesCommand.execute(listContainer, ui);","lastModifiedDate":"2022-04-11"},{"lineNumber":83,"author":{"gitId":"zhenster"},"content":"        HousekeeperPerformanceList housekeeperPerformancesList \u003d listContainer.getHousekeeperPerformanceList();","lastModifiedDate":"2022-04-11"},{"lineNumber":84,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":85,"author":{"gitId":"zhenster"},"content":"        assertEquals(\"James\", housekeeperPerformancesList.getPerformance(INDEX_OF_SORTED_JAMES).getName());","lastModifiedDate":"2022-04-11"},{"lineNumber":86,"author":{"gitId":"zhenster"},"content":"        assertEquals(\"Man\", housekeeperPerformancesList.getPerformance(INDEX_OF_SORTED_MAN).getName());","lastModifiedDate":"2022-04-11"},{"lineNumber":87,"author":{"gitId":"zhenster"},"content":"        assertEquals(\"Sally\", housekeeperPerformancesList.getPerformance(INDEX_OF_SORTED_SALLY).getName());","lastModifiedDate":"2022-04-11"},{"lineNumber":88,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":89,"author":{"gitId":"zhenster"},"content":"        assertEquals(3, housekeeperPerformancesList.getPerformance(INDEX_OF_SORTED_JAMES).getRating());","lastModifiedDate":"2022-04-11"},{"lineNumber":90,"author":{"gitId":"zhenster"},"content":"        assertEquals(4, housekeeperPerformancesList.getPerformance(INDEX_OF_SORTED_SALLY).getRating());","lastModifiedDate":"2022-04-11"},{"lineNumber":91,"author":{"gitId":"zhenster"},"content":"        assertEquals(5, housekeeperPerformancesList.getPerformance(INDEX_OF_SORTED_MAN).getRating());","lastModifiedDate":"2022-04-11"},{"lineNumber":92,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":93,"author":{"gitId":"zhenster"},"content":"        housekeeperPerformancesList.clearHousekeeperPerformanceList();","lastModifiedDate":"2022-04-11"},{"lineNumber":94,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":95,"author":{"gitId":"FaliciaOng"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":96,"author":{"gitId":"FaliciaOng"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":97,"author":{"gitId":"FaliciaOng"},"content":"    public void viewListCommand_exceptionThrown() {","lastModifiedDate":"2022-04-10"},{"lineNumber":98,"author":{"gitId":"FaliciaOng"},"content":"        assertThrows(InvalidViewHousekeeperException.class, () -\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":99,"author":{"gitId":"FaliciaOng"},"content":"                new CommandParser().parse(\"view Recorded Housekeepers xx \"));","lastModifiedDate":"2022-04-10"},{"lineNumber":100,"author":{"gitId":"FaliciaOng"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":101,"author":{"gitId":"FaliciaOng"},"content":"}","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"zhenster":37,"FaliciaOng":64}},{"path":"src/test/java/seedu/duke/ViewSatisfactionsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhenster"},"content":"package seedu.duke;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"zhenster"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"zhenster"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"zhenster"},"content":"import seedu.duke.command.customercommands.ViewSatisfactionsCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"zhenster"},"content":"import seedu.duke.command.customercommands.ViewAverageSatisfactionCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.HotelLiteManagerException;","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"zhenster"},"content":"import seedu.duke.exceptions.InvalidCommandException;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"zhenster"},"content":"import seedu.duke.satisfactionlists.Satisfaction;","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"zhenster"},"content":"import seedu.duke.satisfactionlists.SatisfactionList;","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"zhenster"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"zhenster"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"zhenster"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"zhenster"},"content":"public class ViewSatisfactionsTest {","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"zhenster"},"content":"    private ListContainer listContainer;","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"zhenster"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"zhenster"},"content":"    private static final int INDEX_OF_MAN \u003d 2;","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"zhenster"},"content":"    private static final int INDEX_OF_SALLY \u003d 1;","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"zhenster"},"content":"    private static final int INDEX_OF_JAMES \u003d 0;","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"zhenster"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"zhenster"},"content":"    public void pretestingSetUp() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"zhenster"},"content":"        listContainer \u003d new ListContainer();","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"zhenster"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"zhenster"},"content":"        SatisfactionList satisfactionList \u003d listContainer.getSatisfactionList();","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"zhenster"},"content":"        satisfactionList.clearSatisfactionList();","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"zhenster"},"content":"        Satisfaction satisfactionJames \u003d new Satisfaction(\"James\", 3);","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"zhenster"},"content":"        satisfactionList.addSatisfaction(satisfactionJames);","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"zhenster"},"content":"        Satisfaction satisfactionSally \u003d new Satisfaction(\"Sally\", 4);","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"zhenster"},"content":"        satisfactionList.addSatisfaction(satisfactionSally);","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"zhenster"},"content":"        Satisfaction satisfactionMan \u003d new Satisfaction(\"Man\", 5);","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"zhenster"},"content":"        satisfactionList.addSatisfaction(satisfactionMan);","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"zhenster"},"content":"    public void viewSatisfactionList_success() throws HotelLiteManagerException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"zhenster"},"content":"        ViewSatisfactionsCommand viewSatisfactionsCommand \u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"zhenster"},"content":"                new ViewSatisfactionsCommand();","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"zhenster"},"content":"        viewSatisfactionsCommand.execute(listContainer, ui);","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"zhenster"},"content":"        SatisfactionList satisfactionList \u003d listContainer.getSatisfactionList();","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"zhenster"},"content":"        assertEquals(\"James\", satisfactionList.getSatisfaction(INDEX_OF_JAMES).getCustomerName());","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"zhenster"},"content":"        assertEquals(\"Sally\", satisfactionList.getSatisfaction(INDEX_OF_SALLY).getCustomerName());","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"zhenster"},"content":"        assertEquals(\"Man\", satisfactionList.getSatisfaction(INDEX_OF_MAN).getCustomerName());","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"zhenster"},"content":"        assertEquals(3, satisfactionList.getSatisfaction(INDEX_OF_JAMES).getSatisfactionValue());","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"zhenster"},"content":"        assertEquals(4, satisfactionList.getSatisfaction(INDEX_OF_SALLY).getSatisfactionValue());","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"zhenster"},"content":"        assertEquals(5, satisfactionList.getSatisfaction(INDEX_OF_MAN).getSatisfactionValue());","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"zhenster"},"content":"        ViewAverageSatisfactionCommand viewAverageSatisfactionCommand \u003d new ViewAverageSatisfactionCommand();","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"zhenster"},"content":"        viewAverageSatisfactionCommand.execute(listContainer, ui);","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"zhenster"},"content":"        assertEquals(4.0, satisfactionList.calculateAverageSatisfaction());","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"zhenster"},"content":"        satisfactionList.clearSatisfactionList();","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"zhenster"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"zhenster"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"zhenster"},"content":"    public void viewSatisfactionListCommand_exceptionThrown() {","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"zhenster"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"zhenster"},"content":"                new CommandParser().parse(\"view satisfactions blah blah \"));","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"zhenster"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"zhenster"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"zhenster":65}}]
