[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"# A tP Project","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   * In the same dialog, you _may have to set the Project language level_ field to the SDK default option.","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"2. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"3. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"alanlowzies":2,"-":65}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |   Name   | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"--------|:--------:|:--------------:|:---------:","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"![](https://avatars.githubusercontent.com/u/95752177?size\u003d100) | Yan Tianai | [Github](https://github.com/TianaiYan) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"![](https://avatars.githubusercontent.com/u/60375639?size\u003d100) | Huang Haofeng | [Github](https://github.com/a1021492980) | [Portfolio](docs/team/HuangHaofeng.md)","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"![](https://avatars.githubusercontent.com/u/69451253?size\u003d100) | Musfirah Wani | [Github](https://github.com/Musfirahe0556596) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"![](https://avatars.githubusercontent.com/u/69447944?size\u003d100) | Emily Sim | [Github](https://github.com/emilysim00) | [Portfolio](docs/team/emily.md) ","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"![](https://avatars.githubusercontent.com/u/30099983?size\u003d100) |  Alan Low  | [Github](https://github.com/alanlowzies) | [Portfolio](docs/team/alanlowzies.md)","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"Musfirahe0556596":1,"alanlowzies":5,"-":3}},{"path":"docs/team/emily.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"# Emily Sim - Project Portfolio Page","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"## Overview","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"### Summary of Contributions","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"emilysim00":6}},{"path":"src/main/java/seedu/duke/ExerciseList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"import java.io.File;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"public class ExerciseList {","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"    private static final String EXERCISE_FILE_PATH \u003d \"exercises/Exercises.txt\";","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"    private static final File EXERCISE_FILE \u003d new File(EXERCISE_FILE_PATH);","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"    private final ArrayList\u003cString\u003e exercises \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"    private int numberOfExercises \u003d 0;","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"     * Reads the exercises from local file and store them into an ArrayList named exercises.","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"     * @throws IOException when the local file is missing.","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"    protected void loadExercises() throws IOException {","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"        Scanner scanner \u003d new Scanner(EXERCISE_FILE);","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"            var exercise \u003d scanner.nextLine();","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"            exercises.add(exercise);","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"            numberOfExercises +\u003d 1;","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"     * Prints the list of exercises starting with their index.","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"    protected void printExerciseList() {","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"        for (int i \u003d 0; i \u003c numberOfExercises; i++) {","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"            System.out.println((i + 1) + \". \" + exercises.get(i));","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"     * Returns the exercise at given index.","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"a1021492980"},"content":"     * @param index index of exercise.","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"a1021492980"},"content":"     * @return the exercise at given index.","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"a1021492980"},"content":"     * @throws IndexOutOfBoundsException when the index provided is less than 0 or greater than the numberOfExercises.","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"a1021492980"},"content":"    protected String getExerciseAt(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"a1021492980"},"content":"        return exercises.get(index - 1);","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"a1021492980"},"content":"     * Returns the total number of exercises that is loaded.","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"a1021492980"},"content":"     * @return number of exercises.","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"a1021492980"},"content":"    protected int getNumberOfExercises() {","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"a1021492980"},"content":"        return numberOfExercises;","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"a1021492980":53}},{"path":"src/main/java/seedu/duke/UI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":" * This class contains all the user interface-related texts and methods for the WerkIt! Application.","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"public class UI {","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"    // The default parameters for printing the formatting lines","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"    public static final int DEFAULT_LINE_LENGTH \u003d 60;","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"    public static final String DEFAULT_LINE_CHAR \u003d \"-\";","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"     * Prints a line on the console based on the default parameters defined in this Java class.","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"     * Source: Team Member Alan Low\u0027s iP codebase","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"     * Link: https://github.com/alanlowzies/ip/blob/8556dd6a5106d190f5ac0458c6d2c34f98737a91/src/main/java/sora/SoraUI.java","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"    protected void printLine() {","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"        // Prints a line based on the default parameters","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"        printLine(DEFAULT_LINE_LENGTH, DEFAULT_LINE_CHAR);","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"     * Prints a line on the console based on the specified length and the character/symbol to use","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"     * Source: Team Member Alan Low\u0027s iP codebase","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"     * Link: https://github.com/alanlowzies/ip/blob/8556dd6a5106d190f5ac0458c6d2c34f98737a91/src/main/java/sora/SoraUI.java","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"     * @param lineLen The length of the line (measured in \u0027number of characters\u0027).","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"     * @param character The character that should be used to print the line.","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"    protected void printLine(int lineLen, String character) {","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"        // Generate a line of whitespaces","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"        String lineOfWhitespaces \u003d String.format(\"%\" + lineLen + \"s\", \" \");","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"        // Replace each whitespace with the specified character","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"        String lineOfChars \u003d lineOfWhitespaces.replaceAll(\" \", character);","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"        // Finally, print out the line of characters","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(lineOfChars);","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"alanlowzies":41}}]
