[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"# A tP Project","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   * In the same dialog, you _may have to set the Project language level_ field to the SDK default option.","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"2. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"3. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"alanlowzies":2,"-":65}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"    mainClassName \u003d \"Main\"","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"alanlowzies":2,"-":45}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"# About Us","lastModifiedDate":"2022-04-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"| Display                                                        |     Name      |                Github Profile                 |             Portfolio             |","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"|----------------------------------------------------------------|:-------------:|:---------------------------------------------:|:---------------------------------:|","lastModifiedDate":"2022-04-03"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"| ![](https://avatars.githubusercontent.com/u/95752177?s\u003d100) |  Yan Tianai   |    [GitHub](https://github.com/TianaiYan)     |  [Portfolio](team/tianaiyan.md)   |","lastModifiedDate":"2022-04-03"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"| ![](https://avatars.githubusercontent.com/u/60375639?s\u003d100) | Huang Haofeng |   [GitHub](https://github.com/a1021492980)    | [Portfolio](team/a1021492980.md) |","lastModifiedDate":"2022-04-03"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"| ![](https://avatars.githubusercontent.com/u/69451253?s\u003d100) | Musfirah Wani | [GitHub](https://github.com/Musfirahe0556596) |   [Portfolio](team/musfirahe0556596.md)    |","lastModifiedDate":"2022-04-03"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"| ![](https://avatars.githubusercontent.com/u/69447944?s\u003d100) |   Emily Sim   |    [GitHub](https://github.com/emilysim00)    |    [Portfolio](team/emilysim00.md)     |","lastModifiedDate":"2022-04-03"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"| ![](https://avatars.githubusercontent.com/u/30099983?s\u003d100) |   Alan Low    |   [GitHub](https://github.com/alanlowzies)    | [Portfolio](team/alanlowzies.md)  |","lastModifiedDate":"2022-04-03"}],"authorContributionMap":{"emilysim00":1,"alanlowzies":7,"-":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"# WerkIt! Developer Guide","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"## Table of Contents","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"* [About this Guide](#about-this-guide)","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"* [Acknowledgements](#acknowledgements)","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"* [Setting Up your Development Environment](#setting-up-your-development-environment)","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"* [Design](#design)","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"* [Implementation](#implementation)","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"* [Product Scope](#product-scope)","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"* [User Stories](#user-stories)","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"* [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"* [Glossary](#glossary)","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"* [Instructions for Manual Testing](#instructions-for-manual-testing)","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"## About this Guide","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"This developer guide serves as a documentation of the development of WerkIt!, an application that was created to help","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"prospective users to plan their exercise routines.","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"This technical document is meant for current and future developers of WerkIt! as a reference point on the design,","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"implementation, and other technical and non-technical aspects of the application.","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"### Notations Used In This Guide","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"When reading this document, there are several icons that you may encounter. ","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"Below are the icons and their meanings:","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box warning\"\u003e:warning: **Warning**: Information that you may want to pay attention to in order to prevent ","lastModifiedDate":"2022-04-04"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"possible issues from arising when using the application.\u003c/span\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: **Note**: Additional information that may be useful for you.\u003c/span\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"The following websites and codebases were referenced and adapted for our project:","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"* AddressBook-Level2 project ([Website](https://se-education.org/addressbook-level2/) | ","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"[GitHub](https://github.com/se-edu/addressbook-level2))","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"* AddressBook-Level3 project ([Website](https://se-education.org/addressbook-level3/DeveloperGuide.html) |","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"Musfirahe0556596"},"content":"[GitHub](https://github.com/se-edu/addressbook-level3))","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"* Team Member Alan Low\u0027s individual project (iP) codebase ([GitHub](https://github.com/alanlowzies/ip))","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"## Setting Up your Development Environment","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"### Requirements","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"- [X] Java JDK version 11.","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"- [X] An IDE of your choice, though IntelliJ IDEA is recommended as this project is developed","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"with this IDE.","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: IDE-related references in this developer guide IDE will be tailored for IntelliJ IDEA.\u003c/span\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"### Setting Up","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"1. Fork the [WerkIt! GitHub repository](https://github.com/AY2122S2-CS2113T-T09-2/tp).","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"2. Clone your fork to your machine.","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"3. Set up your local repo in your IDE.","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"    - Ensure that the project in your IDE is configured to run on Java JDK version 11. ","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"    - A guide on setting your project to use JDK 11 in your IntelliJ IDEA IDE can be found ","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"[here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"4. Run `Main.java`. If you have set up your environment correctly, you should see the following","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"output in your terminal: ","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"    ```","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"     __        __        _    ___ _   _ ","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"     \\ \\      / /__ _ __| | _|_ _| |_| |","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"      \\ \\ /\\ / / _ \\ \u0027__| |/ /| || __| |","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"       \\ V  V /  __/ |  |   \u003c | || |_|_|","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"        \\_/\\_/ \\___|_|  |_|\\_\\___|\\__(_)","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"    Welcome to WerkIt!, your personal exercise planner.","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"    ----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"    Checking for required directory and files...","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"    - The required data directory was not found. It will be created.","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"    - The WerkIt! resource directory has been created in","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"      your terminal\u0027s current working directory.","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"    - The exercise file was not found. It will be created.","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"    - The exercise file \u0027exercises.txt\u0027 has been created in","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"      the WerkIt! resource directory.","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"alanlowzies"},"content":"    - The workout file was not found. It will be created.","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"alanlowzies"},"content":"    - The workout file \u0027workouts.txt\u0027 has been created in","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"alanlowzies"},"content":"      the WerkIt! resource directory.","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"    - The plan file was not found. It will be created.","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"alanlowzies"},"content":"    - The plan file \u0027plans.txt\u0027 has been created in","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"      the WerkIt! resource directory.","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"    - The schedule file was not found. It will be created.","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"    - The schedule file \u0027schedule.txt\u0027 has been","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"      created in the WerkIt! resource directory.","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"alanlowzies"},"content":"    Loading saved file data...","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"alanlowzies"},"content":"    - Exercises file\tOK!","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"alanlowzies"},"content":"    ----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"alanlowzies"},"content":"    Now then, what can I do for you today?","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"alanlowzies"},"content":"    (Need help? Type \u0027help\u0027 for a guide!)","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"alanlowzies"},"content":"    ----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"alanlowzies"},"content":"    \u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"alanlowzies"},"content":"    ```","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"alanlowzies"},"content":"5. Type `exit` to exit the program.","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"alanlowzies"},"content":"You are now ready to begin developing!","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":102,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#werkit-developer-guide\"\u003eBack to Top\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":103,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":104,"author":{"gitId":"alanlowzies"},"content":"## Design ","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":106,"author":{"gitId":"alanlowzies"},"content":"### Table of Contents","lastModifiedDate":"2022-04-06"},{"lineNumber":107,"author":{"gitId":"alanlowzies"},"content":"- [Architecture Overview](#architecture-overview)","lastModifiedDate":"2022-04-06"},{"lineNumber":108,"author":{"gitId":"alanlowzies"},"content":"  - [Main Components of the Architecture](#main-components-of-the-architecture)","lastModifiedDate":"2022-04-06"},{"lineNumber":109,"author":{"gitId":"alanlowzies"},"content":"  - [How the Components Interact with Each Other](#how-the-components-interact-with-each-other)","lastModifiedDate":"2022-04-06"},{"lineNumber":110,"author":{"gitId":"alanlowzies"},"content":"- [Component Overview](#component-overview)","lastModifiedDate":"2022-04-06"},{"lineNumber":111,"author":{"gitId":"alanlowzies"},"content":"  - [Storage Component](#storage-component)","lastModifiedDate":"2022-04-06"},{"lineNumber":112,"author":{"gitId":"alanlowzies"},"content":"  - [UI Component](#ui-component)","lastModifiedDate":"2022-04-06"},{"lineNumber":113,"author":{"gitId":"alanlowzies"},"content":"  - [Parser Component](#parser-component)","lastModifiedDate":"2022-04-06"},{"lineNumber":114,"author":{"gitId":"alanlowzies"},"content":"  - [Logic Component](#logic-component)","lastModifiedDate":"2022-04-06"},{"lineNumber":115,"author":{"gitId":"alanlowzies"},"content":"- [Feature Overview](#feature-overview)","lastModifiedDate":"2022-04-06"},{"lineNumber":116,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":117,"author":{"gitId":"Musfirahe0556596"},"content":"### Architecture Overview","lastModifiedDate":"2022-04-04"},{"lineNumber":118,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":119,"author":{"gitId":"emilysim00"},"content":"![Architecture-Diagram](high-level-diagram/architecture_diagram.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":120,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":121,"author":{"gitId":"Musfirahe0556596"},"content":"The architecture diagram above shows the high-level design of the application.","lastModifiedDate":"2022-04-04"},{"lineNumber":122,"author":{"gitId":"Musfirahe0556596"},"content":"Given below is a quick overview of the main components of the application","lastModifiedDate":"2022-04-04"},{"lineNumber":123,"author":{"gitId":"Musfirahe0556596"},"content":"and their interactions.","lastModifiedDate":"2022-04-04"},{"lineNumber":124,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":125,"author":{"gitId":"alanlowzies"},"content":"#### Main Components of the Architecture","lastModifiedDate":"2022-04-06"},{"lineNumber":126,"author":{"gitId":"Musfirahe0556596"},"content":"- `Main`: The main component that starts the application upon launch of the applicaiton.","lastModifiedDate":"2022-04-04"},{"lineNumber":127,"author":{"gitId":"Musfirahe0556596"},"content":"- `WerkIt`: Initializes other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2022-04-04"},{"lineNumber":128,"author":{"gitId":"Musfirahe0556596"},"content":"- `Storage`: Reads data from, and writes data to the user\u0027s local storage.","lastModifiedDate":"2022-04-04"},{"lineNumber":129,"author":{"gitId":"Musfirahe0556596"},"content":"- `UI`: The UI of the application that deals with interaction with the user.","lastModifiedDate":"2022-04-04"},{"lineNumber":130,"author":{"gitId":"Musfirahe0556596"},"content":"- `Parser`: Parses user input to make sense of the command supplied by the user.","lastModifiedDate":"2022-04-04"},{"lineNumber":131,"author":{"gitId":"Musfirahe0556596"},"content":"- `Logic`: Executes the appropriate command as intended by the user.","lastModifiedDate":"2022-04-06"},{"lineNumber":132,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":133,"author":{"gitId":"Musfirahe0556596"},"content":"#### How the components interact with each other","lastModifiedDate":"2022-04-04"},{"lineNumber":134,"author":{"gitId":"TianaiYan"},"content":"The *Component Interaction Diagram* shows the inner workings of how each component in WerkIt interacts.","lastModifiedDate":"2022-04-07"},{"lineNumber":135,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":136,"author":{"gitId":"TianaiYan"},"content":"![Architecture Sequence Diagram](uml/sequenceDiagrams/miscellaneous/images/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2022-04-07"},{"lineNumber":137,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":138,"author":{"gitId":"TianaiYan"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: To improve the diagram\u0027s readability, ","lastModifiedDate":"2022-04-09"},{"lineNumber":139,"author":{"gitId":"TianaiYan"},"content":"some methods and parameters have been omitted.\u003c/span\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":140,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":141,"author":{"gitId":"TianaiYan"},"content":"1. When `WerkIt` is initialized, `UI` class is called to ask and get the user input.","lastModifiedDate":"2022-04-10"},{"lineNumber":142,"author":{"gitId":"TianaiYan"},"content":"2. The `Parser` class parses the user input and identifies the command type (e.g. plan/schedule/workout/exercise). Based","lastModifiedDate":"2022-04-09"},{"lineNumber":143,"author":{"gitId":"TianaiYan"},"content":"   on the command type, the corresponding `Command` object is created, which will then be executed.","lastModifiedDate":"2022-04-10"},{"lineNumber":144,"author":{"gitId":"TianaiYan"},"content":"3. When the `Command` object is executed, a sequence of actions will be performed. ","lastModifiedDate":"2022-04-09"},{"lineNumber":145,"author":{"gitId":"TianaiYan"},"content":"   The actions performed are dependent on the type of action specified by the user.","lastModifiedDate":"2022-04-09"},{"lineNumber":146,"author":{"gitId":"TianaiYan"},"content":"4. After the execution process has finished, an appropriate message may be printed to show the user that the command ","lastModifiedDate":"2022-04-10"},{"lineNumber":147,"author":{"gitId":"TianaiYan"},"content":"   is executed successfully.","lastModifiedDate":"2022-04-09"},{"lineNumber":148,"author":{"gitId":"TianaiYan"},"content":"5. Finally, the change may be written to local file.","lastModifiedDate":"2022-04-10"},{"lineNumber":149,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":150,"author":{"gitId":"Musfirahe0556596"},"content":"### Component Overview","lastModifiedDate":"2022-04-04"},{"lineNumber":151,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":152,"author":{"gitId":"alanlowzies"},"content":"#### Storage Component","lastModifiedDate":"2022-04-06"},{"lineNumber":153,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":154,"author":{"gitId":"alanlowzies"},"content":"This component of WerkIt! is mainly responsible for reading and writing application data from and to files","lastModifiedDate":"2022-04-05"},{"lineNumber":155,"author":{"gitId":"alanlowzies"},"content":"stored on the user\u0027s filesystem. This is to allow the user to retain the data he/she has entered into WerkIt! and be","lastModifiedDate":"2022-04-05"},{"lineNumber":156,"author":{"gitId":"alanlowzies"},"content":"able to continue using the data when he/she starts WerkIt! the next time.","lastModifiedDate":"2022-04-05"},{"lineNumber":157,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":158,"author":{"gitId":"alanlowzies"},"content":"The following class diagram shows how the storage component\u0027s classes and how it interacts with some other","lastModifiedDate":"2022-04-05"},{"lineNumber":159,"author":{"gitId":"alanlowzies"},"content":"components and classes in WerkIt!:","lastModifiedDate":"2022-04-05"},{"lineNumber":160,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":161,"author":{"gitId":"alanlowzies"},"content":"![FileManager Class Diagram](uml/classDiagrams/images/StorageComponent.png)","lastModifiedDate":"2022-04-05"},{"lineNumber":162,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":163,"author":{"gitId":"alanlowzies"},"content":"The storage component consists of two classes: `FileManager` and `LogHandler`.","lastModifiedDate":"2022-04-05"},{"lineNumber":164,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":165,"author":{"gitId":"alanlowzies"},"content":"| Class Name | Description |","lastModifiedDate":"2022-04-05"},{"lineNumber":166,"author":{"gitId":"alanlowzies"},"content":"| --- | --- |","lastModifiedDate":"2022-04-05"},{"lineNumber":167,"author":{"gitId":"alanlowzies"},"content":"| `FileManager` | - Loads saved data (if any) from the user\u0027s local filesystem.\u003cbr/\u003e- Writes new/updated data into the user\u0027s local filesystem. |","lastModifiedDate":"2022-04-05"},{"lineNumber":168,"author":{"gitId":"alanlowzies"},"content":"| `LogHandler` | - Utility class to direct log messages to a file that is stored on the user\u0027s local filesystem. |","lastModifiedDate":"2022-04-05"},{"lineNumber":169,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":170,"author":{"gitId":"alanlowzies"},"content":"`WerkIt` is responsible for creating an instance of `FileManager` when the application is started. This same instance","lastModifiedDate":"2022-04-05"},{"lineNumber":171,"author":{"gitId":"alanlowzies"},"content":"will be used by commands in the logic component that requires writing of data to the user\u0027s filesystem when the user","lastModifiedDate":"2022-04-07"},{"lineNumber":172,"author":{"gitId":"alanlowzies"},"content":"executes an action (for example, creating a new workout). Specifically, classes in the logic component that requires ","lastModifiedDate":"2022-04-07"},{"lineNumber":173,"author":{"gitId":"alanlowzies"},"content":"this are `WorkoutCommand`, `PlanCommand`, and `ScheduleCommand`.","lastModifiedDate":"2022-04-07"},{"lineNumber":174,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":175,"author":{"gitId":"alanlowzies"},"content":"`LogHandler` was deliberately grouped in the storage component as this class merely provides functionality to allow","lastModifiedDate":"2022-04-05"},{"lineNumber":176,"author":{"gitId":"alanlowzies"},"content":"whichever class in WerkIt! to write the logs to a designated log file.","lastModifiedDate":"2022-04-05"},{"lineNumber":177,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":178,"author":{"gitId":"alanlowzies"},"content":"On the user\u0027s local filesystem, the organisation of the application files are as follows:","lastModifiedDate":"2022-04-05"},{"lineNumber":179,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-04-05"},{"lineNumber":180,"author":{"gitId":"alanlowzies"},"content":"werkItResources/        // Primary resource directory for WerkIt!","lastModifiedDate":"2022-04-05"},{"lineNumber":181,"author":{"gitId":"alanlowzies"},"content":"    ├── exercises.txt   // Text file containing a list of exercises","lastModifiedDate":"2022-04-05"},{"lineNumber":182,"author":{"gitId":"alanlowzies"},"content":"    ├── workouts.txt    // Text file containing a list of user-created workouts","lastModifiedDate":"2022-04-05"},{"lineNumber":183,"author":{"gitId":"alanlowzies"},"content":"    ├── plans.txt       // Text file containing a list of user-created plans","lastModifiedDate":"2022-04-05"},{"lineNumber":184,"author":{"gitId":"alanlowzies"},"content":"    └── schedule.txt    // Text file containing a 7-day schedule of user-assigned plans for each day","lastModifiedDate":"2022-04-05"},{"lineNumber":185,"author":{"gitId":"alanlowzies"},"content":"werkItLogs/","lastModifiedDate":"2022-04-05"},{"lineNumber":186,"author":{"gitId":"alanlowzies"},"content":"    └── logs.log        // Log file containing logs created by the application","lastModifiedDate":"2022-04-07"},{"lineNumber":187,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-04-05"},{"lineNumber":188,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":189,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#design\"\u003eBack to Design\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":190,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":191,"author":{"gitId":"alanlowzies"},"content":"#### UI Component","lastModifiedDate":"2022-04-06"},{"lineNumber":192,"author":{"gitId":"emilysim00"},"content":"UI component consists of a single [UI class](https://github.com/AY2122S2-CS2113T-T09-2/tp/blob/master/src/main/java/werkit/UI.java)","lastModifiedDate":"2022-04-06"},{"lineNumber":193,"author":{"gitId":"emilysim00"},"content":"which manages interaction (prompting for user input and displaying results","lastModifiedDate":"2022-04-06"},{"lineNumber":194,"author":{"gitId":"emilysim00"},"content":"of commands/methods being called) between the user and the application.","lastModifiedDate":"2022-04-06"},{"lineNumber":195,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":196,"author":{"gitId":"emilysim00"},"content":"How the UI class works:","lastModifiedDate":"2022-04-06"},{"lineNumber":197,"author":{"gitId":"alanlowzies"},"content":"* Upon the initialization of `WerkIt`, the `UI` class will call the `printGreetings()` method to display the greeting messages to","lastModifiedDate":"2022-04-07"},{"lineNumber":198,"author":{"gitId":"emilysim00"},"content":"  the user.","lastModifiedDate":"2022-04-06"},{"lineNumber":199,"author":{"gitId":"alanlowzies"},"content":"* Additionally, local files storing the data of previous sessions of `WerkIt` will also be loaded into the program. Thereafter,","lastModifiedDate":"2022-04-07"},{"lineNumber":200,"author":{"gitId":"alanlowzies"},"content":"  the loading statuses of these files are also displayed by calling the `printFileLoadStatusMessage()` method.","lastModifiedDate":"2022-04-07"},{"lineNumber":201,"author":{"gitId":"alanlowzies"},"content":"* `UI` class is also responsible for getting the user input by calling the `getUserInput(String filename, boolean isLoadSuccessful)`","lastModifiedDate":"2022-04-07"},{"lineNumber":202,"author":{"gitId":"alanlowzies"},"content":"  method, which will then parse the input by sending it to the `Parser` class. The `Parser` class will process","lastModifiedDate":"2022-04-07"},{"lineNumber":203,"author":{"gitId":"emilysim00"},"content":"  the input and call other relevant methods to execute the command.","lastModifiedDate":"2022-04-06"},{"lineNumber":204,"author":{"gitId":"alanlowzies"},"content":"* `UI` class also displays messages when a","lastModifiedDate":"2022-04-07"},{"lineNumber":205,"author":{"gitId":"alanlowzies"},"content":"    * workout has been successfully created, updated or deleted.","lastModifiedDate":"2022-04-07"},{"lineNumber":206,"author":{"gitId":"alanlowzies"},"content":"    * plan has been successfully created or deleted.","lastModifiedDate":"2022-04-07"},{"lineNumber":207,"author":{"gitId":"alanlowzies"},"content":"    * schedule has been successfully created/updated or cleared.","lastModifiedDate":"2022-04-07"},{"lineNumber":208,"author":{"gitId":"alanlowzies"},"content":"* Help messages are also printed in the `UI` class by calling `printHelpMessage()` method.","lastModifiedDate":"2022-04-07"},{"lineNumber":209,"author":{"gitId":"emilysim00"},"content":"* Lastly, when the user exits the program, the `printGoodBye()` method will be called to indicate that the ","lastModifiedDate":"2022-04-06"},{"lineNumber":210,"author":{"gitId":"emilysim00"},"content":"user has successfully exited the program. ","lastModifiedDate":"2022-04-06"},{"lineNumber":211,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":212,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#design\"\u003eBack to Design\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":213,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":214,"author":{"gitId":"alanlowzies"},"content":"#### Parser Component","lastModifiedDate":"2022-04-06"},{"lineNumber":215,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":216,"author":{"gitId":"a1021492980"},"content":"The [Parser class](https://github.com/AY2122S2-CS2113T-T09-2/tp/blob/master/src/main/java/werkit/Parser.java) ","lastModifiedDate":"2022-04-06"},{"lineNumber":217,"author":{"gitId":"a1021492980"},"content":"of WerkIt! is mainly responsible for making sense of the user commands.","lastModifiedDate":"2022-04-06"},{"lineNumber":218,"author":{"gitId":"alanlowzies"},"content":"This is to allow WerkIt! to breakdown user\u0027s command into components of different types, and proceed to create the","lastModifiedDate":"2022-04-07"},{"lineNumber":219,"author":{"gitId":"a1021492980"},"content":"appropriate `Command` object to be executed in `WerkIt`.","lastModifiedDate":"2022-04-06"},{"lineNumber":220,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":221,"author":{"gitId":"alanlowzies"},"content":"How the `Parser` class works:","lastModifiedDate":"2022-04-07"},{"lineNumber":222,"author":{"gitId":"alanlowzies"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":223,"author":{"gitId":"alanlowzies"},"content":"1. After the user has entered a string containing the user\u0027s command to `WerkIt`, `WerkIt` will call","lastModifiedDate":"2022-04-07"},{"lineNumber":224,"author":{"gitId":"a1021492980"},"content":"`Parser#parseUserInput()` to parse the string.","lastModifiedDate":"2022-04-06"},{"lineNumber":225,"author":{"gitId":"alanlowzies"},"content":"2. Upon calling `parseUserInput()`, this method will first check the first non-null component of user input, and based on","lastModifiedDate":"2022-04-07"},{"lineNumber":226,"author":{"gitId":"a1021492980"},"content":"this component, `parseUserInput()` will call one of `createWorkoutCommand()`, `createExitCommand()`,","lastModifiedDate":"2022-04-06"},{"lineNumber":227,"author":{"gitId":"a1021492980"},"content":"`createHelpCommand()`, `createExerciseCommand()`, `createSearchCommand()`, `createPlanCommand()`,","lastModifiedDate":"2022-04-06"},{"lineNumber":228,"author":{"gitId":"a1021492980"},"content":"`createScheduleCommand()` or throw an `InvalidCommandException`.","lastModifiedDate":"2022-04-06"},{"lineNumber":229,"author":{"gitId":"a1021492980"},"content":"3. If the `InvalidCommandException` is thrown, `parseUserInput()` will be terminated and `WerkIt` will continue on","lastModifiedDate":"2022-04-06"},{"lineNumber":230,"author":{"gitId":"alanlowzies"},"content":"`startContinuousUserPrompt()` and repeat from step 1 again once a new user input is received.","lastModifiedDate":"2022-04-07"},{"lineNumber":231,"author":{"gitId":"alanlowzies"},"content":"4. If one of the `createExitCommand()`, `createHelpCommand()` is called. In the case that the user input contains any ","lastModifiedDate":"2022-04-07"},{"lineNumber":232,"author":{"gitId":"a1021492980"},"content":"non-spacing characters other than the first non-null component mentioned in step 2, an `InvalidCommandException` will be","lastModifiedDate":"2022-04-06"},{"lineNumber":233,"author":{"gitId":"a1021492980"},"content":"thrown. Otherwise, the constructor of `HelpCommand` or `ExitCommand` will be called to create the `Command` object and ","lastModifiedDate":"2022-04-06"},{"lineNumber":234,"author":{"gitId":"a1021492980"},"content":"return to `WerkIt` for execution.","lastModifiedDate":"2022-04-06"},{"lineNumber":235,"author":{"gitId":"a1021492980"},"content":"5. If one of the `createExerciseCommand()`, `createWorkoutCommand()`, `createPlanCommand()`, `createScheduleCommand()`,","lastModifiedDate":"2022-04-06"},{"lineNumber":236,"author":{"gitId":"alanlowzies"},"content":"`createSearchCommand()` is called. The method will check the validity of the remaining components of user input, ","lastModifiedDate":"2022-04-07"},{"lineNumber":237,"author":{"gitId":"alanlowzies"},"content":"if any component of the user input is invalid, an `InvalidCommandException` will be thrown. ","lastModifiedDate":"2022-04-07"},{"lineNumber":238,"author":{"gitId":"a1021492980"},"content":"Otherwise, the constructor of the appropriate","lastModifiedDate":"2022-04-06"},{"lineNumber":239,"author":{"gitId":"a1021492980"},"content":"type of `Command` will be called to create the appropriate `Command` object and return to `WerkIt` for execution.","lastModifiedDate":"2022-04-06"},{"lineNumber":240,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":241,"author":{"gitId":"a1021492980"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#design\"\u003eBack to Design\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":242,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":243,"author":{"gitId":"Musfirahe0556596"},"content":"#### Logic component","lastModifiedDate":"2022-04-06"},{"lineNumber":244,"author":{"gitId":"Musfirahe0556596"},"content":"The logic component is mainly responsible for executing the command.","lastModifiedDate":"2022-04-08"},{"lineNumber":245,"author":{"gitId":"Musfirahe0556596"},"content":"In addition, the respective commands will operate on the appropriate data","lastModifiedDate":"2022-04-08"},{"lineNumber":246,"author":{"gitId":"Musfirahe0556596"},"content":"structure objects to create, manipulate and delete data based on the user\u0027s requests.","lastModifiedDate":"2022-04-08"},{"lineNumber":247,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":248,"author":{"gitId":"Musfirahe0556596"},"content":"Below is a class diagram of the `Logic` component:\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":249,"author":{"gitId":"Musfirahe0556596"},"content":"![LogicUML](uml/classDiagrams/images/logicComponent.png)","lastModifiedDate":"2022-04-06"},{"lineNumber":250,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: This is a high-level overview of the `Logic` component, thus,","lastModifiedDate":"2022-04-07"},{"lineNumber":251,"author":{"gitId":"Musfirahe0556596"},"content":"other components have been omitted from the diagram above.\u003c/span\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":252,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":253,"author":{"gitId":"Musfirahe0556596"},"content":"The `Logic` component consists of:","lastModifiedDate":"2022-04-06"},{"lineNumber":254,"author":{"gitId":"alanlowzies"},"content":"- **`Command` abstract class**. The `ExerciseCommand`, `SearchCommand`, `WorkoutCommand`, `ScheduleCommand`,","lastModifiedDate":"2022-04-07"},{"lineNumber":255,"author":{"gitId":"Musfirahe0556596"},"content":"`PlanCommand`, `HelpCommand` and `ExitCommand` extends the `Command` class. These classes","lastModifiedDate":"2022-04-06"},{"lineNumber":256,"author":{"gitId":"Musfirahe0556596"},"content":"identify the command action (i.e. create, update, delete and list) supplied by the user and also executes the command.","lastModifiedDate":"2022-04-09"},{"lineNumber":257,"author":{"gitId":"Musfirahe0556596"},"content":"The source of these classes can be found [here](https://github.com/AY2122S2-CS2113T-T09-2/tp/tree/master/src/main/java/commands).","lastModifiedDate":"2022-04-06"},{"lineNumber":258,"author":{"gitId":"alanlowzies"},"content":"- **`[command name]List` classes**. It includes `ExerciseList`,","lastModifiedDate":"2022-04-07"},{"lineNumber":259,"author":{"gitId":"Musfirahe0556596"},"content":"`WorkoutList`,`PlanList` and `DayList`. These classes hold the methods","lastModifiedDate":"2022-04-06"},{"lineNumber":260,"author":{"gitId":"Musfirahe0556596"},"content":"to perform the command action desired by the user. Examples of command actions","lastModifiedDate":"2022-04-06"},{"lineNumber":261,"author":{"gitId":"Musfirahe0556596"},"content":"are create, delete, update and listing of the objects. The source of these classes","lastModifiedDate":"2022-04-06"},{"lineNumber":262,"author":{"gitId":"Musfirahe0556596"},"content":"can be found [here](https://github.com/AY2122S2-CS2113T-T09-2/tp/tree/master/src/main/java/data) ","lastModifiedDate":"2022-04-06"},{"lineNumber":263,"author":{"gitId":"Musfirahe0556596"},"content":"(each class is grouped in packages according to their command name).","lastModifiedDate":"2022-04-06"},{"lineNumber":264,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":265,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":266,"author":{"gitId":"Musfirahe0556596"},"content":"How the `Logic` component works:","lastModifiedDate":"2022-04-06"},{"lineNumber":267,"author":{"gitId":"alanlowzies"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":268,"author":{"gitId":"Musfirahe0556596"},"content":"1. The `Parser` class parses the user command and identifies the command type (e.g. plan/schedule/workout/exercise).","lastModifiedDate":"2022-04-06"},{"lineNumber":269,"author":{"gitId":"Musfirahe0556596"},"content":"2. Depending on the command type, it creates the appropriate `Command` subclass object.","lastModifiedDate":"2022-04-06"},{"lineNumber":270,"author":{"gitId":"Musfirahe0556596"},"content":"3. This subclass-of-`Command` object is executed by the `WerkIt` class, which calls the `execute()` method of that subclass-of-`Command` object.","lastModifiedDate":"2022-04-06"},{"lineNumber":271,"author":{"gitId":"Musfirahe0556596"},"content":"4. Depending on the command action (e.g. create/delete/update/list), the `execute()` method will identify and perform the appropriate actions.","lastModifiedDate":"2022-04-06"},{"lineNumber":272,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":273,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":274,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":275,"author":{"gitId":"Musfirahe0556596"},"content":"Illustration of the interactions within the `Logic` component can be found","lastModifiedDate":"2022-04-06"},{"lineNumber":276,"author":{"gitId":"Musfirahe0556596"},"content":"in the sequence diagram below. ","lastModifiedDate":"2022-04-09"},{"lineNumber":277,"author":{"gitId":"Musfirahe0556596"},"content":"The example given below is for the listing of workouts in WerkIt! (`workout /list`):","lastModifiedDate":"2022-04-09"},{"lineNumber":278,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":279,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":280,"author":{"gitId":"Musfirahe0556596"},"content":"![logicComponentUML](uml/sequenceDiagrams/miscellaneous/images/logicComponentSD.png)","lastModifiedDate":"2022-04-06"},{"lineNumber":281,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":282,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: This is a high-level overview of how the listing of workouts","lastModifiedDate":"2022-04-09"},{"lineNumber":283,"author":{"gitId":"Musfirahe0556596"},"content":"is done. To improve readability, some classes and methods have been omitted from the diagram above.\u003c/span\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":284,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":285,"author":{"gitId":"alanlowzies"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":286,"author":{"gitId":"alanlowzies"},"content":"Each command type is a feature of the WerkIt! application.","lastModifiedDate":"2022-04-07"},{"lineNumber":287,"author":{"gitId":"Musfirahe0556596"},"content":"The next section will explain the design of each feature in detail.","lastModifiedDate":"2022-04-09"},{"lineNumber":288,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":289,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#design\"\u003eBack to Design\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":290,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":291,"author":{"gitId":"Musfirahe0556596"},"content":"### Feature Overview","lastModifiedDate":"2022-04-04"},{"lineNumber":292,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":293,"author":{"gitId":"Musfirahe0556596"},"content":"The features of WerkIt! are split and grouped into 5 **main** features:","lastModifiedDate":"2022-04-06"},{"lineNumber":294,"author":{"gitId":"alanlowzies"},"content":"1. [Exercise-Related Features](#exercise-related-features)","lastModifiedDate":"2022-04-06"},{"lineNumber":295,"author":{"gitId":"alanlowzies"},"content":"2. [Workout-Related Features](#workout-related-features)","lastModifiedDate":"2022-04-06"},{"lineNumber":296,"author":{"gitId":"alanlowzies"},"content":"3. [Plan-Related Features](#plan-related-features)","lastModifiedDate":"2022-04-06"},{"lineNumber":297,"author":{"gitId":"alanlowzies"},"content":"4. [Schedule-Related Features](#schedule-related-features)","lastModifiedDate":"2022-04-06"},{"lineNumber":298,"author":{"gitId":"alanlowzies"},"content":"5. [Search-Related Features](#search-related-features)","lastModifiedDate":"2022-04-06"},{"lineNumber":299,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":300,"author":{"gitId":"alanlowzies"},"content":"### Exercise-Related Features","lastModifiedDate":"2022-04-06"},{"lineNumber":301,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":302,"author":{"gitId":"alanlowzies"},"content":"Format: `exercise /commandAction \u003ccondition\u003e`","lastModifiedDate":"2022-04-07"},{"lineNumber":303,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":304,"author":{"gitId":"a1021492980"},"content":"Below is a class diagram of the exercise-related features:","lastModifiedDate":"2022-04-04"},{"lineNumber":305,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":306,"author":{"gitId":"a1021492980"},"content":"![ExerciseUML](uml/classDiagrams/images/exercise.png)","lastModifiedDate":"2022-04-04"},{"lineNumber":307,"author":{"gitId":"a1021492980"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":308,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":309,"author":{"gitId":"alanlowzies"},"content":"When WerkIt! is running, the `WerkIt` class will keep prompting the user to enter command through the","lastModifiedDate":"2022-04-07"},{"lineNumber":310,"author":{"gitId":"a1021492980"},"content":"`WerkIt#startContinuousUserPrompt()` method. After the user has entered command, The `UI#getUserInput()` method in `UI`","lastModifiedDate":"2022-04-04"},{"lineNumber":311,"author":{"gitId":"a1021492980"},"content":"class will catch the user input, and it will be sent to `Parser#parseUserInput(String userInput)` method to analyse the","lastModifiedDate":"2022-04-04"},{"lineNumber":312,"author":{"gitId":"a1021492980"},"content":"user\u0027s command. If the user\u0027s command type is `exercise`, the `Parser#parseUserInput(String userInput)` method will ","lastModifiedDate":"2022-04-04"},{"lineNumber":313,"author":{"gitId":"a1021492980"},"content":"parse the \u0027exercise\u0027 base word and proceed to create exercise related command using ","lastModifiedDate":"2022-04-04"},{"lineNumber":314,"author":{"gitId":"a1021492980"},"content":"`Parser#createExerciseCommand(String userInput)` method. This method will further evaluate the","lastModifiedDate":"2022-04-04"},{"lineNumber":315,"author":{"gitId":"alanlowzies"},"content":"`/commandAction` and call the constructor of `ExerciseCommand` class by passing relevant parameters related","lastModifiedDate":"2022-04-07"},{"lineNumber":316,"author":{"gitId":"alanlowzies"},"content":"to the constructor. If the `/commandAction` is null or incorrect, an `InvalidCommandException` will be thrown.","lastModifiedDate":"2022-04-07"},{"lineNumber":317,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":318,"author":{"gitId":"alanlowzies"},"content":"Currently, the exercise-related feature is limited to `exercise /list` only. Therefore, the `condition` mentioned can","lastModifiedDate":"2022-04-07"},{"lineNumber":319,"author":{"gitId":"alanlowzies"},"content":"be ignored for now, and the only supported `/commandAction` is `/list`. However, more exciting exercise-related features ","lastModifiedDate":"2022-04-07"},{"lineNumber":320,"author":{"gitId":"a1021492980"},"content":"are expected to be delivered in future iterations, and we currently have set the framework to implement these features ","lastModifiedDate":"2022-04-04"},{"lineNumber":321,"author":{"gitId":"a1021492980"},"content":"in the future. Thus, we have this standalone section specifically kept for exercise-related features.","lastModifiedDate":"2022-04-04"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":323,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#feature-overview\"\u003eBack to Feature Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":324,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":325,"author":{"gitId":"Musfirahe0556596"},"content":"---","lastModifiedDate":"2022-03-31"},{"lineNumber":326,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":327,"author":{"gitId":"alanlowzies"},"content":"### Workout-Related Features","lastModifiedDate":"2022-04-06"},{"lineNumber":328,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":329,"author":{"gitId":"Musfirahe0556596"},"content":"Format: `workout /commandAction \u003ccondition\u003e`","lastModifiedDate":"2022-04-04"},{"lineNumber":330,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":331,"author":{"gitId":"Musfirahe0556596"},"content":"Below is a class diagram of the workout-related features:","lastModifiedDate":"2022-04-04"},{"lineNumber":332,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":333,"author":{"gitId":"Musfirahe0556596"},"content":"![WorkoutUML](uml/classDiagrams/images/workoutRelatedFeatures.png)","lastModifiedDate":"2022-04-04"},{"lineNumber":334,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":335,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: To improve readability, some classes and methods have been omitted from the diagram above.","lastModifiedDate":"2022-04-08"},{"lineNumber":336,"author":{"gitId":"Musfirahe0556596"},"content":"The diagram shows the main classes and methods the workout-related features uses. \u003c/span\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":337,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":338,"author":{"gitId":"Musfirahe0556596"},"content":"The `Parser` class will call the `Parser#parseUserInput()` method","lastModifiedDate":"2022-04-09"},{"lineNumber":339,"author":{"gitId":"Musfirahe0556596"},"content":"to analyse the user\u0027s command. If the user\u0027s command is of type ","lastModifiedDate":"2022-04-04"},{"lineNumber":340,"author":{"gitId":"Musfirahe0556596"},"content":"`workout`, the `Parser#parseUserInput()` method","lastModifiedDate":"2022-04-09"},{"lineNumber":341,"author":{"gitId":"Musfirahe0556596"},"content":"will parse the `workout` base word and proceed to create a `WorkoutCommand` object via the","lastModifiedDate":"2022-04-04"},{"lineNumber":342,"author":{"gitId":"Musfirahe0556596"},"content":"`Parser#createWorkoutCommand()` method. ","lastModifiedDate":"2022-04-09"},{"lineNumber":343,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":344,"author":{"gitId":"Musfirahe0556596"},"content":"Once the `WorkoutCommand` object is created, the `WorkoutCommand#execute()` method","lastModifiedDate":"2022-04-04"},{"lineNumber":345,"author":{"gitId":"Musfirahe0556596"},"content":"is called. Depending on the type of command action, this method will","lastModifiedDate":"2022-04-04"},{"lineNumber":346,"author":{"gitId":"Musfirahe0556596"},"content":"call the appropriate operations from the `WorkoutList` class. For instance, if the command action","lastModifiedDate":"2022-04-04"},{"lineNumber":347,"author":{"gitId":"Musfirahe0556596"},"content":"is `/new`, the `WorkoutCommand#execute()` method will call `WorkoutList#createNewWorkout()`","lastModifiedDate":"2022-04-09"},{"lineNumber":348,"author":{"gitId":"Musfirahe0556596"},"content":"to create a new workout, followed by `WorkoutList#addNewWorkoutToLists()` to add the new workout to the application. ","lastModifiedDate":"2022-04-09"},{"lineNumber":349,"author":{"gitId":"Musfirahe0556596"},"content":"To view the details of the `WorkoutCommand#execute()`, click [here](https://github.com/AY2122S2-CS2113T-T09-2/tp/blob/master/src/main/java/commands/WorkoutCommand.java). ","lastModifiedDate":"2022-04-04"},{"lineNumber":350,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":351,"author":{"gitId":"Musfirahe0556596"},"content":"When all methods except the `listAllWorkout()` method are executed, the","lastModifiedDate":"2022-04-06"},{"lineNumber":352,"author":{"gitId":"Musfirahe0556596"},"content":"`FileManager` and `UI` classes will call its appropriate methods depending on the command action.","lastModifiedDate":"2022-04-06"},{"lineNumber":353,"author":{"gitId":"alanlowzies"},"content":"From the previous example, the `/new` workout command action will call the ","lastModifiedDate":"2022-04-07"},{"lineNumber":354,"author":{"gitId":"Musfirahe0556596"},"content":"`FileManager#writeNewWorkoutToFile()` and also the `UI#printNewCreatedMessage()`","lastModifiedDate":"2022-04-09"},{"lineNumber":355,"author":{"gitId":"Musfirahe0556596"},"content":"methods after the new workout has been created.","lastModifiedDate":"2022-04-04"},{"lineNumber":356,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":357,"author":{"gitId":"Musfirahe0556596"},"content":"Finally, methods in the `PlanList` class is only called when the `/delete` and `/update`","lastModifiedDate":"2022-04-04"},{"lineNumber":358,"author":{"gitId":"alanlowzies"},"content":"workout command actions are executed. These methods are used to modify the application\u0027s plan list","lastModifiedDate":"2022-04-07"},{"lineNumber":359,"author":{"gitId":"Musfirahe0556596"},"content":"as the `/delete` and `/update` actions are cascading actions ","lastModifiedDate":"2022-04-04"},{"lineNumber":360,"author":{"gitId":"Musfirahe0556596"},"content":"(i.e. deleting a workout will delete plan(s) containing that deleted workout).","lastModifiedDate":"2022-04-04"},{"lineNumber":361,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":362,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#feature-overview\"\u003eBack to Feature Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":363,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":364,"author":{"gitId":"Musfirahe0556596"},"content":"---","lastModifiedDate":"2022-03-31"},{"lineNumber":365,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":366,"author":{"gitId":"alanlowzies"},"content":"### Plan-Related Features","lastModifiedDate":"2022-04-06"},{"lineNumber":367,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":368,"author":{"gitId":"alanlowzies"},"content":"Format: `plan /commandAction \u003ccondition\u003e`","lastModifiedDate":"2022-04-07"},{"lineNumber":369,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":370,"author":{"gitId":"alanlowzies"},"content":"Below is a class diagram of the plan-related features:","lastModifiedDate":"2022-04-07"},{"lineNumber":371,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":372,"author":{"gitId":"TianaiYan"},"content":"![PlanUML](uml/classDiagrams/images/PlanRelatedFeatures.png)","lastModifiedDate":"2022-04-06"},{"lineNumber":373,"author":{"gitId":"TianaiYan"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":374,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":375,"author":{"gitId":"alanlowzies"},"content":"When WerkIt! is running, the `WerkIt` class will keep prompting the user to enter command through the","lastModifiedDate":"2022-04-07"},{"lineNumber":376,"author":{"gitId":"alanlowzies"},"content":"`WerkIt#startContinuousUserPrompt()` method. After the user has entered a command,","lastModifiedDate":"2022-04-07"},{"lineNumber":377,"author":{"gitId":"alanlowzies"},"content":"the `UI#getUserInput()` method will catch the user input,","lastModifiedDate":"2022-04-07"},{"lineNumber":378,"author":{"gitId":"TianaiYan"},"content":"and it will be sent to `Parser` class. Then, the `Parser#parseUserInput(userInput)`","lastModifiedDate":"2022-04-06"},{"lineNumber":379,"author":{"gitId":"TianaiYan"},"content":"method will be called to analyse the user\u0027s command.","lastModifiedDate":"2022-04-06"},{"lineNumber":380,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":381,"author":{"gitId":"TianaiYan"},"content":"If the user\u0027s command is of type `plan`, the `Parser#parseUserInput(userInput)` method","lastModifiedDate":"2022-04-06"},{"lineNumber":382,"author":{"gitId":"TianaiYan"},"content":"will parse the `plan` base word and proceed to create a `PlanCommand` object through","lastModifiedDate":"2022-04-06"},{"lineNumber":383,"author":{"gitId":"TianaiYan"},"content":"`Parser#createPlanCommand(userInput)` method.","lastModifiedDate":"2022-04-06"},{"lineNumber":384,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":385,"author":{"gitId":"TianaiYan"},"content":"Once the `PlanCommand` object is created, the `PlanCommand#execute()` method","lastModifiedDate":"2022-04-06"},{"lineNumber":386,"author":{"gitId":"TianaiYan"},"content":"is called. Depending on the type of command action, this method will","lastModifiedDate":"2022-04-06"},{"lineNumber":387,"author":{"gitId":"TianaiYan"},"content":"call the appropriate operations from the `PlanList` class. For instance, if the command action","lastModifiedDate":"2022-04-06"},{"lineNumber":388,"author":{"gitId":"Musfirahe0556596"},"content":"is `/new`, `PlanList#createNewPlan(userArgument)` will be called to create a new plan, followed","lastModifiedDate":"2022-04-09"},{"lineNumber":389,"author":{"gitId":"Musfirahe0556596"},"content":"by `PlanList#addNewPlanToLists()` to add the newly created plan to the application\u0027s plan list.","lastModifiedDate":"2022-04-09"},{"lineNumber":390,"author":{"gitId":"alanlowzies"},"content":"To view the details of the `PlanCommand#execute()`,","lastModifiedDate":"2022-04-07"},{"lineNumber":391,"author":{"gitId":"TianaiYan"},"content":"click [here](https://github.com/AY2122S2-CS2113T-T09-2/tp/blob/master/src/main/java/commands/PlanCommand.java).","lastModifiedDate":"2022-04-06"},{"lineNumber":392,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":393,"author":{"gitId":"Musfirahe0556596"},"content":"When `createNewPlan()` and  `deletePlan()` method in `PlanList` class are executed, the","lastModifiedDate":"2022-04-09"},{"lineNumber":394,"author":{"gitId":"TianaiYan"},"content":"`FileManager` and `UI` classes will call its appropriate methods depending on the command action.","lastModifiedDate":"2022-04-06"},{"lineNumber":395,"author":{"gitId":"alanlowzies"},"content":"From the previous example, the `/new` workout command action will call","lastModifiedDate":"2022-04-07"},{"lineNumber":396,"author":{"gitId":"TianaiYan"},"content":"the `UI#printNewPlanCreatedMessage()` and also the `FileManager#writeNewPlanToFile()`","lastModifiedDate":"2022-04-06"},{"lineNumber":397,"author":{"gitId":"TianaiYan"},"content":"methods after the new plan has been created.","lastModifiedDate":"2022-04-06"},{"lineNumber":398,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":399,"author":{"gitId":"TianaiYan"},"content":"Lastly, `WerkIt#startContinuousUserPrompt()` will check whether the command is of type `delete`.","lastModifiedDate":"2022-04-06"},{"lineNumber":400,"author":{"gitId":"TianaiYan"},"content":"If so, `reloadScheduleFile()` method in the `WerkIt` class will be executed to modify the","lastModifiedDate":"2022-04-06"},{"lineNumber":401,"author":{"gitId":"TianaiYan"},"content":"application’s day list.","lastModifiedDate":"2022-04-06"},{"lineNumber":402,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":403,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#feature-overview\"\u003eBack to Feature Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":404,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":405,"author":{"gitId":"Musfirahe0556596"},"content":"---","lastModifiedDate":"2022-03-31"},{"lineNumber":406,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":407,"author":{"gitId":"alanlowzies"},"content":"### Schedule-Related Features","lastModifiedDate":"2022-04-06"},{"lineNumber":408,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":409,"author":{"gitId":"alanlowzies"},"content":"Format: `schedule /commandAction \u003ccondition\u003e`","lastModifiedDate":"2022-04-07"},{"lineNumber":410,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":411,"author":{"gitId":"alanlowzies"},"content":"Below is a class diagram of the schedule-related features:","lastModifiedDate":"2022-04-07"},{"lineNumber":412,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":413,"author":{"gitId":"emilysim00"},"content":"![ScheduleUML](uml/classDiagrams/images/scheduleComponent.png)","lastModifiedDate":"2022-04-05"},{"lineNumber":414,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":415,"author":{"gitId":"emilysim00"},"content":"Users are able to create and make changes to a 7-day workout plan schedule using the WerkIt application. For each day, users are only allowed","lastModifiedDate":"2022-04-06"},{"lineNumber":416,"author":{"gitId":"alanlowzies"},"content":"to schedule 1 workout plan. Click [here](#glossary) to get a better understanding of what `workout`, `plan` and `schedule`","lastModifiedDate":"2022-04-07"},{"lineNumber":417,"author":{"gitId":"emilysim00"},"content":"means.","lastModifiedDate":"2022-04-05"},{"lineNumber":418,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":419,"author":{"gitId":"alanlowzies"},"content":"When WerkIt! is running, the `WerkIt` class will continuously prompt the user to enter a command via the","lastModifiedDate":"2022-04-07"},{"lineNumber":420,"author":{"gitId":"emilysim00"},"content":"`WerkIt#startContinuousUserPrompt()` method. After the user has entered command, the `UI#getUserInput()` method in `UI`","lastModifiedDate":"2022-04-06"},{"lineNumber":421,"author":{"gitId":"emilysim00"},"content":"class will catch the user input, and it will be sent to `Parser#parseUserInput(String userInput)` method to analyse the","lastModifiedDate":"2022-04-05"},{"lineNumber":422,"author":{"gitId":"emilysim00"},"content":"user\u0027s command.","lastModifiedDate":"2022-04-05"},{"lineNumber":423,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":424,"author":{"gitId":"emilysim00"},"content":"If the user\u0027s command type is `schedule`, the `Parser#parseUserInput(String userInput)` method will parse the `schedule`","lastModifiedDate":"2022-04-06"},{"lineNumber":425,"author":{"gitId":"alanlowzies"},"content":"base word and proceed to create a schedule-related command using `Parser#createScheduleCommand(String userInput)` method.","lastModifiedDate":"2022-04-07"},{"lineNumber":426,"author":{"gitId":"alanlowzies"},"content":"The following table shows the schedule commands that WerkIt! is able to process by calling the `ScheduleCommand#execute()`","lastModifiedDate":"2022-04-07"},{"lineNumber":427,"author":{"gitId":"emilysim00"},"content":"method.","lastModifiedDate":"2022-04-05"},{"lineNumber":428,"author":{"gitId":"emilysim00"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":429,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":430,"author":{"gitId":"alanlowzies"},"content":"| Command                                                             | `/commandAction` | Parameters                                                                                                                                                  | Method Called                               |","lastModifiedDate":"2022-04-07"},{"lineNumber":431,"author":{"gitId":"alanlowzies"},"content":"|---------------------------------------------------------------------|------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------|","lastModifiedDate":"2022-04-07"},{"lineNumber":432,"author":{"gitId":"alanlowzies"},"content":"| [schedule /update `\u003cday number\u003e` `\u003cplan number\u003e`](#update-schedule) | update           | `\u003cday number\u003e`: Number representing the day. \u003cbr/\u003e\u003cbr/\u003e`\u003cplan number\u003e`: Index of the plan stored in planList. This is the plan to be scheduled for the day. | `DayList#updateDay(String userArgument)`    |","lastModifiedDate":"2022-04-07"},{"lineNumber":433,"author":{"gitId":"emilysim00"},"content":"| [schedule /list](#view-schedule)                                    | list             |                                                                                                                                                             | `DayList#printSchedule() `                  |","lastModifiedDate":"2022-04-05"},{"lineNumber":434,"author":{"gitId":"alanlowzies"},"content":"| [schedule /clear `\u003cday number\u003e`](#clear-schedule-for-a-day)         | clear            | `\u003cday number\u003e`: Number representing the day.                                                                                                                | `DayList#clearDayPlan(String userArgument)` |","lastModifiedDate":"2022-04-07"},{"lineNumber":435,"author":{"gitId":"emilysim00"},"content":"| [schedule /clearall](#clear-schedule-for-the-week)                  | clearall         |                                                                                                                                                             | `DayList#clearAllSchedule()`                |","lastModifiedDate":"2022-04-05"},{"lineNumber":436,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":437,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":438,"author":{"gitId":"emilysim00"},"content":"To view the details of the `ScheduleCommand#execute()`, click [here](https://github.com/AY2122S2-CS2113T-T09-2/tp/blob/master/src/main/java/commands/ScheduleCommand.java).","lastModifiedDate":"2022-04-05"},{"lineNumber":439,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":440,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":441,"author":{"gitId":"alanlowzies"},"content":"The `\u003cday number\u003e` ranges from 1 to 7. The meaning of each day number is explained in the table below.","lastModifiedDate":"2022-04-07"},{"lineNumber":442,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":443,"author":{"gitId":"emilysim00"},"content":"| Day Number | Meaning   |","lastModifiedDate":"2022-04-05"},{"lineNumber":444,"author":{"gitId":"emilysim00"},"content":"|------------|-----------|","lastModifiedDate":"2022-04-05"},{"lineNumber":445,"author":{"gitId":"emilysim00"},"content":"| 1          | Monday    |","lastModifiedDate":"2022-04-05"},{"lineNumber":446,"author":{"gitId":"emilysim00"},"content":"| 2          | Tuesday   |","lastModifiedDate":"2022-04-05"},{"lineNumber":447,"author":{"gitId":"emilysim00"},"content":"| 3          | Wednesday |","lastModifiedDate":"2022-04-05"},{"lineNumber":448,"author":{"gitId":"emilysim00"},"content":"| 4          | Thursday  |","lastModifiedDate":"2022-04-05"},{"lineNumber":449,"author":{"gitId":"emilysim00"},"content":"| 5          | Friday    |","lastModifiedDate":"2022-04-05"},{"lineNumber":450,"author":{"gitId":"emilysim00"},"content":"| 6          | Saturday  |","lastModifiedDate":"2022-04-05"},{"lineNumber":451,"author":{"gitId":"emilysim00"},"content":"| 7          | Sunday    |","lastModifiedDate":"2022-04-05"},{"lineNumber":452,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":453,"author":{"gitId":"alanlowzies"},"content":"The `ScheduleCommand#execute()` will further evaluate the `/commandAction` and depending on the type of command action, ","lastModifiedDate":"2022-04-07"},{"lineNumber":454,"author":{"gitId":"alanlowzies"},"content":"this method will call the appropriate methods from the `DayList` class. If the `/commandAction` is null or incorrect,","lastModifiedDate":"2022-04-07"},{"lineNumber":455,"author":{"gitId":"emilysim00"},"content":"an `InvalidCommandException` will be thrown. If the `\u003cparameters\u003e` of certain commands are not specified or met, ","lastModifiedDate":"2022-04-05"},{"lineNumber":456,"author":{"gitId":"emilysim00"},"content":"an `InvalidScheduleException` will be thrown.","lastModifiedDate":"2022-04-05"},{"lineNumber":457,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":458,"author":{"gitId":"emilysim00"},"content":"For `commandAction` such as `/update`, `/clear` and `/clearall`, the method that was called to perform such commands will","lastModifiedDate":"2022-04-05"},{"lineNumber":459,"author":{"gitId":"emilysim00"},"content":"modify the application\u0027s schedule list. Hence, appropriate methods in the `FileManager` will be called to manage the data ","lastModifiedDate":"2022-04-05"},{"lineNumber":460,"author":{"gitId":"emilysim00"},"content":"and save them to the local file, `schedule.txt`. For more information on `FileManager` class, you can refer to this ","lastModifiedDate":"2022-04-05"},{"lineNumber":461,"author":{"gitId":"emilysim00"},"content":"[section](#how-data-is-written-or-updated-to-a-resource-file).","lastModifiedDate":"2022-04-07"},{"lineNumber":462,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":463,"author":{"gitId":"alanlowzies"},"content":"Furthermore, when methods such as `DayList#updateDay()` and `DayList#clearAllSchedule` are successfully executed, ","lastModifiedDate":"2022-04-07"},{"lineNumber":464,"author":{"gitId":"alanlowzies"},"content":"for the former method, `UI#printNewScheduleCreatedMessage(Day newDay)` method will be called to display a message ","lastModifiedDate":"2022-04-07"},{"lineNumber":465,"author":{"gitId":"alanlowzies"},"content":"to indicate that the plan has been successfully scheduled on a day and for the latter method, ","lastModifiedDate":"2022-04-07"},{"lineNumber":466,"author":{"gitId":"emilysim00"},"content":"`UI#printClearedScheduleMessage()` method will be called to display a message to indicate that the ","lastModifiedDate":"2022-04-05"},{"lineNumber":467,"author":{"gitId":"alanlowzies"},"content":"schedule list has been successfully reset.","lastModifiedDate":"2022-04-07"},{"lineNumber":468,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":469,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#feature-overview\"\u003eBack to Feature Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":470,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":471,"author":{"gitId":"Musfirahe0556596"},"content":"---","lastModifiedDate":"2022-03-31"},{"lineNumber":472,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":473,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":474,"author":{"gitId":"alanlowzies"},"content":"### Search-Related Features","lastModifiedDate":"2022-04-06"},{"lineNumber":475,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":476,"author":{"gitId":"alanlowzies"},"content":"Format: `search /commandAction \u003ckeywords\u003e`","lastModifiedDate":"2022-04-07"},{"lineNumber":477,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":478,"author":{"gitId":"Musfirahe0556596"},"content":"Below is a class diagram of the search-related features:","lastModifiedDate":"2022-03-31"},{"lineNumber":479,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":480,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":481,"author":{"gitId":"Musfirahe0556596"},"content":"![SearchUML](uml/classDiagrams/images/SearchClass.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":482,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":483,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":484,"author":{"gitId":"alanlowzies"},"content":"When WerkIt! is running, the `WerkIt` class will keep prompting the user to enter command through the","lastModifiedDate":"2022-04-07"},{"lineNumber":485,"author":{"gitId":"alanlowzies"},"content":"`WerkIt#startContinuousUserPrompt()` method. After the user has entered a command, The `UI#getUserInput()` method in `UI`","lastModifiedDate":"2022-04-07"},{"lineNumber":486,"author":{"gitId":"Musfirahe0556596"},"content":"class will catch the user input, and it will be sent to `Parser#parseUserInput(String userInput)` method to analyse the","lastModifiedDate":"2022-03-31"},{"lineNumber":487,"author":{"gitId":"alanlowzies"},"content":"user\u0027s command. ","lastModifiedDate":"2022-04-07"},{"lineNumber":488,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":489,"author":{"gitId":"alanlowzies"},"content":"If the user\u0027s command type is search, i.e. `search /commandAction \u003ckeywords\u003e`, the","lastModifiedDate":"2022-04-07"},{"lineNumber":490,"author":{"gitId":"alanlowzies"},"content":"`Parser#parseUserInput(String userInput)` method will parse the \u0027search\u0027 base word and proceed to create search-related","lastModifiedDate":"2022-04-07"},{"lineNumber":491,"author":{"gitId":"Musfirahe0556596"},"content":"command using `Parser#createSearchCommand(String userInput)` method. This method will further evaluate the","lastModifiedDate":"2022-03-31"},{"lineNumber":492,"author":{"gitId":"alanlowzies"},"content":"`/commandAction` and call the constructor of `SearchCommand` class by passing relevant parameters related to search to","lastModifiedDate":"2022-04-07"},{"lineNumber":493,"author":{"gitId":"alanlowzies"},"content":"the constructor. If the `/commandAction` is null or incorrect, an `InvalidCommandException` will be thrown. If","lastModifiedDate":"2022-04-07"},{"lineNumber":494,"author":{"gitId":"alanlowzies"},"content":"the `\u003ckeywords\u003e` is not specified, it will be deemed as searching for whitespaces.","lastModifiedDate":"2022-04-07"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":496,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#feature-overview\"\u003eBack to Feature Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":497,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":498,"author":{"gitId":"emilysim00"},"content":"---","lastModifiedDate":"2022-03-31"},{"lineNumber":499,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":500,"author":{"gitId":"alanlowzies"},"content":"## Implementation","lastModifiedDate":"2022-03-23"},{"lineNumber":501,"author":{"gitId":"alanlowzies"},"content":"### Overview","lastModifiedDate":"2022-03-23"},{"lineNumber":502,"author":{"gitId":"alanlowzies"},"content":"* [Getting User Input Continuously](#getting-user-input-continuously)","lastModifiedDate":"2022-03-23"},{"lineNumber":503,"author":{"gitId":"alanlowzies"},"content":"* [Parsing User Input and Getting the Right Command](#parsing-user-input-and-getting-the-right-command)","lastModifiedDate":"2022-03-23"},{"lineNumber":504,"author":{"gitId":"alanlowzies"},"content":"    * [Illegal Characters and Phrases](#illegal-characters-and-phrases)","lastModifiedDate":"2022-04-02"},{"lineNumber":505,"author":{"gitId":"Musfirahe0556596"},"content":"* [Exercise](#exercise)","lastModifiedDate":"2022-03-24"},{"lineNumber":506,"author":{"gitId":"a1021492980"},"content":"  * [List Exercise](#list-exercise)","lastModifiedDate":"2022-03-28"},{"lineNumber":507,"author":{"gitId":"Musfirahe0556596"},"content":"* [Workout](#workout)","lastModifiedDate":"2022-03-24"},{"lineNumber":508,"author":{"gitId":"alanlowzies"},"content":"  * [Create New Workout](#create-new-workout)","lastModifiedDate":"2022-03-23"},{"lineNumber":509,"author":{"gitId":"alanlowzies"},"content":"    * [Design Considerations](#design-considerations-for-creating-a-new-workout)","lastModifiedDate":"2022-03-23"},{"lineNumber":510,"author":{"gitId":"emilysim00"},"content":"  * [List All Workouts](#list-workout)","lastModifiedDate":"2022-04-01"},{"lineNumber":511,"author":{"gitId":"Musfirahe0556596"},"content":"  * [Delete Existing Workout](#delete-existing-workout)","lastModifiedDate":"2022-03-24"},{"lineNumber":512,"author":{"gitId":"Musfirahe0556596"},"content":"    * [Design Considerations](#design-considerations-for-deleting-existing-workout)","lastModifiedDate":"2022-03-24"},{"lineNumber":513,"author":{"gitId":"TianaiYan"},"content":"  * [Update Existing Workout](#update-existing-workout)","lastModifiedDate":"2022-04-06"},{"lineNumber":514,"author":{"gitId":"TianaiYan"},"content":"    * [Design Consideration](#design-considerations-for-updating-existing-workout)","lastModifiedDate":"2022-04-10"},{"lineNumber":515,"author":{"gitId":"Musfirahe0556596"},"content":"* [Plan](#plan)","lastModifiedDate":"2022-03-24"},{"lineNumber":516,"author":{"gitId":"Musfirahe0556596"},"content":"  * [Create A New Plan](#create-a-new-plan)","lastModifiedDate":"2022-03-24"},{"lineNumber":517,"author":{"gitId":"Musfirahe0556596"},"content":"    * [Design Considerations](#design-considerations-for-creating-a-new-plan)","lastModifiedDate":"2022-04-06"},{"lineNumber":518,"author":{"gitId":"Musfirahe0556596"},"content":"  * [List Plans](#list-plans)","lastModifiedDate":"2022-03-24"},{"lineNumber":519,"author":{"gitId":"TianaiYan"},"content":"  * [List Workouts In A Plan](#list-workouts-in-a-plan)","lastModifiedDate":"2022-04-06"},{"lineNumber":520,"author":{"gitId":"TianaiYan"},"content":"  * [Delete Existing Plan](#delete-existing-plan)","lastModifiedDate":"2022-04-06"},{"lineNumber":521,"author":{"gitId":"TianaiYan"},"content":"    * [Design Consideration](#design-considerations-for-deleting-existing-plan)","lastModifiedDate":"2022-04-10"},{"lineNumber":522,"author":{"gitId":"Musfirahe0556596"},"content":"* [Schedule](#schedule)","lastModifiedDate":"2022-03-24"},{"lineNumber":523,"author":{"gitId":"emilysim00"},"content":"  * [Update Schedule](#update-schedule)","lastModifiedDate":"2022-03-30"},{"lineNumber":524,"author":{"gitId":"emilysim00"},"content":"    * [Design Considerations](#design-considerations-for-update-schedule)","lastModifiedDate":"2022-03-30"},{"lineNumber":525,"author":{"gitId":"emilysim00"},"content":"  * [View Schedule](#view-schedule)","lastModifiedDate":"2022-03-30"},{"lineNumber":526,"author":{"gitId":"emilysim00"},"content":"  * [Clear plan scheduled for a day](#clear-schedule-for-a-day)","lastModifiedDate":"2022-03-30"},{"lineNumber":527,"author":{"gitId":"emilysim00"},"content":"  * [Clear all plans in the Schedule](#clear-schedule-for-the-week)","lastModifiedDate":"2022-03-30"},{"lineNumber":528,"author":{"gitId":"alanlowzies"},"content":"* [Search](#search)","lastModifiedDate":"2022-03-23"},{"lineNumber":529,"author":{"gitId":"alanlowzies"},"content":"  * [Search for Exercise](#search-for-exercise)","lastModifiedDate":"2022-03-23"},{"lineNumber":530,"author":{"gitId":"a1021492980"},"content":"  * [Search for Workout](#search-for-workout)","lastModifiedDate":"2022-03-28"},{"lineNumber":531,"author":{"gitId":"alanlowzies"},"content":"  * [Search for Plan](#search-for-plan)","lastModifiedDate":"2022-03-23"},{"lineNumber":532,"author":{"gitId":"a1021492980"},"content":"  * [Search for All](#search-for-all)","lastModifiedDate":"2022-03-28"},{"lineNumber":533,"author":{"gitId":"alanlowzies"},"content":"* [File Management](#file-management)","lastModifiedDate":"2022-04-06"},{"lineNumber":534,"author":{"gitId":"alanlowzies"},"content":"  * [About the Location of Directories and Files Created](#about-the-location-of-directories-and-files-created)","lastModifiedDate":"2022-04-06"},{"lineNumber":535,"author":{"gitId":"alanlowzies"},"content":"  * [Storage Format for Each Resource File](#storage-format-for-each-resource-file)","lastModifiedDate":"2022-04-06"},{"lineNumber":536,"author":{"gitId":"alanlowzies"},"content":"  * [Loading Resource File Data Into WerkIt!](#loading-resource-file-data-into-werkit)","lastModifiedDate":"2022-04-06"},{"lineNumber":537,"author":{"gitId":"alanlowzies"},"content":"  * [Writing a New Line of Data to the Resource File](#writing-a-new-line-of-data-to-the-resource-file)","lastModifiedDate":"2022-04-06"},{"lineNumber":538,"author":{"gitId":"alanlowzies"},"content":"  * [Rewriting the Resource Entire File With the Most Recent Set of Data](#rewriting-the-entire-resource-file-with-the-most-recent-set-of-data)","lastModifiedDate":"2022-04-09"},{"lineNumber":539,"author":{"gitId":"alanlowzies"},"content":"  * [About the `LogHandler` Class](#about-the-loghandler-class)","lastModifiedDate":"2022-04-06"},{"lineNumber":540,"author":{"gitId":"alanlowzies"},"content":"  * [Design Considerations](#design-considerations-for-file-management)","lastModifiedDate":"2022-04-06"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":542,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":543,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":544,"author":{"gitId":"alanlowzies"},"content":"### Getting User Input Continuously","lastModifiedDate":"2022-03-23"},{"lineNumber":545,"author":{"gitId":"alanlowzies"},"content":"Once `WerkIt` has finished loading any saved file data on the user\u0027s system, it will call ","lastModifiedDate":"2022-03-23"},{"lineNumber":546,"author":{"gitId":"alanlowzies"},"content":"`WerkIt#startContinuousUserPrompt()`. This method will call on `UI#printUserInputPrompt()` to print a prompt message","lastModifiedDate":"2022-03-23"},{"lineNumber":547,"author":{"gitId":"alanlowzies"},"content":"to the terminal and `UI#getUserInput()` to wait and capture the user\u0027s input. The input will be captured with the aid ","lastModifiedDate":"2022-03-23"},{"lineNumber":548,"author":{"gitId":"alanlowzies"},"content":"of Java\u0027s built-in `Scanner` class.","lastModifiedDate":"2022-03-23"},{"lineNumber":549,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":550,"author":{"gitId":"alanlowzies"},"content":"Once the user has entered an input, `UI#getUserInput()` trims any preceding and trailing whitespaces before returning ","lastModifiedDate":"2022-03-23"},{"lineNumber":551,"author":{"gitId":"alanlowzies"},"content":"the user\u0027s input as a `String` object to `WerkIt#startContinuousUserPrompt()`. Then, ","lastModifiedDate":"2022-03-23"},{"lineNumber":552,"author":{"gitId":"alanlowzies"},"content":"`WerkIt#startContinuousUserPrompt()` calls `WerkIt#parseUserInput()`, an intermediary method to call","lastModifiedDate":"2022-04-10"},{"lineNumber":553,"author":{"gitId":"alanlowzies"},"content":"`Parser#parseUserInput()`, which will parse the user\u0027s input and create an ","lastModifiedDate":"2022-04-10"},{"lineNumber":554,"author":{"gitId":"emilysim00"},"content":"object that is a subclass of the `Command` class. If there is no issue with the formatting of the user\u0027s input,","lastModifiedDate":"2022-04-01"},{"lineNumber":555,"author":{"gitId":"alanlowzies"},"content":"this subclass-of-`Command` object is returned to `WerkIt#startContinuousUserPrompt()` via `WerkIt#parseUserInput()`.","lastModifiedDate":"2022-04-10"},{"lineNumber":556,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":557,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: The intermediary `WerkIt#parseUserInput()` method is created to reduce the arrowhead code ","lastModifiedDate":"2022-04-10"},{"lineNumber":558,"author":{"gitId":"alanlowzies"},"content":"that was grossly present in `WerkIt#startContinuousUserPrompt()`.\u003c/span\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":559,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":560,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: A detailed implementation of the parsing and creation of subclass-of-`Command` ","lastModifiedDate":"2022-04-04"},{"lineNumber":561,"author":{"gitId":"alanlowzies"},"content":"object process can be found in ","lastModifiedDate":"2022-04-04"},{"lineNumber":562,"author":{"gitId":"alanlowzies"},"content":"\u0027[Parsing User Input and Getting the Right Command](#parsing-user-input-and-getting-the-right-command)\u0027.\u003c/span\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":563,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":564,"author":{"gitId":"alanlowzies"},"content":"Next, `WerkIt#startContinuousUserPrompt()` calls on the `execute()` method of the subclass-of-`Command` object to","lastModifiedDate":"2022-03-23"},{"lineNumber":565,"author":{"gitId":"alanlowzies"},"content":"perform the user\u0027s requested action. If the execution goes smoothly, this completes the user\u0027s inputted command.","lastModifiedDate":"2022-03-23"},{"lineNumber":566,"author":{"gitId":"alanlowzies"},"content":"This process is repeated until the user enters `exit`, which will terminate the loop, call `UI#printGoodbye()` to","lastModifiedDate":"2022-03-23"},{"lineNumber":567,"author":{"gitId":"alanlowzies"},"content":"print a goodbye message to the user, before handing control back to `Main#main()` to end the program.","lastModifiedDate":"2022-04-08"},{"lineNumber":568,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":569,"author":{"gitId":"alanlowzies"},"content":"#### Design Considerations","lastModifiedDate":"2022-03-23"},{"lineNumber":570,"author":{"gitId":"alanlowzies"},"content":"* `WerkIt#startContinuousUserPompt()` has a boolean flag `isFirstPrompt`. This flag allows WerkIt to","lastModifiedDate":"2022-03-23"},{"lineNumber":571,"author":{"gitId":"alanlowzies"},"content":"print a different prompt each time the application starts up, before defaulting to a different prompt message","lastModifiedDate":"2022-03-23"},{"lineNumber":572,"author":{"gitId":"alanlowzies"},"content":"for subsequent prompts.","lastModifiedDate":"2022-03-23"},{"lineNumber":573,"author":{"gitId":"alanlowzies"},"content":"   * When the user starts the application, `isFirstPrompt` is set to `true` and thus, the prompt will be:","lastModifiedDate":"2022-04-08"},{"lineNumber":574,"author":{"gitId":"alanlowzies"},"content":"  ```","lastModifiedDate":"2022-03-23"},{"lineNumber":575,"author":{"gitId":"alanlowzies"},"content":"  ----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":576,"author":{"gitId":"alanlowzies"},"content":"  Now then, what can I do for you today?","lastModifiedDate":"2022-03-23"},{"lineNumber":577,"author":{"gitId":"alanlowzies"},"content":"  (Need help? Type \u0027help\u0027 for a guide!)","lastModifiedDate":"2022-03-23"},{"lineNumber":578,"author":{"gitId":"alanlowzies"},"content":"  ----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":579,"author":{"gitId":"alanlowzies"},"content":"  \u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":580,"author":{"gitId":"alanlowzies"},"content":"  ```","lastModifiedDate":"2022-03-23"},{"lineNumber":581,"author":{"gitId":"alanlowzies"},"content":"  * Subsequent prompts in that app\u0027s session will be:","lastModifiedDate":"2022-04-08"},{"lineNumber":582,"author":{"gitId":"alanlowzies"},"content":"  ```","lastModifiedDate":"2022-03-23"},{"lineNumber":583,"author":{"gitId":"alanlowzies"},"content":"  ----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":584,"author":{"gitId":"alanlowzies"},"content":"  What\u0027s next?","lastModifiedDate":"2022-03-23"},{"lineNumber":585,"author":{"gitId":"alanlowzies"},"content":"  ----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":586,"author":{"gitId":"alanlowzies"},"content":"  \u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":587,"author":{"gitId":"alanlowzies"},"content":"  ```","lastModifiedDate":"2022-03-23"},{"lineNumber":588,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":589,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#implementation\"\u003eBack to Implementation Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":590,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":591,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":592,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":593,"author":{"gitId":"alanlowzies"},"content":"### Parsing User Input and Getting the Right Command","lastModifiedDate":"2022-03-23"},{"lineNumber":594,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":595,"author":{"gitId":"alanlowzies"},"content":"![Obtain and Parse User Input](uml/sequenceDiagrams/miscellaneous/images/obtainAndParseUserInput.png)","lastModifiedDate":"2022-04-02"},{"lineNumber":596,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":597,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: To improve the readability of the sequence diagram, the construction of the respective","lastModifiedDate":"2022-04-04"},{"lineNumber":598,"author":{"gitId":"alanlowzies"},"content":"objects which are subclasses of the `Command` class between Steps 4 and 17 are not included in the diagram.\u003c/span\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":599,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":600,"author":{"gitId":"alanlowzies"},"content":"**(Steps 1 and 2)** When a user enters something into the terminal (when prompted), `UI#getUserInput()` will take in ","lastModifiedDate":"2022-04-02"},{"lineNumber":601,"author":{"gitId":"alanlowzies"},"content":"the user\u0027s input as a `String` and call `String#trim()` to remove leading and trailing whitespaces in the input.","lastModifiedDate":"2022-04-02"},{"lineNumber":602,"author":{"gitId":"alanlowzies"},"content":"Thereafter, a line is printed on the terminal to indicate that the user\u0027s input has been received","lastModifiedDate":"2022-04-02"},{"lineNumber":603,"author":{"gitId":"alanlowzies"},"content":"and will be processed, before returning the user input as a `String` to the calling method (i.e. ","lastModifiedDate":"2022-04-02"},{"lineNumber":604,"author":{"gitId":"alanlowzies"},"content":"`WerkIt#startContinuousUserPrompt()`).","lastModifiedDate":"2022-04-02"},{"lineNumber":605,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":606,"author":{"gitId":"alanlowzies"},"content":"**(Step 3)** In `WerkIt#startContinuousUserPrompt()`, the method will pass the obtained user string as a parameter into","lastModifiedDate":"2022-04-02"},{"lineNumber":607,"author":{"gitId":"alanlowzies"},"content":"`WerkIt#parseUserInput()`, an intermediary method that will pass the parameter to `Parser#parseUserInput()` which does","lastModifiedDate":"2022-04-10"},{"lineNumber":608,"author":{"gitId":"alanlowzies"},"content":"the actual parsing of the user input.","lastModifiedDate":"2022-04-10"},{"lineNumber":609,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":610,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: The intermediary `WerkIt#parseUserInput()` is created to reduce the arrowhead code that","lastModifiedDate":"2022-04-10"},{"lineNumber":611,"author":{"gitId":"alanlowzies"},"content":"was grossly present in `WerkIt#startContinuousUserPrompt()`.\u003c/span\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":612,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":613,"author":{"gitId":"alanlowzies"},"content":"**(Step 4)** In `Parser#parseUserInput()`, it will first check if the user input contains any characters","lastModifiedDate":"2022-04-10"},{"lineNumber":614,"author":{"gitId":"alanlowzies"},"content":"or symbols that are deemed as illegal (see [\u0027Illegal Characters and Phrases\u0027](#illegal-characters-and-phrases) for details).","lastModifiedDate":"2022-04-10"},{"lineNumber":615,"author":{"gitId":"alanlowzies"},"content":"If at least one illegal character or phrase is found, an `InvalidCommandException` will be thrown and the parsing is","lastModifiedDate":"2022-04-02"},{"lineNumber":616,"author":{"gitId":"alanlowzies"},"content":"aborted.","lastModifiedDate":"2022-04-02"},{"lineNumber":617,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":618,"author":{"gitId":"alanlowzies"},"content":"**(Steps 5 to 18)** If no illegal characters and phrases are found, `Parser#parseUserInput()` will examine the first","lastModifiedDate":"2022-04-10"},{"lineNumber":619,"author":{"gitId":"alanlowzies"},"content":"word in the user input. This first word should represent the command type that the user wish to execute (i.e. `exercise`,","lastModifiedDate":"2022-04-02"},{"lineNumber":620,"author":{"gitId":"alanlowzies"},"content":"`workout`, `plan`, `schedule`, `search`, `help`, or `exit`). Depending on the first word of the user input, different","lastModifiedDate":"2022-04-02"},{"lineNumber":621,"author":{"gitId":"alanlowzies"},"content":"methods will be invoked to create the appropriate object of the subclass of the `Command` abstract superclass (see the ","lastModifiedDate":"2022-04-02"},{"lineNumber":622,"author":{"gitId":"alanlowzies"},"content":"bulleted point after this paragraph for an example). However, if the first word is not a valid command type, an ","lastModifiedDate":"2022-04-02"},{"lineNumber":623,"author":{"gitId":"alanlowzies"},"content":"`InvalidCommandException` will be thrown and the parsing is aborted.","lastModifiedDate":"2022-04-02"},{"lineNumber":624,"author":{"gitId":"alanlowzies"},"content":"- For example, if the user input is `workout /new push up /reps 10`, `Parser#createWorkoutCommand()` will be invoked","lastModifiedDate":"2022-04-02"},{"lineNumber":625,"author":{"gitId":"alanlowzies"},"content":"and a `WorkoutCommand` object will be returned by this method.","lastModifiedDate":"2022-04-02"},{"lineNumber":626,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":627,"author":{"gitId":"alanlowzies"},"content":"Inside each of these \u0027create command\u0027 methods, the following generalised procedure to create an object of the subclass ","lastModifiedDate":"2022-04-02"},{"lineNumber":628,"author":{"gitId":"alanlowzies"},"content":"of `Command` is carried out:","lastModifiedDate":"2022-04-02"},{"lineNumber":629,"author":{"gitId":"alanlowzies"},"content":"1. (For commands that expect an action keyword (e.g. `/list`, `/new`)) The action keyword is parsed and determined.","lastModifiedDate":"2022-04-02"},{"lineNumber":630,"author":{"gitId":"alanlowzies"},"content":"    - If the action keyword is invalid, an `InvalidCommandException` is thrown and the parsing is aborted.","lastModifiedDate":"2022-04-02"},{"lineNumber":631,"author":{"gitId":"alanlowzies"},"content":"2. Depending on the action keyword (or lack thereof), the number of arguments are checked.","lastModifiedDate":"2022-04-02"},{"lineNumber":632,"author":{"gitId":"alanlowzies"},"content":"    - If insufficient or too many arguments are provided in the user input, an `InvalidCommandException` is thrown","lastModifiedDate":"2022-04-02"},{"lineNumber":633,"author":{"gitId":"alanlowzies"},"content":"   and the parsing is aborted.","lastModifiedDate":"2022-04-02"},{"lineNumber":634,"author":{"gitId":"alanlowzies"},"content":"3. A new object of the subclass of `Command` is created and if the object is successfully constructed with no errors,","lastModifiedDate":"2022-04-02"},{"lineNumber":635,"author":{"gitId":"alanlowzies"},"content":"it is returned to `Parser#parseUserInput()`.","lastModifiedDate":"2022-04-02"},{"lineNumber":636,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":637,"author":{"gitId":"alanlowzies"},"content":"**(Steps 19 and 20)** The object created is then returned to `WerkIt#parseUserInput()`, which will return to","lastModifiedDate":"2022-04-10"},{"lineNumber":638,"author":{"gitId":"alanlowzies"},"content":"`WerkIt#startContinuousUserInput()`.","lastModifiedDate":"2022-04-10"},{"lineNumber":639,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":640,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: (About the sequence diagram) Strictly speaking, the object is returned right after whichever ","lastModifiedDate":"2022-04-04"},{"lineNumber":641,"author":{"gitId":"alanlowzies"},"content":"\u0027create command\u0027 method is invoked. However, to improve the readability of the diagram, only one return line is shown,","lastModifiedDate":"2022-04-02"},{"lineNumber":642,"author":{"gitId":"alanlowzies"},"content":"since all alternate paths will return an object that is a subclass of the `Command` class.\u003c/span\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":643,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":644,"author":{"gitId":"alanlowzies"},"content":"The final step of this section is to invoke the `Command#execute()` method, which will in turn call the","lastModifiedDate":"2022-04-02"},{"lineNumber":645,"author":{"gitId":"alanlowzies"},"content":"overridden `execute()` method of the subclass of `Command`.","lastModifiedDate":"2022-04-02"},{"lineNumber":646,"author":{"gitId":"alanlowzies"},"content":"- For example, if the user input is `workout /new push up /reps 10`, the created `WorkoutCommand` object is upcasted","lastModifiedDate":"2022-04-02"},{"lineNumber":647,"author":{"gitId":"alanlowzies"},"content":"to `Command` when returned to `WerkIt#startContinuousUserInput()`, but when `newCommand#execute()` is called,","lastModifiedDate":"2022-04-08"},{"lineNumber":648,"author":{"gitId":"alanlowzies"},"content":"`WorkoutCommand#execute()` is called.","lastModifiedDate":"2022-04-02"},{"lineNumber":649,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":650,"author":{"gitId":"alanlowzies"},"content":"Thereafter, the appropriate procedures are taken to complete the task requested by the user. The various procedures","lastModifiedDate":"2022-04-02"},{"lineNumber":651,"author":{"gitId":"alanlowzies"},"content":"are explained in later sections of this developer guide.","lastModifiedDate":"2022-04-02"},{"lineNumber":652,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":653,"author":{"gitId":"alanlowzies"},"content":"#### Illegal Characters and Phrases","lastModifiedDate":"2022-04-02"},{"lineNumber":654,"author":{"gitId":"alanlowzies"},"content":"Some symbols and phrases are reserved for use by the application and thus are not allowed to be used by the user","lastModifiedDate":"2022-04-02"},{"lineNumber":655,"author":{"gitId":"alanlowzies"},"content":"in his/her inputs to avoid any potential instabilities when processing his/her inputs.","lastModifiedDate":"2022-04-02"},{"lineNumber":656,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":657,"author":{"gitId":"alanlowzies"},"content":"| Illegal Character/Phrase | Purpose in Application                                                                                                                                                                |","lastModifiedDate":"2022-04-02"},{"lineNumber":658,"author":{"gitId":"alanlowzies"},"content":"|--------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-02"},{"lineNumber":659,"author":{"gitId":"alanlowzies"},"content":"| The pipe character \u0026#124; | Used as a delimiter in the app data files to separate the various data. Allowing the user to use delimiters in their plan names may cause issues when storing them in the data files. |","lastModifiedDate":"2022-04-02"},{"lineNumber":660,"author":{"gitId":"alanlowzies"},"content":"| The phrase \u0027rest day\u0027 | Used as an indicator that a particular day in the user\u0027s schedule does not have a plan in it. Allowing the user to name a plan as \u0027rest day\u0027 may cause issues when displaying the schedule. |","lastModifiedDate":"2022-04-02"},{"lineNumber":661,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":662,"author":{"gitId":"alanlowzies"},"content":"If these characters are inputted by the user, as mentioned in Step 3 above, an `InvalidCommandException` will be thrown ","lastModifiedDate":"2022-04-02"},{"lineNumber":663,"author":{"gitId":"alanlowzies"},"content":"and the parsing is aborted.","lastModifiedDate":"2022-04-02"},{"lineNumber":664,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":665,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#implementation\"\u003eBack to Implementation Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":666,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":667,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":668,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":669,"author":{"gitId":"Musfirahe0556596"},"content":"### Exercise","lastModifiedDate":"2022-03-24"},{"lineNumber":670,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":671,"author":{"gitId":"alanlowzies"},"content":"The overview of the design of the exercise feature can be found [here](#exercise-related-features).","lastModifiedDate":"2022-04-09"},{"lineNumber":672,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":673,"author":{"gitId":"a1021492980"},"content":"#### List Exercise","lastModifiedDate":"2022-03-28"},{"lineNumber":674,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":675,"author":{"gitId":"a1021492980"},"content":"If the user\u0027s command type is to list the exercises available, i.e. `exercise /list`, the","lastModifiedDate":"2022-03-29"},{"lineNumber":676,"author":{"gitId":"a1021492980"},"content":"`Parser#parseUserInput(String userInput)` method will parse the \u0027exercise\u0027 base word and proceed to create exercise related","lastModifiedDate":"2022-03-28"},{"lineNumber":677,"author":{"gitId":"a1021492980"},"content":"command using `Parser#createExerciseCommand(String userInput)` method. ","lastModifiedDate":"2022-04-10"},{"lineNumber":678,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":679,"author":{"gitId":"a1021492980"},"content":"This method will further evaluate the","lastModifiedDate":"2022-04-10"},{"lineNumber":680,"author":{"gitId":"a1021492980"},"content":"exercise action, in this case, `/list` and call the constructor of `ExerciseCommand` class by passing relevant parameters related to the","lastModifiedDate":"2022-03-28"},{"lineNumber":681,"author":{"gitId":"a1021492980"},"content":"ExerciseCommand constructor.","lastModifiedDate":"2022-04-10"},{"lineNumber":682,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":683,"author":{"gitId":"a1021492980"},"content":"If the exercise action is null or incorrect, an `InvalidCommandException` will be thrown. Once the exercise command is created,","lastModifiedDate":"2022-04-10"},{"lineNumber":684,"author":{"gitId":"a1021492980"},"content":"this exercise command is executed via the `ExerciseCommand#execute()` method. As it is executed, the method will check the","lastModifiedDate":"2022-03-28"},{"lineNumber":685,"author":{"gitId":"a1021492980"},"content":"type of action to be executed, in this case, `/list`. It will then list the exercises available for selection from ","lastModifiedDate":"2022-04-10"},{"lineNumber":686,"author":{"gitId":"a1021492980"},"content":"the exerciseList using the `ExerciseList#printExerciseList()`.","lastModifiedDate":"2022-04-10"},{"lineNumber":687,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":688,"author":{"gitId":"Musfirahe0556596"},"content":"The following sequence diagram illustrates how the `exercise /list` command works in greater detail:","lastModifiedDate":"2022-03-30"},{"lineNumber":689,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":690,"author":{"gitId":"a1021492980"},"content":"\u003cspan class\u003d\"info box\"\u003e:memo: To simplify the sequence diagram, some method invocations that are deemed to be trivial","lastModifiedDate":"2022-04-10"},{"lineNumber":691,"author":{"gitId":"a1021492980"},"content":"have been removed from the sequence diagram. Reference frames will be elaborated further","lastModifiedDate":"2022-04-10"},{"lineNumber":692,"author":{"gitId":"a1021492980"},"content":"down this section.\u003c/span\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":693,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":694,"author":{"gitId":"alanlowzies"},"content":"![List Exercise Sequence Diagram](uml/sequenceDiagrams/exercises/images/viewExercise.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":695,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":696,"author":{"gitId":"a1021492980"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: For more information on the obtaining and parsing functionality of WerkIt!, please refer to","lastModifiedDate":"2022-04-10"},{"lineNumber":697,"author":{"gitId":"a1021492980"},"content":"[\"Parsing User Input and Getting the Right Command\"](#parsing-user-input-and-getting-the-right-command) section.\u003c/span\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":698,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":699,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#implementation\"\u003eBack to Implementation Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":700,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":701,"author":{"gitId":"Musfirahe0556596"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":702,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":703,"author":{"gitId":"Musfirahe0556596"},"content":"### Workout","lastModifiedDate":"2022-03-24"},{"lineNumber":704,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":705,"author":{"gitId":"alanlowzies"},"content":"The overview of the design of the workout features can be found [here](#workout-related-features).","lastModifiedDate":"2022-04-09"},{"lineNumber":706,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":707,"author":{"gitId":"Musfirahe0556596"},"content":"#### Create New Workout","lastModifiedDate":"2022-03-24"},{"lineNumber":708,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":709,"author":{"gitId":"alanlowzies"},"content":"A summary of the general procedure of a new workout being inputted and stored into WerkIt! is as follows:","lastModifiedDate":"2022-03-23"},{"lineNumber":710,"author":{"gitId":"alanlowzies"},"content":"1. User enters the command `workout /new \u003cworkout name\u003e /reps \u003cnumber of repetitions\u003e`.","lastModifiedDate":"2022-03-23"},{"lineNumber":711,"author":{"gitId":"alanlowzies"},"content":"2. A new `Workout` object is created and stored in the application.","lastModifiedDate":"2022-03-23"},{"lineNumber":712,"author":{"gitId":"alanlowzies"},"content":"3. The success response is printed to the user through the terminal.","lastModifiedDate":"2022-03-23"},{"lineNumber":713,"author":{"gitId":"alanlowzies"},"content":"4. The new `Workout` object data is written to the resource file `workouts.txt`.","lastModifiedDate":"2022-03-23"},{"lineNumber":714,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":715,"author":{"gitId":"Musfirahe0556596"},"content":"The following sequence diagram illustrates how the `workout /new` command works in greater detail:","lastModifiedDate":"2022-03-30"},{"lineNumber":716,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":717,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: To simplify the sequence diagram, some method invocations that are deemed to be trivial ","lastModifiedDate":"2022-04-04"},{"lineNumber":718,"author":{"gitId":"alanlowzies"},"content":"have been removed from the sequence diagram. Some reference frames will be elaborated further ","lastModifiedDate":"2022-04-02"},{"lineNumber":719,"author":{"gitId":"alanlowzies"},"content":"down this section. Reference frames that will not be elaborated on will be made known.\u003c/span\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":720,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":721,"author":{"gitId":"alanlowzies"},"content":"![Create Workout Sequence Diagram](uml/sequenceDiagrams/workouts/images/CreateWorkout.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":722,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":723,"author":{"gitId":"alanlowzies"},"content":"**(Before Step 1)** The user\u0027s input (in this case will be a `workout /new` command) is obtained and parsed to obtain","lastModifiedDate":"2022-03-31"},{"lineNumber":724,"author":{"gitId":"alanlowzies"},"content":"a `WorkoutCommand` object that contains the user\u0027s input.","lastModifiedDate":"2022-03-31"},{"lineNumber":725,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":726,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: For more information on the obtaining and parsing functionality of WerkIt!, please refer to","lastModifiedDate":"2022-04-04"},{"lineNumber":727,"author":{"gitId":"alanlowzies"},"content":"[\"Parsing User Input and Getting the Right Command\"](#parsing-user-input-and-getting-the-right-command) section.\u003c/span\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":728,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":729,"author":{"gitId":"alanlowzies"},"content":"**(Step 1)** When `WorkoutCommand#execute()` is called, because this is a `workout /new` command, the method will call","lastModifiedDate":"2022-03-31"},{"lineNumber":730,"author":{"gitId":"alanlowzies"},"content":"`WorkoutList#createNewWorkout()`.","lastModifiedDate":"2022-04-09"},{"lineNumber":731,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":732,"author":{"gitId":"alanlowzies"},"content":"The following sequence diagram is the detailed procedures for Step 2\u0027s `WorkoutList#createNewWorkout()`:","lastModifiedDate":"2022-04-09"},{"lineNumber":733,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":734,"author":{"gitId":"alanlowzies"},"content":"![createNewWorkout() Sequence Diagram (Part 1)](uml/sequenceDiagrams/workouts/images/CreateNewWorkout.png)","lastModifiedDate":"2022-04-09"},{"lineNumber":735,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":736,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: To improve the diagram\u0027s readability, logging-related and input-checking method calls, and ","lastModifiedDate":"2022-04-04"},{"lineNumber":737,"author":{"gitId":"alanlowzies"},"content":"exception throws in `WorkoutList#createNewWorkout()` have been omitted.\u003c/span\u003e ","lastModifiedDate":"2022-04-09"},{"lineNumber":738,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":739,"author":{"gitId":"alanlowzies"},"content":"**(Before Step 2.1)** Methods from the `String` and `Integer` classes are called to parse the","lastModifiedDate":"2022-03-31"},{"lineNumber":740,"author":{"gitId":"alanlowzies"},"content":"argument given to `WorkoutList#createNewWorkout()` to obtain the following information required to create the","lastModifiedDate":"2022-04-09"},{"lineNumber":741,"author":{"gitId":"alanlowzies"},"content":"`Workout` object:","lastModifiedDate":"2022-03-23"},{"lineNumber":742,"author":{"gitId":"alanlowzies"},"content":"1. Name of the exercise","lastModifiedDate":"2022-03-23"},{"lineNumber":743,"author":{"gitId":"alanlowzies"},"content":"2. Number of repetitions associated with the exercise in (1).","lastModifiedDate":"2022-03-23"},{"lineNumber":744,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":745,"author":{"gitId":"alanlowzies"},"content":"Next, validity checks of the user input are carried out to ensure that the data entered is valid as a","lastModifiedDate":"2022-03-31"},{"lineNumber":746,"author":{"gitId":"alanlowzies"},"content":"new `Workout` object. The requirements for a valid new `Workout` object are as follows:","lastModifiedDate":"2022-03-31"},{"lineNumber":747,"author":{"gitId":"alanlowzies"},"content":"1. The exercise name must exist in `ExerciseList`\u0027s `exerciseList`, which is an `ArrayList\u003cString\u003e` of exercise ","lastModifiedDate":"2022-03-31"},{"lineNumber":748,"author":{"gitId":"TianaiYan"},"content":"names. An `InvalidExerciseException` is thrown if this requirement is not met. ","lastModifiedDate":"2022-04-02"},{"lineNumber":749,"author":{"gitId":"alanlowzies"},"content":"2. The repetition value must be a non-negative integer greater than 0.","lastModifiedDate":"2022-03-31"},{"lineNumber":750,"author":{"gitId":"alanlowzies"},"content":"3. The (exercise name, repetition value)-pair must not already exist in the list of workouts maintained in","lastModifiedDate":"2022-03-31"},{"lineNumber":751,"author":{"gitId":"alanlowzies"},"content":"`WorkoutList`. For example, if a workout of 20 reps of push-ups is already stored in the list,","lastModifiedDate":"2022-03-23"},{"lineNumber":752,"author":{"gitId":"alanlowzies"},"content":"it cannot be created again.","lastModifiedDate":"2022-03-23"},{"lineNumber":753,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":754,"author":{"gitId":"alanlowzies"},"content":"If any of the three requirements are not met, the entire workout creation process is aborted.","lastModifiedDate":"2022-03-31"},{"lineNumber":755,"author":{"gitId":"TianaiYan"},"content":"If requirement 1 is not met, an `InvalidExerciseException` will be thrown. If requirements 2 and/or 3 are not met, an ","lastModifiedDate":"2022-04-02"},{"lineNumber":756,"author":{"gitId":"alanlowzies"},"content":"`InvalidWorkoutException` will be thrown.","lastModifiedDate":"2022-03-31"},{"lineNumber":757,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":758,"author":{"gitId":"alanlowzies"},"content":"Note that the above methods and exception throws are not shown in the sequence diagram to improve the readability of the ","lastModifiedDate":"2022-03-31"},{"lineNumber":759,"author":{"gitId":"alanlowzies"},"content":"sequence diagram.","lastModifiedDate":"2022-03-31"},{"lineNumber":760,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":761,"author":{"gitId":"alanlowzies"},"content":"**(Steps 2.1 and 2.2)** If the above checks pass, a new `Workout` object with the user-specified exercise name and","lastModifiedDate":"2022-04-09"},{"lineNumber":762,"author":{"gitId":"alanlowzies"},"content":"repetition value is created. The new object is then returned to `WorkoutCommand#execute()` ","lastModifiedDate":"2022-04-09"},{"lineNumber":763,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":764,"author":{"gitId":"alanlowzies"},"content":"**(Steps 4 and 5)** The new `Workout` object passed to `WorkoutList#addNewWorkoutToLists()` to add to two lists maintained","lastModifiedDate":"2022-04-09"},{"lineNumber":765,"author":{"gitId":"alanlowzies"},"content":"in the `WorkoutList` object: `workoutsHashMapList` and `workoutsDisplayList`. The following steps are ","lastModifiedDate":"2022-04-09"},{"lineNumber":766,"author":{"gitId":"alanlowzies"},"content":"taken:","lastModifiedDate":"2022-04-09"},{"lineNumber":767,"author":{"gitId":"alanlowzies"},"content":"1. Key of the `workout` object will be generated (see the ","lastModifiedDate":"2022-04-09"},{"lineNumber":768,"author":{"gitId":"alanlowzies"},"content":"[Design Considerations](#design-considerations-for-creating-a-new-workout) section for more details of the `HashMap`","lastModifiedDate":"2022-03-23"},{"lineNumber":769,"author":{"gitId":"alanlowzies"},"content":"implementation).","lastModifiedDate":"2022-03-31"},{"lineNumber":770,"author":{"gitId":"alanlowzies"},"content":"2. The key-`Workout` pair is stored in `workoutsHashMapList` which in turn is stored in `WorkoutList`. ","lastModifiedDate":"2022-04-09"},{"lineNumber":771,"author":{"gitId":"alanlowzies"},"content":"3. The key of the newly-created `Workout` object is added to the `workoutsDisplayList`, an ","lastModifiedDate":"2022-04-09"},{"lineNumber":772,"author":{"gitId":"alanlowzies"},"content":"`ArrayList\u003cString\u003e` object stored in `WorkoutList`. This ArrayList will be used for displaying the workouts when the ","lastModifiedDate":"2022-03-29"},{"lineNumber":773,"author":{"gitId":"alanlowzies"},"content":"command `workout /list` is entered by the user.","lastModifiedDate":"2022-04-09"},{"lineNumber":774,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":775,"author":{"gitId":"alanlowzies"},"content":"**(Step 6)** Upon returning to `WorkoutCommand`, `UI#printNewWorkoutCreatedMessage()` is called to display a response to","lastModifiedDate":"2022-04-09"},{"lineNumber":776,"author":{"gitId":"alanlowzies"},"content":"the user via the terminal. The following is an example of a response after the user entered `workout /new russian twist ","lastModifiedDate":"2022-03-23"},{"lineNumber":777,"author":{"gitId":"alanlowzies"},"content":"/reps 50`:","lastModifiedDate":"2022-03-23"},{"lineNumber":778,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":779,"author":{"gitId":"alanlowzies"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":780,"author":{"gitId":"alanlowzies"},"content":"Alright, the following workout has been created:","lastModifiedDate":"2022-03-23"},{"lineNumber":781,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":782,"author":{"gitId":"alanlowzies"},"content":"\trussian twist (50 reps)","lastModifiedDate":"2022-03-23"},{"lineNumber":783,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":784,"author":{"gitId":"alanlowzies"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":785,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":786,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":787,"author":{"gitId":"alanlowzies"},"content":"**(Step 8)** `FileManager#writeNewWorkoutToFile` is called to write the newly-created `Workout` object\u0027s data into ","lastModifiedDate":"2022-04-09"},{"lineNumber":788,"author":{"gitId":"alanlowzies"},"content":"`workouts.txt` which is stored on the user\u0027s local filesystem.","lastModifiedDate":"2022-03-23"},{"lineNumber":789,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":790,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"info box\"\u003e:memo: For more information on how the data is written to `workouts.txt`, please refer to","lastModifiedDate":"2022-04-08"},{"lineNumber":791,"author":{"gitId":"alanlowzies"},"content":"[\u0027File Management - Writing a New Line of Data to the Resource File\u0027](#writing-a-new-line-of-data-to-the-resource-file).\u003c/span\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":792,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":793,"author":{"gitId":"alanlowzies"},"content":"This completes the process of adding a new workout to WerkIt!","lastModifiedDate":"2022-04-08"},{"lineNumber":794,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":795,"author":{"gitId":"Musfirahe0556596"},"content":"##### Design Considerations for Creating a New Workout","lastModifiedDate":"2022-03-24"},{"lineNumber":796,"author":{"gitId":"Musfirahe0556596"},"content":"###### HashMaps - Motivation","lastModifiedDate":"2022-03-24"},{"lineNumber":797,"author":{"gitId":"alanlowzies"},"content":"Back in Version 1.0 of WerkIt!, workouts were stored in an ArrayList of `Workout` objects. In that version, plans","lastModifiedDate":"2022-03-23"},{"lineNumber":798,"author":{"gitId":"alanlowzies"},"content":"and schedules were not yet implemented and thus there was no real issues, since we can easily use index numbers","lastModifiedDate":"2022-03-23"},{"lineNumber":799,"author":{"gitId":"alanlowzies"},"content":"shown in `workout /list` to reference workouts when the user enters `workout /update` and `workout /delete` commands.","lastModifiedDate":"2022-03-23"},{"lineNumber":800,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":801,"author":{"gitId":"alanlowzies"},"content":"As an example, here is a list of workouts as shown when `workout /list` is used:","lastModifiedDate":"2022-03-23"},{"lineNumber":802,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":803,"author":{"gitId":"alanlowzies"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":804,"author":{"gitId":"alanlowzies"},"content":"\u003e workout /list","lastModifiedDate":"2022-03-23"},{"lineNumber":805,"author":{"gitId":"alanlowzies"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":806,"author":{"gitId":"alanlowzies"},"content":"Showing workouts 1-3 of 3:","lastModifiedDate":"2022-03-23"},{"lineNumber":807,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":808,"author":{"gitId":"alanlowzies"},"content":"1. push up (10 reps)","lastModifiedDate":"2022-03-23"},{"lineNumber":809,"author":{"gitId":"alanlowzies"},"content":"2. sit up (10 reps)","lastModifiedDate":"2022-03-23"},{"lineNumber":810,"author":{"gitId":"alanlowzies"},"content":"3. pull up (10 reps)","lastModifiedDate":"2022-03-23"},{"lineNumber":811,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":812,"author":{"gitId":"alanlowzies"},"content":"Showed all workouts in list","lastModifiedDate":"2022-03-23"},{"lineNumber":813,"author":{"gitId":"alanlowzies"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":814,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":815,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":816,"author":{"gitId":"alanlowzies"},"content":"Thus, if we want to update the workout with 10 reps of push-ups, we can enter `workout /update 1 15` to update ","lastModifiedDate":"2022-03-23"},{"lineNumber":817,"author":{"gitId":"alanlowzies"},"content":"the repetition value to 15.","lastModifiedDate":"2022-03-23"},{"lineNumber":818,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":819,"author":{"gitId":"alanlowzies"},"content":"However, when we were designing and preparing for Version 2.0, we discovered that this **relative referencing** of","lastModifiedDate":"2022-03-23"},{"lineNumber":820,"author":{"gitId":"alanlowzies"},"content":"workouts by their indices pose a potentially cumbersome issue when implementing the plans and schedule features. If","lastModifiedDate":"2022-03-23"},{"lineNumber":821,"author":{"gitId":"alanlowzies"},"content":"we were to continue using relative indexing to reference workouts in plans, the effort needed to maintain the ","lastModifiedDate":"2022-03-23"},{"lineNumber":822,"author":{"gitId":"alanlowzies"},"content":"references in plans can become unnecessary complex.","lastModifiedDate":"2022-03-23"},{"lineNumber":823,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":824,"author":{"gitId":"alanlowzies"},"content":"For example, using the same list of workouts we have above, suppose we have a plan that includes workout indices","lastModifiedDate":"2022-03-23"},{"lineNumber":825,"author":{"gitId":"alanlowzies"},"content":"1 and 3 (10 push-ups and 10 pull-ups). Now, suppose the user decides to delete workout index 2 (10 sit-ups), this","lastModifiedDate":"2022-03-23"},{"lineNumber":826,"author":{"gitId":"alanlowzies"},"content":"means that the 10 pull-ups will now have an index number of 2. Thus, if we were to continue using relative indexing","lastModifiedDate":"2022-03-23"},{"lineNumber":827,"author":{"gitId":"alanlowzies"},"content":"to reference workouts in plans, there is a greater risk of making wrong references, and the amount of additional","lastModifiedDate":"2022-03-23"},{"lineNumber":828,"author":{"gitId":"alanlowzies"},"content":"code to update these references can become too complex.","lastModifiedDate":"2022-03-23"},{"lineNumber":829,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":830,"author":{"gitId":"Musfirahe0556596"},"content":"###### Usage of HashMap","lastModifiedDate":"2022-03-24"},{"lineNumber":831,"author":{"gitId":"alanlowzies"},"content":"Thus, we have decided to use a HashMap on top of the existing ArrayList to store `Workout` objects. This will allow ","lastModifiedDate":"2022-03-23"},{"lineNumber":832,"author":{"gitId":"alanlowzies"},"content":"workouts to be referenced by their unique keys when creating plans and schedules, while allowing the user to continue","lastModifiedDate":"2022-03-23"},{"lineNumber":833,"author":{"gitId":"alanlowzies"},"content":"using the convenience of relative indexing for `workout /update` and `workout /delete` commands. The ArrayList of ","lastModifiedDate":"2022-03-23"},{"lineNumber":834,"author":{"gitId":"alanlowzies"},"content":"`Workout` objects from before is now converted into an ArrayList of Strings that will keep the keys of the `Workout` ","lastModifiedDate":"2022-03-23"},{"lineNumber":835,"author":{"gitId":"alanlowzies"},"content":"objects. Now, to manipulate the `Workout` object (e.g. `workout /update`),","lastModifiedDate":"2022-03-23"},{"lineNumber":836,"author":{"gitId":"alanlowzies"},"content":"1. User enters the index number of the workout he/she wants to update (as seen in `workout /list`).","lastModifiedDate":"2022-03-23"},{"lineNumber":837,"author":{"gitId":"alanlowzies"},"content":"2. The key of the `Workout` object is obtained from the ArrayList of keys (`workoutsDisplayList`).","lastModifiedDate":"2022-03-23"},{"lineNumber":838,"author":{"gitId":"alanlowzies"},"content":"3. The `Workout` object is obtained from the HashMap (`workoutsHashMapList`).","lastModifiedDate":"2022-03-23"},{"lineNumber":839,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":840,"author":{"gitId":"alanlowzies"},"content":"Note that the user will not have any direct interactions with the HashMap implementation and it should be transparent","lastModifiedDate":"2022-03-23"},{"lineNumber":841,"author":{"gitId":"alanlowzies"},"content":"to him/her.","lastModifiedDate":"2022-03-23"},{"lineNumber":842,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":843,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#implementation\"\u003eBack to Implementation Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":844,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":845,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":846,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":847,"author":{"gitId":"Musfirahe0556596"},"content":"#### List Workout","lastModifiedDate":"2022-03-24"},{"lineNumber":848,"author":{"gitId":"emilysim00"},"content":"A summary of the general procedure of listing all the workouts being stored on WerkIt! is as follows:","lastModifiedDate":"2022-04-01"},{"lineNumber":849,"author":{"gitId":"emilysim00"},"content":"1. User enters the command `workout /list`.","lastModifiedDate":"2022-04-01"},{"lineNumber":850,"author":{"gitId":"alanlowzies"},"content":"2. The application will then process this command and display all workouts stored in the `workoutList` object.","lastModifiedDate":"2022-04-08"},{"lineNumber":851,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":852,"author":{"gitId":"emilysim00"},"content":"The following sequence diagram illustrates how the `workout /list` command works in greater detail:","lastModifiedDate":"2022-04-01"},{"lineNumber":853,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":854,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"info box\"\u003e:memo: To simplify the sequence diagram, some method invocations that are deemed to be trivial","lastModifiedDate":"2022-04-08"},{"lineNumber":855,"author":{"gitId":"alanlowzies"},"content":" have been removed from the sequence diagram. Reference frames will be elaborated further","lastModifiedDate":"2022-04-08"},{"lineNumber":856,"author":{"gitId":"alanlowzies"},"content":" down this section.\u003c/span\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":857,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":858,"author":{"gitId":"emilysim00"},"content":"![ListWorkoutUML](uml/sequenceDiagrams/workouts/images/listWorkout.png)","lastModifiedDate":"2022-04-01"},{"lineNumber":859,"author":{"gitId":"emilysim00"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":860,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":861,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"info box\"\u003e:memo: For more information on the obtaining and parsing functionality of WerkIt!, please refer to","lastModifiedDate":"2022-04-09"},{"lineNumber":862,"author":{"gitId":"alanlowzies"},"content":"[\"Parsing User Input and Getting the Right Command\"](#parsing-user-input-and-getting-the-right-command) section.\u003c/span\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":863,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":864,"author":{"gitId":"alanlowzies"},"content":"**(Steps 1)** The command entered by the user is a workout command and thus will be executed by calling the ","lastModifiedDate":"2022-04-08"},{"lineNumber":865,"author":{"gitId":"alanlowzies"},"content":"`WorkoutCommand#execute()` method.","lastModifiedDate":"2022-04-08"},{"lineNumber":866,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":867,"author":{"gitId":"alanlowzies"},"content":"**(Steps 2)** Since the command action is `/list`, ","lastModifiedDate":"2022-04-08"},{"lineNumber":868,"author":{"gitId":"alanlowzies"},"content":"the application will execute the `WorkoutList#listAllWorkout()` method to perform the action of listing the workouts. ","lastModifiedDate":"2022-04-08"},{"lineNumber":869,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":870,"author":{"gitId":"emilysim00"},"content":"**(Step 3)** If the workout list is empty, a message indicating the list is empty will be displayed to the user and the","lastModifiedDate":"2022-04-08"},{"lineNumber":871,"author":{"gitId":"emilysim00"},"content":"process of printing all workouts stored in the list is completed. ","lastModifiedDate":"2022-04-08"},{"lineNumber":872,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":873,"author":{"gitId":"emilysim00"},"content":"**(Steps 4 and 5)** To get each of the workouts stored in the `workoutList` object, `WorkoutList#getWorkoutFromIndexNum()` ","lastModifiedDate":"2022-04-10"},{"lineNumber":874,"author":{"gitId":"emilysim00"},"content":"method is called to obtain each of the `Workout` object. Each `Workout` object contains the exercise name as well as the ","lastModifiedDate":"2022-04-10"},{"lineNumber":875,"author":{"gitId":"emilysim00"},"content":"number of repetitions of that exercise set by the user. ","lastModifiedDate":"2022-04-01"},{"lineNumber":876,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":877,"author":{"gitId":"emilysim00"},"content":"**(Steps 6 to 8)** Upon obtaining the `Workout` object, `Workout#toString()` method is called to ","lastModifiedDate":"2022-04-10"},{"lineNumber":878,"author":{"gitId":"alanlowzies"},"content":"obtain a `String` representation of the `Workout` object, which will thereafter be printed onto the terminal for the user","lastModifiedDate":"2022-04-08"},{"lineNumber":879,"author":{"gitId":"emilysim00"},"content":"to read. A message to indicate that all workouts in the workout list have been printed will be displayed via ","lastModifiedDate":"2022-04-10"},{"lineNumber":880,"author":{"gitId":"emilysim00"},"content":"the terminal after all `Workout`objects have been printed.","lastModifiedDate":"2022-04-10"},{"lineNumber":881,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":882,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#implementation\"\u003eBack to Implementation Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":883,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":884,"author":{"gitId":"Musfirahe0556596"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":885,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":886,"author":{"gitId":"Musfirahe0556596"},"content":"#### Delete Existing Workout","lastModifiedDate":"2022-03-24"},{"lineNumber":887,"author":{"gitId":"Musfirahe0556596"},"content":"A summary of the general procedure of an existing workout being removed from WerkIt! is as follows:","lastModifiedDate":"2022-03-24"},{"lineNumber":888,"author":{"gitId":"Musfirahe0556596"},"content":"1. User enters the command `workout /delete \u003cworkout index number in workout list\u003e`.","lastModifiedDate":"2022-03-30"},{"lineNumber":889,"author":{"gitId":"TianaiYan"},"content":"2. The workout with the corresponding workout index number in the workout list (can be determined by entering `workout /list`) is removed from the application\u0027s workout list.","lastModifiedDate":"2022-04-02"},{"lineNumber":890,"author":{"gitId":"Musfirahe0556596"},"content":"3. The success response is printed to the user through the terminal.","lastModifiedDate":"2022-03-24"},{"lineNumber":891,"author":{"gitId":"Musfirahe0556596"},"content":"4. The resource file, `workouts.txt`, is rewritten according to the application\u0027s workout list that has been modified.","lastModifiedDate":"2022-03-30"},{"lineNumber":892,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":893,"author":{"gitId":"Musfirahe0556596"},"content":"The following sequence diagram illustrates how the `workout /delete` command works in greater detail:","lastModifiedDate":"2022-03-30"},{"lineNumber":894,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":895,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: To simplify the sequence diagram, some method invocations that are deemed to be trivial","lastModifiedDate":"2022-04-08"},{"lineNumber":896,"author":{"gitId":"alanlowzies"},"content":" have been removed from the sequence diagram. Reference frames will be elaborated further","lastModifiedDate":"2022-04-02"},{"lineNumber":897,"author":{"gitId":"alanlowzies"},"content":" down this section.\u003c/span\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":898,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":899,"author":{"gitId":"alanlowzies"},"content":"![Delete Workout Sequence Diagram](uml/sequenceDiagrams/workouts/images/deleteWorkout-Part1.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":900,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":901,"author":{"gitId":"Musfirahe0556596"},"content":"**(Before Step 1)** The user\u0027s input (in this case will be a `workout /delete` command) is obtained and parsed to obtain","lastModifiedDate":"2022-04-01"},{"lineNumber":902,"author":{"gitId":"Musfirahe0556596"},"content":"a `WorkoutCommand` object that contains the user\u0027s input.","lastModifiedDate":"2022-04-01"},{"lineNumber":903,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":904,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: For more information on the obtaining and parsing functionality of WerkIt!, please refer to","lastModifiedDate":"2022-04-04"},{"lineNumber":905,"author":{"gitId":"alanlowzies"},"content":" [\"Parsing User Input and Getting the Right Command\"](#parsing-user-input-and-getting-the-right-command) section.\u003c/span\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":906,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":907,"author":{"gitId":"Musfirahe0556596"},"content":"**(Step 1)** When the `WorkoutCommand#execute()` method is called, it will identify","lastModifiedDate":"2022-04-01"},{"lineNumber":908,"author":{"gitId":"alanlowzies"},"content":"that the workout action is of type `/delete`. Subsequently, it will call the ","lastModifiedDate":"2022-04-08"},{"lineNumber":909,"author":{"gitId":"Musfirahe0556596"},"content":"`WorkoutList#deleteWorkout()` method to perform the deletion of the workout.","lastModifiedDate":"2022-04-01"},{"lineNumber":910,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":911,"author":{"gitId":"Musfirahe0556596"},"content":"The following sequence diagram is the detailed procedure for Step 2\u0027s `WorkoutList#deleteWorkout()`:","lastModifiedDate":"2022-04-01"},{"lineNumber":912,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":913,"author":{"gitId":"alanlowzies"},"content":"![Delete Workout Detailed Sequence Diagram](uml/sequenceDiagrams/workouts/images/deleteWorkout-Part2.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":914,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":915,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: To improve the diagram\u0027s readability, logging-related and input-checking method calls, and exception throws in","lastModifiedDate":"2022-04-04"},{"lineNumber":916,"author":{"gitId":"alanlowzies"},"content":" `WorkoutList#deleteWorkout()` have been omitted.\u003c/span\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":917,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":918,"author":{"gitId":"Musfirahe0556596"},"content":"**(Steps 2.1 to 2.2)** The `Integer#parseInt()` method is called to parse the user argument parameter given to `WorkoutList#deleteWorkout()`.","lastModifiedDate":"2022-04-09"},{"lineNumber":919,"author":{"gitId":"Musfirahe0556596"},"content":"In this case, the user argument parameter is the workout index number of the workout to be deleted from the workout list as a `String` object.","lastModifiedDate":"2022-04-01"},{"lineNumber":920,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":921,"author":{"gitId":"Musfirahe0556596"},"content":"**(Steps 2.3 to 2.4)** With the workout index to delete, the `WorkoutList#deleteWorkout()` method will then","lastModifiedDate":"2022-04-09"},{"lineNumber":922,"author":{"gitId":"Musfirahe0556596"},"content":"fetch the `Workout` object to be deleted by calling the `WorkoutList#getWorkoutFromIndexNum()` method.","lastModifiedDate":"2022-04-09"},{"lineNumber":923,"author":{"gitId":"Musfirahe0556596"},"content":"However, before that `Workout` object is fetched, the `WorkoutList#deleteWorkout()` method","lastModifiedDate":"2022-04-09"},{"lineNumber":924,"author":{"gitId":"Musfirahe0556596"},"content":"checks that the workout index to delete is within the range of the application\u0027s workout list.","lastModifiedDate":"2022-04-01"},{"lineNumber":925,"author":{"gitId":"Musfirahe0556596"},"content":"If index to delete is not within the range of the workout list, an `InvalidWorkoutException` exception is thrown.","lastModifiedDate":"2022-04-01"},{"lineNumber":926,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":927,"author":{"gitId":"Musfirahe0556596"},"content":"**(Steps 2.5 to 2.8)** The `Workout` object to be deleted is subsequently removed from the ArrayList and HashMap which stores the","lastModifiedDate":"2022-04-01"},{"lineNumber":928,"author":{"gitId":"Musfirahe0556596"},"content":"application\u0027s workout list.","lastModifiedDate":"2022-03-24"},{"lineNumber":929,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":930,"author":{"gitId":"Musfirahe0556596"},"content":"**(Step 3)** The `WorkoutList#deleteWorkout()` method returns the deleted `Workout` object to `WorkoutCommand`.","lastModifiedDate":"2022-04-09"},{"lineNumber":931,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":932,"author":{"gitId":"Musfirahe0556596"},"content":"**(Steps 4 to 5)** Upon returning to the `WorkoutCommand` object, the `UI#printDeleteWorkoutMessage()` is called","lastModifiedDate":"2022-04-09"},{"lineNumber":933,"author":{"gitId":"Musfirahe0556596"},"content":"to display the workout that has been deleted to the user via the terminal. The following is an example ","lastModifiedDate":"2022-03-24"},{"lineNumber":934,"author":{"gitId":"Musfirahe0556596"},"content":"of a success deletion message after a valid workout is deleted from the application\u0027s workout list:","lastModifiedDate":"2022-03-30"},{"lineNumber":935,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":936,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":937,"author":{"gitId":"Musfirahe0556596"},"content":"Alright, the following workout has been removed:","lastModifiedDate":"2022-03-24"},{"lineNumber":938,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":939,"author":{"gitId":"Musfirahe0556596"},"content":"\tpush up (20 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":940,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":941,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":942,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":943,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":944,"author":{"gitId":"Musfirahe0556596"},"content":"**(Steps 6 to 7)** The `WorkoutCommand#deletePlanContainsDeletedWorkout()` method will","lastModifiedDate":"2022-04-02"},{"lineNumber":945,"author":{"gitId":"Musfirahe0556596"},"content":"be called to delete any existing plan(s) that contains that deleted workout.","lastModifiedDate":"2022-04-08"},{"lineNumber":946,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":947,"author":{"gitId":"Musfirahe0556596"},"content":"**(Steps 8 to 11)** The `FileManager#rewriteAllWorkoutsToFile()` is called to rewrite","lastModifiedDate":"2022-04-09"},{"lineNumber":948,"author":{"gitId":"Musfirahe0556596"},"content":"the `workouts.txt` file according to the newly modified application\u0027s workout list and the","lastModifiedDate":"2022-04-02"},{"lineNumber":949,"author":{"gitId":"Musfirahe0556596"},"content":"`FileManager#rewriteAllPlansToFile()` is also called to rewrite","lastModifiedDate":"2022-04-09"},{"lineNumber":950,"author":{"gitId":"Musfirahe0556596"},"content":"the `plans.txt` file according to the newly modified application\u0027s plan list.","lastModifiedDate":"2022-04-02"},{"lineNumber":951,"author":{"gitId":"Musfirahe0556596"},"content":"For more information on the file management, ","lastModifiedDate":"2022-04-09"},{"lineNumber":952,"author":{"gitId":"Musfirahe0556596"},"content":"refer to this [section](DeveloperGuide.md#rewriting-the-entire-resource-file-with-the-most-recent-set-of-data).","lastModifiedDate":"2022-04-09"},{"lineNumber":953,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":954,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":955,"author":{"gitId":"Musfirahe0556596"},"content":"This completes the process of deleting an existing workout in WerkIt!","lastModifiedDate":"2022-03-24"},{"lineNumber":956,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":957,"author":{"gitId":"Musfirahe0556596"},"content":"##### Design Considerations for Deleting Existing Workout","lastModifiedDate":"2022-03-24"},{"lineNumber":958,"author":{"gitId":"Musfirahe0556596"},"content":"###### Rewrite All Workout To File","lastModifiedDate":"2022-03-24"},{"lineNumber":959,"author":{"gitId":"alanlowzies"},"content":"Currently, the WerkIt! program will rewrite all workouts to the resource file, `workouts.txt`, when the delete workout","lastModifiedDate":"2022-04-08"},{"lineNumber":960,"author":{"gitId":"alanlowzies"},"content":"function is executed. Such an implementation may have performance issues as the program needs to rewrite the whole","lastModifiedDate":"2022-04-08"},{"lineNumber":961,"author":{"gitId":"Musfirahe0556596"},"content":"file with the modified workout list whenever a workout is deleted in the application.","lastModifiedDate":"2022-03-24"},{"lineNumber":962,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":963,"author":{"gitId":"Musfirahe0556596"},"content":"An alternative considered was to find the workout to be deleted in the resource file, and then","lastModifiedDate":"2022-03-24"},{"lineNumber":964,"author":{"gitId":"Musfirahe0556596"},"content":"remove that workout. While this is a more efficient implementation, it is more complex due to the","lastModifiedDate":"2022-03-30"},{"lineNumber":965,"author":{"gitId":"Musfirahe0556596"},"content":"way the workout data are formatted and stored in the `workouts.txt` file.","lastModifiedDate":"2022-03-30"},{"lineNumber":966,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":967,"author":{"gitId":"Musfirahe0556596"},"content":"Hence, to simplify the implementation, the team decided to simply","lastModifiedDate":"2022-03-30"},{"lineNumber":968,"author":{"gitId":"Musfirahe0556596"},"content":"rewrite all workouts to the resource file whenever a workout is deleted.","lastModifiedDate":"2022-03-30"},{"lineNumber":969,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":970,"author":{"gitId":"alanlowzies"},"content":"###### Deleting a Workout Will Cause a Cascading Delete Action","lastModifiedDate":"2022-04-08"},{"lineNumber":971,"author":{"gitId":"Musfirahe0556596"},"content":"When an existing workout is deleted from the application, plans that contain that workout","lastModifiedDate":"2022-04-06"},{"lineNumber":972,"author":{"gitId":"Musfirahe0556596"},"content":"should also be deleted. In addition, affected plans in the schedule should also be removed. This","lastModifiedDate":"2022-04-06"},{"lineNumber":973,"author":{"gitId":"alanlowzies"},"content":"cascading delete action from `workout -\u003e plan -\u003e schedule` must be done so that ","lastModifiedDate":"2022-04-08"},{"lineNumber":974,"author":{"gitId":"TianaiYan"},"content":"the data in the `workouts.txt`, `plans.txt` and `schedule.txt` files matches.","lastModifiedDate":"2022-04-06"},{"lineNumber":975,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":976,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#implementation\"\u003eBack to Implementation Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":977,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":978,"author":{"gitId":"Musfirahe0556596"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":979,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":980,"author":{"gitId":"TianaiYan"},"content":"#### Update Existing Workout","lastModifiedDate":"2022-04-02"},{"lineNumber":981,"author":{"gitId":"TianaiYan"},"content":"A summary of the general procedure of an existing workout from WerkIt! being updated to new number of repetitions","lastModifiedDate":"2022-04-02"},{"lineNumber":982,"author":{"gitId":"alanlowzies"},"content":"is as follows:\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":983,"author":{"gitId":"TianaiYan"},"content":"1. User enters the command `workout /update \u003cworkout index number\u003e \u003cnew number of repetitions\u003e`.","lastModifiedDate":"2022-04-02"},{"lineNumber":984,"author":{"gitId":"TianaiYan"},"content":"2. The workout with the corresponding workout index number in the workout list ","lastModifiedDate":"2022-04-02"},{"lineNumber":985,"author":{"gitId":"TianaiYan"},"content":"(can be determined by entering `workout /list`) is updated to the number of repetitions that user specified.","lastModifiedDate":"2022-04-02"},{"lineNumber":986,"author":{"gitId":"TianaiYan"},"content":"3. The success response is printed to the user through the terminal.","lastModifiedDate":"2022-04-02"},{"lineNumber":987,"author":{"gitId":"TianaiYan"},"content":"4. The resource file, `workouts.txt`, is rewritten according to the application\u0027s workout list that has been modified.","lastModifiedDate":"2022-04-02"},{"lineNumber":988,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":989,"author":{"gitId":"TianaiYan"},"content":"The following sequence diagram illustrates how the `workout /update` command works in greater detail:","lastModifiedDate":"2022-04-02"},{"lineNumber":990,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":991,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: To simplify the sequence diagram, some method invocations that are deemed to be trivial ","lastModifiedDate":"2022-04-08"},{"lineNumber":992,"author":{"gitId":"TianaiYan"},"content":"have been removed from the sequence diagram. Some reference frames will be elaborated further down this section.\u003c/span\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":993,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":994,"author":{"gitId":"TianaiYan"},"content":"![Update Workout Sequence Diagram](uml/sequenceDiagrams/workouts/images/updateWorkout-Part1.png)","lastModifiedDate":"2022-04-02"},{"lineNumber":995,"author":{"gitId":"TianaiYan"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":996,"author":{"gitId":"TianaiYan"},"content":"**(Before Step 1)** The user\u0027s input (in this case will be a `workout /update` command) is obtained and parsed to obtain","lastModifiedDate":"2022-04-02"},{"lineNumber":997,"author":{"gitId":"TianaiYan"},"content":"a `WorkoutCommand` object that contains the user\u0027s input.","lastModifiedDate":"2022-04-02"},{"lineNumber":998,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":999,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: For more information on the obtaining and parsing functionality of WerkIt!, please refer to","lastModifiedDate":"2022-04-04"},{"lineNumber":1000,"author":{"gitId":"TianaiYan"},"content":" [\"Parsing User Input and Getting the Right Command\"](#parsing-user-input-and-getting-the-right-command) section.\u003c/span\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":1001,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":1002,"author":{"gitId":"TianaiYan"},"content":"**(Step 1 to 3)** When the `WorkoutCommand#execute()` method is called, `workout /update` command is identified, and","lastModifiedDate":"2022-04-06"},{"lineNumber":1003,"author":{"gitId":"TianaiYan"},"content":"`WorkoutList#getCurrentWorkout()` will be called to get the name of the workout which will be updated later.","lastModifiedDate":"2022-04-02"},{"lineNumber":1004,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":1005,"author":{"gitId":"TianaiYan"},"content":"Subsequently, `WorkoutList#updateWorkout()` method will be called.","lastModifiedDate":"2022-04-02"},{"lineNumber":1006,"author":{"gitId":"TianaiYan"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":1007,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":1008,"author":{"gitId":"TianaiYan"},"content":"The following sequence diagram is the detailed procedure for Step 4\u0027s `WorkoutList#updateWorkout()`:","lastModifiedDate":"2022-04-02"},{"lineNumber":1009,"author":{"gitId":"TianaiYan"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":1010,"author":{"gitId":"TianaiYan"},"content":"![Update Workout Detailed Sequence Diagram](uml/sequenceDiagrams/workouts/images/updateWorkout-Part2.png)","lastModifiedDate":"2022-04-03"},{"lineNumber":1011,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":1012,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: To improve the diagram\u0027s readability, logging-related and input-checking method calls, ","lastModifiedDate":"2022-04-04"},{"lineNumber":1013,"author":{"gitId":"TianaiYan"},"content":"and exception throws in `WorkoutList#updateWorkout()` have been omitted.\u003c/span\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":1014,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":1015,"author":{"gitId":"TianaiYan"},"content":"**(Before Step 4.1)** Methods from the `String` and `Integer` classes are called to parse the","lastModifiedDate":"2022-04-02"},{"lineNumber":1016,"author":{"gitId":"TianaiYan"},"content":"argument given to `WorkoutList#updateWorkout()` to obtain the following information required to update a","lastModifiedDate":"2022-04-02"},{"lineNumber":1017,"author":{"gitId":"TianaiYan"},"content":"workout:","lastModifiedDate":"2022-04-02"},{"lineNumber":1018,"author":{"gitId":"TianaiYan"},"content":"1. Workout index number in list.","lastModifiedDate":"2022-04-06"},{"lineNumber":1019,"author":{"gitId":"TianaiYan"},"content":"2. New number of repetitions assigned to the workout in (1).","lastModifiedDate":"2022-04-02"},{"lineNumber":1020,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":1021,"author":{"gitId":"TianaiYan"},"content":"Next, validity checks of the user input are carried out to ensure that the data entered is valid. ","lastModifiedDate":"2022-04-02"},{"lineNumber":1022,"author":{"gitId":"TianaiYan"},"content":"The requirements for a valid input are as follows:","lastModifiedDate":"2022-04-02"},{"lineNumber":1023,"author":{"gitId":"TianaiYan"},"content":"1. Workout index number must be a positive integer smaller than the total number of workouts in list.","lastModifiedDate":"2022-04-06"},{"lineNumber":1024,"author":{"gitId":"TianaiYan"},"content":"2. New repetition value must be a non-negative integer greater than 0.","lastModifiedDate":"2022-04-02"},{"lineNumber":1025,"author":{"gitId":"alanlowzies"},"content":"3. Updated workout\u0027s exercise name and repetition number cannot be identical to an existing workout.","lastModifiedDate":"2022-04-08"},{"lineNumber":1026,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":1027,"author":{"gitId":"alanlowzies"},"content":"If any of the three requirements are not met, an `InvalidWorkoutException` will be thrown and ","lastModifiedDate":"2022-04-08"},{"lineNumber":1028,"author":{"gitId":"TianaiYan"},"content":"the entire update process is aborted.","lastModifiedDate":"2022-04-02"},{"lineNumber":1029,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":1030,"author":{"gitId":"TianaiYan"},"content":"**(Steps 4.1 to 4.2)** With the workout index number to update, the `WorkoutList#updateWorkout()` method ","lastModifiedDate":"2022-04-02"},{"lineNumber":1031,"author":{"gitId":"TianaiYan"},"content":"will then fetch the `Workout` object to be updated by calling method `WorkoutList#getWorkoutFromIndexNum()`.","lastModifiedDate":"2022-04-02"},{"lineNumber":1032,"author":{"gitId":"TianaiYan"},"content":"After the `Workout` object is fetched, a check will be conducted to ensure that the ","lastModifiedDate":"2022-04-02"},{"lineNumber":1033,"author":{"gitId":"alanlowzies"},"content":"(exercise name of the workout, new repetition value)-pair does not exist in the list of workouts maintained ","lastModifiedDate":"2022-04-08"},{"lineNumber":1034,"author":{"gitId":"TianaiYan"},"content":"in `WorkoutList`. For example, if a workout of 20 reps of push-ups is already stored in the list, a workout of ","lastModifiedDate":"2022-04-02"},{"lineNumber":1035,"author":{"gitId":"TianaiYan"},"content":"push up with 15 reps cannot be updated to push up with 20 reps.","lastModifiedDate":"2022-04-02"},{"lineNumber":1036,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":1037,"author":{"gitId":"TianaiYan"},"content":"If this check fails, an `InvalidWorkoutException` exception is thrown.","lastModifiedDate":"2022-04-02"},{"lineNumber":1038,"author":{"gitId":"TianaiYan"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":1039,"author":{"gitId":"alanlowzies"},"content":"**(Steps 4.3 to 4.6)** The `Workout` object to be updated is modified to the new number of reps and `workoutsHashMapList` ","lastModifiedDate":"2022-04-08"},{"lineNumber":1040,"author":{"gitId":"TianaiYan"},"content":"is subsequently updated.","lastModifiedDate":"2022-04-02"},{"lineNumber":1041,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":1042,"author":{"gitId":"TianaiYan"},"content":"This is the end of `WorkoutList#updateWorkout()` method.","lastModifiedDate":"2022-04-02"},{"lineNumber":1043,"author":{"gitId":"TianaiYan"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":1044,"author":{"gitId":"TianaiYan"},"content":"**(Step 5)** The `WorkoutList#updateWorkout()` method returns the updated `Workout` object to `WorkoutCommand`.","lastModifiedDate":"2022-04-02"},{"lineNumber":1045,"author":{"gitId":"TianaiYan"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":1046,"author":{"gitId":"TianaiYan"},"content":"**(Steps 6 to 7)** Upon returning to the `WorkoutCommand` object, the `UI#printUpdateWorkoutMessage()` is called","lastModifiedDate":"2022-04-02"},{"lineNumber":1047,"author":{"gitId":"TianaiYan"},"content":"to display the workout that has been updated to the user via the terminal. The following is an example","lastModifiedDate":"2022-04-02"},{"lineNumber":1048,"author":{"gitId":"TianaiYan"},"content":"of a success update message after a valid workout is updated from the workout list:","lastModifiedDate":"2022-04-02"},{"lineNumber":1049,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-04-02"},{"lineNumber":1050,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-04-02"},{"lineNumber":1051,"author":{"gitId":"TianaiYan"},"content":"Alright, the following workout has been updated:","lastModifiedDate":"2022-04-02"},{"lineNumber":1052,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":1053,"author":{"gitId":"TianaiYan"},"content":"\tpush up (10 reps)","lastModifiedDate":"2022-04-02"},{"lineNumber":1054,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":1055,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-04-02"},{"lineNumber":1056,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-04-02"},{"lineNumber":1057,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":1058,"author":{"gitId":"TianaiYan"},"content":"**(Steps 8 to 9)** The `WorkoutCommand#updatePlanContainsUpdatedWorkout()` method will","lastModifiedDate":"2022-04-02"},{"lineNumber":1059,"author":{"gitId":"TianaiYan"},"content":"be called to update any existing plan(s) that contains the workout that has been updated.","lastModifiedDate":"2022-04-02"},{"lineNumber":1060,"author":{"gitId":"TianaiYan"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":1061,"author":{"gitId":"TianaiYan"},"content":"**(Steps 10 to 13)** The `FileManager#rewriteAllWorkoutsToFile()` is called to rewrite","lastModifiedDate":"2022-04-02"},{"lineNumber":1062,"author":{"gitId":"alanlowzies"},"content":"the `workouts.txt` file according to the modified workout list and ","lastModifiedDate":"2022-04-08"},{"lineNumber":1063,"author":{"gitId":"TianaiYan"},"content":"the `FileManager#rewriteAllPlansToFile()` is also called to rewrite","lastModifiedDate":"2022-04-02"},{"lineNumber":1064,"author":{"gitId":"TianaiYan"},"content":"the `plans.txt` file according to the newly modified plan list.","lastModifiedDate":"2022-04-02"},{"lineNumber":1065,"author":{"gitId":"TianaiYan"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":1066,"author":{"gitId":"TianaiYan"},"content":"This completes the process of updating an existing workout in WerkIt!","lastModifiedDate":"2022-04-02"},{"lineNumber":1067,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":1068,"author":{"gitId":"TianaiYan"},"content":"##### Design Considerations for Updating Existing Workout","lastModifiedDate":"2022-04-06"},{"lineNumber":1069,"author":{"gitId":"alanlowzies"},"content":"###### Update a Workout Will Cause a Cascading Update Action","lastModifiedDate":"2022-04-08"},{"lineNumber":1070,"author":{"gitId":"TianaiYan"},"content":"When an existing workout is updated, plans that contain that workout","lastModifiedDate":"2022-04-06"},{"lineNumber":1071,"author":{"gitId":"alanlowzies"},"content":"should also be updated. This cascading update action from `workout -\u003e plan` must be done so that","lastModifiedDate":"2022-04-08"},{"lineNumber":1072,"author":{"gitId":"alanlowzies"},"content":"the data in the `workouts.txt` and `plans.txt` files matches.","lastModifiedDate":"2022-04-08"},{"lineNumber":1073,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1074,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#implementation\"\u003eBack to Implementation Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1075,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1076,"author":{"gitId":"TianaiYan"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":1077,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":1078,"author":{"gitId":"Musfirahe0556596"},"content":"### Plan","lastModifiedDate":"2022-03-24"},{"lineNumber":1079,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1080,"author":{"gitId":"alanlowzies"},"content":"The overview of the design of the plan features can be found [here](#plan-related-features).","lastModifiedDate":"2022-04-09"},{"lineNumber":1081,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1082,"author":{"gitId":"Musfirahe0556596"},"content":"#### Create A New Plan","lastModifiedDate":"2022-03-24"},{"lineNumber":1083,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":1084,"author":{"gitId":"Musfirahe0556596"},"content":"A summary of the general procedure of a new plan being created and stored in WerkIt! is as follows:","lastModifiedDate":"2022-03-25"},{"lineNumber":1085,"author":{"gitId":"Musfirahe0556596"},"content":"1. User enters the command `plan /new \u003cplan name\u003e /workouts \u003cworkout index numbers in workout list separated by comma\u003e`.","lastModifiedDate":"2022-03-30"},{"lineNumber":1086,"author":{"gitId":"Musfirahe0556596"},"content":"2. A new `Plan` object is created and stored in the application.","lastModifiedDate":"2022-03-25"},{"lineNumber":1087,"author":{"gitId":"Musfirahe0556596"},"content":"3. The success response is printed to the user through the terminal.","lastModifiedDate":"2022-03-25"},{"lineNumber":1088,"author":{"gitId":"Musfirahe0556596"},"content":"4. The new `Plan` object data is written to the resource file `plans.txt`.","lastModifiedDate":"2022-03-25"},{"lineNumber":1089,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":1090,"author":{"gitId":"Musfirahe0556596"},"content":"The following sequence diagram illustrates how the `plan /new` command works in greater detail:","lastModifiedDate":"2022-03-30"},{"lineNumber":1091,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":1092,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: To simplify the sequence diagram, some method invocations that are deemed to be trivial","lastModifiedDate":"2022-04-08"},{"lineNumber":1093,"author":{"gitId":"alanlowzies"},"content":" have been removed from the sequence diagram. Reference frames will be elaborated further","lastModifiedDate":"2022-04-02"},{"lineNumber":1094,"author":{"gitId":"alanlowzies"},"content":" down this section.\u003c/span\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":1095,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":1096,"author":{"gitId":"alanlowzies"},"content":"![Create Plan Sequence Diagram](uml/sequenceDiagrams/plans/images/createPlan-Part1.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":1097,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":1098,"author":{"gitId":"Musfirahe0556596"},"content":"**(Before Step 1)** The user\u0027s input (in this case will be a `plan /new` command) is obtained and parsed to obtain","lastModifiedDate":"2022-04-01"},{"lineNumber":1099,"author":{"gitId":"Musfirahe0556596"},"content":"a `PlanCommand` object that contains the user\u0027s input.","lastModifiedDate":"2022-04-01"},{"lineNumber":1100,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":1101,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"info box\"\u003e:memo: For more information on the obtaining and parsing functionality of WerkIt!, please refer to","lastModifiedDate":"2022-04-04"},{"lineNumber":1102,"author":{"gitId":"alanlowzies"},"content":" [\"Parsing User Input and Getting the Right Command\"](#parsing-user-input-and-getting-the-right-command) section.\u003c/span\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":1103,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":1104,"author":{"gitId":"Musfirahe0556596"},"content":"**(Step 1)** When the `PlanCommand#execute()` method is called, it will identify","lastModifiedDate":"2022-04-01"},{"lineNumber":1105,"author":{"gitId":"alanlowzies"},"content":"that the plan action is of type `/new`. Subsequently, it will call the","lastModifiedDate":"2022-04-08"},{"lineNumber":1106,"author":{"gitId":"Musfirahe0556596"},"content":"`PlanList#createNewPlan()` method to perform the creation of the plan.","lastModifiedDate":"2022-04-09"},{"lineNumber":1107,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":1108,"author":{"gitId":"Musfirahe0556596"},"content":"The following sequence diagram is the detailed procedure for Step 2\u0027s `PlanList#createNewPlan()`:","lastModifiedDate":"2022-04-09"},{"lineNumber":1109,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":1110,"author":{"gitId":"Musfirahe0556596"},"content":"![Create New Plan Detailed Sequence Diagram](uml/sequenceDiagrams/plans/images/createPlan-Part2.png)","lastModifiedDate":"2022-04-09"},{"lineNumber":1111,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":1112,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: To improve the diagram\u0027s readability, logging-related and input-checking method calls, and exception throws in","lastModifiedDate":"2022-04-04"},{"lineNumber":1113,"author":{"gitId":"Musfirahe0556596"},"content":" `PlanList#createNewPlan()` have been omitted.\u003c/span\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1114,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":1115,"author":{"gitId":"Musfirahe0556596"},"content":"**(Before Steps 2.1 to 2.2)** The user argument parameter of the `PlanList#createNewPlan()`","lastModifiedDate":"2022-04-09"},{"lineNumber":1116,"author":{"gitId":"Musfirahe0556596"},"content":"method is parsed to obtain the following information required to create the `Plan` object:","lastModifiedDate":"2022-04-01"},{"lineNumber":1117,"author":{"gitId":"Musfirahe0556596"},"content":"1. Name of the plan.","lastModifiedDate":"2022-03-30"},{"lineNumber":1118,"author":{"gitId":"Musfirahe0556596"},"content":"2. Workout index numbers in the workout list separated by comma.","lastModifiedDate":"2022-04-08"},{"lineNumber":1119,"author":{"gitId":"alanlowzies"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":1120,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1121,"author":{"gitId":"Musfirahe0556596"},"content":"Once the information are obtained, the name of the plan to be created will be validated.","lastModifiedDate":"2022-04-01"},{"lineNumber":1122,"author":{"gitId":"Musfirahe0556596"},"content":"This is to ensure all plan names are valid and unique in the application.","lastModifiedDate":"2022-04-08"},{"lineNumber":1123,"author":{"gitId":"Musfirahe0556596"},"content":"If the plan name is invalid, an `InvalidPlanException` exception will be thrown.","lastModifiedDate":"2022-03-30"},{"lineNumber":1124,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":1125,"author":{"gitId":"Musfirahe0556596"},"content":"Subsequently, this `PlanList#createNewPlan()` method will find out the number of workouts","lastModifiedDate":"2022-04-09"},{"lineNumber":1126,"author":{"gitId":"Musfirahe0556596"},"content":"to be added into the new plan. This is done in order to check that the number of workouts to be added into the new plan","lastModifiedDate":"2022-04-01"},{"lineNumber":1127,"author":{"gitId":"Musfirahe0556596"},"content":"does not exceed 10 workouts, and there should minimally","lastModifiedDate":"2022-04-01"},{"lineNumber":1128,"author":{"gitId":"alanlowzies"},"content":"be 1 workout in a plan. If the new plan does not meet the requirements,","lastModifiedDate":"2022-04-08"},{"lineNumber":1129,"author":{"gitId":"Musfirahe0556596"},"content":"an `InvalidPlanException` will be thrown.","lastModifiedDate":"2022-03-25"},{"lineNumber":1130,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":1131,"author":{"gitId":"alanlowzies"},"content":"**(Steps 2.1 to 2.2)** An ArrayList of `Workout` objects is created to store the workouts to be added into the new plan.","lastModifiedDate":"2022-04-08"},{"lineNumber":1132,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":1133,"author":{"gitId":"Musfirahe0556596"},"content":"**(Steps 2.3 to 2.4)** As the workout indexes in the user argument parameter (e.g. \"1, 2, 3\") is of type `String`, ","lastModifiedDate":"2022-04-01"},{"lineNumber":1134,"author":{"gitId":"Musfirahe0556596"},"content":"the loop will split (by comma) and convert each number string into an `Integer`. ","lastModifiedDate":"2022-03-30"},{"lineNumber":1135,"author":{"gitId":"Musfirahe0556596"},"content":"These workout indexes are also checked to ensure that they are within","lastModifiedDate":"2022-04-01"},{"lineNumber":1136,"author":{"gitId":"Musfirahe0556596"},"content":"the application\u0027s workout list range.","lastModifiedDate":"2022-04-01"},{"lineNumber":1137,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":1138,"author":{"gitId":"Musfirahe0556596"},"content":"If the workout indexes are valid, the valid `Workout` object is fetched from the application\u0027s workout list based ","lastModifiedDate":"2022-04-01"},{"lineNumber":1139,"author":{"gitId":"alanlowzies"},"content":"on the workout index and then added into the `ArrayList\u003cWorkout\u003e` that was created in the previous step (Steps 2.1 to 2.2).","lastModifiedDate":"2022-04-08"},{"lineNumber":1140,"author":{"gitId":"alanlowzies"},"content":"The loop will continue until all workouts to be added in the new plan is added into that `ArrayList\u003cWorkout\u003e`.","lastModifiedDate":"2022-04-08"},{"lineNumber":1141,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1142,"author":{"gitId":"Musfirahe0556596"},"content":"**(Steps 2.5 to 2.6)** With the valid plan name and the `ArrayList\u003cWorkout\u003e` containing the workouts to be added into the new plan, ","lastModifiedDate":"2022-04-09"},{"lineNumber":1143,"author":{"gitId":"Musfirahe0556596"},"content":"a new `Plan` object is created. However, before creating the `Plan` object, the `PlanList#createNewPlan()` method will ","lastModifiedDate":"2022-04-09"},{"lineNumber":1144,"author":{"gitId":"Musfirahe0556596"},"content":"check that the new plan to be created does not contain the same workout order as any existing plans. If it does, ","lastModifiedDate":"2022-04-08"},{"lineNumber":1145,"author":{"gitId":"Musfirahe0556596"},"content":"an `InvalidPlanException` exception will be thrown.","lastModifiedDate":"2022-04-08"},{"lineNumber":1146,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1147,"author":{"gitId":"Musfirahe0556596"},"content":"If it is confirmed that the new plan does not contain","lastModifiedDate":"2022-04-01"},{"lineNumber":1148,"author":{"gitId":"Musfirahe0556596"},"content":"the same workout order as any existing plan, a new `Plan` object is created.","lastModifiedDate":"2022-04-01"},{"lineNumber":1149,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":1150,"author":{"gitId":"Musfirahe0556596"},"content":"**(Step 3)** The `PlanList#createNewPlan()` method returns the newly created `Plan` object to `PlanCommand`.","lastModifiedDate":"2022-04-09"},{"lineNumber":1151,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1152,"author":{"gitId":"Musfirahe0556596"},"content":"**(Steps 4 to 5)** The `PlanCommand` object will then call the `PlanList#addNewPlanToLists()` method to add this new","lastModifiedDate":"2022-04-09"},{"lineNumber":1153,"author":{"gitId":"Musfirahe0556596"},"content":"`Plan` object to two lists maintained in the `PlanList` object: `plansHashMapList` and `plansDisplayList`.","lastModifiedDate":"2022-04-09"},{"lineNumber":1154,"author":{"gitId":"Musfirahe0556596"},"content":"The following are the steps taken:\u003cbr/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1155,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1156,"author":{"gitId":"Musfirahe0556596"},"content":"1. Key of the `Plan` object will be generated. In this case, the key is the unique plan name.","lastModifiedDate":"2022-04-09"},{"lineNumber":1157,"author":{"gitId":"Musfirahe0556596"},"content":"2. The key-`Plan` pair is stored in `plansHashMapList` which in turn is stored in `PlanList`.","lastModifiedDate":"2022-04-09"},{"lineNumber":1158,"author":{"gitId":"Musfirahe0556596"},"content":"3. The key of the newly-created `Plan` object is added to the `plansDisplayList`, an `ArrayList\u003cString\u003e` object stored in `PlanList`.","lastModifiedDate":"2022-04-09"},{"lineNumber":1159,"author":{"gitId":"Musfirahe0556596"},"content":"This ArrayList will be used for displaying the plans when the command `plan /list` is entered by the user.","lastModifiedDate":"2022-04-09"},{"lineNumber":1160,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1161,"author":{"gitId":"Musfirahe0556596"},"content":"After the new `Plan` object has been added, this `PlanList#addNewPlanToLists()` method will return to the `PlanCommand` object.","lastModifiedDate":"2022-04-09"},{"lineNumber":1162,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1163,"author":{"gitId":"Musfirahe0556596"},"content":"**(Steps 6 to 7)** Upon returning to the `PlanCommand` object, the `UI#printNewPlanCreatedMessage()` is called","lastModifiedDate":"2022-04-09"},{"lineNumber":1164,"author":{"gitId":"Musfirahe0556596"},"content":"to display the plan that has been created to the user via the terminal. The following is an example","lastModifiedDate":"2022-03-25"},{"lineNumber":1165,"author":{"gitId":"alanlowzies"},"content":"of a successful plan creation message (new plan is called \"grow my muscles\"):","lastModifiedDate":"2022-04-08"},{"lineNumber":1166,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-25"},{"lineNumber":1167,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-25"},{"lineNumber":1168,"author":{"gitId":"Musfirahe0556596"},"content":"Alright, the following plan has been created:","lastModifiedDate":"2022-03-25"},{"lineNumber":1169,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":1170,"author":{"gitId":"TianaiYan"},"content":"\tgrow my muscles","lastModifiedDate":"2022-04-06"},{"lineNumber":1171,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":1172,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-25"},{"lineNumber":1173,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-25"},{"lineNumber":1174,"author":{"gitId":"Musfirahe0556596"},"content":"**(Steps 8 to 9)** `FileManager#writeNewPlanToFile()` is called to write the newly-created `Plan` ","lastModifiedDate":"2022-04-09"},{"lineNumber":1175,"author":{"gitId":"Musfirahe0556596"},"content":"object\u0027s data into `plans.txt`, which is stored on the user\u0027s local filesystem.","lastModifiedDate":"2022-03-30"},{"lineNumber":1176,"author":{"gitId":"Musfirahe0556596"},"content":"For more information on the file management,","lastModifiedDate":"2022-04-09"},{"lineNumber":1177,"author":{"gitId":"Musfirahe0556596"},"content":"refer to this [section](DeveloperGuide.md#writing-a-new-line-of-data-to-the-resource-file).","lastModifiedDate":"2022-04-09"},{"lineNumber":1178,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1179,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1180,"author":{"gitId":"Musfirahe0556596"},"content":"This completes the process of creating and adding a new plan to WerkIt!.","lastModifiedDate":"2022-04-01"},{"lineNumber":1181,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":1182,"author":{"gitId":"Musfirahe0556596"},"content":"##### Design Considerations for Creating a New Plan","lastModifiedDate":"2022-04-06"},{"lineNumber":1183,"author":{"gitId":"alanlowzies"},"content":"###### Validity Checks for New Plans to Be Inserted","lastModifiedDate":"2022-04-08"},{"lineNumber":1184,"author":{"gitId":"alanlowzies"},"content":"The following table lists the validity checks done before a new plan can be inserted into the application\u0027s plan list,","lastModifiedDate":"2022-04-08"},{"lineNumber":1185,"author":{"gitId":"alanlowzies"},"content":"as well as the rationale of each check:","lastModifiedDate":"2022-04-08"},{"lineNumber":1186,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1187,"author":{"gitId":"alanlowzies"},"content":"| Type of Validity Checks             | Reason for Creating the Validity Checks                                                                                                                                                                                                                                                                                                     |","lastModifiedDate":"2022-04-08"},{"lineNumber":1188,"author":{"gitId":"Musfirahe0556596"},"content":"|:------------------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-09"},{"lineNumber":1189,"author":{"gitId":"Musfirahe0556596"},"content":"| Unique plan name                    | All plan names within the application should be unique as it makes no sense for users to create plans with the same names.                                                                                                                                                                                                                  |","lastModifiedDate":"2022-04-09"},{"lineNumber":1190,"author":{"gitId":"Musfirahe0556596"},"content":"| No plans called \"rest day\"          | \"rest day\" is used to identify the days in the schedule that do not have a plan assigned to it. If a plan called \"rest day\" is allowed, users might not be able to differentiate a rest day from days that they actually need to work out.                                                                                                  |","lastModifiedDate":"2022-04-09"},{"lineNumber":1191,"author":{"gitId":"Musfirahe0556596"},"content":"| Character limit for plan name       | Currently, the maximum character limit set for all plan names is 30 characters. This is for UI printing purposes.                                                                                                                                                                                                                           |","lastModifiedDate":"2022-04-09"},{"lineNumber":1192,"author":{"gitId":"Musfirahe0556596"},"content":"| Maximum number of workouts          | Currently, a plan only supports a maximum of 10 workouts as it makes no sense for a plan to have many different workouts in the real-life context. In addition, it helps to simplify the tracking of workouts in a plan if a maximum number is placed.                                                                                      |","lastModifiedDate":"2022-04-09"},{"lineNumber":1193,"author":{"gitId":"Musfirahe0556596"},"content":"| Check plans with same workout order | All plans within the application should have different workout orders. For instance, `PlanA with workout sequence 1,1,2` is the same as `PlanB with workout sequence 1,1,2`, even though the plan names are different. This check is done as it makes no sense to create two plans with different plan names, but same workout orders.      |","lastModifiedDate":"2022-04-09"},{"lineNumber":1194,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1195,"author":{"gitId":"TianaiYan"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":1196,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#implementation\"\u003eBack to Implementation Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1197,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1198,"author":{"gitId":"Musfirahe0556596"},"content":"---","lastModifiedDate":"2022-03-25"},{"lineNumber":1199,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":1200,"author":{"gitId":"Musfirahe0556596"},"content":"#### List Plans","lastModifiedDate":"2022-03-24"},{"lineNumber":1201,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":1202,"author":{"gitId":"Musfirahe0556596"},"content":"A summary of the general procedure of listing all plans in the application is as follows:","lastModifiedDate":"2022-03-30"},{"lineNumber":1203,"author":{"gitId":"Musfirahe0556596"},"content":"1. User enters the command `plan /list`.","lastModifiedDate":"2022-03-30"},{"lineNumber":1204,"author":{"gitId":"Musfirahe0556596"},"content":"2. A list of plan names is displayed to the user via the terminal.","lastModifiedDate":"2022-03-30"},{"lineNumber":1205,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1206,"author":{"gitId":"Musfirahe0556596"},"content":"The following sequence diagram illustrates how the `plan /list` command works in greater detail:","lastModifiedDate":"2022-03-30"},{"lineNumber":1207,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":1208,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: To simplify the sequence diagram, some method invocations that are deemed to be trivial","lastModifiedDate":"2022-04-08"},{"lineNumber":1209,"author":{"gitId":"Musfirahe0556596"},"content":" have been removed from the sequence diagram. \u003c/span\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":1210,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1211,"author":{"gitId":"alanlowzies"},"content":"![List Plan Sequence Diagram](uml/sequenceDiagrams/plans/images/listPlan.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":1212,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":1213,"author":{"gitId":"Musfirahe0556596"},"content":"**(Before Step 1)** The user\u0027s input (in this case will be a `plan /list` command) is obtained and parsed to obtain","lastModifiedDate":"2022-04-01"},{"lineNumber":1214,"author":{"gitId":"Musfirahe0556596"},"content":"a `PlanCommand` object that contains the user\u0027s input.","lastModifiedDate":"2022-04-01"},{"lineNumber":1215,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":1216,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: For more information on the obtaining and parsing functionality of WerkIt!, please refer to","lastModifiedDate":"2022-04-04"},{"lineNumber":1217,"author":{"gitId":"alanlowzies"},"content":" [\"Parsing User Input and Getting the Right Command\"](#parsing-user-input-and-getting-the-right-command) section.\u003c/span\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":1218,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":1219,"author":{"gitId":"Musfirahe0556596"},"content":"**(Steps 1 to 2)** When the `PlanCommand#execute()` method is called, it will identify","lastModifiedDate":"2022-04-01"},{"lineNumber":1220,"author":{"gitId":"Musfirahe0556596"},"content":"that the plan action is of type `list`. Subsequently, it will call the","lastModifiedDate":"2022-04-08"},{"lineNumber":1221,"author":{"gitId":"Musfirahe0556596"},"content":"`PlanList#listAllPlan()` method to display all available plan names.","lastModifiedDate":"2022-04-01"},{"lineNumber":1222,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":1223,"author":{"gitId":"Musfirahe0556596"},"content":"**(Step 3)** The `PlanList#listAllPlan()` method will first check if the application\u0027s plan list is empty.","lastModifiedDate":"2022-04-01"},{"lineNumber":1224,"author":{"gitId":"Musfirahe0556596"},"content":"If it is, it will display to the user that no plan has been created yet.","lastModifiedDate":"2022-04-01"},{"lineNumber":1225,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":1226,"author":{"gitId":"Musfirahe0556596"},"content":"**(Step 4)** The `PlanList#listAllPlan()` method will then loop through the application\u0027s plan list and show","lastModifiedDate":"2022-04-01"},{"lineNumber":1227,"author":{"gitId":"Musfirahe0556596"},"content":"the names of the plan to the user. The following is an example of what is ","lastModifiedDate":"2022-04-01"},{"lineNumber":1228,"author":{"gitId":"Musfirahe0556596"},"content":"displayed to the user when the `plan /list` command is entered while the application\u0027s plan list is not empty:","lastModifiedDate":"2022-03-30"},{"lineNumber":1229,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":1230,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-30"},{"lineNumber":1231,"author":{"gitId":"Musfirahe0556596"},"content":"Here are all your plan(s).","lastModifiedDate":"2022-03-30"},{"lineNumber":1232,"author":{"gitId":"Musfirahe0556596"},"content":"To view each plan in detail, enter","lastModifiedDate":"2022-03-30"},{"lineNumber":1233,"author":{"gitId":"Musfirahe0556596"},"content":"\u0027plan /details \u003cplan number in list\u003e\u0027.","lastModifiedDate":"2022-03-30"},{"lineNumber":1234,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1235,"author":{"gitId":"Musfirahe0556596"},"content":"1. test","lastModifiedDate":"2022-04-08"},{"lineNumber":1236,"author":{"gitId":"Musfirahe0556596"},"content":"2. grow my muscles","lastModifiedDate":"2022-04-08"},{"lineNumber":1237,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-30"},{"lineNumber":1238,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":1239,"author":{"gitId":"Musfirahe0556596"},"content":"**(Steps 5 to 6)** The `PlanList#listAllPlan()` method returns to the `PlanCommand` object","lastModifiedDate":"2022-04-01"},{"lineNumber":1240,"author":{"gitId":"Musfirahe0556596"},"content":"and the `PlanCommand` object returns to the `WerkIt` object.","lastModifiedDate":"2022-03-30"},{"lineNumber":1241,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":1242,"author":{"gitId":"Musfirahe0556596"},"content":"This completes the process of displaying all plans in WerkIt!.","lastModifiedDate":"2022-03-30"},{"lineNumber":1243,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1244,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#implementation\"\u003eBack to Implementation Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1245,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1246,"author":{"gitId":"TianaiYan"},"content":"---","lastModifiedDate":"2022-04-06"},{"lineNumber":1247,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1248,"author":{"gitId":"TianaiYan"},"content":"#### List Workouts In A Plan","lastModifiedDate":"2022-04-06"},{"lineNumber":1249,"author":{"gitId":"TianaiYan"},"content":"A summary of the general procedure of listing all workouts in a plan is as follows:","lastModifiedDate":"2022-04-06"},{"lineNumber":1250,"author":{"gitId":"TianaiYan"},"content":"1. User enters the command `plan /details \u003cplan index number\u003e`.","lastModifiedDate":"2022-04-06"},{"lineNumber":1251,"author":{"gitId":"alanlowzies"},"content":"2. A list of workouts that the user has specified is displayed through the terminal.","lastModifiedDate":"2022-04-08"},{"lineNumber":1252,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1253,"author":{"gitId":"TianaiYan"},"content":"The following sequence diagram illustrates how the `plan /details` command works:","lastModifiedDate":"2022-04-06"},{"lineNumber":1254,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1255,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: To simplify the sequence diagram, some method invocations that are deemed to be trivial","lastModifiedDate":"2022-04-08"},{"lineNumber":1256,"author":{"gitId":"TianaiYan"},"content":"have been removed from the sequence diagram.\u003c/span\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1257,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1258,"author":{"gitId":"TianaiYan"},"content":"![Details Of Plan Sequence Diagram](uml/sequenceDiagrams/plans/images/detailsOfPlan.png)","lastModifiedDate":"2022-04-06"},{"lineNumber":1259,"author":{"gitId":"TianaiYan"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1260,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1261,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: To improve the diagram\u0027s readability, logging-related, input-checking method calls,","lastModifiedDate":"2022-04-08"},{"lineNumber":1262,"author":{"gitId":"alanlowzies"},"content":"and exception throws in `PlanList#listPlanDetails()` have been omitted.\u003c/span\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":1263,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":1264,"author":{"gitId":"TianaiYan"},"content":"**(Before Step 1)** The user\u0027s input (in this case will be a `plan /details` command) is obtained and parsed to obtain","lastModifiedDate":"2022-04-06"},{"lineNumber":1265,"author":{"gitId":"TianaiYan"},"content":"a `PlanCommand` object that contains the user\u0027s input.","lastModifiedDate":"2022-04-06"},{"lineNumber":1266,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1267,"author":{"gitId":"TianaiYan"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: For more information on the obtaining and parsing functionality of WerkIt!, please refer to","lastModifiedDate":"2022-04-06"},{"lineNumber":1268,"author":{"gitId":"TianaiYan"},"content":"[\"Parsing User Input and Getting the Right Command\"](#parsing-user-input-and-getting-the-right-command) section.\u003c/span\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1269,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1270,"author":{"gitId":"TianaiYan"},"content":"**(Step 1 to 2)** When the `PlanCommand#execute()` method is called, it will identify that the plan action is of type ","lastModifiedDate":"2022-04-06"},{"lineNumber":1271,"author":{"gitId":"alanlowzies"},"content":"`/details`. Thus, `PlanList#listPlanDetails()` will be called to display all the workouts in the plan","lastModifiedDate":"2022-04-08"},{"lineNumber":1272,"author":{"gitId":"TianaiYan"},"content":"which user specified.","lastModifiedDate":"2022-04-06"},{"lineNumber":1273,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1274,"author":{"gitId":"TianaiYan"},"content":"**(Before Step 3)** Methods from the `Integer` class is called to parse the","lastModifiedDate":"2022-04-06"},{"lineNumber":1275,"author":{"gitId":"alanlowzies"},"content":"argument given to `PlanList#listPlanDetails()` to obtain the plan index number in the plan list.","lastModifiedDate":"2022-04-08"},{"lineNumber":1276,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1277,"author":{"gitId":"TianaiYan"},"content":"Next, validity checks of the user input are carried out to ensure that the data entered is valid.","lastModifiedDate":"2022-04-06"},{"lineNumber":1278,"author":{"gitId":"alanlowzies"},"content":"Plan index number must be a positive integer and smaller than the total number of plans in the list ","lastModifiedDate":"2022-04-08"},{"lineNumber":1279,"author":{"gitId":"TianaiYan"},"content":"in order to pass the check. Otherwise, an `InvalidPlanException` will be thrown and","lastModifiedDate":"2022-04-06"},{"lineNumber":1280,"author":{"gitId":"TianaiYan"},"content":"the entire process is aborted.","lastModifiedDate":"2022-04-06"},{"lineNumber":1281,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1282,"author":{"gitId":"TianaiYan"},"content":"**(Steps 3 to 4)** With the plan index number, a `Plan` object which user want to view details ","lastModifiedDate":"2022-04-06"},{"lineNumber":1283,"author":{"gitId":"TianaiYan"},"content":"will be fetched by calling method `PlanList#getPlanFromIndexNum()`.","lastModifiedDate":"2022-04-06"},{"lineNumber":1284,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1285,"author":{"gitId":"TianaiYan"},"content":"**(Steps 5 to 6)** An ArrayList of `Workout` object is created to store the workouts in the `Plan` object we get ","lastModifiedDate":"2022-04-06"},{"lineNumber":1286,"author":{"gitId":"TianaiYan"},"content":"in the previous step.","lastModifiedDate":"2022-04-06"},{"lineNumber":1287,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1288,"author":{"gitId":"alanlowzies"},"content":"**(Steps 7 to 9)** The `PlanList#listPlanDetails()` method will then loop through the workout list which we have obtained","lastModifiedDate":"2022-04-08"},{"lineNumber":1289,"author":{"gitId":"alanlowzies"},"content":"in the previous step and show the name of the workouts with number of repetitions to the user. ","lastModifiedDate":"2022-04-08"},{"lineNumber":1290,"author":{"gitId":"TianaiYan"},"content":"The following is an example of what will be displayed to the user when the `plan /details` command is entered:","lastModifiedDate":"2022-04-06"},{"lineNumber":1291,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1292,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-04-06"},{"lineNumber":1293,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-04-06"},{"lineNumber":1294,"author":{"gitId":"TianaiYan"},"content":"Here are the 3 workouts in [grow my muscles].","lastModifiedDate":"2022-04-06"},{"lineNumber":1295,"author":{"gitId":"TianaiYan"},"content":"1. push up (20 reps)","lastModifiedDate":"2022-04-06"},{"lineNumber":1296,"author":{"gitId":"TianaiYan"},"content":"2. sit up (10 reps)","lastModifiedDate":"2022-04-06"},{"lineNumber":1297,"author":{"gitId":"TianaiYan"},"content":"3. pull up (10 reps)","lastModifiedDate":"2022-04-06"},{"lineNumber":1298,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-04-06"},{"lineNumber":1299,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-04-06"},{"lineNumber":1300,"author":{"gitId":"TianaiYan"},"content":"This completes the process of displaying all workouts in a plan in WerkIt!","lastModifiedDate":"2022-04-06"},{"lineNumber":1301,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1302,"author":{"gitId":"TianaiYan"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#implementation\"\u003eBack to Implementation Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1303,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1304,"author":{"gitId":"TianaiYan"},"content":"---","lastModifiedDate":"2022-04-06"},{"lineNumber":1305,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1306,"author":{"gitId":"TianaiYan"},"content":"#### Delete Existing Plan","lastModifiedDate":"2022-04-06"},{"lineNumber":1307,"author":{"gitId":"TianaiYan"},"content":"A summary of the general procedure of listing all workouts in a plan is as follows:","lastModifiedDate":"2022-04-06"},{"lineNumber":1308,"author":{"gitId":"TianaiYan"},"content":"1. User enters the command `plan /delete \u003cplan index number\u003e`.","lastModifiedDate":"2022-04-06"},{"lineNumber":1309,"author":{"gitId":"alanlowzies"},"content":"2. The plan with corresponding plan index number (can be determined by entering `plan /list`) is removed from","lastModifiedDate":"2022-04-08"},{"lineNumber":1310,"author":{"gitId":"TianaiYan"},"content":"   the application’s plan list.","lastModifiedDate":"2022-04-06"},{"lineNumber":1311,"author":{"gitId":"TianaiYan"},"content":"3. The success response is printed to the user through the terminal.","lastModifiedDate":"2022-04-06"},{"lineNumber":1312,"author":{"gitId":"TianaiYan"},"content":"4. The resource file, `plans.txt`, is rewritten according to the application’s plan list that has been modified.","lastModifiedDate":"2022-04-06"},{"lineNumber":1313,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1314,"author":{"gitId":"TianaiYan"},"content":"The following sequence diagram illustrates how the `plan /delete` command works in greater detail:","lastModifiedDate":"2022-04-06"},{"lineNumber":1315,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1316,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: To simplify the sequence diagram, some method invocations that are deemed to be trivial","lastModifiedDate":"2022-04-08"},{"lineNumber":1317,"author":{"gitId":"TianaiYan"},"content":"have been removed from the sequence diagram. Reference frames will be elaborated further","lastModifiedDate":"2022-04-06"},{"lineNumber":1318,"author":{"gitId":"TianaiYan"},"content":"down this section.\u003c/span\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1319,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1320,"author":{"gitId":"TianaiYan"},"content":"![Delete Plan Sequence Diagram](uml/sequenceDiagrams/plans/images/deletePlan-Part1.png)","lastModifiedDate":"2022-04-06"},{"lineNumber":1321,"author":{"gitId":"TianaiYan"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1322,"author":{"gitId":"TianaiYan"},"content":"**(Before Step 1)** The user\u0027s input (in this case will be a `plan /delete` command) is obtained and parsed to obtain","lastModifiedDate":"2022-04-06"},{"lineNumber":1323,"author":{"gitId":"TianaiYan"},"content":"a `PlanCommand` object that contains the user\u0027s input.","lastModifiedDate":"2022-04-06"},{"lineNumber":1324,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1325,"author":{"gitId":"TianaiYan"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: For more information on the obtaining and parsing functionality of WerkIt!, please refer to","lastModifiedDate":"2022-04-06"},{"lineNumber":1326,"author":{"gitId":"TianaiYan"},"content":"[\"Parsing User Input and Getting the Right Command\"](#parsing-user-input-and-getting-the-right-command) section.\u003c/span\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1327,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1328,"author":{"gitId":"TianaiYan"},"content":"**(Step 1)** When the `PlanCommand#execute()` method is called,  it will identify that the workout action is","lastModifiedDate":"2022-04-06"},{"lineNumber":1329,"author":{"gitId":"alanlowzies"},"content":"of type `/delete`. `PlanList#deletePlan()` will be called to perform the deletion of plan.","lastModifiedDate":"2022-04-08"},{"lineNumber":1330,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1331,"author":{"gitId":"TianaiYan"},"content":"The following sequence diagram is the detailed procedure for Step 2\u0027s `PlanList#deletePlan()`:","lastModifiedDate":"2022-04-06"},{"lineNumber":1332,"author":{"gitId":"TianaiYan"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1333,"author":{"gitId":"TianaiYan"},"content":"![Delete Plan Detailed Sequence Diagram](uml/sequenceDiagrams/plans/images/deletePlan-Part2.png)","lastModifiedDate":"2022-04-06"},{"lineNumber":1334,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1335,"author":{"gitId":"TianaiYan"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: To improve the diagram\u0027s readability, logging-related and input-checking method calls,","lastModifiedDate":"2022-04-06"},{"lineNumber":1336,"author":{"gitId":"Musfirahe0556596"},"content":"and exception throws in `PlanList#deletePlan()` have been omitted.\u003c/span\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":1337,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1338,"author":{"gitId":"TianaiYan"},"content":"**(Before Step 2.1)** Method from `Integer` class is called to parse the user argument parameter given to","lastModifiedDate":"2022-04-06"},{"lineNumber":1339,"author":{"gitId":"TianaiYan"},"content":"`PlanList#deletePlan()` to obtain the plan index number.","lastModifiedDate":"2022-04-06"},{"lineNumber":1340,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1341,"author":{"gitId":"TianaiYan"},"content":"Next, validity checks of the user input are carried out to ensure that the data entered is valid.","lastModifiedDate":"2022-04-06"},{"lineNumber":1342,"author":{"gitId":"TianaiYan"},"content":"Plan index number must be a positive integer and smaller than the total number of plan in list","lastModifiedDate":"2022-04-06"},{"lineNumber":1343,"author":{"gitId":"TianaiYan"},"content":"in order to pass the check. Otherwise, an `InvalidPlanException` will be thrown and","lastModifiedDate":"2022-04-06"},{"lineNumber":1344,"author":{"gitId":"TianaiYan"},"content":"the entire process is aborted.","lastModifiedDate":"2022-04-06"},{"lineNumber":1345,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1346,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1347,"author":{"gitId":"alanlowzies"},"content":"**(Steps 2.1 to 2.2)** With the plan index number, the `Plan` object to be deleted is obtained by calling method ","lastModifiedDate":"2022-04-08"},{"lineNumber":1348,"author":{"gitId":"alanlowzies"},"content":"`Planlist#getPlanFromIndexNum()`.","lastModifiedDate":"2022-04-08"},{"lineNumber":1349,"author":{"gitId":"TianaiYan"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1350,"author":{"gitId":"TianaiYan"},"content":"**(Steps 2.3 to 2.8)** The `Plan` object to be deleted is subsequently removed from the ArrayList and HashMap","lastModifiedDate":"2022-04-06"},{"lineNumber":1351,"author":{"gitId":"TianaiYan"},"content":"which stores the application’s workout list.","lastModifiedDate":"2022-04-06"},{"lineNumber":1352,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1353,"author":{"gitId":"alanlowzies"},"content":"This is the end of `PlanList#deletePlan()` method.","lastModifiedDate":"2022-04-08"},{"lineNumber":1354,"author":{"gitId":"TianaiYan"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1355,"author":{"gitId":"TianaiYan"},"content":"**(Step 3)** The `PlanList#deletePlan()` method returns the deleted `Plan` object to `PlanCommand`.","lastModifiedDate":"2022-04-06"},{"lineNumber":1356,"author":{"gitId":"TianaiYan"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1357,"author":{"gitId":"TianaiYan"},"content":"**(Steps 4 to 5)** Upon returning to the `PlanCommand` object, the `UI#printDeletePlanMessage()` is called","lastModifiedDate":"2022-04-06"},{"lineNumber":1358,"author":{"gitId":"TianaiYan"},"content":"to display the plan name that has been deleted to the user through the terminal. The following is an example","lastModifiedDate":"2022-04-06"},{"lineNumber":1359,"author":{"gitId":"TianaiYan"},"content":"of a success deletion message after a valid plan is deleted from the workout list:","lastModifiedDate":"2022-04-06"},{"lineNumber":1360,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-04-06"},{"lineNumber":1361,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-04-06"},{"lineNumber":1362,"author":{"gitId":"TianaiYan"},"content":"Alright, the following plan has been removed:","lastModifiedDate":"2022-04-06"},{"lineNumber":1363,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1364,"author":{"gitId":"TianaiYan"},"content":"\tgrow my muscles","lastModifiedDate":"2022-04-06"},{"lineNumber":1365,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1366,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-04-06"},{"lineNumber":1367,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-04-06"},{"lineNumber":1368,"author":{"gitId":"TianaiYan"},"content":"**(Steps 6 to 7)** The `FileManager#rewriteAllPlansToFile()` is called to rewrite","lastModifiedDate":"2022-04-06"},{"lineNumber":1369,"author":{"gitId":"TianaiYan"},"content":"the `plans.txt` file according to the modified plan list.","lastModifiedDate":"2022-04-06"},{"lineNumber":1370,"author":{"gitId":"TianaiYan"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1371,"author":{"gitId":"TianaiYan"},"content":"This completes the process of deleting an existing plan in WerkIt!","lastModifiedDate":"2022-04-06"},{"lineNumber":1372,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1373,"author":{"gitId":"TianaiYan"},"content":"##### Design Considerations for Deleting Existing Plan","lastModifiedDate":"2022-04-08"},{"lineNumber":1374,"author":{"gitId":"TianaiYan"},"content":"###### Rewrite All Plans To File","lastModifiedDate":"2022-04-08"},{"lineNumber":1375,"author":{"gitId":"TianaiYan"},"content":"Currently, when delete plan function is executed, the WerkIt! program will rewrite all plans to the resource file, ","lastModifiedDate":"2022-04-06"},{"lineNumber":1376,"author":{"gitId":"alanlowzies"},"content":"`plans.txt`. Such an implementation may have performance issues as the program needs to rewrite the whole","lastModifiedDate":"2022-04-08"},{"lineNumber":1377,"author":{"gitId":"TianaiYan"},"content":"file with the modified plan list whenever a plan is deleted in the application.","lastModifiedDate":"2022-04-10"},{"lineNumber":1378,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1379,"author":{"gitId":"TianaiYan"},"content":"An alternative considered was to find the plan to be deleted in the resource file, and then","lastModifiedDate":"2022-04-06"},{"lineNumber":1380,"author":{"gitId":"TianaiYan"},"content":"remove that plan. While this is a more efficient implementation, it is more complex due to the","lastModifiedDate":"2022-04-06"},{"lineNumber":1381,"author":{"gitId":"TianaiYan"},"content":"way the plan data are formatted and stored in the `plans.txt` file.","lastModifiedDate":"2022-04-06"},{"lineNumber":1382,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1383,"author":{"gitId":"TianaiYan"},"content":"Hence, to simplify the implementation, the team decided to simply","lastModifiedDate":"2022-04-06"},{"lineNumber":1384,"author":{"gitId":"TianaiYan"},"content":"rewrite all plans to the resource file whenever a plan is deleted.","lastModifiedDate":"2022-04-06"},{"lineNumber":1385,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1386,"author":{"gitId":"alanlowzies"},"content":"###### Deleting a Plan Will Cause a Cascading Delete Action","lastModifiedDate":"2022-04-08"},{"lineNumber":1387,"author":{"gitId":"TianaiYan"},"content":"When an existing plan is deleted from the application, days which is scheduled with that plan ","lastModifiedDate":"2022-04-10"},{"lineNumber":1388,"author":{"gitId":"alanlowzies"},"content":"should also be cleared. This cascading delete action from `plan -\u003e schedule` must be done so that","lastModifiedDate":"2022-04-08"},{"lineNumber":1389,"author":{"gitId":"TianaiYan"},"content":"the data in the `plans.txt`, `schedule.txt` files matches.","lastModifiedDate":"2022-04-06"},{"lineNumber":1390,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1391,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#implementation\"\u003eBack to Implementation Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1392,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1393,"author":{"gitId":"Musfirahe0556596"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":1394,"author":{"gitId":"Musfirahe0556596"},"content":"### Schedule","lastModifiedDate":"2022-03-24"},{"lineNumber":1395,"author":{"gitId":"alanlowzies"},"content":"The overview of the design of the schedule features can be found [here](#schedule-related-features). ","lastModifiedDate":"2022-04-09"},{"lineNumber":1396,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1397,"author":{"gitId":"emilysim00"},"content":"#### Update Schedule","lastModifiedDate":"2022-03-30"},{"lineNumber":1398,"author":{"gitId":"emilysim00"},"content":"A summary of the general procedure of updating a plan for a particular day to the schedule in WerkIt! is as follows:","lastModifiedDate":"2022-03-30"},{"lineNumber":1399,"author":{"gitId":"emilysim00"},"content":"1. User enters the command `schedule /update \u003cday number\u003e \u003cplan number\u003e`.","lastModifiedDate":"2022-03-31"},{"lineNumber":1400,"author":{"gitId":"alanlowzies"},"content":"2. If there is no plan being scheduled for the day, a new `Day` object is created and stored in the application.","lastModifiedDate":"2022-04-09"},{"lineNumber":1401,"author":{"gitId":"emilysim00"},"content":"   If there is an existing plan scheduled for that particular day, the `Day` object that has already been created","lastModifiedDate":"2022-04-07"},{"lineNumber":1402,"author":{"gitId":"emilysim00"},"content":"   will then be updated to store the latest plan scheduled for the day.","lastModifiedDate":"2022-03-30"},{"lineNumber":1403,"author":{"gitId":"emilysim00"},"content":"3. The success response is displayed via the terminal.","lastModifiedDate":"2022-04-07"},{"lineNumber":1404,"author":{"gitId":"emilysim00"},"content":"4. The `Day` object data is written to the resource file `schedule.txt`.","lastModifiedDate":"2022-04-07"},{"lineNumber":1405,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1406,"author":{"gitId":"alanlowzies"},"content":"The following sequence diagram illustrates how the `schedule /update` command works in greater detail:","lastModifiedDate":"2022-04-09"},{"lineNumber":1407,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":1408,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: To simplify the sequence diagram, some method invocations that are deemed to be trivial","lastModifiedDate":"2022-04-09"},{"lineNumber":1409,"author":{"gitId":"alanlowzies"},"content":" have been removed from the sequence diagram. Reference frames will be elaborated further","lastModifiedDate":"2022-04-02"},{"lineNumber":1410,"author":{"gitId":"alanlowzies"},"content":" down this section.\u003c/span\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":1411,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1412,"author":{"gitId":"alanlowzies"},"content":"![Update Schedule Sequence Diagram](uml/sequenceDiagrams/schedule/images/updateSchedule.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":1413,"author":{"gitId":"emilysim00"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":1414,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1415,"author":{"gitId":"emilysim00"},"content":"\u003cspan class\u003d\"info box\"\u003e:memo: For more information on the obtaining and parsing functionality of WerkIt!, please refer to","lastModifiedDate":"2022-04-10"},{"lineNumber":1416,"author":{"gitId":"alanlowzies"},"content":"[\"Parsing User Input and Getting the Right Command\"](#parsing-user-input-and-getting-the-right-command) section.\u003c/span\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1417,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1418,"author":{"gitId":"emilysim00"},"content":"**(Step 1)** The program waits for the user\u0027s input, which in this case,","lastModifiedDate":"2022-04-08"},{"lineNumber":1419,"author":{"gitId":"alanlowzies"},"content":"is the `schedule /update \u003cday number\u003e \u003cplan number\u003e` command.","lastModifiedDate":"2022-04-09"},{"lineNumber":1420,"author":{"gitId":"emilysim00"},"content":"An example of a valid command would be `schedule /update 1 1`. This command entered","lastModifiedDate":"2022-04-06"},{"lineNumber":1421,"author":{"gitId":"alanlowzies"},"content":"by the user is a `schedule` command, hence it is executed by calling the `ScheduleCommand#execute()` method.","lastModifiedDate":"2022-04-09"},{"lineNumber":1422,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1423,"author":{"gitId":"emilysim00"},"content":"Steps 2 and 3 are explained in greater details in the following sequence diagram:","lastModifiedDate":"2022-04-06"},{"lineNumber":1424,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1425,"author":{"gitId":"alanlowzies"},"content":"![updateScheduleDetails](uml/sequenceDiagrams/schedule/images/updateScheduleDetails.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":1426,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1427,"author":{"gitId":"emilysim00"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: To improve the diagram\u0027s readability, logging-related and input-checking method calls,","lastModifiedDate":"2022-04-10"},{"lineNumber":1428,"author":{"gitId":"emilysim00"},"content":"and exception throws in `DayList#updatePlan()` have been omitted.\u003c/span\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":1429,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":1430,"author":{"gitId":"emilysim00"},"content":"Firstly, the `DayList#updateDay()` method will be called to update/add a plan for a particular ","lastModifiedDate":"2022-04-10"},{"lineNumber":1431,"author":{"gitId":"alanlowzies"},"content":"day in the schedule stated by the user. It will first call the `String#split()` method ","lastModifiedDate":"2022-04-09"},{"lineNumber":1432,"author":{"gitId":"alanlowzies"},"content":"to separate out the `userArgument` given by the user. Upon splitting the whitespaces in `userArgument`, ","lastModifiedDate":"2022-04-09"},{"lineNumber":1433,"author":{"gitId":"alanlowzies"},"content":"it will check if the `userArgument` is valid. If it is invalid, an ","lastModifiedDate":"2022-04-09"},{"lineNumber":1434,"author":{"gitId":"alanlowzies"},"content":"`ArrayIndexOutOfBoundsException` would be thrown and the process terminates.","lastModifiedDate":"2022-04-09"},{"lineNumber":1435,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1436,"author":{"gitId":"emilysim00"},"content":"After splitting and checking the validity of `userArgument`, variables `userArgument[0]` representing","lastModifiedDate":"2022-04-10"},{"lineNumber":1437,"author":{"gitId":"emilysim00"},"content":"`dayNumber` and `userArgument[1]` representing `planNumber`, the plan index of the plan stored in the `planList` ","lastModifiedDate":"2022-04-10"},{"lineNumber":1438,"author":{"gitId":"emilysim00"},"content":"are obtained. Both the variables are then converted from data type `String` to `int`.","lastModifiedDate":"2022-04-10"},{"lineNumber":1439,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1440,"author":{"gitId":"emilysim00"},"content":"**(Steps 2.1 to 2.4)**  A check executed on both the converted`dayNumber` and `planNumber` to ensure that they are valid. ","lastModifiedDate":"2022-04-10"},{"lineNumber":1441,"author":{"gitId":"emilysim00"},"content":"This check is done so by calling the `DayList#isDayValid()` and`DayList#isPlanValid()` methods respectively. ","lastModifiedDate":"2022-04-10"},{"lineNumber":1442,"author":{"gitId":"emilysim00"},"content":"If the `dayNumber` or `planNumber` is not valid, an `InvalidScheduleException` would be thrown,","lastModifiedDate":"2022-04-10"},{"lineNumber":1443,"author":{"gitId":"emilysim00"},"content":"and the entire process of updating of a plan for a particular day in the schedule is aborted.","lastModifiedDate":"2022-04-06"},{"lineNumber":1444,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1445,"author":{"gitId":"emilysim00"},"content":"**(Steps 2.5 to 2.8)** `PlanList#getPlanDisplayList()` method is called to find and return the HashMap value of the `planNumber`, ","lastModifiedDate":"2022-04-10"},{"lineNumber":1446,"author":{"gitId":"alanlowzies"},"content":"`planToAddKey`, to be scheduled for a particular day. The `planToAddKey` is used to get the `Plan` object in the ","lastModifiedDate":"2022-04-09"},{"lineNumber":1447,"author":{"gitId":"alanlowzies"},"content":"`planList` by calling the `PlanList#getPlanFromKey()`.","lastModifiedDate":"2022-04-09"},{"lineNumber":1448,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1449,"author":{"gitId":"emilysim00"},"content":"**(Steps 2.9 to 2.10)** Once the `Plan` object is retrieved, if there is no plan scheduled for the day, ","lastModifiedDate":"2022-04-10"},{"lineNumber":1450,"author":{"gitId":"emilysim00"},"content":"a new `Day` object is created and stored in the application.","lastModifiedDate":"2022-04-01"},{"lineNumber":1451,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1452,"author":{"gitId":"emilysim00"},"content":"**(Steps 2.11 to 2.12)** However, if there is an existing plan scheduled for that particular day, the `Day` object that ","lastModifiedDate":"2022-04-10"},{"lineNumber":1453,"author":{"gitId":"alanlowzies"},"content":"has already been created will then be updated to store the latest plan scheduled for the day. This process is done by","lastModifiedDate":"2022-04-09"},{"lineNumber":1454,"author":{"gitId":"alanlowzies"},"content":"calling `Day#setNewPlanForThisDay()` method.","lastModifiedDate":"2022-04-09"},{"lineNumber":1455,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1456,"author":{"gitId":"emilysim00"},"content":"**(Step 3)** The `Day` object is successfully created.","lastModifiedDate":"2022-04-10"},{"lineNumber":1457,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":1458,"author":{"gitId":"alanlowzies"},"content":"**(Steps 4 and 5)** After successfully creating/updating the `Day` object, the `UI#printNewSchedule()` method","lastModifiedDate":"2022-04-09"},{"lineNumber":1459,"author":{"gitId":"emilysim00"},"content":"will be called to display the day and the corresponding plan scheduled for it via the terminal. The following is an","lastModifiedDate":"2022-03-30"},{"lineNumber":1460,"author":{"gitId":"emilysim00"},"content":"example of the message after the user has successfully scheduled a plan for the day (e.g. `schedule /update 1 1`):","lastModifiedDate":"2022-04-07"},{"lineNumber":1461,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":1462,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-30"},{"lineNumber":1463,"author":{"gitId":"emilysim00"},"content":"Alright, the following plan schedule has been created:","lastModifiedDate":"2022-03-30"},{"lineNumber":1464,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1465,"author":{"gitId":"emilysim00"},"content":"Monday -- arms","lastModifiedDate":"2022-03-30"},{"lineNumber":1466,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1467,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-30"},{"lineNumber":1468,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":1469,"author":{"gitId":"alanlowzies"},"content":"**(Step 6)** Lastly, before the `ScheduleCommand` object is marked for disposal, the `FileManager#rewriteAllDaysScheduleToFile()`","lastModifiedDate":"2022-04-09"},{"lineNumber":1470,"author":{"gitId":"emilysim00"},"content":"is called to rewrite the `schedule.txt` file according to the newly modified application\u0027s day list. For more information","lastModifiedDate":"2022-04-07"},{"lineNumber":1471,"author":{"gitId":"alanlowzies"},"content":"on the file management, refer to this [section](#rewriting-the-entire-resource-file-with-the-most-recent-set-of-data).","lastModifiedDate":"2022-04-09"},{"lineNumber":1472,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1473,"author":{"gitId":"alanlowzies"},"content":"This completes the process of scheduling a plan for a particular day in WerkIt!.","lastModifiedDate":"2022-04-09"},{"lineNumber":1474,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1475,"author":{"gitId":"emilysim00"},"content":"##### Design considerations for update schedule","lastModifiedDate":"2022-03-30"},{"lineNumber":1476,"author":{"gitId":"alanlowzies"},"content":"###### `Day` Object","lastModifiedDate":"2022-04-09"},{"lineNumber":1477,"author":{"gitId":"emilysim00"},"content":"For the application, schedule is defined to be a 7-day workout plan. Days that do not have any plan scheduled","lastModifiedDate":"2022-04-07"},{"lineNumber":1478,"author":{"gitId":"alanlowzies"},"content":"would be considered a rest day for the user. Therefore, when implementing the creation of a `Day` object, up to 7","lastModifiedDate":"2022-04-09"},{"lineNumber":1479,"author":{"gitId":"alanlowzies"},"content":"`Day` objects will be created and stored in the `dayList` (a `Day` array of size 7).","lastModifiedDate":"2022-04-09"},{"lineNumber":1480,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1481,"author":{"gitId":"alanlowzies"},"content":"Initially, if no plan has been scheduled for a particular day, the corresponding `Day` object will not be created.","lastModifiedDate":"2022-04-09"},{"lineNumber":1482,"author":{"gitId":"alanlowzies"},"content":"For example, if no plan is being scheduled for Monday, there will be no `Day` object created for Monday and index 0 of","lastModifiedDate":"2022-04-09"},{"lineNumber":1483,"author":{"gitId":"alanlowzies"},"content":"the `dayList` array will not have any `Day` object stored.","lastModifiedDate":"2022-04-09"},{"lineNumber":1484,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1485,"author":{"gitId":"alanlowzies"},"content":"If `dayList[0]` contains a `Day` object, it means that the user has scheduled a plan on Monday. If the","lastModifiedDate":"2022-04-09"},{"lineNumber":1486,"author":{"gitId":"alanlowzies"},"content":"user is to execute the `schedule /update` command again to update the plan to be scheduled for Monday, the application","lastModifiedDate":"2022-04-09"},{"lineNumber":1487,"author":{"gitId":"alanlowzies"},"content":"will update the content in the `Day` object stored in `dayList[0]`. It will not recreate a `Day` object for Monday","lastModifiedDate":"2022-04-09"},{"lineNumber":1488,"author":{"gitId":"emilysim00"},"content":"to store the new plan.","lastModifiedDate":"2022-03-30"},{"lineNumber":1489,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":1490,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#implementation\"\u003eBack to Implementation Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1491,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1492,"author":{"gitId":"emilysim00"},"content":"---","lastModifiedDate":"2022-03-30"},{"lineNumber":1493,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1494,"author":{"gitId":"emilysim00"},"content":"#### View Schedule","lastModifiedDate":"2022-03-30"},{"lineNumber":1495,"author":{"gitId":"alanlowzies"},"content":"To view the schedule in WerkIt!, the user can enter the command `schedule /list`.","lastModifiedDate":"2022-04-09"},{"lineNumber":1496,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1497,"author":{"gitId":"alanlowzies"},"content":"A schedule in WerkIt! refers to a 7-day workout plan schedule. ","lastModifiedDate":"2022-04-09"},{"lineNumber":1498,"author":{"gitId":"alanlowzies"},"content":"For example, a plan (plan number 1) named \"leg day\" which consists of 3 workouts: \"5 squats, 5 lunges, 5 squats\",","lastModifiedDate":"2022-04-09"},{"lineNumber":1499,"author":{"gitId":"alanlowzies"},"content":"can be added into the schedule by entering `schedule /update \u003cday number\u003e \u003cplan number\u003e`. Hence, the \"leg day\" plan","lastModifiedDate":"2022-04-09"},{"lineNumber":1500,"author":{"gitId":"alanlowzies"},"content":"can be scheduled on Monday by entering `schedule /update 1 1`. To view the plans in the schedule, the user can enter the","lastModifiedDate":"2022-04-09"},{"lineNumber":1501,"author":{"gitId":"emilysim00"},"content":"command `schedule /list`.","lastModifiedDate":"2022-03-31"},{"lineNumber":1502,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1503,"author":{"gitId":"alanlowzies"},"content":"The following sequence diagram illustrates how the `schedule /list` command works in greater detail:","lastModifiedDate":"2022-04-09"},{"lineNumber":1504,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":1505,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: To simplify the sequence diagram, some method invocations that are deemed to be trivial","lastModifiedDate":"2022-04-09"},{"lineNumber":1506,"author":{"gitId":"alanlowzies"},"content":" have been removed from the sequence diagram. Reference frames will be elaborated further","lastModifiedDate":"2022-04-02"},{"lineNumber":1507,"author":{"gitId":"alanlowzies"},"content":" down this section.\u003c/span\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":1508,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1509,"author":{"gitId":"alanlowzies"},"content":"![ListSchedule](uml/sequenceDiagrams/schedule/images/listSchedule.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":1510,"author":{"gitId":"emilysim00"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":1511,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1512,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"info box\"\u003e:memo: For more information on the obtaining and parsing functionality of WerkIt!, please refer to","lastModifiedDate":"2022-04-09"},{"lineNumber":1513,"author":{"gitId":"alanlowzies"},"content":"[\"Parsing User Input and Getting the Right Command\"](#parsing-user-input-and-getting-the-right-command) section.\u003c/span\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1514,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1515,"author":{"gitId":"alanlowzies"},"content":"**(Steps 1 and 2)** The command entered by the user (`schedule /list`) is a schedule command and will be executed by calling the ","lastModifiedDate":"2022-04-09"},{"lineNumber":1516,"author":{"gitId":"alanlowzies"},"content":"`ScheduleCommand#execute()` method. Since the command action is `/list` the application will execute the ","lastModifiedDate":"2022-04-09"},{"lineNumber":1517,"author":{"gitId":"alanlowzies"},"content":"`DayList#printSchedule()` method. No parameters are needed to be passed into the method as the method loops through the ","lastModifiedDate":"2022-04-09"},{"lineNumber":1518,"author":{"gitId":"alanlowzies"},"content":"`scheduleList`, which stores all the plan names scheduled for the individual days.","lastModifiedDate":"2022-04-09"},{"lineNumber":1519,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1520,"author":{"gitId":"alanlowzies"},"content":"**(Steps 3 and 4)** To ensure that the printing of the schedule is standardised, when `DayList#printSchedule()`","lastModifiedDate":"2022-04-09"},{"lineNumber":1521,"author":{"gitId":"alanlowzies"},"content":"method is called, it will invoke a `for` loop to pad the plan name with whitespaces for all the plans in the `scheduleList` ","lastModifiedDate":"2022-04-09"},{"lineNumber":1522,"author":{"gitId":"alanlowzies"},"content":"by calling the `DayList#padWithSpaces()` method. This method will pad both the front and back of the","lastModifiedDate":"2022-04-09"},{"lineNumber":1523,"author":{"gitId":"alanlowzies"},"content":"plan name with whitespaces. The padding and plan name should not exceed 30 characters in total.","lastModifiedDate":"2022-04-09"},{"lineNumber":1524,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1525,"author":{"gitId":"emilysim00"},"content":"**(Steps 5 and 6)** To make the schedule more understandable `DayList#convertDayNumberToDay()` method will be called","lastModifiedDate":"2022-04-10"},{"lineNumber":1526,"author":{"gitId":"emilysim00"},"content":"to convert the day number to its corresponding day name. For example, day number 1 will be converted to Monday.","lastModifiedDate":"2022-04-10"},{"lineNumber":1527,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":1528,"author":{"gitId":"emilysim00"},"content":"**(Step 7)** Upon the successful execution of the `DayList#printSchedule()` method, the 7-day workout plan schedule will","lastModifiedDate":"2022-04-10"},{"lineNumber":1529,"author":{"gitId":"alanlowzies"},"content":"be displayed on the console to the user. An expected outcome of the `schedule /list` command will be:","lastModifiedDate":"2022-04-09"},{"lineNumber":1530,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1531,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":1532,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-30"},{"lineNumber":1533,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1534,"author":{"gitId":"emilysim00"},"content":"                         WORKOUT SCHEDULE","lastModifiedDate":"2022-03-30"},{"lineNumber":1535,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-30"},{"lineNumber":1536,"author":{"gitId":"emilysim00"},"content":"     Day       |            Plan Name","lastModifiedDate":"2022-03-30"},{"lineNumber":1537,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-30"},{"lineNumber":1538,"author":{"gitId":"emilysim00"},"content":"      Monday   |              arms                          ","lastModifiedDate":"2022-03-30"},{"lineNumber":1539,"author":{"gitId":"emilysim00"},"content":"     Tuesday   |            rest day                      ","lastModifiedDate":"2022-03-30"},{"lineNumber":1540,"author":{"gitId":"emilysim00"},"content":"   Wednesday   |            leg day                      ","lastModifiedDate":"2022-03-30"},{"lineNumber":1541,"author":{"gitId":"emilysim00"},"content":"    Thursday   |            rest day                      ","lastModifiedDate":"2022-03-30"},{"lineNumber":1542,"author":{"gitId":"emilysim00"},"content":"      Friday   |            rest day                      ","lastModifiedDate":"2022-03-30"},{"lineNumber":1543,"author":{"gitId":"emilysim00"},"content":"    Saturday   |            leg day                      ","lastModifiedDate":"2022-03-30"},{"lineNumber":1544,"author":{"gitId":"emilysim00"},"content":"      Sunday   |            rest day                      ","lastModifiedDate":"2022-03-30"},{"lineNumber":1545,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1546,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-30"},{"lineNumber":1547,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":1548,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1549,"author":{"gitId":"alanlowzies"},"content":"By default, if no plan is being scheduled for any of the day, the day is considered as a rest day for the user.","lastModifiedDate":"2022-04-09"},{"lineNumber":1550,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1551,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#implementation\"\u003eBack to Implementation Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1552,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1553,"author":{"gitId":"emilysim00"},"content":"---","lastModifiedDate":"2022-03-30"},{"lineNumber":1554,"author":{"gitId":"emilysim00"},"content":"#### Clear Schedule For A Day","lastModifiedDate":"2022-03-30"},{"lineNumber":1555,"author":{"gitId":"emilysim00"},"content":"A summary of the general procedure of clearing a plan scheduled for a particular day of the schedule in WerkIt! is as follows:","lastModifiedDate":"2022-04-01"},{"lineNumber":1556,"author":{"gitId":"emilysim00"},"content":"1. User enters the command `schedule /clear \u003cday number\u003e`.","lastModifiedDate":"2022-03-31"},{"lineNumber":1557,"author":{"gitId":"alanlowzies"},"content":"2. The application will locate the index in the `dayList` which stores the corresponding `Day` object.","lastModifiedDate":"2022-04-09"},{"lineNumber":1558,"author":{"gitId":"alanlowzies"},"content":"   This `Day` object will then be deleted from the `dayList`. For example, if the `schedule /clear 1` command is entered,","lastModifiedDate":"2022-04-09"},{"lineNumber":1559,"author":{"gitId":"alanlowzies"},"content":"   the `Day` object stored in index 0 of the `dayList` array will be removed. In general, if day number x is to be ","lastModifiedDate":"2022-04-09"},{"lineNumber":1560,"author":{"gitId":"alanlowzies"},"content":"   cleared, then index (x - 1) of `dayList` will be cleared.","lastModifiedDate":"2022-04-09"},{"lineNumber":1561,"author":{"gitId":"alanlowzies"},"content":"3. `DayList[day number - 1]` will become `null` after the command is successfully executed.","lastModifiedDate":"2022-04-09"},{"lineNumber":1562,"author":{"gitId":"emilysim00"},"content":"4. The success response is printed to the user through the terminal.","lastModifiedDate":"2022-03-30"},{"lineNumber":1563,"author":{"gitId":"emilysim00"},"content":"5. The `schedule.txt` will also be rewritten to reflect the changes. ","lastModifiedDate":"2022-03-31"},{"lineNumber":1564,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1565,"author":{"gitId":"alanlowzies"},"content":"The following sequence diagram illustrates how the `schedule /clear` command works in greater detail:","lastModifiedDate":"2022-04-09"},{"lineNumber":1566,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":1567,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: To simplify the sequence diagram, some method invocations that are deemed to be trivial","lastModifiedDate":"2022-04-09"},{"lineNumber":1568,"author":{"gitId":"alanlowzies"},"content":" have been removed from the sequence diagram. Reference frames will be elaborated further","lastModifiedDate":"2022-04-02"},{"lineNumber":1569,"author":{"gitId":"alanlowzies"},"content":" down this section.\u003c/span\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":1570,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1571,"author":{"gitId":"alanlowzies"},"content":"![ClearSchedule](uml/sequenceDiagrams/schedule/images/clearSchedule.png) ","lastModifiedDate":"2022-03-31"},{"lineNumber":1572,"author":{"gitId":"emilysim00"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":1573,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1574,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"info box\"\u003e:memo: For more information on the obtaining and parsing functionality of WerkIt!, please refer to","lastModifiedDate":"2022-04-09"},{"lineNumber":1575,"author":{"gitId":"alanlowzies"},"content":"[\"Parsing User Input and Getting the Right Command\"](#parsing-user-input-and-getting-the-right-command) section.\u003c/span\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1576,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1577,"author":{"gitId":"emilysim00"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: To improve the diagram\u0027s readability, logging-related and input-checking method calls,","lastModifiedDate":"2022-04-10"},{"lineNumber":1578,"author":{"gitId":"emilysim00"},"content":"and exception throws in `DayList#clearDayPlan()` have been omitted.\u003c/span\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":1579,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":1580,"author":{"gitId":"emilysim00"},"content":"**(Step 1)** The program waits for the user\u0027s input, which in this case,","lastModifiedDate":"2022-04-08"},{"lineNumber":1581,"author":{"gitId":"alanlowzies"},"content":"is the `schedule /clear \u003cday number\u003e` command. An example of a valid command would be `schedule /clear 1`. This command ","lastModifiedDate":"2022-04-09"},{"lineNumber":1582,"author":{"gitId":"alanlowzies"},"content":"entered by the user is a `schedule` command, hence it is being executed by calling the `ScheduleCommand#execute()` method.","lastModifiedDate":"2022-04-09"},{"lineNumber":1583,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1584,"author":{"gitId":"emilysim00"},"content":"**(Steps 2 to 4)** Since the command entered is `schedule /clear \u003cday number\u003e`, the `DayList#clearDayPlan()` method will","lastModifiedDate":"2022-04-10"},{"lineNumber":1585,"author":{"gitId":"alanlowzies"},"content":"be called. This method will first convert the `userArgument` to an `int` data type, after which it will call","lastModifiedDate":"2022-04-09"},{"lineNumber":1586,"author":{"gitId":"alanlowzies"},"content":"the `DayList#isDayValid()` method to check whether the day number entered by the user is valid. ","lastModifiedDate":"2022-04-09"},{"lineNumber":1587,"author":{"gitId":"alanlowzies"},"content":"If the day number falls within the range of 1 to 7 then it is considered a valid day, otherwise ","lastModifiedDate":"2022-04-09"},{"lineNumber":1588,"author":{"gitId":"alanlowzies"},"content":"an `InvalidScheduleException` would be thrown, and the entire process is aborted.","lastModifiedDate":"2022-04-09"},{"lineNumber":1589,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1590,"author":{"gitId":"emilysim00"},"content":"**(Steps 5 and 6)** If the `dayNumber` is valid, the method `DayList#clearPlan()` will be called to remove the plan ","lastModifiedDate":"2022-04-10"},{"lineNumber":1591,"author":{"gitId":"emilysim00"},"content":"scheduled on that day. The `Day` object that stores the plan details for the specified day in ","lastModifiedDate":"2022-04-07"},{"lineNumber":1592,"author":{"gitId":"emilysim00"},"content":"the user command will be deleted.","lastModifiedDate":"2022-04-07"},{"lineNumber":1593,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1594,"author":{"gitId":"emilysim00"},"content":"**(Steps 7 to 9)** After which, the `DayList#convertDayNumberToDay()` method will be called.","lastModifiedDate":"2022-04-10"},{"lineNumber":1595,"author":{"gitId":"alanlowzies"},"content":"As the method name suggests, this method will convert the day number to its corresponding day name. ","lastModifiedDate":"2022-04-09"},{"lineNumber":1596,"author":{"gitId":"emilysim00"},"content":"For example, day number 1 will be converted to Monday. The purpose of this method is to ","lastModifiedDate":"2022-04-01"},{"lineNumber":1597,"author":{"gitId":"alanlowzies"},"content":"make the success message to be displayed to the user more readable.","lastModifiedDate":"2022-04-09"},{"lineNumber":1598,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1599,"author":{"gitId":"emilysim00"},"content":"**(Steps 10 and 11)** After the plan is successfully cleared for that indicated day, a success message of the process ","lastModifiedDate":"2022-04-10"},{"lineNumber":1600,"author":{"gitId":"emilysim00"},"content":"would be printed to the user through the terminal by calling the `UI#printClearedScheduleOnADay()` method. ","lastModifiedDate":"2022-04-10"},{"lineNumber":1601,"author":{"gitId":"emilysim00"},"content":"An example of a success message would be","lastModifiedDate":"2022-04-06"},{"lineNumber":1602,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1603,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":1604,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-30"},{"lineNumber":1605,"author":{"gitId":"emilysim00"},"content":"Plan has been cleared for Monday.","lastModifiedDate":"2022-04-10"},{"lineNumber":1606,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-30"},{"lineNumber":1607,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":1608,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1609,"author":{"gitId":"emilysim00"},"content":"**(Step 12)** `FileManager#rewriteAllDaysScheduleToFile()` is called to write all the `Day` objects\u0027 data stored ","lastModifiedDate":"2022-04-10"},{"lineNumber":1610,"author":{"gitId":"alanlowzies"},"content":"in the `dayList` into `schedule.txt` which is stored on the user\u0027s local filesystem. For more information","lastModifiedDate":"2022-04-09"},{"lineNumber":1611,"author":{"gitId":"alanlowzies"},"content":"on the file management, refer to this [section](#rewriting-the-entire-resource-file-with-the-most-recent-set-of-data).","lastModifiedDate":"2022-04-09"},{"lineNumber":1612,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":1613,"author":{"gitId":"alanlowzies"},"content":"This completes the process of clearing a plan on a particular day of the schedule on WerkIt!.","lastModifiedDate":"2022-04-09"},{"lineNumber":1614,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1615,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#implementation\"\u003eBack to Implementation Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1616,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1617,"author":{"gitId":"emilysim00"},"content":"---","lastModifiedDate":"2022-03-30"},{"lineNumber":1618,"author":{"gitId":"emilysim00"},"content":"#### Clear Schedule For The Week","lastModifiedDate":"2022-03-30"},{"lineNumber":1619,"author":{"gitId":"emilysim00"},"content":"A summary of the general procedure of clearing all the plans stored in the schedule in WerkIt! is as follows:","lastModifiedDate":"2022-03-30"},{"lineNumber":1620,"author":{"gitId":"emilysim00"},"content":"1. User enters the command `schedule /clearall`.","lastModifiedDate":"2022-04-01"},{"lineNumber":1621,"author":{"gitId":"emilysim00"},"content":"2. The application will delete all the plans that have been added to the schedule.","lastModifiedDate":"2022-04-07"},{"lineNumber":1622,"author":{"gitId":"emilysim00"},"content":"3. The success response is printed to the user through the terminal. ","lastModifiedDate":"2022-03-31"},{"lineNumber":1623,"author":{"gitId":"emilysim00"},"content":"4. The `schedule.txt` will also be rewritten to reflect the changes.","lastModifiedDate":"2022-03-31"},{"lineNumber":1624,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1625,"author":{"gitId":"alanlowzies"},"content":"The following sequence diagram illustrates how the `schedule /clearall` command works in greater detail:","lastModifiedDate":"2022-04-09"},{"lineNumber":1626,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":1627,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: To simplify the sequence diagram, some method invocations that are deemed to be trivial","lastModifiedDate":"2022-04-09"},{"lineNumber":1628,"author":{"gitId":"alanlowzies"},"content":" have been removed from the sequence diagram. Reference frames will be elaborated further","lastModifiedDate":"2022-04-02"},{"lineNumber":1629,"author":{"gitId":"alanlowzies"},"content":" down this section.\u003c/span\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":1630,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1631,"author":{"gitId":"alanlowzies"},"content":"![ClearSchedule](uml/sequenceDiagrams/schedule/images/clearAllSchedule.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":1632,"author":{"gitId":"emilysim00"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":1633,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1634,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"info box\"\u003e:memo: For more information on the obtaining and parsing functionality of WerkIt!, please refer to","lastModifiedDate":"2022-04-09"},{"lineNumber":1635,"author":{"gitId":"alanlowzies"},"content":"[\"Parsing User Input and Getting the Right Command\"](#parsing-user-input-and-getting-the-right-command) section.\u003c/span\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1636,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1637,"author":{"gitId":"emilysim00"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: To improve the diagram\u0027s readability, logging-related and input-checking method calls,","lastModifiedDate":"2022-04-10"},{"lineNumber":1638,"author":{"gitId":"emilysim00"},"content":"and exception throws in `DayList#clearall()` have been omitted.\u003c/span\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":1639,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":1640,"author":{"gitId":"emilysim00"},"content":"**(Step 1)** The program waits for the user\u0027s input, which in this case,","lastModifiedDate":"2022-04-08"},{"lineNumber":1641,"author":{"gitId":"alanlowzies"},"content":"is the `schedule /clearall` command. This command entered by the user is a `schedule` command, ","lastModifiedDate":"2022-04-09"},{"lineNumber":1642,"author":{"gitId":"emilysim00"},"content":"hence it is being executed by calling the `ScheduleCommand#execute()` method.","lastModifiedDate":"2022-04-06"},{"lineNumber":1643,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1644,"author":{"gitId":"emilysim00"},"content":"**(Step 2)** Since the command entered is `schedule /clearall`, the `DayList#clearAllSchedule()` method will","lastModifiedDate":"2022-04-08"},{"lineNumber":1645,"author":{"gitId":"alanlowzies"},"content":"be called. This method will delete all the `Day` objects stored in the `dayList` using a `for` loop. ","lastModifiedDate":"2022-04-09"},{"lineNumber":1646,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1647,"author":{"gitId":"alanlowzies"},"content":"**(Steps 3 and 4)** `DayList#clearPlan()` will be called 7 times in a `for` loop to ","lastModifiedDate":"2022-04-09"},{"lineNumber":1648,"author":{"gitId":"alanlowzies"},"content":"delete all the `Day` objects stored in the `dayList` array.","lastModifiedDate":"2022-04-09"},{"lineNumber":1649,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1650,"author":{"gitId":"emilysim00"},"content":"**(Steps 6 and 7)** After all the plans are successfully cleared from the schedule, `UI#printClearedScheduleMessage()` method ","lastModifiedDate":"2022-04-10"},{"lineNumber":1651,"author":{"gitId":"emilysim00"},"content":"will be called to print a success message of the process. This message would be printed to the user through the terminal. ","lastModifiedDate":"2022-03-30"},{"lineNumber":1652,"author":{"gitId":"alanlowzies"},"content":"An example of a success message would be:","lastModifiedDate":"2022-04-09"},{"lineNumber":1653,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1654,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":1655,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-30"},{"lineNumber":1656,"author":{"gitId":"emilysim00"},"content":"Schedule has been cleared and reset.","lastModifiedDate":"2022-04-10"},{"lineNumber":1657,"author":{"gitId":"emilysim00"},"content":"There is no plan scheduled for any day.","lastModifiedDate":"2022-03-30"},{"lineNumber":1658,"author":{"gitId":"emilysim00"},"content":"To add plan for any day, enter:","lastModifiedDate":"2022-03-30"},{"lineNumber":1659,"author":{"gitId":"emilysim00"},"content":"schedule /update \u003cday number [1-7]\u003e \u003cplan number\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":1660,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-30"},{"lineNumber":1661,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":1662,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1663,"author":{"gitId":"emilysim00"},"content":"**(Step 8)** Lastly, `FileManager#rewriteAllDaysScheduleToFile()` is called to write all the `Day` objects\u0027 data stored ","lastModifiedDate":"2022-04-10"},{"lineNumber":1664,"author":{"gitId":"alanlowzies"},"content":"in the `dayList` into `schedule.txt` which is stored on the user\u0027s local filesystem. ","lastModifiedDate":"2022-04-09"},{"lineNumber":1665,"author":{"gitId":"alanlowzies"},"content":"Since all `Day` objects are deleted, the `schedule.txt` file is essentially cleared. For more information on the file ","lastModifiedDate":"2022-04-09"},{"lineNumber":1666,"author":{"gitId":"alanlowzies"},"content":"management, refer to this [section](#rewriting-the-entire-resource-file-with-the-most-recent-set-of-data).","lastModifiedDate":"2022-04-09"},{"lineNumber":1667,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1668,"author":{"gitId":"alanlowzies"},"content":"This completes the process of clearing of all plans stored in the schedule on WerkIt!.","lastModifiedDate":"2022-04-09"},{"lineNumber":1669,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":1670,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#implementation\"\u003eBack to Implementation Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1671,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1672,"author":{"gitId":"Musfirahe0556596"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":1673,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":1674,"author":{"gitId":"alanlowzies"},"content":"### Search","lastModifiedDate":"2022-03-23"},{"lineNumber":1675,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":1676,"author":{"gitId":"alanlowzies"},"content":"The overview of the design of the search features can be found [here](#search-related-features).","lastModifiedDate":"2022-04-09"},{"lineNumber":1677,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1678,"author":{"gitId":"a1021492980"},"content":"#### Search For Exercise","lastModifiedDate":"2022-03-28"},{"lineNumber":1679,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":1680,"author":{"gitId":"a1021492980"},"content":"A summary of the general procedure of search for exercise in the application is as follows:","lastModifiedDate":"2022-04-09"},{"lineNumber":1681,"author":{"gitId":"a1021492980"},"content":"1. User enters the command `search /exercise \u003cexercise keyword\u003e`.","lastModifiedDate":"2022-04-09"},{"lineNumber":1682,"author":{"gitId":"a1021492980"},"content":"2. A list of exercise names with matching result is displayed to the user via the terminal.","lastModifiedDate":"2022-04-09"},{"lineNumber":1683,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":1684,"author":{"gitId":"Musfirahe0556596"},"content":"The following sequence diagram illustrates how the `search /exercise` command works in greater detail:","lastModifiedDate":"2022-03-30"},{"lineNumber":1685,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":1686,"author":{"gitId":"a1021492980"},"content":"\u003cspan class\u003d\"info box\"\u003e:memo: To simplify the sequence diagram, some method invocations that are deemed to be trivial","lastModifiedDate":"2022-04-10"},{"lineNumber":1687,"author":{"gitId":"a1021492980"},"content":"have been removed from the sequence diagram. Reference frames will be elaborated further","lastModifiedDate":"2022-04-10"},{"lineNumber":1688,"author":{"gitId":"a1021492980"},"content":"down this section.\u003c/span\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":1689,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":1690,"author":{"gitId":"alanlowzies"},"content":"![Search Exercise Sequence Diagram](uml/sequenceDiagrams/search/images/searchExercise.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":1691,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":1692,"author":{"gitId":"a1021492980"},"content":"**(Before Step 1)** The user\u0027s input (in this case will be a `search /exercise \u003cexercise keyword\u003e` command) is obtained","lastModifiedDate":"2022-04-10"},{"lineNumber":1693,"author":{"gitId":"a1021492980"},"content":"and parsed to obtain a `SearchCommand` object that contains the user\u0027s input.","lastModifiedDate":"2022-04-09"},{"lineNumber":1694,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1695,"author":{"gitId":"a1021492980"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: For more information on the obtaining and parsing functionality of WerkIt!, please refer to","lastModifiedDate":"2022-04-09"},{"lineNumber":1696,"author":{"gitId":"a1021492980"},"content":"[\"Parsing User Input and Getting the Right Command\"](#parsing-user-input-and-getting-the-right-command) section.\u003c/span\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1697,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1698,"author":{"gitId":"a1021492980"},"content":"**(Steps 1 to 3)** When the `SearchCommand#execute()` method is called, it will identify that the search action is of type `/exercise`.","lastModifiedDate":"2022-04-10"},{"lineNumber":1699,"author":{"gitId":"a1021492980"},"content":"Subsequently, it will call the `ExerciseList#getExerciseList()` method to fetch the `exerciseList` that is used to ","lastModifiedDate":"2022-04-10"},{"lineNumber":1700,"author":{"gitId":"a1021492980"},"content":"search through the available exercises.","lastModifiedDate":"2022-04-10"},{"lineNumber":1701,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1702,"author":{"gitId":"a1021492980"},"content":"**(Steps 4 to 5)** Based on the exercises from the `exerciseList`, the `searchExercise()` will retrieve all the exercises with name","lastModifiedDate":"2022-04-11"},{"lineNumber":1703,"author":{"gitId":"a1021492980"},"content":"containing `\u003cexercise keyword\u003e` and display them in the user\u0027s terminal.","lastModifiedDate":"2022-04-09"},{"lineNumber":1704,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1705,"author":{"gitId":"a1021492980"},"content":"**(Step 6)** The `SearchCommand` object returns to the `WerkIt` object.","lastModifiedDate":"2022-04-11"},{"lineNumber":1706,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1707,"author":{"gitId":"a1021492980"},"content":"This completes the process of searching for exercise in WerkIt!.","lastModifiedDate":"2022-04-10"},{"lineNumber":1708,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1709,"author":{"gitId":"a1021492980"},"content":"---","lastModifiedDate":"2022-04-09"},{"lineNumber":1710,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1711,"author":{"gitId":"a1021492980"},"content":"#### Search For Workout","lastModifiedDate":"2022-03-28"},{"lineNumber":1712,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":1713,"author":{"gitId":"a1021492980"},"content":"A summary of the general procedure of search for workout in the application is as follows:","lastModifiedDate":"2022-04-09"},{"lineNumber":1714,"author":{"gitId":"a1021492980"},"content":"1. User enters the command `search /workout \u003cexercise keyword or number of reps\u003e`.","lastModifiedDate":"2022-04-09"},{"lineNumber":1715,"author":{"gitId":"a1021492980"},"content":"2. A list of workouts with matching result is displayed to the user via the terminal.","lastModifiedDate":"2022-04-09"},{"lineNumber":1716,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":1717,"author":{"gitId":"Musfirahe0556596"},"content":"The following sequence diagram illustrates how the `search /workout` command works in greater detail:","lastModifiedDate":"2022-03-30"},{"lineNumber":1718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":1719,"author":{"gitId":"a1021492980"},"content":"\u003cspan class\u003d\"info box\"\u003e:memo: To simplify the sequence diagram, some method invocations that are deemed to be trivial","lastModifiedDate":"2022-04-10"},{"lineNumber":1720,"author":{"gitId":"a1021492980"},"content":"have been removed from the sequence diagram. Reference frames will be elaborated further","lastModifiedDate":"2022-04-10"},{"lineNumber":1721,"author":{"gitId":"a1021492980"},"content":"down this section.\u003c/span\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":1722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":1723,"author":{"gitId":"a1021492980"},"content":"![Search Workout Sequence Diagram](uml/sequenceDiagrams/search/images/searchWorkout.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":1724,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":1725,"author":{"gitId":"a1021492980"},"content":"**(Before Step 1)** The user\u0027s input (in this case will be a `search /workout \u003cexercise keyword or number of reps\u003e` command) is obtained","lastModifiedDate":"2022-04-10"},{"lineNumber":1726,"author":{"gitId":"a1021492980"},"content":"and parsed to obtain a `SearchCommand` object that contains the user\u0027s input.","lastModifiedDate":"2022-04-09"},{"lineNumber":1727,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1728,"author":{"gitId":"a1021492980"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: For more information on the obtaining and parsing functionality of WerkIt!, please refer to","lastModifiedDate":"2022-04-09"},{"lineNumber":1729,"author":{"gitId":"a1021492980"},"content":"[\"Parsing User Input and Getting the Right Command\"](#parsing-user-input-and-getting-the-right-command) section.\u003c/span\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1730,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1731,"author":{"gitId":"a1021492980"},"content":"**(Steps 1 to 3)** When the `SearchCommand#execute()` method is called, it will identify that the search action is of type `/workout`.","lastModifiedDate":"2022-04-10"},{"lineNumber":1732,"author":{"gitId":"a1021492980"},"content":"Subsequently, it will call the `WorkoutList#getWorkoutsDisplayList()` method to fetch the `workoutList` that is used to","lastModifiedDate":"2022-04-10"},{"lineNumber":1733,"author":{"gitId":"a1021492980"},"content":"search through the available workouts.","lastModifiedDate":"2022-04-10"},{"lineNumber":1734,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1735,"author":{"gitId":"a1021492980"},"content":"**(Steps 4 to 5)** Based on the `workout` objects from the `workoutList`, the `searchWorkout()` will retrieve all the workouts with name","lastModifiedDate":"2022-04-11"},{"lineNumber":1736,"author":{"gitId":"a1021492980"},"content":"containing `\u003cexercise keyword\u003e` or repetitions equals to `\u003cnumber of reps\u003e`, and display them in the user\u0027s terminal.","lastModifiedDate":"2022-04-09"},{"lineNumber":1737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1738,"author":{"gitId":"a1021492980"},"content":"**(Step 6)** The `SearchCommand` object returns to the `WerkIt` object.","lastModifiedDate":"2022-04-11"},{"lineNumber":1739,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1740,"author":{"gitId":"a1021492980"},"content":"This completes the process of searching for workout in WerkIt!.","lastModifiedDate":"2022-04-10"},{"lineNumber":1741,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1742,"author":{"gitId":"a1021492980"},"content":"---","lastModifiedDate":"2022-04-09"},{"lineNumber":1743,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1744,"author":{"gitId":"a1021492980"},"content":"#### Search For Plan","lastModifiedDate":"2022-03-28"},{"lineNumber":1745,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":1746,"author":{"gitId":"a1021492980"},"content":"A summary of the general procedure of search for plan in the application is as follows:","lastModifiedDate":"2022-04-09"},{"lineNumber":1747,"author":{"gitId":"a1021492980"},"content":"1. User enters the command `search /plan \u003cplan keyword\u003e`.","lastModifiedDate":"2022-04-09"},{"lineNumber":1748,"author":{"gitId":"a1021492980"},"content":"2. A list of plan names with matching result is displayed to the user via the terminal.","lastModifiedDate":"2022-04-09"},{"lineNumber":1749,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":1750,"author":{"gitId":"Musfirahe0556596"},"content":"The following sequence diagram illustrates how the `search /plan` command works in greater detail:","lastModifiedDate":"2022-03-30"},{"lineNumber":1751,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":1752,"author":{"gitId":"a1021492980"},"content":"\u003cspan class\u003d\"info box\"\u003e:memo: To simplify the sequence diagram, some method invocations that are deemed to be trivial","lastModifiedDate":"2022-04-10"},{"lineNumber":1753,"author":{"gitId":"a1021492980"},"content":"have been removed from the sequence diagram. Reference frames will be elaborated further","lastModifiedDate":"2022-04-10"},{"lineNumber":1754,"author":{"gitId":"a1021492980"},"content":"down this section.\u003c/span\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":1755,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":1756,"author":{"gitId":"a1021492980"},"content":"![Search Plan Sequence Diagram](uml/sequenceDiagrams/search/images/searchPlan.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":1757,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":1758,"author":{"gitId":"a1021492980"},"content":"**(Before Step 1)** The user\u0027s input (in this case will be a `search /plan \u003cplan keyword\u003e` command) is obtained","lastModifiedDate":"2022-04-10"},{"lineNumber":1759,"author":{"gitId":"a1021492980"},"content":"and parsed to obtain a `SearchCommand` object that contains the user\u0027s input.","lastModifiedDate":"2022-04-09"},{"lineNumber":1760,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1761,"author":{"gitId":"a1021492980"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: For more information on the obtaining and parsing functionality of WerkIt!, please refer to","lastModifiedDate":"2022-04-09"},{"lineNumber":1762,"author":{"gitId":"a1021492980"},"content":"[\"Parsing User Input and Getting the Right Command\"](#parsing-user-input-and-getting-the-right-command) section.\u003c/span\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1763,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1764,"author":{"gitId":"a1021492980"},"content":"**(Steps 1 to 3)** When the SearchCommand#execute() method is called, it will identify that the search action is of type `/plan`.","lastModifiedDate":"2022-04-10"},{"lineNumber":1765,"author":{"gitId":"a1021492980"},"content":"Subsequently, it will call the `PlanList#getPlansDisplayList()` method to fetch the `planList` that is used to","lastModifiedDate":"2022-04-10"},{"lineNumber":1766,"author":{"gitId":"a1021492980"},"content":"search through the available plans.","lastModifiedDate":"2022-04-10"},{"lineNumber":1767,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1768,"author":{"gitId":"a1021492980"},"content":"**(Steps 4 to 5)** Based on the `plan` objects from the `planList`, the `searchPlan()` will retrieve all the plans with name","lastModifiedDate":"2022-04-11"},{"lineNumber":1769,"author":{"gitId":"a1021492980"},"content":"containing `\u003cplan keyword\u003e`, and display them in the user\u0027s terminal.","lastModifiedDate":"2022-04-09"},{"lineNumber":1770,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1771,"author":{"gitId":"a1021492980"},"content":"**(Step 6)** The `SearchCommand` object returns to the `WerkIt` object.","lastModifiedDate":"2022-04-11"},{"lineNumber":1772,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1773,"author":{"gitId":"a1021492980"},"content":"This completes the process of searching for plan in WerkIt!.","lastModifiedDate":"2022-04-10"},{"lineNumber":1774,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1775,"author":{"gitId":"a1021492980"},"content":"---","lastModifiedDate":"2022-04-09"},{"lineNumber":1776,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1777,"author":{"gitId":"a1021492980"},"content":"#### Search For All","lastModifiedDate":"2022-03-28"},{"lineNumber":1778,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":1779,"author":{"gitId":"a1021492980"},"content":"A summary of the general procedure of search for plan in the application is as follows:","lastModifiedDate":"2022-04-09"},{"lineNumber":1780,"author":{"gitId":"a1021492980"},"content":"1. User enters the command `search /all \u003ckeyword\u003e`.","lastModifiedDate":"2022-04-09"},{"lineNumber":1781,"author":{"gitId":"a1021492980"},"content":"2. A list of exercise name, workouts and plan names with matching result is displayed to the user via the terminal.","lastModifiedDate":"2022-04-09"},{"lineNumber":1782,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":1783,"author":{"gitId":"Musfirahe0556596"},"content":"The following sequence diagram illustrates how the `search /all` command works in greater detail:","lastModifiedDate":"2022-03-30"},{"lineNumber":1784,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":1785,"author":{"gitId":"a1021492980"},"content":"\u003cspan class\u003d\"info box\"\u003e:memo: To simplify the sequence diagram, some method invocations that are deemed to be trivial","lastModifiedDate":"2022-04-10"},{"lineNumber":1786,"author":{"gitId":"a1021492980"},"content":"have been removed from the sequence diagram. Reference frames will be elaborated further","lastModifiedDate":"2022-04-10"},{"lineNumber":1787,"author":{"gitId":"a1021492980"},"content":"down this section.\u003c/span\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":1788,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":1789,"author":{"gitId":"a1021492980"},"content":"![Search All Sequence Diagram](uml/sequenceDiagrams/search/images/searchAll.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":1790,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":1791,"author":{"gitId":"a1021492980"},"content":"**(Before Step 1)** The user\u0027s input (in this case will be a `search /plan \u003cplan keyword\u003e` command) is obtained","lastModifiedDate":"2022-04-10"},{"lineNumber":1792,"author":{"gitId":"a1021492980"},"content":"and parsed to obtain a `SearchCommand` object that contains the user\u0027s input.","lastModifiedDate":"2022-04-09"},{"lineNumber":1793,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1794,"author":{"gitId":"a1021492980"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: For more information on the obtaining and parsing functionality of WerkIt!, please refer to","lastModifiedDate":"2022-04-09"},{"lineNumber":1795,"author":{"gitId":"a1021492980"},"content":"[\"Parsing User Input and Getting the Right Command\"](#parsing-user-input-and-getting-the-right-command) section.\u003c/span\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1796,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1797,"author":{"gitId":"a1021492980"},"content":"**(Steps 1 to 7)** When the `SearchCommand#execute()` method is called, it will identify that the search action is of type `/all`.","lastModifiedDate":"2022-04-10"},{"lineNumber":1798,"author":{"gitId":"a1021492980"},"content":"Subsequently, it will call the `ExerciseList#getExerciseList()`, `WorkoutList#getWorkoutsDisplayList()` and","lastModifiedDate":"2022-04-09"},{"lineNumber":1799,"author":{"gitId":"a1021492980"},"content":"`PlanList#getPlansDisplayList()` methods to fetch the `exerciseList`, `workoutList` and `planList` that are used to","lastModifiedDate":"2022-04-10"},{"lineNumber":1800,"author":{"gitId":"a1021492980"},"content":"search through the available exercises, workouts and plans.","lastModifiedDate":"2022-04-10"},{"lineNumber":1801,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1802,"author":{"gitId":"a1021492980"},"content":"**(Steps 8 to 9)** Based on the exercises, `workout` objects and `plan` objects retrieved, the `searchAll()` will retrieve ","lastModifiedDate":"2022-04-11"},{"lineNumber":1803,"author":{"gitId":"a1021492980"},"content":"all the matching results, and display them in the user\u0027s terminal.","lastModifiedDate":"2022-04-09"},{"lineNumber":1804,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1805,"author":{"gitId":"a1021492980"},"content":"**(Step 10)** The `SearchCommand` object returns to the `WerkIt` object.","lastModifiedDate":"2022-04-11"},{"lineNumber":1806,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1807,"author":{"gitId":"a1021492980"},"content":"This completes the process of searching for everything in WerkIt!.","lastModifiedDate":"2022-04-10"},{"lineNumber":1808,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1809,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1810,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#implementation\"\u003eBack to Implementation Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1811,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1812,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":1813,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":1814,"author":{"gitId":"alanlowzies"},"content":"### File Management","lastModifiedDate":"2022-04-04"},{"lineNumber":1815,"author":{"gitId":"alanlowzies"},"content":"#### About the Location of Directories and Files Created","lastModifiedDate":"2022-04-05"},{"lineNumber":1816,"author":{"gitId":"alanlowzies"},"content":"Ideally, the `werkItResources` and `werkItLogs` directories should be in the same directory as the `WerkIt.jar` file,","lastModifiedDate":"2022-04-05"},{"lineNumber":1817,"author":{"gitId":"alanlowzies"},"content":"but the creation of the directories and files depends on where the user starts WerkIt! from. Specifically, it depends","lastModifiedDate":"2022-04-05"},{"lineNumber":1818,"author":{"gitId":"alanlowzies"},"content":"on the working directory that the user is in when he/she runs WerkIt!. In the user guide\u0027s ","lastModifiedDate":"2022-04-09"},{"lineNumber":1819,"author":{"gitId":"alanlowzies"},"content":"[quick start guide](UserGuide.md#quick-start-guide) as well as the section regarding ","lastModifiedDate":"2022-04-05"},{"lineNumber":1820,"author":{"gitId":"alanlowzies"},"content":"[information about the app\u0027s local storage](UserGuide.md#werkits-local-storage-information), the user has been ","lastModifiedDate":"2022-04-09"},{"lineNumber":1821,"author":{"gitId":"alanlowzies"},"content":"instructed to create a new directory to put the WerkIt! JAR file in and to set his/her current working directory to that ","lastModifiedDate":"2022-04-09"},{"lineNumber":1822,"author":{"gitId":"alanlowzies"},"content":"new folder before starting the application. This is to ensure that the resource directories and files are created in the ","lastModifiedDate":"2022-04-09"},{"lineNumber":1823,"author":{"gitId":"alanlowzies"},"content":"same location as the WerkIt! JAR file as well as to maintain cleanliness on the user\u0027s local filesystem.","lastModifiedDate":"2022-04-09"},{"lineNumber":1824,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":1825,"author":{"gitId":"alanlowzies"},"content":"#### Storage Format for Each Resource File","lastModifiedDate":"2022-04-06"},{"lineNumber":1826,"author":{"gitId":"alanlowzies"},"content":"There are four resource files in total: `exercises.txt`, `workouts.txt`, `plans.txt`, and `schedule.txt`. For all","lastModifiedDate":"2022-04-06"},{"lineNumber":1827,"author":{"gitId":"alanlowzies"},"content":"four resource files, each line in the file represents one entry of data.","lastModifiedDate":"2022-04-06"},{"lineNumber":1828,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1829,"author":{"gitId":"alanlowzies"},"content":"The data format for a line in each file is as follows:","lastModifiedDate":"2022-04-06"},{"lineNumber":1830,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1831,"author":{"gitId":"alanlowzies"},"content":"| File            | Data Format      | Example      |","lastModifiedDate":"2022-04-06"},{"lineNumber":1832,"author":{"gitId":"alanlowzies"},"content":"|-----------------|------------------|--------------|","lastModifiedDate":"2022-04-06"},{"lineNumber":1833,"author":{"gitId":"alanlowzies"},"content":"| `exercises.txt` | `\u003cexercise name\u003e` | `push up`    |","lastModifiedDate":"2022-04-06"},{"lineNumber":1834,"author":{"gitId":"alanlowzies"},"content":"| `workouts.txt`  | `\u003cexercise name\u003e | \u003crepetition value\u003e` | `push up | 10` |","lastModifiedDate":"2022-04-06"},{"lineNumber":1835,"author":{"gitId":"alanlowzies"},"content":"| `plans.txt`     | `\u003cplan name\u003e \u003cworkout 1\u003e,\u003cworkout 2\u003e,...` | `plan 1 | push up | 10,pull up | 10` |","lastModifiedDate":"2022-04-06"},{"lineNumber":1836,"author":{"gitId":"alanlowzies"},"content":"| `schedule.txt`  | `\u003cday number of the week\u003e | \u003cplan name\u003e` | `1 | plan 1` |","lastModifiedDate":"2022-04-06"},{"lineNumber":1837,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1838,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"info box\"\u003e:memo: In our application, the week starts on a Monday. Thus, in `schedule.txt`, if the day number","lastModifiedDate":"2022-04-06"},{"lineNumber":1839,"author":{"gitId":"alanlowzies"},"content":"is `1`, it means that plan is meant for Monday, `2` for Tuesday, and so on...\u003c/span\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1840,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1841,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"info box\"\u003eTo maintain simplicity, WerkIt! only stores words in lower case.\u003c/span\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1842,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1843,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"warning box\"\u003eIn the [user guide](UserGuide.md#werkits-local-storage-information), users have been warned","lastModifiedDate":"2022-04-06"},{"lineNumber":1844,"author":{"gitId":"alanlowzies"},"content":"not to directly modify the file data in order to avoid application instability and data loss.\u003c/span\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1845,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1846,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#implementation\"\u003eBack to Implementation Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1847,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1848,"author":{"gitId":"alanlowzies"},"content":"#### Loading Resource File Data Into WerkIt!","lastModifiedDate":"2022-04-06"},{"lineNumber":1849,"author":{"gitId":"alanlowzies"},"content":"When WerkIt! is launched for the first time, WerkIt! will create the required resource directories and files. Alternatively,","lastModifiedDate":"2022-04-06"},{"lineNumber":1850,"author":{"gitId":"alanlowzies"},"content":"if the user has deleted some resource files for whatever reason (e.g. data reset), WerkIt! will recreate the missing","lastModifiedDate":"2022-04-06"},{"lineNumber":1851,"author":{"gitId":"alanlowzies"},"content":"files (and directories, if necessary). In either case, the application will not attempt to load the data in any of these","lastModifiedDate":"2022-04-06"},{"lineNumber":1852,"author":{"gitId":"alanlowzies"},"content":"files since they are just created.","lastModifiedDate":"2022-04-06"},{"lineNumber":1853,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1854,"author":{"gitId":"alanlowzies"},"content":"On subsequent launches, if the application discovers the existence of these resource files, it will attempt to load the","lastModifiedDate":"2022-04-06"},{"lineNumber":1855,"author":{"gitId":"alanlowzies"},"content":"data stored in the files.","lastModifiedDate":"2022-04-06"},{"lineNumber":1856,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1857,"author":{"gitId":"alanlowzies"},"content":"The following sequence diagram shows the procedure of how data in `workouts.txt` is read and loaded into WerkIt!:","lastModifiedDate":"2022-04-06"},{"lineNumber":1858,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1859,"author":{"gitId":"alanlowzies"},"content":"![Load workouts.txt](uml/sequenceDiagrams/storage/images/loadWorkoutsTxt.png)","lastModifiedDate":"2022-04-06"},{"lineNumber":1860,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1861,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"info box\"\u003e:memo: To simplify the sequence diagram, some method calls have been omitted as they are","lastModifiedDate":"2022-04-06"},{"lineNumber":1862,"author":{"gitId":"alanlowzies"},"content":"irrelevant to the loading of `workouts.txt` or they do not add significant value to the diagram.\u003c/span\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1863,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1864,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"info box\"\u003e:memo: The procedures for reading and loading the data for plan and schedule data sets are ","lastModifiedDate":"2022-04-09"},{"lineNumber":1865,"author":{"gitId":"alanlowzies"},"content":"largely similar to the above sequence diagram. Thus, the sequence diagrams for these data sets are not shown.\u003c/span\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1866,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1867,"author":{"gitId":"alanlowzies"},"content":"**(Steps 1 to 3)** When the `WerkIt` object is instantiated, `WerkIt#loadRequiredDirectoryAndFiles()` is called in the","lastModifiedDate":"2022-04-09"},{"lineNumber":1868,"author":{"gitId":"alanlowzies"},"content":"constructor. This method is responsible for checking if the necessary resource files and directories are present. In this","lastModifiedDate":"2022-04-09"},{"lineNumber":1869,"author":{"gitId":"alanlowzies"},"content":"case, we assume that all resource files are in place and since we are only interested in `workouts.txt`, `WerkIt#loadWorkoutFile()`","lastModifiedDate":"2022-04-06"},{"lineNumber":1870,"author":{"gitId":"alanlowzies"},"content":"is called (not shown in the sequence diagram to simplify the diagram), which will in turn call `WerkIt#loadWorkoutsFromFile()`.","lastModifiedDate":"2022-04-06"},{"lineNumber":1871,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1872,"author":{"gitId":"alanlowzies"},"content":"**(Before Step 4)** With the aid of the `Scanner` class that is built into Java, the first line of `workouts.txt` is","lastModifiedDate":"2022-04-06"},{"lineNumber":1873,"author":{"gitId":"alanlowzies"},"content":"read into the application and stored as a `String`.  The data is then parsed into a `String` array and sent to","lastModifiedDate":"2022-04-06"},{"lineNumber":1874,"author":{"gitId":"alanlowzies"},"content":"`FileManager#addFileWorkoutToList()`.","lastModifiedDate":"2022-04-06"},{"lineNumber":1875,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1876,"author":{"gitId":"alanlowzies"},"content":"**(Step 4)** In `FileManager#addFileWorkoutToList()`, a `String` is crafted to follow a format that is a truncated","lastModifiedDate":"2022-04-06"},{"lineNumber":1877,"author":{"gitId":"alanlowzies"},"content":"version of the `workout /new` command that is accepted by `WorkoutList#createNewWorkout()`. ","lastModifiedDate":"2022-04-09"},{"lineNumber":1878,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1879,"author":{"gitId":"alanlowzies"},"content":"| Original Command                | Truncated `String` |","lastModifiedDate":"2022-04-06"},{"lineNumber":1880,"author":{"gitId":"alanlowzies"},"content":"|---------------------------------|--------------------|","lastModifiedDate":"2022-04-06"},{"lineNumber":1881,"author":{"gitId":"alanlowzies"},"content":"| `workout /new push up /reps 10` | `push up /reps 10` |","lastModifiedDate":"2022-04-06"},{"lineNumber":1882,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":1883,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":1884,"author":{"gitId":"alanlowzies"},"content":"**(Steps 5 and 6)** The crafted `String` is passed to `WorkoutList#createNewWorkout()` to check the validity of the workout","lastModifiedDate":"2022-04-09"},{"lineNumber":1885,"author":{"gitId":"alanlowzies"},"content":"data and create the `Workout` object before returning the object to `FileManager#addFileWorkoutToList()`.","lastModifiedDate":"2022-04-09"},{"lineNumber":1886,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1887,"author":{"gitId":"alanlowzies"},"content":"**(Step 7)** The newly created `Workout` object is passed to `WorkoutList#addNewWorkoutToLists()` to add the new","lastModifiedDate":"2022-04-10"},{"lineNumber":1888,"author":{"gitId":"alanlowzies"},"content":"`Workout` object to the respective data structures maintained in the `WorkoutList` object.","lastModifiedDate":"2022-04-09"},{"lineNumber":1889,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1890,"author":{"gitId":"alanlowzies"},"content":"Steps 4 to 9 is repeated until all the lines in `workouts.txt` have been read.","lastModifiedDate":"2022-04-09"},{"lineNumber":1891,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1892,"author":{"gitId":"alanlowzies"},"content":"**(Step 10)** A boolean value that indicates whether the loading of `workouts.txt` went without any issues is returned","lastModifiedDate":"2022-04-09"},{"lineNumber":1893,"author":{"gitId":"alanlowzies"},"content":"from `WerkIt#loadWorkoutsFromFile()`. A value of `true` means that no issues were encountered and `false` means otherwise. ","lastModifiedDate":"2022-04-09"},{"lineNumber":1894,"author":{"gitId":"alanlowzies"},"content":"This boolean will be used to determine the status message of the loading of `workouts.txt`. This status message will then ","lastModifiedDate":"2022-04-09"},{"lineNumber":1895,"author":{"gitId":"alanlowzies"},"content":"be printed to the terminal.","lastModifiedDate":"2022-04-09"},{"lineNumber":1896,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1897,"author":{"gitId":"alanlowzies"},"content":"This will finish the loading of the data in `workouts.txt` into WerkIt!","lastModifiedDate":"2022-04-06"},{"lineNumber":1898,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1899,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"info box\"\u003eIn practice, the other resource files (i.e. `plans.txt` and `schedule.txt`)","lastModifiedDate":"2022-04-09"},{"lineNumber":1900,"author":{"gitId":"alanlowzies"},"content":"are also processed and loaded in `WerkIt#loadRequiredDirectoryAndFiles()`. Once all the other resource files have been","lastModifiedDate":"2022-04-06"},{"lineNumber":1901,"author":{"gitId":"alanlowzies"},"content":"loaded, the constructor for `WerkIt` will end.\u003c/span\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1902,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1903,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#implementation\"\u003eBack to Implementation Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1904,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1905,"author":{"gitId":"alanlowzies"},"content":"#### Writing a New Line of Data to the Resource File","lastModifiedDate":"2022-04-05"},{"lineNumber":1906,"author":{"gitId":"alanlowzies"},"content":"Writing a new line of data to the respective resource files is done when the user creates a new workout or plan.","lastModifiedDate":"2022-04-05"},{"lineNumber":1907,"author":{"gitId":"alanlowzies"},"content":"See [this design consideration](#design-considerations-for-how-data-is-written-or-updated-to-a-resource-file)","lastModifiedDate":"2022-04-05"},{"lineNumber":1908,"author":{"gitId":"alanlowzies"},"content":"for more details.","lastModifiedDate":"2022-04-05"},{"lineNumber":1909,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":1910,"author":{"gitId":"alanlowzies"},"content":"Currently, a new line of data is written to the respective resource files when creating a [new workout](#create-new-workout)","lastModifiedDate":"2022-04-05"},{"lineNumber":1911,"author":{"gitId":"alanlowzies"},"content":"or a [new plan](#create-a-new-plan).","lastModifiedDate":"2022-04-05"},{"lineNumber":1912,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":1913,"author":{"gitId":"alanlowzies"},"content":"The following sequence diagram shows how a new workout is written to `workouts.txt` when the user enters a `workout /new`","lastModifiedDate":"2022-04-05"},{"lineNumber":1914,"author":{"gitId":"alanlowzies"},"content":"command:","lastModifiedDate":"2022-04-05"},{"lineNumber":1915,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":1916,"author":{"gitId":"alanlowzies"},"content":"![Write New Line Of Data](uml/sequenceDiagrams/storage/images/writeNewLineOfData.png)","lastModifiedDate":"2022-04-05"},{"lineNumber":1917,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":1918,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"info box\"\u003e:memo: The procedure for writing a new line of data when the user creates a new plan is largely ","lastModifiedDate":"2022-04-05"},{"lineNumber":1919,"author":{"gitId":"alanlowzies"},"content":"similar to the above sequence diagram. Thus, the sequence diagram for the plan data set is not shown.\u003c/span\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1920,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":1921,"author":{"gitId":"alanlowzies"},"content":"**(Step 1)** After a new workout has been created, the `WorkoutCommand` object calls `FileManager#writeNewWorkoutToFile()`,","lastModifiedDate":"2022-04-05"},{"lineNumber":1922,"author":{"gitId":"alanlowzies"},"content":"passing the newly created `Workout` object as the argument.","lastModifiedDate":"2022-04-05"},{"lineNumber":1923,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":1924,"author":{"gitId":"alanlowzies"},"content":"**(Steps 2 and 3)** `FileManager#convertWorkoutToFileDataFormat()` is called, passing the newly created `Workout` object as the","lastModifiedDate":"2022-04-06"},{"lineNumber":1925,"author":{"gitId":"alanlowzies"},"content":"argument. In this method, the newly created `Workout` object\u0027s data is converted into a specified `String` format that will be","lastModifiedDate":"2022-04-06"},{"lineNumber":1926,"author":{"gitId":"alanlowzies"},"content":"stored in `workouts.txt`. The format of a workout data when stored in the file will look something like this:","lastModifiedDate":"2022-04-05"},{"lineNumber":1927,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":1928,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-04-05"},{"lineNumber":1929,"author":{"gitId":"alanlowzies"},"content":"\u003cexercise name\u003e | \u003crepetition value\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":1930,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-04-05"},{"lineNumber":1931,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":1932,"author":{"gitId":"alanlowzies"},"content":"For example, a workout of 10 reps of push ups will look like this in `workouts.txt`:","lastModifiedDate":"2022-04-05"},{"lineNumber":1933,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":1934,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-04-05"},{"lineNumber":1935,"author":{"gitId":"alanlowzies"},"content":"push up | 10","lastModifiedDate":"2022-04-05"},{"lineNumber":1936,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-04-05"},{"lineNumber":1937,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":1938,"author":{"gitId":"alanlowzies"},"content":"**(Step 3 and beyond)** The \u0027file-formatted\u0027 workout data is returned to `FileManager#writeNewWorkoutToFile()` and thereafter","lastModifiedDate":"2022-04-05"},{"lineNumber":1939,"author":{"gitId":"alanlowzies"},"content":"written to `workouts.txt` with the help of the `FileWriter` class that is built into Java. Each line of `workouts.txt` ","lastModifiedDate":"2022-04-05"},{"lineNumber":1940,"author":{"gitId":"alanlowzies"},"content":"represents one workout.","lastModifiedDate":"2022-04-05"},{"lineNumber":1941,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":1942,"author":{"gitId":"alanlowzies"},"content":"This finishes the writing of the new workout to the resource file and control is returned to `WorkoutCommand#execute()`.","lastModifiedDate":"2022-04-05"},{"lineNumber":1943,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":1944,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#implementation\"\u003eBack to Implementation Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1945,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1946,"author":{"gitId":"alanlowzies"},"content":"#### Rewriting the Entire Resource File With the Most Recent Set of Data","lastModifiedDate":"2022-04-09"},{"lineNumber":1947,"author":{"gitId":"alanlowzies"},"content":"In contrast to the previous section which covers the scenarios where only the new data is written as a new line to the ","lastModifiedDate":"2022-04-09"},{"lineNumber":1948,"author":{"gitId":"alanlowzies"},"content":"file, rewriting the respective entire resource file is done when the user updates or deletes a workout, plan, or","lastModifiedDate":"2022-04-09"},{"lineNumber":1949,"author":{"gitId":"alanlowzies"},"content":"schedule. See [this design consideration](#design-considerations-for-how-data-is-written-or-updated-to-a-resource-file)","lastModifiedDate":"2022-04-05"},{"lineNumber":1950,"author":{"gitId":"alanlowzies"},"content":"for more details.","lastModifiedDate":"2022-04-05"},{"lineNumber":1951,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":1952,"author":{"gitId":"alanlowzies"},"content":"The following sequence diagram shows how `workouts.txt` is rewritten when the user updates or deletes a workout:","lastModifiedDate":"2022-04-06"},{"lineNumber":1953,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":1954,"author":{"gitId":"alanlowzies"},"content":"![Rewrite Resource File](uml/sequenceDiagrams/storage/images/rewriteResourceFile.png)","lastModifiedDate":"2022-04-06"},{"lineNumber":1955,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":1956,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"info box\"\u003e:memo: The procedures for rewriting the entire file for plan and schedule data sets are largely similar ","lastModifiedDate":"2022-04-09"},{"lineNumber":1957,"author":{"gitId":"alanlowzies"},"content":"to the above sequence diagram.\u003c/span\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":1958,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":1959,"author":{"gitId":"alanlowzies"},"content":"**(Step 1)** After an existing workout is updated or deleted, the `WorkoutCommand` object calls","lastModifiedDate":"2022-04-06"},{"lineNumber":1960,"author":{"gitId":"alanlowzies"},"content":"`FileManager#rewriteAllWorkoutsToFile()`, passing an instance of `WorkoutList` as the argument.","lastModifiedDate":"2022-04-06"},{"lineNumber":1961,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1962,"author":{"gitId":"alanlowzies"},"content":"**(Steps 2 and 3)** In `FileManager#rewriteAllWorkoutsToFile()`, `workoutsDisplayList` is obtained from the `WorkoutList`","lastModifiedDate":"2022-04-06"},{"lineNumber":1963,"author":{"gitId":"alanlowzies"},"content":"instance. `workoutsDisplayList` is an ArrayList of `String` objects where each `String` represents a key that is","lastModifiedDate":"2022-04-06"},{"lineNumber":1964,"author":{"gitId":"alanlowzies"},"content":"mapped to a `Workout` object stored in a HashMap object in `WorkoutList`. (More information about the HashMap","lastModifiedDate":"2022-04-06"},{"lineNumber":1965,"author":{"gitId":"alanlowzies"},"content":"implementation for `Workout` objects can be found [here](#hashmaps---motivation)).","lastModifiedDate":"2022-04-06"},{"lineNumber":1966,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1967,"author":{"gitId":"alanlowzies"},"content":"The ArrayList of keys is iterated through using an enhanced for loop.","lastModifiedDate":"2022-04-06"},{"lineNumber":1968,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1969,"author":{"gitId":"alanlowzies"},"content":"**(Steps 4 and 5)** For each key iterated, the actual `Workout` object mapped to the key is obtained via the","lastModifiedDate":"2022-04-06"},{"lineNumber":1970,"author":{"gitId":"alanlowzies"},"content":"`WorkoutList#getWorkoutFromKey()` method.","lastModifiedDate":"2022-04-06"},{"lineNumber":1971,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1972,"author":{"gitId":"alanlowzies"},"content":"**(Steps 5 and 6)** `FileManager#convertWorkoutToFileDataFormat()` is called, with the `Workout` object obtained in Step","lastModifiedDate":"2022-04-06"},{"lineNumber":1973,"author":{"gitId":"alanlowzies"},"content":"5 as the parameter. This method will convert the `Workout` object\u0027s data into a specified `String` format that will be","lastModifiedDate":"2022-04-06"},{"lineNumber":1974,"author":{"gitId":"alanlowzies"},"content":"stored in `workouts.txt`. The format of a workout data when stored in the file will look something like this:","lastModifiedDate":"2022-04-06"},{"lineNumber":1975,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1976,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-04-06"},{"lineNumber":1977,"author":{"gitId":"alanlowzies"},"content":"\u003cexercise name\u003e | \u003crepetition value\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1978,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-04-06"},{"lineNumber":1979,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1980,"author":{"gitId":"alanlowzies"},"content":"For example, a workout of 10 reps of push ups will look like this in `workouts.txt`:","lastModifiedDate":"2022-04-06"},{"lineNumber":1981,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1982,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-04-06"},{"lineNumber":1983,"author":{"gitId":"alanlowzies"},"content":"push up | 10","lastModifiedDate":"2022-04-06"},{"lineNumber":1984,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-04-06"},{"lineNumber":1985,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1986,"author":{"gitId":"alanlowzies"},"content":"Thereafter, the \u0027file-formatted\u0027 workout data is returned to `FileManager#rewriteAllWorkoutsToFile()` and the method","lastModifiedDate":"2022-04-06"},{"lineNumber":1987,"author":{"gitId":"alanlowzies"},"content":"will write the data into `workouts.txt` with the help of the `FileWriter` class that is built into Java. Each line of","lastModifiedDate":"2022-04-06"},{"lineNumber":1988,"author":{"gitId":"alanlowzies"},"content":"`workouts.txt` will represent one workout.","lastModifiedDate":"2022-04-06"},{"lineNumber":1989,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1990,"author":{"gitId":"alanlowzies"},"content":"Steps 4 to 7 (as well as the reference frame) is repeated until all keys in `workoutsDisplayList` has been iterated","lastModifiedDate":"2022-04-06"},{"lineNumber":1991,"author":{"gitId":"alanlowzies"},"content":"through.","lastModifiedDate":"2022-04-06"},{"lineNumber":1992,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1993,"author":{"gitId":"alanlowzies"},"content":"This finishes the process of rewriting the entire `workouts.txt` and control is returned to `WorkoutCommand#execute()`.","lastModifiedDate":"2022-04-06"},{"lineNumber":1994,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1995,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#implementation\"\u003eBack to Implementation Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1996,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1997,"author":{"gitId":"alanlowzies"},"content":"#### About the `LogHandler` Class","lastModifiedDate":"2022-04-06"},{"lineNumber":1998,"author":{"gitId":"alanlowzies"},"content":"Logging in WerkIt! is mainly handled by the `Logger` class that is built into Java. The `LogHandler` class is created","lastModifiedDate":"2022-04-06"},{"lineNumber":1999,"author":{"gitId":"alanlowzies"},"content":"as a custom utility class to help WerkIt!\u0027s various components log to a designated log file in an easier manner.","lastModifiedDate":"2022-04-06"},{"lineNumber":2000,"author":{"gitId":"alanlowzies"},"content":"Whenever a class wants to log information, besides creating a `Logger` object, the object must be \u0027linked\u0027 to a","lastModifiedDate":"2022-04-06"},{"lineNumber":2001,"author":{"gitId":"alanlowzies"},"content":"log file handler that has been configured in the `LogHandler` class.","lastModifiedDate":"2022-04-06"},{"lineNumber":2002,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":2003,"author":{"gitId":"alanlowzies"},"content":"The log file, `logs.log`, is stored in the `werkItLogs` directory, which is in the same directory as the `werkItResources`","lastModifiedDate":"2022-04-06"},{"lineNumber":2004,"author":{"gitId":"alanlowzies"},"content":"directory. Each log entry has the following format:","lastModifiedDate":"2022-04-06"},{"lineNumber":2005,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":2006,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-04-06"},{"lineNumber":2007,"author":{"gitId":"alanlowzies"},"content":"\u003ctimestamp\u003e \u003cpackage.ClassName\u003e \u003cmethodName\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":2008,"author":{"gitId":"alanlowzies"},"content":"\u003clog level\u003e: \u003clog message\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":2009,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-04-06"},{"lineNumber":2010,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":2011,"author":{"gitId":"alanlowzies"},"content":"Here\u0027s a sample log entry that you may find in `logs.log`:","lastModifiedDate":"2022-04-06"},{"lineNumber":2012,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-04-06"},{"lineNumber":2013,"author":{"gitId":"alanlowzies"},"content":"Mar 17, 2022 7:24:43 PM data.workouts.WorkoutList createNewWorkout","lastModifiedDate":"2022-04-09"},{"lineNumber":2014,"author":{"gitId":"alanlowzies"},"content":"INFO: New workout created.","lastModifiedDate":"2022-04-06"},{"lineNumber":2015,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-04-06"},{"lineNumber":2016,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":2017,"author":{"gitId":"alanlowzies"},"content":"#### Design Considerations for File Management","lastModifiedDate":"2022-04-06"},{"lineNumber":2018,"author":{"gitId":"alanlowzies"},"content":"##### How Data Is Written or Updated to a Resource File","lastModifiedDate":"2022-04-06"},{"lineNumber":2019,"author":{"gitId":"alanlowzies"},"content":"While writing newly created workout or plan data to its respective resource file is a trivial task, updating or deleting","lastModifiedDate":"2022-04-05"},{"lineNumber":2020,"author":{"gitId":"alanlowzies"},"content":"existing data is more complex. When we want to update or delete the data in the resource file (including `schedule.txt`)","lastModifiedDate":"2022-04-09"},{"lineNumber":2021,"author":{"gitId":"alanlowzies"},"content":", we need to find a way to traverse through the file and find the exact part of the file where the data that needs to be ","lastModifiedDate":"2022-04-09"},{"lineNumber":2022,"author":{"gitId":"alanlowzies"},"content":"updated or deleted is at. While it","lastModifiedDate":"2022-04-09"},{"lineNumber":2023,"author":{"gitId":"alanlowzies"},"content":"is doable and can potentially be more efficient than rewriting the entire file, it is currently too complex for the","lastModifiedDate":"2022-04-09"},{"lineNumber":2024,"author":{"gitId":"alanlowzies"},"content":"development team to work on, considering the limited time given. Thus, we have decided to take the less difficult route ","lastModifiedDate":"2022-04-09"},{"lineNumber":2025,"author":{"gitId":"alanlowzies"},"content":"of rewriting the entire file with the most recent set of data when an existing data is updated or deleted.","lastModifiedDate":"2022-04-09"},{"lineNumber":2026,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":2027,"author":{"gitId":"alanlowzies"},"content":"The following table shows whether a certain operation writes a new line of data or rewrites the entire resource file:","lastModifiedDate":"2022-04-05"},{"lineNumber":2028,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":2029,"author":{"gitId":"alanlowzies"},"content":"**Legend**\u003cbr/\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":2030,"author":{"gitId":"alanlowzies"},"content":":large_blue_diamond:: Only write the new line of data to the resource file\u003cbr/\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":2031,"author":{"gitId":"alanlowzies"},"content":":large_orange_diamond:: Rewrite the entire resource file with the most recent set of data","lastModifiedDate":"2022-04-05"},{"lineNumber":2032,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":2033,"author":{"gitId":"alanlowzies"},"content":"| Data Type \\ Operation |        Create        |         Update          |         Delete         |","lastModifiedDate":"2022-04-05"},{"lineNumber":2034,"author":{"gitId":"alanlowzies"},"content":"|:---------------------:|:--------------------:|:-----------------------:|:----------------------:|","lastModifiedDate":"2022-04-06"},{"lineNumber":2035,"author":{"gitId":"alanlowzies"},"content":"|       Workouts        | :large_blue_diamond: | :large_orange_diamond:  | :large_orange_diamond: |","lastModifiedDate":"2022-04-09"},{"lineNumber":2036,"author":{"gitId":"alanlowzies"},"content":"|         Plans         | :large_blue_diamond: | :large_orange_diamond:  | :large_orange_diamond: |","lastModifiedDate":"2022-04-05"},{"lineNumber":2037,"author":{"gitId":"alanlowzies"},"content":"|       Schedule        |        _N.A._        | :large_orange_diamond:  | :large_orange_diamond: |","lastModifiedDate":"2022-04-05"},{"lineNumber":2038,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":2039,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"info box\"\u003e:memo: The delete operations for schedule commands is the `schedule /clear` and `schedule /clearall`","lastModifiedDate":"2022-04-05"},{"lineNumber":2040,"author":{"gitId":"alanlowzies"},"content":"commands.\u003c/span\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":2041,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":2042,"author":{"gitId":"alanlowzies"},"content":"##### Inconsistent Data Between Resource Files","lastModifiedDate":"2022-04-06"},{"lineNumber":2043,"author":{"gitId":"alanlowzies"},"content":"The first step of loading local files to WerkIt! involves the checking of the validity of data. That is, before loading plan","lastModifiedDate":"2022-04-09"},{"lineNumber":2044,"author":{"gitId":"alanlowzies"},"content":"data, `FileManager` will check whether the workouts in the plan exist in the `workouts.txt` file, and before loading the","lastModifiedDate":"2022-04-09"},{"lineNumber":2045,"author":{"gitId":"alanlowzies"},"content":"schedule data, `FileManager` will also check whether the plans in `schedule.txt` can be found in `plans.txt`. If ","lastModifiedDate":"2022-04-09"},{"lineNumber":2046,"author":{"gitId":"a1021492980"},"content":"all the data can be matched, the files will be loaded successfully, otherwise only the unmatched data are classified as ","lastModifiedDate":"2022-04-04"},{"lineNumber":2047,"author":{"gitId":"a1021492980"},"content":"\"corrupted data\" and will be deleted and the deletion will be cascaded. ","lastModifiedDate":"2022-04-04"},{"lineNumber":2048,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":2049,"author":{"gitId":"a1021492980"},"content":"Although the users are warned not to edit the local resource files as this action may corrupt the stored data,","lastModifiedDate":"2022-04-04"},{"lineNumber":2050,"author":{"gitId":"alanlowzies"},"content":"resulting in WerkIt! being unable to load the data properly, there may still be scenarios where the users may accidentally edit ","lastModifiedDate":"2022-04-09"},{"lineNumber":2051,"author":{"gitId":"alanlowzies"},"content":"the files. Thus, other than the warning in our [user guide](UserGuide.md#werkits-local-storage-information),","lastModifiedDate":"2022-04-09"},{"lineNumber":2052,"author":{"gitId":"alanlowzies"},"content":"we have also implemented error handling methods to handle the situation where users edited the files, resulting in data ","lastModifiedDate":"2022-04-09"},{"lineNumber":2053,"author":{"gitId":"alanlowzies"},"content":"corruption. We could have implemented the handling of \"corrupted data\" in a more hassle-free way by simply clearing ","lastModifiedDate":"2022-04-09"},{"lineNumber":2054,"author":{"gitId":"a1021492980"},"content":"all local data. However, in order to provide the best possible user experience by minimising the amount of data lost in ","lastModifiedDate":"2022-04-04"},{"lineNumber":2055,"author":{"gitId":"alanlowzies"},"content":"such situations, we have decided to implement the validity checking such that only the affected data are removed while ","lastModifiedDate":"2022-04-09"},{"lineNumber":2056,"author":{"gitId":"alanlowzies"},"content":"keeping all the non-affected data safe.","lastModifiedDate":"2022-04-09"},{"lineNumber":2057,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":2058,"author":{"gitId":"alanlowzies"},"content":"##### `LogHandler` Managing Its Own Log File Instead of `FileManager` Class","lastModifiedDate":"2022-04-06"},{"lineNumber":2059,"author":{"gitId":"alanlowzies"},"content":"The development team decided to let the `LogHandler` class manage its own log file instead of the `FileManager` class,","lastModifiedDate":"2022-04-06"},{"lineNumber":2060,"author":{"gitId":"alanlowzies"},"content":"which is already managing the other resource files and directories. Specifically, managing its own log file also includes","lastModifiedDate":"2022-04-06"},{"lineNumber":2061,"author":{"gitId":"alanlowzies"},"content":"checking if the log directory exists. This is because logging is done in the `Main` class, and when the application first ","lastModifiedDate":"2022-04-06"},{"lineNumber":2062,"author":{"gitId":"alanlowzies"},"content":"starts, `WerkIt` has yet to be instantiated, which is responsible for creating the `FileManager` object. Thus, to avoid ","lastModifiedDate":"2022-04-06"},{"lineNumber":2063,"author":{"gitId":"alanlowzies"},"content":"the risk of further complicating the solution, it was decided to just let `LogHandler`manage its own log file.","lastModifiedDate":"2022-04-06"},{"lineNumber":2064,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":2065,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#implementation\"\u003eBack to Implementation Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":2066,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":2067,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-04-09"},{"lineNumber":2068,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2069,"author":{"gitId":"alanlowzies"},"content":"## Product Scope","lastModifiedDate":"2022-03-23"},{"lineNumber":2070,"author":{"gitId":"alanlowzies"},"content":"### Target User Profile","lastModifiedDate":"2022-03-23"},{"lineNumber":2071,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":2072,"author":{"gitId":"alanlowzies"},"content":"Generally, our target user profile are people who are interested in exercising and want a simple and quick way to ","lastModifiedDate":"2022-04-06"},{"lineNumber":2073,"author":{"gitId":"alanlowzies"},"content":"plan their exercise routines. In addition, it would help that they are comfortable with a command-line interface (CLI) ","lastModifiedDate":"2022-04-06"},{"lineNumber":2074,"author":{"gitId":"alanlowzies"},"content":"and can type fast, since WerkIt! is currently CLI-based.","lastModifiedDate":"2022-04-06"},{"lineNumber":2075,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":2076,"author":{"gitId":"alanlowzies"},"content":"### Value Proposition","lastModifiedDate":"2022-03-23"},{"lineNumber":2077,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":2078,"author":{"gitId":"alanlowzies"},"content":"WerkIt! aims to be a one-stop application for our target users to manage their workout routines in a simple and quick manner,","lastModifiedDate":"2022-04-09"},{"lineNumber":2079,"author":{"gitId":"alanlowzies"},"content":"instead of memorising it in their heads or using a conventional note-taking application to keep track of their workout routines,","lastModifiedDate":"2022-04-09"},{"lineNumber":2080,"author":{"gitId":"alanlowzies"},"content":"where there are many other day-to-day things being kept too.","lastModifiedDate":"2022-04-06"},{"lineNumber":2081,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":2082,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":2083,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":2084,"author":{"gitId":"-"},"content":"| Version | As a ... | I want to ...                                        | So that I can ...                                                      |","lastModifiedDate":"2020-05-24"},{"lineNumber":2085,"author":{"gitId":"emilysim00"},"content":"|---------|----------|------------------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2022-04-05"},{"lineNumber":2086,"author":{"gitId":"emilysim00"},"content":"| v1.0    | user     | view exercises                                       | create my workout                                                      |","lastModifiedDate":"2022-04-05"},{"lineNumber":2087,"author":{"gitId":"alanlowzies"},"content":"| v1.0    | user     | create a workout                                     | keep track of how many repetitions I would like to do with an exercise |","lastModifiedDate":"2022-03-23"},{"lineNumber":2088,"author":{"gitId":"emilysim00"},"content":"| v1.0    | user     | view workouts                                        | see what are the workouts I can add into my workout plan               |","lastModifiedDate":"2022-04-05"},{"lineNumber":2089,"author":{"gitId":"emilysim00"},"content":"| v1.0    | user     | delete workout                                       | remove any workouts that I will not be doing                           |","lastModifiedDate":"2022-04-05"},{"lineNumber":2090,"author":{"gitId":"emilysim00"},"content":"| v1.0    | user     | update workout                                       | make modification to my workouts after I got stronger                  |","lastModifiedDate":"2022-04-05"},{"lineNumber":2091,"author":{"gitId":"emilysim00"},"content":"| v1.0    | user     | work on the workouts/plans I have created previously | use those workouts in my current workout sessions                      |","lastModifiedDate":"2022-04-05"},{"lineNumber":2092,"author":{"gitId":"emilysim00"},"content":"| v2.0    | user     | create a workout plan                                | perform multiple workouts at a time                                    |","lastModifiedDate":"2022-04-05"},{"lineNumber":2093,"author":{"gitId":"emilysim00"},"content":"| v2.0    | user     | view all plans I have created                        | see what plans I have already created                                  |","lastModifiedDate":"2022-04-05"},{"lineNumber":2094,"author":{"gitId":"emilysim00"},"content":"| v2.0    | user     | be able to delete a plan I have created              | remove the plans that I will not be doing                              |","lastModifiedDate":"2022-04-05"},{"lineNumber":2095,"author":{"gitId":"emilysim00"},"content":"| v2.0    | user     | schedule a plan on a particular day                  | plan my workout routine                                                |","lastModifiedDate":"2022-04-05"},{"lineNumber":2096,"author":{"gitId":"emilysim00"},"content":"| v2.0    | user     | view my schedule                                     | see what plans I have scheduled for the week                           |","lastModifiedDate":"2022-04-05"},{"lineNumber":2097,"author":{"gitId":"emilysim00"},"content":"| v2.0    | user     | remove the plan scheduled on a particular day        | change the workout plan that I want to do                              |","lastModifiedDate":"2022-04-05"},{"lineNumber":2098,"author":{"gitId":"emilysim00"},"content":"| v2.0    | user     | reset my workout plan schedule                       | easily re-schedule the plans that I want to do                         |","lastModifiedDate":"2022-04-05"},{"lineNumber":2099,"author":{"gitId":"emilysim00"},"content":"| v2.0    | user     | search for exercise                                  | find the exercises that I am interested                                |","lastModifiedDate":"2022-04-05"},{"lineNumber":2100,"author":{"gitId":"emilysim00"},"content":"| v2.0    | user     | search for workouts that I have created              | find the workouts that I am interested                                 |","lastModifiedDate":"2022-04-05"},{"lineNumber":2101,"author":{"gitId":"emilysim00"},"content":"| v2.0    | user     | search for plans that I have created                 | find the plans that I am interested                                    |","lastModifiedDate":"2022-04-05"},{"lineNumber":2102,"author":{"gitId":"emilysim00"},"content":"| v2.0    | user     | view the summary of what I can do in the application | know which command to use to perform the actions I want                |","lastModifiedDate":"2022-04-05"},{"lineNumber":2103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":2104,"author":{"gitId":"alanlowzies"},"content":"\u003cbr/\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":2105,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#werkit-developer-guide\"\u003eBack to Top\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":2107,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":2108,"author":{"gitId":"emilysim00"},"content":"#### Data Requirements","lastModifiedDate":"2022-04-07"},{"lineNumber":2109,"author":{"gitId":"emilysim00"},"content":"For `workout /new` and `workout /update` commands, the maximum number of repetitions a user can set is `2,147,483,647`. ","lastModifiedDate":"2022-04-07"},{"lineNumber":2110,"author":{"gitId":"alanlowzies"},"content":"This limit is restricted by the `int` data type. The size of `int` is 4 bytes which is 32 bits, therefore, the maximum value ","lastModifiedDate":"2022-04-09"},{"lineNumber":2111,"author":{"gitId":"alanlowzies"},"content":"for a variable of type `int` will be `2,147,483,647`. If the user set the number of repetitions larger than `2,147,483,647`, ","lastModifiedDate":"2022-04-09"},{"lineNumber":2112,"author":{"gitId":"alanlowzies"},"content":"a `NumberFormatException` will be thrown to indicate that the value entered is not allowed. ","lastModifiedDate":"2022-04-09"},{"lineNumber":2113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":2114,"author":{"gitId":"alanlowzies"},"content":"It is expected that `2,147,483,647` repetitions of any exercise is not achievable by humans. Hence, ","lastModifiedDate":"2022-04-09"},{"lineNumber":2115,"author":{"gitId":"emilysim00"},"content":"using `int` as the data type to hold the value of repetitions is more than sufficient. ","lastModifiedDate":"2022-04-07"},{"lineNumber":2116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":2117,"author":{"gitId":"emilysim00"},"content":"#### Technical/Environment Requirements","lastModifiedDate":"2022-04-07"},{"lineNumber":2118,"author":{"gitId":"alanlowzies"},"content":"This application is developed using Java JDK 11. Hence to run this application, please ensure that you ","lastModifiedDate":"2022-04-09"},{"lineNumber":2119,"author":{"gitId":"alanlowzies"},"content":"are running it on a 64-bit operating system and with a minimum of 8 GB of RAM. ","lastModifiedDate":"2022-04-09"},{"lineNumber":2120,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":2121,"author":{"gitId":"emilysim00"},"content":"#### Performance Requirements ","lastModifiedDate":"2022-04-07"},{"lineNumber":2122,"author":{"gitId":"emilysim00"},"content":"Each command entered by the user should respond within two seconds.","lastModifiedDate":"2022-04-07"},{"lineNumber":2123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":2124,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#werkit-developer-guide\"\u003eBack to Top\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2126,"author":{"gitId":"emilysim00"},"content":"---","lastModifiedDate":"2022-04-07"},{"lineNumber":2127,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":2128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":2129,"author":{"gitId":"Musfirahe0556596"},"content":"* **Repetitions** - The process of repeating an exercise. Often abbreviated to \u0027reps\u0027.","lastModifiedDate":"2022-04-04"},{"lineNumber":2130,"author":{"gitId":"alanlowzies"},"content":"* **Exercise** - A single \u0027unit\u0027 of exercise. A type of exercise.","lastModifiedDate":"2022-03-23"},{"lineNumber":2131,"author":{"gitId":"alanlowzies"},"content":"    * e.g. push up, jumping jacks, sit-ups","lastModifiedDate":"2022-03-23"},{"lineNumber":2132,"author":{"gitId":"alanlowzies"},"content":"* **Workout** - A single \u0027unit\u0027 of exercise with a number of repetitions associated with it.","lastModifiedDate":"2022-03-23"},{"lineNumber":2133,"author":{"gitId":"alanlowzies"},"content":"    * e.g. push up (5 reps), jumping jacks (2 reps), sit-ups (7 reps)","lastModifiedDate":"2022-03-23"},{"lineNumber":2134,"author":{"gitId":"alanlowzies"},"content":"* **Plan** - A set of workouts","lastModifiedDate":"2022-03-23"},{"lineNumber":2135,"author":{"gitId":"alanlowzies"},"content":"* **Schedule** - Consists of Days 1 to 7. Users will add or modify a plan to that particular day","lastModifiedDate":"2022-04-09"},{"lineNumber":2136,"author":{"gitId":"alanlowzies"},"content":"  of their schedule. For instance, the user\u0027s daily schedule can look like this:","lastModifiedDate":"2022-04-09"},{"lineNumber":2137,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":2138,"author":{"gitId":"alanlowzies"},"content":"**Example of Plans**","lastModifiedDate":"2022-04-09"},{"lineNumber":2139,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":2140,"author":{"gitId":"alanlowzies"},"content":"| Plan Name      | Contains                                                                                   |","lastModifiedDate":"2022-03-23"},{"lineNumber":2141,"author":{"gitId":"alanlowzies"},"content":"|----------------|--------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-09"},{"lineNumber":2142,"author":{"gitId":"alanlowzies"},"content":"| grow my biceps | bicep curl (3 reps), push up (10 reps), russian twist (2 reps)                             |","lastModifiedDate":"2022-04-09"},{"lineNumber":2143,"author":{"gitId":"alanlowzies"},"content":"| whole body!    | crunch (10 reps), jumping jack (3 reps), squat (4 reps), pull up (3 reps), burpee (2 reps) |","lastModifiedDate":"2022-04-09"},{"lineNumber":2144,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":2145,"author":{"gitId":"alanlowzies"},"content":"**Example of A Schedule**","lastModifiedDate":"2022-04-09"},{"lineNumber":2146,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":2147,"author":{"gitId":"alanlowzies"},"content":"| Day            | Plan Name                                 |","lastModifiedDate":"2022-03-23"},{"lineNumber":2148,"author":{"gitId":"alanlowzies"},"content":"|----------------|-------------------------------------------|","lastModifiedDate":"2022-04-09"},{"lineNumber":2149,"author":{"gitId":"emilysim00"},"content":"| Monday         | grow my biceps                            |","lastModifiedDate":"2022-04-07"},{"lineNumber":2150,"author":{"gitId":"emilysim00"},"content":"| Tuesday        | rest day                                  |","lastModifiedDate":"2022-04-07"},{"lineNumber":2151,"author":{"gitId":"emilysim00"},"content":"| Wednesday      | whole body!                               |","lastModifiedDate":"2022-04-07"},{"lineNumber":2152,"author":{"gitId":"emilysim00"},"content":"| Thursday       | leg day                                   |","lastModifiedDate":"2022-04-07"},{"lineNumber":2153,"author":{"gitId":"emilysim00"},"content":"| Friday         | grow my biceps                            |","lastModifiedDate":"2022-04-07"},{"lineNumber":2154,"author":{"gitId":"emilysim00"},"content":"| Saturday       | whole body!                               |","lastModifiedDate":"2022-04-07"},{"lineNumber":2155,"author":{"gitId":"emilysim00"},"content":"| Sunday         | rest day                                  |","lastModifiedDate":"2022-04-07"},{"lineNumber":2156,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":2157,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-04-09"},{"lineNumber":2158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":2159,"author":{"gitId":"alanlowzies"},"content":"## Instructions for Manual Testing","lastModifiedDate":"2022-04-08"},{"lineNumber":2160,"author":{"gitId":"Musfirahe0556596"},"content":"This section includes instructions to test WerkIt! manually.","lastModifiedDate":"2022-04-07"},{"lineNumber":2161,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr/\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":2162,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cspan class \u003d \"info box\"\u003e:memo: These test instructions covers the basic testing of the WerkIt! features. ","lastModifiedDate":"2022-04-07"},{"lineNumber":2163,"author":{"gitId":"Musfirahe0556596"},"content":"Testers are welcome to conduct more extensive and rigorous testing.","lastModifiedDate":"2022-04-10"},{"lineNumber":2164,"author":{"gitId":"Musfirahe0556596"},"content":"\u003c/span\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":2165,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":2166,"author":{"gitId":"alanlowzies"},"content":"### Overview","lastModifiedDate":"2022-04-08"},{"lineNumber":2167,"author":{"gitId":"alanlowzies"},"content":"- [Launch and Shutdown](#launch-and-shutdown)","lastModifiedDate":"2022-04-08"},{"lineNumber":2168,"author":{"gitId":"alanlowzies"},"content":"- [Test on Exercise Features](#test-on-exercise-features)","lastModifiedDate":"2022-04-08"},{"lineNumber":2169,"author":{"gitId":"alanlowzies"},"content":"- [Test on Workout Features](#test-on-workout-features)","lastModifiedDate":"2022-04-08"},{"lineNumber":2170,"author":{"gitId":"alanlowzies"},"content":"- [Test on Plan Features](#test-on-plan-features)","lastModifiedDate":"2022-04-08"},{"lineNumber":2171,"author":{"gitId":"alanlowzies"},"content":"- [Test on Schedule Features](#test-on-schedule-features)","lastModifiedDate":"2022-04-08"},{"lineNumber":2172,"author":{"gitId":"alanlowzies"},"content":"- [Test on Search Features](#test-on-search-features)","lastModifiedDate":"2022-04-08"},{"lineNumber":2173,"author":{"gitId":"alanlowzies"},"content":"- [Test on Data Saving](#test-on-data-saving)","lastModifiedDate":"2022-04-08"},{"lineNumber":2174,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2175,"author":{"gitId":"alanlowzies"},"content":"### Launch and Shutdown","lastModifiedDate":"2022-04-08"},{"lineNumber":2176,"author":{"gitId":"Musfirahe0556596"},"content":"#### Initial Launch","lastModifiedDate":"2022-04-07"},{"lineNumber":2177,"author":{"gitId":"Musfirahe0556596"},"content":"1. Download the JAR file of WerkIt! [here](https://github.com/AY2122S2-CS2113T-T09-2/tp/releases) and copy it into an empty folder.","lastModifiedDate":"2022-04-10"},{"lineNumber":2178,"author":{"gitId":"Musfirahe0556596"},"content":"2. Open up your terminal (Windows Terminal for Microsoft users) and navigate to the directory containing the ","lastModifiedDate":"2022-04-07"},{"lineNumber":2179,"author":{"gitId":"Musfirahe0556596"},"content":"`WerkIt.jar` file.","lastModifiedDate":"2022-04-07"},{"lineNumber":2180,"author":{"gitId":"Musfirahe0556596"},"content":"3. On your terminal, type the command `java -jar WerkIt.jar` to launch WerkIt!.","lastModifiedDate":"2022-04-08"},{"lineNumber":2181,"author":{"gitId":"Musfirahe0556596"},"content":"4. Upon successful launch, WerkIt! will display a welcome message and also file loading-related messages on the terminal.","lastModifiedDate":"2022-04-08"},{"lineNumber":2182,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":2183,"author":{"gitId":"Musfirahe0556596"},"content":"#### Shutdown","lastModifiedDate":"2022-04-07"},{"lineNumber":2184,"author":{"gitId":"Musfirahe0556596"},"content":"1. Enter the `exit` command to exit WerkIt!.","lastModifiedDate":"2022-04-10"},{"lineNumber":2185,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":2186,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#instructions-for-manual-testing\"\u003eBack to Manual Testing Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":2187,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2188,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-04-08"},{"lineNumber":2189,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2190,"author":{"gitId":"Musfirahe0556596"},"content":"### Test on Exercise Features","lastModifiedDate":"2022-04-07"},{"lineNumber":2191,"author":{"gitId":"Musfirahe0556596"},"content":"#### Listing All Exercises","lastModifiedDate":"2022-04-07"},{"lineNumber":2192,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":2193,"author":{"gitId":"a1021492980"},"content":"(For details on the usage of this command, please refer to the [user guide](UserGuide.md#show-all-exercises-exercise-list).)","lastModifiedDate":"2022-04-09"},{"lineNumber":2194,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2195,"author":{"gitId":"a1021492980"},"content":"The following are some test cases for you to try:","lastModifiedDate":"2022-04-09"},{"lineNumber":2196,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2197,"author":{"gitId":"Musfirahe0556596"},"content":"**Positive Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2198,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2199,"author":{"gitId":"a1021492980"},"content":"| Test Case                    | Command                 | Expected result                                  |","lastModifiedDate":"2022-04-09"},{"lineNumber":2200,"author":{"gitId":"a1021492980"},"content":"|:-----------------------------|:------------------------|:-------------------------------------------------|","lastModifiedDate":"2022-04-10"},{"lineNumber":2201,"author":{"gitId":"a1021492980"},"content":"| Valid list exercise command. | `exercise        /list` | List down all exercises stored in exercise list. |","lastModifiedDate":"2022-04-10"},{"lineNumber":2202,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2203,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr/\u003e**Negative Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2204,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2205,"author":{"gitId":"a1021492980"},"content":"| Test Case                                    | Command                    | Expected result                                                  |","lastModifiedDate":"2022-04-09"},{"lineNumber":2206,"author":{"gitId":"a1021492980"},"content":"|:---------------------------------------------|:---------------------------|:-----------------------------------------------------------------|","lastModifiedDate":"2022-04-09"},{"lineNumber":2207,"author":{"gitId":"a1021492980"},"content":"| Valid list command with extra arguments.     | `exercise /list extraline` | Error response (invalid user argument), exercises not displayed. |","lastModifiedDate":"2022-04-09"},{"lineNumber":2208,"author":{"gitId":"a1021492980"},"content":"| Extra whitespaces between command arguments. | `exercise         /list`   | Error response (invalid user action), exercise not displayed.    |","lastModifiedDate":"2022-04-09"},{"lineNumber":2209,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2210,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-04-08"},{"lineNumber":2211,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2212,"author":{"gitId":"Musfirahe0556596"},"content":"### Test on Workout Features","lastModifiedDate":"2022-04-07"},{"lineNumber":2213,"author":{"gitId":"Musfirahe0556596"},"content":"#### Creating A New Workout","lastModifiedDate":"2022-04-07"},{"lineNumber":2214,"author":{"gitId":"alanlowzies"},"content":"(For details on the usage of this command, please refer to the [user guide](UserGuide.md#create-a-workout-workout-new).)","lastModifiedDate":"2022-04-08"},{"lineNumber":2215,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2216,"author":{"gitId":"alanlowzies"},"content":"**Prerequisites:** Ensure that your list of exercises is populated with at least one exercise for you to test the","lastModifiedDate":"2022-04-08"},{"lineNumber":2217,"author":{"gitId":"alanlowzies"},"content":"`workout` command on.","lastModifiedDate":"2022-04-08"},{"lineNumber":2218,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2219,"author":{"gitId":"alanlowzies"},"content":"The following are some test cases for you to try:","lastModifiedDate":"2022-04-08"},{"lineNumber":2220,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2221,"author":{"gitId":"Musfirahe0556596"},"content":"**Positive Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2222,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2223,"author":{"gitId":"alanlowzies"},"content":"| Test Case                                                  | Command                               | Expected result                    |","lastModifiedDate":"2022-04-08"},{"lineNumber":2224,"author":{"gitId":"alanlowzies"},"content":"|:-----------------------------------------------------------|:--------------------------------------|:-----------------------------------|","lastModifiedDate":"2022-04-08"},{"lineNumber":2225,"author":{"gitId":"alanlowzies"},"content":"| Valid exercise name and repetition value.                  | `workout /new russian twist /reps 20` | New workout is added successfully. |","lastModifiedDate":"2022-04-08"},{"lineNumber":2226,"author":{"gitId":"alanlowzies"},"content":"| Valid exercise name and highest possible repetition value. | `workout /new sit up /reps 2147483647` | New workout is added successfully. |","lastModifiedDate":"2022-04-08"},{"lineNumber":2227,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2228,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr/\u003e**Negative Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2229,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2230,"author":{"gitId":"alanlowzies"},"content":"| Test Case                                                                              | Command                                       | Expected result                                                |","lastModifiedDate":"2022-04-08"},{"lineNumber":2231,"author":{"gitId":"alanlowzies"},"content":"|:---------------------------------------------------------------------------------------|:----------------------------------------------|:---------------------------------------------------------------|","lastModifiedDate":"2022-04-08"},{"lineNumber":2232,"author":{"gitId":"alanlowzies"},"content":"| Valid exercise name and repetition value that exceeds upper bound for `int` data type. | `workout /new russian twist /reps 2147483648` | Error response (invalid user argument), workout not added.     |","lastModifiedDate":"2022-04-08"},{"lineNumber":2233,"author":{"gitId":"alanlowzies"},"content":"| Valid exercise name and repetition value that is 0.                                    | `workout /new push up /reps 0`                | Error response (reps specified is invalid), workout not added. |","lastModifiedDate":"2022-04-08"},{"lineNumber":2234,"author":{"gitId":"alanlowzies"},"content":"| Exercise name that does not exist in the list of exercises and valid repetition value. | `workout /new somersault /reps 20` | Error response (exercise name does not exist), workout not added. |","lastModifiedDate":"2022-04-08"},{"lineNumber":2235,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2236,"author":{"gitId":"Musfirahe0556596"},"content":"#### Listing All Workouts","lastModifiedDate":"2022-04-07"},{"lineNumber":2237,"author":{"gitId":"emilysim00"},"content":"(For details on the usage of this command, please refer to the [user guide](UserGuide.md#show-all-workouts-workout-list).)","lastModifiedDate":"2022-04-08"},{"lineNumber":2238,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2239,"author":{"gitId":"emilysim00"},"content":"The following are some test cases for you to try:","lastModifiedDate":"2022-04-08"},{"lineNumber":2240,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2241,"author":{"gitId":"Musfirahe0556596"},"content":"**Positive Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2242,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2243,"author":{"gitId":"emilysim00"},"content":"| Test Case                   | Command         | Expected result                                |","lastModifiedDate":"2022-04-08"},{"lineNumber":2244,"author":{"gitId":"emilysim00"},"content":"|:----------------------------|:----------------|:-----------------------------------------------|","lastModifiedDate":"2022-04-08"},{"lineNumber":2245,"author":{"gitId":"emilysim00"},"content":"| Valid list workout command. | `workout /list` | List down all workouts stored in workout list. |","lastModifiedDate":"2022-04-08"},{"lineNumber":2246,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2247,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr/\u003e**Negative Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2248,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2249,"author":{"gitId":"emilysim00"},"content":"| Test Case                                     | Command                   | Expected result                                                 |","lastModifiedDate":"2022-04-08"},{"lineNumber":2250,"author":{"gitId":"emilysim00"},"content":"|:----------------------------------------------|:--------------------------|:----------------------------------------------------------------|","lastModifiedDate":"2022-04-08"},{"lineNumber":2251,"author":{"gitId":"emilysim00"},"content":"| Valid list command with extra arguments.      | `workout /list extraline` | Error response (invalid user argument), workouts not displayed. |","lastModifiedDate":"2022-04-08"},{"lineNumber":2252,"author":{"gitId":"emilysim00"},"content":"| Extra whitespaces between commands arguments. | `workout      /list`      | Error response (invalid user action), workouts not displayed.   |","lastModifiedDate":"2022-04-10"},{"lineNumber":2253,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":2254,"author":{"gitId":"Musfirahe0556596"},"content":"#### Deleting An Existing Workout","lastModifiedDate":"2022-04-07"},{"lineNumber":2255,"author":{"gitId":"Musfirahe0556596"},"content":"(For details on the usage of this command, please refer to the [user guide](UserGuide.md#delete-a-workout-workout-delete).)","lastModifiedDate":"2022-04-08"},{"lineNumber":2256,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2257,"author":{"gitId":"Musfirahe0556596"},"content":"**Prerequisites:** Ensure that your workout list is populated with at least one","lastModifiedDate":"2022-04-08"},{"lineNumber":2258,"author":{"gitId":"Musfirahe0556596"},"content":"workout for you to test the `workout` command on. ","lastModifiedDate":"2022-04-08"},{"lineNumber":2259,"author":{"gitId":"Musfirahe0556596"},"content":"See [this section](#creating-a-new-workout) to view how you can populate your workout list.","lastModifiedDate":"2022-04-07"},{"lineNumber":2260,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2261,"author":{"gitId":"Musfirahe0556596"},"content":"The following are some test cases for you to try:","lastModifiedDate":"2022-04-08"},{"lineNumber":2262,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2263,"author":{"gitId":"Musfirahe0556596"},"content":"**Positive Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2264,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2265,"author":{"gitId":"Musfirahe0556596"},"content":"| Test Case                  | Command             | Expected result                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |","lastModifiedDate":"2022-04-08"},{"lineNumber":2266,"author":{"gitId":"Musfirahe0556596"},"content":"|:---------------------------|:--------------------||","lastModifiedDate":"2022-04-08"},{"lineNumber":2267,"author":{"gitId":"Musfirahe0556596"},"content":"| Valid workout to delete    | `workout /delete 1` | The first workout is deleted from the workout list. Details of the deleted workout will be shown on the terminal.  \u003cbr/\u003e\u003cbr/\u003e Addition: If you have any existing plans containing the deleted workout, that plan will also be removed from the plan list. Subsequently, that plan will be removed from the schedule list if it has been assigned to any of the days in the 7-day workout schedule. Any plans or schedules that are affected by the deletion of this workout will display their delete messages accordingly. |","lastModifiedDate":"2022-04-08"},{"lineNumber":2268,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2269,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr/\u003e**Negative Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2270,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2271,"author":{"gitId":"Musfirahe0556596"},"content":"| Test Case                                                                                                                                                  | Command             | Expected result                         |","lastModifiedDate":"2022-04-08"},{"lineNumber":2272,"author":{"gitId":"Musfirahe0556596"},"content":"|:-----------------------------------------------------------------------------------------------------------------------------------------------------------|:--------------------|:----------------------------------------|","lastModifiedDate":"2022-04-08"},{"lineNumber":2273,"author":{"gitId":"Musfirahe0556596"},"content":"| Missing workout index to delete                                                                                                                            | `workout /delete`   | Error response (Insufficient arguments) |","lastModifiedDate":"2022-04-08"},{"lineNumber":2274,"author":{"gitId":"Musfirahe0556596"},"content":"| Invalid argument supplied. \u003cbr/\u003e\u003cbr/\u003eX could be a word, a negative number or an index that does not fall within the range of workouts in the workout list. | `workout /delete X` | Error response (Invalid user argument)  |","lastModifiedDate":"2022-04-08"},{"lineNumber":2275,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2276,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":2277,"author":{"gitId":"Musfirahe0556596"},"content":"#### Updating An Existing Workout","lastModifiedDate":"2022-04-07"},{"lineNumber":2278,"author":{"gitId":"TianaiYan"},"content":"(For details on the usage of this command, please refer to the [user guide](UserGuide.md#update-a-workout-workout-update).)","lastModifiedDate":"2022-04-09"},{"lineNumber":2279,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":2280,"author":{"gitId":"TianaiYan"},"content":"**Prerequisites:** Ensure that your workout list has at least one","lastModifiedDate":"2022-04-09"},{"lineNumber":2281,"author":{"gitId":"TianaiYan"},"content":"workout for you to test the `workout /update` command.","lastModifiedDate":"2022-04-09"},{"lineNumber":2282,"author":{"gitId":"TianaiYan"},"content":"See [this section](#creating-a-new-workout) to view how you can populate your workout list.","lastModifiedDate":"2022-04-09"},{"lineNumber":2283,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2284,"author":{"gitId":"TianaiYan"},"content":"The following are some test cases for you to try:","lastModifiedDate":"2022-04-09"},{"lineNumber":2285,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2286,"author":{"gitId":"Musfirahe0556596"},"content":"**Positive Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2287,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2288,"author":{"gitId":"TianaiYan"},"content":"| Test Case                                                           | Command                        | Expected result                                                                                                                                                                                                                                                                        |","lastModifiedDate":"2022-04-09"},{"lineNumber":2289,"author":{"gitId":"TianaiYan"},"content":"|:--------------------------------------------------------------------|:-------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-10"},{"lineNumber":2290,"author":{"gitId":"TianaiYan"},"content":"| Valid workout index number and new number of repetitions.           | `workout /update 1 10`         | The first workout in the workout list is updated to 10 reps. Details of the workout after update will be shown on the terminal.  \u003cbr/\u003e\u003cbr/\u003e Addition: If you have any existing plans containing the updated workout, that plan will also be updated to new number of reps.             |","lastModifiedDate":"2022-04-09"},{"lineNumber":2291,"author":{"gitId":"TianaiYan"},"content":"| Valid workout index number and a highest new number of repetitions. | `workout /update 2 2147483647` | The second workout in the workout list is updated to 2,147,483,647 reps. Details of the workout after update will be shown on the terminal.  \u003cbr/\u003e\u003cbr/\u003e Addition: If you have any existing plans containing the updated workout, that plan will also be updated to new number of reps. |","lastModifiedDate":"2022-04-10"},{"lineNumber":2292,"author":{"gitId":"TianaiYan"},"content":"| Valid workout index number and a minimum new number of repetitions. | `workout /update 3 1`          | The third workout in the workout list is updated to 1 rep. Details of the workout after update will be shown on the terminal.  \u003cbr/\u003e\u003cbr/\u003e Addition: If you have any existing plans containing the updated workout, that plan will also be updated to new number of reps.               |","lastModifiedDate":"2022-04-10"},{"lineNumber":2293,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2294,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr/\u003e**Negative Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2295,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2296,"author":{"gitId":"TianaiYan"},"content":"| Test Case                                                                                                                                     | Command                        | Expected result                                                     |","lastModifiedDate":"2022-04-09"},{"lineNumber":2297,"author":{"gitId":"TianaiYan"},"content":"|:----------------------------------------------------------------------------------------------------------------------------------------------|:-------------------------------|:--------------------------------------------------------------------|","lastModifiedDate":"2022-04-10"},{"lineNumber":2298,"author":{"gitId":"TianaiYan"},"content":"| Valid workout index number but new repetition value is smaller than 0.                                                                        | `workout /update 1 0`          | Error response (reps specified is invalid), workout is not updated. |","lastModifiedDate":"2022-04-09"},{"lineNumber":2299,"author":{"gitId":"TianaiYan"},"content":"| Valid workout index number but new repetition value exceeds the upper bound for int data type.                                                | `workout /update 2 2147483648` | Error response (invalid user argument), workout is not updated.     |","lastModifiedDate":"2022-04-09"},{"lineNumber":2300,"author":{"gitId":"TianaiYan"},"content":"| Valid workout index but new repetition value is identical with the repetition value of a workout in the workout list with same exercise name. | `workout /update 3 1`          | Error response (identical workout), workout is not updated.         |","lastModifiedDate":"2022-04-09"},{"lineNumber":2301,"author":{"gitId":"TianaiYan"},"content":"| Workout index number or new repetition value is not an integer.                                                                               | `workout /update a 2`          | Error response (invalid user argument), workout is not updated.     |","lastModifiedDate":"2022-04-09"},{"lineNumber":2302,"author":{"gitId":"TianaiYan"},"content":"| Missing either workout index number or new repetition value.                                                                                  | `workout /update 4`            | Error response (insufficient argument), workout is not updated.     |","lastModifiedDate":"2022-04-09"},{"lineNumber":2303,"author":{"gitId":"TianaiYan"},"content":"| Missing both workout index number and new repetition value.                                                                                   | `workout /update `             | Error response (invalid command).                                   |","lastModifiedDate":"2022-04-09"},{"lineNumber":2304,"author":{"gitId":"TianaiYan"},"content":"| Workout index number is smaller than 1 or greater than the total number of workouts in the workouts list.                                     | `workout /update 0 10`         | Error response (index out of range).                                |","lastModifiedDate":"2022-04-10"},{"lineNumber":2305,"author":{"gitId":"TianaiYan"},"content":"| Extra whitespaces between commands arguments.                                                                                                 | `workout       /update 1 2`    | Error response (invalid user action), workout is not updated.       |","lastModifiedDate":"2022-04-10"},{"lineNumber":2306,"author":{"gitId":"TianaiYan"},"content":"| Extra whitespaces between command parameters.                                                                                                 | `workout /update     1      2` | Error response (invalid user argument), workout is not updated.     |","lastModifiedDate":"2022-04-10"},{"lineNumber":2307,"author":{"gitId":"TianaiYan"},"content":"| Command with extra arguments.                                                                                                                 | `workout /update 1 8 8`        | Error response (invalid user argument), workout is not updated.     |","lastModifiedDate":"2022-04-09"},{"lineNumber":2308,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2309,"author":{"gitId":"TianaiYan"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":2310,"author":{"gitId":"TianaiYan"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#instructions-for-manual-testing\"\u003eBack to Manual Testing Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":2311,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2312,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-04-08"},{"lineNumber":2313,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2314,"author":{"gitId":"Musfirahe0556596"},"content":"### Test on Plan Features","lastModifiedDate":"2022-04-07"},{"lineNumber":2315,"author":{"gitId":"Musfirahe0556596"},"content":"#### Creating A New Plan ","lastModifiedDate":"2022-04-07"},{"lineNumber":2316,"author":{"gitId":"Musfirahe0556596"},"content":"(For details on the usage of this command, please refer to the [user guide](UserGuide.md#create-a-plan-plan-new).)","lastModifiedDate":"2022-04-08"},{"lineNumber":2317,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2318,"author":{"gitId":"Musfirahe0556596"},"content":"**Prerequisites:** Ensure that your workout list is populated with at least one","lastModifiedDate":"2022-04-08"},{"lineNumber":2319,"author":{"gitId":"Musfirahe0556596"},"content":"workout before a new plan can be created as plans contains workout(s).","lastModifiedDate":"2022-04-08"},{"lineNumber":2320,"author":{"gitId":"Musfirahe0556596"},"content":"See [this section](#creating-a-new-workout) to view how you can populate your workout list.","lastModifiedDate":"2022-04-08"},{"lineNumber":2321,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2322,"author":{"gitId":"Musfirahe0556596"},"content":"The following are some test cases for you to try:","lastModifiedDate":"2022-04-08"},{"lineNumber":2323,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2324,"author":{"gitId":"alanlowzies"},"content":"**Positive Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":2325,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2326,"author":{"gitId":"Musfirahe0556596"},"content":"| Test Cases         | Command                                | Expected result                                                                                                              |","lastModifiedDate":"2022-04-08"},{"lineNumber":2327,"author":{"gitId":"Musfirahe0556596"},"content":"|:-------------------|:---------------------------------------|:-----------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-08"},{"lineNumber":2328,"author":{"gitId":"Musfirahe0556596"},"content":"| Valid plan created | `plan /new first plan /workouts 1,1,1` | A new plan called \"first plan\" will be created. This plan contains 3 instances of workout with index 1 in the workout list.  |","lastModifiedDate":"2022-04-08"},{"lineNumber":2329,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2330,"author":{"gitId":"alanlowzies"},"content":"\u003cbr/\u003e**Negative Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":2331,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2332,"author":{"gitId":"Musfirahe0556596"},"content":"| Test Cases                                                                                                                                    | Command                                                             | Expected result                                               |","lastModifiedDate":"2022-04-08"},{"lineNumber":2333,"author":{"gitId":"Musfirahe0556596"},"content":"|:----------------------------------------------------------------------------------------------------------------------------------------------|:--------------------------------------------------------------------|:--------------------------------------------------------------|","lastModifiedDate":"2022-04-08"},{"lineNumber":2334,"author":{"gitId":"Musfirahe0556596"},"content":"| Missing plan name and workouts                                                                                                                | `plan /new`                                                         | Error response (Insufficient arguments)                       |","lastModifiedDate":"2022-04-08"},{"lineNumber":2335,"author":{"gitId":"Musfirahe0556596"},"content":"| Missing workouts                                                                                                                              | `plan /new [plan name]`                                             | Error response (Insufficient arguments)                       |","lastModifiedDate":"2022-04-08"},{"lineNumber":2336,"author":{"gitId":"Musfirahe0556596"},"content":"| Missing plan name                                                                                                                             | `plan /new /workouts 1,1`                                           | Error response (Invalid plan name)                            |","lastModifiedDate":"2022-04-08"},{"lineNumber":2337,"author":{"gitId":"Musfirahe0556596"},"content":"| Invalid workout index supplied (Index 0)                                                                                                      | `plan /new [plan name] /workouts 0,1`                               | Error response (Invalid workout index)                        |","lastModifiedDate":"2022-04-08"},{"lineNumber":2338,"author":{"gitId":"Musfirahe0556596"},"content":"| Reserved plan name \"rest day\" supplied                                                                                                        | `plan /new rest day /workouts 1,1`                                  | Error response (A plan called \"rest day\" cannot be created)   |","lastModifiedDate":"2022-04-08"},{"lineNumber":2339,"author":{"gitId":"Musfirahe0556596"},"content":"| Existing plan name supplied                                                                                                                   | `plan /new [existing plan name] /workouts 1,1`                      | Error response (Duplicate plan name within application)       |","lastModifiedDate":"2022-04-08"},{"lineNumber":2340,"author":{"gitId":"Musfirahe0556596"},"content":"| Plan has same workout order as an existing plan                                                                                               | `plan /new [plan name] /workouts [same order as an existing plan]`  | Error response (Duplicate workout order)                      |","lastModifiedDate":"2022-04-08"},{"lineNumber":2341,"author":{"gitId":"Musfirahe0556596"},"content":"| Invalid workout arguments \u003cbr/\u003e\u003cbr/\u003e X could be a word, a negative number or an index that exceeds the number of workouts in the workout list | `plan /new [plan name] /workouts X`                                 | Error response (Invalid argument)                             |","lastModifiedDate":"2022-04-08"},{"lineNumber":2342,"author":{"gitId":"Musfirahe0556596"},"content":"| Number of workouts exceeds the maximum in a plan                                                                                              | `plan /new [plan name] /workouts [11 ones separated by comma]`      | Error response (Exceeds maximum number of workouts in a plan) |                                                                                         ","lastModifiedDate":"2022-04-08"},{"lineNumber":2343,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":2344,"author":{"gitId":"Musfirahe0556596"},"content":"#### Listing All Plans","lastModifiedDate":"2022-04-07"},{"lineNumber":2345,"author":{"gitId":"Musfirahe0556596"},"content":"(For details on the usage of this command, please refer to the [user guide](UserGuide.md#list-a-plan-plan-list).)","lastModifiedDate":"2022-04-08"},{"lineNumber":2346,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2347,"author":{"gitId":"Musfirahe0556596"},"content":"The following are some test cases for you to try:","lastModifiedDate":"2022-04-08"},{"lineNumber":2348,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2349,"author":{"gitId":"alanlowzies"},"content":"**Positive Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":2350,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2351,"author":{"gitId":"Musfirahe0556596"},"content":"| Test Cases             | Command      | Expected result                                                                                                                                                                  |","lastModifiedDate":"2022-04-08"},{"lineNumber":2352,"author":{"gitId":"Musfirahe0556596"},"content":"|:-----------------------|:-------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-08"},{"lineNumber":2353,"author":{"gitId":"Musfirahe0556596"},"content":"| Valid listing of plans | `plan /list` | a. If plan list is empty, the terminal will display to the user that the plan list is empty. \u003cbr/\u003e\u003cbr/\u003e b. If plan list is not empty, all plan names will be listed to the user. |","lastModifiedDate":"2022-04-08"},{"lineNumber":2354,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2355,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2356,"author":{"gitId":"alanlowzies"},"content":"\u003cbr/\u003e**Negative Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":2357,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2358,"author":{"gitId":"Musfirahe0556596"},"content":"| Test Cases                                                            | Command        | Expected result                             |","lastModifiedDate":"2022-04-08"},{"lineNumber":2359,"author":{"gitId":"Musfirahe0556596"},"content":"|:----------------------------------------------------------------------|:---------------|:--------------------------------------------|","lastModifiedDate":"2022-04-08"},{"lineNumber":2360,"author":{"gitId":"Musfirahe0556596"},"content":"| Additional argument supplied \u003cbr/\u003e\u003cbr/\u003e X could be a word or a number | `plan /list X` | Error response (Additional arguments found) |","lastModifiedDate":"2022-04-08"},{"lineNumber":2361,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2362,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":2363,"author":{"gitId":"Musfirahe0556596"},"content":"#### Listing Workouts In A Plan","lastModifiedDate":"2022-04-07"},{"lineNumber":2364,"author":{"gitId":"TianaiYan"},"content":"(For details on the usage of this command, please refer to the [user guide](UserGuide.md#list-details-of-a-plan-plan-details).)","lastModifiedDate":"2022-04-09"},{"lineNumber":2365,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2366,"author":{"gitId":"TianaiYan"},"content":"**Prerequisites:** Ensure that your plan list has at least one","lastModifiedDate":"2022-04-09"},{"lineNumber":2367,"author":{"gitId":"TianaiYan"},"content":"plan for you to test the `plan /details` command.","lastModifiedDate":"2022-04-09"},{"lineNumber":2368,"author":{"gitId":"TianaiYan"},"content":"See [this section](#creating-a-new-plan) to view how you can populate your plan list.","lastModifiedDate":"2022-04-09"},{"lineNumber":2369,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2370,"author":{"gitId":"TianaiYan"},"content":"The following are some test cases for you to try:","lastModifiedDate":"2022-04-09"},{"lineNumber":2371,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2372,"author":{"gitId":"Musfirahe0556596"},"content":"**Positive Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2373,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2374,"author":{"gitId":"TianaiYan"},"content":"| Test Case               | Command           | Expected result                                         |","lastModifiedDate":"2022-04-09"},{"lineNumber":2375,"author":{"gitId":"TianaiYan"},"content":"|:------------------------|:------------------|:--------------------------------------------------------|","lastModifiedDate":"2022-04-10"},{"lineNumber":2376,"author":{"gitId":"TianaiYan"},"content":"| Valid plan index number | `plan /details 1` | All workouts in plan with index number 1 are displayed. |","lastModifiedDate":"2022-04-10"},{"lineNumber":2377,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2378,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr/\u003e**Negative Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2379,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2380,"author":{"gitId":"TianaiYan"},"content":"| Test Case                                                                                       | Command                 | Expected result                                                             |","lastModifiedDate":"2022-04-09"},{"lineNumber":2381,"author":{"gitId":"TianaiYan"},"content":"|:------------------------------------------------------------------------------------------------|:------------------------|:----------------------------------------------------------------------------|","lastModifiedDate":"2022-04-10"},{"lineNumber":2382,"author":{"gitId":"TianaiYan"},"content":"| Plan index number is smaller than 1 or greater than the total number of plans in the plan list. | `plan /details 0`       | Error response (index out of range), workouts in plan are not displayed.    |","lastModifiedDate":"2022-04-10"},{"lineNumber":2383,"author":{"gitId":"TianaiYan"},"content":"| Command with extra arguments.                                                                   | `plan /details 1 1`     | Error response (invalid user argument), workouts in plan are not displayed. |","lastModifiedDate":"2022-04-10"},{"lineNumber":2384,"author":{"gitId":"TianaiYan"},"content":"| Extra whitespaces between commands arguments.                                                   | `plan       /details 1` | Error response (invalid user action), workouts in plan are not displayed.   |","lastModifiedDate":"2022-04-10"},{"lineNumber":2385,"author":{"gitId":"TianaiYan"},"content":"| Missing plan index number.                                                                      | `plan /details`         | Error response (invalid command).                                           |","lastModifiedDate":"2022-04-09"},{"lineNumber":2386,"author":{"gitId":"TianaiYan"},"content":"| Plan index number is not an integer.                                                            | `plan /details a`       | Error response (invalid user argument).                                     |","lastModifiedDate":"2022-04-09"},{"lineNumber":2387,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2388,"author":{"gitId":"Musfirahe0556596"},"content":"#### Deleting An Existing Plan","lastModifiedDate":"2022-04-07"},{"lineNumber":2389,"author":{"gitId":"TianaiYan"},"content":"(For details on the usage of this command, please refer to the [user guide](UserGuide.md#delete-a-plan-plan-delete).)","lastModifiedDate":"2022-04-09"},{"lineNumber":2390,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":2391,"author":{"gitId":"TianaiYan"},"content":"**Prerequisites:** Ensure that your plan list has at least one","lastModifiedDate":"2022-04-09"},{"lineNumber":2392,"author":{"gitId":"TianaiYan"},"content":"plan for you to test the `plan /delete` command.","lastModifiedDate":"2022-04-09"},{"lineNumber":2393,"author":{"gitId":"TianaiYan"},"content":"See [this section](#creating-a-new-plan) to view how you can populate your plan list.","lastModifiedDate":"2022-04-09"},{"lineNumber":2394,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2395,"author":{"gitId":"TianaiYan"},"content":"The following are some test cases for you to try:","lastModifiedDate":"2022-04-09"},{"lineNumber":2396,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2397,"author":{"gitId":"Musfirahe0556596"},"content":"**Positive Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2398,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":2399,"author":{"gitId":"TianaiYan"},"content":"| Test Case               | Command          | Expected result                      |","lastModifiedDate":"2022-04-09"},{"lineNumber":2400,"author":{"gitId":"TianaiYan"},"content":"|:------------------------|:-----------------|:-------------------------------------|","lastModifiedDate":"2022-04-09"},{"lineNumber":2401,"author":{"gitId":"TianaiYan"},"content":"| Valid plan index number | `plan /delete 1` | Plan with index number 1 is deleted. |","lastModifiedDate":"2022-04-09"},{"lineNumber":2402,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2403,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr/\u003e**Negative Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2404,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2405,"author":{"gitId":"TianaiYan"},"content":"| Test Case                                                                                       | Command                | Expected result                                              |","lastModifiedDate":"2022-04-09"},{"lineNumber":2406,"author":{"gitId":"TianaiYan"},"content":"|:------------------------------------------------------------------------------------------------|:-----------------------|:-------------------------------------------------------------|","lastModifiedDate":"2022-04-10"},{"lineNumber":2407,"author":{"gitId":"TianaiYan"},"content":"| Plan index number is smaller than 1 or greater than the total number of plans in the plan list. | `plan /delete 0`       | Error response (index out of range), plan is not deleted.    |","lastModifiedDate":"2022-04-10"},{"lineNumber":2408,"author":{"gitId":"TianaiYan"},"content":"| Command with extra arguments.                                                                   | `plan /delete 1 1`     | Error response (invalid user argument), plan is not deleted. |","lastModifiedDate":"2022-04-09"},{"lineNumber":2409,"author":{"gitId":"TianaiYan"},"content":"| Extra whitespaces between commands arguments.                                                   | `plan       /delete 1` | Error response (invalid user action), plan is not deleted.   |","lastModifiedDate":"2022-04-10"},{"lineNumber":2410,"author":{"gitId":"TianaiYan"},"content":"| Missing plan index number.                                                                      | `plan /delete`         | Error response (invalid command).                            |","lastModifiedDate":"2022-04-09"},{"lineNumber":2411,"author":{"gitId":"TianaiYan"},"content":"| Plan index number is not an integer.                                                            | `plan /delete a`       | Error response (invalid user argument).                      |","lastModifiedDate":"2022-04-09"},{"lineNumber":2412,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2413,"author":{"gitId":"TianaiYan"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":2414,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#instructions-for-manual-testing\"\u003eBack to Manual Testing Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":2415,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2416,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-04-08"},{"lineNumber":2417,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2418,"author":{"gitId":"Musfirahe0556596"},"content":"### Test on Schedule Features","lastModifiedDate":"2022-04-07"},{"lineNumber":2419,"author":{"gitId":"Musfirahe0556596"},"content":"#### Updating The Schedule","lastModifiedDate":"2022-04-07"},{"lineNumber":2420,"author":{"gitId":"emilysim00"},"content":"(For details on the usage of this command, please refer to the [user guide](UserGuide.md#update-schedule-schedule-update).)","lastModifiedDate":"2022-04-08"},{"lineNumber":2421,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2422,"author":{"gitId":"emilysim00"},"content":"**Prerequisites:** Ensure that you have created some plans, at least one, before you test the","lastModifiedDate":"2022-04-10"},{"lineNumber":2423,"author":{"gitId":"emilysim00"},"content":"`schedule /update` command.","lastModifiedDate":"2022-04-08"},{"lineNumber":2424,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2425,"author":{"gitId":"emilysim00"},"content":"The following are some test cases for you to try:","lastModifiedDate":"2022-04-08"},{"lineNumber":2426,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2427,"author":{"gitId":"emilysim00"},"content":"**Positive Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2428,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2429,"author":{"gitId":"emilysim00"},"content":"| Test Case                      | Command                | Expected result                        |","lastModifiedDate":"2022-04-08"},{"lineNumber":2430,"author":{"gitId":"emilysim00"},"content":"|:-------------------------------|:-----------------------|:---------------------------------------|","lastModifiedDate":"2022-04-10"},{"lineNumber":2431,"author":{"gitId":"emilysim00"},"content":"| Valid update schedule command. | `schedule /update 1 3` | Plan number 3 is scheduled for Monday. |","lastModifiedDate":"2022-04-10"},{"lineNumber":2432,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2433,"author":{"gitId":"emilysim00"},"content":"\u003cbr/\u003e**Negative Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2434,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2435,"author":{"gitId":"emilysim00"},"content":"| Test Case                                     | Command                          | Expected result                                                                         |","lastModifiedDate":"2022-04-08"},{"lineNumber":2436,"author":{"gitId":"emilysim00"},"content":"|:----------------------------------------------|:---------------------------------|:----------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-10"},{"lineNumber":2437,"author":{"gitId":"emilysim00"},"content":"| Update schedule with extra arguments.         | `schedule /update 1 3 extraline` | Error response (too many arguments entered), plan is not added/updated to the schedule. |","lastModifiedDate":"2022-04-08"},{"lineNumber":2438,"author":{"gitId":"emilysim00"},"content":"| Update schedule with missing plan number.     | `schedule /update 1`             | Error response (too few arguments entered), plan is not added/updated to the schedule.  |","lastModifiedDate":"2022-04-08"},{"lineNumber":2439,"author":{"gitId":"emilysim00"},"content":"| Schedule a plan on an invalid day.            | `schedule /update 8 1`           | Error response (invalid day number), plan is not added/updated to the schedule.         |","lastModifiedDate":"2022-04-08"},{"lineNumber":2440,"author":{"gitId":"emilysim00"},"content":"| Schedule an invalid plan.                     | `schedule /update 2147483646`    | Error response (invalid plan number), plan is not added/updated to the schedule.        |","lastModifiedDate":"2022-04-10"},{"lineNumber":2441,"author":{"gitId":"emilysim00"},"content":"| Extra whitespaces between commands arguments. | `schedule     /update 1 2`       | Error response (invalid user action), plan is not added/updated to the schedule.        |","lastModifiedDate":"2022-04-10"},{"lineNumber":2442,"author":{"gitId":"emilysim00"},"content":"| Extra whitespaces between command parameters. | `schedule /update   1   2`       | Error response (invalid user action), plan is not added/updated to the schedule.        |","lastModifiedDate":"2022-04-10"},{"lineNumber":2443,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2444,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2445,"author":{"gitId":"Musfirahe0556596"},"content":"#### Viewing The Schedule","lastModifiedDate":"2022-04-07"},{"lineNumber":2446,"author":{"gitId":"emilysim00"},"content":"(For details on the usage of this command, please refer to the [user guide](UserGuide.md#view-schedule-schedule-list).)","lastModifiedDate":"2022-04-08"},{"lineNumber":2447,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2448,"author":{"gitId":"emilysim00"},"content":"The following are some test cases for you to try:","lastModifiedDate":"2022-04-08"},{"lineNumber":2449,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2450,"author":{"gitId":"emilysim00"},"content":"**Positive Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2451,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2452,"author":{"gitId":"emilysim00"},"content":"| Test Case                    | Command          | Expected result                                      |","lastModifiedDate":"2022-04-08"},{"lineNumber":2453,"author":{"gitId":"emilysim00"},"content":"|:-----------------------------|:-----------------|:-----------------------------------------------------|","lastModifiedDate":"2022-04-08"},{"lineNumber":2454,"author":{"gitId":"emilysim00"},"content":"| Valid list schedule command. | `schedule /list` | List down all plans scheduled in the 7-day schedule. |","lastModifiedDate":"2022-04-08"},{"lineNumber":2455,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2456,"author":{"gitId":"emilysim00"},"content":"\u003cbr/\u003e**Negative Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2457,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2458,"author":{"gitId":"emilysim00"},"content":"| Test Case                                     | Command                    | Expected result                                                 |","lastModifiedDate":"2022-04-08"},{"lineNumber":2459,"author":{"gitId":"emilysim00"},"content":"|:----------------------------------------------|:---------------------------|:----------------------------------------------------------------|","lastModifiedDate":"2022-04-08"},{"lineNumber":2460,"author":{"gitId":"emilysim00"},"content":"| List schedule with extra arguments.           | `schedule /list extraline` | Error response (wrong command entered), schedule not displayed. |","lastModifiedDate":"2022-04-08"},{"lineNumber":2461,"author":{"gitId":"emilysim00"},"content":"| Extra whitespaces between commands arguments. | `schedule     /list`       | Error response (invalid user action), schedule not displayed.   |","lastModifiedDate":"2022-04-10"},{"lineNumber":2462,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2463,"author":{"gitId":"Musfirahe0556596"},"content":"#### Clearing Plan Schedule For A Day","lastModifiedDate":"2022-04-07"},{"lineNumber":2464,"author":{"gitId":"emilysim00"},"content":"(For details on the usage of this command, please refer to the [user guide](UserGuide.md#clear-schedule-for-a-day-schedule-clear).)","lastModifiedDate":"2022-04-08"},{"lineNumber":2465,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2466,"author":{"gitId":"emilysim00"},"content":"The following are some test cases for you to try:","lastModifiedDate":"2022-04-08"},{"lineNumber":2467,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2468,"author":{"gitId":"emilysim00"},"content":"**Positive Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2469,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2470,"author":{"gitId":"emilysim00"},"content":"| Test Case                      | Command             | Expected result                                                                    |","lastModifiedDate":"2022-04-08"},{"lineNumber":2471,"author":{"gitId":"emilysim00"},"content":"|:-------------------------------|:--------------------|:-----------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-10"},{"lineNumber":2472,"author":{"gitId":"emilysim00"},"content":"| Valid clear scheduled command. | `schedule /clear 1` | If there is a plan scheduled for Monday, it will be cleared and set to `rest day`. |","lastModifiedDate":"2022-04-10"},{"lineNumber":2473,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2474,"author":{"gitId":"emilysim00"},"content":"\u003cbr/\u003e**Negative Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2475,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2476,"author":{"gitId":"emilysim00"},"content":"| Test Case                                     | Command                       | Expected result                                                                 |","lastModifiedDate":"2022-04-08"},{"lineNumber":2477,"author":{"gitId":"emilysim00"},"content":"|:----------------------------------------------|:------------------------------|:--------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-10"},{"lineNumber":2478,"author":{"gitId":"emilysim00"},"content":"| Day Number exceed the range of 1 to 7.        | `schedule /clear 9`           | Error response (invalid day number), no plan in the schedule is being cleared.  |","lastModifiedDate":"2022-04-08"},{"lineNumber":2479,"author":{"gitId":"emilysim00"},"content":"| Command with extra arguments.                 | `schedule /clear 1 extraline` | Error response (invalid command), no plan in the schedule is being cleared.     |","lastModifiedDate":"2022-04-10"},{"lineNumber":2480,"author":{"gitId":"emilysim00"},"content":"| Extra whitespaces between commands arguments. | `schedule     /clear 1`       | Error response (invalid user action), no plan in the schedule is being cleared. |","lastModifiedDate":"2022-04-10"},{"lineNumber":2481,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2482,"author":{"gitId":"Musfirahe0556596"},"content":"#### Clearing All Plans In The Schedule","lastModifiedDate":"2022-04-07"},{"lineNumber":2483,"author":{"gitId":"emilysim00"},"content":"(For details on the usage of this command, please refer to the [user guide](UserGuide.md#clear-schedule-for-the-week-schedule-clearall).)","lastModifiedDate":"2022-04-08"},{"lineNumber":2484,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2485,"author":{"gitId":"emilysim00"},"content":"The following are some test cases for you to try:","lastModifiedDate":"2022-04-08"},{"lineNumber":2486,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2487,"author":{"gitId":"emilysim00"},"content":"**Positive Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2488,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2489,"author":{"gitId":"emilysim00"},"content":"| Test Case                         | Command              | Expected result                              |","lastModifiedDate":"2022-04-08"},{"lineNumber":2490,"author":{"gitId":"emilysim00"},"content":"|:----------------------------------|:---------------------|:---------------------------------------------|","lastModifiedDate":"2022-04-10"},{"lineNumber":2491,"author":{"gitId":"emilysim00"},"content":"| Valid clear all schedule command. | `schedule /clearall` | All plans added to the schedule are removed. |","lastModifiedDate":"2022-04-10"},{"lineNumber":2492,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2493,"author":{"gitId":"emilysim00"},"content":"\u003cbr/\u003e**Negative Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2494,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2495,"author":{"gitId":"emilysim00"},"content":"| Test Case                                     | Command                        | Expected result                                                                                 |","lastModifiedDate":"2022-04-08"},{"lineNumber":2496,"author":{"gitId":"emilysim00"},"content":"|:----------------------------------------------|:-------------------------------|:------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-10"},{"lineNumber":2497,"author":{"gitId":"emilysim00"},"content":"| Command with extra arguments.                 | `schedule /clearall extraline` | Error response (wrong command entered), plans not removed from schedule and schedule not reset. |","lastModifiedDate":"2022-04-10"},{"lineNumber":2498,"author":{"gitId":"emilysim00"},"content":"| Extra whitespaces between commands arguments. | `schedule     /clearall`       | Error response (invalid user action), plans not removed from schedule and schedule not reset.   |","lastModifiedDate":"2022-04-10"},{"lineNumber":2499,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":2500,"author":{"gitId":"alanlowzies"},"content":"\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2501,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#instructions-for-manual-testing\"\u003eBack to Manual Testing Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":2502,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2503,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-04-08"},{"lineNumber":2504,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":2505,"author":{"gitId":"Musfirahe0556596"},"content":"### Test on Search Features","lastModifiedDate":"2022-04-07"},{"lineNumber":2506,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2507,"author":{"gitId":"Musfirahe0556596"},"content":"#### Searching For Exercise","lastModifiedDate":"2022-04-07"},{"lineNumber":2508,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2509,"author":{"gitId":"a1021492980"},"content":"(For details on the usage of this command, please refer to the [user guide](UserGuide.md#search-for-exercise-search-exercise).)","lastModifiedDate":"2022-04-09"},{"lineNumber":2510,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2511,"author":{"gitId":"a1021492980"},"content":"The following are some test cases for you to try:","lastModifiedDate":"2022-04-09"},{"lineNumber":2512,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2513,"author":{"gitId":"Musfirahe0556596"},"content":"**Positive Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2514,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2515,"author":{"gitId":"a1021492980"},"content":"| Test Case                                                                                                 | Command                             | Expected result                                         |","lastModifiedDate":"2022-04-09"},{"lineNumber":2516,"author":{"gitId":"a1021492980"},"content":"|:----------------------------------------------------------------------------------------------------------|:------------------------------------|:--------------------------------------------------------|","lastModifiedDate":"2022-04-09"},{"lineNumber":2517,"author":{"gitId":"a1021492980"},"content":"| Valid searching for exercise command.                                                                     | `search /exercise`                  | All exercise names containing whitespace will be shown. |","lastModifiedDate":"2022-04-09"},{"lineNumber":2518,"author":{"gitId":"a1021492980"},"content":"| Valid searching for exercise command.                                                                     | `search /exercise a`                | All exercise names containing \u0027a\u0027 will be shown.        |","lastModifiedDate":"2022-04-09"},{"lineNumber":2519,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2520,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr/\u003e**Negative Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2521,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2522,"author":{"gitId":"a1021492980"},"content":"| Test Case                                                             | Command                      | Expected result                                                                                 |","lastModifiedDate":"2022-04-09"},{"lineNumber":2523,"author":{"gitId":"a1021492980"},"content":"|:----------------------------------------------------------------------|:-----------------------------|:------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-10"},{"lineNumber":2524,"author":{"gitId":"a1021492980"},"content":"| Extra whitespaces between command arguments `search` and `/exercise`. | `search         /exercise a` | Error response (invalid user action), no result is retrieved.                                   |","lastModifiedDate":"2022-04-10"},{"lineNumber":2525,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2526,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2527,"author":{"gitId":"Musfirahe0556596"},"content":"#### Searching For Workout","lastModifiedDate":"2022-04-07"},{"lineNumber":2528,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2529,"author":{"gitId":"a1021492980"},"content":"(For details on the usage of this command, please refer to the [user guide](UserGuide.md#search-for-workout-search-workout).)","lastModifiedDate":"2022-04-09"},{"lineNumber":2530,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2531,"author":{"gitId":"a1021492980"},"content":"The following are some test cases for you to try:","lastModifiedDate":"2022-04-09"},{"lineNumber":2532,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2533,"author":{"gitId":"Musfirahe0556596"},"content":"**Positive Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2534,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2535,"author":{"gitId":"a1021492980"},"content":"| Test Case                                                                                                                 | Command                            | Expected result                                                      |","lastModifiedDate":"2022-04-09"},{"lineNumber":2536,"author":{"gitId":"a1021492980"},"content":"|:--------------------------------------------------------------------------------------------------------------------------|:-----------------------------------|:---------------------------------------------------------------------|","lastModifiedDate":"2022-04-09"},{"lineNumber":2537,"author":{"gitId":"a1021492980"},"content":"| Valid searching for workout command.                                                                                      | `search /workout`                  | All workouts with exercise name containing whitespace will be shown. |","lastModifiedDate":"2022-04-09"},{"lineNumber":2538,"author":{"gitId":"a1021492980"},"content":"| Valid searching for workout command.                                                                                      | `search /workout 15`               | All workouts with repetitions equal to 15 will be shown.             |","lastModifiedDate":"2022-04-09"},{"lineNumber":2539,"author":{"gitId":"a1021492980"},"content":"| Valid searching for workout command.                                                                                      | `search /workout a`                | All workouts with exercise name containing \u0027a\u0027 will be shown.        |","lastModifiedDate":"2022-04-09"},{"lineNumber":2540,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2541,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2542,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr/\u003e**Negative Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2543,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2544,"author":{"gitId":"a1021492980"},"content":"| Test Case                                                            | Command                      | Expected result                                                                                 |","lastModifiedDate":"2022-04-09"},{"lineNumber":2545,"author":{"gitId":"a1021492980"},"content":"|:---------------------------------------------------------------------|:-----------------------------|:------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-10"},{"lineNumber":2546,"author":{"gitId":"a1021492980"},"content":"| Extra whitespaces between command arguments `search` and `/workout`. | `search         /exercise a` | Error response (invalid user action), no result is retrieved.                                   |","lastModifiedDate":"2022-04-10"},{"lineNumber":2547,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2548,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2549,"author":{"gitId":"Musfirahe0556596"},"content":"#### Searching For Plan","lastModifiedDate":"2022-04-07"},{"lineNumber":2550,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2551,"author":{"gitId":"a1021492980"},"content":"(For details on the usage of this command, please refer to the [user guide](UserGuide.md#search-for-plan-search-plan).)","lastModifiedDate":"2022-04-09"},{"lineNumber":2552,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2553,"author":{"gitId":"a1021492980"},"content":"The following are some test cases for you to try:","lastModifiedDate":"2022-04-09"},{"lineNumber":2554,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2555,"author":{"gitId":"Musfirahe0556596"},"content":"**Positive Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2556,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2557,"author":{"gitId":"a1021492980"},"content":"| Test Case                                                                                     | Command                         | Expected result                                          |","lastModifiedDate":"2022-04-09"},{"lineNumber":2558,"author":{"gitId":"a1021492980"},"content":"|:----------------------------------------------------------------------------------------------|:--------------------------------|:---------------------------------------------------------|","lastModifiedDate":"2022-04-09"},{"lineNumber":2559,"author":{"gitId":"a1021492980"},"content":"| Valid searching for plan command.                                                             | `search /plan`                  | All plans with name containing whitespace will be shown. |","lastModifiedDate":"2022-04-09"},{"lineNumber":2560,"author":{"gitId":"a1021492980"},"content":"| Valid searching for plan command.                                                             | `search /plan a`                | All plans with name containing \u0027a\u0027 will be shown.        |","lastModifiedDate":"2022-04-09"},{"lineNumber":2561,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2562,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2563,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr/\u003e**Negative Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2564,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2565,"author":{"gitId":"a1021492980"},"content":"| Test Case                                                         | Command                           | Expected result                                                                                 |","lastModifiedDate":"2022-04-09"},{"lineNumber":2566,"author":{"gitId":"a1021492980"},"content":"|:------------------------------------------------------------------|:----------------------------------|:------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-10"},{"lineNumber":2567,"author":{"gitId":"a1021492980"},"content":"| Extra whitespaces between command arguments `search` and `/plan`. | `search              /exercise a` | Error response (invalid user action), no result is retrieved.                                   |","lastModifiedDate":"2022-04-10"},{"lineNumber":2568,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2569,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2570,"author":{"gitId":"Musfirahe0556596"},"content":"#### Searching For All","lastModifiedDate":"2022-04-07"},{"lineNumber":2571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":2572,"author":{"gitId":"a1021492980"},"content":"(For details on the usage of this command, please refer to the [user guide](UserGuide.md#search-for-all-search-all).)","lastModifiedDate":"2022-04-09"},{"lineNumber":2573,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2574,"author":{"gitId":"a1021492980"},"content":"The following are some test cases for you to try:","lastModifiedDate":"2022-04-09"},{"lineNumber":2575,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2576,"author":{"gitId":"Musfirahe0556596"},"content":"**Positive Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2577,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2578,"author":{"gitId":"a1021492980"},"content":"| Test Case                                                          | Command                        | Expected result                                                                                                               |","lastModifiedDate":"2022-04-09"},{"lineNumber":2579,"author":{"gitId":"emilysim00"},"content":"|:-------------------------------------------------------------------|:-------------------------------|:------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-10"},{"lineNumber":2580,"author":{"gitId":"a1021492980"},"content":"| Valid searching for all command.                                   | `search /all`                  | All exercises, workouts and plans with name containing whitespace will be shown.                                              |","lastModifiedDate":"2022-04-09"},{"lineNumber":2581,"author":{"gitId":"a1021492980"},"content":"| Valid searching for all command.                                   | `search /all a`                | All exercises, workouts and plans with name containing \u0027a\u0027 will be shown.                                                     |","lastModifiedDate":"2022-04-09"},{"lineNumber":2582,"author":{"gitId":"a1021492980"},"content":"| Valid searching for all command.                                   | `search /all 15`               | All exercises and plans with name containing \u002715\u0027 will be shown, and all workouts with repetitions equal to 15 will be shown. |","lastModifiedDate":"2022-04-09"},{"lineNumber":2583,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2584,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2585,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr/\u003e**Negative Test Cases**\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2586,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2587,"author":{"gitId":"a1021492980"},"content":"| Test Case                                                        | Command                 | Expected result                                                                                 |","lastModifiedDate":"2022-04-09"},{"lineNumber":2588,"author":{"gitId":"a1021492980"},"content":"|:-----------------------------------------------------------------|:------------------------|:------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-10"},{"lineNumber":2589,"author":{"gitId":"a1021492980"},"content":"| Extra whitespaces between command arguments `search` and `/all`. | `search         /all a` | Error response (invalid user action), no result is retrieved.                                   |","lastModifiedDate":"2022-04-10"},{"lineNumber":2590,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2591,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":2592,"author":{"gitId":"alanlowzies"},"content":"\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2593,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#instructions-for-manual-testing\"\u003eBack to Manual Testing Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":2594,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2595,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-04-08"},{"lineNumber":2596,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2597,"author":{"gitId":"Musfirahe0556596"},"content":"### Test on Data Saving ","lastModifiedDate":"2022-04-07"},{"lineNumber":2598,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":2599,"author":{"gitId":"alanlowzies"},"content":"The following are some test cases for you to try:","lastModifiedDate":"2022-04-08"},{"lineNumber":2600,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2601,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"info box\"\u003e:memo: **Important!** These test cases are done on the following assumptions:\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2602,"author":{"gitId":"alanlowzies"},"content":"**(a)** Resource files `workouts.txt`, `plans.txt`, and `schedule.txt` are empty.\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2603,"author":{"gitId":"alanlowzies"},"content":"**(b)** `exercise.txt` is populated with its default exercises.\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2604,"author":{"gitId":"alanlowzies"},"content":"If you have some data written into these files or modified `exercises.txt`, please do the following","lastModifiedDate":"2022-04-08"},{"lineNumber":2605,"author":{"gitId":"alanlowzies"},"content":"prior to conducting the test cases mentioned below:\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2606,"author":{"gitId":"alanlowzies"},"content":"**(1)** If WerkIt! is running, exit the application.\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2607,"author":{"gitId":"alanlowzies"},"content":"**(2)** Backup your existing `werkItResources` directory.\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2608,"author":{"gitId":"alanlowzies"},"content":"**(3)** Delete the `werkItResources` directory (not your backup!)\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2609,"author":{"gitId":"alanlowzies"},"content":"**(4)** Start WerkIt! to generate a fresh set of `werkItResources` directory and its resource files.","lastModifiedDate":"2022-04-10"},{"lineNumber":2610,"author":{"gitId":"alanlowzies"},"content":"\u003c/span\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":2611,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2612,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"warning box\"\u003e:warning: Please follow the test cases and its commands in sequence as subsequent test cases ","lastModifiedDate":"2022-04-08"},{"lineNumber":2613,"author":{"gitId":"alanlowzies"},"content":"rely on former test cases.\u003c/span\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":2614,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2615,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":2616,"author":{"gitId":"alanlowzies"},"content":"| Test Case                                                                                      | Command                                                                                                                                | Expected result                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |","lastModifiedDate":"2022-04-08"},{"lineNumber":2617,"author":{"gitId":"alanlowzies"},"content":"|:-----------------------------------------------------------------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-10"},{"lineNumber":2618,"author":{"gitId":"alanlowzies"},"content":"| 1. Write new data into `workouts.txt`.                                                         | (a) `workout /new sit up /reps 10`\u003cbr/\u003e\u003cbr/\u003e(b) `workout /new push up /reps 20`\u003cbr/\u003e\u003cbr/\u003e(c)`workout /new russian twist /reps 30`      | The following three lines are added to `workouts.txt`:\u003cbr/\u003e\u003cbr/\u003e![workouts.txt](images/workoutsTxtNewWorkouts.png)                                                                                                                                                                                                                                                                                                                                                                                             |","lastModifiedDate":"2022-04-08"},{"lineNumber":2619,"author":{"gitId":"alanlowzies"},"content":"| 2. Update data in `workouts.txt`.                                                              | `workout /update 2 40`                                                                                                                 | Workout (push up, 20 reps) is updated to 40 reps. `workouts.txt` should look something like this:\u003cbr/\u003e\u003cbr/\u003e![workouts.txt Update Workout](images/workoutsTxtUpdateWorkout.png)                                                                                                                                                                                                                                                                                                                                 |","lastModifiedDate":"2022-04-08"},{"lineNumber":2620,"author":{"gitId":"alanlowzies"},"content":"| 3. Write new data into `plans.txt`.                                                            | (a) `plan /new plan a  /workouts 1, 2`\u003cbr/\u003e\u003cbr/\u003e(b) `plan /new plan b /workouts 2, 3`\u003cbr/\u003e\u003cbr/\u003e(c) `plan /new plan c /workouts 1, 3`   | The following lines are added to `plans.txt`:\u003cbr/\u003e\u003cbr/\u003e![plans.txt](images/plansTxtNewPlans.png)                                                                                                                                                                                                                                                                                                                                                                                                               |","lastModifiedDate":"2022-04-08"},{"lineNumber":2621,"author":{"gitId":"alanlowzies"},"content":"| 4. Write new data into `schedule.txt`.                                                         | (a) `schedule /update 1 1`\u003cbr/\u003e\u003cbr/\u003e(b) `schedule /update 3 2`\u003cbr/\u003e\u003cbr/\u003e(c) `schedule /update 5 3`\u003cbr/\u003e\u003cbr/\u003e(d) `schedule /update 6 3` | The following lines are added to `schedule.txt`:\u003cbr/\u003e\u003cbr/\u003e![schedule.txt](images/scheduleTxtNewDays.png)                                                                                                                                                                                                                                                                                                                                                                                                       |","lastModifiedDate":"2022-04-08"},{"lineNumber":2622,"author":{"gitId":"alanlowzies"},"content":"| 5. Delete data from `schedule.txt`.                                                            | `schedule /clear 5` | `schedule.txt` will be updated the following:\u003cbr/\u003e\u003cbr/\u003e![schedule.txt day deleted](images/scheduleTxtDeleteDay.png)                                                                                                                                                                                                                                                                                                                                                                                            |","lastModifiedDate":"2022-04-08"},{"lineNumber":2623,"author":{"gitId":"alanlowzies"},"content":"| 6. Delete data from `plans.txt` and `schedule.txt` is updated accordingly.                     | `plans /delete 3` | `plans.txt` will be updated to the following:\u003cbr/\u003e\u003cbr/\u003e![plans.txt delete plan](images/plansTxtDeletePlan.png)\u003cbr/\u003e\u003cbr/\u003e`schedule.txt` will also be updated as one of the days has the deleted plan:\u003cbr/\u003e\u003cbr/\u003e![schedule.txt plan delete](images/scheduleTxtPlanDeleteCascade.png)                                                                                                                                                                                                                             |","lastModifiedDate":"2022-04-08"},{"lineNumber":2624,"author":{"gitId":"alanlowzies"},"content":"| 7. Delete workout from `workouts.txt`. `plans.txt` and `schedule.txt` are updated accordingly. | `workout /delete 1` | `workout.txt` will be updated to the following:\u003cbr/\u003e\u003cbr/\u003e![workout.txt workout delete](images/workoutsTxtDeleteWorkout.png)\u003cbr/\u003e\u003cbr/\u003e`plans.txt` will also be updated as some plans with the deleted workout are affected:\u003cbr/\u003e\u003cbr/\u003e![plans.txt workout delete cascasde](images/plansTxtWorkoutDeleteCascade.png)\u003cbr/\u003e\u003cbr/\u003eLikewise, `schedule.txt` is also updated as a plan assigned to a day has been affected:\u003cbr/\u003e\u003cbr/\u003e![schedule.txt workout delete cascade](images/scheduleTxtWorkoutDeleteCascade.png) |                                    ","lastModifiedDate":"2022-04-10"},{"lineNumber":2625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":2627,"author":{"gitId":"TianaiYan"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":2628,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#instructions-for-manual-testing\"\u003eBack to Manual Testing Overview\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":2629,"author":{"gitId":"alanlowzies"},"content":"\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":2630,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#werkit-developer-guide\"\u003eBack to Top\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"emilysim00":371,"Musfirahe0556596":482,"alanlowzies":1143,"TianaiYan":326,"-":35,"a1021492980":273}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"# WerkIt!","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"WerkIt! is an application for managing workout routines,","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"optimized for use via a Command Line Interface (CLI).","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"Musfirahe0556596":3,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"# WerkIt! User Guide","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"WerkIt! is an application for managing workout routines,","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"optimized for use via a Command Line Interface (CLI). ","lastModifiedDate":"2022-04-10"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"This application is targeted to those who may have","lastModifiedDate":"2022-04-10"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"trouble managing their workout routines. With this application,","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"it helps to keep track of your workouts, plans and workout routines","lastModifiedDate":"2022-04-10"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"for a week in a simple and concise manner.","lastModifiedDate":"2022-04-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"emilysim00"},"content":"You will be able to create, view, update and delete the workouts and plans you have created and store them in the application.","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"You will also be able to schedule your workout plans for a week (7 days). ","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"This user guide is designed to help you understand what WerkIt! can offer you. You can also follow this guide closely ","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"to understand how WerkIt! works, such as knowing the commands to perform the different functions ","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"that WerkIt! has. ","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"### Terminology ","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"Please take note of these few terms. It is explained as below:","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"| Term       | Description                                                                                                              |","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"|------------|--------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-04"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"| Exercise   | A single unit of exercise. \u003cbr/\u003eExample: \"push up\", \"pull up\", \"sit up\"                                                  |","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"| Repetition | The process of repeating an exercise. Often abbreviated to \u0027reps\u0027.                                                       |","lastModifiedDate":"2022-04-04"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"| Workout    | An exercise with a quantity/number of repetitions. \u003cbr/\u003eExample: \"5 push up\", \"5 pull up\", \"10 sit up\"                   |","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"| Plan       | A set of workouts. \u003cbr/\u003eExample: A plan named \"arms\" will contains \"5 push up, 5 pull up\"                                |","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"| Schedule   | Plan schedule for a day. The schedule is set for a week. \u003cbr/\u003eExample: \"arms\" plan will be added to Monday in the schedule |","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"### Notations Used In This Guide","lastModifiedDate":"2022-04-03"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"When reading this document, there are several icons that you may encounter.","lastModifiedDate":"2022-04-03"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"Below are the icons and their meanings:","lastModifiedDate":"2022-04-03"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box warning\"\u003e:warning: **Warning**: Information that you may want to pay attention to in order to prevent","lastModifiedDate":"2022-04-04"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"possible issues from arising when using the application.\u003c/span\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: **Note**: Additional information that may be useful for you.\u003c/span\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"Musfirahe0556596"},"content":"## Table of Contents","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"Musfirahe0556596"},"content":"* [Quick Start Guide](#quick-start-guide)","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"    * [Recommended Terminals](#recommended-terminals) ","lastModifiedDate":"2022-04-03"},{"lineNumber":45,"author":{"gitId":"Musfirahe0556596"},"content":"* [Features](#features)","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"emilysim00"},"content":"  * [Application Flow](#features) ","lastModifiedDate":"2022-04-04"},{"lineNumber":47,"author":{"gitId":"emilysim00"},"content":"  * [Finding Your Way Around The Application](#finding-your-way-around-the-application)","lastModifiedDate":"2022-04-04"},{"lineNumber":48,"author":{"gitId":"emilysim00"},"content":"  * [Exercise And Workout Features](#exercise-and-workout-features)","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"emilysim00"},"content":"    * [Show All Exercises: `exercise /list`](#show-all-exercises-exercise-list)","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"emilysim00"},"content":"    * [Create A Workout: `workout /new`](#create-a-workout-workout-new)","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"emilysim00"},"content":"    * [Show All Workouts: `workout /list`](#show-all-workouts-workout-list)","lastModifiedDate":"2022-04-02"},{"lineNumber":52,"author":{"gitId":"emilysim00"},"content":"    * [Delete A Workout: `workout /delete`](#delete-a-workout-workout-delete)","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"emilysim00"},"content":"    * [Update A Workout: `workout /update`](#update-a-workout-workout-update)","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"emilysim00"},"content":"  * [Plan Features](#plan-features)","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"emilysim00"},"content":"    * [Create A Plan: `plan /new`](#create-a-plan-plan-new)","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"Musfirahe0556596"},"content":"    * [List A Plan: `plan /list`](#list-a-plan-plan-list)","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"TianaiYan"},"content":"    * [List Details Of A Plan: `plan /details`](#list-details-of-a-plan-plan-details)","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"TianaiYan"},"content":"    * [Delete A Plan: `plan /delete`](#delete-a-plan-plan-delete)","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"emilysim00"},"content":"  * [Schedule Features](#schedule-features)","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"Musfirahe0556596"},"content":"    * [Update Schedule: `schedule /update`](#update-schedule-schedule-update)","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"Musfirahe0556596"},"content":"    * [View Schedule: `schedule /list`](#view-schedule-schedule-list)","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"Musfirahe0556596"},"content":"    * [Clear Schedule For A Day: `schedule /clear`](#clear-schedule-for-a-day-schedule-clear)","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"Musfirahe0556596"},"content":"    * [Clear Schedule For The Week: `schedule /clearall`](#clear-schedule-for-the-week-schedule-clearall)","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"emilysim00"},"content":"  * [Search Features](#search-features)","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"a1021492980"},"content":"    * [Search For Exercise: `search /exercise`](#search-for-exercise-search-exercise)","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"a1021492980"},"content":"    * [Search For Workout: `search /workout`](#search-for-workout-search-workout)","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"a1021492980"},"content":"    * [Search For Plan: `search /plan`](#search-for-plan-search-plan)","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"a1021492980"},"content":"    * [Search For All: `search /all`](#search-for-all-search-all)","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"Musfirahe0556596"},"content":"  * [View Help: `help`](#view-help-help)","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"Musfirahe0556596"},"content":"* [WerkIt!\u0027s Local Storage Information](#werkits-local-storage-information)","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"Musfirahe0556596"},"content":"* [Frequently Asked Questions (FAQ)](#frequently-asked-questions-faq)","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"Musfirahe0556596"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"## Quick Start Guide","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":78,"author":{"gitId":"Musfirahe0556596"},"content":"1. Ensure that you have [Java 11](https://www.oracle.com/java/technologies/downloads/) or above installed.","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"alanlowzies"},"content":"2. (For Microsoft Windows users) Download [Windows Terminal][1] from the Microsoft Store.","lastModifiedDate":"2022-04-03"},{"lineNumber":80,"author":{"gitId":"alanlowzies"},"content":"3. Download the latest version of WerkIt! from [here](https://github.com/AY2122S2-CS2113T-T09-2/tp/releases).","lastModifiedDate":"2022-04-03"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"4. Create a new directory and move the WerkIt! JAR file to that directory.","lastModifiedDate":"2022-04-03"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"5. Open Windows Terminal (for Microsoft Windows users) or the other recommended terminals as listed in ","lastModifiedDate":"2022-04-03"},{"lineNumber":83,"author":{"gitId":"alanlowzies"},"content":"[\u0027Recommended Terminals\u0027](#recommended-terminals) based on your operating system.","lastModifiedDate":"2022-04-03"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"6. Set your current working directory to the new directory.","lastModifiedDate":"2022-04-03"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"7. Run the WerkIt! application with the command: `java -jar WerkIt.jar`.","lastModifiedDate":"2022-04-03"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"### Recommended Terminals","lastModifiedDate":"2022-04-03"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"The following table lists down the operating systems and their respective terminals that WerkIt! has been tested on to ","lastModifiedDate":"2022-04-03"},{"lineNumber":89,"author":{"gitId":"alanlowzies"},"content":"work.","lastModifiedDate":"2022-04-03"},{"lineNumber":90,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":91,"author":{"gitId":"alanlowzies"},"content":"| Operating System  | Version                        | Recommended Terminal                                                                                                |","lastModifiedDate":"2022-04-03"},{"lineNumber":92,"author":{"gitId":"alanlowzies"},"content":"|:------------------|:-------------------------------|:--------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-03"},{"lineNumber":93,"author":{"gitId":"alanlowzies"},"content":"| Microsoft Windows | Windows 10 2004 and above      | Windows Terminal ([User Guide](https://docs.microsoft.com/en-us/windows/terminal/))                                 |","lastModifiedDate":"2022-04-03"},{"lineNumber":94,"author":{"gitId":"alanlowzies"},"content":"| Apple macOS       | macOS 10.15 Catalina and above | Terminal ([User Guide](https://support.apple.com/en-sg/guide/terminal/apd5265185d-f365-44cb-8b09-71a064a42125/mac)) |","lastModifiedDate":"2022-04-03"},{"lineNumber":95,"author":{"gitId":"alanlowzies"},"content":"| Ubuntu Linux      | Ubuntu 20.04.3 (LTS) and above | Bash Terminal ([User Guide](https://ubuntu.com/tutorials/command-line-for-beginners#3-opening-a-terminal))          |","lastModifiedDate":"2022-04-03"},{"lineNumber":96,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":97,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box warning\"\u003e:warning: If your operating system is not listed in the table above, it means our application has ","lastModifiedDate":"2022-04-04"},{"lineNumber":98,"author":{"gitId":"alanlowzies"},"content":"not been tested on it, and we cannot guarantee that the application will work as intended. We highly encourage you to ","lastModifiedDate":"2022-04-03"},{"lineNumber":99,"author":{"gitId":"alanlowzies"},"content":"use one of the recommended operating systems listed in the table above. ","lastModifiedDate":"2022-04-03"},{"lineNumber":100,"author":{"gitId":"alanlowzies"},"content":"We apologise for any inconvenience caused.\u003c/span\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":101,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":102,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box warning\"\u003e:warning: (For Microsoft Windows users) In order for the application to display colours properly","lastModifiedDate":"2022-04-04"},{"lineNumber":103,"author":{"gitId":"alanlowzies"},"content":"on your screen, Windows Terminal needs to be used. The default Command Prompt and Powershell consoles will not be able","lastModifiedDate":"2022-04-03"},{"lineNumber":104,"author":{"gitId":"Musfirahe0556596"},"content":"to display WerkIt!\u0027s coloured texts properly, so it might show some weird symbols. See [this FAQ](#1-my-terminal-in-windows-is-displaying-weird-symbols-when-i-run-the-application) for more details.\u003c/span\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":105,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":106,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#table-of-contents\"\u003eBack to Table of Contents\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":107,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":108,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2020-05-24"},{"lineNumber":110,"author":{"gitId":"emilysim00"},"content":"In this section, features of the application can be classified into 4 main categories. They are: \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"emilysim00"},"content":"* [Exercise and Workout Features](#exercise-and-workout-features)","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"emilysim00"},"content":"* [Plan Features](#plan-features) ","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"emilysim00"},"content":"* [Schedule Features](#schedule-features)","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"emilysim00"},"content":"* [Search Features](#search-features)","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"emilysim00"},"content":"Each feature is being run by a specific command format. When the command format is matched, ","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"emilysim00"},"content":"the command will then be processed by the application and produce the intended outcome. The format of the commands","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"emilysim00"},"content":"contains two types of formatting.","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"emilysim00"},"content":"| Format           | Parameters                                                                                                                      |","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"Musfirahe0556596"},"content":"|------------------|---------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-06"},{"lineNumber":122,"author":{"gitId":"emilysim00"},"content":"| `\u003ccondition\u003e`    | Contents enclosed between \"\u003c\u003e\" are the inputs needed for the command to be valid. \u003cbr /\u003e Not all commands needs input.          |","lastModifiedDate":"2022-04-02"},{"lineNumber":123,"author":{"gitId":"Musfirahe0556596"},"content":"| `/commandAction` | Content after \"/\" is to classify the action of the command. \u003cbr/\u003e Such as classifying it to be list / delete / update commands. |","lastModifiedDate":"2022-04-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":125,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box warning\"\u003e:warning: **Heads Up!** Your inputs cannot contain the pipe character `|`!\u003c/span\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":126,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":127,"author":{"gitId":"Musfirahe0556596"},"content":"The following diagram gives you the general procedure on how to create your workout schedule:","lastModifiedDate":"2022-04-06"},{"lineNumber":128,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":129,"author":{"gitId":"emilysim00"},"content":"![Application Flow](high-level-diagram/application_flow.png)","lastModifiedDate":"2022-04-04"},{"lineNumber":130,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":131,"author":{"gitId":"emilysim00"},"content":"### Finding Your Way Around The Application","lastModifiedDate":"2022-04-02"},{"lineNumber":132,"author":{"gitId":"emilysim00"},"content":"* [Workout Commands](#workout-commands)","lastModifiedDate":"2022-04-02"},{"lineNumber":133,"author":{"gitId":"emilysim00"},"content":"* [Plan Commands](#plan-commands)","lastModifiedDate":"2022-04-02"},{"lineNumber":134,"author":{"gitId":"emilysim00"},"content":"* [Schedule Commands](#schedule-commands)","lastModifiedDate":"2022-04-02"},{"lineNumber":135,"author":{"gitId":"emilysim00"},"content":"* [Search Commands](#search-commands)","lastModifiedDate":"2022-04-02"},{"lineNumber":136,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":137,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box warning\"\u003e:warning: **Heads Up!** Due to the design of WerkIt!, commands, `/commandAction`, and","lastModifiedDate":"2022-04-04"},{"lineNumber":138,"author":{"gitId":"alanlowzies"},"content":"`\u003ccondition\u003e` must be separated by a single whitespace. Excessive whitespaces may not be accepted by the application.","lastModifiedDate":"2022-04-08"},{"lineNumber":139,"author":{"gitId":"Musfirahe0556596"},"content":"However, plan names may have more than a single whitespace in between words.\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":140,"author":{"gitId":"alanlowzies"},"content":"**Examples of Incorrect Usage**\u003cbr/\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":141,"author":{"gitId":"alanlowzies"},"content":":x: `workout /new     push up   /reps   1000`\u003cbr/\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":142,"author":{"gitId":"alanlowzies"},"content":":x: `plan    /list`\u003cbr/\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":143,"author":{"gitId":"alanlowzies"},"content":":x: `plan   /new leg day    /workouts    1, 2, 3`\u003cbr/\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":144,"author":{"gitId":"alanlowzies"},"content":":x: `schedule    /update    1    1`","lastModifiedDate":"2022-04-08"},{"lineNumber":145,"author":{"gitId":"alanlowzies"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":146,"author":{"gitId":"alanlowzies"},"content":"**Examples of Correct Usage**\u003cbr/\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":147,"author":{"gitId":"alanlowzies"},"content":":heavy_check_mark: `workout /new push up /reps 1000`\u003cbr/\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":148,"author":{"gitId":"alanlowzies"},"content":":heavy_check_mark: `plan /list`\u003cbr/\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":149,"author":{"gitId":"alanlowzies"},"content":":heavy_check_mark: `plan /new leg day /workouts 1, 2, 3`\u003cbr/\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":150,"author":{"gitId":"alanlowzies"},"content":":heavy_check_mark: `plan /new leg     day /workouts 1, 2, 3`\u003cbr/\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":151,"author":{"gitId":"alanlowzies"},"content":":heavy_check_mark: `schedule /update 1 1`","lastModifiedDate":"2022-04-08"},{"lineNumber":152,"author":{"gitId":"alanlowzies"},"content":"\u003c/span\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":153,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":154,"author":{"gitId":"emilysim00"},"content":"#### Workout Commands","lastModifiedDate":"2022-04-02"},{"lineNumber":155,"author":{"gitId":"emilysim00"},"content":"A brief summary of all the workout commands is stated in this section. You can have a better understanding of each of the","lastModifiedDate":"2022-04-02"},{"lineNumber":156,"author":{"gitId":"emilysim00"},"content":"command actions and the conditions that needs to be inputted for the command to be successfully processed.","lastModifiedDate":"2022-04-02"},{"lineNumber":157,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":158,"author":{"gitId":"emilysim00"},"content":"| Purpose                                              | Command                                                                | `/commandAction` | `\u003ccondition\u003e`                                                                                                                                                                       |","lastModifiedDate":"2022-04-02"},{"lineNumber":159,"author":{"gitId":"Musfirahe0556596"},"content":"|------------------------------------------------------|------------------------------------------------------------------------|------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-06"},{"lineNumber":160,"author":{"gitId":"Musfirahe0556596"},"content":"| [Create new workout](#create-a-workout-workout-new)  | workout /new `\u003cexercise name\u003e`/reps `\u003cnumber of repetitions\u003e`          | new              | `\u003cexercise name\u003e`: Name of the exercise. \u003cbr/\u003e\u003cbr/\u003e`\u003cnumber of repetitions\u003e`: Number of repetitions that should be carried out for the `\u003cexercise name\u003e`.                           |","lastModifiedDate":"2022-04-06"},{"lineNumber":161,"author":{"gitId":"Musfirahe0556596"},"content":"| [Delete a workout](#delete-a-workout-workout-delete) | workout /delete `\u003cworkout index number\u003e`                               | delete           | `\u003cworkout index number\u003e`: The index number of the workout to be removed from the workout list.                                                                                      |","lastModifiedDate":"2022-04-06"},{"lineNumber":162,"author":{"gitId":"Musfirahe0556596"},"content":"| [Update a workout](#update-a-workout-workout-update) | workout /update `\u003cworkout index number\u003e` `\u003cnew number of repetitions\u003e` | update           | `\u003cworkout index number\u003e`: The index number of the workout to be updated from the workout list.\u003cbr/\u003e\u003cbr/\u003e `\u003cnew number of repetitions\u003e`: The number of repetitions to be changed to. |","lastModifiedDate":"2022-04-06"},{"lineNumber":163,"author":{"gitId":"emilysim00"},"content":"| [View all workouts](#show-all-workouts-workout-list) | workout /list                                                          | list             | -                                                                                                                                                                                   |","lastModifiedDate":"2022-04-02"},{"lineNumber":164,"author":{"gitId":"emilysim00"},"content":" ","lastModifiedDate":"2022-04-02"},{"lineNumber":165,"author":{"gitId":"emilysim00"},"content":"Refer to the screenshot below to have a better understanding of what each of the condition refers to. ","lastModifiedDate":"2022-04-02"},{"lineNumber":166,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":167,"author":{"gitId":"emilysim00"},"content":"![](images/workoutExplanation.png)","lastModifiedDate":"2022-04-02"},{"lineNumber":168,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":169,"author":{"gitId":"Musfirahe0556596"},"content":"You can enter `exercise /list` command to view all the exercise names that are pre-populated into WerkIt!. Upon knowing the ","lastModifiedDate":"2022-04-06"},{"lineNumber":170,"author":{"gitId":"emilysim00"},"content":"exercise names, you can create workouts to suit your needs. ","lastModifiedDate":"2022-04-02"},{"lineNumber":171,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":172,"author":{"gitId":"emilysim00"},"content":"#### Plan Commands","lastModifiedDate":"2022-04-02"},{"lineNumber":173,"author":{"gitId":"emilysim00"},"content":"A brief summary of all the plan commands is stated in this section. You can have a better understanding of each of the","lastModifiedDate":"2022-04-02"},{"lineNumber":174,"author":{"gitId":"emilysim00"},"content":"command actions and the conditions that needs to be inputted for the command to be successfully processed.","lastModifiedDate":"2022-04-02"},{"lineNumber":175,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":176,"author":{"gitId":"emilysim00"},"content":"| Purpose                                                        | Command                                                                          | `/commandAction` | `\u003ccondition\u003e`                                                                                                                                                                |","lastModifiedDate":"2022-04-02"},{"lineNumber":177,"author":{"gitId":"Musfirahe0556596"},"content":"|----------------------------------------------------------------|----------------------------------------------------------------------------------|------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-06"},{"lineNumber":178,"author":{"gitId":"Musfirahe0556596"},"content":"| [Create a new plan](#create-a-plan-plan-new)                   | plan /new `\u003cplan name\u003e` /workouts `\u003cworkout index number(s) separated by comma\u003e` | new              | `\u003cplan name\u003e`: The name of the plan. Plan name must be unique. \u003cbr/\u003e\u003cbr/\u003e`\u003cworkout index number(s) separated by comma\u003e`: The workout(s) that will be added in this new plan. |","lastModifiedDate":"2022-04-06"},{"lineNumber":179,"author":{"gitId":"Musfirahe0556596"},"content":"| [Delete a plan](#delete-a-plan-plan-delete)                    | plan /delete `\u003cplan index number\u003e`                                               | delete           | `\u003cplan index number\u003e`: The index number of the plan to be removed from the plan list.                                                                                        |","lastModifiedDate":"2022-04-06"},{"lineNumber":180,"author":{"gitId":"Musfirahe0556596"},"content":"| [View details of a plan](#list-details-of-a-plan-plan-details) | plan /details `\u003cplan index number\u003e`                                              | details          | `\u003cplan index number\u003e`: The index number of the plan to be viewed in detailed.                                                                                                |","lastModifiedDate":"2022-04-06"},{"lineNumber":181,"author":{"gitId":"emilysim00"},"content":"| [View all plans](#list-a-plan-plan-list)                       | plan /list                                                                       | list             | -                                                                                                                                                                            |","lastModifiedDate":"2022-04-02"},{"lineNumber":182,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":183,"author":{"gitId":"emilysim00"},"content":"Refer to the screenshot below to have a better understanding of what each of the condition refers to.","lastModifiedDate":"2022-04-02"},{"lineNumber":184,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":185,"author":{"gitId":"emilysim00"},"content":"![](images/planExplanation.png)","lastModifiedDate":"2022-04-02"},{"lineNumber":186,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":187,"author":{"gitId":"emilysim00"},"content":"For the explanation on the condition, `\u003cworkout number(s) separated by comma\u003e`, please refer [here](#workout-commands).","lastModifiedDate":"2022-04-02"},{"lineNumber":188,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":189,"author":{"gitId":"emilysim00"},"content":"#### Schedule Commands","lastModifiedDate":"2022-04-02"},{"lineNumber":190,"author":{"gitId":"emilysim00"},"content":"A brief summary of all the schedule commands is stated in this section. You can have a better understanding of each of the","lastModifiedDate":"2022-04-02"},{"lineNumber":191,"author":{"gitId":"emilysim00"},"content":"command actions and the conditions that needs to be inputted for the command to be successfully processed.","lastModifiedDate":"2022-04-02"},{"lineNumber":192,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":193,"author":{"gitId":"emilysim00"},"content":"| Purpose                                                                    | Command                                               | `/commandAction` | `\u003ccondition\u003e`                                                                                                                                                      |","lastModifiedDate":"2022-04-02"},{"lineNumber":194,"author":{"gitId":"Musfirahe0556596"},"content":"|----------------------------------------------------------------------------|-------------------------------------------------------|------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-06"},{"lineNumber":195,"author":{"gitId":"Musfirahe0556596"},"content":"| [Schedule a plan for a day](#update-schedule-schedule-update)              | schedule /update `\u003cday number\u003e` `\u003cplan index number\u003e` | update           | `\u003cday number\u003e`: Number representing the day. \u003cbr/\u003e\u003cbr/\u003e`\u003cplan index number\u003e`: Index of the plan stored in plan list. This is the plan to be scheduled for the day. |","lastModifiedDate":"2022-04-06"},{"lineNumber":196,"author":{"gitId":"emilysim00"},"content":"| [View schedule](#view-schedule-schedule-list)                              | schedule /list                                        | list             | -                                                                                                                                                                  |","lastModifiedDate":"2022-04-02"},{"lineNumber":197,"author":{"gitId":"Musfirahe0556596"},"content":"| [Remove plan scheduled on a day](#clear-schedule-for-a-day-schedule-clear) | schedule /clear `\u003cday number\u003e`                        | clear            | `\u003cday number\u003e`: Number representing the day.                                                                                                                       |","lastModifiedDate":"2022-04-06"},{"lineNumber":198,"author":{"gitId":"emilysim00"},"content":"| [Reset the schedule](#clear-schedule-for-the-week-schedule-clearall)       | schedule /clearall                                    | clearall         | -                                                                                                                                                                  |","lastModifiedDate":"2022-04-02"},{"lineNumber":199,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":200,"author":{"gitId":"Musfirahe0556596"},"content":"The `\u003cday number\u003e` ranges from 1 to 7. The meaning of each day number is explained in the table below.","lastModifiedDate":"2022-04-06"},{"lineNumber":201,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":202,"author":{"gitId":"emilysim00"},"content":"| Day Number | Meaning   |","lastModifiedDate":"2022-04-02"},{"lineNumber":203,"author":{"gitId":"emilysim00"},"content":"|------------|-----------|","lastModifiedDate":"2022-04-02"},{"lineNumber":204,"author":{"gitId":"emilysim00"},"content":"| 1          | Monday    |","lastModifiedDate":"2022-04-02"},{"lineNumber":205,"author":{"gitId":"emilysim00"},"content":"| 2          | Tuesday   |","lastModifiedDate":"2022-04-02"},{"lineNumber":206,"author":{"gitId":"emilysim00"},"content":"| 3          | Wednesday |","lastModifiedDate":"2022-04-02"},{"lineNumber":207,"author":{"gitId":"emilysim00"},"content":"| 4          | Thursday  |","lastModifiedDate":"2022-04-02"},{"lineNumber":208,"author":{"gitId":"emilysim00"},"content":"| 5          | Friday    |","lastModifiedDate":"2022-04-02"},{"lineNumber":209,"author":{"gitId":"emilysim00"},"content":"| 6          | Saturday  |","lastModifiedDate":"2022-04-02"},{"lineNumber":210,"author":{"gitId":"emilysim00"},"content":"| 7          | Sunday    |","lastModifiedDate":"2022-04-02"},{"lineNumber":211,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":212,"author":{"gitId":"emilysim00"},"content":"For the explanation on the condition, `\u003cplan index number\u003e`, please refer [here](#plan-commands).","lastModifiedDate":"2022-04-02"},{"lineNumber":213,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":214,"author":{"gitId":"emilysim00"},"content":"#### Search Commands","lastModifiedDate":"2022-04-02"},{"lineNumber":215,"author":{"gitId":"emilysim00"},"content":"A brief summary of all the search commands is stated in this section. You can have a better understanding of each of the","lastModifiedDate":"2022-04-02"},{"lineNumber":216,"author":{"gitId":"emilysim00"},"content":"command actions and the conditions that needs to be inputted for the command to be successfully processed.","lastModifiedDate":"2022-04-02"},{"lineNumber":217,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":218,"author":{"gitId":"emilysim00"},"content":"| Purpose                                                                 | Command                                                | `/commandAction` | `\u003ccondition\u003e`                                                                                                        |","lastModifiedDate":"2022-04-02"},{"lineNumber":219,"author":{"gitId":"Musfirahe0556596"},"content":"|-------------------------------------------------------------------------|--------------------------------------------------------|------------------|----------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-06"},{"lineNumber":220,"author":{"gitId":"Musfirahe0556596"},"content":"| [Search keyword in exercise list](#search-for-exercise-search-exercise) | search /exercise `\u003cexercise keyword\u003e`                  | exercise         | `\u003cexercise keyword\u003e`: The keyword to be matched when searching through the exercise list.                            |","lastModifiedDate":"2022-04-06"},{"lineNumber":221,"author":{"gitId":"Musfirahe0556596"},"content":"| [Search keyword in workout list](#search-for-workout-search-workout)    | search /workout `\u003cexercise keyword or number of reps\u003e` | workout          | `\u003cexercise keyword or number of reps\u003e`: The keyword or number to be matched when searching through the workout list. |","lastModifiedDate":"2022-04-06"},{"lineNumber":222,"author":{"gitId":"Musfirahe0556596"},"content":"| [Search keyword in plan list](#search-for-plan-search-plan)             | search /plan `\u003cplan keyword\u003e`                          | plan             | `\u003cplan keyword\u003e`: The keyword to be matched when searching through the plan list.                                    |","lastModifiedDate":"2022-04-06"},{"lineNumber":223,"author":{"gitId":"Musfirahe0556596"},"content":"| [Search keyword in all 3 lists](#search-for-all-search-all)             | search /all `\u003ckeyword\u003e`                                | all              | `\u003ckeyword\u003e`: The keyword to be matched when searching through the exercise, workout and plan lists.                  |","lastModifiedDate":"2022-04-06"},{"lineNumber":224,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":225,"author":{"gitId":"Musfirahe0556596"},"content":"`exercise keyword` will be used to search in the exercise list only. The screenshot below shows the ","lastModifiedDate":"2022-04-06"},{"lineNumber":226,"author":{"gitId":"emilysim00"},"content":"possible `exercise keyword`. ","lastModifiedDate":"2022-04-02"},{"lineNumber":227,"author":{"gitId":"emilysim00"},"content":"![](images/exerciseList.png)","lastModifiedDate":"2022-04-02"},{"lineNumber":228,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":229,"author":{"gitId":"Musfirahe0556596"},"content":"`workout keyword` will be used to search in the workout list only. The screenshot below shows the","lastModifiedDate":"2022-04-06"},{"lineNumber":230,"author":{"gitId":"emilysim00"},"content":"possible `workout keyword`.","lastModifiedDate":"2022-04-02"},{"lineNumber":231,"author":{"gitId":"emilysim00"},"content":"![](images/workoutList.png)","lastModifiedDate":"2022-04-02"},{"lineNumber":232,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":233,"author":{"gitId":"Musfirahe0556596"},"content":"`plan keyword` will be used to search in the plan list only. The screenshot below shows the","lastModifiedDate":"2022-04-06"},{"lineNumber":234,"author":{"gitId":"emilysim00"},"content":"possible `plan keyword`.","lastModifiedDate":"2022-04-02"},{"lineNumber":235,"author":{"gitId":"emilysim00"},"content":"![](images/planList.png)","lastModifiedDate":"2022-04-02"},{"lineNumber":236,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":237,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#table-of-contents\"\u003eBack to Table of Contents\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":238,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":239,"author":{"gitId":"a1021492980"},"content":"---","lastModifiedDate":"2022-03-20"},{"lineNumber":240,"author":{"gitId":"emilysim00"},"content":"## Exercise And Workout Features","lastModifiedDate":"2022-03-27"},{"lineNumber":241,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":242,"author":{"gitId":"a1021492980"},"content":"### Show all Exercises: `exercise /list`","lastModifiedDate":"2022-03-20"},{"lineNumber":243,"author":{"gitId":"Musfirahe0556596"},"content":"In this current implementation of WerkIt!, you are unable to customize the exercises you want into the application. However,","lastModifiedDate":"2022-04-06"},{"lineNumber":244,"author":{"gitId":"emilysim00"},"content":"the feature of being able to add the exercises you want to the exercise list will be available in the future version of ","lastModifiedDate":"2022-04-02"},{"lineNumber":245,"author":{"gitId":"emilysim00"},"content":"the application. Hence, to list down all exercises that are pre-populated into the list, enter the command","lastModifiedDate":"2022-04-02"},{"lineNumber":246,"author":{"gitId":"emilysim00"},"content":"in the format stated below. After viewing the types of exercises available, you can then create workouts based on these","lastModifiedDate":"2022-04-02"},{"lineNumber":247,"author":{"gitId":"emilysim00"},"content":"exercises. ","lastModifiedDate":"2022-04-02"},{"lineNumber":248,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":249,"author":{"gitId":"a1021492980"},"content":"Format: `exercise /list`","lastModifiedDate":"2022-03-20"},{"lineNumber":250,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":251,"author":{"gitId":"a1021492980"},"content":"**Example**","lastModifiedDate":"2022-03-20"},{"lineNumber":252,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-20"},{"lineNumber":253,"author":{"gitId":"a1021492980"},"content":"\u003e exercise /list","lastModifiedDate":"2022-03-20"},{"lineNumber":254,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-20"},{"lineNumber":255,"author":{"gitId":"a1021492980"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-20"},{"lineNumber":256,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-20"},{"lineNumber":257,"author":{"gitId":"a1021492980"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-03-20"},{"lineNumber":258,"author":{"gitId":"a1021492980"},"content":"There are 13 exercises available.","lastModifiedDate":"2022-03-20"},{"lineNumber":259,"author":{"gitId":"a1021492980"},"content":"Here is the list of exercises: ","lastModifiedDate":"2022-03-20"},{"lineNumber":260,"author":{"gitId":"a1021492980"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-03-20"},{"lineNumber":261,"author":{"gitId":"a1021492980"},"content":"1. push up","lastModifiedDate":"2022-03-20"},{"lineNumber":262,"author":{"gitId":"a1021492980"},"content":"2. bicep curl","lastModifiedDate":"2022-03-20"},{"lineNumber":263,"author":{"gitId":"a1021492980"},"content":"3. pull up","lastModifiedDate":"2022-03-20"},{"lineNumber":264,"author":{"gitId":"a1021492980"},"content":"4. squat","lastModifiedDate":"2022-03-20"},{"lineNumber":265,"author":{"gitId":"a1021492980"},"content":"5. lunge","lastModifiedDate":"2022-03-20"},{"lineNumber":266,"author":{"gitId":"a1021492980"},"content":"6. hip thrust","lastModifiedDate":"2022-03-20"},{"lineNumber":267,"author":{"gitId":"a1021492980"},"content":"7. sit up","lastModifiedDate":"2022-03-20"},{"lineNumber":268,"author":{"gitId":"a1021492980"},"content":"8. crunch","lastModifiedDate":"2022-03-20"},{"lineNumber":269,"author":{"gitId":"a1021492980"},"content":"9. russian twist","lastModifiedDate":"2022-03-20"},{"lineNumber":270,"author":{"gitId":"a1021492980"},"content":"10. running","lastModifiedDate":"2022-03-20"},{"lineNumber":271,"author":{"gitId":"a1021492980"},"content":"11. swimming","lastModifiedDate":"2022-03-20"},{"lineNumber":272,"author":{"gitId":"a1021492980"},"content":"12. jumping jack","lastModifiedDate":"2022-03-20"},{"lineNumber":273,"author":{"gitId":"a1021492980"},"content":"13. burpee","lastModifiedDate":"2022-03-20"},{"lineNumber":274,"author":{"gitId":"a1021492980"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-03-20"},{"lineNumber":275,"author":{"gitId":"a1021492980"},"content":"End of exercise list.","lastModifiedDate":"2022-03-20"},{"lineNumber":276,"author":{"gitId":"a1021492980"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-03-20"},{"lineNumber":277,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-20"},{"lineNumber":278,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":279,"author":{"gitId":"a1021492980"},"content":"In the current exercise list, there are 13 exercises available.","lastModifiedDate":"2022-03-20"},{"lineNumber":280,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":281,"author":{"gitId":"a1021492980"},"content":"---","lastModifiedDate":"2022-03-20"},{"lineNumber":282,"author":{"gitId":"alanlowzies"},"content":"### Create a Workout: `workout /new`","lastModifiedDate":"2022-03-11"},{"lineNumber":283,"author":{"gitId":"alanlowzies"},"content":"Creates a new workout, which is an exercise with a specified number of repetitions. Newly created workouts are ","lastModifiedDate":"2022-04-03"},{"lineNumber":284,"author":{"gitId":"alanlowzies"},"content":"stored in the workouts list. You can create plans with the workouts you have created. ","lastModifiedDate":"2022-04-03"},{"lineNumber":285,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":286,"author":{"gitId":"alanlowzies"},"content":"Format: `workout /new \u003cexercise name\u003e /reps \u003cnumber of repetitions\u003e`","lastModifiedDate":"2022-03-11"},{"lineNumber":287,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":288,"author":{"gitId":"alanlowzies"},"content":"| Parameters                | Description                                                                                                                                           |","lastModifiedDate":"2022-03-11"},{"lineNumber":289,"author":{"gitId":"TianaiYan"},"content":"|---------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-28"},{"lineNumber":290,"author":{"gitId":"alanlowzies"},"content":"| `\u003cexercise name\u003e`         | The name of the exercise. \u003cbr/\u003e- Exercise name must be from the pre-defined list of exercises.\u003cbr/\u003e- Type `exercise /list` for the list of exercises. |","lastModifiedDate":"2022-03-27"},{"lineNumber":291,"author":{"gitId":"Musfirahe0556596"},"content":"| `\u003cnumber of repetitions\u003e` | The number of repetitions that should be carried out for `\u003cexercise name\u003e`. There needs to be at least 1 repetition.                                  |","lastModifiedDate":"2022-04-06"},{"lineNumber":292,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":293,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cspan class \u003d \"warning box\"\u003e:warning: Due to the limitation of the system, the maximum number of repetitions you can set","lastModifiedDate":"2022-04-06"},{"lineNumber":294,"author":{"gitId":"Musfirahe0556596"},"content":"is `2,147,483,647`.\u003c/span\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":295,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":296,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cspan class \u003d \"warning box\"\u003e:warning: You are not allowed to create another workout with the same exercise name and ","lastModifiedDate":"2022-04-06"},{"lineNumber":297,"author":{"gitId":"Musfirahe0556596"},"content":"repetition value as existing workouts.\u003c/span\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":298,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":299,"author":{"gitId":"emilysim00"},"content":"Click [here](#workout-commands) to have a better understanding of the parameters stated.","lastModifiedDate":"2022-04-02"},{"lineNumber":300,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":301,"author":{"gitId":"alanlowzies"},"content":"**Example**","lastModifiedDate":"2022-03-11"},{"lineNumber":302,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-03-11"},{"lineNumber":303,"author":{"gitId":"alanlowzies"},"content":"\u003e workout /new russian twist /reps 50","lastModifiedDate":"2022-03-11"},{"lineNumber":304,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-03-11"},{"lineNumber":305,"author":{"gitId":"alanlowzies"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-11"},{"lineNumber":306,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-03-11"},{"lineNumber":307,"author":{"gitId":"alanlowzies"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-11"},{"lineNumber":308,"author":{"gitId":"alanlowzies"},"content":"Alright, the following workout has been created:","lastModifiedDate":"2022-03-11"},{"lineNumber":309,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":310,"author":{"gitId":"alanlowzies"},"content":"\trussian twist (50 reps)","lastModifiedDate":"2022-03-11"},{"lineNumber":311,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":312,"author":{"gitId":"alanlowzies"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-11"},{"lineNumber":313,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-03-11"},{"lineNumber":314,"author":{"gitId":"alanlowzies"},"content":"A new workout of carrying out Russian twists 50 times will be created and added to the application\u0027s list of workouts.","lastModifiedDate":"2022-03-11"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":316,"author":{"gitId":"emilysim00"},"content":"---","lastModifiedDate":"2022-03-14"},{"lineNumber":317,"author":{"gitId":"emilysim00"},"content":"### Show all Workouts: `workout /list`","lastModifiedDate":"2022-04-02"},{"lineNumber":318,"author":{"gitId":"emilysim00"},"content":"This command will list down all workouts that have been created and are stored in the workout list at the ","lastModifiedDate":"2022-04-02"},{"lineNumber":319,"author":{"gitId":"emilysim00"},"content":"time the command is being performed.","lastModifiedDate":"2022-04-02"},{"lineNumber":320,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":321,"author":{"gitId":"emilysim00"},"content":"Format: `workout /list`","lastModifiedDate":"2022-04-02"},{"lineNumber":322,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":323,"author":{"gitId":"emilysim00"},"content":"**Example**","lastModifiedDate":"2022-03-14"},{"lineNumber":324,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":325,"author":{"gitId":"emilysim00"},"content":"\u003e workout /list","lastModifiedDate":"2022-04-02"},{"lineNumber":326,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":327,"author":{"gitId":"emilysim00"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-14"},{"lineNumber":328,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":329,"author":{"gitId":"emilysim00"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-03-14"},{"lineNumber":330,"author":{"gitId":"emilysim00"},"content":"Showing workouts 1-3 of 3:","lastModifiedDate":"2022-03-14"},{"lineNumber":331,"author":{"gitId":"emilysim00"},"content":"1. push up (10 reps)","lastModifiedDate":"2022-03-14"},{"lineNumber":332,"author":{"gitId":"emilysim00"},"content":"2. sit up (10 reps)","lastModifiedDate":"2022-03-14"},{"lineNumber":333,"author":{"gitId":"emilysim00"},"content":"3. pull up (10 reps)","lastModifiedDate":"2022-03-14"},{"lineNumber":334,"author":{"gitId":"emilysim00"},"content":"Showed all workouts in list","lastModifiedDate":"2022-03-14"},{"lineNumber":335,"author":{"gitId":"emilysim00"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-03-14"},{"lineNumber":336,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":337,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":338,"author":{"gitId":"Musfirahe0556596"},"content":"In the current workout list, there are a total of 3 workouts. All the workouts have been listed. If there is nothing ","lastModifiedDate":"2022-04-06"},{"lineNumber":339,"author":{"gitId":"emilysim00"},"content":"in the workout list, you can expect the outcome stated below.","lastModifiedDate":"2022-04-02"},{"lineNumber":340,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":341,"author":{"gitId":"emilysim00"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-14"},{"lineNumber":342,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":343,"author":{"gitId":"alanlowzies"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":344,"author":{"gitId":"emilysim00"},"content":"The workout list is empty","lastModifiedDate":"2022-04-02"},{"lineNumber":345,"author":{"gitId":"alanlowzies"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":346,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":347,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":348,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-03-11"},{"lineNumber":349,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":350,"author":{"gitId":"Musfirahe0556596"},"content":"### Delete a Workout: `workout /delete`","lastModifiedDate":"2022-03-14"},{"lineNumber":351,"author":{"gitId":"Musfirahe0556596"},"content":"Removes an existing workout from the workout list. Deleting","lastModifiedDate":"2022-04-06"},{"lineNumber":352,"author":{"gitId":"Musfirahe0556596"},"content":"a workout will also delete plans containing the deleted workout.","lastModifiedDate":"2022-04-06"},{"lineNumber":353,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":354,"author":{"gitId":"emilysim00"},"content":"Format: `workout /delete \u003cworkout index number\u003e`","lastModifiedDate":"2022-04-02"},{"lineNumber":355,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":356,"author":{"gitId":"Musfirahe0556596"},"content":"| Parameters               | Description                                                          |","lastModifiedDate":"2022-03-14"},{"lineNumber":357,"author":{"gitId":"emilysim00"},"content":"|--------------------------|----------------------------------------------------------------------|","lastModifiedDate":"2022-04-02"},{"lineNumber":358,"author":{"gitId":"Musfirahe0556596"},"content":"| `\u003cworkout index number\u003e` | The index number of the workout to be removed from the workout list. |","lastModifiedDate":"2022-04-06"},{"lineNumber":359,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":360,"author":{"gitId":"emilysim00"},"content":"Click [here](#workout-commands) to have a better understanding of the parameters stated.","lastModifiedDate":"2022-04-02"},{"lineNumber":361,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":362,"author":{"gitId":"Musfirahe0556596"},"content":"**Example**","lastModifiedDate":"2022-03-14"},{"lineNumber":363,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr/\u003eInitially, the workout list contains the following workouts:","lastModifiedDate":"2022-03-14"},{"lineNumber":364,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":365,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-14"},{"lineNumber":366,"author":{"gitId":"Musfirahe0556596"},"content":"Showing workouts 1-2 of 2:","lastModifiedDate":"2022-03-14"},{"lineNumber":367,"author":{"gitId":"Musfirahe0556596"},"content":"1. russian twist (50 reps)","lastModifiedDate":"2022-03-14"},{"lineNumber":368,"author":{"gitId":"Musfirahe0556596"},"content":"2. push up (20 reps)","lastModifiedDate":"2022-03-14"},{"lineNumber":369,"author":{"gitId":"emilysim00"},"content":"Showed all workouts in list","lastModifiedDate":"2022-03-14"},{"lineNumber":370,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-14"},{"lineNumber":371,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":372,"author":{"gitId":"Musfirahe0556596"},"content":"To remove workout number 2 from the list, the following command is entered:","lastModifiedDate":"2022-03-14"},{"lineNumber":373,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":374,"author":{"gitId":"Musfirahe0556596"},"content":"\u003e workout /delete 2","lastModifiedDate":"2022-03-14"},{"lineNumber":375,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":376,"author":{"gitId":"Musfirahe0556596"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-14"},{"lineNumber":377,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":378,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-14"},{"lineNumber":379,"author":{"gitId":"Musfirahe0556596"},"content":"Alright, the following workout has been removed:","lastModifiedDate":"2022-03-14"},{"lineNumber":380,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":381,"author":{"gitId":"Musfirahe0556596"},"content":"\tpush up (20 reps)","lastModifiedDate":"2022-03-14"},{"lineNumber":382,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":383,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-14"},{"lineNumber":384,"author":{"gitId":"Musfirahe0556596"},"content":"What\u0027s next?","lastModifiedDate":"2022-03-14"},{"lineNumber":385,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-14"},{"lineNumber":386,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":387,"author":{"gitId":"Musfirahe0556596"},"content":"Workout number 2 (push up with 20 reps) is removed from the workout list. ","lastModifiedDate":"2022-03-14"},{"lineNumber":388,"author":{"gitId":"Musfirahe0556596"},"content":"Running the `workout /list` command will show the workout list as follows:","lastModifiedDate":"2022-03-14"},{"lineNumber":389,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":390,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-14"},{"lineNumber":391,"author":{"gitId":"Musfirahe0556596"},"content":"Showing workouts 1-1 of 1:","lastModifiedDate":"2022-03-14"},{"lineNumber":392,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":393,"author":{"gitId":"Musfirahe0556596"},"content":"1. russian twist (50 reps)","lastModifiedDate":"2022-03-14"},{"lineNumber":394,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":395,"author":{"gitId":"emilysim00"},"content":"Showed all workouts in list","lastModifiedDate":"2022-03-14"},{"lineNumber":396,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-14"},{"lineNumber":397,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":398,"author":{"gitId":"Musfirahe0556596"},"content":"---","lastModifiedDate":"2022-03-14"},{"lineNumber":399,"author":{"gitId":"TianaiYan"},"content":"### Update a Workout: `workout /update`","lastModifiedDate":"2022-03-16"},{"lineNumber":400,"author":{"gitId":"TianaiYan"},"content":"Modifies an existing workout from the workout list. If the modified workout is included in","lastModifiedDate":"2022-04-05"},{"lineNumber":401,"author":{"gitId":"TianaiYan"},"content":"any plans, workout stored in these plan will also be modified. \u003cbr/\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":402,"author":{"gitId":"TianaiYan"},"content":"*Noted: Only the number of repetition can be changed.*","lastModifiedDate":"2022-03-16"},{"lineNumber":403,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":404,"author":{"gitId":"emilysim00"},"content":"Format: `workout /update \u003cworkout index number\u003e \u003cnew number of repetitions\u003e`","lastModifiedDate":"2022-04-02"},{"lineNumber":405,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":406,"author":{"gitId":"TianaiYan"},"content":"| Parameters                    | Description                                                                          |","lastModifiedDate":"2022-03-16"},{"lineNumber":407,"author":{"gitId":"Musfirahe0556596"},"content":"|-------------------------------|--------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-06"},{"lineNumber":408,"author":{"gitId":"emilysim00"},"content":"| `\u003cworkout index number \u003e`     | The number index of the workout to be updated from the workout list.                 |","lastModifiedDate":"2022-04-02"},{"lineNumber":409,"author":{"gitId":"Musfirahe0556596"},"content":"| `\u003cnew number of repetitions\u003e` | The number of repetitions to be changed to. There needs to be at least 1 repetition. |","lastModifiedDate":"2022-04-06"},{"lineNumber":410,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":411,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cspan class \u003d \"warning box\"\u003e:warning: Due to the limitation of the system, the maximum number of repetitions you can set","lastModifiedDate":"2022-04-06"},{"lineNumber":412,"author":{"gitId":"Musfirahe0556596"},"content":"is `2,147,483,647`.\u003c/span\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":413,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":414,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cspan class \u003d \"warning box\"\u003e:warning: You are not allowed to update a workout\u0027s repetition value such that it will be","lastModifiedDate":"2022-04-06"},{"lineNumber":415,"author":{"gitId":"Musfirahe0556596"},"content":"identical to an existing workout. .\u003c/span\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":416,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":417,"author":{"gitId":"emilysim00"},"content":"Click [here](#workout-commands) to have a better understanding of the parameters stated.","lastModifiedDate":"2022-04-02"},{"lineNumber":418,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":419,"author":{"gitId":"TianaiYan"},"content":"**Example**\u003cbr\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":420,"author":{"gitId":"TianaiYan"},"content":"Initially, the workout list contains the following workouts:","lastModifiedDate":"2022-03-16"},{"lineNumber":421,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-16"},{"lineNumber":422,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-16"},{"lineNumber":423,"author":{"gitId":"TianaiYan"},"content":"Showing workouts 1-3 of 3:","lastModifiedDate":"2022-03-16"},{"lineNumber":424,"author":{"gitId":"TianaiYan"},"content":"1. push up (10 reps)","lastModifiedDate":"2022-03-16"},{"lineNumber":425,"author":{"gitId":"TianaiYan"},"content":"2. sit up (10 reps)","lastModifiedDate":"2022-03-16"},{"lineNumber":426,"author":{"gitId":"TianaiYan"},"content":"3. pull up (10 reps)","lastModifiedDate":"2022-03-16"},{"lineNumber":427,"author":{"gitId":"TianaiYan"},"content":"Showed all workouts in list","lastModifiedDate":"2022-03-16"},{"lineNumber":428,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-16"},{"lineNumber":429,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-16"},{"lineNumber":430,"author":{"gitId":"TianaiYan"},"content":"Plan 1 contains the following workouts:","lastModifiedDate":"2022-04-05"},{"lineNumber":431,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-04-05"},{"lineNumber":432,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-04-05"},{"lineNumber":433,"author":{"gitId":"TianaiYan"},"content":"Here are the 3 workouts in [Plan 1].","lastModifiedDate":"2022-04-05"},{"lineNumber":434,"author":{"gitId":"TianaiYan"},"content":"1. push up (10 reps)","lastModifiedDate":"2022-04-05"},{"lineNumber":435,"author":{"gitId":"TianaiYan"},"content":"2. sit up (10 reps)","lastModifiedDate":"2022-04-05"},{"lineNumber":436,"author":{"gitId":"TianaiYan"},"content":"3. pull up (10 reps)","lastModifiedDate":"2022-04-05"},{"lineNumber":437,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-04-05"},{"lineNumber":438,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-04-05"},{"lineNumber":439,"author":{"gitId":"TianaiYan"},"content":"Command to see the workouts in the plan is explained in [here](#list-details-of-a-plan-plan-details).","lastModifiedDate":"2022-04-05"},{"lineNumber":440,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":441,"author":{"gitId":"TianaiYan"},"content":"To update workout number 1 (push up with 10 reps) ","lastModifiedDate":"2022-03-28"},{"lineNumber":442,"author":{"gitId":"TianaiYan"},"content":"to 15 reps, enter the following command:","lastModifiedDate":"2022-03-28"},{"lineNumber":443,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-16"},{"lineNumber":444,"author":{"gitId":"TianaiYan"},"content":"\u003e workout /update 1 15","lastModifiedDate":"2022-03-16"},{"lineNumber":445,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-16"},{"lineNumber":446,"author":{"gitId":"TianaiYan"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-16"},{"lineNumber":447,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":448,"author":{"gitId":"TianaiYan"},"content":"![Expected Outcome For Update Workout](images/expectedMessageForUpdateWorkout.png)\u003cbr/\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":449,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":450,"author":{"gitId":"TianaiYan"},"content":"Workout number 1 (push up with 10 reps) is updated to push up with 15 reps. ","lastModifiedDate":"2022-03-28"},{"lineNumber":451,"author":{"gitId":"TianaiYan"},"content":"If no plan contains the updated workout, content in the red box will not be displayed.","lastModifiedDate":"2022-04-05"},{"lineNumber":452,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":453,"author":{"gitId":"TianaiYan"},"content":"Now, running the `workout /list` command again will show the workout list as follows:","lastModifiedDate":"2022-04-05"},{"lineNumber":454,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-16"},{"lineNumber":455,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-16"},{"lineNumber":456,"author":{"gitId":"TianaiYan"},"content":"Showing workouts 1-3 of 3:","lastModifiedDate":"2022-03-16"},{"lineNumber":457,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":458,"author":{"gitId":"TianaiYan"},"content":"1. push up (15 reps)","lastModifiedDate":"2022-03-16"},{"lineNumber":459,"author":{"gitId":"TianaiYan"},"content":"2. sit up (10 reps)","lastModifiedDate":"2022-03-16"},{"lineNumber":460,"author":{"gitId":"TianaiYan"},"content":"3. pull up (10 reps)","lastModifiedDate":"2022-03-16"},{"lineNumber":461,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":462,"author":{"gitId":"TianaiYan"},"content":"Showed all workouts in list","lastModifiedDate":"2022-03-16"},{"lineNumber":463,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-16"},{"lineNumber":464,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-16"},{"lineNumber":465,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":466,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#table-of-contents\"\u003eBack to Table of Contents\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":467,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":468,"author":{"gitId":"Musfirahe0556596"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":469,"author":{"gitId":"emilysim00"},"content":"## Plan Features","lastModifiedDate":"2022-03-27"},{"lineNumber":470,"author":{"gitId":"Musfirahe0556596"},"content":"### Create a Plan: `plan /new`","lastModifiedDate":"2022-03-24"},{"lineNumber":471,"author":{"gitId":"Musfirahe0556596"},"content":"Creates a new plan, which consists of a plan name and the workout(s) added.","lastModifiedDate":"2022-03-24"},{"lineNumber":472,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":473,"author":{"gitId":"Musfirahe0556596"},"content":"Format: `plan /new \u003cplan name\u003e /workouts \u003cworkout number(s) separated by comma\u003e`","lastModifiedDate":"2022-03-24"},{"lineNumber":474,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":475,"author":{"gitId":"Musfirahe0556596"},"content":"| Parameters                                     | Description                                                                                                                                                                            |","lastModifiedDate":"2022-03-24"},{"lineNumber":476,"author":{"gitId":"Musfirahe0556596"},"content":"|------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-06"},{"lineNumber":477,"author":{"gitId":"Musfirahe0556596"},"content":"| `\u003cplan name\u003e`                                  | The name of the plan. Plan name must be unique.                                                                                                                                        |","lastModifiedDate":"2022-03-24"},{"lineNumber":478,"author":{"gitId":"emilysim00"},"content":"| `\u003cworkout index number(s) separated by comma\u003e` | The workout(s) that will be added in this new plan. \u003cbr\u003e- Maximum number of workouts per plan is 10.\u003cbr\u003e- Workouts to be added can be repeated.\u003cbr\u003e- `workout /list` to view workouts. |","lastModifiedDate":"2022-04-02"},{"lineNumber":479,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":480,"author":{"gitId":"emilysim00"},"content":"Click [here](#plan-commands) to have a better understanding of the parameters stated.","lastModifiedDate":"2022-04-02"},{"lineNumber":481,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":482,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cspan class\u003d\"warning box\"\u003e:warning: No two plans can have the same workout order or name.\u003c/span\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":483,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":484,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"info box\"\u003e:memo: Plan names in WerkIt! will be stored in lowercase, regardless of whether you have entered","lastModifiedDate":"2022-04-06"},{"lineNumber":485,"author":{"gitId":"alanlowzies"},"content":"them in title casing.\u003c/span\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":486,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":487,"author":{"gitId":"Musfirahe0556596"},"content":"**Example**\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":488,"author":{"gitId":"Musfirahe0556596"},"content":"The workout list upon entering `workout /list`, contains the following workouts:","lastModifiedDate":"2022-03-24"},{"lineNumber":489,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":490,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":491,"author":{"gitId":"Musfirahe0556596"},"content":"Showing workouts 1-3 of 3:","lastModifiedDate":"2022-03-24"},{"lineNumber":492,"author":{"gitId":"Musfirahe0556596"},"content":"1. push up (10 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":493,"author":{"gitId":"Musfirahe0556596"},"content":"2. sit up (10 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":494,"author":{"gitId":"Musfirahe0556596"},"content":"3. pull up (10 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":495,"author":{"gitId":"Musfirahe0556596"},"content":"Showed all workouts in list","lastModifiedDate":"2022-03-24"},{"lineNumber":496,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":497,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":498,"author":{"gitId":"Musfirahe0556596"},"content":"To create a new plan, enter the following command:","lastModifiedDate":"2022-03-24"},{"lineNumber":499,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":500,"author":{"gitId":"emilysim00"},"content":"\u003e plan /new grow my muscles /workouts 1, 2, 3, 1","lastModifiedDate":"2022-04-08"},{"lineNumber":501,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":502,"author":{"gitId":"Musfirahe0556596"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-24"},{"lineNumber":503,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":504,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":505,"author":{"gitId":"Musfirahe0556596"},"content":"Alright, the following plan has been created:","lastModifiedDate":"2022-03-24"},{"lineNumber":506,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":507,"author":{"gitId":"TianaiYan"},"content":"\tgrow my muscles","lastModifiedDate":"2022-04-06"},{"lineNumber":508,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":509,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":510,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":511,"author":{"gitId":"emilysim00"},"content":"A new plan containing the workouts you had specified earlier will be created and added to the application\u0027s list of plans.","lastModifiedDate":"2022-03-27"},{"lineNumber":512,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":513,"author":{"gitId":"emilysim00"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: **Note**: If user accidentally add a comma after the last workout number such as ","lastModifiedDate":"2022-04-07"},{"lineNumber":514,"author":{"gitId":"emilysim00"},"content":"`plan /new grow my muscles /workouts 1, 2, 3, 1,`, the program will process it normally. This is by design and ","lastModifiedDate":"2022-04-08"},{"lineNumber":515,"author":{"gitId":"emilysim00"},"content":"not an abnormal behaviour.\u003c/span\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":516,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":517,"author":{"gitId":"Musfirahe0556596"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":518,"author":{"gitId":"TianaiYan"},"content":"### List a Plan: `plan /list`","lastModifiedDate":"2022-03-28"},{"lineNumber":519,"author":{"gitId":"Musfirahe0556596"},"content":"Displays all available plan names in the application\u0027s plan list.","lastModifiedDate":"2022-03-24"},{"lineNumber":520,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":521,"author":{"gitId":"Musfirahe0556596"},"content":"Format: `plan /list`","lastModifiedDate":"2022-03-24"},{"lineNumber":522,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":523,"author":{"gitId":"Musfirahe0556596"},"content":"**Example**\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":524,"author":{"gitId":"Musfirahe0556596"},"content":"To list the plan names, enter the following command:","lastModifiedDate":"2022-03-24"},{"lineNumber":525,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":526,"author":{"gitId":"Musfirahe0556596"},"content":"\u003e plan /list","lastModifiedDate":"2022-03-24"},{"lineNumber":527,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":528,"author":{"gitId":"Musfirahe0556596"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-24"},{"lineNumber":529,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":530,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":531,"author":{"gitId":"Musfirahe0556596"},"content":"Here are all your plan(s).","lastModifiedDate":"2022-03-24"},{"lineNumber":532,"author":{"gitId":"Musfirahe0556596"},"content":"To view each plan in detail, enter","lastModifiedDate":"2022-03-24"},{"lineNumber":533,"author":{"gitId":"Musfirahe0556596"},"content":"\u0027plan /details \u003cplan number in list\u003e\u0027.","lastModifiedDate":"2022-03-24"},{"lineNumber":534,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":535,"author":{"gitId":"TianaiYan"},"content":"1. plan a","lastModifiedDate":"2022-04-06"},{"lineNumber":536,"author":{"gitId":"TianaiYan"},"content":"2. plan b","lastModifiedDate":"2022-04-06"},{"lineNumber":537,"author":{"gitId":"TianaiYan"},"content":"3. grow my muscles","lastModifiedDate":"2022-04-06"},{"lineNumber":538,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":539,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":540,"author":{"gitId":"Musfirahe0556596"},"content":"In the current list of plans shown above, there are 3 plans available.","lastModifiedDate":"2022-04-06"},{"lineNumber":541,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":542,"author":{"gitId":"TianaiYan"},"content":"---","lastModifiedDate":"2022-03-28"},{"lineNumber":543,"author":{"gitId":"TianaiYan"},"content":"### List details of a Plan: `plan /details`","lastModifiedDate":"2022-03-28"},{"lineNumber":544,"author":{"gitId":"TianaiYan"},"content":"Lists all the workouts in a plan.","lastModifiedDate":"2022-03-28"},{"lineNumber":545,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":546,"author":{"gitId":"emilysim00"},"content":"Format: `plan /details \u003cplan index number\u003e`","lastModifiedDate":"2022-04-02"},{"lineNumber":547,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":548,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":549,"author":{"gitId":"emilysim00"},"content":"| Parameters                                     | Description                                                            |","lastModifiedDate":"2022-04-02"},{"lineNumber":550,"author":{"gitId":"Musfirahe0556596"},"content":"|------------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2022-04-06"},{"lineNumber":551,"author":{"gitId":"Musfirahe0556596"},"content":"| `\u003cplan index number\u003e`                          | The index number of the plan in the plan list to be viewed in details. |","lastModifiedDate":"2022-04-06"},{"lineNumber":552,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":553,"author":{"gitId":"emilysim00"},"content":"Click [here](#plan-commands) to have a better understanding of the parameters stated.","lastModifiedDate":"2022-04-02"},{"lineNumber":554,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":555,"author":{"gitId":"TianaiYan"},"content":"**Example**\u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":556,"author":{"gitId":"TianaiYan"},"content":"Now, the plan list contains the following plans:","lastModifiedDate":"2022-03-28"},{"lineNumber":557,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":558,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":559,"author":{"gitId":"TianaiYan"},"content":"Here are all your plan(s).","lastModifiedDate":"2022-03-28"},{"lineNumber":560,"author":{"gitId":"TianaiYan"},"content":"To view each plan in detail, enter","lastModifiedDate":"2022-03-28"},{"lineNumber":561,"author":{"gitId":"TianaiYan"},"content":"\u0027plan /details \u003cplan number in list\u003e\u0027.","lastModifiedDate":"2022-03-28"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":563,"author":{"gitId":"TianaiYan"},"content":"1. plan a","lastModifiedDate":"2022-04-06"},{"lineNumber":564,"author":{"gitId":"TianaiYan"},"content":"2. plan b","lastModifiedDate":"2022-04-06"},{"lineNumber":565,"author":{"gitId":"TianaiYan"},"content":"3. grow my muscles","lastModifiedDate":"2022-04-06"},{"lineNumber":566,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":567,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":568,"author":{"gitId":"TianaiYan"},"content":"To view details of plan with index number 3 from the list, enter the following command:\u003cbr/\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":569,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":570,"author":{"gitId":"TianaiYan"},"content":"\u003e plan /details 3","lastModifiedDate":"2022-03-28"},{"lineNumber":571,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":572,"author":{"gitId":"TianaiYan"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-28"},{"lineNumber":573,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":574,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":575,"author":{"gitId":"TianaiYan"},"content":"Here are the 4 workouts in [grow my muscles].","lastModifiedDate":"2022-04-06"},{"lineNumber":576,"author":{"gitId":"TianaiYan"},"content":"1. push up (10 reps)","lastModifiedDate":"2022-03-28"},{"lineNumber":577,"author":{"gitId":"TianaiYan"},"content":"2. sit up (10 reps)","lastModifiedDate":"2022-03-28"},{"lineNumber":578,"author":{"gitId":"TianaiYan"},"content":"3. pull up (10 reps)","lastModifiedDate":"2022-03-28"},{"lineNumber":579,"author":{"gitId":"TianaiYan"},"content":"4. push up (10 reps)","lastModifiedDate":"2022-03-28"},{"lineNumber":580,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":581,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":582,"author":{"gitId":"Musfirahe0556596"},"content":"All workouts in the \"grow my muscles\" plan will be displayed.","lastModifiedDate":"2022-04-06"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":584,"author":{"gitId":"TianaiYan"},"content":"---","lastModifiedDate":"2022-03-28"},{"lineNumber":585,"author":{"gitId":"TianaiYan"},"content":"### Delete a Plan: `plan /delete`","lastModifiedDate":"2022-03-28"},{"lineNumber":586,"author":{"gitId":"Musfirahe0556596"},"content":"Removes an existing plan from the plan list. Deleting a plan will also","lastModifiedDate":"2022-04-06"},{"lineNumber":587,"author":{"gitId":"Musfirahe0556596"},"content":"remove it from the days that it has been assigned to in your 7-day workout schedule.","lastModifiedDate":"2022-04-06"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":589,"author":{"gitId":"emilysim00"},"content":"Format: `plan /delete \u003cplan index number\u003e`","lastModifiedDate":"2022-04-02"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":591,"author":{"gitId":"TianaiYan"},"content":"| Parameters            | Description                                                  |","lastModifiedDate":"2022-03-28"},{"lineNumber":592,"author":{"gitId":"Musfirahe0556596"},"content":"|-----------------------|--------------------------------------------------------------|","lastModifiedDate":"2022-04-06"},{"lineNumber":593,"author":{"gitId":"Musfirahe0556596"},"content":"| `\u003cplan index number\u003e` | The index number of the plan in the plan list to be removed. |","lastModifiedDate":"2022-04-06"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":595,"author":{"gitId":"emilysim00"},"content":"Click [here](#plan-commands) to have a better understanding of the parameters stated.","lastModifiedDate":"2022-04-02"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":597,"author":{"gitId":"TianaiYan"},"content":"**Example**\u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":598,"author":{"gitId":"TianaiYan"},"content":"Initially, the plan list contains the following plans:","lastModifiedDate":"2022-03-28"},{"lineNumber":599,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":600,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":601,"author":{"gitId":"TianaiYan"},"content":"Here are all your plan(s).","lastModifiedDate":"2022-03-28"},{"lineNumber":602,"author":{"gitId":"TianaiYan"},"content":"To view each plan in detail, enter","lastModifiedDate":"2022-03-28"},{"lineNumber":603,"author":{"gitId":"TianaiYan"},"content":"\u0027plan /details \u003cplan number in list\u003e\u0027.","lastModifiedDate":"2022-03-28"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":605,"author":{"gitId":"TianaiYan"},"content":"1. plan a","lastModifiedDate":"2022-04-06"},{"lineNumber":606,"author":{"gitId":"TianaiYan"},"content":"2. plan b","lastModifiedDate":"2022-04-06"},{"lineNumber":607,"author":{"gitId":"TianaiYan"},"content":"3. grow my muscles","lastModifiedDate":"2022-04-06"},{"lineNumber":608,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":609,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":610,"author":{"gitId":"TianaiYan"},"content":"Plan is scheduled as follows:","lastModifiedDate":"2022-04-05"},{"lineNumber":611,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":612,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":614,"author":{"gitId":"TianaiYan"},"content":"                         WORKOUT SCHEDULE","lastModifiedDate":"2022-04-05"},{"lineNumber":615,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-04-05"},{"lineNumber":616,"author":{"gitId":"TianaiYan"},"content":"     Day       |            Plan Name","lastModifiedDate":"2022-04-05"},{"lineNumber":617,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-04-05"},{"lineNumber":618,"author":{"gitId":"TianaiYan"},"content":"      Monday   |        grow my muscles               ","lastModifiedDate":"2022-04-06"},{"lineNumber":619,"author":{"gitId":"TianaiYan"},"content":"     Tuesday   |            rest day                      ","lastModifiedDate":"2022-04-05"},{"lineNumber":620,"author":{"gitId":"TianaiYan"},"content":"   Wednesday   |            rest day                      ","lastModifiedDate":"2022-04-05"},{"lineNumber":621,"author":{"gitId":"TianaiYan"},"content":"    Thursday   |            rest day                      ","lastModifiedDate":"2022-04-05"},{"lineNumber":622,"author":{"gitId":"TianaiYan"},"content":"      Friday   |            rest day                      ","lastModifiedDate":"2022-04-05"},{"lineNumber":623,"author":{"gitId":"TianaiYan"},"content":"    Saturday   |            rest day                      ","lastModifiedDate":"2022-04-05"},{"lineNumber":624,"author":{"gitId":"TianaiYan"},"content":"      Sunday   |            rest day                      ","lastModifiedDate":"2022-04-05"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":626,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":627,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":628,"author":{"gitId":"TianaiYan"},"content":"Command to see the schedule is explained in [here](#view-schedule-schedule-list).","lastModifiedDate":"2022-04-05"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":630,"author":{"gitId":"TianaiYan"},"content":"To remove plan with index number 3 from the list, enter the following command:","lastModifiedDate":"2022-04-05"},{"lineNumber":631,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-04-05"},{"lineNumber":632,"author":{"gitId":"TianaiYan"},"content":"\u003e plan /delete 3","lastModifiedDate":"2022-04-05"},{"lineNumber":633,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-04-05"},{"lineNumber":634,"author":{"gitId":"TianaiYan"},"content":"**Expected Outcome**","lastModifiedDate":"2022-04-05"},{"lineNumber":635,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":636,"author":{"gitId":"TianaiYan"},"content":"![Expected Outcome For Delete Plan](images/expectedMessageForDeletePlan.png)\u003cbr/\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":637,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":638,"author":{"gitId":"TianaiYan"},"content":"Now, plan with index number 3 (grow my muscles) is removed from the plan list. If plan with index number 3","lastModifiedDate":"2022-04-06"},{"lineNumber":639,"author":{"gitId":"TianaiYan"},"content":"is not scheduled for any day, content in the red box will not be shown.","lastModifiedDate":"2022-04-05"},{"lineNumber":640,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":641,"author":{"gitId":"TianaiYan"},"content":"Now, running the `plan /list` command will show the plan list as follows:","lastModifiedDate":"2022-04-05"},{"lineNumber":642,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":643,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":644,"author":{"gitId":"TianaiYan"},"content":"Here are all your plan(s).","lastModifiedDate":"2022-03-28"},{"lineNumber":645,"author":{"gitId":"TianaiYan"},"content":"To view each plan in detail, enter","lastModifiedDate":"2022-03-28"},{"lineNumber":646,"author":{"gitId":"TianaiYan"},"content":"\u0027plan /details \u003cplan number in list\u003e\u0027.","lastModifiedDate":"2022-03-28"},{"lineNumber":647,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":648,"author":{"gitId":"Musfirahe0556596"},"content":"1. plan a","lastModifiedDate":"2022-04-06"},{"lineNumber":649,"author":{"gitId":"Musfirahe0556596"},"content":"2. plan b","lastModifiedDate":"2022-04-06"},{"lineNumber":650,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":651,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":652,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":653,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#table-of-contents\"\u003eBack to Table of Contents\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":654,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":655,"author":{"gitId":"TianaiYan"},"content":"---","lastModifiedDate":"2022-03-16"},{"lineNumber":656,"author":{"gitId":"emilysim00"},"content":"## Schedule Features","lastModifiedDate":"2022-03-27"},{"lineNumber":657,"author":{"gitId":"emilysim00"},"content":"### Update Schedule: `schedule /update`","lastModifiedDate":"2022-03-23"},{"lineNumber":658,"author":{"gitId":"Musfirahe0556596"},"content":"This feature allows you to schedule a plan for a particular day in the 7-day workout schedule. For example, if you have ","lastModifiedDate":"2022-04-06"},{"lineNumber":659,"author":{"gitId":"Musfirahe0556596"},"content":"created a plan named \"more muscles\", you can schedule this plan on a Monday. ","lastModifiedDate":"2022-04-06"},{"lineNumber":660,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":661,"author":{"gitId":"Musfirahe0556596"},"content":"One thing to take note of is that the current version of WerkIt! only allows you to schedule 1 plan for each day. If you ","lastModifiedDate":"2022-04-06"},{"lineNumber":662,"author":{"gitId":"emilysim00"},"content":"want to have multiple plans, you can simply create a new plan using the `plan /new` command to include all the workouts","lastModifiedDate":"2022-04-02"},{"lineNumber":663,"author":{"gitId":"emilysim00"},"content":"stated in those plans.","lastModifiedDate":"2022-04-02"},{"lineNumber":664,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":665,"author":{"gitId":"TianaiYan"},"content":"Format: `schedule /update \u003cday number\u003e \u003cplan index number\u003e`","lastModifiedDate":"2022-04-05"},{"lineNumber":666,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":667,"author":{"gitId":"emilysim00"},"content":"| Parameters            | Description                                                                                                          |","lastModifiedDate":"2022-03-23"},{"lineNumber":668,"author":{"gitId":"Musfirahe0556596"},"content":"|-----------------------|----------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-06"},{"lineNumber":669,"author":{"gitId":"Musfirahe0556596"},"content":"| `\u003cday number\u003e`        | Day number is within the range of 1 to 7. Day number 1 represents Monday, day number 2 represents Tuesday and so on. |","lastModifiedDate":"2022-04-06"},{"lineNumber":670,"author":{"gitId":"Musfirahe0556596"},"content":"| `\u003cplan index number\u003e` | Plan index number indicates the plan in the plan list to be assigned to the stated day.                              |","lastModifiedDate":"2022-04-06"},{"lineNumber":671,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":672,"author":{"gitId":"emilysim00"},"content":"Click [here](#schedule-commands) to have a better understanding of the parameters stated.","lastModifiedDate":"2022-04-02"},{"lineNumber":673,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":674,"author":{"gitId":"emilysim00"},"content":"**Example**","lastModifiedDate":"2022-03-23"},{"lineNumber":675,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":676,"author":{"gitId":"emilysim00"},"content":"Assume, the plan list contains the following plans:","lastModifiedDate":"2022-03-23"},{"lineNumber":677,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":678,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":679,"author":{"gitId":"emilysim00"},"content":"Here are all your plan(s).","lastModifiedDate":"2022-03-23"},{"lineNumber":680,"author":{"gitId":"emilysim00"},"content":"To view each plan in detail, enter \u0027plan /details \u003cplan number in list\u003e\u0027.","lastModifiedDate":"2022-03-23"},{"lineNumber":681,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":682,"author":{"gitId":"emilysim00"},"content":"1.arms","lastModifiedDate":"2022-03-23"},{"lineNumber":683,"author":{"gitId":"emilysim00"},"content":"2.stronger arms","lastModifiedDate":"2022-03-23"},{"lineNumber":684,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":685,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":686,"author":{"gitId":"emilysim00"},"content":"To update the plan schedule for Monday with plan 1, enter the following command:","lastModifiedDate":"2022-03-23"},{"lineNumber":687,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":688,"author":{"gitId":"emilysim00"},"content":"\u003e schedule /update 1 1","lastModifiedDate":"2022-03-23"},{"lineNumber":689,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":690,"author":{"gitId":"emilysim00"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-23"},{"lineNumber":691,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":692,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":693,"author":{"gitId":"emilysim00"},"content":"Alright, the following plan schedule has been created:","lastModifiedDate":"2022-03-23"},{"lineNumber":694,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":695,"author":{"gitId":"emilysim00"},"content":"\tMonday -- arms","lastModifiedDate":"2022-03-23"},{"lineNumber":696,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":697,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":698,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":699,"author":{"gitId":"emilysim00"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":700,"author":{"gitId":"emilysim00"},"content":"### View Schedule: `schedule /list`","lastModifiedDate":"2022-03-23"},{"lineNumber":701,"author":{"gitId":"Musfirahe0556596"},"content":"WerkIt! offers a 7-day workout plan schedule feature for you to schedule your desired plan for a particular day of the ","lastModifiedDate":"2022-04-06"},{"lineNumber":702,"author":{"gitId":"Musfirahe0556596"},"content":"week. The schedule displayed shows the plans that have been scheduled by you starting from the first day of the week, ","lastModifiedDate":"2022-04-06"},{"lineNumber":703,"author":{"gitId":"emilysim00"},"content":"Monday, to the last day of the week, Sunday. ","lastModifiedDate":"2022-04-02"},{"lineNumber":704,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":705,"author":{"gitId":"emilysim00"},"content":"Format: `schedule /list`","lastModifiedDate":"2022-03-23"},{"lineNumber":706,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":707,"author":{"gitId":"emilysim00"},"content":"**Example**","lastModifiedDate":"2022-03-23"},{"lineNumber":708,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":709,"author":{"gitId":"emilysim00"},"content":"To view all the plans scheduled for the week, enter the following command:","lastModifiedDate":"2022-03-23"},{"lineNumber":710,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":711,"author":{"gitId":"emilysim00"},"content":"\u003e schedule /list","lastModifiedDate":"2022-03-23"},{"lineNumber":712,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":713,"author":{"gitId":"emilysim00"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-23"},{"lineNumber":714,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":715,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":716,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":717,"author":{"gitId":"emilysim00"},"content":"                         WORKOUT SCHEDULE","lastModifiedDate":"2022-03-23"},{"lineNumber":718,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":719,"author":{"gitId":"emilysim00"},"content":"     Day       |            Plan Name","lastModifiedDate":"2022-03-23"},{"lineNumber":720,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":721,"author":{"gitId":"emilysim00"},"content":"      Monday   |              arms                          ","lastModifiedDate":"2022-03-23"},{"lineNumber":722,"author":{"gitId":"emilysim00"},"content":"     Tuesday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":723,"author":{"gitId":"emilysim00"},"content":"   Wednesday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":724,"author":{"gitId":"emilysim00"},"content":"    Thursday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":725,"author":{"gitId":"emilysim00"},"content":"      Friday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":726,"author":{"gitId":"emilysim00"},"content":"    Saturday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":727,"author":{"gitId":"emilysim00"},"content":"      Sunday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":728,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":729,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":730,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":731,"author":{"gitId":"Musfirahe0556596"},"content":"By default, if no plan is being scheduled for the day, it is a rest day. From the expected outcome, ","lastModifiedDate":"2022-04-06"},{"lineNumber":732,"author":{"gitId":"Musfirahe0556596"},"content":"only the \"arms\" plan is scheduled for Monday.","lastModifiedDate":"2022-04-06"},{"lineNumber":733,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":734,"author":{"gitId":"emilysim00"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":735,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":736,"author":{"gitId":"emilysim00"},"content":"### Clear Schedule For A Day: `schedule /clear`","lastModifiedDate":"2022-03-23"},{"lineNumber":737,"author":{"gitId":"emilysim00"},"content":"Remove a plan for a particular day of the week.","lastModifiedDate":"2022-03-23"},{"lineNumber":738,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":739,"author":{"gitId":"emilysim00"},"content":"Format: `schedule /clear \u003cday number\u003e`","lastModifiedDate":"2022-03-23"},{"lineNumber":740,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":741,"author":{"gitId":"emilysim00"},"content":"| Parameters      | Description                                                                                                          |","lastModifiedDate":"2022-03-23"},{"lineNumber":742,"author":{"gitId":"Musfirahe0556596"},"content":"|-----------------|----------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-06"},{"lineNumber":743,"author":{"gitId":"Musfirahe0556596"},"content":"| `\u003cday number\u003e`  | Day number is within the range of 1 to 7. Day number 1 represents Monday, day number 2 represents Tuesday and so on. |","lastModifiedDate":"2022-04-06"},{"lineNumber":744,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":745,"author":{"gitId":"emilysim00"},"content":"Click [here](#schedule-commands) to have a better understanding of the parameters stated.","lastModifiedDate":"2022-04-02"},{"lineNumber":746,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":747,"author":{"gitId":"emilysim00"},"content":"**Example**","lastModifiedDate":"2022-03-23"},{"lineNumber":748,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":749,"author":{"gitId":"emilysim00"},"content":"Assume, the schedule for the week contains the following plans:","lastModifiedDate":"2022-03-23"},{"lineNumber":750,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":751,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":752,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":753,"author":{"gitId":"emilysim00"},"content":"                         WORKOUT SCHEDULE","lastModifiedDate":"2022-03-23"},{"lineNumber":754,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":755,"author":{"gitId":"emilysim00"},"content":"     Day       |            Plan Name","lastModifiedDate":"2022-03-23"},{"lineNumber":756,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":757,"author":{"gitId":"emilysim00"},"content":"      Monday   |              arms                          ","lastModifiedDate":"2022-03-23"},{"lineNumber":758,"author":{"gitId":"emilysim00"},"content":"     Tuesday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":759,"author":{"gitId":"emilysim00"},"content":"   Wednesday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":760,"author":{"gitId":"emilysim00"},"content":"    Thursday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":761,"author":{"gitId":"emilysim00"},"content":"      Friday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":762,"author":{"gitId":"emilysim00"},"content":"    Saturday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":763,"author":{"gitId":"emilysim00"},"content":"      Sunday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":764,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":765,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":766,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":767,"author":{"gitId":"Musfirahe0556596"},"content":"To clear the plan scheduled on Monday, enter the following command:","lastModifiedDate":"2022-04-06"},{"lineNumber":768,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":769,"author":{"gitId":"emilysim00"},"content":"\u003e schedule /clear 1","lastModifiedDate":"2022-03-23"},{"lineNumber":770,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":771,"author":{"gitId":"emilysim00"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-23"},{"lineNumber":772,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":773,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":774,"author":{"gitId":"emilysim00"},"content":"Plan has been cleared for Monday.","lastModifiedDate":"2022-04-07"},{"lineNumber":775,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":776,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":777,"author":{"gitId":"Musfirahe0556596"},"content":"After a plan has been cleared for a particular day, the day will be shown as a rest day.","lastModifiedDate":"2022-04-06"},{"lineNumber":778,"author":{"gitId":"emilysim00"},"content":"To view the changes enter command ```schedule /list```. ","lastModifiedDate":"2022-03-23"},{"lineNumber":779,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":780,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":781,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":782,"author":{"gitId":"emilysim00"},"content":"                         WORKOUT SCHEDULE","lastModifiedDate":"2022-03-23"},{"lineNumber":783,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":784,"author":{"gitId":"emilysim00"},"content":"     Day       |            Plan Name","lastModifiedDate":"2022-03-23"},{"lineNumber":785,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":786,"author":{"gitId":"emilysim00"},"content":"      Monday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":787,"author":{"gitId":"emilysim00"},"content":"     Tuesday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":788,"author":{"gitId":"emilysim00"},"content":"   Wednesday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":789,"author":{"gitId":"emilysim00"},"content":"    Thursday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":790,"author":{"gitId":"emilysim00"},"content":"      Friday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":791,"author":{"gitId":"emilysim00"},"content":"    Saturday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":792,"author":{"gitId":"emilysim00"},"content":"      Sunday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":793,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":794,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":795,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":796,"author":{"gitId":"emilysim00"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":797,"author":{"gitId":"emilysim00"},"content":"### Clear Schedule For The Week: `schedule /clearall`","lastModifiedDate":"2022-03-23"},{"lineNumber":798,"author":{"gitId":"emilysim00"},"content":"Remove all plans scheduled for the week.","lastModifiedDate":"2022-03-23"},{"lineNumber":799,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":800,"author":{"gitId":"emilysim00"},"content":"Format: `schedule /clearall`","lastModifiedDate":"2022-03-23"},{"lineNumber":801,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":802,"author":{"gitId":"emilysim00"},"content":"**Example**","lastModifiedDate":"2022-03-23"},{"lineNumber":803,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":804,"author":{"gitId":"emilysim00"},"content":"Assume, the schedule for the week contains the following plans:","lastModifiedDate":"2022-03-23"},{"lineNumber":805,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":806,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":807,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":808,"author":{"gitId":"emilysim00"},"content":"                         WORKOUT SCHEDULE","lastModifiedDate":"2022-03-23"},{"lineNumber":809,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":810,"author":{"gitId":"emilysim00"},"content":"     Day       |            Plan Name","lastModifiedDate":"2022-03-23"},{"lineNumber":811,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":812,"author":{"gitId":"emilysim00"},"content":"      Monday   |              arms                          ","lastModifiedDate":"2022-03-23"},{"lineNumber":813,"author":{"gitId":"emilysim00"},"content":"     Tuesday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":814,"author":{"gitId":"emilysim00"},"content":"   Wednesday   |         stronger arms                 ","lastModifiedDate":"2022-03-23"},{"lineNumber":815,"author":{"gitId":"emilysim00"},"content":"    Thursday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":816,"author":{"gitId":"emilysim00"},"content":"      Friday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":817,"author":{"gitId":"emilysim00"},"content":"    Saturday   |         stronger arms                 ","lastModifiedDate":"2022-03-23"},{"lineNumber":818,"author":{"gitId":"emilysim00"},"content":"      Sunday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":819,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":820,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":821,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":822,"author":{"gitId":"emilysim00"},"content":"To clear all plans scheduled for the week, enter the following command:","lastModifiedDate":"2022-03-23"},{"lineNumber":823,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":824,"author":{"gitId":"emilysim00"},"content":"\u003e schedule /clearall","lastModifiedDate":"2022-03-23"},{"lineNumber":825,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":826,"author":{"gitId":"emilysim00"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-23"},{"lineNumber":827,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":828,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":829,"author":{"gitId":"emilysim00"},"content":"Schedule has been cleared and reset.","lastModifiedDate":"2022-04-07"},{"lineNumber":830,"author":{"gitId":"emilysim00"},"content":"There is no plan scheduled for any day.","lastModifiedDate":"2022-03-23"},{"lineNumber":831,"author":{"gitId":"emilysim00"},"content":"To add plan for any day, enter:","lastModifiedDate":"2022-03-23"},{"lineNumber":832,"author":{"gitId":"emilysim00"},"content":"schedule /update \u003cday number [1-7]\u003e \u003cplan number\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":833,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":834,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":835,"author":{"gitId":"Musfirahe0556596"},"content":"After all the plans have been cleared, all days will be shown as rest days.","lastModifiedDate":"2022-04-06"},{"lineNumber":836,"author":{"gitId":"emilysim00"},"content":"To view the changes enter command ```schedule /list```.","lastModifiedDate":"2022-03-23"},{"lineNumber":837,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":838,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":839,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":840,"author":{"gitId":"emilysim00"},"content":"                         WORKOUT SCHEDULE","lastModifiedDate":"2022-03-23"},{"lineNumber":841,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":842,"author":{"gitId":"emilysim00"},"content":"     Day       |            Plan Name","lastModifiedDate":"2022-03-23"},{"lineNumber":843,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":844,"author":{"gitId":"emilysim00"},"content":"      Monday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":845,"author":{"gitId":"emilysim00"},"content":"     Tuesday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":846,"author":{"gitId":"emilysim00"},"content":"   Wednesday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":847,"author":{"gitId":"emilysim00"},"content":"    Thursday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":848,"author":{"gitId":"emilysim00"},"content":"      Friday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":849,"author":{"gitId":"emilysim00"},"content":"    Saturday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":850,"author":{"gitId":"emilysim00"},"content":"      Sunday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":851,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":852,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":853,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":854,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":855,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#table-of-contents\"\u003eBack to Table of Contents\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":856,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":857,"author":{"gitId":"emilysim00"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":858,"author":{"gitId":"emilysim00"},"content":"## Search Features","lastModifiedDate":"2022-03-27"},{"lineNumber":859,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":860,"author":{"gitId":"a1021492980"},"content":"\u003cspan class\u003d\"info box\"\u003e:memo: **Heads Up!** As of the current version of WerkIt!, multiple trailing whitespaces in your ","lastModifiedDate":"2022-04-10"},{"lineNumber":861,"author":{"gitId":"a1021492980"},"content":"search query will be removed. If your search query only has whitespaces, it will be truncated to a single whitespace.\u003c/span\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":862,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":863,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"info box\"\u003e:memo: **Heads Up!** Your search keywords are case insensitive.\u003c/span\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":864,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":865,"author":{"gitId":"a1021492980"},"content":"### Search For Exercise: `search /exercise`","lastModifiedDate":"2022-03-24"},{"lineNumber":866,"author":{"gitId":"a1021492980"},"content":"Find all exercises containing the specified keywords.","lastModifiedDate":"2022-03-24"},{"lineNumber":867,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":868,"author":{"gitId":"a1021492980"},"content":"Format: `search /exercise \u003cexercise keyword\u003e`","lastModifiedDate":"2022-03-24"},{"lineNumber":869,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":870,"author":{"gitId":"emilysim00"},"content":"| Parameters           | Description                                                         |","lastModifiedDate":"2022-03-27"},{"lineNumber":871,"author":{"gitId":"emilysim00"},"content":"|----------------------|---------------------------------------------------------------------|","lastModifiedDate":"2022-03-27"},{"lineNumber":872,"author":{"gitId":"emilysim00"},"content":"| `\u003cexercise keyword\u003e` | The keyword to be matched when searching through the exercise list. |","lastModifiedDate":"2022-03-27"},{"lineNumber":873,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":874,"author":{"gitId":"emilysim00"},"content":"Click [here](#search-commands) to have a better understanding of the parameters stated.","lastModifiedDate":"2022-04-02"},{"lineNumber":875,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":876,"author":{"gitId":"a1021492980"},"content":"**Example**","lastModifiedDate":"2022-03-24"},{"lineNumber":877,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":878,"author":{"gitId":"a1021492980"},"content":"Assume, the exercise list contains the following exercises:","lastModifiedDate":"2022-03-24"},{"lineNumber":879,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":880,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":881,"author":{"gitId":"a1021492980"},"content":"1. push up","lastModifiedDate":"2022-03-24"},{"lineNumber":882,"author":{"gitId":"a1021492980"},"content":"2. bicep curl","lastModifiedDate":"2022-03-24"},{"lineNumber":883,"author":{"gitId":"a1021492980"},"content":"3. pull up","lastModifiedDate":"2022-03-24"},{"lineNumber":884,"author":{"gitId":"a1021492980"},"content":"4. squat","lastModifiedDate":"2022-03-24"},{"lineNumber":885,"author":{"gitId":"a1021492980"},"content":"5. lunge","lastModifiedDate":"2022-03-24"},{"lineNumber":886,"author":{"gitId":"a1021492980"},"content":"6. hip thrust","lastModifiedDate":"2022-03-24"},{"lineNumber":887,"author":{"gitId":"a1021492980"},"content":"7. sit up","lastModifiedDate":"2022-03-24"},{"lineNumber":888,"author":{"gitId":"a1021492980"},"content":"8. crunch","lastModifiedDate":"2022-03-24"},{"lineNumber":889,"author":{"gitId":"a1021492980"},"content":"9. russian twist","lastModifiedDate":"2022-03-24"},{"lineNumber":890,"author":{"gitId":"a1021492980"},"content":"10. running","lastModifiedDate":"2022-03-24"},{"lineNumber":891,"author":{"gitId":"a1021492980"},"content":"11. swimming","lastModifiedDate":"2022-03-24"},{"lineNumber":892,"author":{"gitId":"a1021492980"},"content":"12. jumping jack","lastModifiedDate":"2022-03-24"},{"lineNumber":893,"author":{"gitId":"a1021492980"},"content":"13. burpee","lastModifiedDate":"2022-03-24"},{"lineNumber":894,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":895,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":896,"author":{"gitId":"a1021492980"},"content":"To search for exercises containing keywords \"up\", enter the following command:","lastModifiedDate":"2022-03-24"},{"lineNumber":897,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":898,"author":{"gitId":"a1021492980"},"content":"\u003e search /exercise up","lastModifiedDate":"2022-03-24"},{"lineNumber":899,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":900,"author":{"gitId":"a1021492980"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-24"},{"lineNumber":901,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":902,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":903,"author":{"gitId":"a1021492980"},"content":"The exercise(s) containing keywords [up] is(are) listed below.","lastModifiedDate":"2022-03-24"},{"lineNumber":904,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":905,"author":{"gitId":"a1021492980"},"content":"1. push up","lastModifiedDate":"2022-03-24"},{"lineNumber":906,"author":{"gitId":"a1021492980"},"content":"2. pull up","lastModifiedDate":"2022-03-24"},{"lineNumber":907,"author":{"gitId":"a1021492980"},"content":"3. sit up","lastModifiedDate":"2022-03-24"},{"lineNumber":908,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":909,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":910,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":911,"author":{"gitId":"a1021492980"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":912,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":913,"author":{"gitId":"a1021492980"},"content":"### Search For Workout: `search /workout`","lastModifiedDate":"2022-03-24"},{"lineNumber":914,"author":{"gitId":"a1021492980"},"content":"Find all workouts containing the specified keywords or number of reps.","lastModifiedDate":"2022-03-24"},{"lineNumber":915,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":916,"author":{"gitId":"a1021492980"},"content":"Format: `search /workout \u003cexercise keyword or number of reps\u003e`","lastModifiedDate":"2022-03-24"},{"lineNumber":917,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":918,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":919,"author":{"gitId":"emilysim00"},"content":"| Parameters                             | Description                                                                  |","lastModifiedDate":"2022-03-27"},{"lineNumber":920,"author":{"gitId":"emilysim00"},"content":"|----------------------------------------|------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-27"},{"lineNumber":921,"author":{"gitId":"emilysim00"},"content":"| `\u003cexercise keyword or number of reps\u003e` | The keyword or number to be matched when searching through the workout list. |","lastModifiedDate":"2022-03-27"},{"lineNumber":922,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":923,"author":{"gitId":"emilysim00"},"content":"Click [here](#search-commands) to have a better understanding of the parameters stated.","lastModifiedDate":"2022-04-02"},{"lineNumber":924,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":925,"author":{"gitId":"a1021492980"},"content":"**Example**","lastModifiedDate":"2022-03-24"},{"lineNumber":926,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":927,"author":{"gitId":"a1021492980"},"content":"Assume, the workout list contains the following workouts:","lastModifiedDate":"2022-03-24"},{"lineNumber":928,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":929,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":930,"author":{"gitId":"a1021492980"},"content":"1. pull up (10 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":931,"author":{"gitId":"a1021492980"},"content":"2. push up (1455 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":932,"author":{"gitId":"a1021492980"},"content":"3. crunch (10 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":933,"author":{"gitId":"a1021492980"},"content":"4. squat (25 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":934,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":935,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":936,"author":{"gitId":"a1021492980"},"content":"To search for workouts containing keywords \"a\", enter the following command:","lastModifiedDate":"2022-03-24"},{"lineNumber":937,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":938,"author":{"gitId":"a1021492980"},"content":"\u003e search /workout a","lastModifiedDate":"2022-03-24"},{"lineNumber":939,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":940,"author":{"gitId":"a1021492980"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-24"},{"lineNumber":941,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":942,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":943,"author":{"gitId":"a1021492980"},"content":"The workout(s) containing keywords [a] is(are) listed below.","lastModifiedDate":"2022-03-24"},{"lineNumber":944,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":945,"author":{"gitId":"a1021492980"},"content":"1. squat (25 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":946,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":947,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":948,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":949,"author":{"gitId":"a1021492980"},"content":"To search for workouts with number of reps \u003d 10, enter the following command:","lastModifiedDate":"2022-03-24"},{"lineNumber":950,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":951,"author":{"gitId":"a1021492980"},"content":"\u003e search /workout 10","lastModifiedDate":"2022-03-24"},{"lineNumber":952,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":953,"author":{"gitId":"a1021492980"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-24"},{"lineNumber":954,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":955,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":956,"author":{"gitId":"a1021492980"},"content":"The workout(s) with reps \u003d 10 is(are) listed below.","lastModifiedDate":"2022-03-24"},{"lineNumber":957,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":958,"author":{"gitId":"a1021492980"},"content":"1. pull up (10 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":959,"author":{"gitId":"a1021492980"},"content":"2. crunch (10 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":960,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":961,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":962,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":963,"author":{"gitId":"a1021492980"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":964,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":965,"author":{"gitId":"a1021492980"},"content":"### Search For Plan: `search /plan`","lastModifiedDate":"2022-03-24"},{"lineNumber":966,"author":{"gitId":"a1021492980"},"content":"Find all plans containing the specified keywords.","lastModifiedDate":"2022-03-24"},{"lineNumber":967,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":968,"author":{"gitId":"a1021492980"},"content":"Format: `search /plan \u003cplan keyword\u003e`","lastModifiedDate":"2022-03-24"},{"lineNumber":969,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":970,"author":{"gitId":"emilysim00"},"content":"| Parameters       | Description                                                     |","lastModifiedDate":"2022-03-27"},{"lineNumber":971,"author":{"gitId":"emilysim00"},"content":"|------------------|-----------------------------------------------------------------|","lastModifiedDate":"2022-03-27"},{"lineNumber":972,"author":{"gitId":"emilysim00"},"content":"| `\u003cplan keyword\u003e` | The keyword to be matched when searching through the plan list. |","lastModifiedDate":"2022-03-27"},{"lineNumber":973,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":974,"author":{"gitId":"emilysim00"},"content":"Click [here](#search-commands) to have a better understanding of the parameters stated.","lastModifiedDate":"2022-04-02"},{"lineNumber":975,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":976,"author":{"gitId":"a1021492980"},"content":"**Example**","lastModifiedDate":"2022-03-24"},{"lineNumber":977,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":978,"author":{"gitId":"a1021492980"},"content":"Assume, the plan list contains the following plans:","lastModifiedDate":"2022-03-24"},{"lineNumber":979,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":980,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":981,"author":{"gitId":"a1021492980"},"content":"Here are all your plan(s).","lastModifiedDate":"2022-03-24"},{"lineNumber":982,"author":{"gitId":"a1021492980"},"content":"To view each plan in detail, enter","lastModifiedDate":"2022-03-24"},{"lineNumber":983,"author":{"gitId":"a1021492980"},"content":"\u0027plan /details \u003cplan number in list\u003e\u0027.","lastModifiedDate":"2022-03-24"},{"lineNumber":984,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":985,"author":{"gitId":"a1021492980"},"content":"1. grow my muscles","lastModifiedDate":"2022-03-24"},{"lineNumber":986,"author":{"gitId":"a1021492980"},"content":"2. arms","lastModifiedDate":"2022-03-24"},{"lineNumber":987,"author":{"gitId":"a1021492980"},"content":"3. legs","lastModifiedDate":"2022-03-24"},{"lineNumber":988,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":989,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":990,"author":{"gitId":"a1021492980"},"content":"To search for plans containing keywords \"e\", enter the following command:","lastModifiedDate":"2022-03-24"},{"lineNumber":991,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":992,"author":{"gitId":"a1021492980"},"content":"\u003e search /plan e","lastModifiedDate":"2022-03-24"},{"lineNumber":993,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":994,"author":{"gitId":"a1021492980"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-24"},{"lineNumber":995,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":996,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":997,"author":{"gitId":"a1021492980"},"content":"The plan(s) containing keywords [e] is(are) listed below.","lastModifiedDate":"2022-03-24"},{"lineNumber":998,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":999,"author":{"gitId":"a1021492980"},"content":"1. grow my muscles","lastModifiedDate":"2022-03-24"},{"lineNumber":1000,"author":{"gitId":"a1021492980"},"content":"2. legs","lastModifiedDate":"2022-03-24"},{"lineNumber":1001,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1002,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":1003,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":1004,"author":{"gitId":"a1021492980"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":1005,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":1006,"author":{"gitId":"a1021492980"},"content":"### Search For All: `search /all`","lastModifiedDate":"2022-03-24"},{"lineNumber":1007,"author":{"gitId":"a1021492980"},"content":"Find all exercises, workouts and plans containing the specified keywords.","lastModifiedDate":"2022-03-24"},{"lineNumber":1008,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":1009,"author":{"gitId":"a1021492980"},"content":"Format: `search /all \u003ckeyword\u003e`","lastModifiedDate":"2022-03-24"},{"lineNumber":1010,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":1011,"author":{"gitId":"emilysim00"},"content":"| Parameters  | Description                                                                            |","lastModifiedDate":"2022-03-27"},{"lineNumber":1012,"author":{"gitId":"emilysim00"},"content":"|-------------|----------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-02"},{"lineNumber":1013,"author":{"gitId":"emilysim00"},"content":"| `\u003ckeyword\u003e` | The keyword to be matched when searching through the exercise, workout and plan lists. |","lastModifiedDate":"2022-04-02"},{"lineNumber":1014,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":1015,"author":{"gitId":"emilysim00"},"content":"Click [here](#search-commands) to have a better understanding of the parameters stated.","lastModifiedDate":"2022-04-02"},{"lineNumber":1016,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":1017,"author":{"gitId":"a1021492980"},"content":"**Example**","lastModifiedDate":"2022-03-24"},{"lineNumber":1018,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":1019,"author":{"gitId":"a1021492980"},"content":"Assume, the exercise list contains the following exercises:","lastModifiedDate":"2022-03-24"},{"lineNumber":1020,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":1021,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1022,"author":{"gitId":"a1021492980"},"content":"1. push up","lastModifiedDate":"2022-03-24"},{"lineNumber":1023,"author":{"gitId":"a1021492980"},"content":"2. bicep curl","lastModifiedDate":"2022-03-24"},{"lineNumber":1024,"author":{"gitId":"a1021492980"},"content":"3. pull up","lastModifiedDate":"2022-03-24"},{"lineNumber":1025,"author":{"gitId":"a1021492980"},"content":"4. squat","lastModifiedDate":"2022-03-24"},{"lineNumber":1026,"author":{"gitId":"a1021492980"},"content":"5. lunge","lastModifiedDate":"2022-03-24"},{"lineNumber":1027,"author":{"gitId":"a1021492980"},"content":"6. hip thrust","lastModifiedDate":"2022-03-24"},{"lineNumber":1028,"author":{"gitId":"a1021492980"},"content":"7. sit up","lastModifiedDate":"2022-03-24"},{"lineNumber":1029,"author":{"gitId":"a1021492980"},"content":"8. crunch","lastModifiedDate":"2022-03-24"},{"lineNumber":1030,"author":{"gitId":"a1021492980"},"content":"9. russian twist","lastModifiedDate":"2022-03-24"},{"lineNumber":1031,"author":{"gitId":"a1021492980"},"content":"10. running","lastModifiedDate":"2022-03-24"},{"lineNumber":1032,"author":{"gitId":"a1021492980"},"content":"11. swimming","lastModifiedDate":"2022-03-24"},{"lineNumber":1033,"author":{"gitId":"a1021492980"},"content":"12. jumping jack","lastModifiedDate":"2022-03-24"},{"lineNumber":1034,"author":{"gitId":"a1021492980"},"content":"13. burpee","lastModifiedDate":"2022-03-24"},{"lineNumber":1035,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1036,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":1037,"author":{"gitId":"a1021492980"},"content":"and the workout list contains the following workouts:","lastModifiedDate":"2022-03-24"},{"lineNumber":1038,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":1039,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1040,"author":{"gitId":"a1021492980"},"content":"1. pull up (10 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":1041,"author":{"gitId":"a1021492980"},"content":"2. push up (1455 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":1042,"author":{"gitId":"a1021492980"},"content":"3. crunch (10 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":1043,"author":{"gitId":"a1021492980"},"content":"4. squat (25 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":1044,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1045,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":1046,"author":{"gitId":"a1021492980"},"content":"and the plan list contains the following plans:","lastModifiedDate":"2022-03-24"},{"lineNumber":1047,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":1048,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1049,"author":{"gitId":"a1021492980"},"content":"1. grow my muscles","lastModifiedDate":"2022-03-24"},{"lineNumber":1050,"author":{"gitId":"a1021492980"},"content":"2. arms","lastModifiedDate":"2022-03-24"},{"lineNumber":1051,"author":{"gitId":"a1021492980"},"content":"3. legs","lastModifiedDate":"2022-03-24"},{"lineNumber":1052,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1053,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":1054,"author":{"gitId":"a1021492980"},"content":"To search for everything containing keywords \"a\", enter the following","lastModifiedDate":"2022-03-24"},{"lineNumber":1055,"author":{"gitId":"a1021492980"},"content":"command:","lastModifiedDate":"2022-03-24"},{"lineNumber":1056,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":1057,"author":{"gitId":"a1021492980"},"content":"\u003e search /all a","lastModifiedDate":"2022-03-24"},{"lineNumber":1058,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":1059,"author":{"gitId":"a1021492980"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-24"},{"lineNumber":1060,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":1061,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1062,"author":{"gitId":"a1021492980"},"content":"The exercise(s) containing keywords [a] is(are) listed below.","lastModifiedDate":"2022-03-24"},{"lineNumber":1063,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1064,"author":{"gitId":"a1021492980"},"content":"1. squat","lastModifiedDate":"2022-03-24"},{"lineNumber":1065,"author":{"gitId":"a1021492980"},"content":"2. russian twist","lastModifiedDate":"2022-03-24"},{"lineNumber":1066,"author":{"gitId":"a1021492980"},"content":"3. jumping jack","lastModifiedDate":"2022-03-24"},{"lineNumber":1067,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1068,"author":{"gitId":"a1021492980"},"content":"The workout(s) containing keywords [a] is(are) listed below.","lastModifiedDate":"2022-03-24"},{"lineNumber":1069,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1070,"author":{"gitId":"a1021492980"},"content":"1. squat (25 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":1071,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1072,"author":{"gitId":"a1021492980"},"content":"The plan(s) containing keywords [a] is(are) listed below.","lastModifiedDate":"2022-03-24"},{"lineNumber":1073,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1074,"author":{"gitId":"a1021492980"},"content":"1. arms","lastModifiedDate":"2022-03-24"},{"lineNumber":1075,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1076,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":1077,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":1078,"author":{"gitId":"a1021492980"},"content":"To search for everything containing keywords 10, enter the following","lastModifiedDate":"2022-03-24"},{"lineNumber":1079,"author":{"gitId":"a1021492980"},"content":"command:","lastModifiedDate":"2022-03-24"},{"lineNumber":1080,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":1081,"author":{"gitId":"a1021492980"},"content":"\u003e search /all 10","lastModifiedDate":"2022-03-24"},{"lineNumber":1082,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":1083,"author":{"gitId":"a1021492980"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-24"},{"lineNumber":1084,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":1085,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1086,"author":{"gitId":"a1021492980"},"content":"Sorry, no matching exercise found.","lastModifiedDate":"2022-03-24"},{"lineNumber":1087,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1088,"author":{"gitId":"a1021492980"},"content":"The workout(s) with reps \u003d 10 is(are) listed below.","lastModifiedDate":"2022-03-24"},{"lineNumber":1089,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1090,"author":{"gitId":"a1021492980"},"content":"1. pull up (10 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":1091,"author":{"gitId":"a1021492980"},"content":"2. crunch (10 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":1092,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1093,"author":{"gitId":"a1021492980"},"content":"Sorry, no matching plan found.","lastModifiedDate":"2022-03-24"},{"lineNumber":1094,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1095,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":1096,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":1097,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#table-of-contents\"\u003eBack to Table of Contents\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1098,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1099,"author":{"gitId":"a1021492980"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":1100,"author":{"gitId":"emilysim00"},"content":"## Help Feature","lastModifiedDate":"2022-03-27"},{"lineNumber":1101,"author":{"gitId":"a1021492980"},"content":"### View Help: `help`","lastModifiedDate":"2022-03-20"},{"lineNumber":1102,"author":{"gitId":"a1021492980"},"content":"Lists all the commands with examples.","lastModifiedDate":"2022-03-20"},{"lineNumber":1103,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":1104,"author":{"gitId":"a1021492980"},"content":"Format: `help`","lastModifiedDate":"2022-03-20"},{"lineNumber":1105,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":1106,"author":{"gitId":"a1021492980"},"content":"**Example**","lastModifiedDate":"2022-03-20"},{"lineNumber":1107,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-20"},{"lineNumber":1108,"author":{"gitId":"a1021492980"},"content":"\u003e help","lastModifiedDate":"2022-03-20"},{"lineNumber":1109,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-20"},{"lineNumber":1110,"author":{"gitId":"a1021492980"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-20"},{"lineNumber":1111,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-20"},{"lineNumber":1112,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-20"},{"lineNumber":1113,"author":{"gitId":"a1021492980"},"content":"\t To view all exercises available, please enter:","lastModifiedDate":"2022-03-20"},{"lineNumber":1114,"author":{"gitId":"a1021492980"},"content":"\t exercise /list","lastModifiedDate":"2022-03-20"},{"lineNumber":1115,"author":{"gitId":"a1021492980"},"content":"\t This will print all the exercises available.","lastModifiedDate":"2022-03-20"},{"lineNumber":1116,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1117,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1118,"author":{"gitId":"a1021492980"},"content":"\t To view all workouts, please enter:","lastModifiedDate":"2022-03-24"},{"lineNumber":1119,"author":{"gitId":"a1021492980"},"content":"\t workout /list","lastModifiedDate":"2022-03-24"},{"lineNumber":1120,"author":{"gitId":"a1021492980"},"content":"\t This will print all the existing workouts.","lastModifiedDate":"2022-03-24"},{"lineNumber":1121,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-20"},{"lineNumber":1122,"author":{"gitId":"a1021492980"},"content":"\t To add a workout, please enter: ","lastModifiedDate":"2022-03-20"},{"lineNumber":1123,"author":{"gitId":"a1021492980"},"content":"\t workout /new \u003cexercise name\u003e /reps \u003cno. of repetitions\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":1124,"author":{"gitId":"a1021492980"},"content":"\t Example: ","lastModifiedDate":"2022-03-20"},{"lineNumber":1125,"author":{"gitId":"a1021492980"},"content":"\t workout /new push up /reps 10","lastModifiedDate":"2022-03-20"},{"lineNumber":1126,"author":{"gitId":"a1021492980"},"content":"\t This will add a workout with 10 reps of push up","lastModifiedDate":"2022-03-24"},{"lineNumber":1127,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-20"},{"lineNumber":1128,"author":{"gitId":"a1021492980"},"content":"\t To delete a workout, please enter: ","lastModifiedDate":"2022-03-20"},{"lineNumber":1129,"author":{"gitId":"a1021492980"},"content":"\t workout /delete \u003cindex of workout\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":1130,"author":{"gitId":"a1021492980"},"content":"\t Example: ","lastModifiedDate":"2022-03-20"},{"lineNumber":1131,"author":{"gitId":"a1021492980"},"content":"\t workout /delete 1","lastModifiedDate":"2022-03-20"},{"lineNumber":1132,"author":{"gitId":"a1021492980"},"content":"\t This will delete the workout with index 1 if exists.","lastModifiedDate":"2022-03-20"},{"lineNumber":1133,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-20"},{"lineNumber":1134,"author":{"gitId":"a1021492980"},"content":"\t To update a workout, please enter: ","lastModifiedDate":"2022-03-20"},{"lineNumber":1135,"author":{"gitId":"a1021492980"},"content":"\t workout /update \u003cindex of workout\u003e \u003cquantity\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":1136,"author":{"gitId":"a1021492980"},"content":"\t Example: ","lastModifiedDate":"2022-03-20"},{"lineNumber":1137,"author":{"gitId":"a1021492980"},"content":"\t workout /update 1 15","lastModifiedDate":"2022-03-20"},{"lineNumber":1138,"author":{"gitId":"a1021492980"},"content":"\t This will update the workout with index 1 to 15 reps if exists.","lastModifiedDate":"2022-03-20"},{"lineNumber":1139,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1140,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1141,"author":{"gitId":"a1021492980"},"content":"\t To view all plans, please enter:","lastModifiedDate":"2022-03-24"},{"lineNumber":1142,"author":{"gitId":"a1021492980"},"content":"\t plan /list","lastModifiedDate":"2022-03-24"},{"lineNumber":1143,"author":{"gitId":"a1021492980"},"content":"\t This will print all the existing plans.","lastModifiedDate":"2022-03-24"},{"lineNumber":1144,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1145,"author":{"gitId":"a1021492980"},"content":"\t To view each plan in detail, please enter:","lastModifiedDate":"2022-03-24"},{"lineNumber":1146,"author":{"gitId":"a1021492980"},"content":"\t plan /details \u003cplan index in list\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":1147,"author":{"gitId":"a1021492980"},"content":"\t This will print all the workouts in the plan of given index.","lastModifiedDate":"2022-03-24"},{"lineNumber":1148,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1149,"author":{"gitId":"a1021492980"},"content":"\t To add a plan, please enter: ","lastModifiedDate":"2022-03-24"},{"lineNumber":1150,"author":{"gitId":"a1021492980"},"content":"\t plan /new \u003cplan name\u003e /workouts \u003cworkout index(s) separated by \u0027,\u0027\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":1151,"author":{"gitId":"a1021492980"},"content":"\t Example: ","lastModifiedDate":"2022-03-24"},{"lineNumber":1152,"author":{"gitId":"a1021492980"},"content":"\t The workout list upon entering workout /list, contains the","lastModifiedDate":"2022-03-24"},{"lineNumber":1153,"author":{"gitId":"a1021492980"},"content":" \t following workouts:","lastModifiedDate":"2022-03-24"},{"lineNumber":1154,"author":{"gitId":"a1021492980"},"content":"\t 1. push up (10 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":1155,"author":{"gitId":"a1021492980"},"content":"\t 2. sit up (10 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":1156,"author":{"gitId":"a1021492980"},"content":"\t 3. pull up (10 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":1157,"author":{"gitId":"a1021492980"},"content":"\t To create a new plan, enter the following command:","lastModifiedDate":"2022-03-24"},{"lineNumber":1158,"author":{"gitId":"a1021492980"},"content":"\t plan /new grow my muscles /workouts 1, 2","lastModifiedDate":"2022-04-11"},{"lineNumber":1159,"author":{"gitId":"a1021492980"},"content":"\t A new plan named grow my muscles with workout index 1 and 2","lastModifiedDate":"2022-04-11"},{"lineNumber":1160,"author":{"gitId":"a1021492980"},"content":"\t will be created and added to the application\u0027s list of plans.","lastModifiedDate":"2022-03-24"},{"lineNumber":1161,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1162,"author":{"gitId":"a1021492980"},"content":"\t To delete a plan, please enter: ","lastModifiedDate":"2022-03-24"},{"lineNumber":1163,"author":{"gitId":"a1021492980"},"content":"\t plan /delete \u003cindex of plan\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":1164,"author":{"gitId":"a1021492980"},"content":"\t Example: ","lastModifiedDate":"2022-03-24"},{"lineNumber":1165,"author":{"gitId":"a1021492980"},"content":"\t plan /delete 1","lastModifiedDate":"2022-03-24"},{"lineNumber":1166,"author":{"gitId":"a1021492980"},"content":"\t This will delete the plan with index 1 if exists.","lastModifiedDate":"2022-03-24"},{"lineNumber":1167,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1168,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1169,"author":{"gitId":"a1021492980"},"content":"\t To view the schedule, please enter:","lastModifiedDate":"2022-03-24"},{"lineNumber":1170,"author":{"gitId":"a1021492980"},"content":"\t schedule /list","lastModifiedDate":"2022-03-24"},{"lineNumber":1171,"author":{"gitId":"a1021492980"},"content":"\t This will print the schedule.","lastModifiedDate":"2022-03-24"},{"lineNumber":1172,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1173,"author":{"gitId":"a1021492980"},"content":"\t To update schedule, please enter: ","lastModifiedDate":"2022-03-24"},{"lineNumber":1174,"author":{"gitId":"a1021492980"},"content":"\t schedule /update \u003cday index [1-7]\u003e \u003cplan index in the list\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":1175,"author":{"gitId":"a1021492980"},"content":"\t Example: ","lastModifiedDate":"2022-03-24"},{"lineNumber":1176,"author":{"gitId":"a1021492980"},"content":"\t The plan list upon entering plan /list, contains the","lastModifiedDate":"2022-03-24"},{"lineNumber":1177,"author":{"gitId":"a1021492980"},"content":" \t following plans:","lastModifiedDate":"2022-03-24"},{"lineNumber":1178,"author":{"gitId":"a1021492980"},"content":"\t 1. arms","lastModifiedDate":"2022-03-24"},{"lineNumber":1179,"author":{"gitId":"a1021492980"},"content":"\t 2. stronger arms","lastModifiedDate":"2022-03-24"},{"lineNumber":1180,"author":{"gitId":"Musfirahe0556596"},"content":"\t 3. grow my muscles","lastModifiedDate":"2022-04-06"},{"lineNumber":1181,"author":{"gitId":"a1021492980"},"content":"\t To update the plan schedule for Monday with plan 1, enter the","lastModifiedDate":"2022-03-24"},{"lineNumber":1182,"author":{"gitId":"a1021492980"},"content":" \t following command:","lastModifiedDate":"2022-03-24"},{"lineNumber":1183,"author":{"gitId":"a1021492980"},"content":"\t schedule /update 1 1","lastModifiedDate":"2022-03-24"},{"lineNumber":1184,"author":{"gitId":"a1021492980"},"content":"\t This will update the schedule of Monday with a plan named arms.","lastModifiedDate":"2022-03-24"},{"lineNumber":1185,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1186,"author":{"gitId":"a1021492980"},"content":"\t To clear schedule, please enter: ","lastModifiedDate":"2022-03-24"},{"lineNumber":1187,"author":{"gitId":"a1021492980"},"content":"\t schedule /clear \u003cday index [1-7]\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":1188,"author":{"gitId":"a1021492980"},"content":"\t This will clear the schedule for the given day.","lastModifiedDate":"2022-03-24"},{"lineNumber":1189,"author":{"gitId":"a1021492980"},"content":"\t schedule /clearall","lastModifiedDate":"2022-03-24"},{"lineNumber":1190,"author":{"gitId":"a1021492980"},"content":"\t This will clear the schedule for everyday.","lastModifiedDate":"2022-03-24"},{"lineNumber":1191,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1192,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1193,"author":{"gitId":"a1021492980"},"content":"\t To search for exercise(s), please enter: ","lastModifiedDate":"2022-03-24"},{"lineNumber":1194,"author":{"gitId":"a1021492980"},"content":"\t search /exercise \u003cexercise keyword\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":1195,"author":{"gitId":"a1021492980"},"content":"\t Example: ","lastModifiedDate":"2022-03-24"},{"lineNumber":1196,"author":{"gitId":"a1021492980"},"content":"\t search /exercise up","lastModifiedDate":"2022-03-24"},{"lineNumber":1197,"author":{"gitId":"a1021492980"},"content":"\t This will show the exercise(s) containing keyword up if exist.","lastModifiedDate":"2022-03-24"},{"lineNumber":1198,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1199,"author":{"gitId":"a1021492980"},"content":"\t To search for workout(s), please enter: ","lastModifiedDate":"2022-03-24"},{"lineNumber":1200,"author":{"gitId":"a1021492980"},"content":"\t search /workout \u003cexercise keyword or number of reps\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":1201,"author":{"gitId":"a1021492980"},"content":"\t Example: ","lastModifiedDate":"2022-03-24"},{"lineNumber":1202,"author":{"gitId":"a1021492980"},"content":"\t search /workout up","lastModifiedDate":"2022-03-24"},{"lineNumber":1203,"author":{"gitId":"a1021492980"},"content":"\t This will show the workout(s) containing exercise with keyword","lastModifiedDate":"2022-03-24"},{"lineNumber":1204,"author":{"gitId":"a1021492980"},"content":"\t up if exist.","lastModifiedDate":"2022-03-24"},{"lineNumber":1205,"author":{"gitId":"a1021492980"},"content":"\t search /workout 15","lastModifiedDate":"2022-03-24"},{"lineNumber":1206,"author":{"gitId":"a1021492980"},"content":"\t This will show the workout(s) with reps \u003d 15 if exist.","lastModifiedDate":"2022-03-24"},{"lineNumber":1207,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1208,"author":{"gitId":"a1021492980"},"content":"\t To search for plan(s), please enter: ","lastModifiedDate":"2022-03-24"},{"lineNumber":1209,"author":{"gitId":"a1021492980"},"content":"\t search /plan \u003cplan keyword\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":1210,"author":{"gitId":"a1021492980"},"content":"\t Example: ","lastModifiedDate":"2022-03-24"},{"lineNumber":1211,"author":{"gitId":"a1021492980"},"content":"\t search /plan grow","lastModifiedDate":"2022-03-24"},{"lineNumber":1212,"author":{"gitId":"a1021492980"},"content":"\t This will show the plan(s) containing keyword grow if exist.","lastModifiedDate":"2022-03-24"},{"lineNumber":1213,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1214,"author":{"gitId":"a1021492980"},"content":"\t To search for everything related to the keyword, please enter: ","lastModifiedDate":"2022-03-24"},{"lineNumber":1215,"author":{"gitId":"a1021492980"},"content":"\t search /all \u003ckeyword\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":1216,"author":{"gitId":"a1021492980"},"content":"\t Example: ","lastModifiedDate":"2022-03-24"},{"lineNumber":1217,"author":{"gitId":"a1021492980"},"content":"\t search /all a","lastModifiedDate":"2022-03-24"},{"lineNumber":1218,"author":{"gitId":"a1021492980"},"content":"\t This will show the exercise(s), workout(s) and plan(s) containing","lastModifiedDate":"2022-03-24"},{"lineNumber":1219,"author":{"gitId":"a1021492980"},"content":"\t keyword a if exist.","lastModifiedDate":"2022-03-24"},{"lineNumber":1220,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":1221,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-20"},{"lineNumber":1222,"author":{"gitId":"a1021492980"},"content":"\t To exit werkIt, please enter: ","lastModifiedDate":"2022-03-20"},{"lineNumber":1223,"author":{"gitId":"a1021492980"},"content":"\t exit","lastModifiedDate":"2022-03-20"},{"lineNumber":1224,"author":{"gitId":"a1021492980"},"content":"\t This will exit werkIt.","lastModifiedDate":"2022-03-20"},{"lineNumber":1225,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-20"},{"lineNumber":1226,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-20"},{"lineNumber":1227,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":1228,"author":{"gitId":"emilysim00"},"content":"This will show a complete guide to use WerkIt.","lastModifiedDate":"2022-03-27"},{"lineNumber":1229,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":1230,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#table-of-contents\"\u003eBack to Table of Contents\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1231,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1232,"author":{"gitId":"a1021492980"},"content":"---","lastModifiedDate":"2022-03-20"},{"lineNumber":1233,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":1234,"author":{"gitId":"alanlowzies"},"content":"## WerkIt!\u0027s Local Storage Information","lastModifiedDate":"2022-03-11"},{"lineNumber":1235,"author":{"gitId":"alanlowzies"},"content":"When you start WerkIt! for the first time, the following directory and files are created:","lastModifiedDate":"2022-03-14"},{"lineNumber":1236,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":1237,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-03-11"},{"lineNumber":1238,"author":{"gitId":"alanlowzies"},"content":"werkItResources/        // Primary resource directory for WerkIt!","lastModifiedDate":"2022-03-11"},{"lineNumber":1239,"author":{"gitId":"alanlowzies"},"content":"    ├── exercises.txt   // Text file containing a list of exercises","lastModifiedDate":"2022-03-11"},{"lineNumber":1240,"author":{"gitId":"alanlowzies"},"content":"    ├── workouts.txt    // Text file containing a list of user-created workouts","lastModifiedDate":"2022-03-23"},{"lineNumber":1241,"author":{"gitId":"alanlowzies"},"content":"    ├── plans.txt       // Text file containing a list of user-created plans","lastModifiedDate":"2022-03-23"},{"lineNumber":1242,"author":{"gitId":"alanlowzies"},"content":"    └── schedule.txt    // Text file containing a 7-day schedule of user-assigned plans for each day","lastModifiedDate":"2022-03-23"},{"lineNumber":1243,"author":{"gitId":"alanlowzies"},"content":"werkItLogs/","lastModifiedDate":"2022-04-04"},{"lineNumber":1244,"author":{"gitId":"Musfirahe0556596"},"content":"    └── logs.log        // Log file containing logs created by the application","lastModifiedDate":"2022-04-06"},{"lineNumber":1245,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-03-11"},{"lineNumber":1246,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":1247,"author":{"gitId":"alanlowzies"},"content":"Do note that the directory (and by extension, the files) will be created in your terminal\u0027s","lastModifiedDate":"2022-03-11"},{"lineNumber":1248,"author":{"gitId":"alanlowzies"},"content":"**current working directory**. Thus, it is highly recommended for you to create a new directory","lastModifiedDate":"2022-03-11"},{"lineNumber":1249,"author":{"gitId":"alanlowzies"},"content":"with the WerkIt! JAR file inside it, and run the application from the directory.","lastModifiedDate":"2022-03-14"},{"lineNumber":1250,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":1251,"author":{"gitId":"alanlowzies"},"content":"When you launch WerkIt! in subsequent sessions, please ensure that you run it from the same directory","lastModifiedDate":"2022-03-11"},{"lineNumber":1252,"author":{"gitId":"alanlowzies"},"content":"that you did when starting WerkIt! for the first time.","lastModifiedDate":"2022-03-11"},{"lineNumber":1253,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":1254,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box warning\"\u003e:warning: **Important:** Please **do not** directly modify these files on your own as it will lead","lastModifiedDate":"2022-04-04"},{"lineNumber":1255,"author":{"gitId":"alanlowzies"},"content":"to instabilities in the application and possible loss of your data.\u003c/span\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":1256,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":1257,"author":{"gitId":"alanlowzies"},"content":"Do make regular backups of the `werkItResources` directory. In the event of data loss, please replace the","lastModifiedDate":"2022-04-04"},{"lineNumber":1258,"author":{"gitId":"alanlowzies"},"content":"`werkItResources` directory with your most recent backup copy. In the worst case scenario (i.e. if you don\u0027t have a ","lastModifiedDate":"2022-04-04"},{"lineNumber":1259,"author":{"gitId":"alanlowzies"},"content":"proper backup copy), delete the `werkItResources` directory and restart WerkIt! to recreate the directory and files from ","lastModifiedDate":"2022-04-04"},{"lineNumber":1260,"author":{"gitId":"alanlowzies"},"content":"fresh.","lastModifiedDate":"2022-04-04"},{"lineNumber":1261,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":1262,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#table-of-contents\"\u003eBack to Table of Contents\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1263,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1264,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-03-11"},{"lineNumber":1265,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":1266,"author":{"gitId":"alanlowzies"},"content":"## Frequently Asked Questions (FAQ)","lastModifiedDate":"2022-03-11"},{"lineNumber":1267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1268,"author":{"gitId":"alanlowzies"},"content":"### 1. My terminal in Windows is displaying weird symbols when I run the application.","lastModifiedDate":"2022-04-03"},{"lineNumber":1269,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":1270,"author":{"gitId":"alanlowzies"},"content":"**Example of weird symbols:**\u003cbr/\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":1271,"author":{"gitId":"alanlowzies"},"content":"![Weird Symbols (First Time Run)](images/weirdSymbols-firstTimeRun.png) \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":1272,"author":{"gitId":"alanlowzies"},"content":"![Weird Symbols (Help Command)](images/weirdSymbols-helpCommand.png)","lastModifiedDate":"2022-04-03"},{"lineNumber":1273,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":1274,"author":{"gitId":"alanlowzies"},"content":"**A**: Please ensure that you are running the application using **Windows Terminal**, as mentioned in","lastModifiedDate":"2022-04-03"},{"lineNumber":1275,"author":{"gitId":"alanlowzies"},"content":"the [Quick Start Guide](#quick-start-guide). If you have not installed it, [click here][1] to install it via the","lastModifiedDate":"2022-04-03"},{"lineNumber":1276,"author":{"gitId":"alanlowzies"},"content":"Microsoft Store.","lastModifiedDate":"2022-04-03"},{"lineNumber":1277,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":1278,"author":{"gitId":"alanlowzies"},"content":"\u003cspan class\u003d\"box info\"\u003e:memo: **Why are these symbols appearing?** Without being too technical, these symbols are appearing ","lastModifiedDate":"2022-04-04"},{"lineNumber":1279,"author":{"gitId":"alanlowzies"},"content":"because the terminal you are using is unable to process a particular encoding scheme (i.e. ANSI escape codes). ","lastModifiedDate":"2022-04-03"},{"lineNumber":1280,"author":{"gitId":"alanlowzies"},"content":"These symbols you see are actually colour codes to colour certain texts on the terminal. Terminals that can properly ","lastModifiedDate":"2022-04-03"},{"lineNumber":1281,"author":{"gitId":"alanlowzies"},"content":"read these codes will not show you these symbols and instead show you something like this:\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":1282,"author":{"gitId":"alanlowzies"},"content":"![No Weird Symbols](images/noWeirdSymbols.png) \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":1283,"author":{"gitId":"alanlowzies"},"content":"On Windows, the default terminals are unable to process these codes, but Windows Terminal is able to. \u003c/span\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":1284,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":1285,"author":{"gitId":"alanlowzies"},"content":"### 2. How do I transfer my data to another computer? ","lastModifiedDate":"2022-03-31"},{"lineNumber":1286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1287,"author":{"gitId":"alanlowzies"},"content":"**A**: Locate your `werkItResources` directory and WerkIt! JAR file, copy and paste it in your other ","lastModifiedDate":"2022-03-11"},{"lineNumber":1288,"author":{"gitId":"alanlowzies"},"content":"computer\u0027s desired location. Thereafter, you can run WerkIt! as per normal. ","lastModifiedDate":"2022-03-11"},{"lineNumber":1289,"author":{"gitId":"alanlowzies"},"content":"(Please see [WerkIt\u0027s Local Storage Information](#werkits-local-storage-information) for recommended location).","lastModifiedDate":"2022-03-27"},{"lineNumber":1290,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":1291,"author":{"gitId":"alanlowzies"},"content":"### 3. I cannot see the workouts that I have created in previous sessions.","lastModifiedDate":"2022-03-31"},{"lineNumber":1292,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":1293,"author":{"gitId":"alanlowzies"},"content":"**A**: Please ensure that you launch WerkIt! from the same directory that you did when starting the application for the ","lastModifiedDate":"2022-03-11"},{"lineNumber":1294,"author":{"gitId":"alanlowzies"},"content":"first time. Your saved data should be in that directory.","lastModifiedDate":"2022-03-11"},{"lineNumber":1295,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":1296,"author":{"gitId":"alanlowzies"},"content":"### 4. I keep getting file loading errors whenever I start WerkIt!","lastModifiedDate":"2022-03-31"},{"lineNumber":1297,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":1298,"author":{"gitId":"alanlowzies"},"content":"**A**: It is possible that your local file data is corrupted. If you have a backup copy of the `werkItResources`","lastModifiedDate":"2022-03-27"},{"lineNumber":1299,"author":{"gitId":"alanlowzies"},"content":"directory, replace your existing `werkItResources` directory with the backup copy. Otherwise, you will need to","lastModifiedDate":"2022-03-27"},{"lineNumber":1300,"author":{"gitId":"alanlowzies"},"content":"reset your local file data by deleting the `werkItResources` directory and starting up WerkIt! to recreate the","lastModifiedDate":"2022-03-27"},{"lineNumber":1301,"author":{"gitId":"alanlowzies"},"content":"necessary files in their default numberings.","lastModifiedDate":"2022-03-27"},{"lineNumber":1302,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":1303,"author":{"gitId":"alanlowzies"},"content":"Do note that these suggestions will lead to a **loss of your saved application data** and you may need to re-enter the ","lastModifiedDate":"2022-04-04"},{"lineNumber":1304,"author":{"gitId":"alanlowzies"},"content":"lost data.","lastModifiedDate":"2022-04-04"},{"lineNumber":1305,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":1306,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#table-of-contents\"\u003eBack to Table of Contents\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1307,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1308,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-03-11"},{"lineNumber":1309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1310,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":1311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1312,"author":{"gitId":"Musfirahe0556596"},"content":"Below is a summary of all the commands available in the WerkIt! application.","lastModifiedDate":"2022-03-24"},{"lineNumber":1313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1314,"author":{"gitId":"alanlowzies"},"content":"| Action                   | Format and Example                                                                                                                                             |","lastModifiedDate":"2022-03-11"},{"lineNumber":1315,"author":{"gitId":"emilysim00"},"content":"|:-------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-02"},{"lineNumber":1316,"author":{"gitId":"emilysim00"},"content":"| List Exercise            | \u003cbr /\u003e Format: `exercise /list` \u003cbr/\u003eExample: `exercise /list` \u003cbr /\u003e \u003cbr /\u003e                                                                                   |","lastModifiedDate":"2022-03-27"},{"lineNumber":1317,"author":{"gitId":"emilysim00"},"content":"| Create Workout           | \u003cbr /\u003e Format: `workout /new \u003cexercise name\u003e /reps \u003cnumber of repetitions\u003e`\u003cbr/\u003eExample: `workout /new bicep curl /reps 1`  \u003cbr /\u003e \u003cbr /\u003e                      |","lastModifiedDate":"2022-04-02"},{"lineNumber":1318,"author":{"gitId":"emilysim00"},"content":"| Delete Workout           | \u003cbr /\u003e Format: `workout /delete \u003cworkout index number\u003e` \u003cbr /\u003eExample: `workout /delete 2`  \u003cbr /\u003e \u003cbr /\u003e                                                      |","lastModifiedDate":"2022-04-02"},{"lineNumber":1319,"author":{"gitId":"emilysim00"},"content":"| Update Workout           | \u003cbr /\u003e Format: `workout /update \u003cworkout index number\u003e \u003cnew number of repetitions\u003e`\u003cbr/\u003eExample: `workout /update 1 15`   \u003cbr /\u003e \u003cbr /\u003e                        |","lastModifiedDate":"2022-04-02"},{"lineNumber":1320,"author":{"gitId":"Musfirahe0556596"},"content":"| List Workouts            | \u003cbr /\u003e Format: `workout /list` \u003cbr /\u003e \u003cbr /\u003e                                                                                                                   |","lastModifiedDate":"2022-04-06"},{"lineNumber":1321,"author":{"gitId":"Musfirahe0556596"},"content":"| Create Plan              | \u003cbr /\u003e Format: `plan /new \u003cplan name\u003e /workouts \u003cworkout index number(s) separated by comma\u003e`\u003cbr /\u003eExample: `plan /new plan a /workouts 1, 2, 3` \u003cbr /\u003e \u003cbr /\u003e |","lastModifiedDate":"2022-04-06"},{"lineNumber":1322,"author":{"gitId":"emilysim00"},"content":"| List Plan                | \u003cbr /\u003e Format: `plan /list` \u003cbr /\u003e \u003cbr /\u003e                                                                                                                      |","lastModifiedDate":"2022-03-27"},{"lineNumber":1323,"author":{"gitId":"emilysim00"},"content":"| List Details Of Plan     | \u003cbr /\u003e Format: `plan /details \u003cplan index number\u003e` \u003cbr /\u003eExample: `plan /details 3` \u003cbr /\u003e \u003cbr /\u003e                                                              |","lastModifiedDate":"2022-04-02"},{"lineNumber":1324,"author":{"gitId":"emilysim00"},"content":"| Delete Plan              | \u003cbr /\u003e Format: `plan /delete \u003cplan index number\u003e`\u003cbr /\u003eExample: `plan /delete 3`  \u003cbr /\u003e \u003cbr /\u003e                                                                |","lastModifiedDate":"2022-04-02"},{"lineNumber":1325,"author":{"gitId":"emilysim00"},"content":"| Update Schedule          | \u003cbr /\u003e Format: `schedule /update \u003cday number [1-7]\u003e \u003cplan index number\u003e`\u003cbr/\u003eExample: `schedule /update 2 4` \u003cbr /\u003e \u003cbr /\u003e                                     |","lastModifiedDate":"2022-04-02"},{"lineNumber":1326,"author":{"gitId":"emilysim00"},"content":"| List Schedule            | \u003cbr /\u003e Format: `schedule /list` \u003cbr /\u003e \u003cbr /\u003e                                                                                                                  |","lastModifiedDate":"2022-03-27"},{"lineNumber":1327,"author":{"gitId":"emilysim00"},"content":"| Clear Schedule For A Day | \u003cbr /\u003e Format: `schedule /clear \u003cday number [1-7]\u003e`\u003cbr/\u003eExample: `schedule /clear 3` \u003cbr /\u003e \u003cbr /\u003e                                                             |","lastModifiedDate":"2022-03-27"},{"lineNumber":1328,"author":{"gitId":"emilysim00"},"content":"| Clear All Schedule       | \u003cbr /\u003e Format: `schedule /clearall` \u003cbr /\u003e \u003cbr /\u003e                                                                                                              |","lastModifiedDate":"2022-03-27"},{"lineNumber":1329,"author":{"gitId":"emilysim00"},"content":"| Search For Exercise      | \u003cbr /\u003e Format: `search /exercise \u003cexercise keyword\u003e` \u003cbr/\u003eExample: `search /exercise up` \u003cbr /\u003e \u003cbr /\u003e                                                         |","lastModifiedDate":"2022-03-27"},{"lineNumber":1330,"author":{"gitId":"emilysim00"},"content":"| Search For Workout       | \u003cbr /\u003e Format: `search /workout \u003cexercise keyword or number of reps\u003e`  \u003cbr/\u003eExample: `search /workout push` \u003cbr /\u003e \u003cbr /\u003e                                      |","lastModifiedDate":"2022-03-27"},{"lineNumber":1331,"author":{"gitId":"emilysim00"},"content":"| Search For Plan          | \u003cbr /\u003e Format: `search /plan \u003cplan keyword\u003e` \u003cbr/\u003eExample: `search /plan arms` \u003cbr /\u003e \u003cbr /\u003e                                                                   |","lastModifiedDate":"2022-03-27"},{"lineNumber":1332,"author":{"gitId":"emilysim00"},"content":"| Search For ALL           | \u003cbr /\u003e Format: `search /all \u003ckeyword\u003e` \u003cbr/\u003eExample: `search /all 10` \u003cbr /\u003e \u003cbr /\u003e                                                                            |","lastModifiedDate":"2022-03-27"},{"lineNumber":1333,"author":{"gitId":"Musfirahe0556596"},"content":"| View Help                | \u003cbr /\u003e Format: `help` \u003cbr /\u003e \u003cbr /\u003e                                                                                                                            |","lastModifiedDate":"2022-04-06"},{"lineNumber":1334,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":1335,"author":{"gitId":"alanlowzies"},"content":"\u003cbr/\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1336,"author":{"gitId":"alanlowzies"},"content":"\u003cdiv class\u003d\"button-container\"\u003e\u003ca class\u003d\"button\" href\u003d\"#table-of-contents\"\u003eBack to Table of Contents\u003c/a\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":1337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":1338,"author":{"gitId":"alanlowzies"},"content":"[1]:https://www.microsoft.com/en-us/p/windows-terminal/9n0dx20hk701","lastModifiedDate":"2022-04-03"}],"authorContributionMap":{"emilysim00":393,"Musfirahe0556596":194,"alanlowzies":195,"TianaiYan":148,"-":28,"a1021492980":380}},{"path":"docs/assets/css/style.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-04-01"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"@import \"{{ site.theme }}\";","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"h5, h6 {","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"  font-size: 1.1rem;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":".box {","lastModifiedDate":"2022-04-02"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"  margin: 20px 10px 20px 10px;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"  border-radius: 15px;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"  padding: 20px;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"span.box {","lastModifiedDate":"2022-04-02"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"  display: block;","lastModifiedDate":"2022-04-02"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-04-02"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":".warning {","lastModifiedDate":"2022-04-02"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"  background-color: #FAC898;","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"  color: black;","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":".info {","lastModifiedDate":"2022-04-02"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"  background-color: #A7C7E7;","lastModifiedDate":"2022-04-02"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"  color: black;","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":".info a {","lastModifiedDate":"2022-04-02"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"  color:  #900C3F ;","lastModifiedDate":"2022-04-02"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-04-02"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"div.page-break {","lastModifiedDate":"2022-04-03"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"  page-break-after: always;","lastModifiedDate":"2022-04-03"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-04-03"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"a.button {","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"  padding: 5px 10px 5px 10px;","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"  border-radius: 25px;","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"  text-align: center;","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"  background-color: #157977;","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"  color: white;","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"div.button-container {","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"  width: 100%;","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"  text-align: center;","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"alanlowzies":49}},{"path":"docs/high-level-diagram/application_flow_diagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"@startuml","lastModifiedDate":"2022-04-04"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"!include \u003coffice/Concepts/documents\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"!include \u003coffice/Users/user\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"rectangle \"\u003c$user\u003e\\nUser\" as User #khaki","lastModifiedDate":"2022-04-04"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"title Application Flow","lastModifiedDate":"2022-04-04"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"rectangle {","lastModifiedDate":"2022-04-04"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":"rectangle \"Create a new workout\" as workout #lightgreen","lastModifiedDate":"2022-04-04"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"rectangle \"Create a new plan\" as plan #lightblue","lastModifiedDate":"2022-04-04"},{"lineNumber":12,"author":{"gitId":"emilysim00"},"content":"rectangle \"Add to schedule\" as schedule #orange","lastModifiedDate":"2022-04-04"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-04-04"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"rectangle \"User has to first create a workout before \\nhe/she can create a plan\" as note1 #Salmon","lastModifiedDate":"2022-04-04"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"rectangle \"User has to first create a plan before \\nhe/she can schedule a plan into the schedule\" as note2 #Salmon","lastModifiedDate":"2022-04-04"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"User-right-\u003eworkout","lastModifiedDate":"2022-04-04"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"workout-down.note1","lastModifiedDate":"2022-04-04"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"workout-right-\u003eplan","lastModifiedDate":"2022-04-04"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"plan-down.note2","lastModifiedDate":"2022-04-04"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"plan-right-\u003eschedule","lastModifiedDate":"2022-04-04"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"@enduml","lastModifiedDate":"2022-04-04"}],"authorContributionMap":{"emilysim00":28}},{"path":"docs/high-level-diagram/architecture-diagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"@startuml","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"!include \u003coffice/Concepts/documents\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"!include \u003coffice/Users/user\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"!include ../uml/Style.puml","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"rectangle \"\u003c$user\u003e\\nUser\" as User #Pink","lastModifiedDate":"2022-04-04"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"rectangle \"\u003c$documents\u003e\\nFiles\" as Files #Snow","lastModifiedDate":"2022-04-04"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"title Architecture Diagram for WerkIt!","lastModifiedDate":"2022-04-04"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":"rectangle {","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"    rectangle UI COLOR_UI","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"    rectangle Logic COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"    rectangle Parser COLOR_PARSER","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"    rectangle WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"    rectangle Main COLOR_MAIN","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"    rectangle Storage COLOR_STORAGE","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"UI\u003c.-up-User","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"Main-up-\u003eWerkIt","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"WerkIt-up-\u003eParser","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"Parser-up.\u003eLogic","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"Logic-right-\u003eStorage","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"WerkIt-right-\u003eStorage","lastModifiedDate":"2022-04-04"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"WerkIt-left-\u003eUI","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"Storage-right.\u003eFiles","lastModifiedDate":"2022-04-04"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"Files-left.\u003eStorage","lastModifiedDate":"2022-04-04"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"@enduml","lastModifiedDate":"2022-04-01"}],"authorContributionMap":{"emilysim00":14,"Musfirahe0556596":8,"alanlowzies":7}},{"path":"docs/team/a1021492980.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"# Project Portfolio Page of Huang Haofeng (GitHub: a1021492980)","lastModifiedDate":"2022-04-10"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"## Project: WerkIt!","lastModifiedDate":"2022-04-10"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"## Overview","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"This page showcases my contributions to the development of WerkIt!, an application that I have co-developed with","lastModifiedDate":"2022-04-10"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"my peers as part of a team project (tP) in the CS2113T Software Engineering \u0026 Object-Oriented Programming module","lastModifiedDate":"2022-04-10"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"offered by the School of Computing, National University of Singapore.","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"### About the Project","lastModifiedDate":"2022-04-10"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"WerkIt! is a command line interface (CLI) application written in Java that allows users to create a weekly workout","lastModifiedDate":"2022-04-10"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"schedule for them to refer to and follow. More details about the project can be found in the following locations:","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"* [GitHub Repository](https://github.com/AY2122S2-CS2113T-T09-2/tp)","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"* [WerkIt! User Guide](../UserGuide.md)","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"* [WerkIt! Developer Guide](../DeveloperGuide.md)","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"### Summary of Contributions","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"* **New Feature**: Added the ability to search for either exercises, workouts, plans, or everything at one go.","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"    * **What it does**: Allows the users to search specifically for exercises/workouts/plans/everything. Users are allowed ","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"to specify the type before they search.","lastModifiedDate":"2022-04-03"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"    * **Justification**: This feature improves the usability of WerkIt! significantly. When the users store increasing amount","lastModifiedDate":"2022-04-10"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"of exercises/workouts/plans into WerkIt!, it might be hard for them to find their desired data, by using the search","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"feature, they can easily search for any type of data they want with a keyword.","lastModifiedDate":"2022-04-03"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"    * **Highlights**: This enhancement requires a high level of understand of the product as well as a deep understanding","lastModifiedDate":"2022-04-10"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"in data structure as different data structures are used in different type of data. For example, exercises","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"data are stored in array while workouts data make use of both array and hashmap. In order to retrieve the required ","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"matching results from any type of data, proficiency in data structure is indispensable.","lastModifiedDate":"2022-04-03"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"* **New Feature**: Added the ability to store plan data into local resource file as well as load the file when launching app ","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":".","lastModifiedDate":"2022-04-03"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"  * **What it does**: Allows the users to store their plan data locally such that they can view their plan data without","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"opening WerkIt!.","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"  * **Justification**: This feature improves the product and user experience significantly as all the data are backed up","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"locally. Since every plan is written into resource file immediately after the creation of plan, all the data are secured","lastModifiedDate":"2022-04-03"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"in the event that WerkIt! exit unexpectedly. Furthermore, if the users just want to take a look at what plans they have,","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"they can do that by directly opening the local file instead of launching WerkIt!.","lastModifiedDate":"2022-04-10"},{"lineNumber":38,"author":{"gitId":"a1021492980"},"content":"  * **Highlights**: This enhancement affects feature to be implemented in the future as any modification related to plan ","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"a1021492980"},"content":"will be reflected in the local plan file. It required a rigorous analysis of product design and strong understand of","lastModifiedDate":"2022-04-04"},{"lineNumber":40,"author":{"gitId":"a1021492980"},"content":"logic as it has the ability to store users\u0027 customized number of workouts in the plans. That is, the number of workouts in each","lastModifiedDate":"2022-04-10"},{"lineNumber":41,"author":{"gitId":"a1021492980"},"content":"plan is not fixed, this enhancement can detect the number of workouts in each plan, then handle and store them","lastModifiedDate":"2022-04-10"},{"lineNumber":42,"author":{"gitId":"a1021492980"},"content":"accordingly. Furthermore, in the case of local file corruption, such as when users manually edited the local file, this enhancement is","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"a1021492980"},"content":"able to catch the error and take actions against the corrupted plans\u0027 data only, without affecting other uncorrupted","lastModifiedDate":"2022-04-10"},{"lineNumber":44,"author":{"gitId":"a1021492980"},"content":"plans in the same file.","lastModifiedDate":"2022-04-04"},{"lineNumber":45,"author":{"gitId":"a1021492980"},"content":"* **New Feature**: Added the ability to view help.","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"a1021492980"},"content":"  * **What it does**: Allows the users to view all the features with examples.","lastModifiedDate":"2022-04-10"},{"lineNumber":47,"author":{"gitId":"a1021492980"},"content":"  * **Justification**: This feature allows the users to have a complete guide on how to use each command with examples.","lastModifiedDate":"2022-04-10"},{"lineNumber":48,"author":{"gitId":"a1021492980"},"content":"* **New Feature**: Added the ability to populate exercise data from our data file to the product.","lastModifiedDate":"2022-04-10"},{"lineNumber":49,"author":{"gitId":"a1021492980"},"content":"  * **What it does**: Prepopulate a list of exercises for the users to construct workouts, plans and schedule.","lastModifiedDate":"2022-04-10"},{"lineNumber":50,"author":{"gitId":"a1021492980"},"content":"  * **Justification**: This feature is the core foundation of WerkIt! as the creation of workouts/plans/schedule is","lastModifiedDate":"2022-04-10"},{"lineNumber":51,"author":{"gitId":"a1021492980"},"content":"impossible without the preloaded exercises.","lastModifiedDate":"2022-04-03"},{"lineNumber":52,"author":{"gitId":"a1021492980"},"content":"* **New Feature**: Added the feature for users to view the exercises available for selection.","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"a1021492980"},"content":"  * **What it does**: Allows the users to view all the exercises.","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"a1021492980"},"content":"  * **Justification**: Users need to know what exercises can be used to construct their workouts/plans/schedule.","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"a1021492980"},"content":"* **Other code contributions**:","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"a1021492980"},"content":"  * Contributed around 40% of `UI`, 20% of `FileManager`, 35% of `Parser` and 20% of `WerkIt`.","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"a1021492980"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":58,"author":{"gitId":"a1021492980"},"content":"* **Test Cases**:","lastModifiedDate":"2022-04-10"},{"lineNumber":59,"author":{"gitId":"a1021492980"},"content":"  * Junit test cases for the whole `SearchCommand` class.","lastModifiedDate":"2022-04-03"},{"lineNumber":60,"author":{"gitId":"a1021492980"},"content":"  * Junit test cases for the whole `ExerciseList` class.","lastModifiedDate":"2022-04-10"},{"lineNumber":61,"author":{"gitId":"a1021492980"},"content":"  * Junit test cases for the whole `ExerciseCommand` class.","lastModifiedDate":"2022-04-10"},{"lineNumber":62,"author":{"gitId":"a1021492980"},"content":"  * Some Junit test cases for the `FileManager` and `Parser`.","lastModifiedDate":"2022-04-10"},{"lineNumber":63,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":64,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":65,"author":{"gitId":"a1021492980"},"content":"* **Code Contributed**:","lastModifiedDate":"2022-04-10"},{"lineNumber":66,"author":{"gitId":"a1021492980"},"content":"    ![tpDashboard](../images/ppp/a1021492980/tpDashBoard.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":67,"author":{"gitId":"a1021492980"},"content":"    * Out of around 5,500 lines of functional code of the whole project, 1,612 lines of functional code were contributed by","lastModifiedDate":"2022-04-10"},{"lineNumber":68,"author":{"gitId":"a1021492980"},"content":"  me. More details can be found at ","lastModifiedDate":"2022-04-10"},{"lineNumber":69,"author":{"gitId":"a1021492980"},"content":"  [RepoSense link](https://nus-cs2113-ay2122s2.github.io/tp-dashboard/?search\u003da1021492980\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other).","lastModifiedDate":"2022-04-04"},{"lineNumber":70,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":71,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":72,"author":{"gitId":"a1021492980"},"content":"* **Contributions to the UG**:","lastModifiedDate":"2022-04-10"},{"lineNumber":73,"author":{"gitId":"a1021492980"},"content":"  * Added documentation for the features `search /exercise`, `search /workout`, `search /plan` and `search /all`.","lastModifiedDate":"2022-04-03"},{"lineNumber":74,"author":{"gitId":"a1021492980"},"content":"  * Added documentation for the feature `exercise /list`.","lastModifiedDate":"2022-04-03"},{"lineNumber":75,"author":{"gitId":"a1021492980"},"content":"  * Added documentation for the feature `help`.","lastModifiedDate":"2022-04-03"},{"lineNumber":76,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":77,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":78,"author":{"gitId":"a1021492980"},"content":"* **Contributions to the DG**:","lastModifiedDate":"2022-04-10"},{"lineNumber":79,"author":{"gitId":"a1021492980"},"content":"  * Added documentation for the features `search /exercise`, `search /workout`, `search /plan` and `search /all`.","lastModifiedDate":"2022-04-03"},{"lineNumber":80,"author":{"gitId":"a1021492980"},"content":"  * Added documentation for the feature `exercise /list`.","lastModifiedDate":"2022-04-03"},{"lineNumber":81,"author":{"gitId":"a1021492980"},"content":"  * Added sequence diagrams for `exercise /list`, `search /exercise`, `search /workout`, `search /plan` and `search /all`.","lastModifiedDate":"2022-04-03"},{"lineNumber":82,"author":{"gitId":"a1021492980"},"content":"  * Added class diagram for `SearchCommand` and `ExerciseCommand`.","lastModifiedDate":"2022-04-04"},{"lineNumber":83,"author":{"gitId":"a1021492980"},"content":"  * Added design consideration for inconsistent data between resource files under  `File Management`.","lastModifiedDate":"2022-04-04"},{"lineNumber":84,"author":{"gitId":"a1021492980"},"content":"  * Added `Exercise-related feautures` and `Search-related features` under `design` section.","lastModifiedDate":"2022-04-04"},{"lineNumber":85,"author":{"gitId":"a1021492980"},"content":"  * Added manual testing cases for `Exercise-related feautures` and `Search-related features`.","lastModifiedDate":"2022-04-10"},{"lineNumber":86,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":87,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":88,"author":{"gitId":"a1021492980"},"content":"* **Community**:","lastModifiedDate":"2022-04-10"},{"lineNumber":89,"author":{"gitId":"a1021492980"},"content":"  * **Maintaining the issue tracker**:","lastModifiedDate":"2022-04-10"},{"lineNumber":90,"author":{"gitId":"a1021492980"},"content":"    * Create issues to be done by me, when creating PRs, link them to the corresponding issues.","lastModifiedDate":"2022-04-06"},{"lineNumber":91,"author":{"gitId":"a1021492980"},"content":"    ","lastModifiedDate":"2022-04-03"},{"lineNumber":92,"author":{"gitId":"a1021492980"},"content":"  * **Review contributions (Including but not limited to)** : ","lastModifiedDate":"2022-04-10"},{"lineNumber":93,"author":{"gitId":"a1021492980"},"content":"    * [Review 1: Suggesting teammate to consider more edge case exceptions](https://github.com/AY2122S2-CS2113T-T09-2/tp/pull/17#discussion_r820104333)","lastModifiedDate":"2022-04-04"},{"lineNumber":94,"author":{"gitId":"a1021492980"},"content":"    * [Review 2: Suggesting teammate to follow coding standard](https://github.com/AY2122S2-CS2113T-T09-2/tp/pull/22#discussion_r822512048)","lastModifiedDate":"2022-04-04"},{"lineNumber":95,"author":{"gitId":"a1021492980"},"content":"    * [Review 3: Suggesting teammate to make more use of constant](https://github.com/AY2122S2-CS2113T-T09-2/tp/pull/105#discussion_r831350578)","lastModifiedDate":"2022-04-04"},{"lineNumber":96,"author":{"gitId":"a1021492980"},"content":"    * [Review 4: Suggesting teammate to ignore local resource files in repo](https://github.com/AY2122S2-CS2113T-T09-2/tp/pull/105#discussion_r831344059)","lastModifiedDate":"2022-04-04"},{"lineNumber":97,"author":{"gitId":"a1021492980"},"content":"    * [Review 5: Affirming teammate\u0027s work](https://github.com/AY2122S2-CS2113T-T09-2/tp/pull/118#discussion_r833036351)","lastModifiedDate":"2022-04-04"},{"lineNumber":98,"author":{"gitId":"a1021492980"},"content":"  * **General bugs fixing (Including but not limited to)** :","lastModifiedDate":"2022-04-10"},{"lineNumber":99,"author":{"gitId":"a1021492980"},"content":"    * Fix potential bugs due to editing of local `exercises.txt` resource file. [PR Link](https://github.com/AY2122S2-CS2113T-T09-2/tp/pull/267#issue-1194975547)","lastModifiedDate":"2022-04-10"},{"lineNumber":100,"author":{"gitId":"a1021492980"},"content":"    * Fix bugs related to file loading. [PR Link](https://github.com/AY2122S2-CS2113T-T09-2/tp/pull/218#issue-1190273926)","lastModifiedDate":"2022-04-03"},{"lineNumber":101,"author":{"gitId":"a1021492980"},"content":"    * Maintaining `Search-related features`. [PR Link](https://github.com/AY2122S2-CS2113T-T09-2/tp/pull/305#issue-1198465673), [PR Link](https://github.com/AY2122S2-CS2113T-T09-2/tp/pull/248#issue-1193092952)","lastModifiedDate":"2022-04-10"},{"lineNumber":102,"author":{"gitId":"a1021492980"},"content":"    * Routine bug fixes. [PR Link](https://github.com/AY2122S2-CS2113T-T09-2/tp/pull/216#issue-1190069253), [PR Link](https://github.com/AY2122S2-CS2113T-T09-2/tp/pull/73#issue-1170675218)","lastModifiedDate":"2022-04-03"},{"lineNumber":103,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":104,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":105,"author":{"gitId":"a1021492980"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2022-04-10"},{"lineNumber":106,"author":{"gitId":"a1021492980"},"content":"  * **Bugs reported in other team\u0027s products**:","lastModifiedDate":"2022-04-10"},{"lineNumber":107,"author":{"gitId":"a1021492980"},"content":"    * [Bug reported 1: Reported a bug that random contact data could be inserted into the software database](https://github.com/a1021492980/ped/issues/4#issue-1189515964)","lastModifiedDate":"2022-04-04"},{"lineNumber":108,"author":{"gitId":"a1021492980"},"content":"    * [Bug reported 2: Reported a bug that freestyle email and faculty could be inserted](https://github.com/a1021492980/ped/issues/3#issue-1189500495)","lastModifiedDate":"2022-04-04"},{"lineNumber":109,"author":{"gitId":"a1021492980"},"content":"    * [Bug reported 3: Reported a bug that no restrictions implemented for insertion of date and time](https://github.com/a1021492980/ped/issues/2#issue-1189492498)","lastModifiedDate":"2022-04-04"},{"lineNumber":110,"author":{"gitId":"a1021492980"},"content":"    * [Bug reported 4: Reported a bug that user input date and software recorded date is inconsistent](https://github.com/a1021492980/ped/issues/1#issue-1189476366)","lastModifiedDate":"2022-04-04"},{"lineNumber":111,"author":{"gitId":"a1021492980"},"content":"  ","lastModifiedDate":"2022-04-03"}],"authorContributionMap":{"emilysim00":5,"a1021492980":106}},{"path":"docs/team/alanlowzies.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"# Project Portfolio Page of Alan Low (alanlowzies)","lastModifiedDate":"2022-04-03"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"## Overview","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"This page showcases my contributions to the development of WerkIt!, an application written in Java that allows users to ","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"create a weekly workout schedule for them to refer to and follow. I co-developed this application with my peers as part ","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"of a team project (tP) in the CS2113T module offered by NUS SoC. More details about the project can be found in the ","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"[WerkIt! User Guide](../UserGuide.md), [Developer Guide](../DeveloperGuide.md), and ","lastModifiedDate":"2022-04-10"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"[GitHub repository](https://github.com/AY2122S2-CS2113T-T09-2/tp).","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"## Summary of Contributions","lastModifiedDate":"2022-04-03"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"### Code Contributed","lastModifiedDate":"2022-04-03"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"A detailed report of my code contributions to the tP can be found in the [tP Code Dashboard](https://nus-cs2113-ay2122s2.github.io/tp-dashboard/?search\u003dalanlowzies\u0026breakdown\u003dtrue) ","lastModifiedDate":"2022-04-03"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"hosted by the module coordinators of CS2113T.","lastModifiedDate":"2022-04-03"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"A summary of my code contributions are as follows:","lastModifiedDate":"2022-04-03"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"1. Wrote most of the `FileManager` API, which allows WerkIt! to read and write application data","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"   into text files stored on the user\u0027s local filesystem. ","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"2. Implemented the functionality for users to create a new workout.","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"3. Wrote most of the `UI` API, which contains UI-related elements, including WerkIt!\u0027s banner logo and response messages.","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"4. Wrote most of the `WerkIt` API, which contains the code to start up WerkIt!, load saved file data","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"   (if any), and receive and process user inputs.","lastModifiedDate":"2022-04-10"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"5. Wrote parts the `Parser` API to parse user inputs into the appropriate `Command` class types and check for invalid ","lastModifiedDate":"2022-04-10"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"   characters in the user inputs.","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"6. Implemented the HashMap data structure in the `WorkoutList` API to allow `PlanList` to reference","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"   workouts created by the user.","lastModifiedDate":"2022-04-10"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"7. Wrote the `LogHandler` API, which allows the various components in WerkIt! to log into a file","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"  stored in the user\u0027s local filesystem.","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"8. Wrote the `Command` abstract class, which is a template class that sets out the main structure of all types","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"  of commands in WerkIt! (e.g. `WorkoutCommand`, `ExerciseCommand`, etc.).","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"9. Wrote most of the `WorkoutCommand` API, which contains a workout-related command that the user has requested","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"  WerkIt! to carry out.","lastModifiedDate":"2022-04-03"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"10. Wrote some exception APIs for WerkIt!, including `InvalidWorkoutException`, `InvalidExerciseException`, and","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"  `UnknownFileException`.","lastModifiedDate":"2022-04-03"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"11. Contributed to the `ExerciseList` API by adding utility methods.","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"12. Wrote JUnit test cases for WerkIt! APIs including (but not limited to) `WorkoutCommand`, `FileManager`, `Parser`, etc.","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"13. Wrote JavaDocs for the classes and methods that I have created.","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"### Enhancements Implemented","lastModifiedDate":"2022-04-03"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"1. (Developer and User Guides) Replaced Markdown quote blocks with custom CSS boxes for informational and warning boxes","lastModifiedDate":"2022-04-10"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"    as the original MD quote blocks were hard to spot and thus readers may miss such messages.","lastModifiedDate":"2022-04-10"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"    - An example of the custom CSS boxes can be found in the [\u0027Notations Used In This Guide\u0027](../UserGuide.md#notations-used-in-this-guide)","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"  section of the user guide.","lastModifiedDate":"2022-04-10"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"2. (Developer and User Guides) Inserted \u0027buttons\u0027 throughout the documentations to allow users to easily click and navigate back ","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"   to the guides\u0027 tables of contents. ","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"    - I tried to utilise JavaScript for a floating back-to-top button, but due to the time constraints and the need to","lastModifiedDate":"2022-04-10"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"    fully understand the structure of the webpage theme that we\u0027re using on GitHub Pages, I decided to","lastModifiedDate":"2022-04-10"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"    use simple HTML hyperlink buttons with some CSS styling instead.","lastModifiedDate":"2022-04-10"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"    - Click [here](../images/ppp/alanlowzies/BackToToCDemo.gif) for a GIF demonstration of the enhancement.","lastModifiedDate":"2022-04-10"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"### Contributions to the User Guide (UG)","lastModifiedDate":"2022-04-03"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"1. Wrote the guide on [creating a new workout](../UserGuide.md#create-a-workout-workout-new).","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"2. Wrote the informational section on [WerkIt!\u0027s local storage structure](../UserGuide.md#werkits-local-storage-information).","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"3. Wrote the [Quick Start Guide](../UserGuide.md#quick-start-guide) section, which includes a list of ","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"   recommended terminals to use for each OS.","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"4. Wrote the [frequently asked questions](../UserGuide.md#frequently-asked-questions-faq) section.","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"### Contributions to the Developer Guide (DG)","lastModifiedDate":"2022-04-03"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"1. Wrote and designed diagrams for the following sections of the [\u0027Implementation\u0027](../DeveloperGuide.md#implementation) ","lastModifiedDate":"2022-04-10"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"   section:","lastModifiedDate":"2022-04-10"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"    - How WerkIt! repeatedly waits and receives user inputs ([link to part](../DeveloperGuide.md#getting-user-input-continuously)).","lastModifiedDate":"2022-04-03"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"    - How WerkIt! parses user inputs and determines the appropriate procedures to take ","lastModifiedDate":"2022-04-03"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"      ([link to part](../DeveloperGuide.md#parsing-user-input-and-getting-the-right-command)).","lastModifiedDate":"2022-04-03"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"    - How WerkIt! processes and creates a new workout when requested by the user","lastModifiedDate":"2022-04-03"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"      ([link to part](../DeveloperGuide.md#create-new-workout)).","lastModifiedDate":"2022-04-03"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"    - Most of the section on [File Management](../DeveloperGuide.md#file-management).","lastModifiedDate":"2022-04-06"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"3. Wrote the \u0027Design - Storage Component\u0027 section ([link to part](../DeveloperGuide.md#storage-component)).","lastModifiedDate":"2022-04-10"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"4. Wrote the instructions on ","lastModifiedDate":"2022-04-10"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"[how to set up the development environment](../DeveloperGuide.md#setting-up-your-development-environment).","lastModifiedDate":"2022-04-03"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"5. Wrote the instructions for manual testing of [creating workouts](../DeveloperGuide.md#creating-a-new-workout) and ","lastModifiedDate":"2022-04-10"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"   [data saving](../DeveloperGuide.md#test-on-data-saving).","lastModifiedDate":"2022-04-10"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"6. Wrote the [target user profile](../DeveloperGuide.md#target-user-profile), ","lastModifiedDate":"2022-04-10"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"   [value proposition](../DeveloperGuide.md#value-proposition), and parts of the ","lastModifiedDate":"2022-04-10"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"   [glossary](../DeveloperGuide.md#glossary) of WerkIt!.","lastModifiedDate":"2022-04-10"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"7. Wrote the [table of contents](../DeveloperGuide.md#table-of-contents).","lastModifiedDate":"2022-04-10"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":77,"author":{"gitId":"alanlowzies"},"content":"### Contributions to Team-Based Tasks","lastModifiedDate":"2022-04-03"},{"lineNumber":78,"author":{"gitId":"alanlowzies"},"content":"My contributions to team-based tasks includes **(1)** setting up the team\u0027s organisation and repository on GitHub; ","lastModifiedDate":"2022-04-10"},{"lineNumber":79,"author":{"gitId":"alanlowzies"},"content":"**(2)** create skeleton codes and packages for the project source code; **(3)** set up and maintained the team\u0027s","lastModifiedDate":"2022-04-10"},{"lineNumber":80,"author":{"gitId":"alanlowzies"},"content":"Google Drive folder, which includes the team\u0027s project notebook and documents for the CS2101 co-requisite module; ","lastModifiedDate":"2022-04-10"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"**(4)** helped to maintain the team\u0027s GitHub repository issue tracker.","lastModifiedDate":"2022-04-10"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":83,"author":{"gitId":"alanlowzies"},"content":"### Review/Mentoring Contributions","lastModifiedDate":"2022-04-03"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"- Reviewed fellow team members\u0027 pull requests (PRs), including (but not limited to):","lastModifiedDate":"2022-04-03"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"  - [PR #71 - Add logging and assertion for update workout](https://github.com/AY2122S2-CS2113T-T09-2/tp/pull/71#pullrequestreview-910244404)","lastModifiedDate":"2022-04-03"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"  - [PR #97 - Add Create Plan Feature](https://github.com/AY2122S2-CS2113T-T09-2/tp/pull/97#pullrequestreview-914977219)","lastModifiedDate":"2022-04-03"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"  - [PR #123 - Branch search workout](https://github.com/AY2122S2-CS2113T-T09-2/tp/pull/123#pullrequestreview-919593971)","lastModifiedDate":"2022-04-03"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"  - [PR #134 - Improve delete workout](https://github.com/AY2122S2-CS2113T-T09-2/tp/pull/134#pullrequestreview-920276634)","lastModifiedDate":"2022-04-03"},{"lineNumber":89,"author":{"gitId":"alanlowzies"},"content":"  - [PR #218 - Branch file bug](https://github.com/AY2122S2-CS2113T-T09-2/tp/pull/218#pullrequestreview-929510891)","lastModifiedDate":"2022-04-03"},{"lineNumber":90,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":91,"author":{"gitId":"alanlowzies"},"content":"### Contributions Beyond the Project Team","lastModifiedDate":"2022-04-03"},{"lineNumber":92,"author":{"gitId":"alanlowzies"},"content":"Provided feedback and potential bug reports to another team\u0027s project (CS2113T-T10-3\u0027s Mod Happy) as part","lastModifiedDate":"2022-04-10"},{"lineNumber":93,"author":{"gitId":"alanlowzies"},"content":"of the Practical Exam Dry-Run (PE-D). The bugs I have reported can be found in this ","lastModifiedDate":"2022-04-10"},{"lineNumber":94,"author":{"gitId":"alanlowzies"},"content":"[GitHub issue tracker](https://github.com/alanlowzies/ped/issues).","lastModifiedDate":"2022-04-10"},{"lineNumber":95,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":96,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-04-03"},{"lineNumber":97,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":98,"author":{"gitId":"alanlowzies"},"content":"## Reflections on the Team Project (tP)","lastModifiedDate":"2022-04-03"},{"lineNumber":99,"author":{"gitId":"alanlowzies"},"content":"Despite having done a couple of software engineering projects back in my polytechnic days, the tP has taught me many","lastModifiedDate":"2022-04-10"},{"lineNumber":100,"author":{"gitId":"alanlowzies"},"content":"new things about the intricacies of a software engineering project. From learning to use Git to learning how to write","lastModifiedDate":"2022-04-10"},{"lineNumber":101,"author":{"gitId":"alanlowzies"},"content":"proper documentations for the intended audience, the practical tP has given me the opportunity to learn these things ","lastModifiedDate":"2022-04-10"},{"lineNumber":102,"author":{"gitId":"alanlowzies"},"content":"which may not have been possible or as effective if I just sat through lectures to learn about these concepts. In","lastModifiedDate":"2022-04-10"},{"lineNumber":103,"author":{"gitId":"alanlowzies"},"content":"addition, the tP has reminded me the importance of communicating effectively with my team members on project matters,","lastModifiedDate":"2022-04-10"},{"lineNumber":104,"author":{"gitId":"alanlowzies"},"content":"and to communicate professionally to get the team to achieve our goals in the project. Thus, I am grateful that the ","lastModifiedDate":"2022-04-10"},{"lineNumber":105,"author":{"gitId":"alanlowzies"},"content":"co-module CS2101 Effective Communication for Computing Professionals was conducted alongside the CS2113T module as it","lastModifiedDate":"2022-04-10"},{"lineNumber":106,"author":{"gitId":"alanlowzies"},"content":"gave us the additional experience of having to present our work to non-technical professionals, which I presume is the","lastModifiedDate":"2022-04-10"},{"lineNumber":107,"author":{"gitId":"alanlowzies"},"content":"norm when working in the industry. Thus, learning how to convert technical topics into something that can be easily","lastModifiedDate":"2022-04-10"},{"lineNumber":108,"author":{"gitId":"alanlowzies"},"content":"understood by non-technical professionals is also an important skill to have.","lastModifiedDate":"2022-04-10"},{"lineNumber":109,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":110,"author":{"gitId":"alanlowzies"},"content":"Overall, this module has given me a greater appreciation for the \u0027art\u0027 of software engineering, especially when thinking","lastModifiedDate":"2022-04-10"},{"lineNumber":111,"author":{"gitId":"alanlowzies"},"content":"about the large tech companies out there having to manage and maintain much more complex software and systems among ","lastModifiedDate":"2022-04-10"},{"lineNumber":112,"author":{"gitId":"alanlowzies"},"content":"large groups of people who are from technical (e.g. software developers) and non-technical (e.g. marketing managers) ","lastModifiedDate":"2022-04-10"},{"lineNumber":113,"author":{"gitId":"alanlowzies"},"content":"backgrounds.","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"emilysim00":2,"alanlowzies":111}},{"path":"docs/team/emilysim00.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"# Emily Sim - Project Portfolio Page","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"## Overview","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"WerkIt! is a command line interface (CLI) application written in Java that allows users to create, view, update and ","lastModifiedDate":"2022-04-10"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"delete the workouts and plans they have created and store them in the application. ","lastModifiedDate":"2022-04-10"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"The users will also be able to schedule their workout plans for a week (7 days). Click ","lastModifiedDate":"2022-04-10"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"[here](https://github.com/AY2122S2-CS2113T-T09-2/tp) for more information.","lastModifiedDate":"2022-04-10"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"### Summary of Contributions","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":"A detailed report of my code contributions to the tP can be found in the ","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"[tP Code Dashboard](https://nus-cs2113-ay2122s2.github.io/tp-dashboard/?search\u003demilysim00\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"emilysim00"},"content":"hosted by the module coordinators of CS2113T.","lastModifiedDate":"2022-04-04"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"#### Summary of my code contributions ","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"* Implemented various WerkIt\u0027s features. A summary of these features implemented by me is stated below. ","lastModifiedDate":"2022-04-04"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"  * **New Feature:** View all workouts \u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"    * **What it does:** Allows user to view all the workouts created by him/her. \u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"    * **Justification:** This feature allows the user to view all workouts stored in the workout list.","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"    They can then create a plan with these workouts.","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"  * **New Feature:** Add/Update a plan for a day in the schedule \u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"    * **What it does:** Allows user to schedule a workout plan on a particular day. \u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"    * **Justification:** Users should be able to schedule any plans they created for a day in the 7-day workout plan schedule. \u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"    * **Highlights:** Users are able to quickly type out the command by indicating the day in the week with integers instead of typing out the name of the day.","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"  * **New Feature:** View schedule \u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"    * **What it does:** Allows user to view all the plans scheduled for the week. \u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"    * **Justification:** This feature allows the user to have an overview of all the plans that have been scheduled.","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"    This would allow them to determine if they would want to make modification to the schedule.","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"  * **New Feature:** Remove plan scheduled on a particular day \u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"    * **What it does:** Allows users to remove the plan scheduled on a particular day. \u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"    * **Justification:** This feature allows the user to change the plan scheduled on a particular day easily.\u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"    * **Highlights:** Users are able to quickly type out the command by indicating the day in the week with integers instead of typing out the name of the day.","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"  * **New Feature:** Reset the 7-days workout plan schedule \u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"    * **What it does:** Allows user to reset his/her workout plan schedule. \u003cbr/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"emilysim00"},"content":"    * **Justification:** This feature allows the user to remove all plans scheduled at once, so they can plan their schedule from the start. ","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"* Wrote the majority of the codes in `Day.java`, `ScheduleCommand.java` and `InvalidScheduleException.java`.","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"emilysim00"},"content":"* Contributed to some codes in exception-related files such as `InvalidCommandException`. ","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"emilysim00"},"content":"* Contributed to some parts of the `UI` such as the `printNewScheduleCreatedMessage(Day newDay)` and ","lastModifiedDate":"2022-04-04"},{"lineNumber":38,"author":{"gitId":"emilysim00"},"content":"`printClearedScheduleMessage()` methods. The former method will print a successful message to indicate ","lastModifiedDate":"2022-04-04"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"that a plan has been successfully scheduled on the day stated. While the latter method will print a successful message to indicate","lastModifiedDate":"2022-04-04"},{"lineNumber":40,"author":{"gitId":"emilysim00"},"content":"that a plan has been successfully removed on the day stated. ","lastModifiedDate":"2022-04-04"},{"lineNumber":41,"author":{"gitId":"emilysim00"},"content":"* Contributed parts of the `Parser` API, mainly the `createScheduleCommand()` method.","lastModifiedDate":"2022-04-04"},{"lineNumber":42,"author":{"gitId":"emilysim00"},"content":"* Wrote the Junits test cases for `ScheduleCommandTest.java`, `DayListTest.java` and parts of `WorkoutListTest.java`.","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":44,"author":{"gitId":"emilysim00"},"content":"#### Enhancements to existing features","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"emilysim00"},"content":"In addition, I have also written JavaDocs for all the methods stated above. Assertions are added into various","lastModifiedDate":"2022-04-04"},{"lineNumber":46,"author":{"gitId":"emilysim00"},"content":"parts of the method to ensure the code works based on assumptions, such as testing the day range. Logging was added to ","lastModifiedDate":"2022-04-10"},{"lineNumber":47,"author":{"gitId":"emilysim00"},"content":"the methods to capture and keep track of the events that has occurred.","lastModifiedDate":"2022-04-10"},{"lineNumber":48,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":49,"author":{"gitId":"emilysim00"},"content":"### Contributions to the User Guide (UG)","lastModifiedDate":"2022-04-04"},{"lineNumber":50,"author":{"gitId":"emilysim00"},"content":"* Wrote the [Introduction and Terminology](../UserGuide.md) section in the User Guide.","lastModifiedDate":"2022-04-04"},{"lineNumber":51,"author":{"gitId":"emilysim00"},"content":"* Wrote guide on [listing all workouts](../UserGuide.md#show-all-workouts-workout-list)","lastModifiedDate":"2022-04-04"},{"lineNumber":52,"author":{"gitId":"emilysim00"},"content":"* Wrote guide on all the [Schedule features](../UserGuide.md#schedule-features) of WerkIt, including `schedule /update`, ","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"emilysim00"},"content":"  `schedule /list`, `schedule /clear` and `schedule /clearall`","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"emilysim00"},"content":"* Wrote the informational sector of WerkIt\u0027s features","lastModifiedDate":"2022-04-04"},{"lineNumber":55,"author":{"gitId":"emilysim00"},"content":"  * [Overview of the all WerkIt\u0027s features](../UserGuide.md#features)","lastModifiedDate":"2022-04-04"},{"lineNumber":56,"author":{"gitId":"emilysim00"},"content":"  * [Explanation on how the different features link with one another](../UserGuide.md#features)","lastModifiedDate":"2022-04-04"},{"lineNumber":57,"author":{"gitId":"emilysim00"},"content":"  * [Explanation of the command syntax for each of the features](../UserGuide.md#finding-your-way-around-the-application)","lastModifiedDate":"2022-04-04"},{"lineNumber":58,"author":{"gitId":"emilysim00"},"content":"* Wrote [command summary](../UserGuide.md#command-summary) for search and schedule features.","lastModifiedDate":"2022-04-04"},{"lineNumber":59,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":60,"author":{"gitId":"emilysim00"},"content":"### Contributions to the Developer Guide (DG)","lastModifiedDate":"2022-04-04"},{"lineNumber":61,"author":{"gitId":"emilysim00"},"content":"* Creating the [Architecture Diagram](../DeveloperGuide.md#architecture-overview) under the Design Section.","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"emilysim00"},"content":"* Wrote the design section on [UI component](../DeveloperGuide.md#ui-component) and added the class diagram of it.","lastModifiedDate":"2022-04-10"},{"lineNumber":63,"author":{"gitId":"emilysim00"},"content":"* Wrote the design section on [Schedule related features](../DeveloperGuide.md#schedule-related-features).","lastModifiedDate":"2022-04-04"},{"lineNumber":64,"author":{"gitId":"emilysim00"},"content":"* Wrote the [Schedule Features](../DeveloperGuide.md#schedule) under ","lastModifiedDate":"2022-04-10"},{"lineNumber":65,"author":{"gitId":"emilysim00"},"content":"the Implementation section (including sequence diagram).","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"emilysim00"},"content":"* Wrote part of [user stories](../DeveloperGuide.md#user-stories).","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"emilysim00"},"content":"* Wrote part of [manual testing instructions](../DeveloperGuide.md#test-on-schedule-features).","lastModifiedDate":"2022-04-10"},{"lineNumber":68,"author":{"gitId":"emilysim00"},"content":"* Wrote the [non-functional requirements](../DeveloperGuide.md#non-functional-requirements) section.","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":70,"author":{"gitId":"emilysim00"},"content":"### Review/Mentoring Contributions","lastModifiedDate":"2022-04-04"},{"lineNumber":71,"author":{"gitId":"emilysim00"},"content":"Reviewed teammates\u0027 pull requests, including (but not limited to):","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"emilysim00"},"content":"* Review 1: [Suggests teammate on the naming convention in DG](https://github.com/AY2122S2-CS2113T-T09-2/tp/pull/240)","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"emilysim00"},"content":"* Review 2: [Reviewed teammate\u0027s PPP write up and suggested improvements to consider](https://github.com/AY2122S2-CS2113T-T09-2/tp/pull/239)","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"emilysim00"},"content":"* Review 3: [Reviewed and gave suggestions on sequence diagram](https://github.com/AY2122S2-CS2113T-T09-2/tp/pull/220)","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":76,"author":{"gitId":"emilysim00"},"content":"Bugs captured, including (but not limited to):","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"emilysim00"},"content":"* Spotted a bug on `schedule /clear` and `schedule /clearall` features. ","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"emilysim00"},"content":"More details on the bug can be viewed in this [issue](https://github.com/AY2122S2-CS2113T-T09-2/tp/issues/165).","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"emilysim00"},"content":"* Spotted a bug on `plan /delete` feature. ","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"emilysim00"},"content":"More details on the bug can be viewed in this [issue](https://github.com/AY2122S2-CS2113T-T09-2/tp/issues/170).","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"emilysim00"},"content":"### Community","lastModifiedDate":"2022-04-10"},{"lineNumber":83,"author":{"gitId":"emilysim00"},"content":"* Provided feedback and potential bug reports to another team\u0027s project ","lastModifiedDate":"2022-04-10"},{"lineNumber":84,"author":{"gitId":"emilysim00"},"content":"[(CS2113T-T11-1\u0027s HotelLite Manager)](https://ay2122s2-cs2113-t11-1.github.io/tp/UserGuide.html) ","lastModifiedDate":"2022-04-04"},{"lineNumber":85,"author":{"gitId":"emilysim00"},"content":"as part of the Practical Exam Dry-Run (PED). ","lastModifiedDate":"2022-04-04"},{"lineNumber":86,"author":{"gitId":"emilysim00"},"content":"  * One of the high severity bug spotted is that the application was unable to remove the housekeeper if ","lastModifiedDate":"2022-04-10"},{"lineNumber":87,"author":{"gitId":"emilysim00"},"content":"  they are being assigned to a hotel room. The program get terminated","lastModifiedDate":"2022-04-10"},{"lineNumber":88,"author":{"gitId":"emilysim00"},"content":"  straight without proper exception handling. ","lastModifiedDate":"2022-04-07"},{"lineNumber":89,"author":{"gitId":"emilysim00"},"content":"  Click [here](https://github.com/emilysim00/ped/issues/8) to view the issues in GitHub.","lastModifiedDate":"2022-04-07"},{"lineNumber":90,"author":{"gitId":"emilysim00"},"content":"  * Another high severity bug reported is on the file management of one of its feature. To find out more details on this ","lastModifiedDate":"2022-04-04"},{"lineNumber":91,"author":{"gitId":"emilysim00"},"content":"  bug, click [here](https://github.com/emilysim00/ped/issues/10).","lastModifiedDate":"2022-04-04"},{"lineNumber":92,"author":{"gitId":"emilysim00"},"content":"  ","lastModifiedDate":"2022-04-04"},{"lineNumber":93,"author":{"gitId":"emilysim00"},"content":"  More reported bugs can be found [here](https://github.com/emilysim00/ped/issues)","lastModifiedDate":"2022-04-04"},{"lineNumber":94,"author":{"gitId":"emilysim00"},"content":"* Suggested and reviewed other team\u0027s Developer Guide ","lastModifiedDate":"2022-04-10"},{"lineNumber":95,"author":{"gitId":"emilysim00"},"content":"  * [Reviewed Group T10-2](https://github.com/nus-cs2113-AY2122S2/tp/pull/7/files/ff6fa7904a5c27a8aeb91b493c812265453b7dda)","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"emilysim00":95}},{"path":"docs/team/musfirahe0556596.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"# Project Portfolio Page of Musfirah Wani (musfirahe0556596)","lastModifiedDate":"2022-04-04"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"## Overview","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"This page showcases my contributions to the development of WerkIt!, a team project (tP) in the CS2113T","lastModifiedDate":"2022-04-04"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"Software Engineering \u0026 Object-Oriented Programming module offered by the School of Computing, National University of","lastModifiedDate":"2022-04-04"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"Singapore.","lastModifiedDate":"2022-04-04"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"### About the Project","lastModifiedDate":"2022-04-04"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"WerkIt! is a command line interface (CLI) application written in Java that allows users to create a weekly workout","lastModifiedDate":"2022-04-04"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"schedule for them to refer to and follow. More details about the project can be found in the following locations:","lastModifiedDate":"2022-04-04"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"* [GitHub Repository](https://github.com/AY2122S2-CS2113T-T09-2/tp)","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"* [WerkIt! User Guide](../UserGuide.md)","lastModifiedDate":"2022-04-04"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"* [WerkIt! Developer Guide](../DeveloperGuide.md)","lastModifiedDate":"2022-04-04"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"### Summary of Contributions","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"### Code Contributed","lastModifiedDate":"2022-04-04"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"A detailed report of my code contributions to the tP can be found in the [tP Code Dashboard](https://nus-cs2113-ay2122s2.github.io/tp-dashboard/?search\u003dMusfirah\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-04-04"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"hosted by the module coordinators of CS2113T.","lastModifiedDate":"2022-04-04"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"![tP Code Dashboard](../images/ppp/musfirahe0556596/tpCodeDashboard.PNG)","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"A summary of my code contributions are as follows:","lastModifiedDate":"2022-04-04"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"- Implemented the `deleteWorkout()` method for workouts under `WorkoutList.java`.","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"  This includes logging, assertions and handling of exceptions in the method.","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"- Contributed to some parts of `WorkoutCommand.java`.","lastModifiedDate":"2022-04-04"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"  The code for calling of the `WorkoutList#deleteWorkout()` method","lastModifiedDate":"2022-04-04"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"  in the `WorkoutCommand` class was added.","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"- Contributed to some parts of the `UI` such as the","lastModifiedDate":"2022-04-04"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"  `printDeleteWorkoutMessage()` and `printNewPlanCreatedMessage()` methods.","lastModifiedDate":"2022-04-04"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"- Contributed to some code in exception-related files such as","lastModifiedDate":"2022-04-04"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"  `InvalidCommandException` and mostly in `InvalidPlanException`.","lastModifiedDate":"2022-04-04"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"- Contributed most to the creation of `Plan` related classes such as","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"  `Plan`, `PlanCommand` and `PlanList`. For `PlanList`, contributed to small methods","lastModifiedDate":"2022-04-04"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"  and also the main plan features like the creation of plans (`createNewPlan()` and `addNewPlanToLists()`)","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"  and listing of all plans (`listAllPlan()`).","lastModifiedDate":"2022-04-04"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"- Implemented the HashMap data structure in `PlanList` API,","lastModifiedDate":"2022-04-04"},{"lineNumber":38,"author":{"gitId":"Musfirahe0556596"},"content":"  referenced from team member Alan\u0027s implementation.","lastModifiedDate":"2022-04-04"},{"lineNumber":39,"author":{"gitId":"Musfirahe0556596"},"content":"- Wrote parts of the `Parser` API, mainly the `createPlanCommand()` method and parts","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"Musfirahe0556596"},"content":"  of the `createWorkoutCommand()` method.","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"Musfirahe0556596"},"content":"- Wrote JUnit test cases for WerkIt! APIs such as the","lastModifiedDate":"2022-04-04"},{"lineNumber":42,"author":{"gitId":"Musfirahe0556596"},"content":"  `PlanListTest`, `PlanCommandTest`, `ParserTest`, `WorkoutCommandTest` and `WorkoutListTest`. Writing JUnit","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"Musfirahe0556596"},"content":"  test cases for some test cases were difficult as it may require the application","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"Musfirahe0556596"},"content":"  to modify files. Examples of particularly time-consuming test cases are provided below:","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"Musfirahe0556596"},"content":"  - Under `PlanCommandTest.java`: Writing test case to ensure plan is created successfully.","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"Musfirahe0556596"},"content":"    It wasn\u0027t an easy task because one needs to modify the `plans.txt` file and also create","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"Musfirahe0556596"},"content":"    plans with a unique name (thus, the `java.util.Random` class is used to help generate plan names with unique","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"Musfirahe0556596"},"content":"    names). The code can be found [here](https://github.com/AY2122S2-CS2113T-T09-2/tp/blob/master/src/test/java/commands/PlanCommandTest.java),","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"Musfirahe0556596"},"content":"    particularly the `execute_validCreatePlan_expectSuccess()` test case.","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"Musfirahe0556596"},"content":"  - Under `WorkoutCommandTest.java`: Writing test case to ensure workouts are created and deleted","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"Musfirahe0556596"},"content":"    properly. Again, it wasn\u0027t an easy task because one needs to modify","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"Musfirahe0556596"},"content":"    the `workouts.txt` file. In addition, the test case for `delete` workout","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"Musfirahe0556596"},"content":"    requires one to keep track of the `plans.txt` file too due to the fact that plans containing the deleted workout gets","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"Musfirahe0556596"},"content":"    deleted too. The code can be found [here](https://github.com/AY2122S2-CS2113T-T09-2/tp/blob/master/src/test/java/commands/WorkoutCommandTest.java),","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"Musfirahe0556596"},"content":"    particularly the `execute_validCreateWorkout_expectSuccess()` and the `execute_validDeleteWorkout_expectSuccess()` test cases.","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"Musfirahe0556596"},"content":"  - For both cases above, the PR can be found [here](https://github.com/AY2122S2-CS2113T-T09-2/tp/pull/251).","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"Musfirahe0556596"},"content":"- Wrote JavaDocs, assertions and logging for methods implemented.","lastModifiedDate":"2022-04-04"},{"lineNumber":58,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":59,"author":{"gitId":"Musfirahe0556596"},"content":"### Contributions to the User Guide (UG)","lastModifiedDate":"2022-04-04"},{"lineNumber":60,"author":{"gitId":"Musfirahe0556596"},"content":"- Wrote parts of the [introduction](../UserGuide.md#introduction) by specifying target user clearly.","lastModifiedDate":"2022-04-10"},{"lineNumber":61,"author":{"gitId":"Musfirahe0556596"},"content":"- Wrote the guide on [deleting an existing workout](../UserGuide.md#delete-a-workout-workout-delete).","lastModifiedDate":"2022-04-06"},{"lineNumber":62,"author":{"gitId":"Musfirahe0556596"},"content":"- Wrote the guide on [creating a new plan](../UserGuide.md#create-a-plan-plan-new).","lastModifiedDate":"2022-04-06"},{"lineNumber":63,"author":{"gitId":"Musfirahe0556596"},"content":"- Wrote the guide on [listing of plans](../UserGuide.md#list-a-plan-plan-list).","lastModifiedDate":"2022-04-06"},{"lineNumber":64,"author":{"gitId":"Musfirahe0556596"},"content":"- Wrote some parts of the [Quick Start Guide](../UserGuide.md#quick-start-guide) section.","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"Musfirahe0556596"},"content":"- Wrote parts of the table of contents.","lastModifiedDate":"2022-04-06"},{"lineNumber":66,"author":{"gitId":"Musfirahe0556596"},"content":"- Wrote parts of the [Command Summary](../UserGuide.md#command-summary).","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"Musfirahe0556596"},"content":"- Contributed to a part of the [FAQ](../UserGuide.md#1-my-terminal-in-windows-is-displaying-weird-symbols-when-i-run-the-application),","lastModifiedDate":"2022-04-10"},{"lineNumber":68,"author":{"gitId":"Musfirahe0556596"},"content":"by suggesting that we should include what weird symbols in the terminal looks like (FAQ written by team member Alan).","lastModifiedDate":"2022-04-10"},{"lineNumber":69,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":70,"author":{"gitId":"Musfirahe0556596"},"content":"### Contributions to the Developer Guide (DG)","lastModifiedDate":"2022-04-04"},{"lineNumber":71,"author":{"gitId":"Musfirahe0556596"},"content":"- Wrote the following contributions to the [\u0027Implementation\u0027](../DeveloperGuide.md#implementation) section:","lastModifiedDate":"2022-04-06"},{"lineNumber":72,"author":{"gitId":"Musfirahe0556596"},"content":"  - How the application deletes an existing workout, including its design considerations","lastModifiedDate":"2022-04-06"},{"lineNumber":73,"author":{"gitId":"Musfirahe0556596"},"content":"    and sequence diagrams ([link](../DeveloperGuide.md#delete-existing-workout)).","lastModifiedDate":"2022-04-06"},{"lineNumber":74,"author":{"gitId":"Musfirahe0556596"},"content":"  - How the application creates a new plan, including its design considerations and","lastModifiedDate":"2022-04-06"},{"lineNumber":75,"author":{"gitId":"Musfirahe0556596"},"content":"    sequence diagrams ([link](../DeveloperGuide.md#create-a-new-plan)).","lastModifiedDate":"2022-04-06"},{"lineNumber":76,"author":{"gitId":"Musfirahe0556596"},"content":"  - How the application lists all plans, including its sequence diagrams","lastModifiedDate":"2022-04-06"},{"lineNumber":77,"author":{"gitId":"Musfirahe0556596"},"content":"    ([link](../DeveloperGuide.md#list-plans)).","lastModifiedDate":"2022-04-06"},{"lineNumber":78,"author":{"gitId":"Musfirahe0556596"},"content":"- Wrote the following contributions to the [\u0027Design\u0027](../DeveloperGuide.md#design) section:","lastModifiedDate":"2022-04-06"},{"lineNumber":79,"author":{"gitId":"Musfirahe0556596"},"content":"  - Came up with the [Architecture Diagram](../DeveloperGuide.md#architecture-overview) of the application and described its overview.","lastModifiedDate":"2022-04-06"},{"lineNumber":80,"author":{"gitId":"Musfirahe0556596"},"content":"  - Wrote the `Logic` component of the architecture, including coming up with its diagrams ([link](../DeveloperGuide.md#logic-component)).","lastModifiedDate":"2022-04-10"},{"lineNumber":81,"author":{"gitId":"Musfirahe0556596"},"content":"  - Wrote the `Workout-related features` under the Feature Overview of the Design section, including coming up with its diagrams ([link](../DeveloperGuide.md#workout-related-features)).","lastModifiedDate":"2022-04-06"},{"lineNumber":82,"author":{"gitId":"Musfirahe0556596"},"content":"- Wrote part of the [glossary](../DeveloperGuide.md#glossary), by including what the term \u0027reps\u0027 means, ","lastModifiedDate":"2022-04-10"},{"lineNumber":83,"author":{"gitId":"Musfirahe0556596"},"content":"to address a [PE-D] bug [here](https://github.com/AY2122S2-CS2113T-T09-2/tp/issues/211).","lastModifiedDate":"2022-04-10"},{"lineNumber":84,"author":{"gitId":"Musfirahe0556596"},"content":"- Wrote parts of the [table of contents](../DeveloperGuide.md#table-of-contents).","lastModifiedDate":"2022-04-10"},{"lineNumber":85,"author":{"gitId":"Musfirahe0556596"},"content":"- Wrote parts of the [Instructions for manual testing](../DeveloperGuide.md#instructions-for-manual-testing).","lastModifiedDate":"2022-04-07"},{"lineNumber":86,"author":{"gitId":"Musfirahe0556596"},"content":"  - Wrote manual test cases for [launch and shutdown](../DeveloperGuide.md#launch-and-shutdown), [deleting a workout](../DeveloperGuide.md#deleting-an-existing-workout),","lastModifiedDate":"2022-04-10"},{"lineNumber":87,"author":{"gitId":"Musfirahe0556596"},"content":"    [creating a plan](../DeveloperGuide.md#creating-a-new-plan) and [listing of plans](../DeveloperGuide.md#listing-all-plans).","lastModifiedDate":"2022-04-07"},{"lineNumber":88,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":89,"author":{"gitId":"Musfirahe0556596"},"content":"### Contributions to Team-Based Tasks","lastModifiedDate":"2022-04-04"},{"lineNumber":90,"author":{"gitId":"Musfirahe0556596"},"content":"- Maintained the team\u0027s Google Drive folder, which includes the team\u0027s project notebook","lastModifiedDate":"2022-04-06"},{"lineNumber":91,"author":{"gitId":"Musfirahe0556596"},"content":"  and other documents for the co-requisite module CS2101.","lastModifiedDate":"2022-04-06"},{"lineNumber":92,"author":{"gitId":"Musfirahe0556596"},"content":"- Helped to maintain the team\u0027s GitHub repository issue tracker by creating issues and also linking","lastModifiedDate":"2022-04-06"},{"lineNumber":93,"author":{"gitId":"Musfirahe0556596"},"content":"  them to the PRs that addresses the issue.","lastModifiedDate":"2022-04-06"},{"lineNumber":94,"author":{"gitId":"Musfirahe0556596"},"content":"- Helped to maintain PRs by assigning them to the members who did the PR and also","lastModifiedDate":"2022-04-06"},{"lineNumber":95,"author":{"gitId":"Musfirahe0556596"},"content":"  assigning them to their respective milestone.","lastModifiedDate":"2022-04-10"},{"lineNumber":96,"author":{"gitId":"Musfirahe0556596"},"content":"- Helped in release management of WerkIt! (for v1.0 and v2.0)","lastModifiedDate":"2022-04-06"},{"lineNumber":97,"author":{"gitId":"Musfirahe0556596"},"content":"- Participated and helped to fix general bugs with the team (this includes but not limited to):","lastModifiedDate":"2022-04-10"},{"lineNumber":98,"author":{"gitId":"Musfirahe0556596"},"content":"  - Added codes to handle empty workout descriptor errors in this [PR](https://github.com/AY2122S2-CS2113T-T09-2/tp/pull/44).","lastModifiedDate":"2022-04-10"},{"lineNumber":99,"author":{"gitId":"Musfirahe0556596"},"content":"  - Improved code quality by renaming constants properly under `PlanCommand.java` in this [PR](https://github.com/AY2122S2-CS2113T-T09-2/tp/pull/293).","lastModifiedDate":"2022-04-10"},{"lineNumber":100,"author":{"gitId":"Musfirahe0556596"},"content":"  - Improved code quality by refactoring the `PlanList#createAndAddPlan()` method in this [PR](https://github.com/AY2122S2-CS2113T-T09-2/tp/pull/310).","lastModifiedDate":"2022-04-10"},{"lineNumber":101,"author":{"gitId":"Musfirahe0556596"},"content":"  - Fix bugs related to `workout /delete` command, due to PE-D findings. [PR link](https://github.com/AY2122S2-CS2113T-T09-2/tp/pull/222).","lastModifiedDate":"2022-04-10"},{"lineNumber":102,"author":{"gitId":"Musfirahe0556596"},"content":"  - Fix bugs related to `plan /new` command, due to PE-D findings. [PR link](https://github.com/AY2122S2-CS2113T-T09-2/tp/pull/278).","lastModifiedDate":"2022-04-10"},{"lineNumber":103,"author":{"gitId":"Musfirahe0556596"},"content":"- Update both UG and DG table of contents together with team members.","lastModifiedDate":"2022-04-10"},{"lineNumber":104,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":105,"author":{"gitId":"Musfirahe0556596"},"content":"### Review/Mentoring Contributions","lastModifiedDate":"2022-04-04"},{"lineNumber":106,"author":{"gitId":"Musfirahe0556596"},"content":"- Constantly reviewed and gave feedbacks to team members\u0027 pull requests.","lastModifiedDate":"2022-04-06"},{"lineNumber":107,"author":{"gitId":"Musfirahe0556596"},"content":"  As of 10/04/2022, I have reviewed 77 out of 205 pull requests.","lastModifiedDate":"2022-04-10"},{"lineNumber":108,"author":{"gitId":"Musfirahe0556596"},"content":"  Below is a screenshot of the number of PR reviews I have made, by","lastModifiedDate":"2022-04-10"},{"lineNumber":109,"author":{"gitId":"Musfirahe0556596"},"content":"  using the appropriate GitHub filters `is:pr reviewed-by:@me`:","lastModifiedDate":"2022-04-10"},{"lineNumber":110,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":111,"author":{"gitId":"Musfirahe0556596"},"content":"![PR Reviews](../images/ppp/musfirahe0556596/PRReviews.PNG)","lastModifiedDate":"2022-04-08"},{"lineNumber":112,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":113,"author":{"gitId":"Musfirahe0556596"},"content":"In addition, review comments done by me can also be seen at the CS2113T\u0027s tp Comment Dashboard [here](https://nus-cs2113-ay2122s2.github.io/dashboards/contents/tp-comments.html).","lastModifiedDate":"2022-04-10"},{"lineNumber":114,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":115,"author":{"gitId":"Musfirahe0556596"},"content":"### Contributions Beyond the Project Team","lastModifiedDate":"2022-04-04"},{"lineNumber":116,"author":{"gitId":"Musfirahe0556596"},"content":"- Provided feedback and filed potential bug reports to another team\u0027s project (CS2113T-T10-1 SplitLah) as part ","lastModifiedDate":"2022-04-06"},{"lineNumber":117,"author":{"gitId":"Musfirahe0556596"},"content":"  of the Practical Exam Dry-Run (PED). Below are the potential bugs found:","lastModifiedDate":"2022-04-10"},{"lineNumber":118,"author":{"gitId":"Musfirahe0556596"},"content":"  - [Bug report 1: Session name not unique across all active session after editing](https://github.com/Musfirahe0556596/ped/issues/1)","lastModifiedDate":"2022-04-06"},{"lineNumber":119,"author":{"gitId":"Musfirahe0556596"},"content":"  - [Bug report 2: Cost did not divide equally when entering a specific value](https://github.com/Musfirahe0556596/ped/issues/2)","lastModifiedDate":"2022-04-06"},{"lineNumber":120,"author":{"gitId":"Musfirahe0556596"},"content":"  - [Bug report 3: Activity name not unique across all activities in a session](https://github.com/Musfirahe0556596/ped/issues/3)","lastModifiedDate":"2022-04-06"},{"lineNumber":121,"author":{"gitId":"Musfirahe0556596"},"content":"  - [Bug report 4: Consideration on who pays what amount to payer directly](https://github.com/Musfirahe0556596/ped/issues/4)","lastModifiedDate":"2022-04-06"},{"lineNumber":122,"author":{"gitId":"Musfirahe0556596"},"content":"  - [Bug report 5: Unable to edit a session if a group of friends is added at first](https://github.com/Musfirahe0556596/ped/issues/5)","lastModifiedDate":"2022-04-06"},{"lineNumber":123,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":124,"author":{"gitId":"Musfirahe0556596"},"content":"---","lastModifiedDate":"2022-04-04"}],"authorContributionMap":{"emilysim00":5,"Musfirahe0556596":119}},{"path":"docs/team/tianaiyan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TianaiYan"},"content":"# Project Portfolio Page of Yan Tianai (TianaiYan)","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"## Overview","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"TianaiYan"},"content":"This page showcases my contributions to the development of WerkIt!, a team project (tP) in the CS2113T","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"TianaiYan"},"content":"Software Engineering \u0026 Object-Oriented Programming module offered by the School of Computing, National University of","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"TianaiYan"},"content":"Singapore.","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"TianaiYan"},"content":"### About the Project","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"TianaiYan"},"content":"WerkIt! is a command line interface (CLI) application written in Java that allows users to create a weekly workout","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"TianaiYan"},"content":"schedule for them to refer to and follow. More details about the project can be found in the following locations:","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"TianaiYan"},"content":"* [GitHub Repository](https://github.com/AY2122S2-CS2113T-T09-2/tp)","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"TianaiYan"},"content":"* [WerkIt! User Guide](../UserGuide.md)","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"TianaiYan"},"content":"* [WerkIt! Developer Guide](../DeveloperGuide.md)","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"### Summary of Contributions","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"TianaiYan"},"content":"### Code Contributed","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"TianaiYan"},"content":"A detailed report of my code contributions to the tP can be found in the ","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"TianaiYan"},"content":"[tP Code Dashboard](https://nus-cs2113-ay2122s2.github.io/tp-dashboard/?search\u003dTianaiYan\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"TianaiYan"},"content":"hosted by the module coordinators of CS2113T.","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"TianaiYan"},"content":"* Implemented `updateWorkout()` method in `WorkoutList` class, which allow users to modify the","lastModifiedDate":"2022-04-10"},{"lineNumber":22,"author":{"gitId":"TianaiYan"},"content":"  repetition value of a workout.","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"TianaiYan"},"content":"* Contributes to most of the part for updating the workouts saved in plan when a workout is updated.","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"TianaiYan"},"content":"  Writes `updatePlanContainsUpdatedWorkout()` method in `PlanList` and methods used in this method.","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"TianaiYan"},"content":"* Implemented `deletePlanContainsDeletedWorkout()` method in `PlanList` class to fix the bug which ","lastModifiedDate":"2022-04-10"},{"lineNumber":26,"author":{"gitId":"TianaiYan"},"content":"  deleting a workout but the deleted workout is still in the plan.","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"TianaiYan"},"content":"* Wrote some methods to clear the plan in the schedule when that plan is deleted, but it was not use at last.","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"TianaiYan"},"content":"* Contributes to some functions to check validity of inputs.","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"TianaiYan"},"content":"* Implemented `listPlanDetails()` method and `deletePlan()` method in `PlanList` class.\u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"TianaiYan"},"content":"  `listPlanDetails()` allows users to see the workouts in a plan. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"TianaiYan"},"content":"  `deletePlan()` allows users to delete a plan from the plan list.","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"TianaiYan"},"content":"* Contributes to some part of the `UI` class. For instance, `printUpdateWorkoutMessage()` method,","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"TianaiYan"},"content":"  `printDeletePlanMessage()` method, which tells user that the command is operated ","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"TianaiYan"},"content":"  correctly, and `help` method related to the functions I implemented.","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"TianaiYan"},"content":"* Implemented the `rewriteAllPlansToFile()` method in `FileManager` class, which allows to rewrite all","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"TianaiYan"},"content":"  the plans to local file `plans.txt`.","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"TianaiYan"},"content":"* Contributes to some parts of the `WorkoutListTest` class and `PlanListTest` class.","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"TianaiYan"},"content":"### Contributions to the UG","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"TianaiYan"},"content":"* Wrote the guide for feature `workout /update`.","lastModifiedDate":"2022-04-10"},{"lineNumber":41,"author":{"gitId":"TianaiYan"},"content":"* Wrote the guide for feature `plan /details` and `plan /delete`.","lastModifiedDate":"2022-04-10"},{"lineNumber":42,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"TianaiYan"},"content":"### Contributions to the DG","lastModifiedDate":"2022-04-10"},{"lineNumber":44,"author":{"gitId":"TianaiYan"},"content":"* Wrote the part for `workout /update` feature.","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"TianaiYan"},"content":"* Wrote the part for `plan /details` and `plan /delete` features.","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"TianaiYan"},"content":"* Added manual testing cases for `workout /update`, `plan /details`, and `plan /delete` features.","lastModifiedDate":"2022-04-10"},{"lineNumber":47,"author":{"gitId":"TianaiYan"},"content":"* Wrote the interaction between components.","lastModifiedDate":"2022-04-10"},{"lineNumber":48,"author":{"gitId":"TianaiYan"},"content":"* Wrote `plan-related features` under `Design` section.","lastModifiedDate":"2022-04-10"},{"lineNumber":49,"author":{"gitId":"TianaiYan"},"content":"* Updated sequence diagram `workout /delete` after wrote the methods to delete the plan","lastModifiedDate":"2022-04-10"},{"lineNumber":50,"author":{"gitId":"TianaiYan"},"content":"  which includes deleted workouts.","lastModifiedDate":"2022-04-10"},{"lineNumber":51,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":52,"author":{"gitId":"TianaiYan"},"content":"### Contributions to Team-Based Tasks","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"TianaiYan"},"content":"* Maintained the issue tracker: Create issues to be done by me and link them to the corresponding issues when creating PRs.","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"TianaiYan"},"content":"* Reviewed PRs, includes [Review 1](https://github.com/AY2122S2-CS2113T-T09-2/tp/pull/97), ","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"TianaiYan"},"content":"  [Review 2](https://github.com/AY2122S2-CS2113T-T09-2/tp/pull/125), ","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"TianaiYan"},"content":"  [Review 3](https://github.com/AY2122S2-CS2113T-T09-2/tp/pull/253).","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":58,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":59,"author":{"gitId":"TianaiYan"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2022-04-10"},{"lineNumber":60,"author":{"gitId":"TianaiYan"},"content":"* Reported 6 bugs ([Bug 1](https://github.com/AY2122S2-CS2113T-T10-2/tp/issues/185), ","lastModifiedDate":"2022-04-10"},{"lineNumber":61,"author":{"gitId":"TianaiYan"},"content":"  [Bug 2](https://github.com/AY2122S2-CS2113T-T10-2/tp/issues/188), ","lastModifiedDate":"2022-04-10"},{"lineNumber":62,"author":{"gitId":"TianaiYan"},"content":"  [Bug 3](https://github.com/AY2122S2-CS2113T-T10-2/tp/issues/193), ","lastModifiedDate":"2022-04-10"},{"lineNumber":63,"author":{"gitId":"TianaiYan"},"content":"  [Bug 4](https://github.com/AY2122S2-CS2113T-T10-2/tp/issues/203), ","lastModifiedDate":"2022-04-10"},{"lineNumber":64,"author":{"gitId":"TianaiYan"},"content":"  [Bug 5](https://github.com/AY2122S2-CS2113T-T10-2/tp/issues/207), ","lastModifiedDate":"2022-04-10"},{"lineNumber":65,"author":{"gitId":"TianaiYan"},"content":"  [Bug 6](https://github.com/AY2122S2-CS2113T-T10-2/tp/issues/212)) for another team\u0027s project (CS2113T-T10-2 PlanITarium).","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"emilysim00":5,"TianaiYan":60}},{"path":"docs/uml/Style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"\u0027Colour Constants","lastModifiedDate":"2022-04-08"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"!define COLOR_LOGIC #LightSkyBlue","lastModifiedDate":"2022-04-08"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"!define COLOR_PARSER #Gold","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"!define COLOR_UI #YellowGreen","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"!define COLOR_WERKIT #SandyBrown","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"!define COLOR_STORAGE #FF6961","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"!define COLOR_MAIN #Cornsilk","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"\u0027General Settings","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"skinparam arrowColor #Black","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"\u0027Class Diagram Settings","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"skinparam classBorderColor #Black","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"\u0027Sequence Diagram Settings","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"skinparam SequenceLifelineBorderColor #Black","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"skinparam participantBorderColor #Black","lastModifiedDate":"2022-04-08"}],"authorContributionMap":{"alanlowzies":17}},{"path":"docs/uml/classDiagrams/PlanRelatedFeatures.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TianaiYan"},"content":"@startuml","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"TianaiYan"},"content":"\u0027https://plantuml.com/class-diagram\u0027","lastModifiedDate":"2022-04-06"},{"lineNumber":3,"author":{"gitId":"TianaiYan"},"content":"!include ../Style.puml","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"TianaiYan"},"content":"hide circle","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"TianaiYan"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"TianaiYan"},"content":"title Class Diagram of Plan Component","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"TianaiYan"},"content":"WerkIt -\u003e Parser","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"TianaiYan"},"content":"WerkIt -\u003e UI","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"TianaiYan"},"content":"WerkIt .r.\u003e PlanCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"TianaiYan"},"content":"Parser .d.\u003e \"{abstract}\\nCommand\"","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"TianaiYan"},"content":"\"{abstract}\\nCommand\" \u003c|-- PlanCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"TianaiYan"},"content":"PlanCommand --\u003e UI","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"TianaiYan"},"content":"PlanCommand -d-\u003e FileManager","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"TianaiYan"},"content":"PlanCommand -r-\u003e PlanList","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"TianaiYan"},"content":"class WerkIt COLOR_WERKIT {","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"TianaiYan"},"content":"+ startContinuousUserPrompt()","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"TianaiYan"},"content":"class PlanList COLOR_LOGIC {","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"TianaiYan"},"content":"+ createNewPlan(userArgument:String):Plan","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"TianaiYan"},"content":"+ addNewPlanToLists(newPlan:Plan):void","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"TianaiYan"},"content":"+ listAllPlan():void","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"TianaiYan"},"content":"+ listPlanDetails(userArgument:String, ui:UI):void","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"TianaiYan"},"content":"+ deletePlan(userArgument:String):Plan","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-04-06"},{"lineNumber":32,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"TianaiYan"},"content":"class FileManager COLOR_STORAGE {","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"TianaiYan"},"content":"+ writeNewPlanToFile(newPlan:Plan):void","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"TianaiYan"},"content":"+ rewriteAllPlansToFile(planList:PlanList):void","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"TianaiYan"},"content":"class \"{abstract}\\nCommand\" COLOR_LOGIC {","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"TianaiYan"},"content":"class PlanCommand COLOR_LOGIC {","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"TianaiYan"},"content":"+ execute():void","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"TianaiYan"},"content":"class UI COLOR_UI {","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"TianaiYan"},"content":"+ getUserInput()","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"TianaiYan"},"content":"+ printNewPlanCreatedMessage(newPlan:Plan):void","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"TianaiYan"},"content":"+ printDeletePlanMessage(deletedPlan:Plan):void","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"TianaiYan"},"content":"class Parser COLOR_PARSER {","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"TianaiYan"},"content":"+ parseUserInput(userInput:String):Command","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"TianaiYan"},"content":"+ createPlanCommand(userInput:String):PlanCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"TianaiYan"},"content":"@enduml","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"TianaiYan":57}},{"path":"docs/uml/classDiagrams/ScheduleClass.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"@startuml","lastModifiedDate":"2022-04-05"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"\u0027https://plantuml.com/class-diagram\u0027","lastModifiedDate":"2022-04-05"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"!include ../Style.puml","lastModifiedDate":"2022-04-10"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"hide circle","lastModifiedDate":"2022-04-05"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-04-05"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"title Class Diagram of Schedule Component","lastModifiedDate":"2022-04-05"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"WerkIt -\u003e Parser","lastModifiedDate":"2022-04-05"},{"lineNumber":12,"author":{"gitId":"emilysim00"},"content":"WerkIt -\u003e UI","lastModifiedDate":"2022-04-05"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"Parser .r.\u003e \"{abstract}\\nCommand\"","lastModifiedDate":"2022-04-05"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"\"{abstract}\\nCommand\" \u003c|-- ScheduleCommand","lastModifiedDate":"2022-04-05"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"ScheduleCommand --\u003e UI","lastModifiedDate":"2022-04-05"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"ScheduleCommand -d-\u003e FileManager","lastModifiedDate":"2022-04-05"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"ScheduleCommand -r-\u003e DayList","lastModifiedDate":"2022-04-05"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"UI \u003c. FileManager","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"class WerkIt COLOR_WERKIT {","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"+ startContinuousUserPrompt()","lastModifiedDate":"2022-04-05"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-04-05"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"class DayList COLOR_LOGIC {","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"+ updateDay(userArgument:String):Day","lastModifiedDate":"2022-04-10"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"+ printSchedule()","lastModifiedDate":"2022-04-05"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"+ clearDayPlan(userArgument:String)","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"+ clearAllSchedule()","lastModifiedDate":"2022-04-05"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"+ clearPlan(dayNumber:int)","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-04-05"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"class FileManager COLOR_STORAGE {","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"+ addFileScheduleToList(dayList:DayList, scheduleFileDataLine:String[]):void","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"emilysim00"},"content":"+ rewriteAllDaysScheduleToFile(dayList:DayList):void","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"+ convertDayScheduleToFileDataFormat(day:Day):String","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-04-05"},{"lineNumber":37,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":38,"author":{"gitId":"emilysim00"},"content":"class \"{abstract}\\nCommand\" COLOR_LOGIC {","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-04-05"},{"lineNumber":40,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":41,"author":{"gitId":"emilysim00"},"content":"class ScheduleCommand COLOR_LOGIC {","lastModifiedDate":"2022-04-10"},{"lineNumber":42,"author":{"gitId":"emilysim00"},"content":"+ execute():void","lastModifiedDate":"2022-04-05"},{"lineNumber":43,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-04-05"},{"lineNumber":44,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":45,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":46,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":47,"author":{"gitId":"emilysim00"},"content":"class UI COLOR_UI {","lastModifiedDate":"2022-04-10"},{"lineNumber":48,"author":{"gitId":"emilysim00"},"content":"+ getUserInput()","lastModifiedDate":"2022-04-05"},{"lineNumber":49,"author":{"gitId":"emilysim00"},"content":"+ printScheduleFileNotFoundMessage():void","lastModifiedDate":"2022-04-05"},{"lineNumber":50,"author":{"gitId":"emilysim00"},"content":"+ printScheduleFileCreatedMessage():void","lastModifiedDate":"2022-04-05"},{"lineNumber":51,"author":{"gitId":"emilysim00"},"content":"+ printNewScheduleCreatedMessage(newDay:Day):void","lastModifiedDate":"2022-04-10"},{"lineNumber":52,"author":{"gitId":"emilysim00"},"content":"+ printClearedScheduleMessage():void","lastModifiedDate":"2022-04-05"},{"lineNumber":53,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-04-05"},{"lineNumber":54,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":55,"author":{"gitId":"emilysim00"},"content":"class Parser COLOR_PARSER {","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"emilysim00"},"content":"+ parseUserInput(userInput:String):Command","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"emilysim00"},"content":"+ createScheduleCommand(userInput:String):ScheduleCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":58,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-04-05"},{"lineNumber":59,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":60,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":61,"author":{"gitId":"emilysim00"},"content":"@enduml","lastModifiedDate":"2022-04-05"}],"authorContributionMap":{"emilysim00":61}},{"path":"docs/uml/classDiagrams/Search.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"hide circle","lastModifiedDate":"2022-04-02"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"!include ../Style.puml","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-04-04"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"skinparam classFontSize 16","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"title Class Diagram of `search` Command","lastModifiedDate":"2022-04-02"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"Main -\u003e WerkIt","lastModifiedDate":"2022-04-02"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"WerkIt -\u003e Parser","lastModifiedDate":"2022-04-02"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"WerkIt --\u003e UI","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"\"{abstract}\\nCommand\" \u003c|-- SearchCommand","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"ExerciseList \u003c-left- SearchCommand","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"PlanList \u003c- SearchCommand","lastModifiedDate":"2022-04-04"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"WorkoutList \u003c-u- SearchCommand","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"Parser ..\u003e \"{abstract}\\nCommand\"","lastModifiedDate":"2022-04-02"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"skinparam classFontSize 16","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"class WerkIt #Sandybrown {","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"+ startContinuousUserPrompt():void","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"class Main COLOR_MAIN {","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"class SearchCommand #LightSkyBlue {","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"+ execute():void","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"+ searchWorkout():void","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"+ searchPlan():void","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"+ searchWorkout():void","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"+ searchExercise():void","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"class \"{abstract}\\nCommand\" #LightSkyBlue {","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"class UI #YellowGreen {","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"a1021492980"},"content":"+ getUserInput():void","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"a1021492980"},"content":"class Parser #Gold {","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"a1021492980"},"content":"+ parseUserInput(userInput:String):Command","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"a1021492980"},"content":"+ createSearchCommand(userInput:String):SearchCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":44,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"a1021492980"},"content":"class ExerciseList #LightSkyBlue {","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"a1021492980"},"content":"+ exercisesList: ArrayList\u003cString\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":48,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-04-04"},{"lineNumber":49,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":50,"author":{"gitId":"a1021492980"},"content":"class WorkoutList #LightSkyBlue {","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"a1021492980"},"content":"+ workoutsDisplayList: ArrayList\u003cString\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":52,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-04-04"},{"lineNumber":53,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":54,"author":{"gitId":"a1021492980"},"content":"class PlanList #LightSkyBlue {","lastModifiedDate":"2022-04-08"},{"lineNumber":55,"author":{"gitId":"a1021492980"},"content":"+ plansDisplayList: ArrayList\u003cString\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":56,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-04-04"},{"lineNumber":57,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"a1021492980"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"a1021492980":58}},{"path":"docs/uml/classDiagrams/StorageComponent.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"@startuml","lastModifiedDate":"2022-04-04"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"!include ../style.puml","lastModifiedDate":"2022-04-04"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-04-04"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"skinparam classFontsize 14","lastModifiedDate":"2022-04-04"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"skinparam classAttributeFontSize 13","lastModifiedDate":"2022-04-04"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"skinparam arrowThickness 2","lastModifiedDate":"2022-04-04"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"skinparam noteFontSize 13","lastModifiedDate":"2022-04-04"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"hide circle","lastModifiedDate":"2022-04-05"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"class UI COLOR_UI {","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"    + printDirectoryNotFoundMessage() : void","lastModifiedDate":"2022-04-05"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"    + printDirectoryCreatedMessage() : void","lastModifiedDate":"2022-04-05"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"    + printExerciseFileNotFoundMessage() : void","lastModifiedDate":"2022-04-05"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"    + printExerciseFileCreatedMessage() : void","lastModifiedDate":"2022-04-05"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-04-05"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"class WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"package \"Logic Component\" \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"    class WorkoutCommand COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"    class PlanCommand COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"    class ScheduleCommand COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-04-04"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"package \"Storage Component\" \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2022-04-05"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"    class FileManager COLOR_STORAGE {","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"        - directoryPath: Path","lastModifiedDate":"2022-04-05"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"        - exerciseFilePath: Path","lastModifiedDate":"2022-04-05"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"        + createDataDirectory() : void","lastModifiedDate":"2022-04-05"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"        + createExerciseFile() : void","lastModifiedDate":"2022-04-05"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"        + loadExercisesFromFile(ExerciseList) : void","lastModifiedDate":"2022-04-05"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"        + addFileWorkoutToList(WorkoutList, String[]) : void","lastModifiedDate":"2022-04-05"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"        + writeNewWorkoutToFile(Workout) : void","lastModifiedDate":"2022-04-05"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"        + rewriteAllWorkoutsToFile(WorkoutList) : void","lastModifiedDate":"2022-04-05"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"        + convertWorkoutToFileDataFormat(String) : String","lastModifiedDate":"2022-04-05"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"    class LogHandler COLOR_STORAGE {","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"        - {static} logFileDirectory: Path","lastModifiedDate":"2022-04-05"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"        - {static} logFilePath: Path","lastModifiedDate":"2022-04-05"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"        + {static} startLogHandler() : void","lastModifiedDate":"2022-04-05"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"        + {static} linkToFileLogger(Logger) : void","lastModifiedDate":"2022-04-05"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"        + {static} checkAndCreateLogsDirectory(): void","lastModifiedDate":"2022-04-05"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-04-05"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"\u0027Associations","lastModifiedDate":"2022-04-04"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"LogHandler ..\u003e FileManager","lastModifiedDate":"2022-04-04"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"FileManager ..\u003e LogHandler","lastModifiedDate":"2022-04-04"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"FileManager --\u003e UI","lastModifiedDate":"2022-04-04"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"UI ..\u003e FileManager","lastModifiedDate":"2022-04-04"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"WerkIt -r-\u003e \"1\" FileManager","lastModifiedDate":"2022-04-05"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"WorkoutCommand --\u003e FileManager","lastModifiedDate":"2022-04-04"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"PlanCommand --\u003e FileManager","lastModifiedDate":"2022-04-04"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"ScheduleCommand --\u003e FileManager","lastModifiedDate":"2022-04-04"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"note right of FileManager #LightSalmon : Not all fields and methods are listed as\\nmany are similar methods called to\\noperate on the other applicaiton files.","lastModifiedDate":"2022-04-04"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"@enduml","lastModifiedDate":"2022-04-04"}],"authorContributionMap":{"alanlowzies":67}},{"path":"docs/uml/classDiagrams/deleteWorkout.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"Main - WerkIt","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"WerkIt --\u003e UI","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"WerkIt --\u003e Parser","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"Command \u003c|- WorkoutCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"Parser ..\u003e Command","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"WorkoutCommand --\u003e WorkoutList","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"WorkoutCommand --\u003e FileManager","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"class WerkIt {","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"+ startContinuousUserPrompt()","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"abstract Command {","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"class Main {","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"class WorkoutCommand {","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"+ void execute()","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"+ WorkoutList getWorkoutList()","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"+ FileManager getFileManager()","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"class UI {","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"# String getUserInput()","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"+ void printDeleteWorkoutMessage(Workout deletedWorkout)","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"class Parser {","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"+ Command parseUserInput(String userInput)","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"Musfirahe0556596"},"content":"+ WorkoutCommand createWorkoutCommand(String userInput)","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"Musfirahe0556596"},"content":"class WorkoutList {","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"Musfirahe0556596"},"content":"+ Workout deleteWorkout(String userArgument)","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"Musfirahe0556596"},"content":"- boolean checkIndexIsWithinRange(int index)","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"Musfirahe0556596"},"content":"class FileManager {","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"Musfirahe0556596"},"content":"+ void rewriteAllWorkoutsToFile(WorkoutList workoutList)","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"Musfirahe0556596"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"emilysim00":1,"Musfirahe0556596":48}},{"path":"docs/uml/classDiagrams/exercise.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"@startuml","lastModifiedDate":"2022-04-04"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2022-04-04"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"!include ../Style.puml","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"hide circle","lastModifiedDate":"2022-04-04"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-04-04"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"skinparam classFontSize 16","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"title Class Diagram of `exercise` Command","lastModifiedDate":"2022-04-04"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"Main -\u003e WerkIt","lastModifiedDate":"2022-04-04"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"WerkIt -\u003e Parser","lastModifiedDate":"2022-04-04"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"WerkIt -up-\u003e UI","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"ExerciseList \u003c-up- ExerciseCommand","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"\"{abstract}\\nCommand\" \u003c|- ExerciseCommand","lastModifiedDate":"2022-04-04"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"class Main COLOR_MAIN {","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"Parser ..\u003e \"{abstract}\\nCommand\"","lastModifiedDate":"2022-04-04"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"class WerkIt #Sandybrown {","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"+ startContinuousUserPrompt():void","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-04-04"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"class \"{abstract}\\nCommand\" #LightSkyBlue {","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"class ExerciseCommand #LightSkyBlue {","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"+ execute():void","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-04-04"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"class UI #YellowGreen {","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"+ getUserInput():void","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-04-04"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"class Parser #Gold {","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"+ parseUserInput(userInput:String):Command","lastModifiedDate":"2022-04-10"},{"lineNumber":38,"author":{"gitId":"a1021492980"},"content":"+ createExerciseCommand(userInput:String):ExerciseCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-04-04"},{"lineNumber":40,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":41,"author":{"gitId":"a1021492980"},"content":"class ExerciseList #LightSkyBlue {","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"a1021492980"},"content":"+ exercisesList: ArrayList\u003cString\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":43,"author":{"gitId":"a1021492980"},"content":"+ printExerciseList():void","lastModifiedDate":"2022-04-10"},{"lineNumber":44,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-04-04"},{"lineNumber":45,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":46,"author":{"gitId":"a1021492980"},"content":"@enduml","lastModifiedDate":"2022-04-04"}],"authorContributionMap":{"a1021492980":46}},{"path":"docs/uml/classDiagrams/listWorkout.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"title Class Diagram of `workout /list` Command","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"Main - WerkIt","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"WerkIt --\u003e UI","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"WerkIt --\u003e Parser","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"Command \u003c|- WorkoutCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"emilysim00"},"content":"Parser ..\u003e Command","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"WorkoutCommand --\u003e WorkoutList","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"class WerkIt {","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"+ startContinuousUserPrompt()","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"abstract Command {","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"class Main {","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"class WorkoutCommand {","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"+ userAction : string","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"+ userArgument : string","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"+ execute() : void","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"+  getWorkoutList() : workoutList","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"emilysim00"},"content":"class UI {","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"# getUserInput() : string","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"emilysim00"},"content":"class Parser {","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"+ parseUserInput(String userInput) : command","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"emilysim00"},"content":"+ createWorkoutCommand(String userInput) : workoutCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"emilysim00"},"content":"class WorkoutList {","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"emilysim00"},"content":"+ workoutsDisplayList : arrayList\u003cstring\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"emilysim00"},"content":"+ listWorkout() : void","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"emilysim00"},"content":"+ continuousPrinting(int index, int noOfPrints) : int","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"emilysim00"},"content":"+ isInputYesOrNo(String answer) : boolean","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"emilysim00"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"emilysim00":49}},{"path":"docs/uml/classDiagrams/logicComponent.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"@startuml","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"!include ../Style.puml","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"skinparam groupInheritance 2","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"skinparam classFontSize 15","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"hide circle","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"hide empty methods","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"hide empty attribute","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"title Class Diagram for Logic Component","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"rectangle Logic {","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"Command \u003c|-- HelpCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"Command \u003c|-- ExitCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"Command \u003c|-- ExerciseCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"Command \u003c|-- WorkoutCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"Command \u003c|-- PlanCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"Command \u003c|-- ScheduleCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"Command \u003c|-- SearchCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"ExerciseList \u003c-u- ExerciseCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"WorkoutList \u003c-u- WorkoutCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"PlanList \u003c-u- WorkoutCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"PlanList \u003c-u- PlanCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"PlanList \u003c-u- ScheduleCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"DayList \u003c-u- ScheduleCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"ExerciseList \u003c-u- SearchCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"WorkoutList \u003c-u- SearchCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"PlanList \u003c-u- SearchCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"Parser-.\u003eCommand:creates \u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"WerkIt-r.\u003eCommand: executes \u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"class \"{abstract}\\nCommand\" as Command COLOR_LOGIC {","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"class Parser COLOR_PARSER {","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"class WerkIt COLOR_WERKIT {","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"Musfirahe0556596"},"content":"class HelpCommand COLOR_LOGIC {","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"Musfirahe0556596"},"content":"class ExitCommand COLOR_LOGIC {","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"Musfirahe0556596"},"content":"class ExerciseCommand COLOR_LOGIC {","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"Musfirahe0556596"},"content":"class WorkoutCommand COLOR_LOGIC {","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"Musfirahe0556596"},"content":"class PlanCommand COLOR_LOGIC {","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"Musfirahe0556596"},"content":"class ScheduleCommand COLOR_LOGIC {","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"Musfirahe0556596"},"content":"class SearchCommand COLOR_LOGIC {","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"Musfirahe0556596"},"content":"class ExerciseList COLOR_LOGIC {","lastModifiedDate":"2022-04-09"},{"lineNumber":54,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"Musfirahe0556596"},"content":"class WorkoutList COLOR_LOGIC {","lastModifiedDate":"2022-04-09"},{"lineNumber":56,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"Musfirahe0556596"},"content":"class PlanList COLOR_LOGIC {","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"Musfirahe0556596"},"content":"class DayList COLOR_LOGIC {","lastModifiedDate":"2022-04-09"},{"lineNumber":60,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-04-06"},{"lineNumber":61,"author":{"gitId":"Musfirahe0556596"},"content":"@enduml","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"Musfirahe0556596":61}},{"path":"docs/uml/classDiagrams/updateWorkout.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TianaiYan"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"TianaiYan"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"TianaiYan"},"content":"title Class Diagram of `workout /update` Command","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"TianaiYan"},"content":"Main - WerkIt","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"TianaiYan"},"content":"WerkIt --\u003e UI","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"TianaiYan"},"content":"WerkIt --\u003e Parser","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"TianaiYan"},"content":"Command \u003c|- WorkoutCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"TianaiYan"},"content":"Parser ..\u003e Command","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"TianaiYan"},"content":"WorkoutCommand --\u003e WorkoutList","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"TianaiYan"},"content":"WorkoutCommand --\u003e FileManager","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"TianaiYan"},"content":"class WerkIt {","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"TianaiYan"},"content":"+ startContinuousUserPrompt()","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"TianaiYan"},"content":"abstract Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"TianaiYan"},"content":"class Main {","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"TianaiYan"},"content":"class WorkoutCommand {","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"TianaiYan"},"content":"+ {static} UPDATE_ACTION_KEYWORD : String","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"TianaiYan"},"content":"- userAction : String","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"TianaiYan"},"content":"- userArguments : String","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"TianaiYan"},"content":"+ execute() : void","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"TianaiYan"},"content":"+ getWorkoutList() : WorkoutList","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"TianaiYan"},"content":"+ FileManager getFileManager()","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"TianaiYan"},"content":"class UI {","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"TianaiYan"},"content":"# getUserInput() : String","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"TianaiYan"},"content":"+ printUpdateWorkoutMessage(updatedWorkout : Workout) : void","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"TianaiYan"},"content":"class Parser {","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"TianaiYan"},"content":"+ parseUserInput(userInput : String) : Command","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"TianaiYan"},"content":"+ createWorkoutCommand(userInput : String) : WorkoutCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"TianaiYan"},"content":"- checkInputForIllegalCharacters((userInput : String) : boolean","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"TianaiYan"},"content":"class WorkoutList {","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"TianaiYan"},"content":"+ updateWorkout(userArgument : String) : Workout","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"TianaiYan"},"content":"- checkIndexIsWithinRange(index : int) : boolean","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"TianaiYan"},"content":"+ getWorkoutFromIndexNum(indexNum : int) : Workout","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"TianaiYan"},"content":"+ checkForExistingWorkout(exerciseName : String, repetitionCount : int) : boolean","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"TianaiYan"},"content":"class FileManager {","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"TianaiYan"},"content":"+ rewriteAllWorkoutsToFile(workoutList : WorkoutList) : void","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"TianaiYan"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"TianaiYan":59}},{"path":"docs/uml/classDiagrams/workoutRelatedFeatures.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"@startuml","lastModifiedDate":"2022-04-04"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2022-04-04"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"!include ../Style.puml","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"hide circle","lastModifiedDate":"2022-04-04"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-04-04"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"skinparam classFontSize 16","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"title Class Diagram of Workout-related Features","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"Parser .r.\u003e \"{abstract}\\nCommand\":creates \u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"\"{abstract}\\nCommand\" \u003c|- WorkoutCommand","lastModifiedDate":"2022-04-04"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"WorkoutCommand -r-\u003e WorkoutList","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"WorkoutCommand --\u003e FileManager","lastModifiedDate":"2022-04-04"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"WorkoutCommand --\u003e UI","lastModifiedDate":"2022-04-04"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"WorkoutCommand -u-\u003e PlanList","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"class PlanList COLOR_LOGIC {","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"+ deletePlanContainsDeletedWorkout(deletedWorkoutDetail:String):void","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"+ updatePlanContainsUpdatedWorkout(workoutToCheck:String, updatedWorkout:Workout):void","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-04-04"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"class FileManager COLOR_STORAGE {","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"+ writeNewWorkoutToFile(newWorkout:Workout):void","lastModifiedDate":"2022-04-10"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"+ rewriteAllWorkoutsToFile(workoutList:WorkoutList):void","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"+ rewriteAllPlansToFile(planList:PlanList):void","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-04-04"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"class \"{abstract}\\nCommand\" COLOR_LOGIC {","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-04-04"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"class WorkoutCommand COLOR_LOGIC {","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"+ execute():void","lastModifiedDate":"2022-04-04"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-04-04"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"class WorkoutList COLOR_LOGIC {","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"+ createNewWorkout(userArgument:String):Workout","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"+ addNewWorkoutToLists(newWorkout:Workout):void","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"+ listAllWorkout():void","lastModifiedDate":"2022-04-04"},{"lineNumber":38,"author":{"gitId":"Musfirahe0556596"},"content":"+ deleteWorkout(userArgument:String):Workout","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"Musfirahe0556596"},"content":"+ updateWorkout(userArgument:String):Workout","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-04-04"},{"lineNumber":41,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":42,"author":{"gitId":"Musfirahe0556596"},"content":"class UI COLOR_UI {","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"Musfirahe0556596"},"content":"+ printNewWorkoutCreatedMessage(newWorkout:Workout):void","lastModifiedDate":"2022-04-10"},{"lineNumber":44,"author":{"gitId":"Musfirahe0556596"},"content":"+ printDeleteWorkoutMessage(deletedWorkout:Workout):void","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"Musfirahe0556596"},"content":"+ printUpdateWorkoutMessage(updatedWorkout:Workout):void","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-04-04"},{"lineNumber":47,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":48,"author":{"gitId":"Musfirahe0556596"},"content":"class Parser COLOR_PARSER {","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"Musfirahe0556596"},"content":"+ parseUserInput(userInput:String):Command","lastModifiedDate":"2022-04-10"},{"lineNumber":50,"author":{"gitId":"Musfirahe0556596"},"content":"+ createWorkoutCommand(userInput:String):WorkoutCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":51,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-04-04"},{"lineNumber":52,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":53,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":54,"author":{"gitId":"Musfirahe0556596"},"content":"@enduml","lastModifiedDate":"2022-04-04"}],"authorContributionMap":{"Musfirahe0556596":54}},{"path":"docs/uml/sequenceDiagrams/exercises/viewExercise.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"@startuml","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"hide footbox","lastModifiedDate":"2022-04-02"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"autonumber","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"title Sequence Diagram of `exercise /list` Command","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"participant \"werkIt\\n:WerkIt\" AS WerkIt #Sandybrown","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"participant \"newCommand\\n:ExerciseCommand\" AS newCommand #LightSkyBlue","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"participant \"exerciseList\\n:ExerciseList\" AS ExerciseList #LightSkyBlue","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"activate WerkIt #Sandybrown","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"ref over WerkIt","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"Obtain and parse user input.","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"end","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"WerkIt -\u003e newCommand : execute()","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"activate newCommand #LightSkyBlue","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"newCommand -\u003e ExerciseList : printExerciseList()","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"activate ExerciseList #LightSkyBlue","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"loop all exercises in plan list","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"newCommand \u003c-- ExerciseList : Show name of exercises","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"end","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"newCommand \u003c-- ExerciseList","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"deactivate ExerciseList","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"WerkIt \u003c-- newCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"a1021492980"},"content":"deactivate newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"a1021492980"},"content":"destroy newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"a1021492980"},"content":"@enduml","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"alanlowzies":1,"a1021492980":40}},{"path":"docs/uml/sequenceDiagrams/miscellaneous/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TianaiYan"},"content":"@startuml","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"TianaiYan"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"TianaiYan"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"TianaiYan"},"content":"hide footbox","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"TianaiYan"},"content":"autonumber","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"TianaiYan"},"content":"Participant \":WerkIt\" as WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"TianaiYan"},"content":"Participant \":UI\" as UI COLOR_UI","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"TianaiYan"},"content":"Participant \":Parser\" as Parser COLOR_PARSER","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"TianaiYan"},"content":"Participant \":Storage\" as Storage COLOR_STORAGE","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"TianaiYan"},"content":"activate WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"TianaiYan"},"content":"WerkIt -\u003e UI : Ask and get user input","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"TianaiYan"},"content":"activate UI COLOR_UI","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"TianaiYan"},"content":"return User input in String","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"TianaiYan"},"content":"deactivate UI","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"TianaiYan"},"content":"WerkIt -\u003e Parser : Parse user input","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"TianaiYan"},"content":"activate Parser COLOR_PARSER","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"TianaiYan"},"content":"create \":Logic\" as Logic #LightSkyBlue","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"TianaiYan"},"content":"Parser -\u003e Logic : Create Command object","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"TianaiYan"},"content":"activate Logic #LightSkyBlue","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"TianaiYan"},"content":"return Command object","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"TianaiYan"},"content":"Parser --\u003e WerkIt : Command object","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"TianaiYan"},"content":"deactivate Parser","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"TianaiYan"},"content":"WerkIt -\u003e Logic : Execute command","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"TianaiYan"},"content":"activate Logic #LightSkyBlue","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"TianaiYan"},"content":"Logic -\u003e UI : Print command completed message","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"TianaiYan"},"content":"activate UI COLOR_UI","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"TianaiYan"},"content":"return","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"TianaiYan"},"content":"deactivate UI","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"TianaiYan"},"content":"Logic -\u003e Storage : Write to local file","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"TianaiYan"},"content":"activate Storage COLOR_STORAGE","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"TianaiYan"},"content":"return","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"TianaiYan"},"content":"deactivate Storage","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"TianaiYan"},"content":"Logic --\u003e WerkIt","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"TianaiYan"},"content":"deactivate Logic","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"TianaiYan"},"content":"@enduml","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"TianaiYan":46}},{"path":"docs/uml/sequenceDiagrams/miscellaneous/logicComponentSD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"@startuml","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-04-06"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"hide footbox","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"autonumber","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"title Sequence Diagram of List Workout.","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"participant \":WerkIt\" AS WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"participant \":Parser\" AS Parser COLOR_PARSER","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"participant \":WorkoutCommand\" AS WorkoutCommand COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"participant \":WorkoutList\" AS WorkoutList COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"activate WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"WerkIt -\u003e Parser : parseUserInput(userInput)","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"activate Parser COLOR_PARSER","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"WerkIt \u003c-- Parser : :WorkoutCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate Parser","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"WerkIt -\u003e WorkoutCommand : execute()","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"activate WorkoutCommand COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"WorkoutCommand -\u003e WorkoutList : listAllWorkout()","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"activate WorkoutList COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"WorkoutCommand \u003c-- WorkoutList","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate WorkoutList","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"WerkIt \u003c-- WorkoutCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate WorkoutCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"@enduml","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"Musfirahe0556596":29}},{"path":"docs/uml/sequenceDiagrams/miscellaneous/obtainAndParseUserInput.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"@startuml","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"title Sequence Diagram Showing Receiving and Parsing User Input","lastModifiedDate":"2022-04-02"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"hide footbox","lastModifiedDate":"2022-04-02"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"autonumber","lastModifiedDate":"2022-04-02"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"participant \"werkIt:WerkIt\" AS WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"participant \"ui:UI\" AS UI COLOR_UI","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"participant \"parser:Parser\" AS Parser COLOR_PARSER","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"activate WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"WerkIt -\u003e UI : getUserInput()","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"activate UI COLOR_UI","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"return userInputTrimmed:String","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"WerkIt -\u003e WerkIt : parseUserInput(userInputTrimmed)","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"activate WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"WerkIt -\u003e Parser : parseUserInput(userInputTrimmed)","lastModifiedDate":"2022-04-02"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"activate Parser COLOR_PARSER","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"ref over Parser","lastModifiedDate":"2022-04-02"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"Check for illegal characters","lastModifiedDate":"2022-04-02"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"end","lastModifiedDate":"2022-04-02"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"alt Command starts with \u0027workout\u0027","lastModifiedDate":"2022-04-02"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"    Parser -\u003e Parser : createWorkoutCommand(userInput)","lastModifiedDate":"2022-04-02"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"    activate Parser COLOR_PARSER","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"    return :WorkoutCommand","lastModifiedDate":"2022-04-02"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"else Command starts with \u0027exit\u0027","lastModifiedDate":"2022-04-02"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"    Parser -\u003e Parser : createExitCommand(userInput)","lastModifiedDate":"2022-04-02"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"    activate Parser COLOR_PARSER","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"    return :ExitCommand","lastModifiedDate":"2022-04-02"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"else Command starts with \u0027help\u0027","lastModifiedDate":"2022-04-02"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"    Parser -\u003e Parser : createHelpCommand(userInput)","lastModifiedDate":"2022-04-02"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"    activate Parser COLOR_PARSER","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"    return :HelpCommand","lastModifiedDate":"2022-04-02"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"else Command starts with \u0027exercise\u0027","lastModifiedDate":"2022-04-02"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"    Parser -\u003e Parser : createExerciseCommand(userInput)","lastModifiedDate":"2022-04-02"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"    activate Parser COLOR_PARSER","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"    return :ExerciseCommand","lastModifiedDate":"2022-04-02"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"else Command starts with \u0027search\u0027","lastModifiedDate":"2022-04-02"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"    Parser -\u003e Parser : createSearchCommand(userInput)","lastModifiedDate":"2022-04-02"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"    activate Parser COLOR_PARSER","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"    return :SearchCommand","lastModifiedDate":"2022-04-02"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"else Command starts with \u0027plan\u0027","lastModifiedDate":"2022-04-02"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"    Parser -\u003e Parser : createPlanCommand(userInput)","lastModifiedDate":"2022-04-02"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"    activate Parser COLOR_PARSER","lastModifiedDate":"2022-04-08"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"    return :PlanCommand","lastModifiedDate":"2022-04-02"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"else Command starts with \u0027schedule\u0027","lastModifiedDate":"2022-04-02"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"    Parser -\u003e Parser : createScheduleCommand(userInput)","lastModifiedDate":"2022-04-02"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"    activate Parser COLOR_PARSER","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"    return :ScheduleCommand","lastModifiedDate":"2022-04-02"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"end","lastModifiedDate":"2022-04-02"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"return newCommand:Command","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"return newCommand:Command","lastModifiedDate":"2022-04-02"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"@enduml","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"alanlowzies":59}},{"path":"docs/uml/sequenceDiagrams/plans/createPlan-Part1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"@startuml","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"autonumber","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"title Sequence Diagram of `plan /new` Command","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"hide footbox","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"werkIt:WerkIt\" AS WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"newCommand\\n:PlanCommand\" AS newCommand COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"planList\\n:PlanList\" AS PlanList COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"ui:UI\" AS UI2 COLOR_UI","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"fileManager:FileManager\" as FileManager COLOR_STORAGE","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"activate WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"ref over WerkIt","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"Obtain and parse user input.","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"WerkIt -\u003e newCommand : execute()","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"activate newCommand COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"newCommand -\u003e PlanList : createNewPlan(userArgument)","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"activate PlanList COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"ref over PlanList","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"Create a new plan.","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"newCommand \u003c-- PlanList : newPlan:Plan","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate PlanList","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"newCommand -\u003e PlanList : addNewPlanToLists(newPlan)","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"activate PlanList COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"newCommand \u003c-- PlanList","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate PlanList","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"newCommand -\u003e UI2 : printNewPlanCreatedMessage(newPlan)","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"activate UI2 COLOR_UI","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"Musfirahe0556596"},"content":"newCommand \u003c-- UI2","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate UI2","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"Musfirahe0556596"},"content":"newCommand -\u003e FileManager : writeNewPlanToFile(newPlan)","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"Musfirahe0556596"},"content":"activate FileManager COLOR_STORAGE","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"Musfirahe0556596"},"content":"ref over FileManager","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"Musfirahe0556596"},"content":"Write new Plan data","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"Musfirahe0556596"},"content":"into file on user\u0027s system.","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"Musfirahe0556596"},"content":"newCommand \u003c-- FileManager","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate FileManager","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"Musfirahe0556596"},"content":"WerkIt \u003c-- newCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate newCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"Musfirahe0556596"},"content":"destroy newCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"Musfirahe0556596"},"content":"@enduml","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"Musfirahe0556596":53,"alanlowzies":1}},{"path":"docs/uml/sequenceDiagrams/plans/createPlan-Part2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"@startuml","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"autonumber 2.1","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"title Sequence Diagram of `PlanList#createNewPlan()`","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"hide footbox","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"planList\\n:PlanList\" AS pl COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"activate pl COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"group sd Write new Plan data into file on user\u0027s system.","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"ref over pl","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"Parse the user input to obtain the plan name and the workout index numbers separated by comma.","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"(Method calls not shown)","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"ref over pl","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"Obtain number of workouts to be added into the new plan (split string by comma).","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"(Method calls not shown)","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"create \"workoutsToAddInAPlanList\\n:ArrayList\u003cWorkout\u003e\" AS wtoadd COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"pl -\u003e wtoadd : new ArrayList\u003cWorkout\u003e()","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"activate wtoadd COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"return","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"loop until all workouts to be added in a plan is added","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"ref over pl","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"Get each individual workout index from user input and","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"fetch the corresponding Workout object from the application\u0027s workout list.","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"(Method calls not shown)","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"Musfirahe0556596"},"content":"pl -\u003e wtoadd : add(workoutToAddObject)","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"Musfirahe0556596"},"content":"activate wtoadd COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"Musfirahe0556596"},"content":"return","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"Musfirahe0556596"},"content":"create \"newPlan:Plan\" AS newPlan COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"Musfirahe0556596"},"content":"pl -\u003e newPlan : new Plan(userPlanNameInput, workoutsToAddInAPlanList)","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"Musfirahe0556596"},"content":"activate newPlan COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"Musfirahe0556596"},"content":"return newPlan:Plan","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"Musfirahe0556596"},"content":"@enduml","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"Musfirahe0556596":48,"alanlowzies":1}},{"path":"docs/uml/sequenceDiagrams/plans/deletePlan-Part1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TianaiYan"},"content":"@startuml","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"TianaiYan"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-04-06"},{"lineNumber":3,"author":{"gitId":"TianaiYan"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"TianaiYan"},"content":"autonumber","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"TianaiYan"},"content":"title Sequence Diagram of `plan /delete` Command","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"TianaiYan"},"content":"hide footbox","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"TianaiYan"},"content":"participant \"werkIt:WerkIt\" AS WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"TianaiYan"},"content":"participant \"deleteCommand\\n:PlanCommand\" AS deleteCommand COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"TianaiYan"},"content":"participant \"planList\\n:PlanList\" AS PlanList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"TianaiYan"},"content":"participant \"ui:UI\" AS UI2 COLOR_UI","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"TianaiYan"},"content":"participant \"fileManager\\n:FileManager\" as FileManager COLOR_STORAGE","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"TianaiYan"},"content":"activate WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"TianaiYan"},"content":"ref over WerkIt","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"TianaiYan"},"content":"Obtain and parse user input.","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"TianaiYan"},"content":"end","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"TianaiYan"},"content":"WerkIt -\u003e deleteCommand : execute()","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"TianaiYan"},"content":"activate deleteCommand COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"TianaiYan"},"content":"deleteCommand -\u003e PlanList : deletePlan(userArguments)","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"TianaiYan"},"content":"activate PlanList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"TianaiYan"},"content":"ref over PlanList","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"TianaiYan"},"content":"Delete plan specified by user.","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"TianaiYan"},"content":"end","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"TianaiYan"},"content":"deleteCommand \u003c-- PlanList : deletedPlan : Plan","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"TianaiYan"},"content":"deactivate PlanList","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"TianaiYan"},"content":"deleteCommand -\u003e UI2 : printDeletePlanMessage(deletedPlan)","lastModifiedDate":"2022-04-06"},{"lineNumber":32,"author":{"gitId":"TianaiYan"},"content":"activate UI2 COLOR_UI","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"TianaiYan"},"content":"deleteCommand \u003c-- UI2","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"TianaiYan"},"content":"deactivate UI2","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"TianaiYan"},"content":"deleteCommand -\u003e FileManager : rewriteAllPlansToFile(planList))","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"TianaiYan"},"content":"activate FileManager COLOR_STORAGE","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"TianaiYan"},"content":"ref over FileManager","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"TianaiYan"},"content":"Rewrite modified planList","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"TianaiYan"},"content":"data into file on user\u0027s system","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"TianaiYan"},"content":"end","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"TianaiYan"},"content":"deleteCommand \u003c-- FileManager","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"TianaiYan"},"content":"deactivate FileManager","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"TianaiYan"},"content":"WerkIt \u003c-- deleteCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"TianaiYan"},"content":"deactivate deleteCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"TianaiYan"},"content":"destroy deleteCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"TianaiYan"},"content":"@enduml","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"TianaiYan":49}},{"path":"docs/uml/sequenceDiagrams/plans/deletePlan-Part2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TianaiYan"},"content":"@startuml","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"TianaiYan"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-04-06"},{"lineNumber":3,"author":{"gitId":"TianaiYan"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"TianaiYan"},"content":"autonumber 2.1","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"TianaiYan"},"content":"skinparam participantBackgroundColor COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"TianaiYan"},"content":"skinparam sequenceLifelineBackgroundColor COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"TianaiYan"},"content":"title Sequence Diagram of `PlanList#deletePlan()`","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"TianaiYan"},"content":"hide footbox","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"TianaiYan"},"content":"participant \"planList\\n:PlanList\" AS pl","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"TianaiYan"},"content":"participant \"plan\\n:Plan\" AS Plan","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"TianaiYan"},"content":"activate pl","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"TianaiYan"},"content":"ref over pl","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"TianaiYan"},"content":"Parse the user input to obtain the plan","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"TianaiYan"},"content":"index number. (Method calls not shown)","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"TianaiYan"},"content":"end","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"TianaiYan"},"content":"ref over pl","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"TianaiYan"},"content":"Check the validity of user input and","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"TianaiYan"},"content":"throw exceptions if checking fails.","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"TianaiYan"},"content":"(Method calls not shown)","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"TianaiYan"},"content":"end","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"TianaiYan"},"content":"pl -\u003e pl :getPlanFromIndexNum(indexToDelete)","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"TianaiYan"},"content":"activate pl","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"TianaiYan"},"content":"return deletedPlan:Plan","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":32,"author":{"gitId":"TianaiYan"},"content":"pl -\u003e Plan : toString()","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"TianaiYan"},"content":"activate Plan","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"TianaiYan"},"content":"return deletedPlanKey:String","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"TianaiYan"},"content":"pl -\u003e \"planDisplayList:\\nArrayList\u003cString\u003e\" :remove(indexToDelete - 1)","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"TianaiYan"},"content":"activate \"planDisplayList:\\nArrayList\u003cString\u003e\" COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"TianaiYan"},"content":"return","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"TianaiYan"},"content":"pl -\u003e \"plansHashMapList:\\nHashMap\" :remove(deletedPlanKey)","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"TianaiYan"},"content":"activate \"plansHashMapList:\\nHashMap\"","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"TianaiYan"},"content":"return","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"TianaiYan"},"content":"@enduml","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"TianaiYan":44}},{"path":"docs/uml/sequenceDiagrams/plans/detailsOfPlan.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TianaiYan"},"content":"@startuml","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"TianaiYan"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-04-06"},{"lineNumber":3,"author":{"gitId":"TianaiYan"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"TianaiYan"},"content":"autonumber","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"TianaiYan"},"content":"title Sequence Diagram of `plan /details` Command","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"TianaiYan"},"content":"hide footbox","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"TianaiYan"},"content":"participant \"werkItn\\:WerkIt\" AS WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"TianaiYan"},"content":"participant \"detailsCommand\\n:PlanCommand\" AS planCommand COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"TianaiYan"},"content":"participant \"planList\\n:PlanList\" AS PlanList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"TianaiYan"},"content":"participant \"plan\\n:Plan\" AS Plan COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"TianaiYan"},"content":"participant \"workout\\n:Workout\" AS Workout COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"TianaiYan"},"content":"activate WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"TianaiYan"},"content":"ref over WerkIt","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"TianaiYan"},"content":"Obtain and parse user input.","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"TianaiYan"},"content":"end","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"TianaiYan"},"content":"WerkIt -\u003e planCommand : execute()","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"TianaiYan"},"content":"activate planCommand COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"TianaiYan"},"content":"planCommand -\u003e PlanList : listPlanDetails(userArguments, ui)","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"TianaiYan"},"content":"activate PlanList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"TianaiYan"},"content":"ref over PlanList","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"TianaiYan"},"content":"Parse the user input to obtain the plan","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"TianaiYan"},"content":"index number. (Method calls not shown)","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"TianaiYan"},"content":"end","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"TianaiYan"},"content":"ref over PlanList","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"TianaiYan"},"content":"Check the validity of user input and","lastModifiedDate":"2022-04-06"},{"lineNumber":32,"author":{"gitId":"TianaiYan"},"content":"throw exceptions if checking fails.","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"TianaiYan"},"content":"(Method calls not shown)","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"TianaiYan"},"content":"end","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"TianaiYan"},"content":"PlanList -\u003e PlanList : getPlanFromIndexNum(indexOfPlan)","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"TianaiYan"},"content":"activate PlanList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"TianaiYan"},"content":"return planToViewDetails : Plan","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"TianaiYan"},"content":"PlanList -\u003e Plan : getWorkoutsInPlanList()","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"TianaiYan"},"content":"activate Plan COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"TianaiYan"},"content":"return workoutsInPlanList : ArrayList\u003cWorkout\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"TianaiYan"},"content":"loop index \u003c numberOfWorkoutsInPlan","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"TianaiYan"},"content":"PlanList -\u003e Plan : get(index)","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"TianaiYan"},"content":"activate Plan COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"TianaiYan"},"content":"Plan -\u003e Workout : toString()","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"TianaiYan"},"content":"activate Workout COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":49,"author":{"gitId":"TianaiYan"},"content":"return workoutDetails:String","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"TianaiYan"},"content":"return workoutDetails:String","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"TianaiYan"},"content":"deactivate Plan","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"TianaiYan"},"content":"end","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"TianaiYan"},"content":"planCommand \u003c-- PlanList","lastModifiedDate":"2022-04-08"},{"lineNumber":55,"author":{"gitId":"TianaiYan"},"content":"deactivate PlanList","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"TianaiYan"},"content":"WerkIt \u003c-- planCommand","lastModifiedDate":"2022-04-08"},{"lineNumber":58,"author":{"gitId":"TianaiYan"},"content":"deactivate planCommand","lastModifiedDate":"2022-04-08"},{"lineNumber":59,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":60,"author":{"gitId":"TianaiYan"},"content":"destroy planCommand","lastModifiedDate":"2022-04-08"},{"lineNumber":61,"author":{"gitId":"TianaiYan"},"content":"@enduml","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"TianaiYan":61}},{"path":"docs/uml/sequenceDiagrams/plans/listPlan.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"@startuml","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"autonumber","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"title Sequence Diagram of `plan /list` Command","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"hide footbox","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"werkIt:WerkIt\" AS WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"newCommand\\n:PlanCommand\" AS newCommand COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"planList\\n:PlanList\" AS PlanList COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"activate WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"ref over WerkIt","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"Obtain and parse user input.","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"WerkIt -\u003e newCommand : execute()","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"activate newCommand COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"newCommand -\u003e PlanList : listAllPlan()","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"activate PlanList COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"opt application plan list is empty","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"newCommand \u003c-- PlanList : No plan created yet message","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"loop all plans in plan list","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"newCommand \u003c-- PlanList : Show name of plans","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"newCommand \u003c-- PlanList","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate PlanList","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"WerkIt \u003c-- newCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate newCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"destroy newCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"@enduml","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"Musfirahe0556596":35,"alanlowzies":1}},{"path":"docs/uml/sequenceDiagrams/schedule/clearAllSchedule.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"@startuml","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"autonumber","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"title Sequence Diagram of `schedule /clearall` Command","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"hide footbox","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":"participant \"werkIt:WerkIt\" AS WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"participant \"newCommand\\n:ScheduleCommand\" AS newCommand COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"emilysim00"},"content":"participant \"dayList\\n:DayList\" AS DayList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"participant \"ui:UI\" AS UI COLOR_UI","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"activate WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"ref over WerkIt","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"Obtain and parse user input","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"WerkIt -\u003e newCommand : execute()","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"activate newCommand COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"newCommand -\u003e DayList : clearAllSchedule()","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"activate DayList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"loop 7 times","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"DayList -\u003e DayList : clearPlan(dayNumber)","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"activate DayList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"return","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"return","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"deactivate DayList","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"emilysim00"},"content":"newCommand -\u003e UI : printClearedScheduleMessage()","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"activate UI COLOR_UI","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"emilysim00"},"content":"UI --\u003e newCommand: Display a message to \\nindicate the process is completed","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"emilysim00"},"content":"deactivate UI","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"participant \"fileManager\\n:FileManager\" as FileManager COLOR_STORAGE","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"emilysim00"},"content":"newCommand -\u003e FileManager : rewriteAllDaysScheduleToFile(newDay)","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"emilysim00"},"content":"activate FileManager COLOR_STORAGE","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"emilysim00"},"content":"ref over FileManager","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"emilysim00"},"content":"Write the plans scheduled","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"emilysim00"},"content":"for the week into \u0027schedule.txt\u0027","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"emilysim00"},"content":"file on user\u0027s system.","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"emilysim00"},"content":"newCommand \u003c-- FileManager","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"emilysim00"},"content":"deactivate FileManager","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"emilysim00"},"content":"newCommand --\u003e WerkIt","lastModifiedDate":"2022-04-10"},{"lineNumber":51,"author":{"gitId":"emilysim00"},"content":"destroy newCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"emilysim00"},"content":"@enduml","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"emilysim00":52}},{"path":"docs/uml/sequenceDiagrams/schedule/clearSchedule.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"@startuml","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"autonumber","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"hide footbox","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"title Sequence Diagram of `schedule /clear` Command","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":"participant \"werkIt:WerkIt\" AS WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"participant \"newCommand\\n:ScheduleCommand\" AS newCommand COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"emilysim00"},"content":"participant \"dayList\\n:DayList\" AS DayList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"participant \"ui:UI\" As UI COLOR_UI","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"activate WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"ref over WerkIt","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"Obtain and parse user input","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"WerkIt -\u003e newCommand : execute()","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"activate newCommand COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"newCommand -\u003e DayList : clearDayPlan(userArgument)","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"activate DayList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"ref over DayList","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"Convert userArgument, dayNumber, from","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"String to int data type","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"(Method calls are not shown)","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"DayList -\u003e DayList : isDayValid(dayNumber)","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"activate DayList COLOR_LOGIC","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"emilysim00"},"content":"return :Boolean","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"emilysim00"},"content":"DayList -\u003e DayList : clearPlan(dayNumber)","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"emilysim00"},"content":"activate DayList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"emilysim00"},"content":"return","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"DayList -\u003e DayList : covertDayNumberToDay(dayNumber)","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"emilysim00"},"content":"activate DayList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"emilysim00"},"content":"return dayName:String","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"emilysim00"},"content":"return","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"emilysim00"},"content":"deactivate DayList","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"emilysim00"},"content":"newCommand -\u003e UI : printClearedScheduleOnADay(dayName)","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"emilysim00"},"content":"activate UI COLOR_UI","lastModifiedDate":"2022-04-08"},{"lineNumber":46,"author":{"gitId":"emilysim00"},"content":"UI--\u003e newCommand: Print successfully remove \\nplan from schedule message","lastModifiedDate":"2022-04-10"},{"lineNumber":47,"author":{"gitId":"emilysim00"},"content":"deactivate UI","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"emilysim00"},"content":"participant \"fileManager\\n:FileManager\" as FileManager COLOR_STORAGE","lastModifiedDate":"2022-04-10"},{"lineNumber":50,"author":{"gitId":"emilysim00"},"content":"newCommand -\u003e FileManager : rewriteAllDaysScheduleToFile(newDay)","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"emilysim00"},"content":"activate FileManager COLOR_STORAGE","lastModifiedDate":"2022-04-08"},{"lineNumber":52,"author":{"gitId":"emilysim00"},"content":"ref over FileManager","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"emilysim00"},"content":"Write the plans scheduled","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"emilysim00"},"content":"for the week into \u0027schedule.txt\u0027","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"emilysim00"},"content":"file on user\u0027s system.","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"emilysim00"},"content":"newCommand \u003c-- FileManager","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"emilysim00"},"content":"deactivate FileManager","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"emilysim00"},"content":"newCommand --\u003e WerkIt","lastModifiedDate":"2022-04-10"},{"lineNumber":60,"author":{"gitId":"emilysim00"},"content":"destroy newCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"emilysim00"},"content":"@enduml","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"emilysim00":61}},{"path":"docs/uml/sequenceDiagrams/schedule/updateSchedule.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"@startuml","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"autonumber","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"title Sequence Diagram of `schedule /update` Command","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"hide footbox","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"participant \"werkIt:WerkIt\" AS WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"emilysim00"},"content":"participant \"newCommand\\n:ScheduleCommand\" AS newCommand COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"participant \"dayList\\n:DayList\" AS DayList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"participant \"ui:UI\" AS UI COLOR_UI","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"participant \"fileManager\\n:FileManager\" as FileManager COLOR_STORAGE","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"activate WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"ref over WerkIt","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"Obtain and parse user input","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"WerkIt -\u003e newCommand : execute()","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"activate newCommand COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"newCommand -\u003e DayList : updateDay(userArgument)","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"activate DayList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"ref over DayList","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"Add/update a","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"plan for a Day.","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"newCommand \u003c-- DayList : newDay:Day","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"deactivate DayList","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"newCommand -\u003e UI : printNewScheduleCreatedMessage(newDay)","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"emilysim00"},"content":"activate UI COLOR_UI","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"newCommand \u003c-- UI : Plan successfully added/updated message","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"emilysim00"},"content":"deactivate UI","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"emilysim00"},"content":"newCommand -\u003e FileManager : rewriteAllDaysScheduleToFile(newDay)","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"activate FileManager COLOR_STORAGE","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"emilysim00"},"content":"ref over FileManager","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"emilysim00"},"content":"Write the plans scheduled","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"emilysim00"},"content":"for the week into \u0027schedule.txt\u0027","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"emilysim00"},"content":"file on user\u0027s system.","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"emilysim00"},"content":"newCommand \u003c-- FileManager","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"emilysim00"},"content":"deactivate FileManager","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"emilysim00"},"content":"WerkIt \u003c-- newCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"emilysim00"},"content":"deactivate newCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"emilysim00"},"content":"destroy newCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"emilysim00"},"content":"@enduml","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"emilysim00":52}},{"path":"docs/uml/sequenceDiagrams/schedule/updateScheduleDetails.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"@startuml","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"autonumber 2.1","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"hide footbox","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"participant \"dayList\\n:DayList\" AS DayList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"activate DayList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"group sd Add/update a plan for a Day.","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"ref over DayList","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"Obtain dayNumber and planNumber (split userInput by spacing).","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"(Method calls are not shown)","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"ref over DayList","lastModifiedDate":"2022-04-10"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"Determine if only dayNumber and planNumber","lastModifiedDate":"2022-04-10"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"is obtained from userInput","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"ref over DayList","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"Convert dayNumber and planNumber from","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"data type String to int","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"(Method calls are not shown)","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"DayList -\u003e DayList:isDayValid(dayNumber)","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"activate DayList COLOR_LOGIC","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"emilysim00"},"content":"return :Boolean","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"emilysim00"},"content":"DayList -\u003e DayList:isPlanValid(planNumber)","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"emilysim00"},"content":"activate DayList COLOR_LOGIC","lastModifiedDate":"2022-04-10"},{"lineNumber":38,"author":{"gitId":"emilysim00"},"content":"return :Boolean","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"emilysim00"},"content":"participant \"planList\\n:PlanList\" AS PlanList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"emilysim00"},"content":"DayList -\u003e PlanList : getPlanDisplayList().get(planNumber - 1)","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"emilysim00"},"content":"activate PlanList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"emilysim00"},"content":"return planToAddKey:String","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"emilysim00"},"content":"DayList -\u003e PlanList : getPlanFromKey(planToAddKey)","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"emilysim00"},"content":"activate PlanList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"emilysim00"},"content":"return planToAdd:Plan","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"emilysim00"},"content":"create \"Day\" AS newDay COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":50,"author":{"gitId":"emilysim00"},"content":"alt scheduleList[dayNumber - 1] \u003d\u003d null","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"emilysim00"},"content":"DayList -\u003e newDay : new Day(dayNumber, planToAdd)","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"emilysim00"},"content":"activate newDay COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"emilysim00"},"content":"return newDay:Day","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"emilysim00"},"content":"else","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"emilysim00"},"content":"DayList -\u003e newDay :setNewPlanForThisDay(newDay, planToAdd)","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"emilysim00"},"content":"activate newDay COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":57,"author":{"gitId":"emilysim00"},"content":"return","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"emilysim00"},"content":"deactivate newDay","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"emilysim00"},"content":"@enduml","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"emilysim00":63}},{"path":"docs/uml/sequenceDiagrams/schedule/viewSchedule.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"@startuml","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"hide footbox","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"autonumber","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"title Sequence Diagram of `schedule /list` Command","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":"participant \"werkIt:WerkIt\" AS WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"participant \"newCommand\\n:ScheduleCommand\" AS newCommand COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"emilysim00"},"content":"participant \"dayList\\n:DayList\" AS DayList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"activate WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"ref over WerkIt","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"Obtain and parse user input","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"WerkIt -\u003e newCommand : execute()","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"activate newCommand COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"newCommand -\u003e DayList : printSchedule()","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"activate DayList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"loop 7 times","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"DayList -\u003e DayList : padWithSpaces(planForDay)","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"activate DayList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"return planForDayWithPadding:String","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"loop 7 times","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"DayList -\u003e DayList : ConvertDayNumberToDay(dayNumber)","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"activate DayList COLOR_LOGIC","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"emilysim00"},"content":"return info:String","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"emilysim00"},"content":"newCommand \u003c-- DayList : Display plans scheduled for the week","lastModifiedDate":"2022-04-10"},{"lineNumber":38,"author":{"gitId":"emilysim00"},"content":"newCommand --\u003e WerkIt","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"destroy newCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"emilysim00"},"content":"@enduml","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"emilysim00":40}},{"path":"docs/uml/sequenceDiagrams/search/searchAll.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"@startuml","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"autonumber","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"hide footbox","lastModifiedDate":"2022-04-02"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"title Sequence Diagram of `search /all` Command","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"participant \"werkIt\\n:WerkIt\" AS WerkIt  #Sandybrown","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"ref over WerkIt","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"Obtain and parse user input.","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"end","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"participant \"newCommand\\n:SearchCommand\" AS newCommand #LightSkyBlue","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"participant \"planList\\n:PlanList\" AS PlanList #LightSkyBlue","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"participant \"exerciseList\\n:ExerciseList\" AS ExerciseList #LightSkyBlue","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"participant \"workoutList\\n:WorkoutList\" AS WorkoutList #LightSkyBlue","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"activate WerkIt  #Sandybrown","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"WerkIt -\u003e newCommand : execute()","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"activate newCommand #LightSkyBlue","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"newCommand -\u003e PlanList : getPlansDisplayList()","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"activate PlanList #LightSkyBlue","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"newCommand \u003c-- PlanList : \"planList:ArrayList\u003cString\u003e\"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"deactivate PlanList","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"newCommand -\u003e ExerciseList : getExerciseList()","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"activate ExerciseList #LightSkyBlue","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"newCommand \u003c-- ExerciseList : \"exerciseList:ArrayList\u003cString\u003e\"","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"deactivate ExerciseList","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"newCommand -\u003e WorkoutList : getWorkoutsDisplayList()","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"a1021492980"},"content":"activate WorkoutList #LightSkyBlue","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"a1021492980"},"content":"newCommand \u003c-- WorkoutList : \"workoutList:ArrayList\u003cString\u003e\"","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"a1021492980"},"content":"deactivate WorkoutList","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":44,"author":{"gitId":"a1021492980"},"content":"newCommand -\u003e newCommand : searchAll()","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"a1021492980"},"content":"activate newCommand #LightSkyBlue","lastModifiedDate":"2022-04-10"},{"lineNumber":47,"author":{"gitId":"a1021492980"},"content":"return A list of exercises, workouts and plans to search is displayed","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":49,"author":{"gitId":"a1021492980"},"content":"newCommand --\u003e WerkIt","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"a1021492980"},"content":"deactivate newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"a1021492980"},"content":"destroy newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"a1021492980"},"content":"@enduml","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"alanlowzies":1,"a1021492980":52}},{"path":"docs/uml/sequenceDiagrams/search/searchExercise.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"@startuml","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"hide footbox","lastModifiedDate":"2022-04-02"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"autonumber","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"title Sequence Diagram of `search /exercise` Command","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"participant \"werkIt\\n:WerkIt\" AS WerkIt #Sandybrown","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"ref over WerkIt","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"Obtain and parse user input.","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"end","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"participant \"newCommand\\n:SearchCommand\" AS newCommand  #LightSkyBlue","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"participant \"exerciseList\\n:ExerciseList\" AS ExerciseList   #LightSkyBlue","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"activate WerkIt #Sandybrown","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"WerkIt -\u003e newCommand : execute()","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"activate newCommand #LightSkyBlue","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"newCommand -\u003e ExerciseList : getExerciseList()","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"activate ExerciseList   #LightSkyBlue","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"newCommand \u003c-- ExerciseList : \"exerciseList:ArrayList\u003cString\u003e\"","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"deactivate ExerciseList","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"newCommand -\u003e newCommand : searchExercise()","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"activate newCommand #LightSkyBlue","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"return A list of exercises to search is displayed","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"newCommand --\u003e WerkIt","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"deactivate newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"destroy newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"@enduml","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"alanlowzies":1,"a1021492980":36}},{"path":"docs/uml/sequenceDiagrams/search/searchPlan.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"@startuml","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"hide footbox","lastModifiedDate":"2022-04-02"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"autonumber","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"title Sequence Diagram of `search /plan` Command","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"participant \"werkIt\\n:WerkIt\" AS WerkIt #Sandybrown","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"ref over WerkIt","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"Obtain and parse user input.","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"end","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"participant \"newCommand\\n:SearchCommand\" AS newCommand #LightSkyBlue","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"participant \"planList\\n:PlanList\" AS PlanList #LightSkyBlue","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"activate WerkIt #Sandybrown","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"WerkIt -\u003e newCommand : execute()","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"activate newCommand #LightSkyBlue","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"newCommand -\u003e PlanList : getPlansDisplayList()","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"activate PlanList #LightSkyBlue","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"newCommand \u003c-- PlanList : \"planList:ArrayList\u003cString\u003e\"","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"deactivate PlanList","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"newCommand -\u003e newCommand : searchPlan()","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"activate newCommand #LightSkyBlue","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"return A list of plans to search is displayed","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"newCommand --\u003e WerkIt","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"deactivate newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"destroy newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"@enduml","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"alanlowzies":1,"a1021492980":36}},{"path":"docs/uml/sequenceDiagrams/search/searchWorkout.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"@startuml","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"hide footbox","lastModifiedDate":"2022-04-02"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"autonumber","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"title Sequence Diagram of `search /workout` Command","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"participant \"werkIt\\n:WerkIt\" AS WerkIt #Sandybrown","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"participant \"newCommand\\n:SearchCommand\" AS newCommand #LightSkyBlue","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"participant \"workoutList\\n:WorkoutList\" AS WorkoutList #LightSkyBlue","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"ref over WerkIt","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"Obtain and parse user input.","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"end","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"activate WerkIt #Sandybrown","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"WerkIt -\u003e newCommand : execute()","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"activate newCommand #LightSkyBlue","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"newCommand -\u003e WorkoutList : getWorkoutsDisplayList()","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"activate WorkoutList #LightSkyBlue","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"newCommand \u003c-- WorkoutList : \"workoutList:ArrayList\u003cString\u003e\"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"deactivate WorkoutList","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"newCommand -\u003e newCommand : searchWorkout()","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"activate newCommand #LightSkyBlue","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"return A list of workouts to search is displayed","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"newCommand --\u003e WerkIt","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"deactivate newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"destroy newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"@enduml","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"alanlowzies":1,"a1021492980":35}},{"path":"docs/uml/sequenceDiagrams/storage/loadWorkoutsTxt.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"@startuml","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-04-06"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"title Sequence Diagram for Loading \u0027workouts.txt\u0027\\ninto WerkIt!","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"hide footbox","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"autonumber","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"participant \":Main\" as Main COLOR_MAIN","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"participant \"werkIt:WerkIt\" as WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"participant \"fileManager\\n:FileManager\" as FileManager COLOR_STORAGE","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"participant \"workoutList\\n:WorkoutList\" as WorkoutList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"activate Main COLOR_MAIN","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"create WerkIt","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"Main -\u003e WerkIt : new WerkIt()","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"activate WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"WerkIt -\u003e WerkIt : loadRequiredDirectoryAndFiles()","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"activate WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"opt workouts.txt already exists prior to app launch","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"WerkIt -\u003e FileManager : loadWorkoutsFromFile(WorkoutList)","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"activate FileManager COLOR_STORAGE","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"loop until last line of workouts.txt is reached","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"ref over FileManager","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"Read in one line of workouts.txt","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"and parse the line.","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"(Method calls not shown)","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"end","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"FileManager -\u003e FileManager : addFileWorkoutToList(WorkoutList, String)","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"activate FileManager COLOR_STORAGE","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"FileManager -\u003e WorkoutList : createNewWorkout(String)","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"activate WorkoutList COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"return newWorkout:Workout","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"FileManager -\u003e WorkoutList : addNewWorkoutToLists(newWorkout)","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"activate WorkoutList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"return","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"return","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"end","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"return hasNoErrorsDuringLoad:boolean","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"ref over WerkIt","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"Print to terminal on file load status.","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"(Method calls not shown)","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"end","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"return","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"return","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"end","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"@enduml","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"alanlowzies":54}},{"path":"docs/uml/sequenceDiagrams/storage/rewriteResourceFile.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"@startuml","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-04-06"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"title Sequence Diagram of Rewriting workouts.txt","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"hide footbox","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"autonumber","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"participant \"workoutCommand\\n:WorkoutCommand\" as WorkoutCommand COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"participant \"fileManager\\n:FileManager\" as FileManager COLOR_STORAGE","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"participant \"workoutList\\n:WorkoutList\" as WorkoutList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"activate WorkoutCommand COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"WorkoutCommand -\u003e FileManager : rewriteAllWorkoutsToFile(WorkoutList)","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"activate FileManager COLOR_STORAGE","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"FileManager -\u003eWorkoutList : getWorkoutsDisplayList()","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"activate WorkoutList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"return workoutsDisplayList:ArrayList\u003cString\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"loop until workoutsDisplayList is\\nfully iterated through","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"FileManager -\u003e WorkoutList : getWorkoutFromKey(workoutKey)","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"activate WorkoutList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"return workoutObject:Workout","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"FileManager -\u003e FileManager : convertWorkoutToFileDataFormat(workoutObject)","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"activate FileManager COLOR_STORAGE","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"return workoutInFileFormat:String","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"ref over FileManager","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"Write workoutInFileFormat","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"into workouts.txt","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"(Method calls not shown)","lastModifiedDate":"2022-04-06"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"end","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"end","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"return","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"@enduml","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"alanlowzies":37}},{"path":"docs/uml/sequenceDiagrams/storage/writeNewLineOfData.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"@startuml","lastModifiedDate":"2022-04-05"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-04-05"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"title Sequence Diagram of Writing a New Workout to workouts.txt","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"hide footbox","lastModifiedDate":"2022-04-05"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"autonumber","lastModifiedDate":"2022-04-05"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"participant \"workoutCommand\\n:WorkoutCommand\" as WorkoutCommand COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"participant \"fileManager\\n:FileManager\" as FileManager COLOR_STORAGE","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"activate WorkoutCommand COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"WorkoutCommand -\u003e FileManager : writeNewWorkoutToFile(newWorkout)","lastModifiedDate":"2022-04-05"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"activate FileManager COLOR_STORAGE","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"FileManager -\u003e FileManager : convertWorkoutToFileDataFormat(newWorkout)","lastModifiedDate":"2022-04-05"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"activate FileManager COLOR_STORAGE","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"return workoutInFileFormat:String","lastModifiedDate":"2022-04-05"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"ref over FileManager","lastModifiedDate":"2022-04-05"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"Write workoutInFileFormat","lastModifiedDate":"2022-04-05"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"into workouts.txt","lastModifiedDate":"2022-04-05"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"(Method calls not shown)","lastModifiedDate":"2022-04-05"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"end","lastModifiedDate":"2022-04-05"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"return","lastModifiedDate":"2022-04-05"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"@enduml","lastModifiedDate":"2022-04-05"}],"authorContributionMap":{"alanlowzies":27}},{"path":"docs/uml/sequenceDiagrams/workouts/CreateNewWorkout.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"@startuml","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"title Sequence Diagram of `WorkoutList#createNewWorkout()`","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"hide footbox","lastModifiedDate":"2022-04-02"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"skinparam participantBackgroundColor COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"skinparam sequenceLifelineBackgroundColor COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"autonumber 2.1","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"participant \"workoutList\\n:WorkoutList\" AS wl","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"activate wl","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"group sd Create new Workout and add it to list.","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"ref over wl","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"Parse the user input to obtain","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"the exercise name and repetition count.","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"(Method calls not shown)","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"end","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"ref over wl","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"Check the validity of user input and","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"throw exceptions if checking fails.","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"(Method calls not shown)","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"end","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"create \"newWorkout:Workout\" AS newWorkout","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"wl -\u003e newWorkout : new Workout(userExerciseInput, userRepsInput)","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"activate newWorkout","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"return newWorkout:Workout","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"end","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"@enduml","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"alanlowzies":36}},{"path":"docs/uml/sequenceDiagrams/workouts/CreateWorkout.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"autonumber","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"title Sequence Diagram of `workout /new` Command","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"hide footbox","lastModifiedDate":"2022-04-02"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"participant \"werkIt:WerkIt\" AS WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"participant \"newCommand\\n:WorkoutCommand\" AS newCommand COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"participant \"ui:UI\" as UI COLOR_UI","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"participant \"workoutList\\n:WorkoutList\" AS WorkoutList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"participant \"fileManager:FileManager\" as FileManager COLOR_STORAGE","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"activate WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"ref over WerkIt","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"Obtain and parse user input.","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"end","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"WerkIt -\u003e newCommand : execute()","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"activate newCommand COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"newCommand -\u003e WorkoutList : createNewWorkout(userArgument)","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"activate WorkoutList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"ref over WorkoutList","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"Create new Workout","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"end","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"newCommand \u003c-- WorkoutList : \"newWorkout:Workout\"","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"deactivate WorkoutList","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"newCommand -\u003e WorkoutList : addNewWorkoutToList(newWorkout)","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"activate WorkoutList COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"ref over WorkoutList","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"Add new Workout to lists","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"(Method calls not shown)","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"end","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"return","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"newCommand -\u003e UI : printNewWorkoutCreatedMessage(newWorkout)","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"activate UI COLOR_UI","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"return","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"newCommand -\u003e FileManager : writeNewWorkoutToFile(newWorkout)","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"activate FileManager COLOR_STORAGE","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"ref over FileManager","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"Write new Workout data","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"into file on user\u0027s system.","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"end","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"newCommand \u003c-- FileManager","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"deactivate FileManager","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"WerkIt \u003c-- newCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"deactivate newCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"destroy newCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"alanlowzies":56}},{"path":"docs/uml/sequenceDiagrams/workouts/deleteWorkout-Part1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"autonumber","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"title Sequence Diagram of `workout /delete` Command","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"hide footbox","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"werkIt:WerkIt\" AS WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"deleteCommand\\n:WorkoutCommand\" AS deleteCommand COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"workoutList\\n:WorkoutList\" AS WorkoutList COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"ui:UI\" AS UI2 COLOR_UI","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"planList\\n:PlanList\" AS PlanList COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"fileManager\\n:FileManager\" as FileManager COLOR_STORAGE","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"activate WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"ref over WerkIt","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"Obtain and parse user input.","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"WerkIt -\u003e deleteCommand : execute()","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"activate deleteCommand COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"deleteCommand -\u003e WorkoutList : deleteWorkout(userArguments)","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"activate WorkoutList COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"ref over WorkoutList","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"Delete workout specified by user.","lastModifiedDate":"2022-04-02"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"deleteCommand \u003c-- WorkoutList : deletedWorkout:Workout","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate WorkoutList","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"deleteCommand -\u003e UI2 : printDeleteWorkoutMessage(deletedWorkout)","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"activate UI2 COLOR_UI","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"deleteCommand \u003c-- UI2","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate UI2","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"TianaiYan"},"content":"deleteCommand -\u003e PlanList : deletePlanContainsDeletedWorkout(deletedWorkout.toString())","lastModifiedDate":"2022-04-02"},{"lineNumber":38,"author":{"gitId":"Musfirahe0556596"},"content":"activate PlanList COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"TianaiYan"},"content":"deleteCommand \u003c-- PlanList","lastModifiedDate":"2022-04-02"},{"lineNumber":40,"author":{"gitId":"TianaiYan"},"content":"deactivate PlanList","lastModifiedDate":"2022-04-02"},{"lineNumber":41,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":42,"author":{"gitId":"Musfirahe0556596"},"content":"deleteCommand -\u003e FileManager : rewriteAllWorkoutsToFile(workoutList)","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"Musfirahe0556596"},"content":"activate FileManager COLOR_STORAGE","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"Musfirahe0556596"},"content":"ref over FileManager","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"Musfirahe0556596"},"content":"Rewrite modified workoutList","lastModifiedDate":"2022-04-02"},{"lineNumber":46,"author":{"gitId":"Musfirahe0556596"},"content":"data into file on user\u0027s system","lastModifiedDate":"2022-04-02"},{"lineNumber":47,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-04-02"},{"lineNumber":48,"author":{"gitId":"Musfirahe0556596"},"content":"deleteCommand \u003c-- FileManager","lastModifiedDate":"2022-04-02"},{"lineNumber":49,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate FileManager","lastModifiedDate":"2022-04-02"},{"lineNumber":50,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":51,"author":{"gitId":"Musfirahe0556596"},"content":"deleteCommand -\u003e FileManager : rewriteAllPlansToFile(planList)","lastModifiedDate":"2022-04-02"},{"lineNumber":52,"author":{"gitId":"Musfirahe0556596"},"content":"activate FileManager COLOR_STORAGE","lastModifiedDate":"2022-04-09"},{"lineNumber":53,"author":{"gitId":"Musfirahe0556596"},"content":"ref over FileManager","lastModifiedDate":"2022-04-02"},{"lineNumber":54,"author":{"gitId":"Musfirahe0556596"},"content":"Rewrite modified planList","lastModifiedDate":"2022-04-02"},{"lineNumber":55,"author":{"gitId":"Musfirahe0556596"},"content":"data into file on user\u0027s system","lastModifiedDate":"2022-04-02"},{"lineNumber":56,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"Musfirahe0556596"},"content":"deleteCommand \u003c-- FileManager","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate FileManager","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"Musfirahe0556596"},"content":"WerkIt \u003c-- deleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate deleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"Musfirahe0556596"},"content":"destroy deleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"Musfirahe0556596"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"Musfirahe0556596":60,"alanlowzies":1,"TianaiYan":3}},{"path":"docs/uml/sequenceDiagrams/workouts/deleteWorkout-Part2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"autonumber 2.1","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"title Sequence Diagram of `WorkoutList#deleteWorkout()`","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"hide footbox","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"workoutList\\n:WorkoutList\" AS wl COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"participant \":Integer\" COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"workoutsDisplayList:\\nArrayList\u003cString\u003e\" COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"workoutsHashMapList:\\nHashMap\" COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"activate wl COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"wl -\u003e \":Integer\" :parseInt(userArgument)","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"activate \":Integer\" COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"return indextoDelete:int","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate \":Integer\"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"wl -\u003e wl :getWorkoutFromIndexNum(indexToDelete)","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"activate wl COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"return deletedWorkout:Workout","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"wl -\u003e \"workoutsDisplayList:\\nArrayList\u003cString\u003e\" :remove(indexToDelete - 1)","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"activate \"workoutsDisplayList:\\nArrayList\u003cString\u003e\" COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"return","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate \"workoutsDisplayList:\\nArrayList\u003cString\u003e\"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"wl -\u003e \"workoutsHashMapList:\\nHashMap\" :remove(deletedWorkout)","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"activate \"workoutsHashMapList:\\nHashMap\" COLOR_LOGIC","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"return","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate \"workoutsHashMapList:\\nHashMap\"","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"Musfirahe0556596":34,"alanlowzies":1}},{"path":"docs/uml/sequenceDiagrams/workouts/listWorkouts.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"@startuml","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-04-01"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"hide footbox","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"autonumber","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"title Sequence Diagram of `workout /list` Command","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"participant \"werkIt:WerkIt\" AS WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":"participant \"newCommand\\n:WorkoutCommand\" AS newCommand COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"participant \"workoutList\\n:WorkoutList\" AS WorkoutList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"emilysim00"},"content":"participant \"workout\\n:Workout\" AS Workout COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"activate WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"ref over WerkIt","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"Obtain and parse user input.","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"WerkIt -\u003e newCommand : execute()","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"activate newCommand COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"newCommand -\u003e WorkoutList : listAllWorkout()","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"activate WorkoutList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"alt workoutDisplayList.size() \u003c\u003d 0","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"WorkoutList --\u003e newCommand: Display list is \\nempty message","lastModifiedDate":"2022-04-10"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"else","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"loop index \u003c\u003d workoutDisplayList.size()","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"WorkoutList -\u003e WorkoutList:getWorkoutFromIndexNum(index)","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"activate WorkoutList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"return workoutObject:Workout","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"WorkoutList-\u003eWorkout: toString()","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"activate Workout COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"return displayString:String","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"emilysim00"},"content":"WorkoutList --\u003e newCommand: Print workouts","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-04-01"},{"lineNumber":36,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"emilysim00"},"content":"newCommand --\u003e WerkIt","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"destroy newCommand","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"emilysim00"},"content":"@enduml","lastModifiedDate":"2022-04-01"}],"authorContributionMap":{"emilysim00":40}},{"path":"docs/uml/sequenceDiagrams/workouts/updateWorkout-Part1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TianaiYan"},"content":"@startuml","lastModifiedDate":"2022-04-02"},{"lineNumber":2,"author":{"gitId":"TianaiYan"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-04-02"},{"lineNumber":3,"author":{"gitId":"TianaiYan"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-04-02"},{"lineNumber":4,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":5,"author":{"gitId":"TianaiYan"},"content":"autonumber","lastModifiedDate":"2022-04-02"},{"lineNumber":6,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":7,"author":{"gitId":"TianaiYan"},"content":"title Sequence Diagram of `workout /update` Command","lastModifiedDate":"2022-04-02"},{"lineNumber":8,"author":{"gitId":"TianaiYan"},"content":"hide footbox","lastModifiedDate":"2022-04-02"},{"lineNumber":9,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":10,"author":{"gitId":"TianaiYan"},"content":"participant \"werkIt:WerkIt\" AS WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"TianaiYan"},"content":"participant \"updateCommand\\n:WorkoutCommand\" AS updateCommand COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"TianaiYan"},"content":"participant \"workoutList\\n:WorkoutList\" AS WorkoutList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"TianaiYan"},"content":"participant \"ui:UI\" AS UI2 COLOR_UI","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"TianaiYan"},"content":"participant \"planList\\n:PlanList\" AS PlanList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"TianaiYan"},"content":"participant \"fileManager\\n:FileManager\" as FileManager COLOR_STORAGE","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":17,"author":{"gitId":"TianaiYan"},"content":"activate WerkIt COLOR_WERKIT","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"TianaiYan"},"content":"ref over WerkIt","lastModifiedDate":"2022-04-02"},{"lineNumber":19,"author":{"gitId":"TianaiYan"},"content":"Obtain and parse user input.","lastModifiedDate":"2022-04-02"},{"lineNumber":20,"author":{"gitId":"TianaiYan"},"content":"end","lastModifiedDate":"2022-04-02"},{"lineNumber":21,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":22,"author":{"gitId":"TianaiYan"},"content":"WerkIt -\u003e updateCommand : execute()","lastModifiedDate":"2022-04-02"},{"lineNumber":23,"author":{"gitId":"TianaiYan"},"content":"activate updateCommand COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"TianaiYan"},"content":"updateCommand -\u003e WorkoutList : getCurrentWorkout(userArguments)","lastModifiedDate":"2022-04-02"},{"lineNumber":25,"author":{"gitId":"TianaiYan"},"content":"activate WorkoutList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"TianaiYan"},"content":"ref over WorkoutList","lastModifiedDate":"2022-04-02"},{"lineNumber":27,"author":{"gitId":"TianaiYan"},"content":"Find workout which will be updated.","lastModifiedDate":"2022-04-02"},{"lineNumber":28,"author":{"gitId":"TianaiYan"},"content":"end","lastModifiedDate":"2022-04-02"},{"lineNumber":29,"author":{"gitId":"TianaiYan"},"content":"updateCommand \u003c-- WorkoutList : currentWorkout:String","lastModifiedDate":"2022-04-02"},{"lineNumber":30,"author":{"gitId":"TianaiYan"},"content":"deactivate WorkoutList","lastModifiedDate":"2022-04-02"},{"lineNumber":31,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":32,"author":{"gitId":"TianaiYan"},"content":"updateCommand -\u003e WorkoutList : updateWorkout(userArguments)","lastModifiedDate":"2022-04-02"},{"lineNumber":33,"author":{"gitId":"TianaiYan"},"content":"activate WorkoutList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"TianaiYan"},"content":"ref over WorkoutList","lastModifiedDate":"2022-04-02"},{"lineNumber":35,"author":{"gitId":"TianaiYan"},"content":"Update workout with new number","lastModifiedDate":"2022-04-02"},{"lineNumber":36,"author":{"gitId":"TianaiYan"},"content":"of repetitions specified by user.","lastModifiedDate":"2022-04-02"},{"lineNumber":37,"author":{"gitId":"TianaiYan"},"content":"end","lastModifiedDate":"2022-04-02"},{"lineNumber":38,"author":{"gitId":"TianaiYan"},"content":"updateCommand \u003c-- WorkoutList : updatedWorkout:Workout","lastModifiedDate":"2022-04-02"},{"lineNumber":39,"author":{"gitId":"TianaiYan"},"content":"deactivate WorkoutList","lastModifiedDate":"2022-04-02"},{"lineNumber":40,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":41,"author":{"gitId":"TianaiYan"},"content":"updateCommand -\u003e UI2 : printUpdateWorkoutMessage(updatedWorkout)","lastModifiedDate":"2022-04-02"},{"lineNumber":42,"author":{"gitId":"TianaiYan"},"content":"activate UI2 COLOR_UI","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"TianaiYan"},"content":"updateCommand \u003c-- UI2","lastModifiedDate":"2022-04-02"},{"lineNumber":44,"author":{"gitId":"TianaiYan"},"content":"deactivate UI2","lastModifiedDate":"2022-04-02"},{"lineNumber":45,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":46,"author":{"gitId":"TianaiYan"},"content":"updateCommand -\u003e PlanList : updatePlanContainsUpdatedWorkout(currentWorkout, updatedWorkout)","lastModifiedDate":"2022-04-02"},{"lineNumber":47,"author":{"gitId":"TianaiYan"},"content":"activate PlanList COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"TianaiYan"},"content":"ref over PlanList","lastModifiedDate":"2022-04-02"},{"lineNumber":49,"author":{"gitId":"TianaiYan"},"content":"Find whether the updated workout","lastModifiedDate":"2022-04-02"},{"lineNumber":50,"author":{"gitId":"TianaiYan"},"content":"is in any plan. If such plan exist,","lastModifiedDate":"2022-04-02"},{"lineNumber":51,"author":{"gitId":"TianaiYan"},"content":"update the planList.","lastModifiedDate":"2022-04-02"},{"lineNumber":52,"author":{"gitId":"TianaiYan"},"content":"end","lastModifiedDate":"2022-04-02"},{"lineNumber":53,"author":{"gitId":"TianaiYan"},"content":"updateCommand \u003c-- PlanList","lastModifiedDate":"2022-04-02"},{"lineNumber":54,"author":{"gitId":"TianaiYan"},"content":"deactivate PlanList","lastModifiedDate":"2022-04-02"},{"lineNumber":55,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":56,"author":{"gitId":"TianaiYan"},"content":"updateCommand -\u003e FileManager : rewriteAllWorkoutsToFile(workoutList)","lastModifiedDate":"2022-04-02"},{"lineNumber":57,"author":{"gitId":"TianaiYan"},"content":"activate FileManager COLOR_STORAGE","lastModifiedDate":"2022-04-08"},{"lineNumber":58,"author":{"gitId":"TianaiYan"},"content":"ref over FileManager","lastModifiedDate":"2022-04-02"},{"lineNumber":59,"author":{"gitId":"TianaiYan"},"content":"Rewrite modified workoutList","lastModifiedDate":"2022-04-02"},{"lineNumber":60,"author":{"gitId":"TianaiYan"},"content":"data into file on user\u0027s system","lastModifiedDate":"2022-04-02"},{"lineNumber":61,"author":{"gitId":"TianaiYan"},"content":"end","lastModifiedDate":"2022-04-02"},{"lineNumber":62,"author":{"gitId":"TianaiYan"},"content":"updateCommand \u003c-- FileManager","lastModifiedDate":"2022-04-02"},{"lineNumber":63,"author":{"gitId":"TianaiYan"},"content":"deactivate FileManager","lastModifiedDate":"2022-04-02"},{"lineNumber":64,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":65,"author":{"gitId":"TianaiYan"},"content":"updateCommand -\u003e FileManager : rewriteAllPlansToFile(planList)","lastModifiedDate":"2022-04-02"},{"lineNumber":66,"author":{"gitId":"TianaiYan"},"content":"activate FileManager COLOR_STORAGE","lastModifiedDate":"2022-04-08"},{"lineNumber":67,"author":{"gitId":"TianaiYan"},"content":"ref over FileManager","lastModifiedDate":"2022-04-02"},{"lineNumber":68,"author":{"gitId":"TianaiYan"},"content":"Rewrite modified planList","lastModifiedDate":"2022-04-02"},{"lineNumber":69,"author":{"gitId":"TianaiYan"},"content":"data into file on user\u0027s system","lastModifiedDate":"2022-04-02"},{"lineNumber":70,"author":{"gitId":"TianaiYan"},"content":"end","lastModifiedDate":"2022-04-02"},{"lineNumber":71,"author":{"gitId":"TianaiYan"},"content":"updateCommand \u003c-- FileManager","lastModifiedDate":"2022-04-02"},{"lineNumber":72,"author":{"gitId":"TianaiYan"},"content":"deactivate FileManager","lastModifiedDate":"2022-04-02"},{"lineNumber":73,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":74,"author":{"gitId":"TianaiYan"},"content":"WerkIt \u003c-- updateCommand","lastModifiedDate":"2022-04-02"},{"lineNumber":75,"author":{"gitId":"TianaiYan"},"content":"deactivate updateCommand","lastModifiedDate":"2022-04-02"},{"lineNumber":76,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":77,"author":{"gitId":"TianaiYan"},"content":"destroy updateCommand","lastModifiedDate":"2022-04-03"},{"lineNumber":78,"author":{"gitId":"TianaiYan"},"content":"@enduml","lastModifiedDate":"2022-04-02"}],"authorContributionMap":{"TianaiYan":78}},{"path":"docs/uml/sequenceDiagrams/workouts/updateWorkout-Part2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TianaiYan"},"content":"@startuml","lastModifiedDate":"2022-04-02"},{"lineNumber":2,"author":{"gitId":"TianaiYan"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-04-02"},{"lineNumber":3,"author":{"gitId":"TianaiYan"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-04-02"},{"lineNumber":4,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":5,"author":{"gitId":"TianaiYan"},"content":"autonumber 4.1","lastModifiedDate":"2022-04-02"},{"lineNumber":6,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":7,"author":{"gitId":"TianaiYan"},"content":"title Sequence Diagram of `WorkoutList#updateWorkout()`","lastModifiedDate":"2022-04-02"},{"lineNumber":8,"author":{"gitId":"TianaiYan"},"content":"hide footbox","lastModifiedDate":"2022-04-02"},{"lineNumber":9,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":10,"author":{"gitId":"TianaiYan"},"content":"participant \"workoutList\\n:WorkoutList\" AS wl COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"TianaiYan"},"content":"participant \"updatedWorkout\\n:Workout\" AS workout COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":13,"author":{"gitId":"TianaiYan"},"content":"activate wl COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":15,"author":{"gitId":"TianaiYan"},"content":"ref over wl","lastModifiedDate":"2022-04-02"},{"lineNumber":16,"author":{"gitId":"TianaiYan"},"content":"Parse the user input to obtain the workout","lastModifiedDate":"2022-04-02"},{"lineNumber":17,"author":{"gitId":"TianaiYan"},"content":"index number and new repetition count.","lastModifiedDate":"2022-04-02"},{"lineNumber":18,"author":{"gitId":"TianaiYan"},"content":"(Method calls not shown)","lastModifiedDate":"2022-04-02"},{"lineNumber":19,"author":{"gitId":"TianaiYan"},"content":"end","lastModifiedDate":"2022-04-02"},{"lineNumber":20,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":21,"author":{"gitId":"TianaiYan"},"content":"ref over wl","lastModifiedDate":"2022-04-02"},{"lineNumber":22,"author":{"gitId":"TianaiYan"},"content":"Check the validity of user input and","lastModifiedDate":"2022-04-02"},{"lineNumber":23,"author":{"gitId":"TianaiYan"},"content":"throw exceptions if checking fails.","lastModifiedDate":"2022-04-02"},{"lineNumber":24,"author":{"gitId":"TianaiYan"},"content":"(Method calls not shown)","lastModifiedDate":"2022-04-02"},{"lineNumber":25,"author":{"gitId":"TianaiYan"},"content":"end","lastModifiedDate":"2022-04-02"},{"lineNumber":26,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":27,"author":{"gitId":"TianaiYan"},"content":"wl -\u003e wl : getWorkoutFromIndexNum(indexToUpdate)","lastModifiedDate":"2022-04-02"},{"lineNumber":28,"author":{"gitId":"TianaiYan"},"content":"activate wl COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"TianaiYan"},"content":"return updatedWorkout:Workout","lastModifiedDate":"2022-04-02"},{"lineNumber":30,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":31,"author":{"gitId":"TianaiYan"},"content":"wl --\u003e workout : setRepetitions(newRepsValue)","lastModifiedDate":"2022-04-02"},{"lineNumber":32,"author":{"gitId":"TianaiYan"},"content":"activate workout COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"TianaiYan"},"content":"return","lastModifiedDate":"2022-04-02"},{"lineNumber":34,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":35,"author":{"gitId":"TianaiYan"},"content":"wl -\u003e wl : updateWorkoutsHashMapList(oldWorkoutKey, updatedWorkout)","lastModifiedDate":"2022-04-02"},{"lineNumber":36,"author":{"gitId":"TianaiYan"},"content":"activate wl COLOR_LOGIC","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"TianaiYan"},"content":"return","lastModifiedDate":"2022-04-02"},{"lineNumber":38,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":39,"author":{"gitId":"TianaiYan"},"content":"@enduml","lastModifiedDate":"2022-04-02"}],"authorContributionMap":{"TianaiYan":39}},{"path":"src/main/java/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"import werkit.WerkIt;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":" * Main entry-point for the WerkIt! application.","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"public class Main {","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"    private static Logger logger \u003d Logger.getLogger(WerkIt.class.getName());","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"        // Start up the WerkIt! application","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"        LogHandler.startLogHandler();","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"        try {","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"            WerkIt werkIt \u003d new WerkIt();","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"            werkIt.startContinuousUserPrompt();","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(UI.IOEXCEPTION_ERROR_MESSAGE);","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.SEVERE, \"Program encountered an IO Exception and needs to terminate.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"            System.exit(-1);","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"        logger.log(Level.INFO, \"Program has finished and is exiting.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"alanlowzies":30}},{"path":"src/main/java/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package commands;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":" * An abstract class representing the basic structure of a command object.","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":" * Design of the commands is inspired by the AddressBook-Level2 project","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":" * Link: https://se-education.org/addressbook-level2/","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"public abstract class Command {","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"    protected String userInput;","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"     * Constructs a Command object and stores the complete user\u0027s input into the object.","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"     * @param userInput A string representing the input the user has entered.","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"    public Command(String userInput) {","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"     * Gets the user input stored in a Command instance.","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"     * @return A string containing the user input.","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"    public String getUserInput() {","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"        return userInput;","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"     * Sets the user input to the specified user input.","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"     * @param userInput The user input to store in the Command object.","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"    public void setUserInput(String userInput) {","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"     * Executes a certain series of actions based on the implementation of the different commands.","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"    public abstract void execute();","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":43,"author":{"gitId":"a1021492980"},"content":"    public abstract String getUserAction();","lastModifiedDate":"2022-04-02"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"alanlowzies":42,"a1021492980":2}},{"path":"src/main/java/commands/ExerciseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"package commands;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"/**","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":" * A class that will handle the commands relating to exercise.","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"public class ExerciseCommand extends Command {","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"    public static final String KEYWORD_BASE \u003d \"exercise\";","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"    public static final String ACTION_KEYWORD_LIST \u003d \"/list\";","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"    private UI ui;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"    private ExerciseList exerciseList;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"    private String userAction;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"    private String userArguments;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"    public ExerciseCommand(String userInput, UI ui, ExerciseList exerciseList,","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"                           String userAction, String userArguments) throws InvalidCommandException {","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"        super(userInput);","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"        this.exerciseList \u003d exerciseList;","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"        setUserAction(userAction);","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"        this.userArguments \u003d userArguments;","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"    public void setUserAction(String userAction) throws InvalidCommandException {","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"        switch (userAction) {","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"        case ACTION_KEYWORD_LIST:","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"            this.userAction \u003d userAction;","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"            break;","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"        default:","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"            String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"            throw new InvalidCommandException(className, InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"a1021492980"},"content":"    @Override","lastModifiedDate":"2022-04-02"},{"lineNumber":40,"author":{"gitId":"a1021492980"},"content":"    public String getUserAction() {","lastModifiedDate":"2022-04-02"},{"lineNumber":41,"author":{"gitId":"a1021492980"},"content":"        return userAction;","lastModifiedDate":"2022-04-02"},{"lineNumber":42,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-02"},{"lineNumber":43,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":44,"author":{"gitId":"a1021492980"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"a1021492980"},"content":"    public void execute() {","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"a1021492980"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"a1021492980"},"content":"            switch (userAction) {","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"a1021492980"},"content":"            case ACTION_KEYWORD_LIST:","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"a1021492980"},"content":"                exerciseList.printExerciseList();","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"a1021492980"},"content":"                break;","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"a1021492980"},"content":"            default:","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"a1021492980"},"content":"                String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"a1021492980"},"content":"                throw new InvalidCommandException(className, InvalidCommandException.INVALID_ACTION_ERROR_MSG); ","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"a1021492980"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"a1021492980"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"a1021492980"},"content":"            System.out.println(\"Please try again\");","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"a1021492980":60}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package commands;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":" * This class is instantiated when the user types \u0027exit\u0027, though no actions will be taken by this class","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":" * as the exiting of the program is done by the WerkIt class.","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"    public static final String KEYWORD_BASE \u003d \"exit\";","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"    public ExitCommand(String userInput) {","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"        super(userInput);","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"    public void execute() {","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"        // No action taken by this class","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"    @Override","lastModifiedDate":"2022-04-02"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"    public String getUserAction() {","lastModifiedDate":"2022-04-02"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"        return null;","lastModifiedDate":"2022-04-02"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-02"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"alanlowzies":18,"a1021492980":5}},{"path":"src/main/java/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package commands;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"/**","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":" * A class that will handle the commands relating to help.","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"    public static final String KEYWORD_BASE \u003d \"help\";","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"    private final UI ui \u003d new UI();","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"    public HelpCommand(String userInput) {","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"        super(userInput);","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"    @Override","lastModifiedDate":"2022-04-02"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"    public String getUserAction() {","lastModifiedDate":"2022-04-02"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"        return null;","lastModifiedDate":"2022-04-02"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-02"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"    public void execute() {","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"        ui.printHelpMessage();","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"emilysim00":1,"alanlowzies":12,"a1021492980":13}},{"path":"src/main/java/commands/InvalidCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package commands;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":" * Thrown to indicate that a command entered by the user is invalid.","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"    public static final String INVALID_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is not recognised.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"    public static final String INVALID_ACTION_ERROR_MSG \u003d \"Uh oh, an invalid user action was specified.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"    public static final String ILLEGAL_CHARACTER_USED_ERROR_MSG \u003d \"Uh oh, an illegal character was found \"","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"            + \"in your input.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"    public static final String INVALID_WORKOUT_LIST_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"TianaiYan"},"content":"            + \"Do you mean \u0027workout /list\u0027?\";","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"    public static final String INVALID_EXERCISE_LIST_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"TianaiYan"},"content":"            + \"Do you mean \u0027exercise /list\u0027?\";","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String INVALID_NEW_WORKOUT_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"            + \"Do you mean \u0027workout /new \u003cexercise name\u003e /reps \u003cnumber of reps\u003e\u0027?\";","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String INVALID_DELETE_WORKOUT_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"            + \"Do you mean \u0027workout /delete \u003cworkout number to delete\u003e\u0027?\";","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"TianaiYan"},"content":"    public static final String INVALID_UPDATE_WORKOUT_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"TianaiYan"},"content":"            + \"Do you mean \u0027workout /update \u003cworkout number to update\u003e \u003cnew number of reps\u003e\u0027?\";","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"    public static final String INVALID_SEARCH_EXERCISE_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"            + \"Do you mean \u0027search /exercise \u003cexercise keyword\u003e\u0027?\";","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"    public static final String INVALID_SEARCH_PLAN_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"            + \"Do you mean \u0027search /plan \u003cplan keyword\u003e\u0027?\";","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"    public static final String INVALID_SEARCH_WORKOUT_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"            + \"Do you mean \u0027search /workout \u003cworkout keyword/reps\u003e\u0027?\";","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"    public static final String INVALID_SEARCH_ALL_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"            + \"Do you mean \u0027search /all \u003ckeyword\u003e\u0027?\";","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String INVALID_NEW_PLAN_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"            + \"Do you mean \u0027plan /new \u003cplan name\u003e /workouts \u003cworkout number(s) to add, separated by comma\u003e\u0027?\";","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String INVALID_PLAN_LIST_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"TianaiYan"},"content":"            + \"Do you mean \u0027plan /list\u0027?\";","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"TianaiYan"},"content":"    public static final String INVALID_DELETE_PLAN_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"TianaiYan"},"content":"            + \"Do you mean \u0027plan /delete \u003cplan number to delete\u003e\u0027?\";","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"TianaiYan"},"content":"    public static final String INVALID_PLAN_DETAILS_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"TianaiYan"},"content":"            + \"Do you mean \u0027plan /details \u003cplan number to view details\u003e\u0027?\";","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"emilysim00"},"content":"    public static final String INVALID_SCHEDULE_UPDATE_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"TianaiYan"},"content":"            + \"Do you mean \u0027schedule /update \u003cday number [1-7]\u003e \u003cplan number\u003e\u0027?\";","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"    public static final String INVALID_SCHEDULE_LIST_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"TianaiYan"},"content":"            + \"Do you mean \u0027schedule /list\u0027?\";","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"emilysim00"},"content":"    public static final String INVALID_SCHEDULE_CLEAR_ALL_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"TianaiYan"},"content":"            + \"Do you mean \u0027schedule /clearall\u0027?\";","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"emilysim00"},"content":"    public static final String INVALID_SCHEDULE_CLEAR_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"TianaiYan"},"content":"            + \"Do you mean \u0027schedule /clear \u003cday number [1-7]\u003e\u0027?\";","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"a1021492980"},"content":"    public static final String INVALID_HELP_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-04-02"},{"lineNumber":46,"author":{"gitId":"a1021492980"},"content":"            + \"Do you mean \u0027help\u0027?\";","lastModifiedDate":"2022-04-02"},{"lineNumber":47,"author":{"gitId":"a1021492980"},"content":"    public static final String INVALID_EXIT_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"a1021492980"},"content":"            + \"Do you mean \u0027exit\u0027?\";","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"    private String throwingClass;","lastModifiedDate":"2022-03-05"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"     * Constructs an InvalidCommandException with the class that threw it and the error message.","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"     * @param throwingClass The class that threw this InvalidCommandException.","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"     * @param errorMessage  The accompanying error message.","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"    public InvalidCommandException(String throwingClass, String errorMessage) {","lastModifiedDate":"2022-03-05"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"        super(errorMessage);","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"        this.throwingClass \u003d throwingClass;","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"     * Gets the class that threw this InvalidCommandException.","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"     * @return A string containing the name of the class that threw this exception.","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"    public String getThrowingClass() {","lastModifiedDate":"2022-03-05"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"        return this.throwingClass;","lastModifiedDate":"2022-03-05"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"emilysim00":4,"Musfirahe0556596":7,"alanlowzies":33,"TianaiYan":13,"a1021492980":14}},{"path":"src/main/java/commands/PlanCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package commands;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"import data.plans.InvalidPlanException;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"import data.plans.Plan;","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"import storage.FileManager;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":" * A class that will handle the commands relating to plan.","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"public class PlanCommand extends Command {","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String KEYWORD_BASE \u003d \"plan\";","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String ACTION_KEYWORD_CREATE \u003d \"/new\";","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String ACTION_KEYWORD_CREATE_WORKOUTS \u003d \"/workouts\";","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String ACTION_KEYWORD_LIST \u003d \"/list\";","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String ACTION_KEYWORD_DETAILS \u003d \"/details\";","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String ACTION_KEYWORD_DELETE \u003d \"/delete\";","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"    private FileManager fileManager;","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"    private UI ui \u003d new UI();","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"    private PlanList planList;","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"    private String userAction;","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"    private String userArguments;","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"    private static Logger logger \u003d Logger.getLogger(PlanCommand.class.getName());","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"     * Constructs a new instance of the PlanCommand. Constructed when the user enters a","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"     * plan-related command.","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param userInput The user\u0027s full original input.","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param fileManager An instance of the FileManager class.","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param planList An instance of the PlanList class.","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param userAction The action that was parsed from the user\u0027s input.","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param userArguments The arguments that are accompanied by the user action.","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws InvalidCommandException If the command entered by the user is incorrect.","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"Musfirahe0556596"},"content":"    public PlanCommand(String userInput, FileManager fileManager, PlanList planList,","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"Musfirahe0556596"},"content":"                       String userAction, String userArguments) throws InvalidCommandException {","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"        super(userInput);","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"Musfirahe0556596"},"content":"        this.fileManager \u003d fileManager;","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"Musfirahe0556596"},"content":"        this.planList \u003d planList;","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"Musfirahe0556596"},"content":"        setUserAction(userAction);","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"Musfirahe0556596"},"content":"        this.userArguments \u003d userArguments;","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"Musfirahe0556596"},"content":"        LogHandler.linkToFileLogger(logger);","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"Musfirahe0556596"},"content":"     * Gets the instance of the UI class.","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return An instance of the UI class.","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"Musfirahe0556596"},"content":"    public UI getUI() {","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"Musfirahe0556596"},"content":"        return this.ui;","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"Musfirahe0556596"},"content":"     * Gets the instance of the FileManager class.","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return An instance of the FileManager class.","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"Musfirahe0556596"},"content":"    public FileManager getFileManager() {","lastModifiedDate":"2022-03-19"},{"lineNumber":71,"author":{"gitId":"Musfirahe0556596"},"content":"        return this.fileManager;","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":73,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":75,"author":{"gitId":"Musfirahe0556596"},"content":"     * Gets the instance of the PlanList class.","lastModifiedDate":"2022-03-19"},{"lineNumber":76,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":77,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return An instance of the PlanList class.","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"Musfirahe0556596"},"content":"    public PlanList getPlanList() {","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"Musfirahe0556596"},"content":"        return this.planList;","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"Musfirahe0556596"},"content":"     * Gets the action of the plan command specified by the user.","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":86,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return A string containing the action specified by the user.","lastModifiedDate":"2022-03-19"},{"lineNumber":87,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":88,"author":{"gitId":"Musfirahe0556596"},"content":"    public String getUserAction() {","lastModifiedDate":"2022-03-19"},{"lineNumber":89,"author":{"gitId":"Musfirahe0556596"},"content":"        return this.userAction;","lastModifiedDate":"2022-03-19"},{"lineNumber":90,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":91,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":93,"author":{"gitId":"Musfirahe0556596"},"content":"     * Checks for the validity of the action specified by the user and sets the class field","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"Musfirahe0556596"},"content":"     * userAction to the action (if valid).","lastModifiedDate":"2022-03-19"},{"lineNumber":95,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":96,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param userAction A string containing the action specified by the user.","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws InvalidCommandException If the action specified by the user is invalid.","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"Musfirahe0556596"},"content":"    public void setUserAction(String userAction) throws InvalidCommandException {","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"Musfirahe0556596"},"content":"        switch (userAction) {","lastModifiedDate":"2022-03-19"},{"lineNumber":101,"author":{"gitId":"Musfirahe0556596"},"content":"        case ACTION_KEYWORD_CREATE:","lastModifiedDate":"2022-04-08"},{"lineNumber":102,"author":{"gitId":"Musfirahe0556596"},"content":"            //Fallthrough","lastModifiedDate":"2022-03-19"},{"lineNumber":103,"author":{"gitId":"Musfirahe0556596"},"content":"        case ACTION_KEYWORD_LIST:","lastModifiedDate":"2022-04-08"},{"lineNumber":104,"author":{"gitId":"Musfirahe0556596"},"content":"            //Fallthrough","lastModifiedDate":"2022-03-19"},{"lineNumber":105,"author":{"gitId":"Musfirahe0556596"},"content":"        case ACTION_KEYWORD_DELETE:","lastModifiedDate":"2022-04-08"},{"lineNumber":106,"author":{"gitId":"Musfirahe0556596"},"content":"            //Fallthrough","lastModifiedDate":"2022-03-19"},{"lineNumber":107,"author":{"gitId":"Musfirahe0556596"},"content":"        case ACTION_KEYWORD_DETAILS:","lastModifiedDate":"2022-04-08"},{"lineNumber":108,"author":{"gitId":"Musfirahe0556596"},"content":"            this.userAction \u003d userAction;","lastModifiedDate":"2022-03-19"},{"lineNumber":109,"author":{"gitId":"Musfirahe0556596"},"content":"            break;","lastModifiedDate":"2022-03-19"},{"lineNumber":110,"author":{"gitId":"Musfirahe0556596"},"content":"        default:","lastModifiedDate":"2022-03-19"},{"lineNumber":111,"author":{"gitId":"Musfirahe0556596"},"content":"            String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-19"},{"lineNumber":112,"author":{"gitId":"Musfirahe0556596"},"content":"            throw new InvalidCommandException(className, InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-19"},{"lineNumber":113,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":114,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":115,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":116,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":117,"author":{"gitId":"Musfirahe0556596"},"content":"     * Gets the user argument stored in the class instance.","lastModifiedDate":"2022-03-19"},{"lineNumber":118,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":119,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return A string containing the user argument.","lastModifiedDate":"2022-03-19"},{"lineNumber":120,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":121,"author":{"gitId":"Musfirahe0556596"},"content":"    public String getUserArguments() {","lastModifiedDate":"2022-03-19"},{"lineNumber":122,"author":{"gitId":"Musfirahe0556596"},"content":"        return this.userArguments;","lastModifiedDate":"2022-03-19"},{"lineNumber":123,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":124,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":125,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":126,"author":{"gitId":"Musfirahe0556596"},"content":"     * Executes a plan-related command based on the action and arguments that is stored in the","lastModifiedDate":"2022-03-24"},{"lineNumber":127,"author":{"gitId":"Musfirahe0556596"},"content":"     * class fields. If the action and/or arguments specified are invalid, this method will handle the","lastModifiedDate":"2022-03-24"},{"lineNumber":128,"author":{"gitId":"Musfirahe0556596"},"content":"     * exceptions and print appropriate responses.","lastModifiedDate":"2022-03-24"},{"lineNumber":129,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":130,"author":{"gitId":"Musfirahe0556596"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":131,"author":{"gitId":"alanlowzies"},"content":"    public void execute() {","lastModifiedDate":"2022-03-17"},{"lineNumber":132,"author":{"gitId":"Musfirahe0556596"},"content":"        try {","lastModifiedDate":"2022-03-19"},{"lineNumber":133,"author":{"gitId":"Musfirahe0556596"},"content":"            switch (getUserAction()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":134,"author":{"gitId":"Musfirahe0556596"},"content":"            case ACTION_KEYWORD_CREATE:","lastModifiedDate":"2022-04-08"},{"lineNumber":135,"author":{"gitId":"Musfirahe0556596"},"content":"                Plan newPlan \u003d getPlanList().createNewPlan(getUserArguments());","lastModifiedDate":"2022-04-09"},{"lineNumber":136,"author":{"gitId":"Musfirahe0556596"},"content":"                getPlanList().addNewPlanToLists(newPlan);","lastModifiedDate":"2022-04-09"},{"lineNumber":137,"author":{"gitId":"Musfirahe0556596"},"content":"                getUI().printNewPlanCreatedMessage(newPlan);","lastModifiedDate":"2022-03-19"},{"lineNumber":138,"author":{"gitId":"a1021492980"},"content":"                getFileManager().writeNewPlanToFile(newPlan);","lastModifiedDate":"2022-03-20"},{"lineNumber":139,"author":{"gitId":"Musfirahe0556596"},"content":"                break;","lastModifiedDate":"2022-03-19"},{"lineNumber":140,"author":{"gitId":"Musfirahe0556596"},"content":"            case ACTION_KEYWORD_LIST:","lastModifiedDate":"2022-04-08"},{"lineNumber":141,"author":{"gitId":"Musfirahe0556596"},"content":"                getPlanList().listAllPlan();","lastModifiedDate":"2022-03-19"},{"lineNumber":142,"author":{"gitId":"Musfirahe0556596"},"content":"                break;","lastModifiedDate":"2022-03-19"},{"lineNumber":143,"author":{"gitId":"Musfirahe0556596"},"content":"            case ACTION_KEYWORD_DETAILS:","lastModifiedDate":"2022-04-08"},{"lineNumber":144,"author":{"gitId":"TianaiYan"},"content":"                getPlanList().listPlanDetails(getUserArguments(), ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":145,"author":{"gitId":"Musfirahe0556596"},"content":"                break;","lastModifiedDate":"2022-03-19"},{"lineNumber":146,"author":{"gitId":"Musfirahe0556596"},"content":"            case ACTION_KEYWORD_DELETE:","lastModifiedDate":"2022-04-08"},{"lineNumber":147,"author":{"gitId":"TianaiYan"},"content":"                Plan deletedPlan \u003d getPlanList().deletePlan(getUserArguments());","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"TianaiYan"},"content":"                getUI().printDeletePlanMessage(deletedPlan);","lastModifiedDate":"2022-03-23"},{"lineNumber":149,"author":{"gitId":"TianaiYan"},"content":"                getFileManager().rewriteAllPlansToFile(getPlanList());","lastModifiedDate":"2022-03-23"},{"lineNumber":150,"author":{"gitId":"Musfirahe0556596"},"content":"                break;","lastModifiedDate":"2022-03-19"},{"lineNumber":151,"author":{"gitId":"Musfirahe0556596"},"content":"            default:","lastModifiedDate":"2022-03-19"},{"lineNumber":152,"author":{"gitId":"Musfirahe0556596"},"content":"                String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-19"},{"lineNumber":153,"author":{"gitId":"Musfirahe0556596"},"content":"                logger.log(Level.WARNING, \"Invalid action under plan command is entered!\");","lastModifiedDate":"2022-03-19"},{"lineNumber":154,"author":{"gitId":"Musfirahe0556596"},"content":"                throw new InvalidCommandException(className, InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-19"},{"lineNumber":155,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":156,"author":{"gitId":"Musfirahe0556596"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2022-03-19"},{"lineNumber":157,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-19"},{"lineNumber":158,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"Please try again\");","lastModifiedDate":"2022-03-19"},{"lineNumber":159,"author":{"gitId":"Musfirahe0556596"},"content":"        } catch (InvalidPlanException e) {","lastModifiedDate":"2022-03-19"},{"lineNumber":160,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-19"},{"lineNumber":161,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"Please try again\");","lastModifiedDate":"2022-03-19"},{"lineNumber":162,"author":{"gitId":"Musfirahe0556596"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-19"},{"lineNumber":163,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"Uh oh, it seems like too few arguments were entered.\");","lastModifiedDate":"2022-03-19"},{"lineNumber":164,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"Please try again. Alternatively, type \u0027help\u0027 if you need\\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":165,"author":{"gitId":"Musfirahe0556596"},"content":"                    + \"more information on the commands.\");","lastModifiedDate":"2022-03-19"},{"lineNumber":166,"author":{"gitId":"Musfirahe0556596"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-19"},{"lineNumber":167,"author":{"gitId":"Musfirahe0556596"},"content":"            logger.log(Level.WARNING, \"A non-formattable number was received!\");","lastModifiedDate":"2022-03-19"},{"lineNumber":168,"author":{"gitId":"TianaiYan"},"content":"            System.out.println(\"Uh oh, the user argument supplied is invalid.\");","lastModifiedDate":"2022-04-06"},{"lineNumber":169,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"Please try again. Alternatively, type \u0027help\u0027 if you need\\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":170,"author":{"gitId":"Musfirahe0556596"},"content":"                    + \"more information on the commands.\");","lastModifiedDate":"2022-03-19"},{"lineNumber":171,"author":{"gitId":"a1021492980"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-20"},{"lineNumber":172,"author":{"gitId":"a1021492980"},"content":"            System.out.println(UI.IOEXCEPTION_ERROR_MESSAGE);","lastModifiedDate":"2022-03-20"},{"lineNumber":173,"author":{"gitId":"a1021492980"},"content":"            System.exit(-1);","lastModifiedDate":"2022-03-20"},{"lineNumber":174,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":175,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":176,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-17"},{"lineNumber":177,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"Musfirahe0556596":158,"alanlowzies":9,"TianaiYan":5,"a1021492980":5}},{"path":"src/main/java/commands/ScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package commands;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"import data.schedule.Day;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"import data.schedule.DayList;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"import data.schedule.InvalidScheduleException;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"import storage.FileManager;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"emilysim00"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"import static data.schedule.InvalidScheduleException.INDEX_OUT_OF_BOUND;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"import static data.schedule.InvalidScheduleException.INVALID_INPUT;","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"public class ScheduleCommand extends Command {","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"    public static final String KEYWORD_BASE \u003d \"schedule\";","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"    public static final String ACTION_KEYWORD_UPDATE \u003d \"/update\";","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"    public static final String ACTION_KEYWORD_LIST \u003d \"/list\";","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"    public static final String ACTION_KEYWORD_CLEAR \u003d \"/clear\";","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"    public static final String ACTION_KEYWORD_CLEAR_ALL \u003d \"/clearall\";","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"    private FileManager fileManager;","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"    private UI ui \u003d new UI();","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"    private PlanList planList;","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"    private DayList scheduleList;","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"    private String userAction;","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"    private String userArguments;","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"emilysim00"},"content":"    private static Logger logger \u003d Logger.getLogger(commands.ScheduleCommand.class.getName());","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"emilysim00"},"content":"     * Constructs a new instance of the ScheduleCommand. Constructed when the user enters a","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"emilysim00"},"content":"     * schedule-related command.","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"emilysim00"},"content":"     * @param userInput     The user\u0027s full original input.","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"emilysim00"},"content":"     * @param fileManager   An instance of the FileManager class.","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"emilysim00"},"content":"     * @param scheduleList   An instance of the DayList class.","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"emilysim00"},"content":"     * @param userAction    The action that was parsed from the user\u0027s input.","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"emilysim00"},"content":"     * @param userArguments The arguments that are accompanied by the user action.","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"emilysim00"},"content":"     * @throws InvalidCommandException If the command entered by the user is incorrect.","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"emilysim00"},"content":"    public ScheduleCommand(String userInput, FileManager fileManager, DayList scheduleList,","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"emilysim00"},"content":"                           String userAction, String userArguments) throws InvalidCommandException {","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"        super(userInput);","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"emilysim00"},"content":"        this.fileManager \u003d fileManager;","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"emilysim00"},"content":"        this.scheduleList \u003d scheduleList;","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"emilysim00"},"content":"        setUserAction(userAction);","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"emilysim00"},"content":"        this.userArguments \u003d userArguments;","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"emilysim00"},"content":"        LogHandler.linkToFileLogger(logger);","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"emilysim00"},"content":"     * Gets the instance of the UI class.","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"emilysim00"},"content":"     * @return An instance of the UI class.","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"emilysim00"},"content":"    public UI getUI() {","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"emilysim00"},"content":"        return this.ui;","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"emilysim00"},"content":"     * Gets the instance of the FileManager class.","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"emilysim00"},"content":"     * @return An instance of the FileManager class.","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"emilysim00"},"content":"    public FileManager getFileManager() {","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"emilysim00"},"content":"        return this.fileManager;","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"emilysim00"},"content":"     * Gets the instance of the PlanList class.","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"emilysim00"},"content":"     * @return An instance of the PlanList class.","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"emilysim00"},"content":"    public PlanList getPlanList() {","lastModifiedDate":"2022-03-21"},{"lineNumber":81,"author":{"gitId":"emilysim00"},"content":"        return this.planList;","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":83,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"     * Gets the instance of the DayList class.","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"     * @return An instance of the DayList class.","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"alanlowzies"},"content":"    public DayList getScheduleList() {","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"alanlowzies"},"content":"        return this.scheduleList;","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"emilysim00"},"content":"     * Gets the action of the workout command specified by the user.","lastModifiedDate":"2022-03-21"},{"lineNumber":95,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":96,"author":{"gitId":"emilysim00"},"content":"     * @return A string containing the action specified by the user.","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":98,"author":{"gitId":"emilysim00"},"content":"    public String getUserAction() {","lastModifiedDate":"2022-03-21"},{"lineNumber":99,"author":{"gitId":"emilysim00"},"content":"        return this.userAction;","lastModifiedDate":"2022-03-21"},{"lineNumber":100,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":101,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":102,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":103,"author":{"gitId":"emilysim00"},"content":"     * Checks for the validity of the action specified by the user and sets the class field","lastModifiedDate":"2022-03-21"},{"lineNumber":104,"author":{"gitId":"emilysim00"},"content":"     * userAction to the action (if valid).","lastModifiedDate":"2022-03-21"},{"lineNumber":105,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":106,"author":{"gitId":"emilysim00"},"content":"     * @param userAction A string containing the action specified by the user.","lastModifiedDate":"2022-03-21"},{"lineNumber":107,"author":{"gitId":"emilysim00"},"content":"     * @throws InvalidCommandException If the action specified by the user is invalid.","lastModifiedDate":"2022-03-21"},{"lineNumber":108,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":109,"author":{"gitId":"emilysim00"},"content":"    public void setUserAction(String userAction) throws InvalidCommandException {","lastModifiedDate":"2022-03-21"},{"lineNumber":110,"author":{"gitId":"emilysim00"},"content":"        switch (userAction) {","lastModifiedDate":"2022-03-21"},{"lineNumber":111,"author":{"gitId":"emilysim00"},"content":"        case ACTION_KEYWORD_UPDATE:","lastModifiedDate":"2022-04-08"},{"lineNumber":112,"author":{"gitId":"emilysim00"},"content":"            //Fallthrough","lastModifiedDate":"2022-03-21"},{"lineNumber":113,"author":{"gitId":"emilysim00"},"content":"        case ACTION_KEYWORD_LIST:","lastModifiedDate":"2022-04-08"},{"lineNumber":114,"author":{"gitId":"emilysim00"},"content":"            //Fallthrough","lastModifiedDate":"2022-03-21"},{"lineNumber":115,"author":{"gitId":"emilysim00"},"content":"        case ACTION_KEYWORD_CLEAR:","lastModifiedDate":"2022-04-08"},{"lineNumber":116,"author":{"gitId":"emilysim00"},"content":"            //Fallthrough","lastModifiedDate":"2022-03-21"},{"lineNumber":117,"author":{"gitId":"emilysim00"},"content":"        case ACTION_KEYWORD_CLEAR_ALL:","lastModifiedDate":"2022-04-08"},{"lineNumber":118,"author":{"gitId":"emilysim00"},"content":"            this.userAction \u003d userAction;","lastModifiedDate":"2022-03-21"},{"lineNumber":119,"author":{"gitId":"emilysim00"},"content":"            break;","lastModifiedDate":"2022-03-21"},{"lineNumber":120,"author":{"gitId":"emilysim00"},"content":"        default:","lastModifiedDate":"2022-03-21"},{"lineNumber":121,"author":{"gitId":"emilysim00"},"content":"            String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-21"},{"lineNumber":122,"author":{"gitId":"emilysim00"},"content":"            throw new InvalidCommandException(className, InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-21"},{"lineNumber":123,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":124,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":125,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":126,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":127,"author":{"gitId":"emilysim00"},"content":"     * Gets the user argument stored in the class instance.","lastModifiedDate":"2022-03-21"},{"lineNumber":128,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":129,"author":{"gitId":"emilysim00"},"content":"     * @return A string containing the user argument.","lastModifiedDate":"2022-03-21"},{"lineNumber":130,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":131,"author":{"gitId":"emilysim00"},"content":"    public String getUserArguments() {","lastModifiedDate":"2022-03-21"},{"lineNumber":132,"author":{"gitId":"emilysim00"},"content":"        return this.userArguments;","lastModifiedDate":"2022-03-21"},{"lineNumber":133,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":134,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":135,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":136,"author":{"gitId":"emilysim00"},"content":"     * Executes a schedule-related command based on the action and arguments that is stored in the","lastModifiedDate":"2022-03-24"},{"lineNumber":137,"author":{"gitId":"emilysim00"},"content":"     * class fields. If the action and/or arguments specified are invalid, this method will handle the","lastModifiedDate":"2022-03-24"},{"lineNumber":138,"author":{"gitId":"emilysim00"},"content":"     * exceptions and print appropriate responses.","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":140,"author":{"gitId":"emilysim00"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":141,"author":{"gitId":"emilysim00"},"content":"    public void execute() {","lastModifiedDate":"2022-03-21"},{"lineNumber":142,"author":{"gitId":"emilysim00"},"content":"        try {","lastModifiedDate":"2022-03-21"},{"lineNumber":143,"author":{"gitId":"emilysim00"},"content":"            switch (getUserAction()) {","lastModifiedDate":"2022-03-21"},{"lineNumber":144,"author":{"gitId":"emilysim00"},"content":"            case ACTION_KEYWORD_UPDATE:","lastModifiedDate":"2022-04-08"},{"lineNumber":145,"author":{"gitId":"emilysim00"},"content":"                Day newDay \u003d getScheduleList().updateDay(getUserArguments());","lastModifiedDate":"2022-04-06"},{"lineNumber":146,"author":{"gitId":"emilysim00"},"content":"                getUI().printNewScheduleCreatedMessage(newDay);","lastModifiedDate":"2022-03-21"},{"lineNumber":147,"author":{"gitId":"alanlowzies"},"content":"                getFileManager().rewriteAllDaysScheduleToFile(getScheduleList());","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-21"},{"lineNumber":149,"author":{"gitId":"emilysim00"},"content":"            case ACTION_KEYWORD_LIST:","lastModifiedDate":"2022-04-08"},{"lineNumber":150,"author":{"gitId":"emilysim00"},"content":"                getScheduleList().printSchedule();","lastModifiedDate":"2022-04-04"},{"lineNumber":151,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-21"},{"lineNumber":152,"author":{"gitId":"emilysim00"},"content":"            case ACTION_KEYWORD_CLEAR:","lastModifiedDate":"2022-04-08"},{"lineNumber":153,"author":{"gitId":"emilysim00"},"content":"                String dayName \u003d getScheduleList().clearDayPlan(getUserArguments());","lastModifiedDate":"2022-04-06"},{"lineNumber":154,"author":{"gitId":"emilysim00"},"content":"                getUI().printClearedScheduleOnADay(dayName);","lastModifiedDate":"2022-04-06"},{"lineNumber":155,"author":{"gitId":"emilysim00"},"content":"                getFileManager().rewriteAllDaysScheduleToFile(getScheduleList());","lastModifiedDate":"2022-03-30"},{"lineNumber":156,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-21"},{"lineNumber":157,"author":{"gitId":"emilysim00"},"content":"            case ACTION_KEYWORD_CLEAR_ALL:","lastModifiedDate":"2022-04-08"},{"lineNumber":158,"author":{"gitId":"emilysim00"},"content":"                getScheduleList().clearAllSchedule();","lastModifiedDate":"2022-04-04"},{"lineNumber":159,"author":{"gitId":"emilysim00"},"content":"                getUI().printClearedScheduleMessage();","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"emilysim00"},"content":"                getFileManager().rewriteAllDaysScheduleToFile(getScheduleList());","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-21"},{"lineNumber":162,"author":{"gitId":"emilysim00"},"content":"            default:","lastModifiedDate":"2022-03-21"},{"lineNumber":163,"author":{"gitId":"emilysim00"},"content":"                String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-21"},{"lineNumber":164,"author":{"gitId":"emilysim00"},"content":"                logger.log(Level.WARNING, \"Invalid action under schedule command is entered!\");","lastModifiedDate":"2022-03-21"},{"lineNumber":165,"author":{"gitId":"emilysim00"},"content":"                throw new InvalidCommandException(className, InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-21"},{"lineNumber":166,"author":{"gitId":"emilysim00"},"content":"            }","lastModifiedDate":"2022-03-21"},{"lineNumber":167,"author":{"gitId":"emilysim00"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2022-03-21"},{"lineNumber":168,"author":{"gitId":"emilysim00"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-21"},{"lineNumber":169,"author":{"gitId":"emilysim00"},"content":"            System.out.println(\"Please try again\");","lastModifiedDate":"2022-03-21"},{"lineNumber":170,"author":{"gitId":"emilysim00"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-21"},{"lineNumber":171,"author":{"gitId":"emilysim00"},"content":"            System.out.println(INDEX_OUT_OF_BOUND);","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"emilysim00"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-21"},{"lineNumber":173,"author":{"gitId":"emilysim00"},"content":"            logger.log(Level.WARNING, \"User argument supplied is invalid\");","lastModifiedDate":"2022-04-10"},{"lineNumber":174,"author":{"gitId":"emilysim00"},"content":"            System.out.println(INVALID_INPUT);","lastModifiedDate":"2022-04-10"},{"lineNumber":175,"author":{"gitId":"emilysim00"},"content":"        } catch (InvalidScheduleException e) {","lastModifiedDate":"2022-03-21"},{"lineNumber":176,"author":{"gitId":"emilysim00"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-21"},{"lineNumber":177,"author":{"gitId":"alanlowzies"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-23"},{"lineNumber":178,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(UI.IOEXCEPTION_ERROR_MESSAGE);","lastModifiedDate":"2022-03-23"},{"lineNumber":179,"author":{"gitId":"alanlowzies"},"content":"            System.exit(-1);","lastModifiedDate":"2022-03-23"},{"lineNumber":180,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":181,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":182,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"emilysim00":159,"alanlowzies":23}},{"path":"src/main/java/commands/SearchCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package commands;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"import data.exercises.InvalidExerciseException;","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"import data.plans.InvalidPlanException;","lastModifiedDate":"2022-04-05"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"import data.workouts.InvalidWorkoutException;","lastModifiedDate":"2022-04-05"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"import data.workouts.WorkoutList;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"import textcolors.TextColor;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":" * A class that will handle the commands relating to search.","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"public class SearchCommand extends Command {","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"    public static final String KEYWORD_BASE \u003d \"search\";","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"    public static final String ACTION_KEYWORD_EXERCISE \u003d \"/exercise\";","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"    public static final String ACTION_KEYWORD_WORKOUT \u003d \"/workout\";","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"    public static final String ACTION_KEYWORD_PLAN \u003d \"/plan\";","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"    public static final String ACTION_KEYWORD_ALL \u003d \"/all\";","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"    public static final String CATEGORY_EXERCISE \u003d \"exercise\";","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"    public static final String CATEGORY_WORKOUT \u003d \"workout\";","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"    public static final String CATEGORY_PLAN \u003d \"plan\";","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"    private UI ui;","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"    private ExerciseList exerciseList;","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"    private WorkoutList workoutList;","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"    private PlanList planList;","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"    private String userAction;","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"    private String userArguments;","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"    private int matchCount;","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"a1021492980"},"content":"    private static Logger logger \u003d Logger.getLogger(SearchCommand.class.getName());","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"a1021492980"},"content":"     * Constructs a new instance of the SearchCommand. Constructed when the user enters an","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"a1021492980"},"content":"     * exercise-related search command.","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"a1021492980"},"content":"     * @param userInput     The user\u0027s full original input.","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"a1021492980"},"content":"     * @param ui            An instance of the ui class.","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"a1021492980"},"content":"     * @param exerciseList  An instance of the ExerciseList class.","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"a1021492980"},"content":"     * @param userAction    The action that was parsed from the user\u0027s input.","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"a1021492980"},"content":"     * @param userArguments The arguments that are accompanied by the user action.","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidCommandException  If the command entered by the user is incorrect.","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"a1021492980"},"content":"    public SearchCommand(String userInput, UI ui, ExerciseList exerciseList,","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"a1021492980"},"content":"                         String userAction, String userArguments) throws InvalidCommandException {","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"        super(userInput);","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"a1021492980"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"a1021492980"},"content":"        this.exerciseList \u003d exerciseList;","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"a1021492980"},"content":"        setUserAction(userAction);","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"a1021492980"},"content":"        this.userArguments \u003d userArguments.toLowerCase();","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"a1021492980"},"content":"        this.matchCount \u003d 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"a1021492980"},"content":"        LogHandler.linkToFileLogger(logger);","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"a1021492980"},"content":"     * Constructs a new instance of the SearchCommand. Constructed when the user enters a","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"a1021492980"},"content":"     * plan-related search command.","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"a1021492980"},"content":"     * @param userInput     The user\u0027s full original input.","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"a1021492980"},"content":"     * @param ui            An instance of the ui class.","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"a1021492980"},"content":"     * @param planList      An instance of the PlanList class.","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"a1021492980"},"content":"     * @param userAction    The action that was parsed from the user\u0027s input.","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"a1021492980"},"content":"     * @param userArguments The arguments that are accompanied by the user action.","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidCommandException  If the command entered by the user is incorrect.","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"a1021492980"},"content":"    public SearchCommand(String userInput, UI ui, PlanList planList,","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"a1021492980"},"content":"                             String userAction, String userArguments) throws InvalidCommandException {","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"a1021492980"},"content":"        super(userInput);","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"a1021492980"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"a1021492980"},"content":"        this.planList \u003d planList;","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"a1021492980"},"content":"        setUserAction(userAction);","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"a1021492980"},"content":"        this.userArguments \u003d userArguments.toLowerCase();","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"a1021492980"},"content":"        this.matchCount \u003d 0;","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"a1021492980"},"content":"        LogHandler.linkToFileLogger(logger);","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"a1021492980"},"content":"     * Constructs a new instance of the SearchCommand. Constructed when the user enters a","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"a1021492980"},"content":"     * search command for all types.","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"a1021492980"},"content":"     * @param userInput     The user\u0027s full original input.","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"a1021492980"},"content":"     * @param ui            An instance of the ui class.","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"a1021492980"},"content":"     * @param exerciseList  An instance of the ExerciseList class.","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"a1021492980"},"content":"     * @param workoutList   An instance of the WorkoutList class.","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"a1021492980"},"content":"     * @param planList      An instance of the PlanList class.","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"a1021492980"},"content":"     * @param userAction    The action that was parsed from the user\u0027s input.","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"a1021492980"},"content":"     * @param userArguments The arguments that are accompanied by the user action.","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidCommandException  If the command entered by the user is incorrect.","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"a1021492980"},"content":"    public SearchCommand(String userInput, UI ui, ExerciseList exerciseList, WorkoutList workoutList, PlanList planList,","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"a1021492980"},"content":"                         String userAction, String userArguments) throws InvalidCommandException {","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"a1021492980"},"content":"        super(userInput);","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"a1021492980"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"a1021492980"},"content":"        this.exerciseList \u003d exerciseList;","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"a1021492980"},"content":"        this.workoutList \u003d workoutList;","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"a1021492980"},"content":"        this.planList \u003d planList;","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"a1021492980"},"content":"        setUserAction(userAction);","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"a1021492980"},"content":"        this.userArguments \u003d userArguments.toLowerCase();","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"a1021492980"},"content":"        this.matchCount \u003d 0;","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"a1021492980"},"content":"        LogHandler.linkToFileLogger(logger);","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"a1021492980"},"content":"     * Constructs a new instance of the SearchCommand. Constructed when the user enters a","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"a1021492980"},"content":"     * workout-related search command.","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"a1021492980"},"content":"     * @param userInput     The user\u0027s full original input.","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"a1021492980"},"content":"     * @param ui            An instance of the ui class.","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"a1021492980"},"content":"     * @param workoutList   An instance of the WorkoutList class.","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"a1021492980"},"content":"     * @param userAction    The action that was parsed from the user\u0027s input.","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"a1021492980"},"content":"     * @param userArguments The arguments that are accompanied by the user action.","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidCommandException  If the command entered by the user is incorrect.","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"a1021492980"},"content":"    public SearchCommand(String userInput, UI ui, WorkoutList workoutList,","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"a1021492980"},"content":"                         String userAction, String userArguments) throws InvalidCommandException {","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"a1021492980"},"content":"        super(userInput);","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"a1021492980"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"a1021492980"},"content":"        this.workoutList \u003d workoutList;","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"a1021492980"},"content":"        setUserAction(userAction);","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"a1021492980"},"content":"        this.userArguments \u003d userArguments.toLowerCase();","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"a1021492980"},"content":"        this.matchCount \u003d 0;","lastModifiedDate":"2022-03-23"},{"lineNumber":133,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":134,"author":{"gitId":"a1021492980"},"content":"        LogHandler.linkToFileLogger(logger);","lastModifiedDate":"2022-03-23"},{"lineNumber":135,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":136,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":137,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":138,"author":{"gitId":"a1021492980"},"content":"     * Gets the action of the workout command specified by the user.","lastModifiedDate":"2022-03-23"},{"lineNumber":139,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"a1021492980"},"content":"     * @return A string containing the action specified by the user.","lastModifiedDate":"2022-03-23"},{"lineNumber":141,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":142,"author":{"gitId":"a1021492980"},"content":"    public String getUserAction() {","lastModifiedDate":"2022-03-21"},{"lineNumber":143,"author":{"gitId":"a1021492980"},"content":"        return this.userAction;","lastModifiedDate":"2022-03-21"},{"lineNumber":144,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":145,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":146,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":147,"author":{"gitId":"a1021492980"},"content":"     * Gets the user argument stored in the class instance.","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":149,"author":{"gitId":"a1021492980"},"content":"     * @return A string containing the user argument.","lastModifiedDate":"2022-03-23"},{"lineNumber":150,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":151,"author":{"gitId":"a1021492980"},"content":"    public String getUserArguments() {","lastModifiedDate":"2022-03-21"},{"lineNumber":152,"author":{"gitId":"a1021492980"},"content":"        return this.userArguments;","lastModifiedDate":"2022-03-21"},{"lineNumber":153,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":154,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":155,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":156,"author":{"gitId":"a1021492980"},"content":"     * Checks for the validity of the action specified by the user and sets the class field","lastModifiedDate":"2022-03-23"},{"lineNumber":157,"author":{"gitId":"a1021492980"},"content":"     * userAction to the action (if valid).","lastModifiedDate":"2022-03-23"},{"lineNumber":158,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":159,"author":{"gitId":"a1021492980"},"content":"     * @param userAction A string containing the action specified by the user.","lastModifiedDate":"2022-03-23"},{"lineNumber":160,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidCommandException If the action specified by the user is invalid.","lastModifiedDate":"2022-03-23"},{"lineNumber":161,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":162,"author":{"gitId":"a1021492980"},"content":"    public void setUserAction(String userAction) throws InvalidCommandException {","lastModifiedDate":"2022-03-19"},{"lineNumber":163,"author":{"gitId":"a1021492980"},"content":"        switch (userAction) {","lastModifiedDate":"2022-03-19"},{"lineNumber":164,"author":{"gitId":"a1021492980"},"content":"        case ACTION_KEYWORD_WORKOUT:","lastModifiedDate":"2022-04-09"},{"lineNumber":165,"author":{"gitId":"a1021492980"},"content":"            //Fallthrough","lastModifiedDate":"2022-03-20"},{"lineNumber":166,"author":{"gitId":"a1021492980"},"content":"        case ACTION_KEYWORD_PLAN:","lastModifiedDate":"2022-04-09"},{"lineNumber":167,"author":{"gitId":"a1021492980"},"content":"            //Fallthrough","lastModifiedDate":"2022-03-20"},{"lineNumber":168,"author":{"gitId":"a1021492980"},"content":"        case ACTION_KEYWORD_EXERCISE:","lastModifiedDate":"2022-04-09"},{"lineNumber":169,"author":{"gitId":"a1021492980"},"content":"            //Fallthrough","lastModifiedDate":"2022-03-23"},{"lineNumber":170,"author":{"gitId":"a1021492980"},"content":"        case ACTION_KEYWORD_ALL:","lastModifiedDate":"2022-04-09"},{"lineNumber":171,"author":{"gitId":"a1021492980"},"content":"            this.userAction \u003d userAction;","lastModifiedDate":"2022-03-19"},{"lineNumber":172,"author":{"gitId":"a1021492980"},"content":"            break;","lastModifiedDate":"2022-03-19"},{"lineNumber":173,"author":{"gitId":"a1021492980"},"content":"        default:","lastModifiedDate":"2022-03-19"},{"lineNumber":174,"author":{"gitId":"a1021492980"},"content":"            logger.log(Level.WARNING, \"User has entered an invalid search command action.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":175,"author":{"gitId":"a1021492980"},"content":"            String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-19"},{"lineNumber":176,"author":{"gitId":"a1021492980"},"content":"            throw new InvalidCommandException(className, InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-19"},{"lineNumber":177,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":178,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":179,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":180,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":181,"author":{"gitId":"a1021492980"},"content":"     * Prints the heading of search result base on the userAction stored in the class field.","lastModifiedDate":"2022-03-23"},{"lineNumber":182,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":183,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidCommandException  If the action specified by the user is invalid.","lastModifiedDate":"2022-03-23"},{"lineNumber":184,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":185,"author":{"gitId":"a1021492980"},"content":"    private void printSearchHeading() throws InvalidCommandException {","lastModifiedDate":"2022-03-20"},{"lineNumber":186,"author":{"gitId":"a1021492980"},"content":"        switch (userAction) {","lastModifiedDate":"2022-03-20"},{"lineNumber":187,"author":{"gitId":"a1021492980"},"content":"        case ACTION_KEYWORD_EXERCISE:","lastModifiedDate":"2022-04-09"},{"lineNumber":188,"author":{"gitId":"a1021492980"},"content":"            printSearchExerciseHeading();","lastModifiedDate":"2022-04-09"},{"lineNumber":189,"author":{"gitId":"a1021492980"},"content":"            break;","lastModifiedDate":"2022-03-20"},{"lineNumber":190,"author":{"gitId":"a1021492980"},"content":"        case ACTION_KEYWORD_PLAN:","lastModifiedDate":"2022-04-09"},{"lineNumber":191,"author":{"gitId":"a1021492980"},"content":"            printSearchPlanHeading();","lastModifiedDate":"2022-04-09"},{"lineNumber":192,"author":{"gitId":"a1021492980"},"content":"            break;","lastModifiedDate":"2022-03-20"},{"lineNumber":193,"author":{"gitId":"a1021492980"},"content":"        case ACTION_KEYWORD_WORKOUT:","lastModifiedDate":"2022-04-09"},{"lineNumber":194,"author":{"gitId":"a1021492980"},"content":"            printSearchWorkoutHeading();","lastModifiedDate":"2022-04-09"},{"lineNumber":195,"author":{"gitId":"a1021492980"},"content":"            break;","lastModifiedDate":"2022-03-23"},{"lineNumber":196,"author":{"gitId":"a1021492980"},"content":"        default:","lastModifiedDate":"2022-03-20"},{"lineNumber":197,"author":{"gitId":"a1021492980"},"content":"            logger.log(Level.WARNING, \"User has entered an invalid search command action.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":198,"author":{"gitId":"a1021492980"},"content":"            String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-20"},{"lineNumber":199,"author":{"gitId":"a1021492980"},"content":"            throw new InvalidCommandException(className, InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-20"},{"lineNumber":200,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":201,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":202,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":203,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":204,"author":{"gitId":"a1021492980"},"content":"     * Prints the heading message for search for exercise.","lastModifiedDate":"2022-04-09"},{"lineNumber":205,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":206,"author":{"gitId":"a1021492980"},"content":"    private void printSearchExerciseHeading() {","lastModifiedDate":"2022-04-09"},{"lineNumber":207,"author":{"gitId":"a1021492980"},"content":"        if (isFirstMatch()) {","lastModifiedDate":"2022-04-09"},{"lineNumber":208,"author":{"gitId":"a1021492980"},"content":"            printHeadingMessage(CATEGORY_EXERCISE);","lastModifiedDate":"2022-04-09"},{"lineNumber":209,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":210,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":211,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":212,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":213,"author":{"gitId":"a1021492980"},"content":"     * Prints the heading message for search for workout.","lastModifiedDate":"2022-04-09"},{"lineNumber":214,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":215,"author":{"gitId":"a1021492980"},"content":"    private void printSearchWorkoutHeading() {","lastModifiedDate":"2022-04-09"},{"lineNumber":216,"author":{"gitId":"a1021492980"},"content":"        if (isFirstMatch()) {","lastModifiedDate":"2022-04-09"},{"lineNumber":217,"author":{"gitId":"a1021492980"},"content":"            printHeadingMessage(CATEGORY_WORKOUT);","lastModifiedDate":"2022-04-09"},{"lineNumber":218,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":219,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":220,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":221,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":222,"author":{"gitId":"a1021492980"},"content":"     * Prints the heading message for search for plan.","lastModifiedDate":"2022-04-09"},{"lineNumber":223,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":224,"author":{"gitId":"a1021492980"},"content":"    private void printSearchPlanHeading() {","lastModifiedDate":"2022-04-09"},{"lineNumber":225,"author":{"gitId":"a1021492980"},"content":"        if (isFirstMatch()) {","lastModifiedDate":"2022-04-09"},{"lineNumber":226,"author":{"gitId":"a1021492980"},"content":"            printHeadingMessage(CATEGORY_PLAN);","lastModifiedDate":"2022-04-09"},{"lineNumber":227,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":228,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":229,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":230,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":231,"author":{"gitId":"a1021492980"},"content":"     * Prints the heading of search result base on the category of userAction.","lastModifiedDate":"2022-03-23"},{"lineNumber":232,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":233,"author":{"gitId":"a1021492980"},"content":"     * @param category The category that will be searched.","lastModifiedDate":"2022-03-23"},{"lineNumber":234,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":235,"author":{"gitId":"a1021492980"},"content":"    private void printHeadingMessage(String category) {","lastModifiedDate":"2022-03-20"},{"lineNumber":236,"author":{"gitId":"a1021492980"},"content":"        switch (userAction) {","lastModifiedDate":"2022-03-23"},{"lineNumber":237,"author":{"gitId":"a1021492980"},"content":"        case ACTION_KEYWORD_WORKOUT:","lastModifiedDate":"2022-04-09"},{"lineNumber":238,"author":{"gitId":"a1021492980"},"content":"            try {","lastModifiedDate":"2022-03-23"},{"lineNumber":239,"author":{"gitId":"a1021492980"},"content":"                Integer.parseInt(userArguments);","lastModifiedDate":"2022-03-23"},{"lineNumber":240,"author":{"gitId":"a1021492980"},"content":"                System.out.println(\"The \" + category + \"(s) with \"","lastModifiedDate":"2022-03-23"},{"lineNumber":241,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"reps \u003d \" + userArguments)","lastModifiedDate":"2022-03-23"},{"lineNumber":242,"author":{"gitId":"a1021492980"},"content":"                        + \" is(are) listed below together\\nwith its(their) original index number(s).\");","lastModifiedDate":"2022-04-05"},{"lineNumber":243,"author":{"gitId":"a1021492980"},"content":"                ui.printLine();","lastModifiedDate":"2022-03-23"},{"lineNumber":244,"author":{"gitId":"a1021492980"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-23"},{"lineNumber":245,"author":{"gitId":"a1021492980"},"content":"                System.out.println(\"The \" + category + \"(s)\" + \" containing keyword(s)\"","lastModifiedDate":"2022-04-05"},{"lineNumber":246,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \" [\" + userArguments + \"] \")","lastModifiedDate":"2022-03-23"},{"lineNumber":247,"author":{"gitId":"a1021492980"},"content":"                        + \"is(are) listed below together\\nwith its(their) original index number(s).\");","lastModifiedDate":"2022-04-05"},{"lineNumber":248,"author":{"gitId":"a1021492980"},"content":"                ui.printLine();","lastModifiedDate":"2022-03-23"},{"lineNumber":249,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":250,"author":{"gitId":"a1021492980"},"content":"            break;","lastModifiedDate":"2022-03-23"},{"lineNumber":251,"author":{"gitId":"a1021492980"},"content":"        default:","lastModifiedDate":"2022-03-23"},{"lineNumber":252,"author":{"gitId":"a1021492980"},"content":"            System.out.println(\"The \" + category + \"(s)\" + \" containing keyword(s)\"","lastModifiedDate":"2022-04-05"},{"lineNumber":253,"author":{"gitId":"a1021492980"},"content":"                    + ui.getColorText(TextColor.COLOR_YELLOW, \" [\" + userArguments + \"] \")","lastModifiedDate":"2022-03-19"},{"lineNumber":254,"author":{"gitId":"a1021492980"},"content":"                    + \"is(are) listed below together\\nwith its(their) original index number(s).\");","lastModifiedDate":"2022-04-05"},{"lineNumber":255,"author":{"gitId":"a1021492980"},"content":"            ui.printLine();","lastModifiedDate":"2022-03-19"},{"lineNumber":256,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":257,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":258,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":259,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":260,"author":{"gitId":"a1021492980"},"content":"     * Returns the number of matching results.","lastModifiedDate":"2022-03-23"},{"lineNumber":261,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":262,"author":{"gitId":"a1021492980"},"content":"     * @return  The number of matching results.","lastModifiedDate":"2022-03-23"},{"lineNumber":263,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":264,"author":{"gitId":"a1021492980"},"content":"    private int getMatchCount() {","lastModifiedDate":"2022-03-19"},{"lineNumber":265,"author":{"gitId":"a1021492980"},"content":"        return matchCount;","lastModifiedDate":"2022-03-19"},{"lineNumber":266,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":267,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":268,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":269,"author":{"gitId":"a1021492980"},"content":"     * Returns true if the matchCount has a value of 1.","lastModifiedDate":"2022-03-23"},{"lineNumber":270,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":271,"author":{"gitId":"a1021492980"},"content":"     * @return True if the matchCount has a value of 1.","lastModifiedDate":"2022-03-23"},{"lineNumber":272,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":273,"author":{"gitId":"a1021492980"},"content":"    private boolean isFirstMatch() {","lastModifiedDate":"2022-03-19"},{"lineNumber":274,"author":{"gitId":"a1021492980"},"content":"        return getMatchCount() \u003d\u003d 1;","lastModifiedDate":"2022-03-19"},{"lineNumber":275,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":276,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":277,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":278,"author":{"gitId":"a1021492980"},"content":"     * Increments the matchCount value by 1.","lastModifiedDate":"2022-03-23"},{"lineNumber":279,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":280,"author":{"gitId":"a1021492980"},"content":"    private void incrementMatchCount() {","lastModifiedDate":"2022-03-19"},{"lineNumber":281,"author":{"gitId":"a1021492980"},"content":"        this.matchCount +\u003d 1;","lastModifiedDate":"2022-03-19"},{"lineNumber":282,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":283,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":284,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":285,"author":{"gitId":"a1021492980"},"content":"     * Returns true if the matchCount value has a value of 0.","lastModifiedDate":"2022-03-23"},{"lineNumber":286,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":287,"author":{"gitId":"a1021492980"},"content":"     * @return True if the matchCount value has a value of 0.","lastModifiedDate":"2022-03-23"},{"lineNumber":288,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":289,"author":{"gitId":"a1021492980"},"content":"    private boolean isZeroMatch() {","lastModifiedDate":"2022-03-19"},{"lineNumber":290,"author":{"gitId":"a1021492980"},"content":"        return matchCount \u003d\u003d 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":291,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":292,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":293,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":294,"author":{"gitId":"a1021492980"},"content":"     * Sets the matchCount to zero.","lastModifiedDate":"2022-03-23"},{"lineNumber":295,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":296,"author":{"gitId":"a1021492980"},"content":"    private void clearMatchCount() {","lastModifiedDate":"2022-03-23"},{"lineNumber":297,"author":{"gitId":"a1021492980"},"content":"        this.matchCount \u003d 0;","lastModifiedDate":"2022-03-23"},{"lineNumber":298,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":299,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":300,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":301,"author":{"gitId":"a1021492980"},"content":"     * Prints all the matching exercises if there exist at least one matching exercise, prints","lastModifiedDate":"2022-03-23"},{"lineNumber":302,"author":{"gitId":"a1021492980"},"content":"     * \"Sorry, no matching exercise found.\" if no matching exercise could be found.","lastModifiedDate":"2022-03-23"},{"lineNumber":303,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":304,"author":{"gitId":"emilysim00"},"content":"     * @throws InvalidCommandException If the action specified by the user is invalid.","lastModifiedDate":"2022-03-27"},{"lineNumber":305,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidExerciseException If the exercise specified by the user is invalid.","lastModifiedDate":"2022-04-10"},{"lineNumber":306,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":307,"author":{"gitId":"a1021492980"},"content":"    public void searchExercise() throws InvalidCommandException, InvalidExerciseException {","lastModifiedDate":"2022-04-05"},{"lineNumber":308,"author":{"gitId":"a1021492980"},"content":"        ArrayList\u003cString\u003e exerciseListToSearch \u003d exerciseList.getExerciseList();","lastModifiedDate":"2022-03-19"},{"lineNumber":309,"author":{"gitId":"a1021492980"},"content":"        for (String exerciseToSearch : exerciseListToSearch) {","lastModifiedDate":"2022-03-19"},{"lineNumber":310,"author":{"gitId":"a1021492980"},"content":"            if (isMatch(exerciseToSearch.toLowerCase())) {","lastModifiedDate":"2022-03-20"},{"lineNumber":311,"author":{"gitId":"a1021492980"},"content":"                incrementMatchCount();","lastModifiedDate":"2022-03-19"},{"lineNumber":312,"author":{"gitId":"a1021492980"},"content":"                printSearchHeading();","lastModifiedDate":"2022-03-19"},{"lineNumber":313,"author":{"gitId":"a1021492980"},"content":"                ui.printColorText(TextColor.COLOR_YELLOW,","lastModifiedDate":"2022-04-05"},{"lineNumber":314,"author":{"gitId":"a1021492980"},"content":"                        exerciseList.getIndexNumFromExerciseName(exerciseToSearch) + \". \" + exerciseToSearch);","lastModifiedDate":"2022-04-05"},{"lineNumber":315,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":316,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":317,"author":{"gitId":"a1021492980"},"content":"        if (isZeroMatch()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":318,"author":{"gitId":"a1021492980"},"content":"            ui.printSearchNotFoundMessage(CATEGORY_EXERCISE, getUserArguments());","lastModifiedDate":"2022-04-09"},{"lineNumber":319,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":320,"author":{"gitId":"a1021492980"},"content":"        clearMatchCount();","lastModifiedDate":"2022-03-23"},{"lineNumber":321,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":322,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":323,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":324,"author":{"gitId":"a1021492980"},"content":"     * Prints message when no matching result is found.","lastModifiedDate":"2022-03-23"},{"lineNumber":325,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":326,"author":{"gitId":"a1021492980"},"content":"     * @param category The category that will be searched.","lastModifiedDate":"2022-03-23"},{"lineNumber":327,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":328,"author":{"gitId":"a1021492980"},"content":"    public void printNotFoundMessage(String category) {","lastModifiedDate":"2022-03-23"},{"lineNumber":329,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"Sorry, no matching \" + category + \" found.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":330,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":331,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":332,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":333,"author":{"gitId":"a1021492980"},"content":"     * Returns true if the String record contains userArguments.","lastModifiedDate":"2022-03-23"},{"lineNumber":334,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":335,"author":{"gitId":"a1021492980"},"content":"     * @param record    A record stored in local resource file to be compared with userArguments.","lastModifiedDate":"2022-03-23"},{"lineNumber":336,"author":{"gitId":"a1021492980"},"content":"     * @return          True if the String record contains userArguments.","lastModifiedDate":"2022-03-23"},{"lineNumber":337,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":338,"author":{"gitId":"a1021492980"},"content":"    public boolean isMatch(String record) {","lastModifiedDate":"2022-03-20"},{"lineNumber":339,"author":{"gitId":"a1021492980"},"content":"        return record.contains(userArguments);","lastModifiedDate":"2022-03-20"},{"lineNumber":340,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":341,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":342,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":343,"author":{"gitId":"a1021492980"},"content":"     * Prints all the matching plans if there exist at least one matching plan, prints","lastModifiedDate":"2022-03-23"},{"lineNumber":344,"author":{"gitId":"a1021492980"},"content":"     * \"Sorry, no matching plan found.\" if no matching plan could be found.","lastModifiedDate":"2022-03-23"},{"lineNumber":345,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":346,"author":{"gitId":"emilysim00"},"content":"     * @throws InvalidCommandException If the action specified by the user is invalid.","lastModifiedDate":"2022-03-27"},{"lineNumber":347,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidPlanException If the plan specified by the user is invalid.","lastModifiedDate":"2022-04-10"},{"lineNumber":348,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":349,"author":{"gitId":"a1021492980"},"content":"    public void searchPlan() throws InvalidCommandException, InvalidPlanException {","lastModifiedDate":"2022-04-05"},{"lineNumber":350,"author":{"gitId":"a1021492980"},"content":"        var planListToSearch \u003d planList.getPlansDisplayList();","lastModifiedDate":"2022-03-20"},{"lineNumber":351,"author":{"gitId":"a1021492980"},"content":"        for (String planToSearch : planListToSearch) {","lastModifiedDate":"2022-03-24"},{"lineNumber":352,"author":{"gitId":"a1021492980"},"content":"            String planToBeCompared \u003d planToSearch.toLowerCase();","lastModifiedDate":"2022-03-24"},{"lineNumber":353,"author":{"gitId":"a1021492980"},"content":"            if (isMatch(planToBeCompared)) {","lastModifiedDate":"2022-03-20"},{"lineNumber":354,"author":{"gitId":"a1021492980"},"content":"                incrementMatchCount();","lastModifiedDate":"2022-03-20"},{"lineNumber":355,"author":{"gitId":"a1021492980"},"content":"                printSearchHeading();","lastModifiedDate":"2022-03-20"},{"lineNumber":356,"author":{"gitId":"a1021492980"},"content":"                ui.printColorText(TextColor.COLOR_YELLOW,","lastModifiedDate":"2022-04-05"},{"lineNumber":357,"author":{"gitId":"a1021492980"},"content":"                        planList.getIndexNumFromPlanName(planToBeCompared)","lastModifiedDate":"2022-04-05"},{"lineNumber":358,"author":{"gitId":"a1021492980"},"content":"                                + \". \" + planToBeCompared);","lastModifiedDate":"2022-04-05"},{"lineNumber":359,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":360,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":361,"author":{"gitId":"a1021492980"},"content":"        if (isZeroMatch()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":362,"author":{"gitId":"a1021492980"},"content":"            ui.printSearchNotFoundMessage(CATEGORY_PLAN, getUserArguments());","lastModifiedDate":"2022-04-09"},{"lineNumber":363,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":364,"author":{"gitId":"a1021492980"},"content":"        clearMatchCount();","lastModifiedDate":"2022-03-23"},{"lineNumber":365,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":366,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":367,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":368,"author":{"gitId":"a1021492980"},"content":"     * Parses the number of reps of a given workout.","lastModifiedDate":"2022-03-23"},{"lineNumber":369,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":370,"author":{"gitId":"a1021492980"},"content":"     * @param workoutDisplayName    The workout name to be parsed.","lastModifiedDate":"2022-03-23"},{"lineNumber":371,"author":{"gitId":"a1021492980"},"content":"     * @return                      The integer value of reps.","lastModifiedDate":"2022-03-23"},{"lineNumber":372,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":373,"author":{"gitId":"a1021492980"},"content":"    public int parseWorkoutReps(String workoutDisplayName) {","lastModifiedDate":"2022-03-23"},{"lineNumber":374,"author":{"gitId":"a1021492980"},"content":"        var beginningOfReps \u003d workoutDisplayName.indexOf(\"(\") + 1;","lastModifiedDate":"2022-03-23"},{"lineNumber":375,"author":{"gitId":"a1021492980"},"content":"        var endingOfReps \u003d workoutDisplayName.indexOf(\" reps)\");","lastModifiedDate":"2022-03-23"},{"lineNumber":376,"author":{"gitId":"a1021492980"},"content":"        var reps \u003d workoutDisplayName.substring(beginningOfReps, endingOfReps).trim();","lastModifiedDate":"2022-03-23"},{"lineNumber":377,"author":{"gitId":"a1021492980"},"content":"        return Integer.parseInt(reps);","lastModifiedDate":"2022-03-23"},{"lineNumber":378,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":379,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":380,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":381,"author":{"gitId":"a1021492980"},"content":"     * Returns true if the int value of userArguments is the same as quantity.","lastModifiedDate":"2022-03-23"},{"lineNumber":382,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":383,"author":{"gitId":"a1021492980"},"content":"     * @param quantity                  Number of reps of a workout.","lastModifiedDate":"2022-03-23"},{"lineNumber":384,"author":{"gitId":"a1021492980"},"content":"     * @return                          True if the int value of userArguments is the same as quantity.","lastModifiedDate":"2022-03-23"},{"lineNumber":385,"author":{"gitId":"a1021492980"},"content":"     * @throws NumberFormatException    If userArguments cannot be parsed to integer.","lastModifiedDate":"2022-03-23"},{"lineNumber":386,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":387,"author":{"gitId":"a1021492980"},"content":"    public boolean isMatchQuantity(int quantity) throws NumberFormatException {","lastModifiedDate":"2022-03-23"},{"lineNumber":388,"author":{"gitId":"a1021492980"},"content":"        return quantity \u003d\u003d Integer.parseInt(userArguments);","lastModifiedDate":"2022-03-23"},{"lineNumber":389,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":390,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":391,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":392,"author":{"gitId":"a1021492980"},"content":"     * Prints all the matching workouts if there exist at least one matching workout, prints","lastModifiedDate":"2022-03-23"},{"lineNumber":393,"author":{"gitId":"a1021492980"},"content":"     * \"Sorry, no matching workout found.\" if no matching workout could be found.","lastModifiedDate":"2022-03-23"},{"lineNumber":394,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":395,"author":{"gitId":"emilysim00"},"content":"     * @throws InvalidCommandException If the action specified by the user is invalid.","lastModifiedDate":"2022-03-27"},{"lineNumber":396,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidWorkoutException If the workout specified by the user is invalid.","lastModifiedDate":"2022-04-10"},{"lineNumber":397,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":398,"author":{"gitId":"a1021492980"},"content":"    public void searchWorkout() throws InvalidCommandException, InvalidWorkoutException {","lastModifiedDate":"2022-04-05"},{"lineNumber":399,"author":{"gitId":"a1021492980"},"content":"        var workoutListToSearch \u003d workoutList.getWorkoutsDisplayList();","lastModifiedDate":"2022-03-23"},{"lineNumber":400,"author":{"gitId":"a1021492980"},"content":"        for (String workoutToSearch : workoutListToSearch) {","lastModifiedDate":"2022-03-24"},{"lineNumber":401,"author":{"gitId":"a1021492980"},"content":"            String workoutToBeCompared \u003d workoutToSearch.toLowerCase();","lastModifiedDate":"2022-03-24"},{"lineNumber":402,"author":{"gitId":"a1021492980"},"content":"            var reps \u003d parseWorkoutReps(workoutToBeCompared);","lastModifiedDate":"2022-03-23"},{"lineNumber":403,"author":{"gitId":"a1021492980"},"content":"            var beginningOfReps \u003d workoutToBeCompared.indexOf(\"(\");","lastModifiedDate":"2022-03-23"},{"lineNumber":404,"author":{"gitId":"a1021492980"},"content":"            var exerciseName \u003d workoutToBeCompared.substring(0, beginningOfReps).trim();","lastModifiedDate":"2022-03-23"},{"lineNumber":405,"author":{"gitId":"a1021492980"},"content":"            try {","lastModifiedDate":"2022-03-23"},{"lineNumber":406,"author":{"gitId":"a1021492980"},"content":"                if (isMatchQuantity(reps)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":407,"author":{"gitId":"a1021492980"},"content":"                    incrementMatchCount();","lastModifiedDate":"2022-03-23"},{"lineNumber":408,"author":{"gitId":"a1021492980"},"content":"                    printSearchHeading();","lastModifiedDate":"2022-03-23"},{"lineNumber":409,"author":{"gitId":"a1021492980"},"content":"                    ui.printColorText(TextColor.COLOR_YELLOW,","lastModifiedDate":"2022-04-05"},{"lineNumber":410,"author":{"gitId":"a1021492980"},"content":"                            workoutList.getIndexNumFromWorkoutName(workoutToBeCompared)","lastModifiedDate":"2022-04-05"},{"lineNumber":411,"author":{"gitId":"a1021492980"},"content":"                                    + \". \" + workoutToBeCompared);","lastModifiedDate":"2022-04-05"},{"lineNumber":412,"author":{"gitId":"a1021492980"},"content":"                }","lastModifiedDate":"2022-03-23"},{"lineNumber":413,"author":{"gitId":"a1021492980"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-23"},{"lineNumber":414,"author":{"gitId":"a1021492980"},"content":"                if (isMatch(exerciseName)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":415,"author":{"gitId":"a1021492980"},"content":"                    incrementMatchCount();","lastModifiedDate":"2022-03-23"},{"lineNumber":416,"author":{"gitId":"a1021492980"},"content":"                    printSearchHeading();","lastModifiedDate":"2022-03-23"},{"lineNumber":417,"author":{"gitId":"a1021492980"},"content":"                    ui.printColorText(TextColor.COLOR_YELLOW,","lastModifiedDate":"2022-04-05"},{"lineNumber":418,"author":{"gitId":"a1021492980"},"content":"                            workoutList.getIndexNumFromWorkoutName(workoutToBeCompared)","lastModifiedDate":"2022-04-05"},{"lineNumber":419,"author":{"gitId":"a1021492980"},"content":"                                    + \". \" + workoutToBeCompared);","lastModifiedDate":"2022-04-05"},{"lineNumber":420,"author":{"gitId":"a1021492980"},"content":"                }","lastModifiedDate":"2022-03-23"},{"lineNumber":421,"author":{"gitId":"a1021492980"},"content":"            } catch (InvalidWorkoutException e) {","lastModifiedDate":"2022-04-05"},{"lineNumber":422,"author":{"gitId":"a1021492980"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-04-05"},{"lineNumber":423,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":424,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":425,"author":{"gitId":"a1021492980"},"content":"        if (isZeroMatch()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":426,"author":{"gitId":"a1021492980"},"content":"            ui.printSearchNotFoundMessage(CATEGORY_WORKOUT, getUserArguments());","lastModifiedDate":"2022-04-09"},{"lineNumber":427,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":428,"author":{"gitId":"a1021492980"},"content":"        clearMatchCount();","lastModifiedDate":"2022-03-23"},{"lineNumber":429,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":430,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":431,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":432,"author":{"gitId":"a1021492980"},"content":"     * Prints the relevant exercises, workouts and plans that match the userArguments.","lastModifiedDate":"2022-03-23"},{"lineNumber":433,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":434,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidCommandException  If the action specified by the user is invalid.","lastModifiedDate":"2022-03-23"},{"lineNumber":435,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidPlanException  If the plan specified by the user is invalid.","lastModifiedDate":"2022-04-10"},{"lineNumber":436,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidWorkoutException  If the workout specified by the user is invalid.","lastModifiedDate":"2022-04-10"},{"lineNumber":437,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidExerciseException  If the exercise specified by the user is invalid.","lastModifiedDate":"2022-04-10"},{"lineNumber":438,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":439,"author":{"gitId":"a1021492980"},"content":"    public void searchAll() throws InvalidCommandException, InvalidPlanException,","lastModifiedDate":"2022-04-05"},{"lineNumber":440,"author":{"gitId":"a1021492980"},"content":"            InvalidWorkoutException, InvalidExerciseException {","lastModifiedDate":"2022-04-05"},{"lineNumber":441,"author":{"gitId":"a1021492980"},"content":"        setUserAction(ACTION_KEYWORD_EXERCISE);","lastModifiedDate":"2022-04-09"},{"lineNumber":442,"author":{"gitId":"a1021492980"},"content":"        searchExercise();","lastModifiedDate":"2022-03-23"},{"lineNumber":443,"author":{"gitId":"a1021492980"},"content":"        ui.printLine();","lastModifiedDate":"2022-03-23"},{"lineNumber":444,"author":{"gitId":"a1021492980"},"content":"        setUserAction(ACTION_KEYWORD_WORKOUT);","lastModifiedDate":"2022-04-09"},{"lineNumber":445,"author":{"gitId":"a1021492980"},"content":"        searchWorkout();","lastModifiedDate":"2022-03-23"},{"lineNumber":446,"author":{"gitId":"a1021492980"},"content":"        ui.printLine();","lastModifiedDate":"2022-03-23"},{"lineNumber":447,"author":{"gitId":"a1021492980"},"content":"        setUserAction(ACTION_KEYWORD_PLAN);","lastModifiedDate":"2022-04-09"},{"lineNumber":448,"author":{"gitId":"a1021492980"},"content":"        searchPlan();","lastModifiedDate":"2022-03-23"},{"lineNumber":449,"author":{"gitId":"a1021492980"},"content":"        setUserAction(ACTION_KEYWORD_ALL);","lastModifiedDate":"2022-04-09"},{"lineNumber":450,"author":{"gitId":"a1021492980"},"content":"        clearMatchCount();","lastModifiedDate":"2022-03-23"},{"lineNumber":451,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":452,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":453,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":454,"author":{"gitId":"a1021492980"},"content":"     * Executes a search-related command based on the action and arguments that is stored in the","lastModifiedDate":"2022-03-23"},{"lineNumber":455,"author":{"gitId":"a1021492980"},"content":"     * class fields. If the action and/or arguments specified are invalid, this method will handle the","lastModifiedDate":"2022-03-23"},{"lineNumber":456,"author":{"gitId":"a1021492980"},"content":"     * exceptions and print appropriate responses.","lastModifiedDate":"2022-03-23"},{"lineNumber":457,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":458,"author":{"gitId":"a1021492980"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":459,"author":{"gitId":"a1021492980"},"content":"    public void execute() {","lastModifiedDate":"2022-03-19"},{"lineNumber":460,"author":{"gitId":"a1021492980"},"content":"        try {","lastModifiedDate":"2022-03-19"},{"lineNumber":461,"author":{"gitId":"a1021492980"},"content":"            switch (userAction) {","lastModifiedDate":"2022-03-19"},{"lineNumber":462,"author":{"gitId":"a1021492980"},"content":"            case ACTION_KEYWORD_EXERCISE:","lastModifiedDate":"2022-04-09"},{"lineNumber":463,"author":{"gitId":"a1021492980"},"content":"                searchExercise();","lastModifiedDate":"2022-03-19"},{"lineNumber":464,"author":{"gitId":"a1021492980"},"content":"                break;","lastModifiedDate":"2022-03-19"},{"lineNumber":465,"author":{"gitId":"a1021492980"},"content":"            case ACTION_KEYWORD_PLAN:","lastModifiedDate":"2022-04-09"},{"lineNumber":466,"author":{"gitId":"a1021492980"},"content":"                searchPlan();","lastModifiedDate":"2022-03-20"},{"lineNumber":467,"author":{"gitId":"a1021492980"},"content":"                break;","lastModifiedDate":"2022-03-20"},{"lineNumber":468,"author":{"gitId":"a1021492980"},"content":"            case ACTION_KEYWORD_WORKOUT:","lastModifiedDate":"2022-04-09"},{"lineNumber":469,"author":{"gitId":"a1021492980"},"content":"                searchWorkout();","lastModifiedDate":"2022-03-23"},{"lineNumber":470,"author":{"gitId":"a1021492980"},"content":"                break;","lastModifiedDate":"2022-03-23"},{"lineNumber":471,"author":{"gitId":"a1021492980"},"content":"            case ACTION_KEYWORD_ALL:","lastModifiedDate":"2022-04-09"},{"lineNumber":472,"author":{"gitId":"a1021492980"},"content":"                searchAll();","lastModifiedDate":"2022-03-23"},{"lineNumber":473,"author":{"gitId":"a1021492980"},"content":"                break;","lastModifiedDate":"2022-03-23"},{"lineNumber":474,"author":{"gitId":"a1021492980"},"content":"            default:","lastModifiedDate":"2022-03-19"},{"lineNumber":475,"author":{"gitId":"a1021492980"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid search command action.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":476,"author":{"gitId":"a1021492980"},"content":"                String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-19"},{"lineNumber":477,"author":{"gitId":"a1021492980"},"content":"                throw new InvalidCommandException(className, InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-19"},{"lineNumber":478,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":479,"author":{"gitId":"a1021492980"},"content":"        } catch (InvalidCommandException | InvalidPlanException","lastModifiedDate":"2022-04-05"},{"lineNumber":480,"author":{"gitId":"a1021492980"},"content":"                | InvalidWorkoutException | InvalidExerciseException e) {","lastModifiedDate":"2022-04-05"},{"lineNumber":481,"author":{"gitId":"a1021492980"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-19"},{"lineNumber":482,"author":{"gitId":"a1021492980"},"content":"            System.out.println(\"Please try again\");","lastModifiedDate":"2022-03-19"},{"lineNumber":483,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":484,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":485,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"emilysim00":6,"alanlowzies":8,"a1021492980":471}},{"path":"src/main/java/commands/WorkoutCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package commands;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"import data.exercises.InvalidExerciseException;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"TianaiYan"},"content":"import data.plans.InvalidPlanException;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"TianaiYan"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"import data.workouts.InvalidWorkoutException;","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"import data.workouts.Workout;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"import data.workouts.WorkoutList;","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"import storage.FileManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":" * A class that will handle the commands related to workouts.","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"public class WorkoutCommand extends Command {","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"    public static final String KEYWORD_BASE \u003d \"workout\";","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"    public static final String ACTION_KEYWORD_CREATE \u003d \"/new\";","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"    public static final String ACTION_KEYWORD_CREATE_REPS \u003d \"/reps\";","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"    public static final String ACTION_KEYWORD_LIST \u003d \"/list\";","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"    public static final String ACTION_KEYWORD_DELETE \u003d \"/delete\";","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"    public static final String ACTION_KEYWORD_UPDATE \u003d \"/update\";","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"    private FileManager fileManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"    private UI ui \u003d new UI();","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"    private WorkoutList workoutList;","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"TianaiYan"},"content":"    private PlanList planList;","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"    private String userAction;","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"    private String userArguments;","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"    private static Logger logger \u003d Logger.getLogger(WorkoutCommand.class.getName());","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"     * Constructs a new instance of the WorkoutCommand. Constructed when the user enters a","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"     * workout-related command.","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"     * @param userInput     The user\u0027s full original input.","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"     * @param fileManager   An instance of the FileManager class.","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"     * @param workoutList   An instance of the WorkoutList class.","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"TianaiYan"},"content":"     * @param planList      An instance of the PlanList class.","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"     * @param userAction    The action that was parsed from the user\u0027s input.","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"     * @param userArguments The arguments that are accompanied by the user action.","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidCommandException If the command entered by the user is incorrect.","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"    public WorkoutCommand(String userInput, FileManager fileManager, WorkoutList workoutList,","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"TianaiYan"},"content":"            PlanList planList, String userAction, String userArguments) throws InvalidCommandException {","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"        super(userInput);","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"        this.fileManager \u003d fileManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"        this.workoutList \u003d workoutList;","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"TianaiYan"},"content":"        this.planList \u003d planList;","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"        setUserAction(userAction);","lastModifiedDate":"2022-03-05"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"        this.userArguments \u003d userArguments;","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"        LogHandler.linkToFileLogger(logger);","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"     * Gets the instance of the UI class.","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"     * @return An instance of the UI class.","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"    public UI getUI() {","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"        return this.ui;","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"     * Gets the instance of the FileManager class.","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"     * @return An instance of the FileManager class.","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"    public FileManager getFileManager() {","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"alanlowzies"},"content":"        return this.fileManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"     * Gets the instance of the WorkoutList class.","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"alanlowzies"},"content":"     * @return An instance of the WorkoutList class.","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"    public WorkoutList getWorkoutList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"        return this.workoutList;","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"TianaiYan"},"content":"     * Gets the instance of the PlanList class.","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"TianaiYan"},"content":"     * @return An instance of the PlanList class.","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"TianaiYan"},"content":"    public PlanList getPlanList() {","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"TianaiYan"},"content":"        return planList;","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"alanlowzies"},"content":"     * Gets the action of the workout command specified by the user.","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"alanlowzies"},"content":"     * @return A string containing the action specified by the user.","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"alanlowzies"},"content":"    public String getUserAction() {","lastModifiedDate":"2022-03-05"},{"lineNumber":104,"author":{"gitId":"alanlowzies"},"content":"        return this.userAction;","lastModifiedDate":"2022-03-05"},{"lineNumber":105,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":106,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":107,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"alanlowzies"},"content":"     * Checks for the validity of the action specified by the user and sets the class field","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"alanlowzies"},"content":"     * userAction to the action (if valid).","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"alanlowzies"},"content":"     * @param userAction A string containing the action specified by the user.","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidCommandException If the action specified by the user is invalid.","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"alanlowzies"},"content":"    public void setUserAction(String userAction) throws InvalidCommandException {","lastModifiedDate":"2022-03-05"},{"lineNumber":115,"author":{"gitId":"alanlowzies"},"content":"        switch (userAction) {","lastModifiedDate":"2022-03-05"},{"lineNumber":116,"author":{"gitId":"alanlowzies"},"content":"        case ACTION_KEYWORD_CREATE:","lastModifiedDate":"2022-04-09"},{"lineNumber":117,"author":{"gitId":"alanlowzies"},"content":"            // Fallthrough","lastModifiedDate":"2022-03-05"},{"lineNumber":118,"author":{"gitId":"alanlowzies"},"content":"        case ACTION_KEYWORD_LIST:","lastModifiedDate":"2022-04-09"},{"lineNumber":119,"author":{"gitId":"alanlowzies"},"content":"            // Fallthrough","lastModifiedDate":"2022-03-05"},{"lineNumber":120,"author":{"gitId":"alanlowzies"},"content":"        case ACTION_KEYWORD_DELETE:","lastModifiedDate":"2022-04-09"},{"lineNumber":121,"author":{"gitId":"alanlowzies"},"content":"            // Fallthrough","lastModifiedDate":"2022-03-05"},{"lineNumber":122,"author":{"gitId":"alanlowzies"},"content":"        case ACTION_KEYWORD_UPDATE:","lastModifiedDate":"2022-04-09"},{"lineNumber":123,"author":{"gitId":"alanlowzies"},"content":"            this.userAction \u003d userAction;","lastModifiedDate":"2022-03-05"},{"lineNumber":124,"author":{"gitId":"alanlowzies"},"content":"            break;","lastModifiedDate":"2022-03-05"},{"lineNumber":125,"author":{"gitId":"alanlowzies"},"content":"        default:","lastModifiedDate":"2022-03-05"},{"lineNumber":126,"author":{"gitId":"alanlowzies"},"content":"            String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-05"},{"lineNumber":127,"author":{"gitId":"alanlowzies"},"content":"            throw new InvalidCommandException(className, InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-05"},{"lineNumber":128,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":129,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":130,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":131,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"alanlowzies"},"content":"     * Gets the user argument stored in the class instance.","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"alanlowzies"},"content":"     * @return A string containing the user argument.","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"alanlowzies"},"content":"    public String getUserArguments() {","lastModifiedDate":"2022-03-05"},{"lineNumber":137,"author":{"gitId":"alanlowzies"},"content":"        return this.userArguments;","lastModifiedDate":"2022-03-05"},{"lineNumber":138,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":139,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":140,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":141,"author":{"gitId":"alanlowzies"},"content":"     * Executes a workout-related command based on the action and arguments that is stored in the","lastModifiedDate":"2022-03-14"},{"lineNumber":142,"author":{"gitId":"alanlowzies"},"content":"     * class fields. If the action and/or arguments specified are invalid, this method will handle the","lastModifiedDate":"2022-03-14"},{"lineNumber":143,"author":{"gitId":"alanlowzies"},"content":"     * exceptions and print appropriate responses.","lastModifiedDate":"2022-03-14"},{"lineNumber":144,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":145,"author":{"gitId":"alanlowzies"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":146,"author":{"gitId":"alanlowzies"},"content":"    public void execute() {","lastModifiedDate":"2022-03-05"},{"lineNumber":147,"author":{"gitId":"alanlowzies"},"content":"        try {","lastModifiedDate":"2022-03-05"},{"lineNumber":148,"author":{"gitId":"alanlowzies"},"content":"            switch (getUserAction()) {","lastModifiedDate":"2022-03-05"},{"lineNumber":149,"author":{"gitId":"alanlowzies"},"content":"            case ACTION_KEYWORD_CREATE:","lastModifiedDate":"2022-04-09"},{"lineNumber":150,"author":{"gitId":"alanlowzies"},"content":"                Workout newWorkout \u003d getWorkoutList().createNewWorkout(getUserArguments());","lastModifiedDate":"2022-04-09"},{"lineNumber":151,"author":{"gitId":"alanlowzies"},"content":"                getWorkoutList().addNewWorkoutToLists(newWorkout);","lastModifiedDate":"2022-04-09"},{"lineNumber":152,"author":{"gitId":"alanlowzies"},"content":"                getUI().printNewWorkoutCreatedMessage(newWorkout);","lastModifiedDate":"2022-03-09"},{"lineNumber":153,"author":{"gitId":"alanlowzies"},"content":"                getFileManager().writeNewWorkoutToFile(newWorkout);","lastModifiedDate":"2022-03-10"},{"lineNumber":154,"author":{"gitId":"alanlowzies"},"content":"                break;","lastModifiedDate":"2022-03-07"},{"lineNumber":155,"author":{"gitId":"alanlowzies"},"content":"            case ACTION_KEYWORD_LIST:","lastModifiedDate":"2022-04-09"},{"lineNumber":156,"author":{"gitId":"emilysim00"},"content":"                getWorkoutList().listAllWorkout();","lastModifiedDate":"2022-03-24"},{"lineNumber":157,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-24"},{"lineNumber":158,"author":{"gitId":"alanlowzies"},"content":"            case ACTION_KEYWORD_DELETE:","lastModifiedDate":"2022-04-09"},{"lineNumber":159,"author":{"gitId":"Musfirahe0556596"},"content":"                Workout deletedWorkout \u003d getWorkoutList().deleteWorkout(getUserArguments());","lastModifiedDate":"2022-04-02"},{"lineNumber":160,"author":{"gitId":"Musfirahe0556596"},"content":"                getUI().printDeleteWorkoutMessage(deletedWorkout);","lastModifiedDate":"2022-04-04"},{"lineNumber":161,"author":{"gitId":"Musfirahe0556596"},"content":"                getPlanList().deletePlanContainsDeletedWorkout(deletedWorkout.toString());","lastModifiedDate":"2022-04-04"},{"lineNumber":162,"author":{"gitId":"alanlowzies"},"content":"                getFileManager().rewriteAllWorkoutsToFile(getWorkoutList());","lastModifiedDate":"2022-03-10"},{"lineNumber":163,"author":{"gitId":"TianaiYan"},"content":"                getFileManager().rewriteAllPlansToFile(getPlanList());","lastModifiedDate":"2022-03-27"},{"lineNumber":164,"author":{"gitId":"Musfirahe0556596"},"content":"                break;","lastModifiedDate":"2022-03-09"},{"lineNumber":165,"author":{"gitId":"alanlowzies"},"content":"            case ACTION_KEYWORD_UPDATE:","lastModifiedDate":"2022-04-09"},{"lineNumber":166,"author":{"gitId":"TianaiYan"},"content":"                String currentWorkout \u003d getWorkoutList().getCurrentWorkout(getUserArguments());","lastModifiedDate":"2022-04-02"},{"lineNumber":167,"author":{"gitId":"TianaiYan"},"content":"                Workout updatedWorkout \u003d getWorkoutList().updateWorkout(getUserArguments());","lastModifiedDate":"2022-03-12"},{"lineNumber":168,"author":{"gitId":"TianaiYan"},"content":"                getUI().printUpdateWorkoutMessage(currentWorkout, updatedWorkout);","lastModifiedDate":"2022-04-05"},{"lineNumber":169,"author":{"gitId":"Musfirahe0556596"},"content":"                getPlanList().updatePlanContainsUpdatedWorkout(currentWorkout, updatedWorkout);","lastModifiedDate":"2022-04-04"},{"lineNumber":170,"author":{"gitId":"TianaiYan"},"content":"                getFileManager().rewriteAllWorkoutsToFile(getWorkoutList());","lastModifiedDate":"2022-03-12"},{"lineNumber":171,"author":{"gitId":"TianaiYan"},"content":"                getFileManager().rewriteAllPlansToFile(getPlanList());","lastModifiedDate":"2022-03-29"},{"lineNumber":172,"author":{"gitId":"TianaiYan"},"content":"                break;","lastModifiedDate":"2022-03-12"},{"lineNumber":173,"author":{"gitId":"alanlowzies"},"content":"            default:","lastModifiedDate":"2022-03-07"},{"lineNumber":174,"author":{"gitId":"alanlowzies"},"content":"                String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-07"},{"lineNumber":175,"author":{"gitId":"Musfirahe0556596"},"content":"                logger.log(Level.WARNING, \"Invalid action under workout command is entered!\");","lastModifiedDate":"2022-03-13"},{"lineNumber":176,"author":{"gitId":"alanlowzies"},"content":"                throw new InvalidCommandException(className, InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-07"},{"lineNumber":177,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-03-05"},{"lineNumber":178,"author":{"gitId":"alanlowzies"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2022-03-07"},{"lineNumber":179,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-07"},{"lineNumber":180,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Please try again\");","lastModifiedDate":"2022-03-07"},{"lineNumber":181,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":182,"author":{"gitId":"alanlowzies"},"content":"        } catch (InvalidExerciseException e) {","lastModifiedDate":"2022-03-05"},{"lineNumber":183,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-05"},{"lineNumber":184,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Please try again. Enter \u0027exercise /list\u0027 for a list\\nof available exercises.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":185,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":186,"author":{"gitId":"alanlowzies"},"content":"        } catch (InvalidWorkoutException e) {","lastModifiedDate":"2022-03-05"},{"lineNumber":187,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-05"},{"lineNumber":188,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Please try again.\");","lastModifiedDate":"2022-03-05"},{"lineNumber":189,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":190,"author":{"gitId":"alanlowzies"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":191,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Uh oh, it seems like too few arguments were entered.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":192,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Please try again. Alternatively, type \u0027help\u0027 if you need\\n\"","lastModifiedDate":"2022-03-07"},{"lineNumber":193,"author":{"gitId":"alanlowzies"},"content":"                    + \"more information on the commands.\");","lastModifiedDate":"2022-03-07"},{"lineNumber":194,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":195,"author":{"gitId":"alanlowzies"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":196,"author":{"gitId":"Musfirahe0556596"},"content":"            logger.log(Level.WARNING, \"A non-formattable number was received!\");","lastModifiedDate":"2022-03-13"},{"lineNumber":197,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"Uh oh, the user argument supplied is invalid.\");","lastModifiedDate":"2022-04-02"},{"lineNumber":198,"author":{"gitId":"TianaiYan"},"content":"            System.out.println(\"Please try again. Alternatively, type \u0027help\u0027 if you need\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":199,"author":{"gitId":"TianaiYan"},"content":"                    + \"more information on the commands.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":200,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":201,"author":{"gitId":"alanlowzies"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-09"},{"lineNumber":202,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(UI.IOEXCEPTION_ERROR_MESSAGE);","lastModifiedDate":"2022-03-09"},{"lineNumber":203,"author":{"gitId":"alanlowzies"},"content":"            System.exit(-1);","lastModifiedDate":"2022-03-09"},{"lineNumber":204,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":205,"author":{"gitId":"alanlowzies"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-11"},{"lineNumber":206,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-11"},{"lineNumber":207,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Please try again.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":208,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":209,"author":{"gitId":"TianaiYan"},"content":"        } catch (InvalidPlanException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":210,"author":{"gitId":"TianaiYan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-27"},{"lineNumber":211,"author":{"gitId":"TianaiYan"},"content":"            System.out.println(\"Please try again.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":212,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":213,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":214,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":215,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"emilysim00":2,"Musfirahe0556596":12,"alanlowzies":172,"TianaiYan":29}},{"path":"src/main/java/data/exercises/ExerciseList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package data.exercises;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"import textcolors.TextColor;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"public class ExerciseList {","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"    private final ArrayList\u003cString\u003e exercisesList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"    private int numberOfExercises \u003d 0;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"    private UI ui \u003d new UI();","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"     * Adds a new exercise into the exercises ArrayList and updates","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"     * the relevant variables on the change.","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"     * @param exerciseName The name of the exercise to be added to the list.","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"    public void addExerciseToList(String exerciseName) {","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"        exercisesList.add(exerciseName);","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"        incrementNumberOfExercises();","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"    public ArrayList\u003cString\u003e getExerciseList() {","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"        return exercisesList;","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"     * Prints the list of exercises starting with their index.","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"    public void printExerciseList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"        assert getNumberOfExercises() \u003d\u003d exercisesList.size();","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"There are \" + getNumberOfExercises() + \" exercises available.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"Here is the list of exercises: \");","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"        ui.printLine();","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"        for (int i \u003d 0; i \u003c numberOfExercises; i++) {","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"            ui.printColorText(TextColor.COLOR_YELLOW, (i + 1) + \". \" + exercisesList.get(i));","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"a1021492980"},"content":"        ui.printLine();","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"End of exercise list.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"a1021492980"},"content":"     * Returns the exercise at given index.","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"a1021492980"},"content":"     * @param index index of exercise.","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"a1021492980"},"content":"     * @return the exercise at given index.","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"a1021492980"},"content":"     * @throws IndexOutOfBoundsException when the index provided is less than 0 or greater than the numberOfExercises.","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"a1021492980"},"content":"    protected String getExerciseAt(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"a1021492980"},"content":"        assert (0 \u003c index)  \u0026\u0026 (index \u003c\u003d numberOfExercises);","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"        return exercisesList.get(index - 1);","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"a1021492980"},"content":"     * Returns the total number of exercises that is loaded.","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"a1021492980"},"content":"     * @return number of exercises.","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"a1021492980"},"content":"    protected int getNumberOfExercises() {","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"a1021492980"},"content":"        return numberOfExercises;","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"     * Increments the number of exercises by 1.","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"    protected void incrementNumberOfExercises() {","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"        this.numberOfExercises +\u003d 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"     * Checks if the specified exercise name exists in the exercises ArrayList.","lastModifiedDate":"2022-03-05"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"     * @param exerciseName The name of the exercise that will be checked for its existence in the list.","lastModifiedDate":"2022-03-05"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"     * @return Returns true if the exercise name exists in the list. Otherwise, false is returned.","lastModifiedDate":"2022-03-05"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"    public boolean checkIfExerciseExists(String exerciseName) {","lastModifiedDate":"2022-03-05"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"        if (!exercisesList.contains(exerciseName)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"alanlowzies"},"content":"            return false;","lastModifiedDate":"2022-03-05"},{"lineNumber":78,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":79,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":80,"author":{"gitId":"alanlowzies"},"content":"        return true;","lastModifiedDate":"2022-03-05"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"     * This method provides a default list of default exercises to populate into the exercises.txt file.","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"     * The method is coded this way in order to solve the following checkstyle issue:","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"     * \u0027array initialization\u0027 child has incorrect indentation level 16, expected level should be 12.","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"     * @return An ArrayList of default exercises.","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"alanlowzies"},"content":"    public static ArrayList\u003cString\u003e getDefaultExerciseList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"alanlowzies"},"content":"        ArrayList\u003cString\u003e defaultExerciseList \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"alanlowzies"},"content":"        defaultExerciseList.add(\"push up\");","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"alanlowzies"},"content":"        defaultExerciseList.add(\"bicep curl\");","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"alanlowzies"},"content":"        defaultExerciseList.add(\"pull up\");","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"alanlowzies"},"content":"        defaultExerciseList.add(\"squat\");","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"alanlowzies"},"content":"        defaultExerciseList.add(\"lunge\");","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"alanlowzies"},"content":"        defaultExerciseList.add(\"hip thrust\");","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"alanlowzies"},"content":"        defaultExerciseList.add(\"sit up\");","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"alanlowzies"},"content":"        defaultExerciseList.add(\"crunch\");","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"alanlowzies"},"content":"        defaultExerciseList.add(\"russian twist\");","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"alanlowzies"},"content":"        defaultExerciseList.add(\"running\");","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"alanlowzies"},"content":"        defaultExerciseList.add(\"swimming\");","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"alanlowzies"},"content":"        defaultExerciseList.add(\"jumping jack\");","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"alanlowzies"},"content":"        defaultExerciseList.add(\"burpee\");","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"alanlowzies"},"content":"        return defaultExerciseList;","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":109,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":110,"author":{"gitId":"a1021492980"},"content":"     * Populates a set of exercises to ExerciseList.","lastModifiedDate":"2022-04-07"},{"lineNumber":111,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":112,"author":{"gitId":"alanlowzies"},"content":"    public void populateExercisesToList() {","lastModifiedDate":"2022-04-07"},{"lineNumber":113,"author":{"gitId":"alanlowzies"},"content":"        ArrayList\u003cString\u003e defaultExercises \u003d getDefaultExerciseList();","lastModifiedDate":"2022-04-07"},{"lineNumber":114,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":115,"author":{"gitId":"alanlowzies"},"content":"        for (String defaultExercise : defaultExercises) {","lastModifiedDate":"2022-04-07"},{"lineNumber":116,"author":{"gitId":"alanlowzies"},"content":"            addExerciseToList(defaultExercise);","lastModifiedDate":"2022-04-07"},{"lineNumber":117,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":118,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":119,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":120,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-04-05"},{"lineNumber":121,"author":{"gitId":"a1021492980"},"content":"     * Retrieves the index number of a plan based on its position in the exerciseList","lastModifiedDate":"2022-04-05"},{"lineNumber":122,"author":{"gitId":"a1021492980"},"content":"     * ArrayList.","lastModifiedDate":"2022-04-05"},{"lineNumber":123,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-04-05"},{"lineNumber":124,"author":{"gitId":"a1021492980"},"content":"     * @param exerciseName The name of the exercise whose index number this method has to find.","lastModifiedDate":"2022-04-05"},{"lineNumber":125,"author":{"gitId":"a1021492980"},"content":"     * @return An integer representing the index number the exercise is listed in the exerciseList","lastModifiedDate":"2022-04-05"},{"lineNumber":126,"author":{"gitId":"a1021492980"},"content":"     *         ArrayList.","lastModifiedDate":"2022-04-05"},{"lineNumber":127,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidExerciseException If the given plan name was not found in exerciseList.","lastModifiedDate":"2022-04-05"},{"lineNumber":128,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-04-05"},{"lineNumber":129,"author":{"gitId":"a1021492980"},"content":"    public int getIndexNumFromExerciseName(String exerciseName) throws InvalidExerciseException {","lastModifiedDate":"2022-04-05"},{"lineNumber":130,"author":{"gitId":"a1021492980"},"content":"        for (int i \u003d 0; i \u003c getExerciseList().size(); i +\u003d 1) {","lastModifiedDate":"2022-04-05"},{"lineNumber":131,"author":{"gitId":"a1021492980"},"content":"            if (getExerciseList().get(i).equals(exerciseName)) {","lastModifiedDate":"2022-04-05"},{"lineNumber":132,"author":{"gitId":"a1021492980"},"content":"                return (i + 1);","lastModifiedDate":"2022-04-05"},{"lineNumber":133,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-04-05"},{"lineNumber":134,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":135,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":136,"author":{"gitId":"a1021492980"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-04-05"},{"lineNumber":137,"author":{"gitId":"a1021492980"},"content":"        throw new InvalidExerciseException(className, InvalidExerciseException.INVALID_EXERCISE_NAME_ERROR_MSG);","lastModifiedDate":"2022-04-05"},{"lineNumber":138,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":139,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"alanlowzies":63,"a1021492980":76}},{"path":"src/main/java/data/exercises/InvalidExerciseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package data.exercises;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"public class InvalidExerciseException extends Exception {","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"    public static final String INVALID_EXERCISE_NAME_ERROR_MSG \u003d \"The exercise name given does not exist.\";","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"    private String throwingClass;","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"    public InvalidExerciseException(String throwingClass, String errorMessage) {","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"        super(errorMessage);","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"        this.throwingClass \u003d throwingClass;","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"    public String getThrowingClass() {","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"        return this.throwingClass;","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"alanlowzies":16}},{"path":"src/main/java/data/plans/InvalidPlanException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"package data.plans;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":" * Thrown to indicate that the Plan being created has some invalid parameters.","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"public class InvalidPlanException extends Exception {","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"    // Pre-defined error messages","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String PLAN_DUPLICATE_NAME \u003d \"Uh oh, the plan name already exists.\";","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String PLAN_NAME_UNKNOWN \u003d \"Uh oh, the plan name given does not exist.\";","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String PLAN_WORKOUT_NUMBER_OUT_OF_RANGE \u003d \"Uh oh, the index specified is out of range.\\n\"","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"            + \"(Index specified needs to be within the number of workouts)\";","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String PLAN_MIN_MAX_WORKOUTS \u003d \"Uh oh, number of workouts specified is out of range.\\n\"","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"            + \"(A plan should minimally have 1 workout and 10 workouts at most.)\";","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"TianaiYan"},"content":"    public static final String PLAN_INDEX_OUT_OF_RANGE \u003d \"Uh oh, the index specified is out of range.\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"TianaiYan"},"content":"            + \"(Index specified needs to be within the number of plans)\";","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String PLAN_SAME_WORKOUT_SEQUENCE \u003d \"Uh oh, an existing plan with the same\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"            + \"workout sequence already exists.\";","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String PLAN_NAME_EXCEED_LIMIT \u003d \"Uh oh, the plan name exceeds the character limit (30).\";","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String PLAN_NAME_INVALID \u003d \"Uh oh, the plan name is invalid.\";","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String PLAN_NAME_RESERVED \u003d \"Uh oh, this plan name is reserved for use.\";","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"    private String throwingClass;","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"     * Constructs an InvalidPlanException with the class name that this exception instance was","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"     * thrown from and the accompanying error message.","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param throwingClass The class name that this exception instance was thrown from.","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param errorMessage  The error message given by the throwing method.","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"    public InvalidPlanException(String throwingClass, String errorMessage) {","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"        super(errorMessage);","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"        this.throwingClass \u003d throwingClass;","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"Musfirahe0556596":34,"TianaiYan":2}},{"path":"src/main/java/data/plans/Plan.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package data.plans;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"import data.workouts.Workout;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":" * This class represents a Plan, which groups a number of workout(s) together and is given a plan name.","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"public class Plan {","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"    private String planName;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"    private ArrayList\u003cWorkout\u003e listOfWorkouts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"    public Plan(String planName, ArrayList\u003cWorkout\u003e listOfWorkouts) {","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"        this.planName \u003d planName;","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"        this.listOfWorkouts \u003d listOfWorkouts;","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"    public String getPlanName() {","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"        return planName;","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"    public ArrayList\u003cWorkout\u003e getWorkoutsInPlanList() {","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"        return listOfWorkouts;","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"    public String toString() {","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"        String displayString \u003d getPlanName();","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"        return displayString;","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"Musfirahe0556596":27,"alanlowzies":4}},{"path":"src/main/java/data/plans/PlanList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package data.plans;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"import commands.PlanCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"import data.workouts.InvalidWorkoutException;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"import data.workouts.Workout;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"import data.workouts.WorkoutList;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"TianaiYan"},"content":"import textcolors.TextColor;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"TianaiYan"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"TianaiYan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":" * This class represents an instance of a list of plans entered by the user.","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":" * It contains functionality to validate the user\u0027s inputs as well as allow the user to","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":" * create, list and delete plans.","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"public class PlanList {","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final int PLAN_MAX_NUMBER_OF_WORKOUTS \u003d 10;","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String PLAN_NAME_RESERVED \u003d \"rest day\";","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final int PLAN_NAME_CHARACTER_LIMIT \u003d 30;","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"    private WorkoutList workoutList;","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"    private HashMap\u003cString, Plan\u003e plansHashMapList \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"    private ArrayList\u003cString\u003e plansDisplayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"    private static Logger logger \u003d Logger.getLogger(PlanList.class.getName());","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"     * Constructs an instance of the PlanList class.","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param workoutList An instance of the WorkoutList class.","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"    public PlanList(WorkoutList workoutList) {","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"        this.workoutList \u003d workoutList;","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"        LogHandler.linkToFileLogger(logger);","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"Musfirahe0556596"},"content":"     * Gets the ArrayList of keys of Plan objects.","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"Musfirahe0556596"},"content":"     * The keys of Plan objects are their unique plan names.","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return An ArrayList of keys of Plan objects.","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"Musfirahe0556596"},"content":"    public ArrayList\u003cString\u003e getPlansDisplayList() {","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"Musfirahe0556596"},"content":"        return this.plansDisplayList;","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"Musfirahe0556596"},"content":"     * Gets the HashMap of Plan objects.","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return A HashMap of Plan objects.","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"Musfirahe0556596"},"content":"    public HashMap\u003cString, Plan\u003e getPlansHashMapList() {","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"Musfirahe0556596"},"content":"        return this.plansHashMapList;","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"Musfirahe0556596"},"content":"     * Gets the Plan object based on its key as stored in the plansHashMapList.","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param planKey The key that maps to the desired Plan object.","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return The Plan object that is mapped to planKey.","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"Musfirahe0556596"},"content":"    public Plan getPlanFromKey(String planKey) {","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"Musfirahe0556596"},"content":"        return getPlansHashMapList().get(planKey);","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"Musfirahe0556596"},"content":"     * Retrieves the Plan object from the HashMap plansHashMapList based on the index number","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"Musfirahe0556596"},"content":"     * of the object stored in plansDisplayList. This index number is the number shown in","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"Musfirahe0556596"},"content":"     * \u0027plan /list\u0027.","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param indexNum The index number of the plan as shown in \u0027plan /list\u0027.","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return The Plan object that corresponds to the index number.","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"Musfirahe0556596"},"content":"    public Plan getPlanFromIndexNum(int indexNum) {","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"Musfirahe0556596"},"content":"        int elementNum \u003d indexNum - 1;","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"Musfirahe0556596"},"content":"        assert (elementNum \u003e\u003d 0);","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"Musfirahe0556596"},"content":"        String keyValue \u003d getPlansDisplayList().get(elementNum);","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"Musfirahe0556596"},"content":"        Plan planObject \u003d plansHashMapList.get(keyValue);","lastModifiedDate":"2022-03-19"},{"lineNumber":82,"author":{"gitId":"Musfirahe0556596"},"content":"        return planObject;","lastModifiedDate":"2022-03-19"},{"lineNumber":83,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"     * Retrieves the index number of a plan based on its position in the plansDisplayList","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"     * ArrayList.","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"alanlowzies"},"content":"     * @param planName The name of the plan whose index number this method has to find.","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"alanlowzies"},"content":"     * @return An integer representing the index number the plan is listed in the plansDisplayList","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"alanlowzies"},"content":"     *         ArrayList.","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidPlanException If the given plan name was not found in plansDisplayList.","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"alanlowzies"},"content":"    public int getIndexNumFromPlanName(String planName) throws InvalidPlanException {","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"alanlowzies"},"content":"        for (int i \u003d 0; i \u003c getPlansDisplayList().size(); i +\u003d 1) {","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"a1021492980"},"content":"            if (getPlansDisplayList().get(i).equalsIgnoreCase(planName)) {","lastModifiedDate":"2022-04-05"},{"lineNumber":97,"author":{"gitId":"alanlowzies"},"content":"                return (i + 1);","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"alanlowzies"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"Musfirahe0556596"},"content":"        throw new InvalidPlanException(className, InvalidPlanException.PLAN_NAME_UNKNOWN);","lastModifiedDate":"2022-04-08"},{"lineNumber":103,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":106,"author":{"gitId":"Musfirahe0556596"},"content":"     * Parses the given user argument to identify the details of the new plan to be added.","lastModifiedDate":"2022-03-19"},{"lineNumber":107,"author":{"gitId":"Musfirahe0556596"},"content":"     * Thereafter, the details will be checked for their validity. If all checks pass, a new","lastModifiedDate":"2022-03-19"},{"lineNumber":108,"author":{"gitId":"Musfirahe0556596"},"content":"     * Plan object is instantiated.","lastModifiedDate":"2022-04-09"},{"lineNumber":109,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":110,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param userArgument The user\u0027s details for the new plan, including plan name","lastModifiedDate":"2022-03-19"},{"lineNumber":111,"author":{"gitId":"Musfirahe0556596"},"content":"     *                     and workout(s) to be added to the plan, via their workout number(s).","lastModifiedDate":"2022-03-19"},{"lineNumber":112,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return A Plan object that represents the new plan.","lastModifiedDate":"2022-03-19"},{"lineNumber":113,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws ArrayIndexOutOfBoundsException If userArgument contains insufficient arguments and parsing fails.","lastModifiedDate":"2022-03-19"},{"lineNumber":114,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws NumberFormatException If the workout number(s) specified in userArgument is an","lastModifiedDate":"2022-03-19"},{"lineNumber":115,"author":{"gitId":"Musfirahe0556596"},"content":"     *                               invalid number.","lastModifiedDate":"2022-03-19"},{"lineNumber":116,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws InvalidPlanException If the details specified in userArgument is invalid.","lastModifiedDate":"2022-03-19"},{"lineNumber":117,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":118,"author":{"gitId":"Musfirahe0556596"},"content":"    public Plan createNewPlan(String userArgument) throws ArrayIndexOutOfBoundsException,","lastModifiedDate":"2022-04-09"},{"lineNumber":119,"author":{"gitId":"Musfirahe0556596"},"content":"            NumberFormatException, InvalidPlanException {","lastModifiedDate":"2022-03-19"},{"lineNumber":120,"author":{"gitId":"a1021492980"},"content":"        String userPlanNameInput","lastModifiedDate":"2022-04-05"},{"lineNumber":121,"author":{"gitId":"Musfirahe0556596"},"content":"                \u003d userArgument.split(PlanCommand.ACTION_KEYWORD_CREATE_WORKOUTS)[0].trim().toLowerCase();","lastModifiedDate":"2022-04-08"},{"lineNumber":122,"author":{"gitId":"Musfirahe0556596"},"content":"        String userWorkoutIndexNumbersString \u003d userArgument.split(PlanCommand.ACTION_KEYWORD_CREATE_WORKOUTS)[1].trim();","lastModifiedDate":"2022-04-08"},{"lineNumber":123,"author":{"gitId":"Musfirahe0556596"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"Musfirahe0556596"},"content":"        checkPlanNameValidity(userPlanNameInput, className);","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":126,"author":{"gitId":"Musfirahe0556596"},"content":"        int numberOfWorkoutsInAPlan \u003d userWorkoutIndexNumbersString.split(\",\").length;","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"Musfirahe0556596"},"content":"        checkMinMaxNumberOfWorkouts(numberOfWorkoutsInAPlan, className);","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"Musfirahe0556596"},"content":"        assert (numberOfWorkoutsInAPlan \u003e 0) \u0026\u0026 (numberOfWorkoutsInAPlan \u003c\u003d PLAN_MAX_NUMBER_OF_WORKOUTS);","lastModifiedDate":"2022-04-08"},{"lineNumber":129,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":130,"author":{"gitId":"Musfirahe0556596"},"content":"        ArrayList\u003cWorkout\u003e workoutsToAddInAPlanList \u003d new ArrayList\u003cWorkout\u003e();","lastModifiedDate":"2022-03-19"},{"lineNumber":131,"author":{"gitId":"Musfirahe0556596"},"content":"        for (int i \u003d 0; i \u003c numberOfWorkoutsInAPlan; i +\u003d 1) {","lastModifiedDate":"2022-03-19"},{"lineNumber":132,"author":{"gitId":"Musfirahe0556596"},"content":"            int workoutIndexNumberInteger \u003d Integer.parseInt(userWorkoutIndexNumbersString.split(\",\")[i].trim());","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":134,"author":{"gitId":"Musfirahe0556596"},"content":"            checkWorkoutNumberWithinRange(workoutIndexNumberInteger, className);","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"Musfirahe0556596"},"content":"            assert (workoutIndexNumberInteger \u003e 0)","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"Musfirahe0556596"},"content":"                    \u0026\u0026 (workoutIndexNumberInteger \u003c\u003d workoutList.getWorkoutsDisplayList().size());","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":138,"author":{"gitId":"Musfirahe0556596"},"content":"            String workoutToAddKey \u003d workoutList.getWorkoutsDisplayList().get(workoutIndexNumberInteger - 1);","lastModifiedDate":"2022-03-30"},{"lineNumber":139,"author":{"gitId":"Musfirahe0556596"},"content":"            Workout workoutToAddObject \u003d workoutList.getWorkoutFromKey(workoutToAddKey);","lastModifiedDate":"2022-03-19"},{"lineNumber":140,"author":{"gitId":"Musfirahe0556596"},"content":"            workoutsToAddInAPlanList.add(workoutToAddObject);","lastModifiedDate":"2022-03-19"},{"lineNumber":141,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":142,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":143,"author":{"gitId":"Musfirahe0556596"},"content":"        checkPlanWithSameWorkoutSequence(workoutsToAddInAPlanList, className);","lastModifiedDate":"2022-03-28"},{"lineNumber":144,"author":{"gitId":"Musfirahe0556596"},"content":"        Plan newPlan \u003d new Plan(userPlanNameInput, workoutsToAddInAPlanList);","lastModifiedDate":"2022-03-19"},{"lineNumber":145,"author":{"gitId":"Musfirahe0556596"},"content":"        logger.log(Level.INFO, \"New plan created.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":146,"author":{"gitId":"Musfirahe0556596"},"content":"        return newPlan;","lastModifiedDate":"2022-04-09"},{"lineNumber":147,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":148,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":149,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":150,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method adds a new Plan object to plansHashMapList and plansDisplayList.","lastModifiedDate":"2022-04-09"},{"lineNumber":151,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-04-09"},{"lineNumber":152,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param newPlan The new plan to be added into the two lists mentioned","lastModifiedDate":"2022-04-09"},{"lineNumber":153,"author":{"gitId":"Musfirahe0556596"},"content":"     *                in the method description.","lastModifiedDate":"2022-04-09"},{"lineNumber":154,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":155,"author":{"gitId":"Musfirahe0556596"},"content":"    public void addNewPlanToLists(Plan newPlan) {","lastModifiedDate":"2022-04-09"},{"lineNumber":156,"author":{"gitId":"Musfirahe0556596"},"content":"        String newPlanKey \u003d newPlan.toString();","lastModifiedDate":"2022-03-19"},{"lineNumber":157,"author":{"gitId":"Musfirahe0556596"},"content":"        plansHashMapList.put(newPlanKey, newPlan);","lastModifiedDate":"2022-03-19"},{"lineNumber":158,"author":{"gitId":"Musfirahe0556596"},"content":"        plansDisplayList.add(newPlanKey);","lastModifiedDate":"2022-03-19"},{"lineNumber":159,"author":{"gitId":"Musfirahe0556596"},"content":"        logger.log(Level.INFO, \"New plan added to lists in PlanList.\");","lastModifiedDate":"2022-04-09"},{"lineNumber":160,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":161,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":162,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":163,"author":{"gitId":"Musfirahe0556596"},"content":"     * Checks if the plan name exceeds the 30 characters limit, if it only consists of","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"Musfirahe0556596"},"content":"     * whitespaces and also checks if the provided plan name already exists in the ArrayList of plans.","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"Musfirahe0556596"},"content":"     * Additionally, checks if the plan name is called \"rest day\". If it is,","lastModifiedDate":"2022-03-28"},{"lineNumber":166,"author":{"gitId":"Musfirahe0556596"},"content":"     * do not allow a plan called \"rest day\" to be created as it is used in the schedule feature.","lastModifiedDate":"2022-03-28"},{"lineNumber":167,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":168,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param userPlanNameInput The plan name entered by user to check.","lastModifiedDate":"2022-03-19"},{"lineNumber":169,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param className The class name used for exception throwing.","lastModifiedDate":"2022-03-28"},{"lineNumber":170,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws InvalidPlanException If the name of the plan to be created is invalid.","lastModifiedDate":"2022-03-28"},{"lineNumber":171,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":172,"author":{"gitId":"Musfirahe0556596"},"content":"    public void checkPlanNameValidity(String userPlanNameInput, String className) throws","lastModifiedDate":"2022-03-28"},{"lineNumber":173,"author":{"gitId":"Musfirahe0556596"},"content":"            InvalidPlanException {","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"Musfirahe0556596"},"content":"        String userPlanNameInputLowerCase \u003d userPlanNameInput.toLowerCase();","lastModifiedDate":"2022-03-19"},{"lineNumber":175,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":176,"author":{"gitId":"Musfirahe0556596"},"content":"        int characterCount \u003d userPlanNameInput.length();","lastModifiedDate":"2022-03-28"},{"lineNumber":177,"author":{"gitId":"Musfirahe0556596"},"content":"        if (characterCount \u003e PLAN_NAME_CHARACTER_LIMIT) {","lastModifiedDate":"2022-03-28"},{"lineNumber":178,"author":{"gitId":"Musfirahe0556596"},"content":"            logger.log(Level.WARNING, \"Plan name exceeds character limit.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":179,"author":{"gitId":"Musfirahe0556596"},"content":"            throw new InvalidPlanException(className, InvalidPlanException.PLAN_NAME_EXCEED_LIMIT);","lastModifiedDate":"2022-03-28"},{"lineNumber":180,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":181,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":182,"author":{"gitId":"Musfirahe0556596"},"content":"        if (userPlanNameInput.trim().equals(\"\")) {","lastModifiedDate":"2022-03-28"},{"lineNumber":183,"author":{"gitId":"Musfirahe0556596"},"content":"            logger.log(Level.WARNING, \"Plan name is just whitespaces, or keyboard shortcuts (e.g. ctrl Z) entered.\");","lastModifiedDate":"2022-04-07"},{"lineNumber":184,"author":{"gitId":"Musfirahe0556596"},"content":"            throw new InvalidPlanException(className, InvalidPlanException.PLAN_NAME_INVALID);","lastModifiedDate":"2022-04-07"},{"lineNumber":185,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":186,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":187,"author":{"gitId":"Musfirahe0556596"},"content":"        for (int i \u003d 0; i \u003c plansDisplayList.size(); i +\u003d 1) {","lastModifiedDate":"2022-03-19"},{"lineNumber":188,"author":{"gitId":"Musfirahe0556596"},"content":"            String getPlanName \u003d plansDisplayList.get(i).toLowerCase();","lastModifiedDate":"2022-03-24"},{"lineNumber":189,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":190,"author":{"gitId":"Musfirahe0556596"},"content":"            if (userPlanNameInputLowerCase.equals(getPlanName)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":191,"author":{"gitId":"Musfirahe0556596"},"content":"                logger.log(Level.WARNING, \"Plan name already exists.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":192,"author":{"gitId":"Musfirahe0556596"},"content":"                throw new InvalidPlanException(className, InvalidPlanException.PLAN_DUPLICATE_NAME);","lastModifiedDate":"2022-04-08"},{"lineNumber":193,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":194,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":195,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"Musfirahe0556596"},"content":"        if (userPlanNameInputLowerCase.trim().equals(PLAN_NAME_RESERVED)) {","lastModifiedDate":"2022-04-07"},{"lineNumber":197,"author":{"gitId":"Musfirahe0556596"},"content":"            logger.log(Level.WARNING, \"Plan name cannot be \u0027rest day\u0027.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"Musfirahe0556596"},"content":"            throw new InvalidPlanException(className, InvalidPlanException.PLAN_NAME_RESERVED);","lastModifiedDate":"2022-04-07"},{"lineNumber":199,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":201,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":202,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":203,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method checks whether the number of workouts to be added in a","lastModifiedDate":"2022-03-19"},{"lineNumber":204,"author":{"gitId":"Musfirahe0556596"},"content":"     * plan is within the minimum and maximum number of workouts a plan can hold.","lastModifiedDate":"2022-03-19"},{"lineNumber":205,"author":{"gitId":"Musfirahe0556596"},"content":"     * The range is 1 - 10 workouts.","lastModifiedDate":"2022-03-19"},{"lineNumber":206,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":207,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param numberOfWorkouts The number of workouts to be added in a plan.","lastModifiedDate":"2022-03-19"},{"lineNumber":208,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param className The class name used for exception throwing.","lastModifiedDate":"2022-03-28"},{"lineNumber":209,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws InvalidPlanException If the number of workouts to add in a plan is not","lastModifiedDate":"2022-03-28"},{"lineNumber":210,"author":{"gitId":"Musfirahe0556596"},"content":"     *                              within the min max range stated.","lastModifiedDate":"2022-03-28"},{"lineNumber":211,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":212,"author":{"gitId":"Musfirahe0556596"},"content":"    public void checkMinMaxNumberOfWorkouts(int numberOfWorkouts, String className) throws","lastModifiedDate":"2022-03-28"},{"lineNumber":213,"author":{"gitId":"Musfirahe0556596"},"content":"            InvalidPlanException {","lastModifiedDate":"2022-03-28"},{"lineNumber":214,"author":{"gitId":"Musfirahe0556596"},"content":"        boolean isAppropriateNumberOfWorkouts \u003d false;","lastModifiedDate":"2022-03-28"},{"lineNumber":215,"author":{"gitId":"Musfirahe0556596"},"content":"        if (numberOfWorkouts \u003e 0 \u0026\u0026 numberOfWorkouts \u003c\u003d PLAN_MAX_NUMBER_OF_WORKOUTS) {","lastModifiedDate":"2022-04-08"},{"lineNumber":216,"author":{"gitId":"Musfirahe0556596"},"content":"            isAppropriateNumberOfWorkouts \u003d true;","lastModifiedDate":"2022-03-28"},{"lineNumber":217,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":218,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":219,"author":{"gitId":"Musfirahe0556596"},"content":"        if (!isAppropriateNumberOfWorkouts) {","lastModifiedDate":"2022-03-28"},{"lineNumber":220,"author":{"gitId":"Musfirahe0556596"},"content":"            logger.log(Level.WARNING, \"Number of workouts to add in a plan is invalid.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":221,"author":{"gitId":"Musfirahe0556596"},"content":"            throw new InvalidPlanException(className, InvalidPlanException.PLAN_MIN_MAX_WORKOUTS);","lastModifiedDate":"2022-04-08"},{"lineNumber":222,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":223,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":224,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":225,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":226,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method checks whether the workout number supplied","lastModifiedDate":"2022-03-19"},{"lineNumber":227,"author":{"gitId":"Musfirahe0556596"},"content":"     * is within the range of the current workout list (in workout /list).","lastModifiedDate":"2022-03-24"},{"lineNumber":228,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":229,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param workoutNumber The workout number to check.","lastModifiedDate":"2022-03-19"},{"lineNumber":230,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param className The class name used for exception throwing.","lastModifiedDate":"2022-03-28"},{"lineNumber":231,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws InvalidPlanException If the workout number is not within the range of","lastModifiedDate":"2022-03-28"},{"lineNumber":232,"author":{"gitId":"Musfirahe0556596"},"content":"     *                              the workout list.","lastModifiedDate":"2022-03-28"},{"lineNumber":233,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":234,"author":{"gitId":"Musfirahe0556596"},"content":"    public void checkWorkoutNumberWithinRange(int workoutNumber, String className) throws","lastModifiedDate":"2022-03-28"},{"lineNumber":235,"author":{"gitId":"Musfirahe0556596"},"content":"            InvalidPlanException {","lastModifiedDate":"2022-03-28"},{"lineNumber":236,"author":{"gitId":"Musfirahe0556596"},"content":"        boolean isWithinWorkoutListRange \u003d false;","lastModifiedDate":"2022-03-28"},{"lineNumber":237,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":238,"author":{"gitId":"Musfirahe0556596"},"content":"        if (workoutNumber \u003e 0 \u0026\u0026 workoutNumber \u003c\u003d workoutList.getWorkoutsDisplayList().size()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":239,"author":{"gitId":"Musfirahe0556596"},"content":"            isWithinWorkoutListRange \u003d true;","lastModifiedDate":"2022-03-28"},{"lineNumber":240,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":241,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":242,"author":{"gitId":"Musfirahe0556596"},"content":"        if (!isWithinWorkoutListRange) {","lastModifiedDate":"2022-03-28"},{"lineNumber":243,"author":{"gitId":"Musfirahe0556596"},"content":"            logger.log(Level.WARNING, \"Workout number to add in the plan is invalid.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":244,"author":{"gitId":"Musfirahe0556596"},"content":"            throw new InvalidPlanException(className, InvalidPlanException.PLAN_WORKOUT_NUMBER_OUT_OF_RANGE);","lastModifiedDate":"2022-04-08"},{"lineNumber":245,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":246,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":247,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":248,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":249,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method checks whether the new plan to be created has the same workout","lastModifiedDate":"2022-03-28"},{"lineNumber":250,"author":{"gitId":"Musfirahe0556596"},"content":"     * sequence/order as any other existing plans in the application\u0027s plan list.","lastModifiedDate":"2022-03-28"},{"lineNumber":251,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":252,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param workoutsToAddInNewPlanList The workouts to be added into the plan to be created.","lastModifiedDate":"2022-03-28"},{"lineNumber":253,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param className The class name used for exception throwing.","lastModifiedDate":"2022-03-28"},{"lineNumber":254,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws InvalidPlanException If the plan has the same sequence as existing plans.","lastModifiedDate":"2022-03-28"},{"lineNumber":255,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":256,"author":{"gitId":"Musfirahe0556596"},"content":"    public void checkPlanWithSameWorkoutSequence(ArrayList\u003cWorkout\u003e workoutsToAddInNewPlanList, String className)","lastModifiedDate":"2022-03-28"},{"lineNumber":257,"author":{"gitId":"Musfirahe0556596"},"content":"            throws InvalidPlanException {","lastModifiedDate":"2022-03-28"},{"lineNumber":258,"author":{"gitId":"Musfirahe0556596"},"content":"        boolean hasSameSequence \u003d false;","lastModifiedDate":"2022-03-28"},{"lineNumber":259,"author":{"gitId":"Musfirahe0556596"},"content":"        for (int i \u003d 0; i \u003c plansDisplayList.size(); i +\u003d 1) {","lastModifiedDate":"2022-03-28"},{"lineNumber":260,"author":{"gitId":"Musfirahe0556596"},"content":"            String getPlanKey \u003d plansDisplayList.get(i);","lastModifiedDate":"2022-03-28"},{"lineNumber":261,"author":{"gitId":"Musfirahe0556596"},"content":"            Plan getPlan \u003d plansHashMapList.get(getPlanKey);","lastModifiedDate":"2022-03-28"},{"lineNumber":262,"author":{"gitId":"Musfirahe0556596"},"content":"            ArrayList\u003cWorkout\u003e workoutsListToCheck \u003d getPlan.getWorkoutsInPlanList();","lastModifiedDate":"2022-03-28"},{"lineNumber":263,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":264,"author":{"gitId":"Musfirahe0556596"},"content":"            if (workoutsToAddInNewPlanList.size() \u003d\u003d workoutsListToCheck.size()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":265,"author":{"gitId":"Musfirahe0556596"},"content":"                assert (workoutsToAddInNewPlanList.size() \u003d\u003d workoutsListToCheck.size());","lastModifiedDate":"2022-03-28"},{"lineNumber":266,"author":{"gitId":"Musfirahe0556596"},"content":"                int matchCount \u003d countNumberOfWorkoutMatches(workoutsListToCheck, workoutsToAddInNewPlanList);","lastModifiedDate":"2022-03-28"},{"lineNumber":267,"author":{"gitId":"Musfirahe0556596"},"content":"                hasSameSequence \u003d determineSameSequence(matchCount, workoutsListToCheck);","lastModifiedDate":"2022-03-28"},{"lineNumber":268,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":269,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":270,"author":{"gitId":"Musfirahe0556596"},"content":"            if (hasSameSequence) {","lastModifiedDate":"2022-03-28"},{"lineNumber":271,"author":{"gitId":"Musfirahe0556596"},"content":"                System.out.println(\"Plan [\" + getPlanKey + \"]\"","lastModifiedDate":"2022-03-28"},{"lineNumber":272,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \" has same workout sequence as the plan to be created.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":273,"author":{"gitId":"Musfirahe0556596"},"content":"                logger.log(Level.WARNING, \"Invalid plan to add as an existing plan with same workout sequence exists.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":274,"author":{"gitId":"Musfirahe0556596"},"content":"                throw new InvalidPlanException(className, InvalidPlanException.PLAN_SAME_WORKOUT_SEQUENCE);","lastModifiedDate":"2022-03-28"},{"lineNumber":275,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":276,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":277,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":278,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":279,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":280,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method counts the number of exact matches between two workout ArrayList.","lastModifiedDate":"2022-03-28"},{"lineNumber":281,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":282,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param workoutsListToCheck The workout list of an existing plan in the application.","lastModifiedDate":"2022-03-28"},{"lineNumber":283,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param workoutsToAddInNewPlanList The workout list of the plan to be created.","lastModifiedDate":"2022-03-28"},{"lineNumber":284,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return The number of exact matches.","lastModifiedDate":"2022-03-28"},{"lineNumber":285,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":286,"author":{"gitId":"Musfirahe0556596"},"content":"    public int countNumberOfWorkoutMatches(ArrayList\u003cWorkout\u003e workoutsListToCheck,","lastModifiedDate":"2022-03-28"},{"lineNumber":287,"author":{"gitId":"Musfirahe0556596"},"content":"            ArrayList\u003cWorkout\u003e workoutsToAddInNewPlanList) {","lastModifiedDate":"2022-03-28"},{"lineNumber":288,"author":{"gitId":"Musfirahe0556596"},"content":"        int matchCount \u003d 0;","lastModifiedDate":"2022-03-28"},{"lineNumber":289,"author":{"gitId":"Musfirahe0556596"},"content":"        for (int k \u003d 0; k \u003c workoutsListToCheck.size(); k +\u003d 1) {","lastModifiedDate":"2022-03-28"},{"lineNumber":290,"author":{"gitId":"Musfirahe0556596"},"content":"            String compareWorkoutsStringNewPlan \u003d workoutsToAddInNewPlanList.get(k).toString();","lastModifiedDate":"2022-03-28"},{"lineNumber":291,"author":{"gitId":"Musfirahe0556596"},"content":"            if (compareWorkoutsStringNewPlan.equals(workoutsListToCheck.get(k).toString())) {","lastModifiedDate":"2022-03-28"},{"lineNumber":292,"author":{"gitId":"Musfirahe0556596"},"content":"                matchCount +\u003d 1;","lastModifiedDate":"2022-03-28"},{"lineNumber":293,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":294,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":295,"author":{"gitId":"Musfirahe0556596"},"content":"        return matchCount;","lastModifiedDate":"2022-03-28"},{"lineNumber":296,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":297,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":298,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":299,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method determines whether two workout lists have the same sequence","lastModifiedDate":"2022-03-28"},{"lineNumber":300,"author":{"gitId":"Musfirahe0556596"},"content":"     * by comparing the number of matches to the size of the workouts list of an existing plan.","lastModifiedDate":"2022-03-28"},{"lineNumber":301,"author":{"gitId":"Musfirahe0556596"},"content":"     * If the number of matches is more or equal to the size of that workout list,","lastModifiedDate":"2022-03-28"},{"lineNumber":302,"author":{"gitId":"Musfirahe0556596"},"content":"     * it means that the workout sequence is a duplicate.","lastModifiedDate":"2022-03-28"},{"lineNumber":303,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":304,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param matchCount The number of matches.","lastModifiedDate":"2022-03-28"},{"lineNumber":305,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param workoutsListToCheck The workout list of an existing plan.","lastModifiedDate":"2022-03-28"},{"lineNumber":306,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return True if the number of matches is more or equal to the size of the workouts list","lastModifiedDate":"2022-03-28"},{"lineNumber":307,"author":{"gitId":"Musfirahe0556596"},"content":"     *         Or else, false.","lastModifiedDate":"2022-03-28"},{"lineNumber":308,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":309,"author":{"gitId":"Musfirahe0556596"},"content":"    public boolean determineSameSequence(int matchCount, ArrayList\u003cWorkout\u003e workoutsListToCheck) {","lastModifiedDate":"2022-03-28"},{"lineNumber":310,"author":{"gitId":"Musfirahe0556596"},"content":"        return matchCount \u003e\u003d workoutsListToCheck.size();","lastModifiedDate":"2022-03-28"},{"lineNumber":311,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":312,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":313,"author":{"gitId":"a1021492980"},"content":"    public void insertPlanIntoList(String planKey, Plan plan) throws InvalidWorkoutException {","lastModifiedDate":"2022-03-20"},{"lineNumber":314,"author":{"gitId":"a1021492980"},"content":"        boolean isExistingWorkout \u003d true;","lastModifiedDate":"2022-03-20"},{"lineNumber":315,"author":{"gitId":"a1021492980"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-20"},{"lineNumber":316,"author":{"gitId":"a1021492980"},"content":"        var workoutData \u003d plan.getWorkoutsInPlanList();","lastModifiedDate":"2022-03-20"},{"lineNumber":317,"author":{"gitId":"a1021492980"},"content":"        for (Workout workoutInPlanFile : workoutData) {","lastModifiedDate":"2022-03-20"},{"lineNumber":318,"author":{"gitId":"a1021492980"},"content":"            if (!workoutList.getWorkoutsHashMapList().containsKey(workoutInPlanFile.toString())) {","lastModifiedDate":"2022-03-20"},{"lineNumber":319,"author":{"gitId":"a1021492980"},"content":"                isExistingWorkout \u003d false;","lastModifiedDate":"2022-03-20"},{"lineNumber":320,"author":{"gitId":"a1021492980"},"content":"                break;","lastModifiedDate":"2022-03-20"},{"lineNumber":321,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":322,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":323,"author":{"gitId":"a1021492980"},"content":"        if (!isExistingWorkout) {","lastModifiedDate":"2022-03-20"},{"lineNumber":324,"author":{"gitId":"a1021492980"},"content":"            throw new InvalidWorkoutException(className, InvalidWorkoutException.INVALID_WORKOUT_ERROR_MSG);","lastModifiedDate":"2022-03-20"},{"lineNumber":325,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":326,"author":{"gitId":"a1021492980"},"content":"        plansHashMapList.put(planKey, plan);","lastModifiedDate":"2022-03-20"},{"lineNumber":327,"author":{"gitId":"a1021492980"},"content":"        plansDisplayList.add(planKey);","lastModifiedDate":"2022-03-20"},{"lineNumber":328,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":329,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":330,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":331,"author":{"gitId":"Musfirahe0556596"},"content":"     * Prints all the plan names that are stored in the plans list.","lastModifiedDate":"2022-03-19"},{"lineNumber":332,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":333,"author":{"gitId":"Musfirahe0556596"},"content":"    public void listAllPlan() {","lastModifiedDate":"2022-03-19"},{"lineNumber":334,"author":{"gitId":"Musfirahe0556596"},"content":"        if (getPlansDisplayList().size() \u003c\u003d 0) {","lastModifiedDate":"2022-03-19"},{"lineNumber":335,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"Oops! You have not created any plans yet!\"","lastModifiedDate":"2022-03-24"},{"lineNumber":336,"author":{"gitId":"Musfirahe0556596"},"content":"                    + \"\\nTo create a new plan, enter \u0027plan /new \u003cplan name\u003e /workouts \"","lastModifiedDate":"2022-03-24"},{"lineNumber":337,"author":{"gitId":"Musfirahe0556596"},"content":"                    + \"\\n\u003cworkout number(s) to add, separated by comma\u003e\u0027.\"","lastModifiedDate":"2022-03-19"},{"lineNumber":338,"author":{"gitId":"Musfirahe0556596"},"content":"                    + \"\\nAlternatively, enter \u0027help\u0027 for more information.\");","lastModifiedDate":"2022-03-19"},{"lineNumber":339,"author":{"gitId":"Musfirahe0556596"},"content":"            return;","lastModifiedDate":"2022-03-19"},{"lineNumber":340,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":341,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":342,"author":{"gitId":"Musfirahe0556596"},"content":"        assert (getPlansDisplayList().size() \u003e 0);","lastModifiedDate":"2022-03-19"},{"lineNumber":343,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.println(\"Here are all your plan(s).\");","lastModifiedDate":"2022-03-19"},{"lineNumber":344,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(\"To view each plan in detail, enter\\n\u0027plan /details \u003cplan number in list\u003e\u0027.\\n\");","lastModifiedDate":"2022-03-23"},{"lineNumber":345,"author":{"gitId":"Musfirahe0556596"},"content":"        for (int i \u003d 0; i \u003c getPlansDisplayList().size(); i +\u003d 1) {","lastModifiedDate":"2022-03-19"},{"lineNumber":346,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println((i + 1) + \". \" + getPlansDisplayList().get(i));","lastModifiedDate":"2022-03-24"},{"lineNumber":347,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":348,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":349,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":350,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":351,"author":{"gitId":"TianaiYan"},"content":"     * Prints the plan details, workouts in the plan.","lastModifiedDate":"2022-03-26"},{"lineNumber":352,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":353,"author":{"gitId":"TianaiYan"},"content":"     * @param userArgument The argument entered by user, that is, the index of plan to view details.","lastModifiedDate":"2022-03-27"},{"lineNumber":354,"author":{"gitId":"TianaiYan"},"content":"     * @param ui An instance of the UI class.","lastModifiedDate":"2022-03-27"},{"lineNumber":355,"author":{"gitId":"TianaiYan"},"content":"     * @throws NumberFormatException If index of plan that user entered is not an integer.","lastModifiedDate":"2022-03-28"},{"lineNumber":356,"author":{"gitId":"TianaiYan"},"content":"     * @throws InvalidPlanException If index of plan is out of range.","lastModifiedDate":"2022-03-28"},{"lineNumber":357,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":358,"author":{"gitId":"TianaiYan"},"content":"    public void listPlanDetails(String userArgument, UI ui) throws NumberFormatException, InvalidPlanException {","lastModifiedDate":"2022-03-28"},{"lineNumber":359,"author":{"gitId":"TianaiYan"},"content":"        logger.entering(getClass().getName(), \"listPlanDetails\");","lastModifiedDate":"2022-03-29"},{"lineNumber":360,"author":{"gitId":"TianaiYan"},"content":"        int indexOfPlan \u003d Integer.parseInt(userArgument.trim());","lastModifiedDate":"2022-03-26"},{"lineNumber":361,"author":{"gitId":"TianaiYan"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-28"},{"lineNumber":362,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":363,"author":{"gitId":"TianaiYan"},"content":"        boolean isPlanIndexToViewDetailsValid \u003d checkPlanIndexIsWithinRange(indexOfPlan);","lastModifiedDate":"2022-03-29"},{"lineNumber":364,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":365,"author":{"gitId":"TianaiYan"},"content":"        if (!isPlanIndexToViewDetailsValid) {","lastModifiedDate":"2022-03-29"},{"lineNumber":366,"author":{"gitId":"TianaiYan"},"content":"            logger.log(Level.WARNING, \"Plan index to view details is out of range!\");","lastModifiedDate":"2022-03-29"},{"lineNumber":367,"author":{"gitId":"TianaiYan"},"content":"            throw new InvalidPlanException(className, InvalidPlanException.PLAN_INDEX_OUT_OF_RANGE);","lastModifiedDate":"2022-03-28"},{"lineNumber":368,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":369,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":370,"author":{"gitId":"TianaiYan"},"content":"        Plan planToViewDetails \u003d getPlanFromIndexNum(indexOfPlan);","lastModifiedDate":"2022-03-26"},{"lineNumber":371,"author":{"gitId":"TianaiYan"},"content":"        String planName \u003d getPlansDisplayList().get(indexOfPlan - 1);","lastModifiedDate":"2022-03-26"},{"lineNumber":372,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":373,"author":{"gitId":"TianaiYan"},"content":"        ArrayList\u003cWorkout\u003e workoutsInPlanList \u003d planToViewDetails.getWorkoutsInPlanList();","lastModifiedDate":"2022-03-26"},{"lineNumber":374,"author":{"gitId":"TianaiYan"},"content":"        int numberOfWorkoutsInPlan \u003d workoutsInPlanList.size();","lastModifiedDate":"2022-03-26"},{"lineNumber":375,"author":{"gitId":"Musfirahe0556596"},"content":"        assert ((numberOfWorkoutsInPlan \u003c\u003d PLAN_MAX_NUMBER_OF_WORKOUTS) \u0026\u0026 (numberOfWorkoutsInPlan \u003e 0)) :","lastModifiedDate":"2022-04-08"},{"lineNumber":376,"author":{"gitId":"TianaiYan"},"content":"                \"Problem with \u0027numberOfWorkoutsInPlan\u0027: Total number of workouts in plan is not valid.\";","lastModifiedDate":"2022-04-10"},{"lineNumber":377,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":378,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\"Here are the \" + numberOfWorkoutsInPlan + \" workouts in [\"","lastModifiedDate":"2022-03-26"},{"lineNumber":379,"author":{"gitId":"TianaiYan"},"content":"                + ui.getColorText(TextColor.COLOR_YELLOW, planName) + \"].\");","lastModifiedDate":"2022-03-26"},{"lineNumber":380,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":381,"author":{"gitId":"TianaiYan"},"content":"        for (int i \u003d 0; i \u003c numberOfWorkoutsInPlan; i++) {","lastModifiedDate":"2022-03-26"},{"lineNumber":382,"author":{"gitId":"TianaiYan"},"content":"            String workoutDetails \u003d workoutsInPlanList.get(i).toString();","lastModifiedDate":"2022-04-08"},{"lineNumber":383,"author":{"gitId":"TianaiYan"},"content":"            System.out.println((i + 1) + \". \" + workoutDetails);","lastModifiedDate":"2022-04-08"},{"lineNumber":384,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":385,"author":{"gitId":"TianaiYan"},"content":"        logger.exiting(getClass().getName(), \"listPlanDetails\");","lastModifiedDate":"2022-03-29"},{"lineNumber":386,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":387,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":388,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":389,"author":{"gitId":"TianaiYan"},"content":"     * Removes the intended plan in the plans list.","lastModifiedDate":"2022-03-23"},{"lineNumber":390,"author":{"gitId":"TianaiYan"},"content":"     * The plan to delete is determined by the user who will","lastModifiedDate":"2022-03-23"},{"lineNumber":391,"author":{"gitId":"TianaiYan"},"content":"     * indicate the index of plan to delete in the plan list.","lastModifiedDate":"2022-03-23"},{"lineNumber":392,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":393,"author":{"gitId":"TianaiYan"},"content":"     * @param userArgument The argument entered by user, that is, the index of plan to delete.","lastModifiedDate":"2022-03-23"},{"lineNumber":394,"author":{"gitId":"TianaiYan"},"content":"     * @return deletedPlan The plan object that is deleted from the plansDisplayList.","lastModifiedDate":"2022-03-23"},{"lineNumber":395,"author":{"gitId":"TianaiYan"},"content":"     * @throws NumberFormatException If index of plan that user entered is not an integer.","lastModifiedDate":"2022-03-23"},{"lineNumber":396,"author":{"gitId":"TianaiYan"},"content":"     * @throws InvalidPlanException If index of plan to delete is out of range.","lastModifiedDate":"2022-03-23"},{"lineNumber":397,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":398,"author":{"gitId":"TianaiYan"},"content":"    public Plan deletePlan(String userArgument) throws NumberFormatException, InvalidPlanException {","lastModifiedDate":"2022-03-23"},{"lineNumber":399,"author":{"gitId":"TianaiYan"},"content":"        logger.entering(getClass().getName(), \"deletePlan\");","lastModifiedDate":"2022-03-29"},{"lineNumber":400,"author":{"gitId":"TianaiYan"},"content":"        int indexToDelete \u003d Integer.parseInt(userArgument.trim());","lastModifiedDate":"2022-03-23"},{"lineNumber":401,"author":{"gitId":"TianaiYan"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-23"},{"lineNumber":402,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":403,"author":{"gitId":"TianaiYan"},"content":"        boolean isPlanIndexToDeleteValid \u003d checkPlanIndexIsWithinRange(indexToDelete);","lastModifiedDate":"2022-03-27"},{"lineNumber":404,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":405,"author":{"gitId":"TianaiYan"},"content":"        if (!isPlanIndexToDeleteValid) {","lastModifiedDate":"2022-03-27"},{"lineNumber":406,"author":{"gitId":"TianaiYan"},"content":"            logger.log(Level.WARNING, \"Plan index to delete is out of range!\");","lastModifiedDate":"2022-03-29"},{"lineNumber":407,"author":{"gitId":"TianaiYan"},"content":"            throw new InvalidPlanException(className, InvalidPlanException.PLAN_INDEX_OUT_OF_RANGE);","lastModifiedDate":"2022-03-23"},{"lineNumber":408,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":409,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":410,"author":{"gitId":"TianaiYan"},"content":"        assert (indexToDelete \u003e 0) \u0026\u0026 (indexToDelete \u003c\u003d plansDisplayList.size());","lastModifiedDate":"2022-03-23"},{"lineNumber":411,"author":{"gitId":"TianaiYan"},"content":"        Plan deletedPlan \u003d getPlanFromIndexNum(indexToDelete);","lastModifiedDate":"2022-03-23"},{"lineNumber":412,"author":{"gitId":"TianaiYan"},"content":"        String deletedPlanKey \u003d deletedPlan.toString();","lastModifiedDate":"2022-03-23"},{"lineNumber":413,"author":{"gitId":"TianaiYan"},"content":"        plansDisplayList.remove(indexToDelete - 1);","lastModifiedDate":"2022-03-23"},{"lineNumber":414,"author":{"gitId":"TianaiYan"},"content":"        getPlansHashMapList().remove(deletedPlanKey);","lastModifiedDate":"2022-03-23"},{"lineNumber":415,"author":{"gitId":"TianaiYan"},"content":"        logger.exiting(getClass().getName(), \"deletePlan\");","lastModifiedDate":"2022-03-29"},{"lineNumber":416,"author":{"gitId":"TianaiYan"},"content":"        return deletedPlan;","lastModifiedDate":"2022-03-23"},{"lineNumber":417,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":418,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":419,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":420,"author":{"gitId":"TianaiYan"},"content":"     * Checks whether the plan index is within the range of the current plan list (in plan /list).","lastModifiedDate":"2022-03-29"},{"lineNumber":421,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":422,"author":{"gitId":"TianaiYan"},"content":"     * @param planIndex The plan index to check.","lastModifiedDate":"2022-03-29"},{"lineNumber":423,"author":{"gitId":"TianaiYan"},"content":"     * @return True if plan index is within the range of the plan list, else false if out of range.","lastModifiedDate":"2022-03-29"},{"lineNumber":424,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":425,"author":{"gitId":"TianaiYan"},"content":"    public boolean checkPlanIndexIsWithinRange(int planIndex) {","lastModifiedDate":"2022-03-31"},{"lineNumber":426,"author":{"gitId":"TianaiYan"},"content":"        return planIndex \u003e 0 \u0026\u0026 planIndex \u003c\u003d plansDisplayList.size();","lastModifiedDate":"2022-03-27"},{"lineNumber":427,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":428,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":429,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":430,"author":{"gitId":"TianaiYan"},"content":"     * Checks whether the workout is in the plan.","lastModifiedDate":"2022-03-27"},{"lineNumber":431,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":432,"author":{"gitId":"a1021492980"},"content":"     * @param oldWorkoutToCheck        The workout to look for in the plan.","lastModifiedDate":"2022-04-06"},{"lineNumber":433,"author":{"gitId":"a1021492980"},"content":"     * @param updatedWorkoutToCheck The updated workout to look for in the plan.","lastModifiedDate":"2022-04-06"},{"lineNumber":434,"author":{"gitId":"TianaiYan"},"content":"     * @param plan                  An instance of the Plan class.","lastModifiedDate":"2022-03-27"},{"lineNumber":435,"author":{"gitId":"a1021492980"},"content":"     * @return                      True if either workout or updated workout is found in the plan,","lastModifiedDate":"2022-04-06"},{"lineNumber":436,"author":{"gitId":"a1021492980"},"content":"     *                              else false if the workout is not in the plan.","lastModifiedDate":"2022-04-06"},{"lineNumber":437,"author":{"gitId":"TianaiYan"},"content":"     * @throws ArrayIndexOutOfBoundsException   For operations which involves index checking.","lastModifiedDate":"2022-03-27"},{"lineNumber":438,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":439,"author":{"gitId":"a1021492980"},"content":"    public boolean checkWorkoutInPlan(String oldWorkoutToCheck, String updatedWorkoutToCheck, Plan plan)","lastModifiedDate":"2022-04-06"},{"lineNumber":440,"author":{"gitId":"a1021492980"},"content":"            throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2022-04-06"},{"lineNumber":441,"author":{"gitId":"a1021492980"},"content":"        ArrayList\u003cWorkout\u003e workoutsInPlanList \u003d plan.getWorkoutsInPlanList();","lastModifiedDate":"2022-04-06"},{"lineNumber":442,"author":{"gitId":"a1021492980"},"content":"        String workoutInPlanDetails;","lastModifiedDate":"2022-04-06"},{"lineNumber":443,"author":{"gitId":"a1021492980"},"content":"        for (Workout workoutsInPlan : workoutsInPlanList) {","lastModifiedDate":"2022-04-06"},{"lineNumber":444,"author":{"gitId":"a1021492980"},"content":"            workoutInPlanDetails \u003d workoutsInPlan.toString();","lastModifiedDate":"2022-04-06"},{"lineNumber":445,"author":{"gitId":"a1021492980"},"content":"            if (oldWorkoutToCheck.equals(workoutInPlanDetails) || updatedWorkoutToCheck.equals(workoutInPlanDetails)) {","lastModifiedDate":"2022-04-06"},{"lineNumber":446,"author":{"gitId":"a1021492980"},"content":"                return true;","lastModifiedDate":"2022-04-06"},{"lineNumber":447,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-04-06"},{"lineNumber":448,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":449,"author":{"gitId":"a1021492980"},"content":"        return false;","lastModifiedDate":"2022-04-06"},{"lineNumber":450,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":451,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":452,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":453,"author":{"gitId":"a1021492980"},"content":"     * Checks whether the workout is in the plan.","lastModifiedDate":"2022-04-06"},{"lineNumber":454,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-04-06"},{"lineNumber":455,"author":{"gitId":"a1021492980"},"content":"     * @param workoutToCheck The workout to look for in the plan.","lastModifiedDate":"2022-04-06"},{"lineNumber":456,"author":{"gitId":"a1021492980"},"content":"     * @param plan An instance of the Plan class.","lastModifiedDate":"2022-04-06"},{"lineNumber":457,"author":{"gitId":"a1021492980"},"content":"     * @return True if workout is found in the plan, else false if the workout is not in the plan.","lastModifiedDate":"2022-04-06"},{"lineNumber":458,"author":{"gitId":"a1021492980"},"content":"     * @throws ArrayIndexOutOfBoundsException For operations which involves index checking.","lastModifiedDate":"2022-04-06"},{"lineNumber":459,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":460,"author":{"gitId":"TianaiYan"},"content":"    public boolean checkWorkoutInPlan(String workoutToCheck, Plan plan) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2022-03-31"},{"lineNumber":461,"author":{"gitId":"TianaiYan"},"content":"        ArrayList\u003cWorkout\u003e workoutsInPlanList \u003d plan.getWorkoutsInPlanList();","lastModifiedDate":"2022-03-27"},{"lineNumber":462,"author":{"gitId":"TianaiYan"},"content":"        String workoutInPlanDetails;","lastModifiedDate":"2022-03-27"},{"lineNumber":463,"author":{"gitId":"TianaiYan"},"content":"        for (Workout workoutsInPlan : workoutsInPlanList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":464,"author":{"gitId":"TianaiYan"},"content":"            workoutInPlanDetails \u003d workoutsInPlan.toString();","lastModifiedDate":"2022-03-27"},{"lineNumber":465,"author":{"gitId":"TianaiYan"},"content":"            if (workoutToCheck.equals(workoutInPlanDetails)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":466,"author":{"gitId":"TianaiYan"},"content":"                return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":467,"author":{"gitId":"TianaiYan"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":468,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":469,"author":{"gitId":"TianaiYan"},"content":"        return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":470,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":471,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":472,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":473,"author":{"gitId":"a1021492980"},"content":"     * Gets the index number of plans which includes the updated workout.","lastModifiedDate":"2022-04-06"},{"lineNumber":474,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-04-06"},{"lineNumber":475,"author":{"gitId":"a1021492980"},"content":"     * @param oldWorkoutToCheck        The workout to look for in the plan.","lastModifiedDate":"2022-04-06"},{"lineNumber":476,"author":{"gitId":"a1021492980"},"content":"     * @param updatedWorkoutToCheck The updated workout to look for in the plan.","lastModifiedDate":"2022-04-06"},{"lineNumber":477,"author":{"gitId":"a1021492980"},"content":"     * @return                      An Arraylist of integer which includes the index number of the","lastModifiedDate":"2022-04-06"},{"lineNumber":478,"author":{"gitId":"a1021492980"},"content":"     *                              plan that includes the updated workout.","lastModifiedDate":"2022-04-06"},{"lineNumber":479,"author":{"gitId":"TianaiYan"},"content":"     * @throws ArrayIndexOutOfBoundsException   For operations which involves index checking.","lastModifiedDate":"2022-03-27"},{"lineNumber":480,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":481,"author":{"gitId":"a1021492980"},"content":"    public ArrayList\u003cInteger\u003e findPlanContainsTargetWorkout(String oldWorkoutToCheck, String updatedWorkoutToCheck)","lastModifiedDate":"2022-04-06"},{"lineNumber":482,"author":{"gitId":"a1021492980"},"content":"            throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2022-04-06"},{"lineNumber":483,"author":{"gitId":"a1021492980"},"content":"        Plan planObject;","lastModifiedDate":"2022-04-06"},{"lineNumber":484,"author":{"gitId":"a1021492980"},"content":"        boolean isWorkoutInPlan \u003d false;","lastModifiedDate":"2022-04-06"},{"lineNumber":485,"author":{"gitId":"a1021492980"},"content":"        ArrayList\u003cInteger\u003e planIndexWithTargetWorkout \u003d new ArrayList\u003cInteger\u003e();","lastModifiedDate":"2022-04-06"},{"lineNumber":486,"author":{"gitId":"a1021492980"},"content":"        for (int i \u003d 1; i \u003c\u003d getPlansDisplayList().size(); i++) {","lastModifiedDate":"2022-04-06"},{"lineNumber":487,"author":{"gitId":"a1021492980"},"content":"            planObject \u003d getPlanFromIndexNum(i);","lastModifiedDate":"2022-04-06"},{"lineNumber":488,"author":{"gitId":"a1021492980"},"content":"            isWorkoutInPlan \u003d checkWorkoutInPlan(oldWorkoutToCheck, updatedWorkoutToCheck, planObject);","lastModifiedDate":"2022-04-06"},{"lineNumber":489,"author":{"gitId":"a1021492980"},"content":"            if (isWorkoutInPlan) {","lastModifiedDate":"2022-04-06"},{"lineNumber":490,"author":{"gitId":"a1021492980"},"content":"                planIndexWithTargetWorkout.add(i);","lastModifiedDate":"2022-04-06"},{"lineNumber":491,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-04-06"},{"lineNumber":492,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":493,"author":{"gitId":"a1021492980"},"content":"        return planIndexWithTargetWorkout;","lastModifiedDate":"2022-04-06"},{"lineNumber":494,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":495,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":496,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":497,"author":{"gitId":"a1021492980"},"content":"     * Gets the number of plans which includes the deleted workout.","lastModifiedDate":"2022-04-06"},{"lineNumber":498,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-04-06"},{"lineNumber":499,"author":{"gitId":"a1021492980"},"content":"     * @param workoutToCheck The workout to look for in the plan.","lastModifiedDate":"2022-04-06"},{"lineNumber":500,"author":{"gitId":"a1021492980"},"content":"     * @return An Arraylist of integer which includes the number of the","lastModifiedDate":"2022-04-06"},{"lineNumber":501,"author":{"gitId":"a1021492980"},"content":"     *         plan that includes the deleted workout.","lastModifiedDate":"2022-04-06"},{"lineNumber":502,"author":{"gitId":"a1021492980"},"content":"     * @throws ArrayIndexOutOfBoundsException For operations which involves index checking.","lastModifiedDate":"2022-04-06"},{"lineNumber":503,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":504,"author":{"gitId":"TianaiYan"},"content":"    public ArrayList\u003cInteger\u003e findPlanContainsTargetWorkout(String workoutToCheck) throws","lastModifiedDate":"2022-03-31"},{"lineNumber":505,"author":{"gitId":"TianaiYan"},"content":"            ArrayIndexOutOfBoundsException {","lastModifiedDate":"2022-03-27"},{"lineNumber":506,"author":{"gitId":"TianaiYan"},"content":"        Plan planObject;","lastModifiedDate":"2022-03-27"},{"lineNumber":507,"author":{"gitId":"TianaiYan"},"content":"        boolean isWorkoutInPlan \u003d false;","lastModifiedDate":"2022-03-27"},{"lineNumber":508,"author":{"gitId":"TianaiYan"},"content":"        ArrayList\u003cInteger\u003e planIndexWithTargetWorkout \u003d new ArrayList\u003cInteger\u003e();","lastModifiedDate":"2022-03-31"},{"lineNumber":509,"author":{"gitId":"TianaiYan"},"content":"        for (int i \u003d 1; i \u003c\u003d getPlansDisplayList().size(); i++) {","lastModifiedDate":"2022-03-27"},{"lineNumber":510,"author":{"gitId":"TianaiYan"},"content":"            planObject \u003d getPlanFromIndexNum(i);","lastModifiedDate":"2022-03-27"},{"lineNumber":511,"author":{"gitId":"TianaiYan"},"content":"            isWorkoutInPlan \u003d checkWorkoutInPlan(workoutToCheck, planObject);","lastModifiedDate":"2022-03-27"},{"lineNumber":512,"author":{"gitId":"TianaiYan"},"content":"            if (isWorkoutInPlan) {","lastModifiedDate":"2022-03-27"},{"lineNumber":513,"author":{"gitId":"TianaiYan"},"content":"                planIndexWithTargetWorkout.add(i);","lastModifiedDate":"2022-03-31"},{"lineNumber":514,"author":{"gitId":"TianaiYan"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":515,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":516,"author":{"gitId":"TianaiYan"},"content":"        return planIndexWithTargetWorkout;","lastModifiedDate":"2022-03-31"},{"lineNumber":517,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":518,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":519,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-04-02"},{"lineNumber":520,"author":{"gitId":"TianaiYan"},"content":"     * Deletes the plans which contains the deleted workouts.","lastModifiedDate":"2022-04-02"},{"lineNumber":521,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-04-02"},{"lineNumber":522,"author":{"gitId":"TianaiYan"},"content":"     * @param deletedWorkoutDetail The deleted workout.","lastModifiedDate":"2022-04-02"},{"lineNumber":523,"author":{"gitId":"TianaiYan"},"content":"     * @throws ArrayIndexOutOfBoundsException If index .","lastModifiedDate":"2022-04-02"},{"lineNumber":524,"author":{"gitId":"TianaiYan"},"content":"     * @throws InvalidPlanException For operations which involves index checking.","lastModifiedDate":"2022-04-02"},{"lineNumber":525,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-04-02"},{"lineNumber":526,"author":{"gitId":"TianaiYan"},"content":"    public void deletePlanContainsDeletedWorkout(String deletedWorkoutDetail) throws InvalidPlanException {","lastModifiedDate":"2022-04-02"},{"lineNumber":527,"author":{"gitId":"TianaiYan"},"content":"        ArrayList\u003cInteger\u003e planIndexWithDeletedWorkout \u003d findPlanContainsTargetWorkout(deletedWorkoutDetail);","lastModifiedDate":"2022-04-02"},{"lineNumber":528,"author":{"gitId":"TianaiYan"},"content":"        if (planIndexWithDeletedWorkout.size() \u003c\u003d 0) {","lastModifiedDate":"2022-04-02"},{"lineNumber":529,"author":{"gitId":"TianaiYan"},"content":"            return;","lastModifiedDate":"2022-04-02"},{"lineNumber":530,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-04-02"},{"lineNumber":531,"author":{"gitId":"TianaiYan"},"content":"        if (planIndexWithDeletedWorkout.size() \u003e 0) {","lastModifiedDate":"2022-04-02"},{"lineNumber":532,"author":{"gitId":"TianaiYan"},"content":"            System.out.println(deletedWorkoutDetail + \" is found in:\\n\");","lastModifiedDate":"2022-04-02"},{"lineNumber":533,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-04-02"},{"lineNumber":534,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":535,"author":{"gitId":"TianaiYan"},"content":"        for (int planNumber : planIndexWithDeletedWorkout) {","lastModifiedDate":"2022-04-02"},{"lineNumber":536,"author":{"gitId":"TianaiYan"},"content":"            assert (checkPlanIndexIsWithinRange(planNumber)) : \"Plan number is out of range.\";","lastModifiedDate":"2022-04-02"},{"lineNumber":537,"author":{"gitId":"TianaiYan"},"content":"            System.out.println(\"\\t\" + getPlansDisplayList().get(planNumber - 1));","lastModifiedDate":"2022-04-10"},{"lineNumber":538,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-04-02"},{"lineNumber":539,"author":{"gitId":"TianaiYan"},"content":"        int totalNumberOfPlanToDelete \u003d planIndexWithDeletedWorkout.size();","lastModifiedDate":"2022-04-02"},{"lineNumber":540,"author":{"gitId":"TianaiYan"},"content":"        for (int i \u003d 0; i \u003c totalNumberOfPlanToDelete; i++) {","lastModifiedDate":"2022-04-02"},{"lineNumber":541,"author":{"gitId":"TianaiYan"},"content":"            if (i \u003d\u003d 0) {","lastModifiedDate":"2022-04-02"},{"lineNumber":542,"author":{"gitId":"TianaiYan"},"content":"                System.out.println(\"\\nThe following plan has been removed:\\n\");","lastModifiedDate":"2022-04-02"},{"lineNumber":543,"author":{"gitId":"TianaiYan"},"content":"            }","lastModifiedDate":"2022-04-02"},{"lineNumber":544,"author":{"gitId":"TianaiYan"},"content":"            System.out.println((i + 1) + \". \" + getPlansDisplayList().get(planIndexWithDeletedWorkout.get(i) - i - 1));","lastModifiedDate":"2022-04-02"},{"lineNumber":545,"author":{"gitId":"TianaiYan"},"content":"            deletePlan(Integer.toString(planIndexWithDeletedWorkout.get(i) - i));","lastModifiedDate":"2022-04-02"},{"lineNumber":546,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-04-02"},{"lineNumber":547,"author":{"gitId":"TianaiYan"},"content":"        System.out.println();","lastModifiedDate":"2022-04-07"},{"lineNumber":548,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-04-02"},{"lineNumber":549,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":550,"author":{"gitId":"a1021492980"},"content":"    public void updatePlanContainsUpdatedWorkout(String oldWorkoutToCheck, Workout updatedWorkout) throws","lastModifiedDate":"2022-04-06"},{"lineNumber":551,"author":{"gitId":"TianaiYan"},"content":"            InvalidPlanException {","lastModifiedDate":"2022-03-29"},{"lineNumber":552,"author":{"gitId":"a1021492980"},"content":"        String updatedWorkoutToCheck \u003d updatedWorkout.toString();","lastModifiedDate":"2022-04-06"},{"lineNumber":553,"author":{"gitId":"a1021492980"},"content":"        ArrayList\u003cInteger\u003e planWithUpdatedWorkout","lastModifiedDate":"2022-04-06"},{"lineNumber":554,"author":{"gitId":"a1021492980"},"content":"                \u003d findPlanContainsTargetWorkout(oldWorkoutToCheck, updatedWorkoutToCheck);","lastModifiedDate":"2022-04-06"},{"lineNumber":555,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":556,"author":{"gitId":"TianaiYan"},"content":"        if (planWithUpdatedWorkout.size() \u003c\u003d 0) {","lastModifiedDate":"2022-03-29"},{"lineNumber":557,"author":{"gitId":"TianaiYan"},"content":"            return;","lastModifiedDate":"2022-03-29"},{"lineNumber":558,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":559,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":560,"author":{"gitId":"TianaiYan"},"content":"        if (planWithUpdatedWorkout.size() \u003e 0) {","lastModifiedDate":"2022-03-29"},{"lineNumber":561,"author":{"gitId":"a1021492980"},"content":"            System.out.println(oldWorkoutToCheck + \" is found in:\\n\");","lastModifiedDate":"2022-04-06"},{"lineNumber":562,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":563,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":564,"author":{"gitId":"TianaiYan"},"content":"        for (int planNumber : planWithUpdatedWorkout) {","lastModifiedDate":"2022-03-29"},{"lineNumber":565,"author":{"gitId":"TianaiYan"},"content":"            assert (checkPlanIndexIsWithinRange(planNumber)) : \"Plan number is out of range.\";","lastModifiedDate":"2022-03-29"},{"lineNumber":566,"author":{"gitId":"TianaiYan"},"content":"            System.out.println(\"\\t\" + getPlansDisplayList().get(planNumber - 1));","lastModifiedDate":"2022-03-29"},{"lineNumber":567,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":568,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":569,"author":{"gitId":"TianaiYan"},"content":"        int totalNumberOfPlanToUpdate \u003d planWithUpdatedWorkout.size();","lastModifiedDate":"2022-03-29"},{"lineNumber":570,"author":{"gitId":"TianaiYan"},"content":"        for (int i \u003d 0; i \u003c totalNumberOfPlanToUpdate; i++) {","lastModifiedDate":"2022-03-29"},{"lineNumber":571,"author":{"gitId":"TianaiYan"},"content":"            if (i \u003d\u003d 0) {","lastModifiedDate":"2022-03-29"},{"lineNumber":572,"author":{"gitId":"TianaiYan"},"content":"                System.out.println(\"\\nThe following plan has been updated:\\n\");","lastModifiedDate":"2022-03-29"},{"lineNumber":573,"author":{"gitId":"TianaiYan"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":574,"author":{"gitId":"TianaiYan"},"content":"            System.out.println((i + 1) + \". \" + getPlansDisplayList().get(planWithUpdatedWorkout.get(i) - 1));","lastModifiedDate":"2022-03-29"},{"lineNumber":575,"author":{"gitId":"a1021492980"},"content":"            updatePlanDetails((planWithUpdatedWorkout.get(i)), oldWorkoutToCheck, updatedWorkout);","lastModifiedDate":"2022-04-06"},{"lineNumber":576,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":577,"author":{"gitId":"TianaiYan"},"content":"        System.out.println();","lastModifiedDate":"2022-04-07"},{"lineNumber":578,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":579,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":580,"author":{"gitId":"a1021492980"},"content":"    public void updatePlanDetails(int planIndexToUpdate, String oldWorkoutToCheck, Workout updatedWorkout) throws","lastModifiedDate":"2022-04-06"},{"lineNumber":581,"author":{"gitId":"TianaiYan"},"content":"            NumberFormatException, InvalidPlanException {","lastModifiedDate":"2022-03-29"},{"lineNumber":582,"author":{"gitId":"TianaiYan"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-29"},{"lineNumber":583,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":584,"author":{"gitId":"TianaiYan"},"content":"        boolean isPlanIndexToUpdateValid \u003d checkPlanIndexIsWithinRange(planIndexToUpdate);","lastModifiedDate":"2022-03-29"},{"lineNumber":585,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":586,"author":{"gitId":"TianaiYan"},"content":"        if (!isPlanIndexToUpdateValid) {","lastModifiedDate":"2022-03-29"},{"lineNumber":587,"author":{"gitId":"TianaiYan"},"content":"            throw new InvalidPlanException(className, InvalidPlanException.PLAN_INDEX_OUT_OF_RANGE);","lastModifiedDate":"2022-03-29"},{"lineNumber":588,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":589,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":590,"author":{"gitId":"TianaiYan"},"content":"        Plan planToUpdate \u003d getPlanFromIndexNum(planIndexToUpdate);","lastModifiedDate":"2022-03-29"},{"lineNumber":591,"author":{"gitId":"TianaiYan"},"content":"        ArrayList\u003cWorkout\u003e workoutsInPlanList \u003d planToUpdate.getWorkoutsInPlanList();","lastModifiedDate":"2022-03-29"},{"lineNumber":592,"author":{"gitId":"TianaiYan"},"content":"        int totalNumberOfWorkoutsInPlan \u003d workoutsInPlanList.size();","lastModifiedDate":"2022-03-29"},{"lineNumber":593,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":594,"author":{"gitId":"TianaiYan"},"content":"        for (int i \u003d 0; i \u003c totalNumberOfWorkoutsInPlan; i++) {","lastModifiedDate":"2022-03-29"},{"lineNumber":595,"author":{"gitId":"a1021492980"},"content":"            if (oldWorkoutToCheck.equals(workoutsInPlanList.get(i).toString())) {","lastModifiedDate":"2022-04-06"},{"lineNumber":596,"author":{"gitId":"TianaiYan"},"content":"                workoutsInPlanList.set(i, updatedWorkout);","lastModifiedDate":"2022-03-29"},{"lineNumber":597,"author":{"gitId":"TianaiYan"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":598,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":599,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":600,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"Musfirahe0556596":303,"alanlowzies":23,"TianaiYan":191,"a1021492980":83}},{"path":"src/main/java/data/schedule/Day.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package data.schedule;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"import commands.InvalidCommandException;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"import data.plans.Plan;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"import static data.schedule.InvalidScheduleException.INVALID_DAY;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":" * This class represents a Day, which is a day scheduled with a specified plan.","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"public class Day {","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"    private int dayNumber;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"    private Plan planForThisDay;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"    public Day(int dayNumber, Plan planForThisDay) {","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"        this.dayNumber \u003d dayNumber;","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"        this.planForThisDay \u003d planForThisDay;","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"    public Plan getPlanForThisDay() {","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"        return planForThisDay;","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"    public int getDayNumber() {","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"        return dayNumber;","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"    public void setNewPlanForThisDay(Day day, Plan newPlan) {","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"        day.planForThisDay \u003d newPlan;","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"    public String toString() {","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"emilysim00"},"content":"        int dayNumber \u003d getDayNumber();","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"        String day \u003d \"\";","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"emilysim00"},"content":"        try {","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"emilysim00"},"content":"            switch (dayNumber) {","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"emilysim00"},"content":"            case 1:","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"                day \u003d \"Monday\";","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"emilysim00"},"content":"            case 2:","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"emilysim00"},"content":"                day \u003d \"Tuesday\";","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"emilysim00"},"content":"            case 3:","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"emilysim00"},"content":"                day \u003d \"Wednesday\";","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"emilysim00"},"content":"            case 4:","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"emilysim00"},"content":"                day \u003d \"Thursday\";","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"emilysim00"},"content":"            case 5:","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"emilysim00"},"content":"                day \u003d \"Friday\";","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"emilysim00"},"content":"            case 6:","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"emilysim00"},"content":"                day \u003d \"Saturday\";","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"emilysim00"},"content":"            case 7:","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"emilysim00"},"content":"                day \u003d \"Sunday\";","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"emilysim00"},"content":"            default:","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"emilysim00"},"content":"                String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"emilysim00"},"content":"                throw new InvalidScheduleException(className, INVALID_DAY);","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"emilysim00"},"content":"            } ","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"emilysim00"},"content":"        } catch (InvalidScheduleException e) {","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"emilysim00"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"emilysim00"},"content":"        String displayString \u003d day + \" -- \" + getPlanForThisDay().getPlanName();","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"emilysim00"},"content":"        return displayString;","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"emilysim00":62,"alanlowzies":8}},{"path":"src/main/java/data/schedule/DayList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package data.schedule;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"import data.plans.Plan;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"import werkit.Parser;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":"import static data.schedule.InvalidScheduleException.INVALID_DAY;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"public class DayList {","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"    private static final int FIXED_LENGTH \u003d 30;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"    public static final int NUMBER_OF_SCHEDULE_DAYS \u003d 7;","lastModifiedDate":"2022-04-02"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"    private PlanList planList;","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"    private String[] scheduleList \u003d new String[NUMBER_OF_SCHEDULE_DAYS];","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"    private String[] schedulePrintList \u003d new String[NUMBER_OF_SCHEDULE_DAYS];","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"    private Day[] dayList \u003d new Day[NUMBER_OF_SCHEDULE_DAYS]; //store all created day object","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"    private static Logger logger \u003d Logger.getLogger(Parser.class.getName());","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"    public DayList(PlanList planList) {","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"        this.planList \u003d planList;","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"    public String[] getScheduleList() {","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"        return scheduleList;","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"    public Day[] getDayList() {","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"        return this.dayList;","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"emilysim00"},"content":"     * Add/Update a plan to a particular day of the week. User specify the plan (plan number) that they","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"emilysim00"},"content":"     * want to add to a particular day (day number). A day object will be created if the day object does not exist,","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"emilysim00"},"content":"     * otherwise the day object will be updated to reflect the latest changes.","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"emilysim00"},"content":"     * @param userArgument Day number and plan number to be added into the schedule.","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"emilysim00"},"content":"     * @return newDay Day object created with the day number and plan name specified by user.","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"emilysim00"},"content":"     * @throws InvalidScheduleException If the schedule parameters specified in userArgument is invalid.","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"emilysim00"},"content":"    public Day updateDay(String userArgument) throws InvalidScheduleException {","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"emilysim00"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"emilysim00"},"content":"        String[] userArgumentArray \u003d userArgument.split(\" \", -1);","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"emilysim00"},"content":"        if (userArgumentArray.length \u003e 2) {","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"emilysim00"},"content":"            logger.log(Level.WARNING, \"User entered more parameters than expected.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"emilysim00"},"content":"            throw new InvalidScheduleException(className, InvalidScheduleException.TOO_MANY_ARGUMENTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"emilysim00"},"content":"        int dayNumber \u003d Integer.parseInt(userArgumentArray[0]);","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"emilysim00"},"content":"        int planNumber \u003d Integer.parseInt(userArgumentArray[1]);","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"emilysim00"},"content":"        if (!isDayValid(dayNumber)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"emilysim00"},"content":"            logger.log(Level.WARNING, \"User entered an invalid day number.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"emilysim00"},"content":"            throw new InvalidScheduleException(className, InvalidScheduleException.DAY_NUMBER_OUT_OF_RANGE);","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"emilysim00"},"content":"        if (!isPlanValid(planNumber)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"emilysim00"},"content":"            logger.log(Level.WARNING, \"User entered an invalid plan number.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"emilysim00"},"content":"            throw new InvalidScheduleException(className, InvalidScheduleException.INVALID_PLAN);","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"emilysim00"},"content":"        assert (isPlanValid(planNumber) \u0026\u0026 isDayValid(dayNumber));","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"emilysim00"},"content":"        String planToAddKey \u003d planList.getPlansDisplayList().get(planNumber - 1);","lastModifiedDate":"2022-04-04"},{"lineNumber":63,"author":{"gitId":"emilysim00"},"content":"        Plan planToAdd \u003d planList.getPlanFromKey(planToAddKey);","lastModifiedDate":"2022-04-04"},{"lineNumber":64,"author":{"gitId":"emilysim00"},"content":"        Day newDay;","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"emilysim00"},"content":"        if (scheduleList[dayNumber - 1] \u003d\u003d null) {","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"emilysim00"},"content":"            newDay \u003d new Day(dayNumber, planToAdd);","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"emilysim00"},"content":"            dayList[dayNumber - 1] \u003d newDay;","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"emilysim00"},"content":"        } else {","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"emilysim00"},"content":"            newDay \u003d dayList[dayNumber - 1];","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"emilysim00"},"content":"            newDay.setNewPlanForThisDay(newDay, planToAdd);","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"emilysim00"},"content":"        scheduleList[dayNumber - 1] \u003d planToAdd.getPlanName();","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"emilysim00"},"content":"        return newDay;","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"emilysim00"},"content":"     * Checks if the provided day number is valid. A day number is valid if it falls","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"emilysim00"},"content":"     * between 1 and 7. Day number 1 refers to Monday, Day number 2 refers to Tuesday","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"emilysim00"},"content":"     * and so on till Day number 7 referring to Sunday, the last day of the week.","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"emilysim00"},"content":"     * @param dayNumber The day number entered by user to check for validity.","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"emilysim00"},"content":"     * @return True if the day number falls between 1 to 7.","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"emilysim00"},"content":"     *         Otherwise, returns false.","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"emilysim00"},"content":"    public Boolean isDayValid(int dayNumber) {","lastModifiedDate":"2022-03-21"},{"lineNumber":86,"author":{"gitId":"emilysim00"},"content":"        if (dayNumber \u003c 1 || dayNumber \u003e NUMBER_OF_SCHEDULE_DAYS) {","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"emilysim00"},"content":"            return false;","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"emilysim00"},"content":"        return true;","lastModifiedDate":"2022-03-21"},{"lineNumber":90,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":91,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":92,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"emilysim00"},"content":"     * Checks if the provided plan number is valid. A plan number is valid if it falls between","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"emilysim00"},"content":"     * the index range of the plan list.","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"emilysim00"},"content":"     * @param planNumber The plan number entered by user to check for validity.","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"emilysim00"},"content":"     * @return True if the plan number specified exist in the plans list.","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"emilysim00"},"content":"     *      *         Otherwise, returns false.","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"emilysim00"},"content":"    public Boolean isPlanValid(int planNumber) {","lastModifiedDate":"2022-03-21"},{"lineNumber":101,"author":{"gitId":"emilysim00"},"content":"        if (planNumber \u003c 1 || planNumber \u003e planList.getPlansDisplayList().size()) {","lastModifiedDate":"2022-03-21"},{"lineNumber":102,"author":{"gitId":"emilysim00"},"content":"            return false;","lastModifiedDate":"2022-03-21"},{"lineNumber":103,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":104,"author":{"gitId":"emilysim00"},"content":"        return true;","lastModifiedDate":"2022-03-21"},{"lineNumber":105,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":106,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"emilysim00"},"content":"     * Print out all the plans scheduled for the week. One week consists of 7 days.","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"emilysim00"},"content":"     * If no plan is scheduled for any of the day, it is considered as rest day.","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"emilysim00"},"content":"    public void printSchedule() {","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"emilysim00"},"content":"        for (int i \u003d 0; i \u003c NUMBER_OF_SCHEDULE_DAYS; i +\u003d 1) {","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"emilysim00"},"content":"            if (scheduleList[i] \u003d\u003d null) {","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"emilysim00"},"content":"                schedulePrintList[i] \u003d \"rest day\";","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"emilysim00"},"content":"            } else {","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"emilysim00"},"content":"                schedulePrintList[i] \u003d scheduleList[i];","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"emilysim00"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"emilysim00"},"content":"            schedulePrintList[i] \u003d padWithSpaces(schedulePrintList[i]);","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"emilysim00"},"content":"        String header \u003d String.format(\"%8s %7s %20s\", \"Day\", \"|\", \"Plan Name\");","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"emilysim00"},"content":"        String info \u003d \"\";","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"emilysim00"},"content":"        for (int i \u003d 1; i \u003c\u003d NUMBER_OF_SCHEDULE_DAYS; i++) {","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"emilysim00"},"content":"            info +\u003d String.format(\"%12s %3s %35s\", covertDayNumberToDay(i), \"|\", schedulePrintList[i - 1]) + \"\\n\";","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"emilysim00"},"content":"        System.out.println(\"\\n                         WORKOUT SCHEDULE\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"emilysim00"},"content":"                + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"emilysim00"},"content":"                + header + \"\\n\" +  \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"emilysim00"},"content":"                + info","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"emilysim00"},"content":"        );","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":135,"author":{"gitId":"emilysim00"},"content":"     * Pad the plan name with empty spaces at the front of the plan name as well as the back of the plan name.","lastModifiedDate":"2022-03-24"},{"lineNumber":136,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":137,"author":{"gitId":"emilysim00"},"content":"     * @param planForDay Plan name scheduled for a particular day.","lastModifiedDate":"2022-03-24"},{"lineNumber":138,"author":{"gitId":"emilysim00"},"content":"     * @return planForDayWith Plan name scheduled for a particular day with added empty spaces at the front and back.","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":140,"author":{"gitId":"emilysim00"},"content":"    public String padWithSpaces(String planForDay) {","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"emilysim00"},"content":"        String prePadded \u003d \"\";","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"emilysim00"},"content":"        String postPadded \u003d \"\";","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"emilysim00"},"content":"        int numberOfSpacesToBePadFront \u003d (FIXED_LENGTH - planForDay.length()) / 2;","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"emilysim00"},"content":"        int numberOfSpacesToBePadBack \u003d FIXED_LENGTH - prePadded.length() - planForDay.length();","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"emilysim00"},"content":"        for (int i \u003d 0; i \u003c numberOfSpacesToBePadFront; i++) {","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"emilysim00"},"content":"            prePadded +\u003d \" \";","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"emilysim00"},"content":"        for (int i \u003d 0; i \u003c numberOfSpacesToBePadBack; i++) {","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"emilysim00"},"content":"            postPadded +\u003d \" \";","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"emilysim00"},"content":"        String planForDayWithPadding \u003d prePadded + planForDay + postPadded;","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"emilysim00"},"content":"        return planForDayWithPadding;","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":157,"author":{"gitId":"emilysim00"},"content":"     * Clear the plan for a specific day. The plan scheduled for the day will be cleared/reset.","lastModifiedDate":"2022-03-24"},{"lineNumber":158,"author":{"gitId":"emilysim00"},"content":"     * When a plan is clear/reset, the day will set to be a rest day.","lastModifiedDate":"2022-03-24"},{"lineNumber":159,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":160,"author":{"gitId":"emilysim00"},"content":"     * @param userArgument Day number to be reset/cleared.","lastModifiedDate":"2022-03-24"},{"lineNumber":161,"author":{"gitId":"emilysim00"},"content":"     * @return dayName Name of the day.","lastModifiedDate":"2022-04-10"},{"lineNumber":162,"author":{"gitId":"emilysim00"},"content":"     * @throws InvalidScheduleException If the day number specified in userArgument is invalid.","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":164,"author":{"gitId":"emilysim00"},"content":"    public String clearDayPlan(String userArgument) throws InvalidScheduleException {","lastModifiedDate":"2022-04-06"},{"lineNumber":165,"author":{"gitId":"emilysim00"},"content":"        int dayNumber \u003d Integer.parseInt(userArgument);","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"emilysim00"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-22"},{"lineNumber":167,"author":{"gitId":"emilysim00"},"content":"        if (!isDayValid(dayNumber)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"emilysim00"},"content":"            logger.log(Level.WARNING, \"User entered an invalid day number.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"emilysim00"},"content":"            throw new InvalidScheduleException(className, InvalidScheduleException.DAY_NUMBER_OUT_OF_RANGE);","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"emilysim00"},"content":"        if (dayList[dayNumber - 1] \u003d\u003d null) {","lastModifiedDate":"2022-04-04"},{"lineNumber":172,"author":{"gitId":"emilysim00"},"content":"            return \" \";","lastModifiedDate":"2022-04-06"},{"lineNumber":173,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":174,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":175,"author":{"gitId":"emilysim00"},"content":"        clearPlan(dayNumber - 1);","lastModifiedDate":"2022-04-04"},{"lineNumber":176,"author":{"gitId":"emilysim00"},"content":"        String dayName \u003d covertDayNumberToDay(dayNumber);","lastModifiedDate":"2022-04-06"},{"lineNumber":177,"author":{"gitId":"emilysim00"},"content":"        return dayName;","lastModifiedDate":"2022-04-06"},{"lineNumber":178,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":179,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":181,"author":{"gitId":"emilysim00"},"content":"     * Clear all the plans schdeule for the week. Reset the schedule list to default.","lastModifiedDate":"2022-03-24"},{"lineNumber":182,"author":{"gitId":"emilysim00"},"content":"     * All plans for the week will be set as rest day.","lastModifiedDate":"2022-03-24"},{"lineNumber":183,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":184,"author":{"gitId":"emilysim00"},"content":"    public void clearAllSchedule() {","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"emilysim00"},"content":"        for (int i \u003d 0; i \u003c NUMBER_OF_SCHEDULE_DAYS; i +\u003d 1) {","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"emilysim00"},"content":"            clearPlan(i);","lastModifiedDate":"2022-04-04"},{"lineNumber":187,"author":{"gitId":"emilysim00"},"content":"            assert (scheduleList[i] \u003d\u003d null);","lastModifiedDate":"2022-03-23"},{"lineNumber":188,"author":{"gitId":"emilysim00"},"content":"            assert (dayList[i] \u003d\u003d null);","lastModifiedDate":"2022-03-23"},{"lineNumber":189,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":193,"author":{"gitId":"emilysim00"},"content":"     * Remove plan on the stated day.","lastModifiedDate":"2022-04-04"},{"lineNumber":194,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-04-10"},{"lineNumber":195,"author":{"gitId":"emilysim00"},"content":"     * @param dayNumber day number to be cleared.","lastModifiedDate":"2022-04-10"},{"lineNumber":196,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-04-04"},{"lineNumber":197,"author":{"gitId":"emilysim00"},"content":"    public void clearPlan(int dayNumber) {","lastModifiedDate":"2022-04-04"},{"lineNumber":198,"author":{"gitId":"emilysim00"},"content":"        scheduleList[dayNumber] \u003d null;","lastModifiedDate":"2022-04-04"},{"lineNumber":199,"author":{"gitId":"emilysim00"},"content":"        dayList[dayNumber] \u003d null;","lastModifiedDate":"2022-04-04"},{"lineNumber":200,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":201,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":202,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-04-04"},{"lineNumber":203,"author":{"gitId":"emilysim00"},"content":"     * Covert the day number to its english meaning. For example,","lastModifiedDate":"2022-03-24"},{"lineNumber":204,"author":{"gitId":"emilysim00"},"content":"     * day number 1 will be converted to Monday,","lastModifiedDate":"2022-03-24"},{"lineNumber":205,"author":{"gitId":"emilysim00"},"content":"     * day number 2 will be converted to Tuesday,","lastModifiedDate":"2022-03-24"},{"lineNumber":206,"author":{"gitId":"emilysim00"},"content":"     * and so on till day number 7 which will be converted to Sunday.","lastModifiedDate":"2022-03-24"},{"lineNumber":207,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":208,"author":{"gitId":"emilysim00"},"content":"     * @param dayNumber Day number to be converted to its String equivalent.","lastModifiedDate":"2022-03-24"},{"lineNumber":209,"author":{"gitId":"emilysim00"},"content":"     * @return day English meaning of the day number specified.","lastModifiedDate":"2022-03-24"},{"lineNumber":210,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":211,"author":{"gitId":"emilysim00"},"content":"    public String covertDayNumberToDay(int dayNumber) {","lastModifiedDate":"2022-03-22"},{"lineNumber":212,"author":{"gitId":"emilysim00"},"content":"        String day \u003d \"\";","lastModifiedDate":"2022-03-22"},{"lineNumber":213,"author":{"gitId":"emilysim00"},"content":"        assert (dayNumber \u003e 0 \u0026\u0026 dayNumber \u003c\u003d NUMBER_OF_SCHEDULE_DAYS);","lastModifiedDate":"2022-03-23"},{"lineNumber":214,"author":{"gitId":"emilysim00"},"content":"        try {","lastModifiedDate":"2022-03-22"},{"lineNumber":215,"author":{"gitId":"emilysim00"},"content":"            switch (dayNumber) {","lastModifiedDate":"2022-03-22"},{"lineNumber":216,"author":{"gitId":"emilysim00"},"content":"            case 1:","lastModifiedDate":"2022-03-22"},{"lineNumber":217,"author":{"gitId":"emilysim00"},"content":"                day \u003d \"Monday\";","lastModifiedDate":"2022-03-22"},{"lineNumber":218,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-22"},{"lineNumber":219,"author":{"gitId":"emilysim00"},"content":"            case 2:","lastModifiedDate":"2022-03-22"},{"lineNumber":220,"author":{"gitId":"emilysim00"},"content":"                day \u003d \"Tuesday\";","lastModifiedDate":"2022-03-22"},{"lineNumber":221,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-22"},{"lineNumber":222,"author":{"gitId":"emilysim00"},"content":"            case 3:","lastModifiedDate":"2022-03-22"},{"lineNumber":223,"author":{"gitId":"emilysim00"},"content":"                day \u003d \"Wednesday\";","lastModifiedDate":"2022-03-22"},{"lineNumber":224,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-22"},{"lineNumber":225,"author":{"gitId":"emilysim00"},"content":"            case 4:","lastModifiedDate":"2022-03-22"},{"lineNumber":226,"author":{"gitId":"emilysim00"},"content":"                day \u003d \"Thursday\";","lastModifiedDate":"2022-03-22"},{"lineNumber":227,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-22"},{"lineNumber":228,"author":{"gitId":"emilysim00"},"content":"            case 5:","lastModifiedDate":"2022-03-22"},{"lineNumber":229,"author":{"gitId":"emilysim00"},"content":"                day \u003d \"Friday\";","lastModifiedDate":"2022-03-22"},{"lineNumber":230,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-22"},{"lineNumber":231,"author":{"gitId":"emilysim00"},"content":"            case 6:","lastModifiedDate":"2022-03-22"},{"lineNumber":232,"author":{"gitId":"emilysim00"},"content":"                day \u003d \"Saturday\";","lastModifiedDate":"2022-03-22"},{"lineNumber":233,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-22"},{"lineNumber":234,"author":{"gitId":"emilysim00"},"content":"            case 7:","lastModifiedDate":"2022-03-22"},{"lineNumber":235,"author":{"gitId":"emilysim00"},"content":"                day \u003d \"Sunday\";","lastModifiedDate":"2022-03-22"},{"lineNumber":236,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-22"},{"lineNumber":237,"author":{"gitId":"emilysim00"},"content":"            default:","lastModifiedDate":"2022-03-22"},{"lineNumber":238,"author":{"gitId":"emilysim00"},"content":"                String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-22"},{"lineNumber":239,"author":{"gitId":"emilysim00"},"content":"                logger.log(Level.WARNING, \"User entered an invalid day.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":240,"author":{"gitId":"emilysim00"},"content":"                throw new InvalidScheduleException(className, INVALID_DAY);","lastModifiedDate":"2022-03-22"},{"lineNumber":241,"author":{"gitId":"emilysim00"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":242,"author":{"gitId":"emilysim00"},"content":"        } catch (InvalidScheduleException e) {","lastModifiedDate":"2022-03-22"},{"lineNumber":243,"author":{"gitId":"emilysim00"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-22"},{"lineNumber":244,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":245,"author":{"gitId":"emilysim00"},"content":"        return day;","lastModifiedDate":"2022-03-22"},{"lineNumber":246,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":247,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":248,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-04-02"},{"lineNumber":249,"author":{"gitId":"a1021492980"},"content":"     * Returns array of plans with non-null values.","lastModifiedDate":"2022-04-02"},{"lineNumber":250,"author":{"gitId":"a1021492980"},"content":"     * @return  array of plans with non-null values.","lastModifiedDate":"2022-04-02"},{"lineNumber":251,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-04-02"},{"lineNumber":252,"author":{"gitId":"a1021492980"},"content":"    public String[] getPrintSchedule() {","lastModifiedDate":"2022-04-02"},{"lineNumber":253,"author":{"gitId":"a1021492980"},"content":"        String[] weeklySchedule \u003d new String[NUMBER_OF_SCHEDULE_DAYS];","lastModifiedDate":"2022-04-02"},{"lineNumber":254,"author":{"gitId":"a1021492980"},"content":"        for (int i \u003d 0; i \u003c NUMBER_OF_SCHEDULE_DAYS; i++) {","lastModifiedDate":"2022-04-02"},{"lineNumber":255,"author":{"gitId":"a1021492980"},"content":"            if (getScheduleList()[i] \u003d\u003d null) {","lastModifiedDate":"2022-04-02"},{"lineNumber":256,"author":{"gitId":"a1021492980"},"content":"                weeklySchedule[i] \u003d \"rest day\";","lastModifiedDate":"2022-04-02"},{"lineNumber":257,"author":{"gitId":"a1021492980"},"content":"            } else {","lastModifiedDate":"2022-04-02"},{"lineNumber":258,"author":{"gitId":"a1021492980"},"content":"                weeklySchedule[i] \u003d getScheduleList()[i];","lastModifiedDate":"2022-04-02"},{"lineNumber":259,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-04-02"},{"lineNumber":260,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-04-02"},{"lineNumber":261,"author":{"gitId":"a1021492980"},"content":"        return weeklySchedule;","lastModifiedDate":"2022-04-02"},{"lineNumber":262,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-02"},{"lineNumber":263,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"emilysim00":234,"alanlowzies":12,"a1021492980":17}},{"path":"src/main/java/data/schedule/InvalidScheduleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"package data.schedule;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"public class InvalidScheduleException extends Exception {","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"    // Pre-defined error messages","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"    public static final String DAY_NUMBER_OUT_OF_RANGE \u003d \"Uh oh, the day number specified is invalid.\\n\"","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"            + \"Please make sure it is between 1-7.\";","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"    public static final String INVALID_PLAN \u003d \"Uh oh, the plan number entered is invalid.\\n\"","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"            + \"Please specify a valid plan number.\";","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":"    public static final String INVALID_DAY \u003d \"Uh oh, the day number entered is invalid.\\n\";","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"    public static final String INVALID_INPUT \u003d \"Uh oh, user argument supplied is invalid.\\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":12,"author":{"gitId":"emilysim00"},"content":"            + \"Please try again. Alternatively, type \u0027help\u0027 if you need\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"            + \"more information on the commands.\";","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"    public static final String INDEX_OUT_OF_BOUND \u003d \"Uh oh, it seems like too few arguments were entered.\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"            + \"Please try again. Alternatively, type \u0027help\u0027 if you need\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"            + \"more information on the commands.\";","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"    public static final String TOO_MANY_ARGUMENTS \u003d \"Uh oh, it seems like too many arguments were entered.\\n\"","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"            + \"Please try again. Alternatively, type \u0027help\u0027 if you need\\n\"","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"            + \"more information on the commands.\";","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"    private String throwingClass;","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"     * Constructs an InvalidPlanException with the class name that this exception instance was","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"     * thrown from and the accompanying error message.","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"     * @param throwingClass The class name that this exception instance was thrown from.","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"     * @param errorMessage  The error message given by the throwing method.","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"    public InvalidScheduleException(String throwingClass, String errorMessage) {","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"        super(errorMessage);","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"        this.throwingClass \u003d throwingClass;","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"emilysim00":35}},{"path":"src/main/java/data/workouts/InvalidWorkoutException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package data.workouts;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":" * Thrown to indicate that the Workout being created has some invalid parameters.","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"public class InvalidWorkoutException extends Exception {","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"    // Pre-defined error messages","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"    public static final String INVALID_REPS_VALUE_ERROR_MSG \u003d \"Uh oh, the number of reps specified is invalid.\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"            + \"(Needs to be a value of at least 1.)\";","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"    public static final String DUPLICATE_WORKOUT_ERROR_MSG \u003d \"Uh oh, there already is an existing workout with \"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"            + \"an identical\\nexercise name and number of repetitions.\";","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"    public static final String INVALID_WORKOUT_ERROR_MSG \u003d \"The workout given does not exist.\";","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"TianaiYan"},"content":"    public static final String INDEX_VALUE_OUT_OF_RANGE \u003d \"Uh oh, the index specified is out of range.\\n\"","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"TianaiYan"},"content":"            + \"(Index specified needs to be within the number of workouts)\";","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"    private String throwingClass;","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"     * Constructs an InvalidWorkoutException with the class name that this exception instance was","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"     * thrown from and the accompanying error message.","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"     * @param throwingClass The class name that this exception instance was thrown from.","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"     * @param errorMessage  The error message given by the throwing method.","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"    public InvalidWorkoutException(String throwingClass, String errorMessage) {","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"        super(errorMessage);","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"        this.throwingClass \u003d throwingClass;","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"emilysim00":1,"alanlowzies":25,"TianaiYan":2,"a1021492980":1}},{"path":"src/main/java/data/workouts/Workout.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package data.workouts;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":" * This class represents a Workout, which is an exercise with a specified number of repetitions.","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"public class Workout {","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"    private String exerciseName;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"    private int repetitions;","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"    public Workout(String exerciseName, int repetitions) {","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"        this.exerciseName \u003d exerciseName;","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"        this.repetitions \u003d repetitions;","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"    public String getExerciseName() {","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"        return exerciseName;","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"    public int getRepetitions() {","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"        return repetitions;","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"TianaiYan"},"content":"    public void setRepetitions(int repetitions) {","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"TianaiYan"},"content":"        this.repetitions \u003d repetitions;","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"    public String toString() {","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"        if (getRepetitions() \u003d\u003d 1) {","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"            return getExerciseName() + \" (\" + getRepetitions() + \" rep)\";","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"        } else {","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"            return getExerciseName() + \" (\" + getRepetitions() + \" reps)\";","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"alanlowzies":25,"TianaiYan":4,"a1021492980":5}},{"path":"src/main/java/data/workouts/WorkoutList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package data.workouts;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"import commands.WorkoutCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"import data.exercises.InvalidExerciseException;","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"import data.plans.InvalidPlanException;","lastModifiedDate":"2022-04-05"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":" * This class represents an instance of a list of workouts entered by the user.","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":" * It contains functionality to validate the user\u0027s inputs as well as allow the user to","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":" * create, modify, and delete workouts.","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"public class WorkoutList {","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"    private ExerciseList exerciseList;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"    private HashMap\u003cString, Workout\u003e workoutsHashMapList \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"    private ArrayList\u003cString\u003e workoutsDisplayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"    private static Logger logger \u003d Logger.getLogger(WorkoutList.class.getName());","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"     * Constructs an instance of the WorkoutList class.","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"     * @param exerciseList An instance of the ExerciseList class.","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"    public WorkoutList(ExerciseList exerciseList) {","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"        this.exerciseList \u003d exerciseList;","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"        LogHandler.linkToFileLogger(logger);","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"     * Gets the ArrayList of keys of Workout objects.","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"     * @return An ArrayList of keys of Workout objects.","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"    public ArrayList\u003cString\u003e getWorkoutsDisplayList() {","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"        return this.workoutsDisplayList;","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"     * Gets the HashMap of Workout objects.","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"     * @return A HashMap of Workout objects.","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"    public HashMap\u003cString, Workout\u003e getWorkoutsHashMapList() {","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"        return this.workoutsHashMapList;","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"     * Gets the Workout object based on its key as stored in the workoutsHashMapList.","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"     * @param workoutKey The key that maps to the desired Workout object.","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"     * @return The Workout object that is mapped to workoutKey.","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"    public Workout getWorkoutFromKey(String workoutKey) {","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"        return getWorkoutsHashMapList().get(workoutKey);","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"     * Retrieves the Workout object from the HashMap workoutsHashMapList based on the index number","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"     * of the object stored in workoutsDisplayList. This index number is the number shown in","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"     * \u0027workout /list\u0027.","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"     * @param indexNum The index number of the workout as shown in \u0027workout /list\u0027.","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"     * @return The Workout object that corresponds to the index number.","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"    public Workout getWorkoutFromIndexNum(int indexNum) {","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"        int elementNum \u003d indexNum - 1;","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"        assert (elementNum \u003e\u003d 0);","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"        String keyValue \u003d getWorkoutsDisplayList().get(elementNum);","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"        Workout workoutObject \u003d workoutsHashMapList.get(keyValue);","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"        return workoutObject;","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-04-05"},{"lineNumber":80,"author":{"gitId":"a1021492980"},"content":"     * Retrieves the index number of a workout based on its position in the workoutsDisplayList","lastModifiedDate":"2022-04-05"},{"lineNumber":81,"author":{"gitId":"a1021492980"},"content":"     * ArrayList.","lastModifiedDate":"2022-04-05"},{"lineNumber":82,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-04-05"},{"lineNumber":83,"author":{"gitId":"a1021492980"},"content":"     * @param workoutName The name of the workout whose index number this method has to find.","lastModifiedDate":"2022-04-05"},{"lineNumber":84,"author":{"gitId":"a1021492980"},"content":"     * @return An integer representing the index number the workout is listed in the workoutDisplayList","lastModifiedDate":"2022-04-05"},{"lineNumber":85,"author":{"gitId":"a1021492980"},"content":"     *         ArrayList.","lastModifiedDate":"2022-04-05"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidWorkoutException If the given workout name was not found in workoutsDisplayList.","lastModifiedDate":"2022-04-10"},{"lineNumber":87,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-04-05"},{"lineNumber":88,"author":{"gitId":"a1021492980"},"content":"    public int getIndexNumFromWorkoutName(String workoutName) throws InvalidWorkoutException {","lastModifiedDate":"2022-04-05"},{"lineNumber":89,"author":{"gitId":"a1021492980"},"content":"        for (int i \u003d 0; i \u003c getWorkoutsDisplayList().size(); i +\u003d 1) {","lastModifiedDate":"2022-04-05"},{"lineNumber":90,"author":{"gitId":"a1021492980"},"content":"            if (getWorkoutsDisplayList().get(i).equalsIgnoreCase(workoutName)) {","lastModifiedDate":"2022-04-05"},{"lineNumber":91,"author":{"gitId":"a1021492980"},"content":"                return (i + 1);","lastModifiedDate":"2022-04-05"},{"lineNumber":92,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-04-05"},{"lineNumber":93,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":94,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":95,"author":{"gitId":"a1021492980"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-04-05"},{"lineNumber":96,"author":{"gitId":"a1021492980"},"content":"        throw new InvalidWorkoutException(className, InvalidWorkoutException.INVALID_WORKOUT_ERROR_MSG);","lastModifiedDate":"2022-04-05"},{"lineNumber":97,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":98,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":99,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"alanlowzies"},"content":"     * Updates an existing Workout object in workoutsHashMapList\u0027s with a new key. This should be called when","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"alanlowzies"},"content":"     * a workout\u0027s repetition count has been updated. Once the Workout object has been reassigned to the new","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"alanlowzies"},"content":"     * key, the former key will be removed. The ArrayList workoutsDisplayList will also be updated with the","lastModifiedDate":"2022-03-17"},{"lineNumber":103,"author":{"gitId":"alanlowzies"},"content":"     * new key.","lastModifiedDate":"2022-03-17"},{"lineNumber":104,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"alanlowzies"},"content":"     * @param existingKey    The existing key that maps to the updated Workout object.","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"alanlowzies"},"content":"     * @param updatedWorkout The Workout object that has been updated.","lastModifiedDate":"2022-03-17"},{"lineNumber":107,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"alanlowzies"},"content":"    public void updateWorkoutsHashMapList(String existingKey, Workout updatedWorkout) {","lastModifiedDate":"2022-03-17"},{"lineNumber":109,"author":{"gitId":"alanlowzies"},"content":"        // Update key-value in workoutHashMapList","lastModifiedDate":"2022-03-17"},{"lineNumber":110,"author":{"gitId":"alanlowzies"},"content":"        String newKey \u003d updatedWorkout.toString();","lastModifiedDate":"2022-03-17"},{"lineNumber":111,"author":{"gitId":"alanlowzies"},"content":"        getWorkoutsHashMapList().put(newKey, updatedWorkout);","lastModifiedDate":"2022-03-17"},{"lineNumber":112,"author":{"gitId":"alanlowzies"},"content":"        getWorkoutsHashMapList().remove(existingKey);","lastModifiedDate":"2022-03-17"},{"lineNumber":113,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":114,"author":{"gitId":"alanlowzies"},"content":"        // Update key in workoutsDisplayList","lastModifiedDate":"2022-03-17"},{"lineNumber":115,"author":{"gitId":"alanlowzies"},"content":"        for (int i \u003d 0; i \u003c getWorkoutsDisplayList().size(); i +\u003d 1) {","lastModifiedDate":"2022-03-17"},{"lineNumber":116,"author":{"gitId":"alanlowzies"},"content":"            String key \u003d getWorkoutsDisplayList().get(i);","lastModifiedDate":"2022-03-17"},{"lineNumber":117,"author":{"gitId":"alanlowzies"},"content":"            if (key.equals(existingKey)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":118,"author":{"gitId":"alanlowzies"},"content":"                getWorkoutsDisplayList().set(i, newKey);","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"alanlowzies"},"content":"                break;","lastModifiedDate":"2022-03-17"},{"lineNumber":120,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":121,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":122,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":123,"author":{"gitId":"alanlowzies"},"content":"        assert (!getWorkoutsDisplayList().contains(existingKey)) : \"Old key should no longer \"","lastModifiedDate":"2022-03-17"},{"lineNumber":124,"author":{"gitId":"alanlowzies"},"content":"                + \"exist in workoutsDisplayList.\";","lastModifiedDate":"2022-03-17"},{"lineNumber":125,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":126,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":127,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"alanlowzies"},"content":"     * Parses the given user argument to identify the details of the new workout to be added.","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"alanlowzies"},"content":"     * Thereafter, the details will be checked for their validity. If all checks pass, a new","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"alanlowzies"},"content":"     * Workout object is instantiated.","lastModifiedDate":"2022-04-09"},{"lineNumber":131,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"alanlowzies"},"content":"     * @param userArgument The user\u0027s details for the new workout, including exercise name","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"alanlowzies"},"content":"     *                     and number of repetitions.","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"alanlowzies"},"content":"     * @return A Workout object that represents the new workout.","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"alanlowzies"},"content":"     * @throws ArrayIndexOutOfBoundsException If userArgument contains insufficient arguments and parsing fails.","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"alanlowzies"},"content":"     * @throws NumberFormatException          If the number of repetitions specified in userArgument is an","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"alanlowzies"},"content":"     *                                        invalid number.","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidExerciseException       If the exercise name specified in userArgument is invalid.","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidWorkoutException        If the details specified in userArgument is invalid.","lastModifiedDate":"2022-03-14"},{"lineNumber":140,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":141,"author":{"gitId":"alanlowzies"},"content":"    public Workout createNewWorkout(String userArgument) throws ArrayIndexOutOfBoundsException,","lastModifiedDate":"2022-04-09"},{"lineNumber":142,"author":{"gitId":"alanlowzies"},"content":"            NumberFormatException, InvalidExerciseException, InvalidWorkoutException {","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"alanlowzies"},"content":"        String userExerciseInput \u003d userArgument.split(WorkoutCommand.ACTION_KEYWORD_CREATE_REPS)[0].trim();","lastModifiedDate":"2022-04-09"},{"lineNumber":144,"author":{"gitId":"alanlowzies"},"content":"        String userRepsInputString \u003d userArgument.split(WorkoutCommand.ACTION_KEYWORD_CREATE_REPS)[1].trim();","lastModifiedDate":"2022-04-09"},{"lineNumber":145,"author":{"gitId":"alanlowzies"},"content":"        int userRepsInput \u003d Integer.parseInt(userRepsInputString);","lastModifiedDate":"2022-03-05"},{"lineNumber":146,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":147,"author":{"gitId":"alanlowzies"},"content":"        boolean isExerciseValid \u003d exerciseList.checkIfExerciseExists(userExerciseInput);","lastModifiedDate":"2022-03-05"},{"lineNumber":148,"author":{"gitId":"alanlowzies"},"content":"        boolean isRepsValueValid \u003d checkIfRepsValueIsValid(userRepsInput);","lastModifiedDate":"2022-03-05"},{"lineNumber":149,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":150,"author":{"gitId":"alanlowzies"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-05"},{"lineNumber":151,"author":{"gitId":"alanlowzies"},"content":"        if (!isExerciseValid) {","lastModifiedDate":"2022-03-05"},{"lineNumber":152,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.WARNING, \"Exercise name is invalid.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":153,"author":{"gitId":"alanlowzies"},"content":"            throw new InvalidExerciseException(className, InvalidExerciseException.INVALID_EXERCISE_NAME_ERROR_MSG);","lastModifiedDate":"2022-03-05"},{"lineNumber":154,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":155,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":156,"author":{"gitId":"alanlowzies"},"content":"        if (!isRepsValueValid) {","lastModifiedDate":"2022-03-05"},{"lineNumber":157,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.WARNING, \"Repetition value is invalid.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":158,"author":{"gitId":"alanlowzies"},"content":"            throw new InvalidWorkoutException(className, InvalidWorkoutException.INVALID_REPS_VALUE_ERROR_MSG);","lastModifiedDate":"2022-03-14"},{"lineNumber":159,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":160,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":161,"author":{"gitId":"alanlowzies"},"content":"        boolean hasSameExerciseNameAndReps \u003d checkForExistingWorkout(userExerciseInput, userRepsInput);","lastModifiedDate":"2022-03-14"},{"lineNumber":162,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":163,"author":{"gitId":"alanlowzies"},"content":"        if (hasSameExerciseNameAndReps) {","lastModifiedDate":"2022-03-14"},{"lineNumber":164,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.WARNING, \"Existing workout with identical exercise name and repetition \"","lastModifiedDate":"2022-03-14"},{"lineNumber":165,"author":{"gitId":"alanlowzies"},"content":"                    + \"value found in the list of workouts.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":166,"author":{"gitId":"alanlowzies"},"content":"            throw new InvalidWorkoutException(className, InvalidWorkoutException.DUPLICATE_WORKOUT_ERROR_MSG);","lastModifiedDate":"2022-03-14"},{"lineNumber":167,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":168,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":169,"author":{"gitId":"alanlowzies"},"content":"        assert (isExerciseValid \u0026\u0026 isRepsValueValid \u0026\u0026 !hasSameExerciseNameAndReps);","lastModifiedDate":"2022-03-14"},{"lineNumber":170,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":171,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout \u003d new Workout(userExerciseInput, userRepsInput);","lastModifiedDate":"2022-03-05"},{"lineNumber":172,"author":{"gitId":"alanlowzies"},"content":"        logger.log(Level.INFO, \"New workout created.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":173,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":174,"author":{"gitId":"alanlowzies"},"content":"        return newWorkout;","lastModifiedDate":"2022-04-09"},{"lineNumber":175,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":176,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":177,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":178,"author":{"gitId":"alanlowzies"},"content":"     * Adds a newly created workout object to workoutsDisplayList and workoutsHashMapList.","lastModifiedDate":"2022-04-09"},{"lineNumber":179,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-04-09"},{"lineNumber":180,"author":{"gitId":"alanlowzies"},"content":"     * @param newWorkout The new Workout object to be added to the two data structures mentioned in the method","lastModifiedDate":"2022-04-09"},{"lineNumber":181,"author":{"gitId":"alanlowzies"},"content":"     *                   description.","lastModifiedDate":"2022-04-09"},{"lineNumber":182,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":183,"author":{"gitId":"alanlowzies"},"content":"    public void addNewWorkoutToLists(Workout newWorkout) {","lastModifiedDate":"2022-04-09"},{"lineNumber":184,"author":{"gitId":"alanlowzies"},"content":"        String newWorkoutKey \u003d newWorkout.toString();","lastModifiedDate":"2022-03-17"},{"lineNumber":185,"author":{"gitId":"alanlowzies"},"content":"        workoutsHashMapList.put(newWorkoutKey, newWorkout);","lastModifiedDate":"2022-03-17"},{"lineNumber":186,"author":{"gitId":"alanlowzies"},"content":"        workoutsDisplayList.add(newWorkoutKey);","lastModifiedDate":"2022-03-17"},{"lineNumber":187,"author":{"gitId":"alanlowzies"},"content":"        logger.log(Level.INFO, \"New workout added to lists in WorkoutList.\");","lastModifiedDate":"2022-04-09"},{"lineNumber":188,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":189,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":190,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":191,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":192,"author":{"gitId":"alanlowzies"},"content":"     * Checks if the number of repetitions specified is a value that is at least 1.","lastModifiedDate":"2022-03-14"},{"lineNumber":193,"author":{"gitId":"alanlowzies"},"content":"     * Workouts must be an exercise with a minimum repetition value of 1.","lastModifiedDate":"2022-03-14"},{"lineNumber":194,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":195,"author":{"gitId":"alanlowzies"},"content":"     * @param userRepsInput The repetition value to check.","lastModifiedDate":"2022-03-14"},{"lineNumber":196,"author":{"gitId":"alanlowzies"},"content":"     * @return True if the repetition value is at least 1. Otherwise, returns false.","lastModifiedDate":"2022-03-14"},{"lineNumber":197,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":198,"author":{"gitId":"alanlowzies"},"content":"    public boolean checkIfRepsValueIsValid(int userRepsInput) {","lastModifiedDate":"2022-03-05"},{"lineNumber":199,"author":{"gitId":"alanlowzies"},"content":"        return userRepsInput \u003e\u003d 1;","lastModifiedDate":"2022-03-05"},{"lineNumber":200,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":201,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":202,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":203,"author":{"gitId":"emilysim00"},"content":"     * Prints all workouts stored in workout list at once.","lastModifiedDate":"2022-03-24"},{"lineNumber":204,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":205,"author":{"gitId":"emilysim00"},"content":"    public void listAllWorkout() {","lastModifiedDate":"2022-03-24"},{"lineNumber":206,"author":{"gitId":"emilysim00"},"content":"        int index \u003d 1;","lastModifiedDate":"2022-03-24"},{"lineNumber":207,"author":{"gitId":"emilysim00"},"content":"        if (workoutsDisplayList.size() \u003c\u003d 0) {","lastModifiedDate":"2022-04-01"},{"lineNumber":208,"author":{"gitId":"emilysim00"},"content":"            System.out.println(\"The workout list is empty\");","lastModifiedDate":"2022-04-01"},{"lineNumber":209,"author":{"gitId":"emilysim00"},"content":"        } else {","lastModifiedDate":"2022-04-01"},{"lineNumber":210,"author":{"gitId":"emilysim00"},"content":"            System.out.println(\"Showing workouts \" + (index) + \"-\" + workoutsDisplayList.size()","lastModifiedDate":"2022-03-24"},{"lineNumber":211,"author":{"gitId":"emilysim00"},"content":"                    + \" of \" + workoutsDisplayList.size() + \":\");","lastModifiedDate":"2022-03-24"},{"lineNumber":212,"author":{"gitId":"emilysim00"},"content":"            while (index \u003c\u003d workoutsDisplayList.size()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":213,"author":{"gitId":"emilysim00"},"content":"                Workout workoutObject \u003d getWorkoutFromIndexNum(index);","lastModifiedDate":"2022-03-24"},{"lineNumber":214,"author":{"gitId":"emilysim00"},"content":"                System.out.println(index + \". \" + workoutObject.toString());","lastModifiedDate":"2022-03-24"},{"lineNumber":215,"author":{"gitId":"emilysim00"},"content":"                index +\u003d 1;","lastModifiedDate":"2022-03-24"},{"lineNumber":216,"author":{"gitId":"emilysim00"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":217,"author":{"gitId":"emilysim00"},"content":"            System.out.println(\"Showed all workouts in list\");","lastModifiedDate":"2022-03-24"},{"lineNumber":218,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":219,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":220,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":221,"author":{"gitId":"Musfirahe0556596"},"content":"    //@@author Musfirahe0556596","lastModifiedDate":"2022-04-04"},{"lineNumber":222,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":223,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method removes the intended workout in the workout list.","lastModifiedDate":"2022-03-13"},{"lineNumber":224,"author":{"gitId":"Musfirahe0556596"},"content":"     * The intended workout to delete is determined by the user who","lastModifiedDate":"2022-03-13"},{"lineNumber":225,"author":{"gitId":"Musfirahe0556596"},"content":"     * will indicate the workout index number to delete in the workout list.","lastModifiedDate":"2022-04-02"},{"lineNumber":226,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":227,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param userArgument The argument entered by user, that is, the workout index number to delete.","lastModifiedDate":"2022-03-31"},{"lineNumber":228,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return deletedWorkout The workout object that has been deleted.","lastModifiedDate":"2022-04-10"},{"lineNumber":229,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws NumberFormatException If workout index number could not be parsed into an integer.","lastModifiedDate":"2022-03-31"},{"lineNumber":230,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws ArrayIndexOutOfBoundsException For operations which involves index checking.","lastModifiedDate":"2022-03-13"},{"lineNumber":231,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws InvalidWorkoutException        If workout index number to delete is out of range.","lastModifiedDate":"2022-03-31"},{"lineNumber":232,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":233,"author":{"gitId":"Musfirahe0556596"},"content":"    public Workout deleteWorkout(String userArgument) throws InvalidWorkoutException,","lastModifiedDate":"2022-04-02"},{"lineNumber":234,"author":{"gitId":"Musfirahe0556596"},"content":"            NumberFormatException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2022-04-02"},{"lineNumber":235,"author":{"gitId":"Musfirahe0556596"},"content":"        logger.entering(getClass().getName(), \"deleteWorkout\");","lastModifiedDate":"2022-03-13"},{"lineNumber":236,"author":{"gitId":"Musfirahe0556596"},"content":"        int indexToDelete \u003d Integer.parseInt(userArgument.trim());","lastModifiedDate":"2022-03-09"},{"lineNumber":237,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":238,"author":{"gitId":"Musfirahe0556596"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-09"},{"lineNumber":239,"author":{"gitId":"Musfirahe0556596"},"content":"        boolean isIndexToDeleteValid \u003d checkIndexIsWithinRange(indexToDelete);","lastModifiedDate":"2022-03-12"},{"lineNumber":240,"author":{"gitId":"Musfirahe0556596"},"content":"        if (!isIndexToDeleteValid) {","lastModifiedDate":"2022-03-09"},{"lineNumber":241,"author":{"gitId":"Musfirahe0556596"},"content":"            logger.log(Level.WARNING, \"Workout number to delete is out of range!\");","lastModifiedDate":"2022-03-13"},{"lineNumber":242,"author":{"gitId":"Musfirahe0556596"},"content":"            throw new InvalidWorkoutException(className, InvalidWorkoutException.INDEX_VALUE_OUT_OF_RANGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":243,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":244,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":245,"author":{"gitId":"Musfirahe0556596"},"content":"        assert (indexToDelete \u003e 0) \u0026\u0026 (indexToDelete \u003c\u003d workoutsDisplayList.size());","lastModifiedDate":"2022-03-17"},{"lineNumber":246,"author":{"gitId":"Musfirahe0556596"},"content":"        Workout deletedWorkout \u003d getWorkoutFromIndexNum(indexToDelete);","lastModifiedDate":"2022-03-17"},{"lineNumber":247,"author":{"gitId":"Musfirahe0556596"},"content":"        workoutsDisplayList.remove(indexToDelete - 1);","lastModifiedDate":"2022-03-17"},{"lineNumber":248,"author":{"gitId":"Musfirahe0556596"},"content":"        String deletedWorkoutKey \u003d deletedWorkout.toString();","lastModifiedDate":"2022-03-17"},{"lineNumber":249,"author":{"gitId":"Musfirahe0556596"},"content":"        getWorkoutsHashMapList().remove(deletedWorkoutKey);","lastModifiedDate":"2022-03-17"},{"lineNumber":250,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":251,"author":{"gitId":"Musfirahe0556596"},"content":"        logger.exiting(getClass().getName(), \"deleteWorkout\");","lastModifiedDate":"2022-03-13"},{"lineNumber":252,"author":{"gitId":"Musfirahe0556596"},"content":"        return deletedWorkout;","lastModifiedDate":"2022-04-02"},{"lineNumber":253,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":254,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":255,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":256,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method checks whether the index supplied for operations","lastModifiedDate":"2022-03-13"},{"lineNumber":257,"author":{"gitId":"Musfirahe0556596"},"content":"     * such as delete and update is within the range of the current workout list.","lastModifiedDate":"2022-03-13"},{"lineNumber":258,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":259,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param index The index to check.","lastModifiedDate":"2022-03-13"},{"lineNumber":260,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return true if index is within range, else false if out of range.","lastModifiedDate":"2022-03-13"},{"lineNumber":261,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":262,"author":{"gitId":"Musfirahe0556596"},"content":"    private boolean checkIndexIsWithinRange(int index) {","lastModifiedDate":"2022-03-12"},{"lineNumber":263,"author":{"gitId":"Musfirahe0556596"},"content":"        return index \u003e 0 \u0026\u0026 index \u003c\u003d workoutsDisplayList.size();","lastModifiedDate":"2022-03-17"},{"lineNumber":264,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":265,"author":{"gitId":"Musfirahe0556596"},"content":"    //@@author","lastModifiedDate":"2022-04-04"},{"lineNumber":266,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":267,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":268,"author":{"gitId":"TianaiYan"},"content":"     * Updates the number of repetitions of an existing workout.","lastModifiedDate":"2022-03-15"},{"lineNumber":269,"author":{"gitId":"TianaiYan"},"content":"     * Modifies the workout by stating the index of the workout and","lastModifiedDate":"2022-03-15"},{"lineNumber":270,"author":{"gitId":"TianaiYan"},"content":"     * new number of repetitions.","lastModifiedDate":"2022-03-15"},{"lineNumber":271,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":272,"author":{"gitId":"TianaiYan"},"content":"     * @param userArgument The argument entered by user, which includes index of workout to update","lastModifiedDate":"2022-03-15"},{"lineNumber":273,"author":{"gitId":"TianaiYan"},"content":"     *                     and new number of repetitions.","lastModifiedDate":"2022-03-15"},{"lineNumber":274,"author":{"gitId":"TianaiYan"},"content":"     * @return updatedWorkout The workout object which has been updated.","lastModifiedDate":"2022-03-15"},{"lineNumber":275,"author":{"gitId":"TianaiYan"},"content":"     * @throws ArrayIndexOutOfBoundsException For operations which involves index checking.","lastModifiedDate":"2022-03-15"},{"lineNumber":276,"author":{"gitId":"TianaiYan"},"content":"     * @throws NumberFormatException          If workout index and number of reps could not be parsed into an integer.","lastModifiedDate":"2022-03-15"},{"lineNumber":277,"author":{"gitId":"TianaiYan"},"content":"     * @throws InvalidWorkoutException        If number of repetition is not valid or workout number to update","lastModifiedDate":"2022-03-26"},{"lineNumber":278,"author":{"gitId":"TianaiYan"},"content":"     *                                        is out of range.","lastModifiedDate":"2022-03-26"},{"lineNumber":279,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":280,"author":{"gitId":"TianaiYan"},"content":"    public Workout updateWorkout(String userArgument) throws ArrayIndexOutOfBoundsException,","lastModifiedDate":"2022-03-12"},{"lineNumber":281,"author":{"gitId":"TianaiYan"},"content":"            NumberFormatException, InvalidWorkoutException {","lastModifiedDate":"2022-03-26"},{"lineNumber":282,"author":{"gitId":"TianaiYan"},"content":"        logger.entering(getClass().getName(), \"updateWorkout\");","lastModifiedDate":"2022-03-15"},{"lineNumber":283,"author":{"gitId":"TianaiYan"},"content":"        String[] updateDetails \u003d userArgument.split(\" \", 2);","lastModifiedDate":"2022-03-12"},{"lineNumber":284,"author":{"gitId":"TianaiYan"},"content":"        String indexToUpdateString \u003d updateDetails[0].trim();","lastModifiedDate":"2022-03-12"},{"lineNumber":285,"author":{"gitId":"TianaiYan"},"content":"        String newNumberOfRepsString \u003d updateDetails[1].trim();","lastModifiedDate":"2022-03-12"},{"lineNumber":286,"author":{"gitId":"TianaiYan"},"content":"        int indexToUpdate \u003d Integer.parseInt(indexToUpdateString);","lastModifiedDate":"2022-03-12"},{"lineNumber":287,"author":{"gitId":"TianaiYan"},"content":"        int newRepsValue \u003d Integer.parseInt(newNumberOfRepsString);","lastModifiedDate":"2022-03-15"},{"lineNumber":288,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":289,"author":{"gitId":"TianaiYan"},"content":"        boolean isIndexToUpdateValid \u003d checkIndexIsWithinRange(indexToUpdate);","lastModifiedDate":"2022-03-12"},{"lineNumber":290,"author":{"gitId":"TianaiYan"},"content":"        boolean isNewRepsValueValid \u003d checkIfRepsValueIsValid(newRepsValue);","lastModifiedDate":"2022-03-15"},{"lineNumber":291,"author":{"gitId":"TianaiYan"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-12"},{"lineNumber":292,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":293,"author":{"gitId":"TianaiYan"},"content":"        if (!isIndexToUpdateValid) {","lastModifiedDate":"2022-03-12"},{"lineNumber":294,"author":{"gitId":"TianaiYan"},"content":"            logger.log(Level.WARNING, \"Workout index to update is out of range!\");","lastModifiedDate":"2022-03-15"},{"lineNumber":295,"author":{"gitId":"TianaiYan"},"content":"            throw new InvalidWorkoutException(className, InvalidWorkoutException.INDEX_VALUE_OUT_OF_RANGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":296,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":297,"author":{"gitId":"TianaiYan"},"content":"        if (!isNewRepsValueValid) {","lastModifiedDate":"2022-03-15"},{"lineNumber":298,"author":{"gitId":"TianaiYan"},"content":"            logger.log(Level.WARNING, \"Repetition value is invalid.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":299,"author":{"gitId":"alanlowzies"},"content":"            throw new InvalidWorkoutException(className, InvalidWorkoutException.INVALID_REPS_VALUE_ERROR_MSG);","lastModifiedDate":"2022-03-14"},{"lineNumber":300,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":301,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":302,"author":{"gitId":"TianaiYan"},"content":"        Workout updatedWorkout \u003d getWorkoutFromIndexNum(indexToUpdate);","lastModifiedDate":"2022-04-02"},{"lineNumber":303,"author":{"gitId":"TianaiYan"},"content":"        String exerciseName \u003d updatedWorkout.getExerciseName();","lastModifiedDate":"2022-04-02"},{"lineNumber":304,"author":{"gitId":"TianaiYan"},"content":"        boolean isExistingWorkout \u003d checkForExistingWorkout(exerciseName, newRepsValue);","lastModifiedDate":"2022-03-15"},{"lineNumber":305,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":306,"author":{"gitId":"TianaiYan"},"content":"        if (isExistingWorkout) {","lastModifiedDate":"2022-03-15"},{"lineNumber":307,"author":{"gitId":"TianaiYan"},"content":"            logger.log(Level.WARNING, \"\\\"\" + exerciseName + \" (\" + newRepsValue + \")\\\" \"","lastModifiedDate":"2022-03-15"},{"lineNumber":308,"author":{"gitId":"TianaiYan"},"content":"                + \"has already existed in the list. Cannot be updated.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":309,"author":{"gitId":"TianaiYan"},"content":"            throw new InvalidWorkoutException(className, InvalidWorkoutException.DUPLICATE_WORKOUT_ERROR_MSG);","lastModifiedDate":"2022-03-15"},{"lineNumber":310,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":311,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":312,"author":{"gitId":"TianaiYan"},"content":"        assert (isIndexToUpdateValid \u0026\u0026 isNewRepsValueValid \u0026\u0026 !isExistingWorkout);","lastModifiedDate":"2022-03-15"},{"lineNumber":313,"author":{"gitId":"TianaiYan"},"content":"        String oldWorkoutKey \u003d updatedWorkout.toString();","lastModifiedDate":"2022-04-02"},{"lineNumber":314,"author":{"gitId":"TianaiYan"},"content":"        updatedWorkout.setRepetitions(newRepsValue);","lastModifiedDate":"2022-04-02"},{"lineNumber":315,"author":{"gitId":"TianaiYan"},"content":"        updateWorkoutsHashMapList(oldWorkoutKey, updatedWorkout);","lastModifiedDate":"2022-04-02"},{"lineNumber":316,"author":{"gitId":"TianaiYan"},"content":"        logger.exiting(getClass().getName(), \"updateWorkout\");","lastModifiedDate":"2022-03-29"},{"lineNumber":317,"author":{"gitId":"TianaiYan"},"content":"        return updatedWorkout;","lastModifiedDate":"2022-04-02"},{"lineNumber":318,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":319,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":320,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":321,"author":{"gitId":"alanlowzies"},"content":"     * Checks if the provided workout details already exists in the ArrayList of workouts. A workout","lastModifiedDate":"2022-03-14"},{"lineNumber":322,"author":{"gitId":"alanlowzies"},"content":"     * is considered to already exist in the list if both the exercise name and repetition count matches","lastModifiedDate":"2022-03-14"},{"lineNumber":323,"author":{"gitId":"alanlowzies"},"content":"     * an existing workout in the ArrayList.","lastModifiedDate":"2022-03-14"},{"lineNumber":324,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":325,"author":{"gitId":"alanlowzies"},"content":"     * @param exerciseName    The name of the exercise to check.","lastModifiedDate":"2022-03-14"},{"lineNumber":326,"author":{"gitId":"alanlowzies"},"content":"     * @param repetitionCount The number of repetitions of the exercise to check.","lastModifiedDate":"2022-03-14"},{"lineNumber":327,"author":{"gitId":"alanlowzies"},"content":"     * @return True if an existing workout with the same exercise name and repetition count exists in the list.","lastModifiedDate":"2022-03-14"},{"lineNumber":328,"author":{"gitId":"alanlowzies"},"content":"     *         Otherwise, returns false.","lastModifiedDate":"2022-03-14"},{"lineNumber":329,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":330,"author":{"gitId":"alanlowzies"},"content":"    public boolean checkForExistingWorkout(String exerciseName, int repetitionCount) {","lastModifiedDate":"2022-03-14"},{"lineNumber":331,"author":{"gitId":"alanlowzies"},"content":"        for (String existingWorkoutKey : getWorkoutsDisplayList()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":332,"author":{"gitId":"alanlowzies"},"content":"            Workout existingWorkout \u003d getWorkoutsHashMapList().get(existingWorkoutKey);","lastModifiedDate":"2022-03-17"},{"lineNumber":333,"author":{"gitId":"alanlowzies"},"content":"            boolean hasSameExerciseName \u003d existingWorkout.getExerciseName().equals(exerciseName);","lastModifiedDate":"2022-03-14"},{"lineNumber":334,"author":{"gitId":"alanlowzies"},"content":"            boolean hasSameRepsCount \u003d (existingWorkout.getRepetitions() \u003d\u003d repetitionCount);","lastModifiedDate":"2022-03-14"},{"lineNumber":335,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":336,"author":{"gitId":"alanlowzies"},"content":"            if (hasSameExerciseName \u0026\u0026 hasSameRepsCount) {","lastModifiedDate":"2022-03-14"},{"lineNumber":337,"author":{"gitId":"alanlowzies"},"content":"                logger.log(Level.INFO, \"Existing workout found in the list.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":338,"author":{"gitId":"alanlowzies"},"content":"                return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":339,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":340,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":341,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":342,"author":{"gitId":"alanlowzies"},"content":"        return false;","lastModifiedDate":"2022-03-14"},{"lineNumber":343,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":344,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":345,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-04-02"},{"lineNumber":346,"author":{"gitId":"TianaiYan"},"content":"     * Finds the workout that the user wants to update.","lastModifiedDate":"2022-04-02"},{"lineNumber":347,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-04-02"},{"lineNumber":348,"author":{"gitId":"TianaiYan"},"content":"     * @param userArgument The argument entered by user, which includes index of workout to update","lastModifiedDate":"2022-04-02"},{"lineNumber":349,"author":{"gitId":"TianaiYan"},"content":"     *                     and new number of repetitions.","lastModifiedDate":"2022-04-02"},{"lineNumber":350,"author":{"gitId":"TianaiYan"},"content":"     * @return targetWorkout The workout object which is going to be updated.","lastModifiedDate":"2022-04-02"},{"lineNumber":351,"author":{"gitId":"TianaiYan"},"content":"     * @throws InvalidWorkoutException If index of workout is not valid.","lastModifiedDate":"2022-04-02"},{"lineNumber":352,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-04-02"},{"lineNumber":353,"author":{"gitId":"TianaiYan"},"content":"    public String getCurrentWorkout(String userArgument) throws InvalidWorkoutException {","lastModifiedDate":"2022-04-02"},{"lineNumber":354,"author":{"gitId":"TianaiYan"},"content":"        String[] updateDetails \u003d userArgument.split(\" \", 2);","lastModifiedDate":"2022-03-29"},{"lineNumber":355,"author":{"gitId":"TianaiYan"},"content":"        String indexToUpdateString \u003d updateDetails[0].trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":356,"author":{"gitId":"TianaiYan"},"content":"        int indexToUpdate \u003d Integer.parseInt(indexToUpdateString);","lastModifiedDate":"2022-03-29"},{"lineNumber":357,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":358,"author":{"gitId":"TianaiYan"},"content":"        boolean isIndexToUpdateValid \u003d checkIndexIsWithinRange(indexToUpdate);","lastModifiedDate":"2022-03-29"},{"lineNumber":359,"author":{"gitId":"TianaiYan"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-29"},{"lineNumber":360,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":361,"author":{"gitId":"TianaiYan"},"content":"        if (!isIndexToUpdateValid) {","lastModifiedDate":"2022-03-29"},{"lineNumber":362,"author":{"gitId":"TianaiYan"},"content":"            throw new InvalidWorkoutException(className, InvalidWorkoutException.INDEX_VALUE_OUT_OF_RANGE);","lastModifiedDate":"2022-03-29"},{"lineNumber":363,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":364,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":365,"author":{"gitId":"TianaiYan"},"content":"        String currentWorkout \u003d workoutsDisplayList.get(indexToUpdate - 1);","lastModifiedDate":"2022-04-02"},{"lineNumber":366,"author":{"gitId":"TianaiYan"},"content":"        return currentWorkout;","lastModifiedDate":"2022-04-02"},{"lineNumber":367,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":368,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"emilysim00":20,"Musfirahe0556596":49,"alanlowzies":204,"TianaiYan":75,"a1021492980":20}},{"path":"src/main/java/storage/FileManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package storage;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"import commands.WorkoutCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"import data.exercises.InvalidExerciseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"import data.plans.InvalidPlanException;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"import data.plans.Plan;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"import data.schedule.Day;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"import data.schedule.DayList;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"import data.schedule.InvalidScheduleException;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"import data.workouts.InvalidWorkoutException;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"import data.workouts.Workout;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"import data.workouts.WorkoutList;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"import java.io.File;","lastModifiedDate":"2022-04-02"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":" * This class manages the reading and writing of the various files used by the WerkIt! application.","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"public class FileManager {","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"     * These characters are used for internal parsing (e.g. reading from data files)","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"     * and thus cannot be used by the user in his/her input.","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"    public static final String[] ILLEGAL_CHARACTERS \u003d {\"|\"};","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"    // Directory and filenames for data storage","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"    public static final String PROPERTY_USER_WORKING_DIRECTORY \u003d \"user.dir\";","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"    public static final String NAME_DATA_DIRECTORY \u003d \"werkItResources\";","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"    public static final String NAME_EXERCISE_FILE \u003d \"exercises.txt\";","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"    public static final String NAME_WORKOUT_FILE \u003d \"workouts.txt\";","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"    public static final String NAME_PLAN_FILE \u003d \"plans.txt\";","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"    public static final String NAME_SCHEDULE_FILE \u003d \"schedule.txt\";","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"    // Delimiters for processing file data","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"    private static final String FILE_DATA_DELIMITER_REGEX \u003d \"\\\\|\";","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"    private static final String FILE_DATA_DELIMITER \u003d \" | \";","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"a1021492980"},"content":"    private static final String FILE_DATA_DELIMITER_PLAN \u003d \",\";","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"    private UI ui \u003d new UI();","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"    private Path directoryPath;","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"    private Path exerciseFilePath;","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"    private Path workoutFilePath;","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"a1021492980"},"content":"    private Path planFilePath;","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"    private Path scheduleFilePath;","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"    // These booleans indicate whether the directory and/or files already exist","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"    // prior to the current application\u0027s session.","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"    private boolean wasDirectoryAlreadyMade \u003d false;","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"    private boolean wasExercisesFileAlreadyMade \u003d false;","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"    private boolean wasWorkoutsFileAlreadyMade \u003d false;","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"a1021492980"},"content":"    private boolean wasPlansFileAlreadyMade \u003d false;","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"    private boolean wasScheduleFileAlreadyMade \u003d false;","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"    private PlanList planList;","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"    private static Logger logger \u003d Logger.getLogger(FileManager.class.getName());","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-04-02"},{"lineNumber":71,"author":{"gitId":"a1021492980"},"content":"     * Recreates the workout file.","lastModifiedDate":"2022-04-02"},{"lineNumber":72,"author":{"gitId":"a1021492980"},"content":"     * @throws IOException      If the application is unable to create the workout file.","lastModifiedDate":"2022-04-02"},{"lineNumber":73,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-04-02"},{"lineNumber":74,"author":{"gitId":"a1021492980"},"content":"    public void deleteAndRecreateWorkoutFile() throws IOException {","lastModifiedDate":"2022-04-02"},{"lineNumber":75,"author":{"gitId":"a1021492980"},"content":"        File workoutFile \u003d new File(String.valueOf(getWorkoutFilePath()));","lastModifiedDate":"2022-04-02"},{"lineNumber":76,"author":{"gitId":"a1021492980"},"content":"        workoutFile.delete();","lastModifiedDate":"2022-04-02"},{"lineNumber":77,"author":{"gitId":"a1021492980"},"content":"        logger.log(Level.INFO, \"A workout file has been deleted, and will be recreated soon.\");","lastModifiedDate":"2022-04-02"},{"lineNumber":78,"author":{"gitId":"a1021492980"},"content":"        createWorkoutFile();","lastModifiedDate":"2022-04-02"},{"lineNumber":79,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-02"},{"lineNumber":80,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":81,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-04-02"},{"lineNumber":82,"author":{"gitId":"a1021492980"},"content":"     * Recreates the plan file.","lastModifiedDate":"2022-04-02"},{"lineNumber":83,"author":{"gitId":"a1021492980"},"content":"     * @throws IOException      If the application is unable to create the plan file.","lastModifiedDate":"2022-04-02"},{"lineNumber":84,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-04-02"},{"lineNumber":85,"author":{"gitId":"a1021492980"},"content":"    public void deleteAndRecreatePlanFile() throws IOException {","lastModifiedDate":"2022-04-02"},{"lineNumber":86,"author":{"gitId":"a1021492980"},"content":"        File planFile \u003d new File(String.valueOf(getPlanFilePath()));","lastModifiedDate":"2022-04-02"},{"lineNumber":87,"author":{"gitId":"a1021492980"},"content":"        planFile.delete();","lastModifiedDate":"2022-04-02"},{"lineNumber":88,"author":{"gitId":"a1021492980"},"content":"        logger.log(Level.INFO, \"A plan file has been deleted, and will be recreated soon.\");","lastModifiedDate":"2022-04-02"},{"lineNumber":89,"author":{"gitId":"a1021492980"},"content":"        createPlanFile();","lastModifiedDate":"2022-04-02"},{"lineNumber":90,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-02"},{"lineNumber":91,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":92,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-04-02"},{"lineNumber":93,"author":{"gitId":"a1021492980"},"content":"     * Recreates the Schedule file.","lastModifiedDate":"2022-04-02"},{"lineNumber":94,"author":{"gitId":"a1021492980"},"content":"     * @throws IOException      If the application is unable to create the schedule file.","lastModifiedDate":"2022-04-02"},{"lineNumber":95,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-04-02"},{"lineNumber":96,"author":{"gitId":"a1021492980"},"content":"    public void deleteAndRecreateScheduleFile() throws IOException {","lastModifiedDate":"2022-04-02"},{"lineNumber":97,"author":{"gitId":"a1021492980"},"content":"        File scheduleFile \u003d new File(String.valueOf(getScheduleFilePath()));","lastModifiedDate":"2022-04-02"},{"lineNumber":98,"author":{"gitId":"a1021492980"},"content":"        scheduleFile.delete();","lastModifiedDate":"2022-04-02"},{"lineNumber":99,"author":{"gitId":"a1021492980"},"content":"        logger.log(Level.INFO, \"A schedule file has been deleted, and will be recreated soon.\");","lastModifiedDate":"2022-04-02"},{"lineNumber":100,"author":{"gitId":"a1021492980"},"content":"        createScheduleFile();","lastModifiedDate":"2022-04-02"},{"lineNumber":101,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-02"},{"lineNumber":102,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":103,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"alanlowzies"},"content":"     * Constructs a FileManager object. While instantiating, Paths objects of the various URIs","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"alanlowzies"},"content":"     * are also instantiated.","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-04-10"},{"lineNumber":107,"author":{"gitId":"alanlowzies"},"content":"     * @param planList An instance of a PlanList class.","lastModifiedDate":"2022-04-10"},{"lineNumber":108,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"alanlowzies"},"content":"    public FileManager(PlanList planList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"alanlowzies"},"content":"        String workingDirectory \u003d System.getProperty(PROPERTY_USER_WORKING_DIRECTORY);","lastModifiedDate":"2022-04-09"},{"lineNumber":111,"author":{"gitId":"alanlowzies"},"content":"        this.directoryPath \u003d Paths.get(workingDirectory, NAME_DATA_DIRECTORY);","lastModifiedDate":"2022-04-09"},{"lineNumber":112,"author":{"gitId":"alanlowzies"},"content":"        this.exerciseFilePath \u003d Paths.get(workingDirectory, NAME_DATA_DIRECTORY, NAME_EXERCISE_FILE);","lastModifiedDate":"2022-04-09"},{"lineNumber":113,"author":{"gitId":"alanlowzies"},"content":"        this.workoutFilePath \u003d Paths.get(workingDirectory, NAME_DATA_DIRECTORY, NAME_WORKOUT_FILE);","lastModifiedDate":"2022-04-09"},{"lineNumber":114,"author":{"gitId":"alanlowzies"},"content":"        this.planFilePath \u003d Paths.get(workingDirectory, NAME_DATA_DIRECTORY, NAME_PLAN_FILE);","lastModifiedDate":"2022-04-09"},{"lineNumber":115,"author":{"gitId":"alanlowzies"},"content":"        this.scheduleFilePath \u003d Paths.get(workingDirectory, NAME_DATA_DIRECTORY, NAME_SCHEDULE_FILE);","lastModifiedDate":"2022-04-09"},{"lineNumber":116,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":117,"author":{"gitId":"alanlowzies"},"content":"        this.planList \u003d planList;","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"alanlowzies"},"content":"        LogHandler.linkToFileLogger(logger);","lastModifiedDate":"2022-03-17"},{"lineNumber":120,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":121,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"alanlowzies"},"content":"     * Gets the Paths object that stores the URI of the WerkIt! resource directory.","lastModifiedDate":"2022-03-14"},{"lineNumber":124,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"alanlowzies"},"content":"     * @return A Paths object with the URI of the application\u0027s resource directory.","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"alanlowzies"},"content":"    public Path getDirectoryPath() {","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"alanlowzies"},"content":"        return this.directoryPath;","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"alanlowzies"},"content":"     * Gets the Paths object that stores the URI of the WerkIt! data file containing","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"alanlowzies"},"content":"     * a list of exercises.","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"alanlowzies"},"content":"     * @return A Paths object with the URI of the application\u0027s exercise file.","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"alanlowzies"},"content":"    public Path getExerciseFilePath() {","lastModifiedDate":"2022-03-09"},{"lineNumber":138,"author":{"gitId":"alanlowzies"},"content":"        return this.exerciseFilePath;","lastModifiedDate":"2022-03-09"},{"lineNumber":139,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":140,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":141,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":142,"author":{"gitId":"alanlowzies"},"content":"     * Gets the Paths object that stores the URI of the WerkIt! data file containing","lastModifiedDate":"2022-03-14"},{"lineNumber":143,"author":{"gitId":"alanlowzies"},"content":"     * a list of workouts.","lastModifiedDate":"2022-03-14"},{"lineNumber":144,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":145,"author":{"gitId":"alanlowzies"},"content":"     * @return A Paths object with the URI of the application\u0027s workouts file.","lastModifiedDate":"2022-03-14"},{"lineNumber":146,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":147,"author":{"gitId":"alanlowzies"},"content":"    public Path getWorkoutFilePath() {","lastModifiedDate":"2022-03-09"},{"lineNumber":148,"author":{"gitId":"alanlowzies"},"content":"        return this.workoutFilePath;","lastModifiedDate":"2022-03-09"},{"lineNumber":149,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":150,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":151,"author":{"gitId":"a1021492980"},"content":"    public Path getPlanFilePath() {","lastModifiedDate":"2022-03-20"},{"lineNumber":152,"author":{"gitId":"a1021492980"},"content":"        return this.planFilePath;","lastModifiedDate":"2022-03-20"},{"lineNumber":153,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":154,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":155,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":156,"author":{"gitId":"alanlowzies"},"content":"     * Gets the Paths object that stores the URI of the WerkIt! data file containing","lastModifiedDate":"2022-03-23"},{"lineNumber":157,"author":{"gitId":"alanlowzies"},"content":"     * the schedule.","lastModifiedDate":"2022-03-23"},{"lineNumber":158,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":159,"author":{"gitId":"alanlowzies"},"content":"     * @return A Paths object with the URI of the application\u0027s schedule file.","lastModifiedDate":"2022-03-23"},{"lineNumber":160,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":161,"author":{"gitId":"alanlowzies"},"content":"    public Path getScheduleFilePath() {","lastModifiedDate":"2022-03-23"},{"lineNumber":162,"author":{"gitId":"alanlowzies"},"content":"        return this.scheduleFilePath;","lastModifiedDate":"2022-03-23"},{"lineNumber":163,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":164,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":165,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":166,"author":{"gitId":"alanlowzies"},"content":"     * Gets the status of whether the directory already exists prior to the current session","lastModifiedDate":"2022-03-14"},{"lineNumber":167,"author":{"gitId":"alanlowzies"},"content":"     * of the application.","lastModifiedDate":"2022-03-14"},{"lineNumber":168,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":169,"author":{"gitId":"alanlowzies"},"content":"     * @return Returns true if the directory already exists. Otherwise, returns false.","lastModifiedDate":"2022-03-14"},{"lineNumber":170,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":171,"author":{"gitId":"alanlowzies"},"content":"    public boolean isWasDirectoryAlreadyMade() {","lastModifiedDate":"2022-03-09"},{"lineNumber":172,"author":{"gitId":"alanlowzies"},"content":"        return this.wasDirectoryAlreadyMade;","lastModifiedDate":"2022-03-09"},{"lineNumber":173,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":174,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":175,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":176,"author":{"gitId":"alanlowzies"},"content":"     * Sets the status of whether the directory already exists prior to the current session","lastModifiedDate":"2022-03-14"},{"lineNumber":177,"author":{"gitId":"alanlowzies"},"content":"     * of the application.","lastModifiedDate":"2022-03-14"},{"lineNumber":178,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":179,"author":{"gitId":"alanlowzies"},"content":"     * @param wasDirectoryAlreadyMade The status of the directory\u0027s existence.","lastModifiedDate":"2022-03-14"},{"lineNumber":180,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":181,"author":{"gitId":"alanlowzies"},"content":"    public void setWasDirectoryAlreadyMade(boolean wasDirectoryAlreadyMade) {","lastModifiedDate":"2022-03-09"},{"lineNumber":182,"author":{"gitId":"alanlowzies"},"content":"        this.wasDirectoryAlreadyMade \u003d wasDirectoryAlreadyMade;","lastModifiedDate":"2022-03-09"},{"lineNumber":183,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":184,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":185,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":186,"author":{"gitId":"alanlowzies"},"content":"     * Gets the status of whether the exercise file already exists prior to the current session","lastModifiedDate":"2022-03-14"},{"lineNumber":187,"author":{"gitId":"alanlowzies"},"content":"     * of the application.","lastModifiedDate":"2022-03-14"},{"lineNumber":188,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":189,"author":{"gitId":"alanlowzies"},"content":"     * @return Returns true if the exercise file already exists. Otherwise, returns false.","lastModifiedDate":"2022-03-14"},{"lineNumber":190,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":191,"author":{"gitId":"alanlowzies"},"content":"    public boolean isWasExercisesFileAlreadyMade() {","lastModifiedDate":"2022-03-09"},{"lineNumber":192,"author":{"gitId":"alanlowzies"},"content":"        return this.wasExercisesFileAlreadyMade;","lastModifiedDate":"2022-03-09"},{"lineNumber":193,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":194,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":195,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":196,"author":{"gitId":"alanlowzies"},"content":"     * Sets the status of whether the exercise file already exists prior to the current session","lastModifiedDate":"2022-03-14"},{"lineNumber":197,"author":{"gitId":"alanlowzies"},"content":"     * of the application.","lastModifiedDate":"2022-03-14"},{"lineNumber":198,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":199,"author":{"gitId":"alanlowzies"},"content":"     * @param wasExercisesFileAlreadyMade The status of the exercise file\u0027s existence.","lastModifiedDate":"2022-03-14"},{"lineNumber":200,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":201,"author":{"gitId":"alanlowzies"},"content":"    public void setWasExercisesFileAlreadyMade(boolean wasExercisesFileAlreadyMade) {","lastModifiedDate":"2022-03-09"},{"lineNumber":202,"author":{"gitId":"alanlowzies"},"content":"        this.wasExercisesFileAlreadyMade \u003d wasExercisesFileAlreadyMade;","lastModifiedDate":"2022-03-09"},{"lineNumber":203,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":204,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":205,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":206,"author":{"gitId":"alanlowzies"},"content":"     * Gets the status of whether the workout file already exists prior to the current session","lastModifiedDate":"2022-03-14"},{"lineNumber":207,"author":{"gitId":"alanlowzies"},"content":"     * of the application.","lastModifiedDate":"2022-03-14"},{"lineNumber":208,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":209,"author":{"gitId":"alanlowzies"},"content":"     * @return Returns true if the workout file already exists. Otherwise, returns false.","lastModifiedDate":"2022-03-14"},{"lineNumber":210,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":211,"author":{"gitId":"alanlowzies"},"content":"    public boolean isWasWorkoutsFileAlreadyMade() {","lastModifiedDate":"2022-03-09"},{"lineNumber":212,"author":{"gitId":"alanlowzies"},"content":"        return this.wasWorkoutsFileAlreadyMade;","lastModifiedDate":"2022-03-09"},{"lineNumber":213,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":214,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":215,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":216,"author":{"gitId":"alanlowzies"},"content":"     * Sets the status of whether the workout file already exists prior to the current session","lastModifiedDate":"2022-03-14"},{"lineNumber":217,"author":{"gitId":"alanlowzies"},"content":"     * of the application.","lastModifiedDate":"2022-03-14"},{"lineNumber":218,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":219,"author":{"gitId":"alanlowzies"},"content":"     * @param wasWorkoutsFileAlreadyMade The status of the workout file\u0027s existence.","lastModifiedDate":"2022-03-14"},{"lineNumber":220,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":221,"author":{"gitId":"alanlowzies"},"content":"    public void setWasWorkoutsFileAlreadyMade(boolean wasWorkoutsFileAlreadyMade) {","lastModifiedDate":"2022-03-09"},{"lineNumber":222,"author":{"gitId":"alanlowzies"},"content":"        this.wasWorkoutsFileAlreadyMade \u003d wasWorkoutsFileAlreadyMade;","lastModifiedDate":"2022-03-09"},{"lineNumber":223,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":224,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":225,"author":{"gitId":"alanlowzies"},"content":"    public boolean isWasPlansFileAlreadyMade() {","lastModifiedDate":"2022-03-23"},{"lineNumber":226,"author":{"gitId":"alanlowzies"},"content":"        return this.wasPlansFileAlreadyMade;","lastModifiedDate":"2022-03-23"},{"lineNumber":227,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":228,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":229,"author":{"gitId":"a1021492980"},"content":"    public void setWasPlansFileAlreadyMade(boolean wasPlansFileAlreadyMade) {","lastModifiedDate":"2022-03-20"},{"lineNumber":230,"author":{"gitId":"a1021492980"},"content":"        this.wasPlansFileAlreadyMade \u003d wasPlansFileAlreadyMade;","lastModifiedDate":"2022-03-20"},{"lineNumber":231,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":232,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":233,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":234,"author":{"gitId":"alanlowzies"},"content":"     * Gets the status of whether the schedule file already exists prior to the current session","lastModifiedDate":"2022-03-23"},{"lineNumber":235,"author":{"gitId":"alanlowzies"},"content":"     * of the application.","lastModifiedDate":"2022-03-23"},{"lineNumber":236,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":237,"author":{"gitId":"alanlowzies"},"content":"     * @return Returns true if the schedule file already exists. Otherwise, returns false.","lastModifiedDate":"2022-03-23"},{"lineNumber":238,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":239,"author":{"gitId":"alanlowzies"},"content":"    public boolean isWasScheduleFileAlreadyMade() {","lastModifiedDate":"2022-03-23"},{"lineNumber":240,"author":{"gitId":"alanlowzies"},"content":"        return this.wasScheduleFileAlreadyMade;","lastModifiedDate":"2022-03-23"},{"lineNumber":241,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":242,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":243,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":244,"author":{"gitId":"alanlowzies"},"content":"     * Sets the status of whether the schedule file already exists prior to the current session","lastModifiedDate":"2022-03-23"},{"lineNumber":245,"author":{"gitId":"alanlowzies"},"content":"     * of the application.","lastModifiedDate":"2022-03-23"},{"lineNumber":246,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":247,"author":{"gitId":"alanlowzies"},"content":"     * @param wasScheduleFileAlreadyMade The status of the schedule file\u0027s existence.","lastModifiedDate":"2022-03-23"},{"lineNumber":248,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":249,"author":{"gitId":"alanlowzies"},"content":"    public void setWasScheduleFileAlreadyMade(boolean wasScheduleFileAlreadyMade) {","lastModifiedDate":"2022-03-23"},{"lineNumber":250,"author":{"gitId":"alanlowzies"},"content":"        this.wasScheduleFileAlreadyMade \u003d wasScheduleFileAlreadyMade;","lastModifiedDate":"2022-03-23"},{"lineNumber":251,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":252,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":253,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":254,"author":{"gitId":"alanlowzies"},"content":"     * Gets the PlanList object stored in this instance of FileManager.","lastModifiedDate":"2022-03-27"},{"lineNumber":255,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":256,"author":{"gitId":"alanlowzies"},"content":"     * @return The PlanList object.","lastModifiedDate":"2022-03-27"},{"lineNumber":257,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":258,"author":{"gitId":"alanlowzies"},"content":"    public PlanList getPlanList() {","lastModifiedDate":"2022-03-27"},{"lineNumber":259,"author":{"gitId":"alanlowzies"},"content":"        return this.planList;","lastModifiedDate":"2022-03-27"},{"lineNumber":260,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":261,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":262,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":263,"author":{"gitId":"alanlowzies"},"content":"     * Checks if all the required directory and files already exist prior to the current session","lastModifiedDate":"2022-03-14"},{"lineNumber":264,"author":{"gitId":"alanlowzies"},"content":"     * of the application.","lastModifiedDate":"2022-03-14"},{"lineNumber":265,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":266,"author":{"gitId":"alanlowzies"},"content":"     * @return Returns true if all the required directory and files already exist. Otherwise,","lastModifiedDate":"2022-04-07"},{"lineNumber":267,"author":{"gitId":"alanlowzies"},"content":"     *         returns false.","lastModifiedDate":"2022-03-14"},{"lineNumber":268,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":269,"author":{"gitId":"alanlowzies"},"content":"    public boolean checkIfAllDirectoryAndFilesExists() {","lastModifiedDate":"2022-03-09"},{"lineNumber":270,"author":{"gitId":"alanlowzies"},"content":"        if (!isWasDirectoryAlreadyMade()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":271,"author":{"gitId":"alanlowzies"},"content":"            return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":272,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":273,"author":{"gitId":"alanlowzies"},"content":"        if (!isWasExercisesFileAlreadyMade()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":274,"author":{"gitId":"alanlowzies"},"content":"            return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":275,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":276,"author":{"gitId":"alanlowzies"},"content":"        if (!isWasWorkoutsFileAlreadyMade()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":277,"author":{"gitId":"alanlowzies"},"content":"            return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":278,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":279,"author":{"gitId":"a1021492980"},"content":"        if (!isWasPlansFileAlreadyMade()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":280,"author":{"gitId":"a1021492980"},"content":"            return false;","lastModifiedDate":"2022-03-20"},{"lineNumber":281,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":282,"author":{"gitId":"alanlowzies"},"content":"        if (!isWasScheduleFileAlreadyMade()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":283,"author":{"gitId":"alanlowzies"},"content":"            return false;","lastModifiedDate":"2022-03-23"},{"lineNumber":284,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":285,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":286,"author":{"gitId":"alanlowzies"},"content":"        return true;","lastModifiedDate":"2022-03-09"},{"lineNumber":287,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":288,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":289,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":290,"author":{"gitId":"alanlowzies"},"content":"     * Checks if at least one of the following resource files already exist prior to the current session","lastModifiedDate":"2022-04-07"},{"lineNumber":291,"author":{"gitId":"alanlowzies"},"content":"     * of the application: workouts.txt, plans.txt, or schedule.txt","lastModifiedDate":"2022-04-07"},{"lineNumber":292,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-04-07"},{"lineNumber":293,"author":{"gitId":"alanlowzies"},"content":"     * @return Returns true if at least one of the abovementioned files already exists. Otherwise,","lastModifiedDate":"2022-04-07"},{"lineNumber":294,"author":{"gitId":"alanlowzies"},"content":"     *         returns false.","lastModifiedDate":"2022-04-07"},{"lineNumber":295,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":296,"author":{"gitId":"alanlowzies"},"content":"    public boolean checkIfAtLeastOneFileExists() {","lastModifiedDate":"2022-04-07"},{"lineNumber":297,"author":{"gitId":"alanlowzies"},"content":"        if (isWasWorkoutsFileAlreadyMade() || isWasPlansFileAlreadyMade() || isWasScheduleFileAlreadyMade()) {","lastModifiedDate":"2022-04-07"},{"lineNumber":298,"author":{"gitId":"alanlowzies"},"content":"            return true;","lastModifiedDate":"2022-04-07"},{"lineNumber":299,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":300,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":301,"author":{"gitId":"alanlowzies"},"content":"        return false;","lastModifiedDate":"2022-04-07"},{"lineNumber":302,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":303,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":304,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":305,"author":{"gitId":"alanlowzies"},"content":"     * Checks if the required directory and files already exist prior to the current session","lastModifiedDate":"2022-03-14"},{"lineNumber":306,"author":{"gitId":"alanlowzies"},"content":"     * of the application. If any of them does not exist, create them.","lastModifiedDate":"2022-03-14"},{"lineNumber":307,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":308,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If the application is unable to create the required directory","lastModifiedDate":"2022-03-14"},{"lineNumber":309,"author":{"gitId":"alanlowzies"},"content":"     *         and/or files.","lastModifiedDate":"2022-03-14"},{"lineNumber":310,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":311,"author":{"gitId":"alanlowzies"},"content":"    public void checkAndCreateDirectoriesAndFiles() throws IOException {","lastModifiedDate":"2022-03-09"},{"lineNumber":312,"author":{"gitId":"alanlowzies"},"content":"        checkIfDataDirectoryAlreadyExists();","lastModifiedDate":"2022-03-09"},{"lineNumber":313,"author":{"gitId":"alanlowzies"},"content":"        if (!isWasDirectoryAlreadyMade()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":314,"author":{"gitId":"alanlowzies"},"content":"            ui.printDirectoryNotFoundMessage();","lastModifiedDate":"2022-03-09"},{"lineNumber":315,"author":{"gitId":"alanlowzies"},"content":"            createDataDirectory();","lastModifiedDate":"2022-03-09"},{"lineNumber":316,"author":{"gitId":"alanlowzies"},"content":"            ui.printDirectoryCreatedMessage();","lastModifiedDate":"2022-03-10"},{"lineNumber":317,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":318,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":319,"author":{"gitId":"alanlowzies"},"content":"        checkIfExerciseFileAlreadyExists();","lastModifiedDate":"2022-03-09"},{"lineNumber":320,"author":{"gitId":"alanlowzies"},"content":"        if (!isWasExercisesFileAlreadyMade()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":321,"author":{"gitId":"alanlowzies"},"content":"            ui.printExerciseFileNotFoundMessage();","lastModifiedDate":"2022-03-09"},{"lineNumber":322,"author":{"gitId":"alanlowzies"},"content":"            createExerciseFile();","lastModifiedDate":"2022-03-09"},{"lineNumber":323,"author":{"gitId":"alanlowzies"},"content":"            ui.printExerciseFileCreatedMessage();","lastModifiedDate":"2022-03-10"},{"lineNumber":324,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":325,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":326,"author":{"gitId":"alanlowzies"},"content":"        checkIfWorkoutFileAlreadyExists();","lastModifiedDate":"2022-03-09"},{"lineNumber":327,"author":{"gitId":"alanlowzies"},"content":"        if (!isWasWorkoutsFileAlreadyMade()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":328,"author":{"gitId":"alanlowzies"},"content":"            ui.printWorkoutFileNotFoundMessage();","lastModifiedDate":"2022-03-09"},{"lineNumber":329,"author":{"gitId":"alanlowzies"},"content":"            createWorkoutFile();","lastModifiedDate":"2022-03-09"},{"lineNumber":330,"author":{"gitId":"alanlowzies"},"content":"            ui.printWorkoutFileCreatedMessage();","lastModifiedDate":"2022-03-10"},{"lineNumber":331,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":332,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":333,"author":{"gitId":"a1021492980"},"content":"        checkIfPlanFileAlreadyExists();","lastModifiedDate":"2022-03-20"},{"lineNumber":334,"author":{"gitId":"a1021492980"},"content":"        if (!isWasPlansFileAlreadyMade()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":335,"author":{"gitId":"a1021492980"},"content":"            ui.printPlanFileNotFoundMessage();","lastModifiedDate":"2022-03-20"},{"lineNumber":336,"author":{"gitId":"a1021492980"},"content":"            createPlanFile();","lastModifiedDate":"2022-03-20"},{"lineNumber":337,"author":{"gitId":"a1021492980"},"content":"            ui.printPlanFileCreatedMessage();","lastModifiedDate":"2022-03-20"},{"lineNumber":338,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":339,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":340,"author":{"gitId":"alanlowzies"},"content":"        checkIfScheduleFileAlreadyExists();","lastModifiedDate":"2022-03-23"},{"lineNumber":341,"author":{"gitId":"alanlowzies"},"content":"        if (!isWasScheduleFileAlreadyMade()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":342,"author":{"gitId":"alanlowzies"},"content":"            ui.printScheduleFileNotFoundMessage();","lastModifiedDate":"2022-03-23"},{"lineNumber":343,"author":{"gitId":"alanlowzies"},"content":"            createScheduleFile();","lastModifiedDate":"2022-03-23"},{"lineNumber":344,"author":{"gitId":"alanlowzies"},"content":"            ui.printScheduleFileCreatedMessage();","lastModifiedDate":"2022-03-23"},{"lineNumber":345,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":346,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":347,"author":{"gitId":"alanlowzies"},"content":"        assert (Files.exists(getDirectoryPath())) : \"Directory does not exist, but it should.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":348,"author":{"gitId":"alanlowzies"},"content":"        assert (Files.exists(getExerciseFilePath())) : \"Exercise file does not exist, but it should.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":349,"author":{"gitId":"alanlowzies"},"content":"        assert (Files.exists(getWorkoutFilePath())) : \"Workout file does not exist, but it should.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":350,"author":{"gitId":"alanlowzies"},"content":"        assert (Files.exists(getPlanFilePath())) : \"Plan file does not exist, but it should.\";","lastModifiedDate":"2022-04-07"},{"lineNumber":351,"author":{"gitId":"alanlowzies"},"content":"        assert (Files.exists(getScheduleFilePath())) : \"Schedule file does not exist, but it should.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":352,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":353,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":354,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":355,"author":{"gitId":"alanlowzies"},"content":"     * Checks for the existence of the resource directory. If the directory exists,","lastModifiedDate":"2022-03-14"},{"lineNumber":356,"author":{"gitId":"alanlowzies"},"content":"     * update the status of wasDirectoryAlreadyMade.","lastModifiedDate":"2022-03-14"},{"lineNumber":357,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":358,"author":{"gitId":"alanlowzies"},"content":"    public void checkIfDataDirectoryAlreadyExists() {","lastModifiedDate":"2022-03-09"},{"lineNumber":359,"author":{"gitId":"alanlowzies"},"content":"        if (Files.exists(getDirectoryPath())) {","lastModifiedDate":"2022-03-09"},{"lineNumber":360,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.INFO, \"Resource directory already exists.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":361,"author":{"gitId":"alanlowzies"},"content":"            setWasDirectoryAlreadyMade(true);","lastModifiedDate":"2022-03-09"},{"lineNumber":362,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":363,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":364,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":365,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":366,"author":{"gitId":"alanlowzies"},"content":"     * Creates the resource directory of the application.","lastModifiedDate":"2022-03-14"},{"lineNumber":367,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":368,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If the application is unable to create the resource directory.","lastModifiedDate":"2022-03-14"},{"lineNumber":369,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":370,"author":{"gitId":"alanlowzies"},"content":"    public void createDataDirectory() throws IOException {","lastModifiedDate":"2022-03-09"},{"lineNumber":371,"author":{"gitId":"alanlowzies"},"content":"        Files.createDirectory(getDirectoryPath());","lastModifiedDate":"2022-03-09"},{"lineNumber":372,"author":{"gitId":"alanlowzies"},"content":"        logger.log(Level.INFO, \"A new data directory was created.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":373,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":374,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":375,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":376,"author":{"gitId":"alanlowzies"},"content":"     * Checks for the existence of the exercise file. If the file exists,","lastModifiedDate":"2022-03-14"},{"lineNumber":377,"author":{"gitId":"alanlowzies"},"content":"     * update the status of wasExercisesFileAlreadyMade.","lastModifiedDate":"2022-03-14"},{"lineNumber":378,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":379,"author":{"gitId":"alanlowzies"},"content":"    public void checkIfExerciseFileAlreadyExists() {","lastModifiedDate":"2022-03-09"},{"lineNumber":380,"author":{"gitId":"alanlowzies"},"content":"        if (Files.exists(getExerciseFilePath())) {","lastModifiedDate":"2022-03-09"},{"lineNumber":381,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.INFO, \"Exercise file already exists.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":382,"author":{"gitId":"alanlowzies"},"content":"            setWasExercisesFileAlreadyMade(true);","lastModifiedDate":"2022-03-09"},{"lineNumber":383,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":384,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":385,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":386,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":387,"author":{"gitId":"alanlowzies"},"content":"     * Creates the exercise file of the application.","lastModifiedDate":"2022-03-14"},{"lineNumber":388,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":389,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If the application is unable to create the exercise file.","lastModifiedDate":"2022-03-14"},{"lineNumber":390,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":391,"author":{"gitId":"alanlowzies"},"content":"    public void createExerciseFile() throws IOException {","lastModifiedDate":"2022-03-09"},{"lineNumber":392,"author":{"gitId":"alanlowzies"},"content":"        Files.createFile(getExerciseFilePath());","lastModifiedDate":"2022-03-09"},{"lineNumber":393,"author":{"gitId":"alanlowzies"},"content":"        logger.log(Level.INFO, \"A new exercise file was created.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":394,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":395,"author":{"gitId":"alanlowzies"},"content":"        // Populate file with default exercises","lastModifiedDate":"2022-03-09"},{"lineNumber":396,"author":{"gitId":"alanlowzies"},"content":"        FileWriter fileWriter \u003d new FileWriter(getExerciseFilePath().toString());","lastModifiedDate":"2022-03-09"},{"lineNumber":397,"author":{"gitId":"alanlowzies"},"content":"        for (String exerciseName : ExerciseList.getDefaultExerciseList()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":398,"author":{"gitId":"alanlowzies"},"content":"            fileWriter.append(exerciseName);","lastModifiedDate":"2022-03-09"},{"lineNumber":399,"author":{"gitId":"alanlowzies"},"content":"            fileWriter.append(System.lineSeparator());","lastModifiedDate":"2022-03-09"},{"lineNumber":400,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":401,"author":{"gitId":"alanlowzies"},"content":"        fileWriter.close();","lastModifiedDate":"2022-03-09"},{"lineNumber":402,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":403,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":404,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":405,"author":{"gitId":"alanlowzies"},"content":"     * Checks for the existence of the workout file. If the file exists,","lastModifiedDate":"2022-03-14"},{"lineNumber":406,"author":{"gitId":"alanlowzies"},"content":"     * update the status of wasWorkoutsFileAlreadyMade.","lastModifiedDate":"2022-03-14"},{"lineNumber":407,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":408,"author":{"gitId":"alanlowzies"},"content":"    public void checkIfWorkoutFileAlreadyExists() {","lastModifiedDate":"2022-03-09"},{"lineNumber":409,"author":{"gitId":"alanlowzies"},"content":"        if (Files.exists(getWorkoutFilePath())) {","lastModifiedDate":"2022-03-09"},{"lineNumber":410,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.INFO, \"Workout file already exists.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":411,"author":{"gitId":"alanlowzies"},"content":"            setWasWorkoutsFileAlreadyMade(true);","lastModifiedDate":"2022-03-09"},{"lineNumber":412,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":413,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":414,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":415,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":416,"author":{"gitId":"alanlowzies"},"content":"     * Creates the workout file of the application.","lastModifiedDate":"2022-03-14"},{"lineNumber":417,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":418,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If the application is unable to create the workout file.","lastModifiedDate":"2022-03-14"},{"lineNumber":419,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":420,"author":{"gitId":"alanlowzies"},"content":"    public void createWorkoutFile() throws IOException {","lastModifiedDate":"2022-03-09"},{"lineNumber":421,"author":{"gitId":"alanlowzies"},"content":"        Files.createFile(getWorkoutFilePath());","lastModifiedDate":"2022-03-09"},{"lineNumber":422,"author":{"gitId":"alanlowzies"},"content":"        logger.log(Level.INFO, \"A new workout file was created.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":423,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":424,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":425,"author":{"gitId":"alanlowzies"},"content":"    public void checkIfPlanFileAlreadyExists() {","lastModifiedDate":"2022-03-23"},{"lineNumber":426,"author":{"gitId":"alanlowzies"},"content":"        if (Files.exists(getPlanFilePath())) {","lastModifiedDate":"2022-03-23"},{"lineNumber":427,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.INFO, \"Plan file already exists.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":428,"author":{"gitId":"alanlowzies"},"content":"            setWasPlansFileAlreadyMade(true);","lastModifiedDate":"2022-03-23"},{"lineNumber":429,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":430,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":431,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":432,"author":{"gitId":"a1021492980"},"content":"    public void createPlanFile() throws IOException {","lastModifiedDate":"2022-03-20"},{"lineNumber":433,"author":{"gitId":"a1021492980"},"content":"        Files.createFile(getPlanFilePath());","lastModifiedDate":"2022-03-20"},{"lineNumber":434,"author":{"gitId":"alanlowzies"},"content":"        logger.log(Level.INFO, \"A new plan file was created.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":435,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":436,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":437,"author":{"gitId":"alanlowzies"},"content":"    public void checkIfScheduleFileAlreadyExists() {","lastModifiedDate":"2022-03-23"},{"lineNumber":438,"author":{"gitId":"alanlowzies"},"content":"        if (Files.exists(getScheduleFilePath())) {","lastModifiedDate":"2022-03-23"},{"lineNumber":439,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.INFO, \"Schedule file already exists.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":440,"author":{"gitId":"alanlowzies"},"content":"            setWasScheduleFileAlreadyMade(true);","lastModifiedDate":"2022-03-23"},{"lineNumber":441,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":442,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":443,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":444,"author":{"gitId":"alanlowzies"},"content":"    public void createScheduleFile() throws IOException {","lastModifiedDate":"2022-03-23"},{"lineNumber":445,"author":{"gitId":"alanlowzies"},"content":"        Files.createFile(getScheduleFilePath());","lastModifiedDate":"2022-03-23"},{"lineNumber":446,"author":{"gitId":"alanlowzies"},"content":"        logger.log(Level.INFO, \"A new schedule file was created.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":447,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":448,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":449,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":450,"author":{"gitId":"alanlowzies"},"content":"     * Reads the exercises from local exercise file and stores them into an ArrayList named exercises.","lastModifiedDate":"2022-03-14"},{"lineNumber":451,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":452,"author":{"gitId":"emilysim00"},"content":"     * @param exerciseList List to store all exercises.","lastModifiedDate":"2022-03-27"},{"lineNumber":453,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException when the local file is missing.","lastModifiedDate":"2022-03-09"},{"lineNumber":454,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":455,"author":{"gitId":"alanlowzies"},"content":"    public void loadExercisesFromFile(ExerciseList exerciseList) throws IOException {","lastModifiedDate":"2022-03-09"},{"lineNumber":456,"author":{"gitId":"alanlowzies"},"content":"        Scanner scanner \u003d new Scanner(getExerciseFilePath());","lastModifiedDate":"2022-03-09"},{"lineNumber":457,"author":{"gitId":"alanlowzies"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":458,"author":{"gitId":"a1021492980"},"content":"            var exercise \u003d scanner.nextLine().toLowerCase();","lastModifiedDate":"2022-04-05"},{"lineNumber":459,"author":{"gitId":"alanlowzies"},"content":"            exerciseList.addExerciseToList(exercise);","lastModifiedDate":"2022-03-09"},{"lineNumber":460,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":461,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":462,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":463,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":464,"author":{"gitId":"alanlowzies"},"content":"     * Reads the workouts from the local workout file and stores them into a WorkoutList object.","lastModifiedDate":"2022-03-23"},{"lineNumber":465,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":466,"author":{"gitId":"alanlowzies"},"content":"     * @param workoutList An instance of the WorkoutList class.","lastModifiedDate":"2022-03-14"},{"lineNumber":467,"author":{"gitId":"alanlowzies"},"content":"     * @return Returns true if all workouts have been loaded into the application successfully.","lastModifiedDate":"2022-03-14"},{"lineNumber":468,"author":{"gitId":"alanlowzies"},"content":"     *         Otherwise, returns false.","lastModifiedDate":"2022-03-14"},{"lineNumber":469,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If the method is unable to open the workout file.","lastModifiedDate":"2022-03-14"},{"lineNumber":470,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":471,"author":{"gitId":"alanlowzies"},"content":"    public boolean loadWorkoutsFromFile(WorkoutList workoutList) throws IOException {","lastModifiedDate":"2022-03-09"},{"lineNumber":472,"author":{"gitId":"alanlowzies"},"content":"        boolean hasNoErrorsDuringLoad \u003d true;","lastModifiedDate":"2022-03-09"},{"lineNumber":473,"author":{"gitId":"alanlowzies"},"content":"        Scanner workoutFileReader \u003d new Scanner(getWorkoutFilePath());","lastModifiedDate":"2022-03-09"},{"lineNumber":474,"author":{"gitId":"alanlowzies"},"content":"        while (workoutFileReader.hasNext()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":475,"author":{"gitId":"alanlowzies"},"content":"            try {","lastModifiedDate":"2022-03-09"},{"lineNumber":476,"author":{"gitId":"alanlowzies"},"content":"                String workoutFileDataLine \u003d workoutFileReader.nextLine();","lastModifiedDate":"2022-03-09"},{"lineNumber":477,"author":{"gitId":"alanlowzies"},"content":"                String[] parsedWorkoutFileDataLine \u003d parseFileDataLine(workoutFileDataLine);","lastModifiedDate":"2022-03-09"},{"lineNumber":478,"author":{"gitId":"alanlowzies"},"content":"                addFileWorkoutToList(workoutList, parsedWorkoutFileDataLine);","lastModifiedDate":"2022-03-09"},{"lineNumber":479,"author":{"gitId":"alanlowzies"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-09"},{"lineNumber":480,"author":{"gitId":"alanlowzies"},"content":"                System.out.println(\"File data error: insufficient parameters in workout data.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":481,"author":{"gitId":"alanlowzies"},"content":"                hasNoErrorsDuringLoad \u003d false;","lastModifiedDate":"2022-03-09"},{"lineNumber":482,"author":{"gitId":"a1021492980"},"content":"            } catch (InvalidExerciseException | InvalidWorkoutException | NumberFormatException e) {","lastModifiedDate":"2022-04-02"},{"lineNumber":483,"author":{"gitId":"alanlowzies"},"content":"                System.out.println(\"File data error: \" + e.getMessage());","lastModifiedDate":"2022-03-09"},{"lineNumber":484,"author":{"gitId":"alanlowzies"},"content":"                hasNoErrorsDuringLoad \u003d false;","lastModifiedDate":"2022-03-09"},{"lineNumber":485,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-03-09"},{"lineNumber":486,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":487,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":488,"author":{"gitId":"alanlowzies"},"content":"        return hasNoErrorsDuringLoad;","lastModifiedDate":"2022-03-09"},{"lineNumber":489,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":490,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":491,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-04-05"},{"lineNumber":492,"author":{"gitId":"a1021492980"},"content":"     * Reads the plans from the local plan file and stores them into a PlanList object.","lastModifiedDate":"2022-04-05"},{"lineNumber":493,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-04-05"},{"lineNumber":494,"author":{"gitId":"a1021492980"},"content":"     * @param planList An instance of the PlanList class.","lastModifiedDate":"2022-04-05"},{"lineNumber":495,"author":{"gitId":"a1021492980"},"content":"     * @return Returns true if all plans have been loaded into the application successfully.","lastModifiedDate":"2022-04-05"},{"lineNumber":496,"author":{"gitId":"a1021492980"},"content":"     *         Otherwise, returns false.","lastModifiedDate":"2022-04-05"},{"lineNumber":497,"author":{"gitId":"a1021492980"},"content":"     * @throws IOException If the method is unable to open the plan file.","lastModifiedDate":"2022-04-05"},{"lineNumber":498,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-04-05"},{"lineNumber":499,"author":{"gitId":"a1021492980"},"content":"    public boolean loadPlansFromFile(PlanList planList) throws IOException {","lastModifiedDate":"2022-03-20"},{"lineNumber":500,"author":{"gitId":"a1021492980"},"content":"        boolean hasNoErrorsDuringLoad \u003d true;","lastModifiedDate":"2022-03-20"},{"lineNumber":501,"author":{"gitId":"a1021492980"},"content":"        Scanner planFileReader \u003d new Scanner(getPlanFilePath());","lastModifiedDate":"2022-03-20"},{"lineNumber":502,"author":{"gitId":"a1021492980"},"content":"        while (planFileReader.hasNext()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":503,"author":{"gitId":"a1021492980"},"content":"            try {","lastModifiedDate":"2022-03-20"},{"lineNumber":504,"author":{"gitId":"a1021492980"},"content":"                String planFileDataLine \u003d planFileReader.nextLine();","lastModifiedDate":"2022-03-20"},{"lineNumber":505,"author":{"gitId":"a1021492980"},"content":"                String[] parsedPlanFileDataLine \u003d parsePlansFileData(planFileDataLine);","lastModifiedDate":"2022-03-20"},{"lineNumber":506,"author":{"gitId":"a1021492980"},"content":"                addFilePlanToList(planList, parsedPlanFileDataLine);","lastModifiedDate":"2022-03-20"},{"lineNumber":507,"author":{"gitId":"a1021492980"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-20"},{"lineNumber":508,"author":{"gitId":"a1021492980"},"content":"                System.out.println(\"File data error: insufficient parameters in plan data.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":509,"author":{"gitId":"a1021492980"},"content":"                hasNoErrorsDuringLoad \u003d false;","lastModifiedDate":"2022-03-20"},{"lineNumber":510,"author":{"gitId":"a1021492980"},"content":"            } catch (InvalidExerciseException | InvalidWorkoutException | NumberFormatException e) {","lastModifiedDate":"2022-04-02"},{"lineNumber":511,"author":{"gitId":"a1021492980"},"content":"                System.out.println(\"File data error: \" + e.getMessage());","lastModifiedDate":"2022-03-20"},{"lineNumber":512,"author":{"gitId":"a1021492980"},"content":"                hasNoErrorsDuringLoad \u003d false;","lastModifiedDate":"2022-03-20"},{"lineNumber":513,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":514,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":515,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":516,"author":{"gitId":"a1021492980"},"content":"        return hasNoErrorsDuringLoad;","lastModifiedDate":"2022-03-20"},{"lineNumber":517,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":518,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":519,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":520,"author":{"gitId":"alanlowzies"},"content":"     * Reads the days and corresponding plans from the local schedule file and stores the","lastModifiedDate":"2022-03-23"},{"lineNumber":521,"author":{"gitId":"alanlowzies"},"content":"     * parsed data into a DayList object.","lastModifiedDate":"2022-03-23"},{"lineNumber":522,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":523,"author":{"gitId":"alanlowzies"},"content":"     * @param dayList The DayList object to store the day schedule in.","lastModifiedDate":"2022-03-23"},{"lineNumber":524,"author":{"gitId":"alanlowzies"},"content":"     * @return Returns true if the entire schedule is loaded into the application successfully.","lastModifiedDate":"2022-03-23"},{"lineNumber":525,"author":{"gitId":"alanlowzies"},"content":"     *         Otherwise, returns false.","lastModifiedDate":"2022-03-23"},{"lineNumber":526,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If the method is unable to open the schedule file.","lastModifiedDate":"2022-03-23"},{"lineNumber":527,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":528,"author":{"gitId":"alanlowzies"},"content":"    public boolean loadScheduleFromFile(DayList dayList) throws IOException {","lastModifiedDate":"2022-03-23"},{"lineNumber":529,"author":{"gitId":"alanlowzies"},"content":"        boolean hasNoErrorsDuringLoad \u003d true;","lastModifiedDate":"2022-03-23"},{"lineNumber":530,"author":{"gitId":"alanlowzies"},"content":"        Scanner scheduleFileReader \u003d new Scanner(getScheduleFilePath());","lastModifiedDate":"2022-03-23"},{"lineNumber":531,"author":{"gitId":"alanlowzies"},"content":"        while (scheduleFileReader.hasNext()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":532,"author":{"gitId":"alanlowzies"},"content":"            try {","lastModifiedDate":"2022-03-23"},{"lineNumber":533,"author":{"gitId":"alanlowzies"},"content":"                String scheduleFileDataLine \u003d scheduleFileReader.nextLine();","lastModifiedDate":"2022-03-23"},{"lineNumber":534,"author":{"gitId":"alanlowzies"},"content":"                String[] parsedScheduleFileDataLine \u003d parseFileDataLine(scheduleFileDataLine);","lastModifiedDate":"2022-03-23"},{"lineNumber":535,"author":{"gitId":"alanlowzies"},"content":"                addFileScheduleToList(dayList, parsedScheduleFileDataLine);","lastModifiedDate":"2022-03-23"},{"lineNumber":536,"author":{"gitId":"alanlowzies"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-23"},{"lineNumber":537,"author":{"gitId":"alanlowzies"},"content":"                System.out.println(\"File data error: insufficient parameters in plan data.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":538,"author":{"gitId":"alanlowzies"},"content":"                hasNoErrorsDuringLoad \u003d false;","lastModifiedDate":"2022-03-23"},{"lineNumber":539,"author":{"gitId":"a1021492980"},"content":"            } catch (InvalidScheduleException | InvalidPlanException | NumberFormatException e) {","lastModifiedDate":"2022-04-02"},{"lineNumber":540,"author":{"gitId":"alanlowzies"},"content":"                System.out.println(\"File data error: \" + e.getMessage());","lastModifiedDate":"2022-03-23"},{"lineNumber":541,"author":{"gitId":"alanlowzies"},"content":"                hasNoErrorsDuringLoad \u003d false;","lastModifiedDate":"2022-03-23"},{"lineNumber":542,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-04-02"},{"lineNumber":543,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-04-02"},{"lineNumber":544,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":545,"author":{"gitId":"a1021492980"},"content":"        return hasNoErrorsDuringLoad;","lastModifiedDate":"2022-04-02"},{"lineNumber":546,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-02"},{"lineNumber":547,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":548,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-04-02"},{"lineNumber":549,"author":{"gitId":"a1021492980"},"content":"     * Reloads the data from schedule file to DayList after deletion of workout/plan that is related to the schedule.","lastModifiedDate":"2022-04-02"},{"lineNumber":550,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-04-02"},{"lineNumber":551,"author":{"gitId":"a1021492980"},"content":"     * @param dayList   The DayList object to store the day schedule in.","lastModifiedDate":"2022-04-02"},{"lineNumber":552,"author":{"gitId":"a1021492980"},"content":"     * @return          Returns true if the deleted workout/plan does not affect the current schedule.","lastModifiedDate":"2022-04-02"},{"lineNumber":553,"author":{"gitId":"a1021492980"},"content":"     * @throws IOException  If the method is unable to open the schedule file.","lastModifiedDate":"2022-04-02"},{"lineNumber":554,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-04-02"},{"lineNumber":555,"author":{"gitId":"a1021492980"},"content":"    public boolean reloadScheduleFromFile(DayList dayList) throws IOException {","lastModifiedDate":"2022-04-02"},{"lineNumber":556,"author":{"gitId":"a1021492980"},"content":"        int deletedScheduleCount \u003d 0;","lastModifiedDate":"2022-04-02"},{"lineNumber":557,"author":{"gitId":"a1021492980"},"content":"        boolean hasNoErrorsDuringLoad \u003d true;","lastModifiedDate":"2022-04-02"},{"lineNumber":558,"author":{"gitId":"a1021492980"},"content":"        Scanner scheduleFileReader \u003d new Scanner(getScheduleFilePath());","lastModifiedDate":"2022-04-02"},{"lineNumber":559,"author":{"gitId":"a1021492980"},"content":"        while (scheduleFileReader.hasNext()) {","lastModifiedDate":"2022-04-02"},{"lineNumber":560,"author":{"gitId":"a1021492980"},"content":"            try {","lastModifiedDate":"2022-04-02"},{"lineNumber":561,"author":{"gitId":"a1021492980"},"content":"                String scheduleFileDataLine \u003d scheduleFileReader.nextLine();","lastModifiedDate":"2022-04-02"},{"lineNumber":562,"author":{"gitId":"a1021492980"},"content":"                String[] parsedScheduleFileDataLine \u003d parseFileDataLine(scheduleFileDataLine);","lastModifiedDate":"2022-04-02"},{"lineNumber":563,"author":{"gitId":"a1021492980"},"content":"                addFileScheduleToList(dayList, parsedScheduleFileDataLine);","lastModifiedDate":"2022-04-02"},{"lineNumber":564,"author":{"gitId":"a1021492980"},"content":"            } catch (ArrayIndexOutOfBoundsException | InvalidScheduleException | InvalidPlanException e) {","lastModifiedDate":"2022-04-02"},{"lineNumber":565,"author":{"gitId":"a1021492980"},"content":"                deletedScheduleCount +\u003d 1;","lastModifiedDate":"2022-04-02"},{"lineNumber":566,"author":{"gitId":"a1021492980"},"content":"                if (deletedScheduleCount \u003d\u003d 1) {","lastModifiedDate":"2022-04-02"},{"lineNumber":567,"author":{"gitId":"a1021492980"},"content":"                    System.out.println(\"The following schedule(s) is(are) \"","lastModifiedDate":"2022-04-02"},{"lineNumber":568,"author":{"gitId":"a1021492980"},"content":"                            + \"removed due to the removal of\\nrelevant plan(s).\");","lastModifiedDate":"2022-04-02"},{"lineNumber":569,"author":{"gitId":"a1021492980"},"content":"                    System.out.print(System.lineSeparator());","lastModifiedDate":"2022-04-02"},{"lineNumber":570,"author":{"gitId":"a1021492980"},"content":"                }","lastModifiedDate":"2022-04-02"},{"lineNumber":571,"author":{"gitId":"a1021492980"},"content":"                hasNoErrorsDuringLoad \u003d false;","lastModifiedDate":"2022-04-02"},{"lineNumber":572,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":573,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":574,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":575,"author":{"gitId":"alanlowzies"},"content":"        return hasNoErrorsDuringLoad;","lastModifiedDate":"2022-03-23"},{"lineNumber":576,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":577,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":578,"author":{"gitId":"a1021492980"},"content":"    public String[] parsePlansFileData(String fileDataLine) {","lastModifiedDate":"2022-03-20"},{"lineNumber":579,"author":{"gitId":"a1021492980"},"content":"        String[] parsedPlansData \u003d fileDataLine.split(FILE_DATA_DELIMITER_REGEX, 2);","lastModifiedDate":"2022-03-20"},{"lineNumber":580,"author":{"gitId":"a1021492980"},"content":"        return parsedPlansData;","lastModifiedDate":"2022-03-20"},{"lineNumber":581,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":582,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":583,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":584,"author":{"gitId":"alanlowzies"},"content":"     * Where applicable, parses a line of data read from a resource file by splitting the data according","lastModifiedDate":"2022-03-14"},{"lineNumber":585,"author":{"gitId":"alanlowzies"},"content":"     * to the delimiters.","lastModifiedDate":"2022-03-14"},{"lineNumber":586,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":587,"author":{"gitId":"alanlowzies"},"content":"     * @param fileDataLine The line of data that is read from a resource file.","lastModifiedDate":"2022-03-14"},{"lineNumber":588,"author":{"gitId":"alanlowzies"},"content":"     * @return An array containing the parsed line of data split by the delimiter.","lastModifiedDate":"2022-03-14"},{"lineNumber":589,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":590,"author":{"gitId":"alanlowzies"},"content":"    public String[] parseFileDataLine(String fileDataLine) {","lastModifiedDate":"2022-03-11"},{"lineNumber":591,"author":{"gitId":"alanlowzies"},"content":"        String[] parsedFileDataLine \u003d fileDataLine.split(FILE_DATA_DELIMITER_REGEX);","lastModifiedDate":"2022-03-09"},{"lineNumber":592,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":593,"author":{"gitId":"alanlowzies"},"content":"        for (int i \u003d 0; i \u003c parsedFileDataLine.length; i +\u003d 1) {","lastModifiedDate":"2022-03-27"},{"lineNumber":594,"author":{"gitId":"alanlowzies"},"content":"            parsedFileDataLine[i] \u003d parsedFileDataLine[i].trim();","lastModifiedDate":"2022-03-27"},{"lineNumber":595,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":596,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":597,"author":{"gitId":"alanlowzies"},"content":"        return parsedFileDataLine;","lastModifiedDate":"2022-03-09"},{"lineNumber":598,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":599,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":600,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":601,"author":{"gitId":"alanlowzies"},"content":"     * Adds a parsed workout data that is read from the resource file \u0027workouts.txt\u0027 into","lastModifiedDate":"2022-03-23"},{"lineNumber":602,"author":{"gitId":"alanlowzies"},"content":"     * the current application session\u0027s list of workouts.","lastModifiedDate":"2022-03-23"},{"lineNumber":603,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":604,"author":{"gitId":"alanlowzies"},"content":"     * @param workoutList         An instance of the WorkoutList class.","lastModifiedDate":"2022-03-14"},{"lineNumber":605,"author":{"gitId":"alanlowzies"},"content":"     * @param workoutFileDataLine An array of the parsed workout data read from the resource file.","lastModifiedDate":"2022-03-14"},{"lineNumber":606,"author":{"gitId":"alanlowzies"},"content":"     * @throws ArrayIndexOutOfBoundsException If the parsed data contains insufficient information.","lastModifiedDate":"2022-03-14"},{"lineNumber":607,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidExerciseException       If the parsed data contains an invalid exercise name.","lastModifiedDate":"2022-03-14"},{"lineNumber":608,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidWorkoutException        If the parsed data contains invalid or insufficient information needed","lastModifiedDate":"2022-03-14"},{"lineNumber":609,"author":{"gitId":"alanlowzies"},"content":"     *                                        to create a Workout object.","lastModifiedDate":"2022-03-14"},{"lineNumber":610,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":611,"author":{"gitId":"alanlowzies"},"content":"    public void addFileWorkoutToList(WorkoutList workoutList, String[] workoutFileDataLine)","lastModifiedDate":"2022-03-11"},{"lineNumber":612,"author":{"gitId":"alanlowzies"},"content":"            throws ArrayIndexOutOfBoundsException, InvalidExerciseException, InvalidWorkoutException {","lastModifiedDate":"2022-03-09"},{"lineNumber":613,"author":{"gitId":"a1021492980"},"content":"        String workoutName \u003d workoutFileDataLine[0].toLowerCase();","lastModifiedDate":"2022-04-05"},{"lineNumber":614,"author":{"gitId":"alanlowzies"},"content":"        String workoutReps \u003d workoutFileDataLine[1];","lastModifiedDate":"2022-03-09"},{"lineNumber":615,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":616,"author":{"gitId":"alanlowzies"},"content":"        String userArguments \u003d workoutName + \" \" + WorkoutCommand.ACTION_KEYWORD_CREATE_REPS + \" \" + workoutReps;","lastModifiedDate":"2022-04-09"},{"lineNumber":617,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout \u003d workoutList.createNewWorkout(userArguments);","lastModifiedDate":"2022-04-09"},{"lineNumber":618,"author":{"gitId":"alanlowzies"},"content":"        workoutList.addNewWorkoutToLists(newWorkout);","lastModifiedDate":"2022-04-09"},{"lineNumber":619,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":620,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":621,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-04-05"},{"lineNumber":622,"author":{"gitId":"a1021492980"},"content":"     * Adds a parsed workout data that is read from the resource file \u0027plans.txt\u0027 into","lastModifiedDate":"2022-04-05"},{"lineNumber":623,"author":{"gitId":"a1021492980"},"content":"     * the current application session\u0027s list of plans.","lastModifiedDate":"2022-04-05"},{"lineNumber":624,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-04-05"},{"lineNumber":625,"author":{"gitId":"a1021492980"},"content":"     * @param planList         An instance of the PlanList class.","lastModifiedDate":"2022-04-05"},{"lineNumber":626,"author":{"gitId":"a1021492980"},"content":"     * @param planFileDataLine An array of the parsed plan data read from the resource file.","lastModifiedDate":"2022-04-05"},{"lineNumber":627,"author":{"gitId":"a1021492980"},"content":"     * @throws ArrayIndexOutOfBoundsException If the parsed data contains insufficient information.","lastModifiedDate":"2022-04-05"},{"lineNumber":628,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidExerciseException       If the parsed data contains an invalid exercise name.","lastModifiedDate":"2022-04-05"},{"lineNumber":629,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidWorkoutException        If the parsed data contains invalid or insufficient information needed","lastModifiedDate":"2022-04-05"},{"lineNumber":630,"author":{"gitId":"a1021492980"},"content":"     *                                        to create a Plan object based on the given workouts.","lastModifiedDate":"2022-04-05"},{"lineNumber":631,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-04-05"},{"lineNumber":632,"author":{"gitId":"a1021492980"},"content":"    public void addFilePlanToList(PlanList planList, String[] planFileDataLine)","lastModifiedDate":"2022-03-20"},{"lineNumber":633,"author":{"gitId":"a1021492980"},"content":"            throws ArrayIndexOutOfBoundsException, InvalidExerciseException, InvalidWorkoutException {","lastModifiedDate":"2022-03-20"},{"lineNumber":634,"author":{"gitId":"a1021492980"},"content":"        String planName \u003d planFileDataLine[0].trim().toLowerCase();","lastModifiedDate":"2022-04-05"},{"lineNumber":635,"author":{"gitId":"a1021492980"},"content":"        String workoutsInPlan \u003d planFileDataLine[1].trim().toLowerCase();","lastModifiedDate":"2022-04-05"},{"lineNumber":636,"author":{"gitId":"a1021492980"},"content":"        String[] individualWorkout \u003d workoutsInPlan.split(FILE_DATA_DELIMITER_PLAN, -1);","lastModifiedDate":"2022-03-20"},{"lineNumber":637,"author":{"gitId":"a1021492980"},"content":"        ArrayList\u003cWorkout\u003e workoutsToAddInPlanList \u003d new ArrayList\u003cWorkout\u003e();","lastModifiedDate":"2022-03-20"},{"lineNumber":638,"author":{"gitId":"a1021492980"},"content":"        for (int i \u003d 0; i \u003c individualWorkout.length; i++) {","lastModifiedDate":"2022-03-20"},{"lineNumber":639,"author":{"gitId":"a1021492980"},"content":"            String[] workoutDetail \u003d individualWorkout[i].split(FILE_DATA_DELIMITER_REGEX);","lastModifiedDate":"2022-03-20"},{"lineNumber":640,"author":{"gitId":"a1021492980"},"content":"            workoutsToAddInPlanList.add(new Workout(workoutDetail[0].trim(),","lastModifiedDate":"2022-03-20"},{"lineNumber":641,"author":{"gitId":"a1021492980"},"content":"                    Integer.parseInt(workoutDetail[1].trim())));","lastModifiedDate":"2022-03-20"},{"lineNumber":642,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":643,"author":{"gitId":"a1021492980"},"content":"        Plan planToBeAdded \u003d new Plan(planName, workoutsToAddInPlanList);","lastModifiedDate":"2022-03-20"},{"lineNumber":644,"author":{"gitId":"a1021492980"},"content":"        planList.insertPlanIntoList(planName, planToBeAdded);","lastModifiedDate":"2022-03-20"},{"lineNumber":645,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":646,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":647,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":648,"author":{"gitId":"alanlowzies"},"content":"     * Adds a parsed day schedule data that is read from the resource file \u0027schedule.txt\u0027 into","lastModifiedDate":"2022-03-23"},{"lineNumber":649,"author":{"gitId":"alanlowzies"},"content":"     * the current application session\u0027s schedule of the days.","lastModifiedDate":"2022-03-23"},{"lineNumber":650,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":651,"author":{"gitId":"alanlowzies"},"content":"     * @param dayList              An instance of the DayList class.","lastModifiedDate":"2022-03-23"},{"lineNumber":652,"author":{"gitId":"alanlowzies"},"content":"     * @param scheduleFileDataLine An array of the parsed day schedule data read from the resource file.","lastModifiedDate":"2022-03-23"},{"lineNumber":653,"author":{"gitId":"alanlowzies"},"content":"     * @throws ArrayIndexOutOfBoundsException If the parsed data contains insufficient information.","lastModifiedDate":"2022-03-23"},{"lineNumber":654,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidScheduleException       If the parsed data contains invalid day schedule data or format.","lastModifiedDate":"2022-03-23"},{"lineNumber":655,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidPlanException           If the plan name could not be found in this session\u0027s list of plans.","lastModifiedDate":"2022-03-27"},{"lineNumber":656,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":657,"author":{"gitId":"alanlowzies"},"content":"    public void addFileScheduleToList(DayList dayList, String[] scheduleFileDataLine)","lastModifiedDate":"2022-03-23"},{"lineNumber":658,"author":{"gitId":"alanlowzies"},"content":"            throws ArrayIndexOutOfBoundsException, InvalidScheduleException, InvalidPlanException {","lastModifiedDate":"2022-03-27"},{"lineNumber":659,"author":{"gitId":"alanlowzies"},"content":"        String dayNumber \u003d scheduleFileDataLine[0];","lastModifiedDate":"2022-03-23"},{"lineNumber":660,"author":{"gitId":"alanlowzies"},"content":"        String planName \u003d scheduleFileDataLine[1].toLowerCase();","lastModifiedDate":"2022-04-06"},{"lineNumber":661,"author":{"gitId":"alanlowzies"},"content":"        int planNameIndexNum \u003d getPlanList().getIndexNumFromPlanName(planName);","lastModifiedDate":"2022-03-27"},{"lineNumber":662,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":663,"author":{"gitId":"alanlowzies"},"content":"        String userArguments \u003d dayNumber + \" \" + planNameIndexNum;","lastModifiedDate":"2022-03-27"},{"lineNumber":664,"author":{"gitId":"alanlowzies"},"content":"        dayList.updateDay(userArguments);","lastModifiedDate":"2022-03-23"},{"lineNumber":665,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":666,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":667,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":668,"author":{"gitId":"alanlowzies"},"content":"     * Writes a newly-created Workout object into the workout resource file with the correct data format.","lastModifiedDate":"2022-03-14"},{"lineNumber":669,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":670,"author":{"gitId":"alanlowzies"},"content":"     * @param newWorkout The newly-created Workout object to be added into the resource file.","lastModifiedDate":"2022-03-14"},{"lineNumber":671,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException          If the workout resource file cannot be opened.","lastModifiedDate":"2022-03-14"},{"lineNumber":672,"author":{"gitId":"alanlowzies"},"content":"     * @throws NullPointerException If the Workout parameter is null.","lastModifiedDate":"2022-03-14"},{"lineNumber":673,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":674,"author":{"gitId":"alanlowzies"},"content":"    public void writeNewWorkoutToFile(Workout newWorkout) throws IOException, NullPointerException {","lastModifiedDate":"2022-03-11"},{"lineNumber":675,"author":{"gitId":"alanlowzies"},"content":"        String workoutInFileFormat \u003d convertWorkoutToFileDataFormat(newWorkout);","lastModifiedDate":"2022-03-09"},{"lineNumber":676,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":677,"author":{"gitId":"alanlowzies"},"content":"        FileWriter fileWriter \u003d new FileWriter(getWorkoutFilePath().toString(), true);","lastModifiedDate":"2022-03-09"},{"lineNumber":678,"author":{"gitId":"alanlowzies"},"content":"        fileWriter.append(workoutInFileFormat);","lastModifiedDate":"2022-03-09"},{"lineNumber":679,"author":{"gitId":"alanlowzies"},"content":"        fileWriter.append(System.lineSeparator());","lastModifiedDate":"2022-03-09"},{"lineNumber":680,"author":{"gitId":"alanlowzies"},"content":"        fileWriter.close();","lastModifiedDate":"2022-03-09"},{"lineNumber":681,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":682,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":683,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":684,"author":{"gitId":"alanlowzies"},"content":"     * Converts the data stored in the Workout object into a string that will be written to the","lastModifiedDate":"2022-03-14"},{"lineNumber":685,"author":{"gitId":"alanlowzies"},"content":"     * workout resource file.","lastModifiedDate":"2022-03-14"},{"lineNumber":686,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":687,"author":{"gitId":"alanlowzies"},"content":"     * @param workout The Workout object whose data will be written to the resource file.","lastModifiedDate":"2022-03-14"},{"lineNumber":688,"author":{"gitId":"alanlowzies"},"content":"     * @return The string that will be written to the resource file.","lastModifiedDate":"2022-03-14"},{"lineNumber":689,"author":{"gitId":"alanlowzies"},"content":"     * @throws NullPointerException If the Workout parameter is null.","lastModifiedDate":"2022-03-14"},{"lineNumber":690,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":691,"author":{"gitId":"alanlowzies"},"content":"    public String convertWorkoutToFileDataFormat(Workout workout) throws NullPointerException {","lastModifiedDate":"2022-03-11"},{"lineNumber":692,"author":{"gitId":"alanlowzies"},"content":"        if (workout \u003d\u003d null) {","lastModifiedDate":"2022-03-11"},{"lineNumber":693,"author":{"gitId":"alanlowzies"},"content":"            throw new NullPointerException(\"Workout object inputted into convertWorkoutToFileDataFormat() is null.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":694,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":695,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":696,"author":{"gitId":"alanlowzies"},"content":"        StringBuilder workoutInFileFormat \u003d new StringBuilder();","lastModifiedDate":"2022-03-09"},{"lineNumber":697,"author":{"gitId":"alanlowzies"},"content":"        workoutInFileFormat.append(workout.getExerciseName());","lastModifiedDate":"2022-03-09"},{"lineNumber":698,"author":{"gitId":"alanlowzies"},"content":"        workoutInFileFormat.append(FILE_DATA_DELIMITER);","lastModifiedDate":"2022-03-09"},{"lineNumber":699,"author":{"gitId":"alanlowzies"},"content":"        workoutInFileFormat.append(workout.getRepetitions());","lastModifiedDate":"2022-03-09"},{"lineNumber":700,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":701,"author":{"gitId":"alanlowzies"},"content":"        return workoutInFileFormat.toString();","lastModifiedDate":"2022-03-09"},{"lineNumber":702,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":703,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":704,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-04-05"},{"lineNumber":705,"author":{"gitId":"a1021492980"},"content":"     * Writes a newly-created Plan object into the plan resource file with the correct data format.","lastModifiedDate":"2022-04-05"},{"lineNumber":706,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-04-05"},{"lineNumber":707,"author":{"gitId":"a1021492980"},"content":"     * @param newPlan The newly-created Plan object to be added into the resource file.","lastModifiedDate":"2022-04-05"},{"lineNumber":708,"author":{"gitId":"a1021492980"},"content":"     * @throws IOException          If the plan resource file cannot be opened.","lastModifiedDate":"2022-04-05"},{"lineNumber":709,"author":{"gitId":"a1021492980"},"content":"     * @throws NullPointerException If the Plan parameter is null.","lastModifiedDate":"2022-04-05"},{"lineNumber":710,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-04-05"},{"lineNumber":711,"author":{"gitId":"a1021492980"},"content":"    public void writeNewPlanToFile(Plan newPlan) throws IOException, NullPointerException {","lastModifiedDate":"2022-03-20"},{"lineNumber":712,"author":{"gitId":"a1021492980"},"content":"        String planInFileFormat \u003d convertPlanToFileDataFormat(newPlan);","lastModifiedDate":"2022-03-20"},{"lineNumber":713,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":714,"author":{"gitId":"a1021492980"},"content":"        FileWriter fileWriter \u003d new FileWriter(getPlanFilePath().toString(), true);","lastModifiedDate":"2022-03-20"},{"lineNumber":715,"author":{"gitId":"a1021492980"},"content":"        fileWriter.append(planInFileFormat);","lastModifiedDate":"2022-03-20"},{"lineNumber":716,"author":{"gitId":"a1021492980"},"content":"        fileWriter.append(System.lineSeparator());","lastModifiedDate":"2022-03-20"},{"lineNumber":717,"author":{"gitId":"a1021492980"},"content":"        fileWriter.close();","lastModifiedDate":"2022-03-20"},{"lineNumber":718,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":719,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":720,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-04-05"},{"lineNumber":721,"author":{"gitId":"a1021492980"},"content":"     * Converts the data stored in the Plan object into a string that will be written to the","lastModifiedDate":"2022-04-05"},{"lineNumber":722,"author":{"gitId":"a1021492980"},"content":"     * plan resource file.","lastModifiedDate":"2022-04-05"},{"lineNumber":723,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-04-05"},{"lineNumber":724,"author":{"gitId":"a1021492980"},"content":"     * @param plan The plan object whose data will be written to the resource file.","lastModifiedDate":"2022-04-05"},{"lineNumber":725,"author":{"gitId":"a1021492980"},"content":"     * @return The string that will be written to the resource file.","lastModifiedDate":"2022-04-05"},{"lineNumber":726,"author":{"gitId":"a1021492980"},"content":"     * @throws NullPointerException If the Plan parameter is null.","lastModifiedDate":"2022-04-05"},{"lineNumber":727,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-04-05"},{"lineNumber":728,"author":{"gitId":"a1021492980"},"content":"    public String convertPlanToFileDataFormat(Plan plan) throws NullPointerException {","lastModifiedDate":"2022-03-20"},{"lineNumber":729,"author":{"gitId":"a1021492980"},"content":"        if (plan \u003d\u003d null) {","lastModifiedDate":"2022-03-20"},{"lineNumber":730,"author":{"gitId":"a1021492980"},"content":"            throw new NullPointerException(\"Plan object inputted into convertPlanToFileDataFormat() is null.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":731,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":732,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":733,"author":{"gitId":"a1021492980"},"content":"        StringBuilder planInFileFormat \u003d new StringBuilder();","lastModifiedDate":"2022-03-20"},{"lineNumber":734,"author":{"gitId":"a1021492980"},"content":"        planInFileFormat.append(plan.getPlanName().toLowerCase());","lastModifiedDate":"2022-04-05"},{"lineNumber":735,"author":{"gitId":"a1021492980"},"content":"        planInFileFormat.append(FILE_DATA_DELIMITER);","lastModifiedDate":"2022-03-20"},{"lineNumber":736,"author":{"gitId":"a1021492980"},"content":"        var workoutInPlan \u003d plan.getWorkoutsInPlanList();","lastModifiedDate":"2022-03-20"},{"lineNumber":737,"author":{"gitId":"a1021492980"},"content":"        for (int i \u003d 0; i \u003c workoutInPlan.size(); i++) {","lastModifiedDate":"2022-03-20"},{"lineNumber":738,"author":{"gitId":"a1021492980"},"content":"            planInFileFormat.append(convertWorkoutToFileDataFormat(workoutInPlan.get(i)));","lastModifiedDate":"2022-03-20"},{"lineNumber":739,"author":{"gitId":"a1021492980"},"content":"            if (i !\u003d workoutInPlan.size() - 1) {","lastModifiedDate":"2022-03-20"},{"lineNumber":740,"author":{"gitId":"a1021492980"},"content":"                planInFileFormat.append(FILE_DATA_DELIMITER_PLAN);","lastModifiedDate":"2022-03-20"},{"lineNumber":741,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":742,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":743,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":744,"author":{"gitId":"a1021492980"},"content":"        return planInFileFormat.toString();","lastModifiedDate":"2022-03-20"},{"lineNumber":745,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":746,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":747,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":748,"author":{"gitId":"alanlowzies"},"content":"     * Rewrites the entire list of workouts stored in the WorkoutList object into the workout resource file.","lastModifiedDate":"2022-03-14"},{"lineNumber":749,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":750,"author":{"gitId":"alanlowzies"},"content":"     * @param workoutList An instance of the WorkoutList class.","lastModifiedDate":"2022-03-14"},{"lineNumber":751,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException          If the application is unable to open the workout resource file.","lastModifiedDate":"2022-03-14"},{"lineNumber":752,"author":{"gitId":"alanlowzies"},"content":"     * @throws NullPointerException If a null object is given as a parameter for any of the methods called","lastModifiedDate":"2022-03-14"},{"lineNumber":753,"author":{"gitId":"alanlowzies"},"content":"     *                              by this method.","lastModifiedDate":"2022-03-14"},{"lineNumber":754,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":755,"author":{"gitId":"alanlowzies"},"content":"    public void rewriteAllWorkoutsToFile(WorkoutList workoutList) throws IOException, NullPointerException {","lastModifiedDate":"2022-03-11"},{"lineNumber":756,"author":{"gitId":"alanlowzies"},"content":"        ArrayList\u003cString\u003e listOfWorkouts \u003d workoutList.getWorkoutsDisplayList();","lastModifiedDate":"2022-03-17"},{"lineNumber":757,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":758,"author":{"gitId":"alanlowzies"},"content":"        FileWriter fileWriter \u003d new FileWriter(getWorkoutFilePath().toString());","lastModifiedDate":"2022-03-09"},{"lineNumber":759,"author":{"gitId":"alanlowzies"},"content":"        for (String workoutKey : listOfWorkouts) {","lastModifiedDate":"2022-03-17"},{"lineNumber":760,"author":{"gitId":"alanlowzies"},"content":"            Workout workoutObject \u003d workoutList.getWorkoutFromKey(workoutKey);","lastModifiedDate":"2022-03-17"},{"lineNumber":761,"author":{"gitId":"alanlowzies"},"content":"            assert (workoutObject !\u003d null) : \"Workout object is NULL\";","lastModifiedDate":"2022-03-17"},{"lineNumber":762,"author":{"gitId":"alanlowzies"},"content":"            String workoutInFileFormat \u003d convertWorkoutToFileDataFormat(workoutObject);","lastModifiedDate":"2022-03-17"},{"lineNumber":763,"author":{"gitId":"alanlowzies"},"content":"            fileWriter.append(workoutInFileFormat);","lastModifiedDate":"2022-03-09"},{"lineNumber":764,"author":{"gitId":"alanlowzies"},"content":"            fileWriter.append(System.lineSeparator());","lastModifiedDate":"2022-03-09"},{"lineNumber":765,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":766,"author":{"gitId":"alanlowzies"},"content":"        fileWriter.close();","lastModifiedDate":"2022-03-09"},{"lineNumber":767,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":768,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":769,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":770,"author":{"gitId":"TianaiYan"},"content":"     * Rewrites the entire list of plans stored in the PlanList object into the plan resource file.","lastModifiedDate":"2022-03-23"},{"lineNumber":771,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":772,"author":{"gitId":"TianaiYan"},"content":"     * @param planList An instance of the PlanList class.","lastModifiedDate":"2022-03-23"},{"lineNumber":773,"author":{"gitId":"TianaiYan"},"content":"     * @throws IOException          If the application is unable to open the plan resource file.","lastModifiedDate":"2022-03-23"},{"lineNumber":774,"author":{"gitId":"TianaiYan"},"content":"     * @throws NullPointerException If a null object is given as a parameter for any of the methods called","lastModifiedDate":"2022-03-23"},{"lineNumber":775,"author":{"gitId":"TianaiYan"},"content":"     *                              by this method.","lastModifiedDate":"2022-03-23"},{"lineNumber":776,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":777,"author":{"gitId":"TianaiYan"},"content":"    public void rewriteAllPlansToFile(PlanList planList) throws IOException, NullPointerException {","lastModifiedDate":"2022-03-23"},{"lineNumber":778,"author":{"gitId":"TianaiYan"},"content":"        ArrayList\u003cString\u003e listOfPlans \u003d planList.getPlansDisplayList();","lastModifiedDate":"2022-03-23"},{"lineNumber":779,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":780,"author":{"gitId":"TianaiYan"},"content":"        FileWriter fileWriter \u003d new FileWriter(getPlanFilePath().toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":781,"author":{"gitId":"TianaiYan"},"content":"        for (String planKey : listOfPlans) {","lastModifiedDate":"2022-03-23"},{"lineNumber":782,"author":{"gitId":"TianaiYan"},"content":"            Plan planObject \u003d planList.getPlanFromKey(planKey);","lastModifiedDate":"2022-03-23"},{"lineNumber":783,"author":{"gitId":"TianaiYan"},"content":"            assert (planObject !\u003d null) : \"Plan object is NULL\";","lastModifiedDate":"2022-03-23"},{"lineNumber":784,"author":{"gitId":"TianaiYan"},"content":"            String planInFileFormat \u003d convertPlanToFileDataFormat(planObject);","lastModifiedDate":"2022-03-23"},{"lineNumber":785,"author":{"gitId":"TianaiYan"},"content":"            fileWriter.append(planInFileFormat);","lastModifiedDate":"2022-03-23"},{"lineNumber":786,"author":{"gitId":"TianaiYan"},"content":"            fileWriter.append(System.lineSeparator());","lastModifiedDate":"2022-03-23"},{"lineNumber":787,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":788,"author":{"gitId":"TianaiYan"},"content":"        fileWriter.close();","lastModifiedDate":"2022-03-23"},{"lineNumber":789,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":790,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":791,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-04-05"},{"lineNumber":792,"author":{"gitId":"a1021492980"},"content":"     * Rewrites the entire list of exercises stored in the ExerciseList object into the exercise resource file.","lastModifiedDate":"2022-04-05"},{"lineNumber":793,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-04-05"},{"lineNumber":794,"author":{"gitId":"a1021492980"},"content":"     * @param exerciseList An instance of the ExerciseList class.","lastModifiedDate":"2022-04-05"},{"lineNumber":795,"author":{"gitId":"a1021492980"},"content":"     * @throws IOException          If the application is unable to open the exercise resource file.","lastModifiedDate":"2022-04-05"},{"lineNumber":796,"author":{"gitId":"a1021492980"},"content":"     * @throws NullPointerException If a null object is given as a parameter for any of the methods called","lastModifiedDate":"2022-04-05"},{"lineNumber":797,"author":{"gitId":"a1021492980"},"content":"     *                              by this method.","lastModifiedDate":"2022-04-05"},{"lineNumber":798,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-04-05"},{"lineNumber":799,"author":{"gitId":"a1021492980"},"content":"    public void rewriteAllExercisesToFile(ExerciseList exerciseList) throws IOException, NullPointerException {","lastModifiedDate":"2022-04-05"},{"lineNumber":800,"author":{"gitId":"a1021492980"},"content":"        ArrayList\u003cString\u003e listOfExercises \u003d exerciseList.getExerciseList();","lastModifiedDate":"2022-04-05"},{"lineNumber":801,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":802,"author":{"gitId":"a1021492980"},"content":"        FileWriter fileWriter \u003d new FileWriter(getExerciseFilePath().toString());","lastModifiedDate":"2022-04-05"},{"lineNumber":803,"author":{"gitId":"a1021492980"},"content":"        for (String exerciseKey : listOfExercises) {","lastModifiedDate":"2022-04-05"},{"lineNumber":804,"author":{"gitId":"a1021492980"},"content":"            assert (exerciseKey !\u003d null) : \"Exercise object is NULL\";","lastModifiedDate":"2022-04-05"},{"lineNumber":805,"author":{"gitId":"a1021492980"},"content":"            fileWriter.append(exerciseKey);","lastModifiedDate":"2022-04-05"},{"lineNumber":806,"author":{"gitId":"a1021492980"},"content":"            fileWriter.append(System.lineSeparator());","lastModifiedDate":"2022-04-05"},{"lineNumber":807,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":808,"author":{"gitId":"a1021492980"},"content":"        fileWriter.close();","lastModifiedDate":"2022-04-05"},{"lineNumber":809,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":810,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":811,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":812,"author":{"gitId":"alanlowzies"},"content":"     * Rewrites the entire list of Days and their corresponding plans stored in the DayList object into","lastModifiedDate":"2022-03-23"},{"lineNumber":813,"author":{"gitId":"alanlowzies"},"content":"     * the schedule resource file.","lastModifiedDate":"2022-03-23"},{"lineNumber":814,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":815,"author":{"gitId":"alanlowzies"},"content":"     * @param dayList An instance of the DayList class.","lastModifiedDate":"2022-03-23"},{"lineNumber":816,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If the application is unable to open the schedule resource file.","lastModifiedDate":"2022-03-23"},{"lineNumber":817,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":818,"author":{"gitId":"alanlowzies"},"content":"    public void rewriteAllDaysScheduleToFile(DayList dayList) throws IOException {","lastModifiedDate":"2022-03-23"},{"lineNumber":819,"author":{"gitId":"alanlowzies"},"content":"        Day[] listOfDaysPlans \u003d dayList.getDayList();","lastModifiedDate":"2022-03-23"},{"lineNumber":820,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":821,"author":{"gitId":"alanlowzies"},"content":"        FileWriter fileWriter \u003d new FileWriter(getScheduleFilePath().toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":822,"author":{"gitId":"alanlowzies"},"content":"        for (int i \u003d 0; i \u003c listOfDaysPlans.length; i +\u003d 1) {","lastModifiedDate":"2022-03-23"},{"lineNumber":823,"author":{"gitId":"alanlowzies"},"content":"            if (listOfDaysPlans[i] \u003d\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":824,"author":{"gitId":"alanlowzies"},"content":"                // Day has no plan, nothing to write to the file. Proceed to the next Day.","lastModifiedDate":"2022-03-23"},{"lineNumber":825,"author":{"gitId":"alanlowzies"},"content":"                continue;","lastModifiedDate":"2022-03-23"},{"lineNumber":826,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":827,"author":{"gitId":"alanlowzies"},"content":"            assert (listOfDaysPlans[i] !\u003d null) : \"Element referenced is null, but it should not be.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":828,"author":{"gitId":"alanlowzies"},"content":"            String dayScheduleInFileFormat \u003d convertDayScheduleToFileDataFormat(listOfDaysPlans[i]);","lastModifiedDate":"2022-03-23"},{"lineNumber":829,"author":{"gitId":"alanlowzies"},"content":"            fileWriter.append(dayScheduleInFileFormat);","lastModifiedDate":"2022-03-23"},{"lineNumber":830,"author":{"gitId":"alanlowzies"},"content":"            fileWriter.append(System.lineSeparator());","lastModifiedDate":"2022-03-23"},{"lineNumber":831,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":832,"author":{"gitId":"alanlowzies"},"content":"        fileWriter.close();","lastModifiedDate":"2022-03-23"},{"lineNumber":833,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":834,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":835,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":836,"author":{"gitId":"alanlowzies"},"content":"     * Converts the data stored in the Day object into a string that will be written to the","lastModifiedDate":"2022-03-23"},{"lineNumber":837,"author":{"gitId":"alanlowzies"},"content":"     * schedule resource file.","lastModifiedDate":"2022-03-23"},{"lineNumber":838,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":839,"author":{"gitId":"alanlowzies"},"content":"     * @param day The Day object whose data will be written to the schedule resource file.","lastModifiedDate":"2022-03-23"},{"lineNumber":840,"author":{"gitId":"alanlowzies"},"content":"     * @return A string representing the Day object data.","lastModifiedDate":"2022-03-23"},{"lineNumber":841,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":842,"author":{"gitId":"alanlowzies"},"content":"    public String convertDayScheduleToFileDataFormat(Day day) {","lastModifiedDate":"2022-03-23"},{"lineNumber":843,"author":{"gitId":"alanlowzies"},"content":"        assert (day !\u003d null) : \"Day object is null, but it should not be.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":844,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":845,"author":{"gitId":"alanlowzies"},"content":"        StringBuilder dayScheduleInFileFormat \u003d new StringBuilder();","lastModifiedDate":"2022-03-23"},{"lineNumber":846,"author":{"gitId":"alanlowzies"},"content":"        dayScheduleInFileFormat.append(day.getDayNumber());","lastModifiedDate":"2022-03-23"},{"lineNumber":847,"author":{"gitId":"alanlowzies"},"content":"        dayScheduleInFileFormat.append(FILE_DATA_DELIMITER);","lastModifiedDate":"2022-03-23"},{"lineNumber":848,"author":{"gitId":"alanlowzies"},"content":"        dayScheduleInFileFormat.append(day.getPlanForThisDay());","lastModifiedDate":"2022-03-23"},{"lineNumber":849,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":850,"author":{"gitId":"alanlowzies"},"content":"        return dayScheduleInFileFormat.toString();","lastModifiedDate":"2022-03-23"},{"lineNumber":851,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":852,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"emilysim00":1,"alanlowzies":611,"TianaiYan":23,"a1021492980":217}},{"path":"src/main/java/storage/LogHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package storage;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":" * Handles the management of the logs. In particular, it contains methods to create the log file","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":" * as well as to direct the Logger objects used in the various classes in WerkIt! to write to the","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":" * log file specified in this class. Note that Logger objects will still need to be instantiated","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":" * in the classes that needs to be logged.","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"public class LogHandler {","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"    public static final String LOGS_DIRECTORY_NAME \u003d \"werkItLogs\";","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"    public static final String LOGS_FILENAME \u003d \"logs.log\";","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"    private static FileHandler logFileHandler;","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"    private static String workingDirectory \u003d System.getProperty(FileManager.PROPERTY_USER_WORKING_DIRECTORY);","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"    private static Path logFileDirectory \u003d Paths.get(workingDirectory, LOGS_DIRECTORY_NAME);","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"    private static Path logFilePath \u003d Paths.get(workingDirectory, LOGS_DIRECTORY_NAME, LOGS_FILENAME);","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"     * Resets the LogManager behaviour to allow logs to be written to the specified log file.","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"     * In addition, if necessary, creates the directory and file that will contain the logs.","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"     * This method should be preferably called the moment the program is started (i.e. located","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"     * at the start of the main method).","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"    public static void startLogHandler() {","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"            checkAndCreateLogsDirectory();","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Logs directory could not be created. Exiting program...\");","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"            System.exit(-1);","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"        assert (Files.exists(logFileDirectory)) : \"Logs directory does not exist.\";","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"            logFileHandler \u003d new FileHandler(logFilePath.toString(), true);","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"            logFileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"WARNING! Log file could not be opened. You may continue to use the\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"                    + \"program, but any logs generated in this application\u0027s session will not be\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"                    + \"logged to the file.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"     * Directs the Logger object specified as the parameter to use the FileHandler specified in this","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"     * class as its log handler.","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"     * @param logger The Logger object to direct it to a handler.","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"    public static void linkToFileLogger(Logger logger) {","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"        logger.addHandler(logFileHandler);","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"     * Checks if the required directory to store the log file exists. If it does not, the directory","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"     * will be created.","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If the required directory cannot be created.","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"    public static void checkAndCreateLogsDirectory() throws IOException {","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"        if (!Files.exists(logFileDirectory)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"            Files.createDirectory(logFileDirectory);","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"alanlowzies":76}},{"path":"src/main/java/storage/UnknownFileException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package storage;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"public class UnknownFileException extends Exception {","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"    public static final String UNKNOWN_FILE_MSG \u003d \"Uh on, an unknown file name was encountered.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"    private String unknownFilename;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"    public UnknownFileException(String unknownFilename, String errorMessage) {","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"        super(errorMessage);","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"        this.unknownFilename \u003d unknownFilename;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"    public String getUnknownFilename() {","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"        return this.unknownFilename;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"alanlowzies":16}},{"path":"src/main/java/textcolors/TextColor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"package textcolors;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":" * This class contains different ANSI color codes which can be used to color texts.","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"public class TextColor {","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"     * ANSI codes for different colors.","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"    public static final String COLOR_RESET \u003d \"\\u001B[0m\";","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"    public static final String COLOR_BLACK \u003d \"\\u001B[30m\";","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"    public static final String COLOR_RED \u003d \"\\u001B[31m\";","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"    public static final String COLOR_GREEN \u003d \"\\u001B[32m\";","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"    public static final String COLOR_YELLOW \u003d \"\\u001B[33m\";","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"    public static final String COLOR_BLUE \u003d \"\\u001B[34m\";","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"    public static final String COLOR_PURPLE \u003d \"\\u001B[35m\";","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"    public static final String COLOR_CYAN \u003d \"\\u001B[36m\";","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"    public static final String COLOR_WHITE \u003d \"\\u001B[37m\";","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"a1021492980":19}},{"path":"src/main/java/werkit/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package werkit;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"import commands.Command;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"import commands.ExitCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"import commands.InvalidCommandException;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"import commands.WorkoutCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"import commands.HelpCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"import commands.ExerciseCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"import commands.SearchCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"import commands.PlanCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"import commands.ScheduleCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"import data.exercises.InvalidExerciseException;","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"import data.schedule.DayList;","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"import data.workouts.WorkoutList;","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"import storage.FileManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"import static commands.PlanCommand.ACTION_KEYWORD_DETAILS;","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"import static commands.ScheduleCommand.ACTION_KEYWORD_UPDATE;","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"import static commands.ScheduleCommand.ACTION_KEYWORD_CLEAR_ALL;","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"import static commands.ScheduleCommand.ACTION_KEYWORD_CLEAR;","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"import static commands.WorkoutCommand.ACTION_KEYWORD_CREATE;","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"import static commands.WorkoutCommand.ACTION_KEYWORD_DELETE;","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":" * This class will parse the input that the user enters into the WerkIt! application into data","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":" * that can be further processed by other classes in this application.","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":" * Design of the commands is inspired by the AddressBook-Level2 project","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":" * Link: https://se-education.org/addressbook-level2/","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"public class Parser {","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"    private UI ui;","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"    private ExerciseList exerciseList;","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"    private WorkoutList workoutList;","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"Musfirahe0556596"},"content":"    private PlanList planList;","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"emilysim00"},"content":"    private DayList dayList;","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"    private FileManager fileManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"a1021492980"},"content":"    public static final String SPACE_CHARACTER \u003d \" \";","lastModifiedDate":"2022-04-02"},{"lineNumber":46,"author":{"gitId":"a1021492980"},"content":"    public static final int EXPECTED_NUMBER_OF_PARAMETERS_HELP \u003d 1;","lastModifiedDate":"2022-04-02"},{"lineNumber":47,"author":{"gitId":"a1021492980"},"content":"    public static final int EXPECTED_NUMBER_OF_PARAMETERS_EXIT \u003d 1;","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"a1021492980"},"content":"    public static final int EXPECTED_NUMBER_OF_PARAMETERS_SEARCH_SPACE \u003d 2;","lastModifiedDate":"2022-04-02"},{"lineNumber":49,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final int EXPECTED_NUMBER_OF_PARAMETERS_NO_ARGUMENTS \u003d 2;","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final int EXPECTED_NUMBER_OF_PARAMETERS_WITH_ARGUMENTS \u003d 3;","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"a1021492980"},"content":"    private static Logger logger \u003d Logger.getLogger(Parser.class.getName());","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"     * Constructs the Parser object with the required components for this instance to operate.","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"     * @param ui           An instance of the UI class.","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"     * @param exerciseList An instance of the ExerciseList class.","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"     * @param workoutList  An instance of the WorkoutList class.","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"emilysim00"},"content":"     * @param planList An instance of the PlanList class.","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"emilysim00"},"content":"     * @param dayList An instance of the DayList class.","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"     * @param fileManager  An instance of the FileManager class.","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"Musfirahe0556596"},"content":"    public Parser(UI ui, ExerciseList exerciseList, WorkoutList workoutList,","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"emilysim00"},"content":"                  FileManager fileManager, PlanList planList, DayList dayList) {","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-03-05"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"        this.exerciseList \u003d exerciseList;","lastModifiedDate":"2022-03-05"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"        this.workoutList \u003d workoutList;","lastModifiedDate":"2022-03-05"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"        this.fileManager \u003d fileManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"Musfirahe0556596"},"content":"        this.planList \u003d planList;","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"emilysim00"},"content":"        this.dayList \u003d dayList;","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"        LogHandler.linkToFileLogger(logger);","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"     * Gets the UI object stored in this Parser object.","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"alanlowzies"},"content":"     * @return The UI object.","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"alanlowzies"},"content":"    public UI getUi() {","lastModifiedDate":"2022-03-05"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"        return ui;","lastModifiedDate":"2022-03-05"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":83,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"     * Gets the ExerciseList object stored in this Parser object.","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"     * @return The ExerciseList object.","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"alanlowzies"},"content":"    public ExerciseList getExerciseList() {","lastModifiedDate":"2022-03-05"},{"lineNumber":90,"author":{"gitId":"alanlowzies"},"content":"        return exerciseList;","lastModifiedDate":"2022-03-05"},{"lineNumber":91,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":92,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":93,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"alanlowzies"},"content":"     * Gets the WorkoutList object stored in this Parser object.","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"alanlowzies"},"content":"     * @return The WorkoutList object.","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"alanlowzies"},"content":"    public WorkoutList getWorkoutList() {","lastModifiedDate":"2022-03-05"},{"lineNumber":99,"author":{"gitId":"alanlowzies"},"content":"        return workoutList;","lastModifiedDate":"2022-03-05"},{"lineNumber":100,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":101,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":102,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"alanlowzies"},"content":"     * Parses the user\u0027s input and determines the correct command object to instantiate.","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"alanlowzies"},"content":"     * @param userInput The unparsed input given by the user.","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"alanlowzies"},"content":"     * @return A subclass of the Command object. The type of Command object is determined based on the","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"alanlowzies"},"content":"     *         user\u0027s input.","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"alanlowzies"},"content":"     * @throws ArrayIndexOutOfBoundsException If the user\u0027s input contains insufficient information to parse.","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidCommandException        If the user\u0027s input contains invalid or insufficient information","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"alanlowzies"},"content":"     *                                        to parse.","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"alanlowzies"},"content":"    public Command parseUserInput(String userInput) throws ArrayIndexOutOfBoundsException,","lastModifiedDate":"2022-03-05"},{"lineNumber":113,"author":{"gitId":"alanlowzies"},"content":"            InvalidCommandException {","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"alanlowzies"},"content":"        // Check for illegal characters","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"alanlowzies"},"content":"        boolean hasIllegalCharacters \u003d checkInputForIllegalCharacters(userInput);","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"alanlowzies"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"alanlowzies"},"content":"        if (hasIllegalCharacters) {","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.WARNING, \"Illegal character used by user.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"alanlowzies"},"content":"            throw new InvalidCommandException(className, InvalidCommandException.ILLEGAL_CHARACTER_USED_ERROR_MSG);","lastModifiedDate":"2022-03-09"},{"lineNumber":120,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":121,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"alanlowzies"},"content":"        // Determine the type of Command subclass to instantiate","lastModifiedDate":"2022-03-05"},{"lineNumber":123,"author":{"gitId":"alanlowzies"},"content":"        String commandKeyword \u003d userInput.split(\" \", 2)[0];","lastModifiedDate":"2022-03-05"},{"lineNumber":124,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":125,"author":{"gitId":"alanlowzies"},"content":"        switch (commandKeyword) {","lastModifiedDate":"2022-03-05"},{"lineNumber":126,"author":{"gitId":"alanlowzies"},"content":"        case WorkoutCommand.KEYWORD_BASE:","lastModifiedDate":"2022-04-09"},{"lineNumber":127,"author":{"gitId":"alanlowzies"},"content":"            return createWorkoutCommand(userInput);","lastModifiedDate":"2022-03-05"},{"lineNumber":128,"author":{"gitId":"alanlowzies"},"content":"        case ExitCommand.KEYWORD_BASE:","lastModifiedDate":"2022-04-09"},{"lineNumber":129,"author":{"gitId":"alanlowzies"},"content":"            return createExitCommand(userInput);","lastModifiedDate":"2022-03-05"},{"lineNumber":130,"author":{"gitId":"alanlowzies"},"content":"        case HelpCommand.KEYWORD_BASE:","lastModifiedDate":"2022-04-09"},{"lineNumber":131,"author":{"gitId":"a1021492980"},"content":"            return createHelpCommand(userInput);","lastModifiedDate":"2022-03-09"},{"lineNumber":132,"author":{"gitId":"a1021492980"},"content":"        case ExerciseCommand.KEYWORD_BASE:","lastModifiedDate":"2022-04-09"},{"lineNumber":133,"author":{"gitId":"a1021492980"},"content":"            return createExerciseCommand(userInput);","lastModifiedDate":"2022-03-10"},{"lineNumber":134,"author":{"gitId":"a1021492980"},"content":"        case SearchCommand.KEYWORD_BASE:","lastModifiedDate":"2022-04-09"},{"lineNumber":135,"author":{"gitId":"a1021492980"},"content":"            return createSearchCommand(userInput);","lastModifiedDate":"2022-03-19"},{"lineNumber":136,"author":{"gitId":"Musfirahe0556596"},"content":"        case PlanCommand.KEYWORD_BASE:","lastModifiedDate":"2022-04-08"},{"lineNumber":137,"author":{"gitId":"Musfirahe0556596"},"content":"            return createPlanCommand(userInput);","lastModifiedDate":"2022-03-19"},{"lineNumber":138,"author":{"gitId":"emilysim00"},"content":"        case ScheduleCommand.KEYWORD_BASE:","lastModifiedDate":"2022-04-08"},{"lineNumber":139,"author":{"gitId":"emilysim00"},"content":"            return createScheduleCommand(userInput);","lastModifiedDate":"2022-03-21"},{"lineNumber":140,"author":{"gitId":"alanlowzies"},"content":"        default:","lastModifiedDate":"2022-03-05"},{"lineNumber":141,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.WARNING, \"Unknown command entered by user.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"alanlowzies"},"content":"            throw new InvalidCommandException(className, InvalidCommandException.INVALID_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-05"},{"lineNumber":143,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":144,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":145,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":146,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":147,"author":{"gitId":"alanlowzies"},"content":"     * Checks if the user\u0027s input contains illegal characters. Illegal characters are characters that are","lastModifiedDate":"2022-03-14"},{"lineNumber":148,"author":{"gitId":"alanlowzies"},"content":"     * required by the application for purposes such as reading/writing to resource files. Thus, these","lastModifiedDate":"2022-03-14"},{"lineNumber":149,"author":{"gitId":"alanlowzies"},"content":"     * characters cannot be used by the user.","lastModifiedDate":"2022-03-14"},{"lineNumber":150,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":151,"author":{"gitId":"alanlowzies"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-14"},{"lineNumber":152,"author":{"gitId":"alanlowzies"},"content":"     * @return Returns true if the user\u0027s input contains at least one illegal character. Otherwise,","lastModifiedDate":"2022-03-14"},{"lineNumber":153,"author":{"gitId":"alanlowzies"},"content":"     *         returns false.","lastModifiedDate":"2022-03-14"},{"lineNumber":154,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":155,"author":{"gitId":"alanlowzies"},"content":"    private boolean checkInputForIllegalCharacters(String userInput) {","lastModifiedDate":"2022-03-09"},{"lineNumber":156,"author":{"gitId":"alanlowzies"},"content":"        for (String illegalCharacter : FileManager.ILLEGAL_CHARACTERS) {","lastModifiedDate":"2022-03-09"},{"lineNumber":157,"author":{"gitId":"alanlowzies"},"content":"            if (userInput.contains(illegalCharacter)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":158,"author":{"gitId":"alanlowzies"},"content":"                return true;","lastModifiedDate":"2022-03-09"},{"lineNumber":159,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-03-09"},{"lineNumber":160,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":161,"author":{"gitId":"alanlowzies"},"content":"        return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":162,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":163,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":164,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":165,"author":{"gitId":"alanlowzies"},"content":"     * Creates a new workout command with the appropriate parameters stored into the object.","lastModifiedDate":"2022-03-14"},{"lineNumber":166,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":167,"author":{"gitId":"alanlowzies"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-14"},{"lineNumber":168,"author":{"gitId":"alanlowzies"},"content":"     * @return A WorkoutCommand object containing the parsed parameters obtained from the user\u0027s input.","lastModifiedDate":"2022-03-14"},{"lineNumber":169,"author":{"gitId":"alanlowzies"},"content":"     * @throws ArrayIndexOutOfBoundsException If the user\u0027s input contains insufficient information to parse.","lastModifiedDate":"2022-03-14"},{"lineNumber":170,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidCommandException        If the user\u0027s input contains invalid or insufficient information","lastModifiedDate":"2022-03-14"},{"lineNumber":171,"author":{"gitId":"alanlowzies"},"content":"     *                                        to parse.","lastModifiedDate":"2022-03-14"},{"lineNumber":172,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":173,"author":{"gitId":"alanlowzies"},"content":"    public WorkoutCommand createWorkoutCommand(String userInput) throws ArrayIndexOutOfBoundsException,","lastModifiedDate":"2022-03-05"},{"lineNumber":174,"author":{"gitId":"alanlowzies"},"content":"            InvalidCommandException {","lastModifiedDate":"2022-03-14"},{"lineNumber":175,"author":{"gitId":"alanlowzies"},"content":"        // Determine the action the user has entered","lastModifiedDate":"2022-03-05"},{"lineNumber":176,"author":{"gitId":"alanlowzies"},"content":"        String actionKeyword \u003d userInput.split(\" \", 3)[1];","lastModifiedDate":"2022-03-05"},{"lineNumber":177,"author":{"gitId":"emilysim00"},"content":"        String arguments \u003d null;","lastModifiedDate":"2022-03-07"},{"lineNumber":178,"author":{"gitId":"Musfirahe0556596"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-11"},{"lineNumber":179,"author":{"gitId":"emilysim00"},"content":"        switch (actionKeyword) {","lastModifiedDate":"2022-03-07"},{"lineNumber":180,"author":{"gitId":"alanlowzies"},"content":"        case WorkoutCommand.ACTION_KEYWORD_CREATE:","lastModifiedDate":"2022-04-09"},{"lineNumber":181,"author":{"gitId":"alanlowzies"},"content":"            arguments \u003d getArgsForCreateAction(userInput);","lastModifiedDate":"2022-04-09"},{"lineNumber":182,"author":{"gitId":"Musfirahe0556596"},"content":"            break;","lastModifiedDate":"2022-03-11"},{"lineNumber":183,"author":{"gitId":"alanlowzies"},"content":"        case WorkoutCommand.ACTION_KEYWORD_DELETE:","lastModifiedDate":"2022-04-09"},{"lineNumber":184,"author":{"gitId":"alanlowzies"},"content":"            arguments \u003d getArgsForWorkoutDeleteAction(userInput);","lastModifiedDate":"2022-04-09"},{"lineNumber":185,"author":{"gitId":"emilysim00"},"content":"            break;","lastModifiedDate":"2022-03-07"},{"lineNumber":186,"author":{"gitId":"alanlowzies"},"content":"        case WorkoutCommand.ACTION_KEYWORD_UPDATE:","lastModifiedDate":"2022-04-09"},{"lineNumber":187,"author":{"gitId":"alanlowzies"},"content":"            arguments \u003d getArgsForWorkoutUpdateAction(userInput);","lastModifiedDate":"2022-04-09"},{"lineNumber":188,"author":{"gitId":"TianaiYan"},"content":"            break;","lastModifiedDate":"2022-03-12"},{"lineNumber":189,"author":{"gitId":"alanlowzies"},"content":"        case WorkoutCommand.ACTION_KEYWORD_LIST:","lastModifiedDate":"2022-04-09"},{"lineNumber":190,"author":{"gitId":"alanlowzies"},"content":"            checkWorkoutListActionArgs(userInput);","lastModifiedDate":"2022-04-09"},{"lineNumber":191,"author":{"gitId":"emilysim00"},"content":"            break;","lastModifiedDate":"2022-03-07"},{"lineNumber":192,"author":{"gitId":"alanlowzies"},"content":"        default:","lastModifiedDate":"2022-03-10"},{"lineNumber":193,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.WARNING, \"User has entered an invalid workout command action.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":194,"author":{"gitId":"a1021492980"},"content":"            throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-16"},{"lineNumber":195,"author":{"gitId":"a1021492980"},"content":"                    InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-16"},{"lineNumber":196,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":197,"author":{"gitId":"TianaiYan"},"content":"        return new WorkoutCommand(userInput, fileManager, workoutList, planList, actionKeyword, arguments);","lastModifiedDate":"2022-03-27"},{"lineNumber":198,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":199,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":200,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":201,"author":{"gitId":"alanlowzies"},"content":"     * Checks if the workout /list command given by the user does not have extra arguments.","lastModifiedDate":"2022-04-09"},{"lineNumber":202,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-04-09"},{"lineNumber":203,"author":{"gitId":"alanlowzies"},"content":"     * @param userInput The workout /list command given by the user.","lastModifiedDate":"2022-04-09"},{"lineNumber":204,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidCommandException If the user input contains more arguments than expected.","lastModifiedDate":"2022-04-09"},{"lineNumber":205,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":206,"author":{"gitId":"alanlowzies"},"content":"    public void checkWorkoutListActionArgs(String userInput) throws InvalidCommandException {","lastModifiedDate":"2022-04-09"},{"lineNumber":207,"author":{"gitId":"alanlowzies"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-04-09"},{"lineNumber":208,"author":{"gitId":"alanlowzies"},"content":"        if (userInput.split(\" \", -1).length \u003e EXPECTED_NUMBER_OF_PARAMETERS_NO_ARGUMENTS) {","lastModifiedDate":"2022-04-09"},{"lineNumber":209,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.WARNING, \"User has entered an invalid list workout command action.\");","lastModifiedDate":"2022-04-09"},{"lineNumber":210,"author":{"gitId":"alanlowzies"},"content":"            throw new InvalidCommandException(className,","lastModifiedDate":"2022-04-09"},{"lineNumber":211,"author":{"gitId":"alanlowzies"},"content":"                    InvalidCommandException.INVALID_WORKOUT_LIST_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-04-09"},{"lineNumber":212,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":213,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":214,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":215,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":216,"author":{"gitId":"alanlowzies"},"content":"     * Returns the workout /update arguments given by the user if the input has the right number of arguments.","lastModifiedDate":"2022-04-09"},{"lineNumber":217,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-04-09"},{"lineNumber":218,"author":{"gitId":"alanlowzies"},"content":"     * @param userInput The workout /update command given by the user.","lastModifiedDate":"2022-04-09"},{"lineNumber":219,"author":{"gitId":"alanlowzies"},"content":"     * @return A String representation of the arguments given by the user.","lastModifiedDate":"2022-04-09"},{"lineNumber":220,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidCommandException If the user input contains an incorrect number of arguments.","lastModifiedDate":"2022-04-09"},{"lineNumber":221,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":222,"author":{"gitId":"alanlowzies"},"content":"    public String getArgsForWorkoutUpdateAction(String userInput) throws InvalidCommandException {","lastModifiedDate":"2022-04-09"},{"lineNumber":223,"author":{"gitId":"alanlowzies"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-04-09"},{"lineNumber":224,"author":{"gitId":"alanlowzies"},"content":"        if (userInput.split(\" \", 3).length \u003c EXPECTED_NUMBER_OF_PARAMETERS_WITH_ARGUMENTS) {","lastModifiedDate":"2022-04-09"},{"lineNumber":225,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.WARNING, \"User has entered an invalid update workout command action.\");","lastModifiedDate":"2022-04-09"},{"lineNumber":226,"author":{"gitId":"alanlowzies"},"content":"            throw new InvalidCommandException(className,","lastModifiedDate":"2022-04-09"},{"lineNumber":227,"author":{"gitId":"alanlowzies"},"content":"                    InvalidCommandException.INVALID_UPDATE_WORKOUT_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-04-09"},{"lineNumber":228,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":229,"author":{"gitId":"alanlowzies"},"content":"        String arguments \u003d userInput.split(\" \", 3)[2];","lastModifiedDate":"2022-04-09"},{"lineNumber":230,"author":{"gitId":"alanlowzies"},"content":"        return arguments;","lastModifiedDate":"2022-04-09"},{"lineNumber":231,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":232,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":233,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":234,"author":{"gitId":"alanlowzies"},"content":"     * Returns the workout /delete arguments given by the user if the input has the right number of arguments.","lastModifiedDate":"2022-04-09"},{"lineNumber":235,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-04-09"},{"lineNumber":236,"author":{"gitId":"alanlowzies"},"content":"     * @param userInput The workout /delete command given by the user.","lastModifiedDate":"2022-04-09"},{"lineNumber":237,"author":{"gitId":"alanlowzies"},"content":"     * @return A String representation of the arguments given by the user.","lastModifiedDate":"2022-04-09"},{"lineNumber":238,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidCommandException If the user input contains an incorrect number of arguments.","lastModifiedDate":"2022-04-09"},{"lineNumber":239,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":240,"author":{"gitId":"alanlowzies"},"content":"    public String getArgsForWorkoutDeleteAction(String userInput) throws InvalidCommandException {","lastModifiedDate":"2022-04-09"},{"lineNumber":241,"author":{"gitId":"alanlowzies"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-04-09"},{"lineNumber":242,"author":{"gitId":"alanlowzies"},"content":"        if (userInput.split(\" \", 3).length \u003c EXPECTED_NUMBER_OF_PARAMETERS_WITH_ARGUMENTS) {","lastModifiedDate":"2022-04-09"},{"lineNumber":243,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.WARNING, \"User has entered an invalid delete workout command action.\");","lastModifiedDate":"2022-04-09"},{"lineNumber":244,"author":{"gitId":"alanlowzies"},"content":"            throw new InvalidCommandException(className,","lastModifiedDate":"2022-04-09"},{"lineNumber":245,"author":{"gitId":"alanlowzies"},"content":"                    InvalidCommandException.INVALID_DELETE_WORKOUT_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-04-09"},{"lineNumber":246,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":247,"author":{"gitId":"alanlowzies"},"content":"        String arguments \u003d userInput.split(\" \", 3)[2];","lastModifiedDate":"2022-04-09"},{"lineNumber":248,"author":{"gitId":"alanlowzies"},"content":"        return arguments;","lastModifiedDate":"2022-04-09"},{"lineNumber":249,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":250,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":251,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":252,"author":{"gitId":"alanlowzies"},"content":"     * Returns the workout /new arguments given by the user if the input has the right number of arguments.","lastModifiedDate":"2022-04-09"},{"lineNumber":253,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-04-09"},{"lineNumber":254,"author":{"gitId":"alanlowzies"},"content":"     * @param userInput The workout /new command given by the user.","lastModifiedDate":"2022-04-09"},{"lineNumber":255,"author":{"gitId":"alanlowzies"},"content":"     * @return A String representation of the arguments given by the user.","lastModifiedDate":"2022-04-09"},{"lineNumber":256,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidCommandException If the user input contains an incorrect number of arguments.","lastModifiedDate":"2022-04-09"},{"lineNumber":257,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":258,"author":{"gitId":"alanlowzies"},"content":"    public String getArgsForCreateAction(String userInput) throws InvalidCommandException {","lastModifiedDate":"2022-04-09"},{"lineNumber":259,"author":{"gitId":"alanlowzies"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-04-09"},{"lineNumber":260,"author":{"gitId":"alanlowzies"},"content":"        if (userInput.split(\" \", 3).length \u003c EXPECTED_NUMBER_OF_PARAMETERS_WITH_ARGUMENTS) {","lastModifiedDate":"2022-04-09"},{"lineNumber":261,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.WARNING, \"User has entered an invalid create workout command action.\");","lastModifiedDate":"2022-04-09"},{"lineNumber":262,"author":{"gitId":"alanlowzies"},"content":"            throw new InvalidCommandException(className,","lastModifiedDate":"2022-04-09"},{"lineNumber":263,"author":{"gitId":"alanlowzies"},"content":"                    InvalidCommandException.INVALID_NEW_WORKOUT_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-04-09"},{"lineNumber":264,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":265,"author":{"gitId":"alanlowzies"},"content":"        String arguments \u003d userInput.split(\" \", 3)[2];","lastModifiedDate":"2022-04-09"},{"lineNumber":266,"author":{"gitId":"alanlowzies"},"content":"        return arguments;","lastModifiedDate":"2022-04-09"},{"lineNumber":267,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":268,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":269,"author":{"gitId":"a1021492980"},"content":"    public ExitCommand createExitCommand(String userInput) throws InvalidCommandException {","lastModifiedDate":"2022-04-06"},{"lineNumber":270,"author":{"gitId":"a1021492980"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-04-06"},{"lineNumber":271,"author":{"gitId":"a1021492980"},"content":"        if (userInput.trim().split(\" \", -1).length \u003e EXPECTED_NUMBER_OF_PARAMETERS_EXIT) {","lastModifiedDate":"2022-04-06"},{"lineNumber":272,"author":{"gitId":"a1021492980"},"content":"            throw new InvalidCommandException(className,","lastModifiedDate":"2022-04-06"},{"lineNumber":273,"author":{"gitId":"a1021492980"},"content":"                    InvalidCommandException.INVALID_EXIT_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-04-06"},{"lineNumber":274,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":275,"author":{"gitId":"alanlowzies"},"content":"        ExitCommand newCommand \u003d new ExitCommand(userInput);","lastModifiedDate":"2022-03-05"},{"lineNumber":276,"author":{"gitId":"alanlowzies"},"content":"        return newCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":277,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":278,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":279,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":280,"author":{"gitId":"a1021492980"},"content":"     * Creates a new exercise command with the appropriate parameters stored into the object.","lastModifiedDate":"2022-03-23"},{"lineNumber":281,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":282,"author":{"gitId":"a1021492980"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-23"},{"lineNumber":283,"author":{"gitId":"a1021492980"},"content":"     * @return A ExerciseCommand object containing the parsed parameters obtained from the user\u0027s input.","lastModifiedDate":"2022-03-23"},{"lineNumber":284,"author":{"gitId":"a1021492980"},"content":"     * @throws ArrayIndexOutOfBoundsException If the user\u0027s input contains insufficient information to parse.","lastModifiedDate":"2022-03-23"},{"lineNumber":285,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidCommandException        If the user\u0027s input contains invalid or insufficient information","lastModifiedDate":"2022-03-23"},{"lineNumber":286,"author":{"gitId":"a1021492980"},"content":"     *                                        to parse.","lastModifiedDate":"2022-03-23"},{"lineNumber":287,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":288,"author":{"gitId":"Musfirahe0556596"},"content":"    public ExerciseCommand createExerciseCommand(String userInput) throws","lastModifiedDate":"2022-03-14"},{"lineNumber":289,"author":{"gitId":"Musfirahe0556596"},"content":"            InvalidCommandException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2022-03-14"},{"lineNumber":290,"author":{"gitId":"a1021492980"},"content":"        logger.entering(getClass().getName(), \"createExerciseCommand\");","lastModifiedDate":"2022-03-13"},{"lineNumber":291,"author":{"gitId":"a1021492980"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-16"},{"lineNumber":292,"author":{"gitId":"a1021492980"},"content":"        String actionKeyword \u003d userInput.split(\" \", 3)[1];","lastModifiedDate":"2022-03-10"},{"lineNumber":293,"author":{"gitId":"a1021492980"},"content":"        String arguments \u003d null;","lastModifiedDate":"2022-03-10"},{"lineNumber":294,"author":{"gitId":"a1021492980"},"content":"        switch (actionKeyword) {","lastModifiedDate":"2022-03-10"},{"lineNumber":295,"author":{"gitId":"a1021492980"},"content":"        case ExerciseCommand.ACTION_KEYWORD_LIST:","lastModifiedDate":"2022-04-09"},{"lineNumber":296,"author":{"gitId":"a1021492980"},"content":"            if (userInput.split(\" \", -1).length \u003e EXPECTED_NUMBER_OF_PARAMETERS_NO_ARGUMENTS) {","lastModifiedDate":"2022-03-16"},{"lineNumber":297,"author":{"gitId":"a1021492980"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid list exercise command action.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":298,"author":{"gitId":"a1021492980"},"content":"                throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-16"},{"lineNumber":299,"author":{"gitId":"a1021492980"},"content":"                        InvalidCommandException.INVALID_EXERCISE_LIST_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-16"},{"lineNumber":300,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":301,"author":{"gitId":"a1021492980"},"content":"            break;","lastModifiedDate":"2022-03-10"},{"lineNumber":302,"author":{"gitId":"a1021492980"},"content":"        default:","lastModifiedDate":"2022-03-10"},{"lineNumber":303,"author":{"gitId":"a1021492980"},"content":"            logger.log(Level.WARNING, \"User has entered an invalid action under exercise command.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":304,"author":{"gitId":"a1021492980"},"content":"            throw new InvalidCommandException(className, InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-10"},{"lineNumber":305,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":306,"author":{"gitId":"a1021492980"},"content":"        logger.exiting(getClass().getName(), \"createExerciseCommand\");","lastModifiedDate":"2022-03-13"},{"lineNumber":307,"author":{"gitId":"a1021492980"},"content":"        return new ExerciseCommand(userInput, ui, exerciseList, actionKeyword, arguments);","lastModifiedDate":"2022-03-10"},{"lineNumber":308,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":309,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":310,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":311,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":312,"author":{"gitId":"a1021492980"},"content":"     * Creates a new help command.","lastModifiedDate":"2022-03-23"},{"lineNumber":313,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":314,"author":{"gitId":"a1021492980"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-23"},{"lineNumber":315,"author":{"gitId":"a1021492980"},"content":"     * @return A HelpCommand object.","lastModifiedDate":"2022-03-23"},{"lineNumber":316,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidCommandException  If the command specified by the user is invalid.","lastModifiedDate":"2022-04-10"},{"lineNumber":317,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":318,"author":{"gitId":"a1021492980"},"content":"    public HelpCommand createHelpCommand(String userInput) throws InvalidCommandException {","lastModifiedDate":"2022-04-02"},{"lineNumber":319,"author":{"gitId":"a1021492980"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-04-02"},{"lineNumber":320,"author":{"gitId":"a1021492980"},"content":"        if (userInput.trim().split(\" \", -1).length \u003e EXPECTED_NUMBER_OF_PARAMETERS_HELP) {","lastModifiedDate":"2022-04-02"},{"lineNumber":321,"author":{"gitId":"a1021492980"},"content":"            throw new InvalidCommandException(className,","lastModifiedDate":"2022-04-02"},{"lineNumber":322,"author":{"gitId":"a1021492980"},"content":"                    InvalidCommandException.INVALID_HELP_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-04-02"},{"lineNumber":323,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-04-02"},{"lineNumber":324,"author":{"gitId":"a1021492980"},"content":"        return new HelpCommand(userInput);","lastModifiedDate":"2022-03-09"},{"lineNumber":325,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":326,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":327,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":328,"author":{"gitId":"a1021492980"},"content":"     * Creates a new search command with the appropriate parameters stored into the object.","lastModifiedDate":"2022-03-23"},{"lineNumber":329,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":330,"author":{"gitId":"a1021492980"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-23"},{"lineNumber":331,"author":{"gitId":"a1021492980"},"content":"     * @return A SearchCommand object containing the parsed parameters obtained from the user\u0027s input.","lastModifiedDate":"2022-03-23"},{"lineNumber":332,"author":{"gitId":"a1021492980"},"content":"     * @throws ArrayIndexOutOfBoundsException If the user\u0027s input contains insufficient information to parse.","lastModifiedDate":"2022-03-23"},{"lineNumber":333,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidCommandException        If the user\u0027s input contains invalid or insufficient information","lastModifiedDate":"2022-03-23"},{"lineNumber":334,"author":{"gitId":"a1021492980"},"content":"     *                                        to parse.","lastModifiedDate":"2022-03-23"},{"lineNumber":335,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":336,"author":{"gitId":"a1021492980"},"content":"    public SearchCommand createSearchCommand(String userInput) throws","lastModifiedDate":"2022-03-19"},{"lineNumber":337,"author":{"gitId":"a1021492980"},"content":"            InvalidCommandException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2022-03-19"},{"lineNumber":338,"author":{"gitId":"a1021492980"},"content":"        String actionKeyword \u003d userInput.split(\" \", 3)[1];","lastModifiedDate":"2022-03-19"},{"lineNumber":339,"author":{"gitId":"a1021492980"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-19"},{"lineNumber":340,"author":{"gitId":"a1021492980"},"content":"        switch (actionKeyword) {","lastModifiedDate":"2022-03-19"},{"lineNumber":341,"author":{"gitId":"a1021492980"},"content":"        case SearchCommand.ACTION_KEYWORD_EXERCISE:","lastModifiedDate":"2022-04-09"},{"lineNumber":342,"author":{"gitId":"a1021492980"},"content":"            return getSearchCommandForExercise(userInput, actionKeyword);","lastModifiedDate":"2022-04-09"},{"lineNumber":343,"author":{"gitId":"a1021492980"},"content":"        case SearchCommand.ACTION_KEYWORD_PLAN:","lastModifiedDate":"2022-04-09"},{"lineNumber":344,"author":{"gitId":"a1021492980"},"content":"            return getSearchCommandForPlan(userInput, actionKeyword);","lastModifiedDate":"2022-04-09"},{"lineNumber":345,"author":{"gitId":"a1021492980"},"content":"        case SearchCommand.ACTION_KEYWORD_WORKOUT:","lastModifiedDate":"2022-04-09"},{"lineNumber":346,"author":{"gitId":"a1021492980"},"content":"            return getSearchCommandForWorkout(userInput, actionKeyword);","lastModifiedDate":"2022-04-09"},{"lineNumber":347,"author":{"gitId":"a1021492980"},"content":"        case SearchCommand.ACTION_KEYWORD_ALL:","lastModifiedDate":"2022-04-09"},{"lineNumber":348,"author":{"gitId":"a1021492980"},"content":"            return getSearchCommandForAll(userInput, actionKeyword);","lastModifiedDate":"2022-04-09"},{"lineNumber":349,"author":{"gitId":"a1021492980"},"content":"        default:","lastModifiedDate":"2022-04-09"},{"lineNumber":350,"author":{"gitId":"a1021492980"},"content":"            logger.log(Level.WARNING, \"User has entered an invalid search command action.\");","lastModifiedDate":"2022-04-09"},{"lineNumber":351,"author":{"gitId":"a1021492980"},"content":"            throw new InvalidCommandException(className,","lastModifiedDate":"2022-04-09"},{"lineNumber":352,"author":{"gitId":"a1021492980"},"content":"                    InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-04-09"},{"lineNumber":353,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":354,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":355,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":356,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":357,"author":{"gitId":"a1021492980"},"content":"     * Returns the SearchCommand to search for exercises.","lastModifiedDate":"2022-04-09"},{"lineNumber":358,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-04-09"},{"lineNumber":359,"author":{"gitId":"a1021492980"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-04-09"},{"lineNumber":360,"author":{"gitId":"a1021492980"},"content":"     * @param actionKeyword The user\u0027s actionKeyword.","lastModifiedDate":"2022-04-09"},{"lineNumber":361,"author":{"gitId":"a1021492980"},"content":"     * @return  A SearchCommand object to search for exercises.","lastModifiedDate":"2022-04-09"},{"lineNumber":362,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidCommandException  If the user\u0027s input contains invalid or insufficient information to parse.","lastModifiedDate":"2022-04-09"},{"lineNumber":363,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":364,"author":{"gitId":"a1021492980"},"content":"    public SearchCommand getSearchCommandForExercise(String userInput, String actionKeyword)","lastModifiedDate":"2022-04-09"},{"lineNumber":365,"author":{"gitId":"a1021492980"},"content":"            throws InvalidCommandException {","lastModifiedDate":"2022-04-09"},{"lineNumber":366,"author":{"gitId":"a1021492980"},"content":"        String arguments;","lastModifiedDate":"2022-04-09"},{"lineNumber":367,"author":{"gitId":"a1021492980"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-04-09"},{"lineNumber":368,"author":{"gitId":"a1021492980"},"content":"        if (userInput.split(\" \", 3).length \u003d\u003d EXPECTED_NUMBER_OF_PARAMETERS_SEARCH_SPACE) {","lastModifiedDate":"2022-04-05"},{"lineNumber":369,"author":{"gitId":"a1021492980"},"content":"            arguments \u003d SPACE_CHARACTER;","lastModifiedDate":"2022-04-05"},{"lineNumber":370,"author":{"gitId":"a1021492980"},"content":"            return new SearchCommand(userInput, ui, exerciseList, actionKeyword, arguments);","lastModifiedDate":"2022-04-05"},{"lineNumber":371,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":372,"author":{"gitId":"a1021492980"},"content":"        if (userInput.split(\" \", 3).length \u003c EXPECTED_NUMBER_OF_PARAMETERS_WITH_ARGUMENTS) {","lastModifiedDate":"2022-03-19"},{"lineNumber":373,"author":{"gitId":"a1021492980"},"content":"            logger.log(Level.WARNING, \"User has entered an invalid search exercise command action.\");","lastModifiedDate":"2022-03-19"},{"lineNumber":374,"author":{"gitId":"a1021492980"},"content":"            throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-19"},{"lineNumber":375,"author":{"gitId":"a1021492980"},"content":"                    InvalidCommandException.INVALID_SEARCH_EXERCISE_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-19"},{"lineNumber":376,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":377,"author":{"gitId":"a1021492980"},"content":"        arguments \u003d userInput.split(\" \", 3)[2];","lastModifiedDate":"2022-04-09"},{"lineNumber":378,"author":{"gitId":"a1021492980"},"content":"        return new SearchCommand(userInput, ui, exerciseList, actionKeyword, arguments);","lastModifiedDate":"2022-03-20"},{"lineNumber":379,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":380,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":381,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":382,"author":{"gitId":"a1021492980"},"content":"     * Returns the SearchCommand to search for workouts.","lastModifiedDate":"2022-04-09"},{"lineNumber":383,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-04-09"},{"lineNumber":384,"author":{"gitId":"a1021492980"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-04-09"},{"lineNumber":385,"author":{"gitId":"a1021492980"},"content":"     * @param actionKeyword The user\u0027s actionKeyword.","lastModifiedDate":"2022-04-09"},{"lineNumber":386,"author":{"gitId":"a1021492980"},"content":"     * @return  A SearchCommand object to search for workouts.","lastModifiedDate":"2022-04-09"},{"lineNumber":387,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidCommandException  If the user\u0027s input contains invalid or insufficient information to parse.","lastModifiedDate":"2022-04-09"},{"lineNumber":388,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":389,"author":{"gitId":"a1021492980"},"content":"    public SearchCommand getSearchCommandForWorkout(String userInput, String actionKeyword)","lastModifiedDate":"2022-04-09"},{"lineNumber":390,"author":{"gitId":"a1021492980"},"content":"            throws InvalidCommandException {","lastModifiedDate":"2022-04-09"},{"lineNumber":391,"author":{"gitId":"a1021492980"},"content":"        String arguments;","lastModifiedDate":"2022-04-09"},{"lineNumber":392,"author":{"gitId":"a1021492980"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-04-09"},{"lineNumber":393,"author":{"gitId":"a1021492980"},"content":"        if (userInput.split(\" \", 3).length \u003d\u003d EXPECTED_NUMBER_OF_PARAMETERS_SEARCH_SPACE) {","lastModifiedDate":"2022-04-05"},{"lineNumber":394,"author":{"gitId":"a1021492980"},"content":"            arguments \u003d SPACE_CHARACTER;","lastModifiedDate":"2022-04-05"},{"lineNumber":395,"author":{"gitId":"a1021492980"},"content":"            return new SearchCommand(userInput, ui, workoutList, actionKeyword, arguments);","lastModifiedDate":"2022-04-09"},{"lineNumber":396,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":397,"author":{"gitId":"a1021492980"},"content":"        if (userInput.split(\" \", 3).length \u003c EXPECTED_NUMBER_OF_PARAMETERS_WITH_ARGUMENTS) {","lastModifiedDate":"2022-03-20"},{"lineNumber":398,"author":{"gitId":"a1021492980"},"content":"            logger.log(Level.WARNING, \"User has entered an invalid search workout command action.\");","lastModifiedDate":"2022-04-09"},{"lineNumber":399,"author":{"gitId":"a1021492980"},"content":"            throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-20"},{"lineNumber":400,"author":{"gitId":"a1021492980"},"content":"                    InvalidCommandException.INVALID_SEARCH_WORKOUT_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-04-09"},{"lineNumber":401,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":402,"author":{"gitId":"a1021492980"},"content":"        arguments \u003d userInput.split(\" \", 3)[2];","lastModifiedDate":"2022-04-09"},{"lineNumber":403,"author":{"gitId":"a1021492980"},"content":"        return new SearchCommand(userInput, ui, workoutList, actionKeyword, arguments);","lastModifiedDate":"2022-04-09"},{"lineNumber":404,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":405,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":406,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":407,"author":{"gitId":"a1021492980"},"content":"     * Returns the SearchCommand to search for plans.","lastModifiedDate":"2022-04-09"},{"lineNumber":408,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-04-09"},{"lineNumber":409,"author":{"gitId":"a1021492980"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-04-09"},{"lineNumber":410,"author":{"gitId":"a1021492980"},"content":"     * @param actionKeyword The user\u0027s actionKeyword.","lastModifiedDate":"2022-04-09"},{"lineNumber":411,"author":{"gitId":"a1021492980"},"content":"     * @return  A SearchCommand object to search for plans.","lastModifiedDate":"2022-04-09"},{"lineNumber":412,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidCommandException  If the user\u0027s input contains invalid or insufficient information to parse.","lastModifiedDate":"2022-04-09"},{"lineNumber":413,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":414,"author":{"gitId":"a1021492980"},"content":"    public SearchCommand getSearchCommandForPlan(String userInput, String actionKeyword)","lastModifiedDate":"2022-04-09"},{"lineNumber":415,"author":{"gitId":"a1021492980"},"content":"            throws InvalidCommandException {","lastModifiedDate":"2022-04-09"},{"lineNumber":416,"author":{"gitId":"a1021492980"},"content":"        String arguments;","lastModifiedDate":"2022-04-09"},{"lineNumber":417,"author":{"gitId":"a1021492980"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-04-09"},{"lineNumber":418,"author":{"gitId":"a1021492980"},"content":"        if (userInput.split(\" \", 3).length \u003d\u003d EXPECTED_NUMBER_OF_PARAMETERS_SEARCH_SPACE) {","lastModifiedDate":"2022-04-05"},{"lineNumber":419,"author":{"gitId":"a1021492980"},"content":"            arguments \u003d SPACE_CHARACTER;","lastModifiedDate":"2022-04-05"},{"lineNumber":420,"author":{"gitId":"a1021492980"},"content":"            return new SearchCommand(userInput, ui, planList, actionKeyword, arguments);","lastModifiedDate":"2022-04-09"},{"lineNumber":421,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":422,"author":{"gitId":"a1021492980"},"content":"        if (userInput.split(\" \", 3).length \u003c EXPECTED_NUMBER_OF_PARAMETERS_WITH_ARGUMENTS) {","lastModifiedDate":"2022-03-23"},{"lineNumber":423,"author":{"gitId":"a1021492980"},"content":"            logger.log(Level.WARNING, \"User has entered an invalid search plan command action.\");","lastModifiedDate":"2022-04-09"},{"lineNumber":424,"author":{"gitId":"a1021492980"},"content":"            throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-23"},{"lineNumber":425,"author":{"gitId":"a1021492980"},"content":"                    InvalidCommandException.INVALID_SEARCH_PLAN_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-04-09"},{"lineNumber":426,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":427,"author":{"gitId":"a1021492980"},"content":"        arguments \u003d userInput.split(\" \", 3)[2];","lastModifiedDate":"2022-04-09"},{"lineNumber":428,"author":{"gitId":"a1021492980"},"content":"        return new SearchCommand(userInput, ui, planList, actionKeyword, arguments);","lastModifiedDate":"2022-04-09"},{"lineNumber":429,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":430,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":431,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":432,"author":{"gitId":"a1021492980"},"content":"     * Returns the SearchCommand to search for all.","lastModifiedDate":"2022-04-09"},{"lineNumber":433,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-04-09"},{"lineNumber":434,"author":{"gitId":"a1021492980"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-04-09"},{"lineNumber":435,"author":{"gitId":"a1021492980"},"content":"     * @param actionKeyword The user\u0027s actionKeyword.","lastModifiedDate":"2022-04-09"},{"lineNumber":436,"author":{"gitId":"a1021492980"},"content":"     * @return  A SearchCommand object to search for all.","lastModifiedDate":"2022-04-09"},{"lineNumber":437,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidCommandException  If the user\u0027s input contains invalid or insufficient information to parse.","lastModifiedDate":"2022-04-09"},{"lineNumber":438,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":439,"author":{"gitId":"a1021492980"},"content":"    public SearchCommand getSearchCommandForAll(String userInput, String actionKeyword)","lastModifiedDate":"2022-04-09"},{"lineNumber":440,"author":{"gitId":"a1021492980"},"content":"            throws InvalidCommandException {","lastModifiedDate":"2022-04-09"},{"lineNumber":441,"author":{"gitId":"a1021492980"},"content":"        String arguments;","lastModifiedDate":"2022-04-09"},{"lineNumber":442,"author":{"gitId":"a1021492980"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-04-09"},{"lineNumber":443,"author":{"gitId":"a1021492980"},"content":"        if (userInput.split(\" \", 3).length \u003d\u003d EXPECTED_NUMBER_OF_PARAMETERS_SEARCH_SPACE) {","lastModifiedDate":"2022-04-02"},{"lineNumber":444,"author":{"gitId":"a1021492980"},"content":"            arguments \u003d SPACE_CHARACTER;","lastModifiedDate":"2022-04-02"},{"lineNumber":445,"author":{"gitId":"a1021492980"},"content":"            return new SearchCommand(userInput, ui, exerciseList, workoutList, planList, actionKeyword, arguments);","lastModifiedDate":"2022-04-02"},{"lineNumber":446,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-04-02"},{"lineNumber":447,"author":{"gitId":"a1021492980"},"content":"        if (userInput.split(\" \", 3).length \u003c EXPECTED_NUMBER_OF_PARAMETERS_WITH_ARGUMENTS) {","lastModifiedDate":"2022-03-23"},{"lineNumber":448,"author":{"gitId":"a1021492980"},"content":"            logger.log(Level.WARNING, \"User has entered an invalid search all command action.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":449,"author":{"gitId":"a1021492980"},"content":"            throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-23"},{"lineNumber":450,"author":{"gitId":"a1021492980"},"content":"                    InvalidCommandException.INVALID_SEARCH_ALL_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-23"},{"lineNumber":451,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":452,"author":{"gitId":"a1021492980"},"content":"        arguments \u003d userInput.split(\" \", 3)[2];","lastModifiedDate":"2022-04-09"},{"lineNumber":453,"author":{"gitId":"a1021492980"},"content":"        return new SearchCommand(userInput, ui, exerciseList, workoutList, planList, actionKeyword, arguments);","lastModifiedDate":"2022-03-23"},{"lineNumber":454,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":455,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":456,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":457,"author":{"gitId":"Musfirahe0556596"},"content":"     * Creates a new plan command with the appropriate parameters stored into the object.","lastModifiedDate":"2022-03-19"},{"lineNumber":458,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":459,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-19"},{"lineNumber":460,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return A PlanCommand object containing the parsed parameters obtained from the user\u0027s input.","lastModifiedDate":"2022-03-19"},{"lineNumber":461,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws ArrayIndexOutOfBoundsException If the user\u0027s input contains insufficient information to parse.","lastModifiedDate":"2022-03-19"},{"lineNumber":462,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws InvalidCommandException        If the user\u0027s input contains invalid or insufficient information","lastModifiedDate":"2022-03-19"},{"lineNumber":463,"author":{"gitId":"Musfirahe0556596"},"content":"     *                                        to parse.","lastModifiedDate":"2022-03-19"},{"lineNumber":464,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":465,"author":{"gitId":"Musfirahe0556596"},"content":"    public PlanCommand createPlanCommand(String userInput) throws","lastModifiedDate":"2022-03-19"},{"lineNumber":466,"author":{"gitId":"Musfirahe0556596"},"content":"            ArrayIndexOutOfBoundsException, InvalidCommandException {","lastModifiedDate":"2022-03-19"},{"lineNumber":467,"author":{"gitId":"Musfirahe0556596"},"content":"        // Determine the action the user has entered","lastModifiedDate":"2022-03-19"},{"lineNumber":468,"author":{"gitId":"Musfirahe0556596"},"content":"        String actionKeyword \u003d userInput.split(\" \", 3)[1];","lastModifiedDate":"2022-03-19"},{"lineNumber":469,"author":{"gitId":"Musfirahe0556596"},"content":"        String arguments \u003d null;","lastModifiedDate":"2022-03-19"},{"lineNumber":470,"author":{"gitId":"Musfirahe0556596"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-19"},{"lineNumber":471,"author":{"gitId":"Musfirahe0556596"},"content":"        switch (actionKeyword) {","lastModifiedDate":"2022-03-19"},{"lineNumber":472,"author":{"gitId":"alanlowzies"},"content":"        case ACTION_KEYWORD_CREATE:","lastModifiedDate":"2022-04-09"},{"lineNumber":473,"author":{"gitId":"Musfirahe0556596"},"content":"            if (userInput.split(\" \", 3).length \u003c EXPECTED_NUMBER_OF_PARAMETERS_WITH_ARGUMENTS) {","lastModifiedDate":"2022-03-19"},{"lineNumber":474,"author":{"gitId":"Musfirahe0556596"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid create plan command action.\");","lastModifiedDate":"2022-03-19"},{"lineNumber":475,"author":{"gitId":"Musfirahe0556596"},"content":"                throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-19"},{"lineNumber":476,"author":{"gitId":"Musfirahe0556596"},"content":"                        InvalidCommandException.INVALID_NEW_PLAN_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-19"},{"lineNumber":477,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":478,"author":{"gitId":"Musfirahe0556596"},"content":"            arguments \u003d userInput.split(\" \", 3)[2];","lastModifiedDate":"2022-03-19"},{"lineNumber":479,"author":{"gitId":"Musfirahe0556596"},"content":"            break;","lastModifiedDate":"2022-03-19"},{"lineNumber":480,"author":{"gitId":"alanlowzies"},"content":"        case ACTION_KEYWORD_DELETE:","lastModifiedDate":"2022-04-09"},{"lineNumber":481,"author":{"gitId":"TianaiYan"},"content":"            if (userInput.split(\" \", 3).length \u003c EXPECTED_NUMBER_OF_PARAMETERS_WITH_ARGUMENTS) {","lastModifiedDate":"2022-03-23"},{"lineNumber":482,"author":{"gitId":"TianaiYan"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid delete plan command action.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":483,"author":{"gitId":"TianaiYan"},"content":"                throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-23"},{"lineNumber":484,"author":{"gitId":"TianaiYan"},"content":"                        InvalidCommandException.INVALID_DELETE_PLAN_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-23"},{"lineNumber":485,"author":{"gitId":"TianaiYan"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":486,"author":{"gitId":"TianaiYan"},"content":"            arguments \u003d userInput.split(\" \", 3)[2];","lastModifiedDate":"2022-03-23"},{"lineNumber":487,"author":{"gitId":"Musfirahe0556596"},"content":"            break;","lastModifiedDate":"2022-03-19"},{"lineNumber":488,"author":{"gitId":"alanlowzies"},"content":"        case PlanCommand.ACTION_KEYWORD_LIST:","lastModifiedDate":"2022-04-09"},{"lineNumber":489,"author":{"gitId":"Musfirahe0556596"},"content":"            if (userInput.split(\" \", -1).length \u003e EXPECTED_NUMBER_OF_PARAMETERS_NO_ARGUMENTS) {","lastModifiedDate":"2022-03-19"},{"lineNumber":490,"author":{"gitId":"Musfirahe0556596"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid list plan command action.\");","lastModifiedDate":"2022-03-19"},{"lineNumber":491,"author":{"gitId":"Musfirahe0556596"},"content":"                throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-19"},{"lineNumber":492,"author":{"gitId":"Musfirahe0556596"},"content":"                        InvalidCommandException.INVALID_PLAN_LIST_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-19"},{"lineNumber":493,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":494,"author":{"gitId":"Musfirahe0556596"},"content":"            break;","lastModifiedDate":"2022-03-19"},{"lineNumber":495,"author":{"gitId":"Musfirahe0556596"},"content":"        case ACTION_KEYWORD_DETAILS:","lastModifiedDate":"2022-04-08"},{"lineNumber":496,"author":{"gitId":"TianaiYan"},"content":"            if (userInput.split(\" \", 3).length \u003c EXPECTED_NUMBER_OF_PARAMETERS_WITH_ARGUMENTS) {","lastModifiedDate":"2022-03-26"},{"lineNumber":497,"author":{"gitId":"TianaiYan"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid plan details command action.\");","lastModifiedDate":"2022-03-26"},{"lineNumber":498,"author":{"gitId":"TianaiYan"},"content":"                throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-26"},{"lineNumber":499,"author":{"gitId":"TianaiYan"},"content":"                        InvalidCommandException.INVALID_PLAN_DETAILS_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-26"},{"lineNumber":500,"author":{"gitId":"TianaiYan"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":501,"author":{"gitId":"TianaiYan"},"content":"            arguments \u003d userInput.split(\" \", 3)[2];","lastModifiedDate":"2022-03-26"},{"lineNumber":502,"author":{"gitId":"Musfirahe0556596"},"content":"            break;","lastModifiedDate":"2022-03-19"},{"lineNumber":503,"author":{"gitId":"Musfirahe0556596"},"content":"        default:","lastModifiedDate":"2022-03-19"},{"lineNumber":504,"author":{"gitId":"Musfirahe0556596"},"content":"            logger.log(Level.WARNING, \"User has entered an invalid plan command action.\");","lastModifiedDate":"2022-03-19"},{"lineNumber":505,"author":{"gitId":"Musfirahe0556596"},"content":"            throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-19"},{"lineNumber":506,"author":{"gitId":"Musfirahe0556596"},"content":"                    InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-19"},{"lineNumber":507,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":508,"author":{"gitId":"Musfirahe0556596"},"content":"        return new PlanCommand(userInput, fileManager, planList, actionKeyword, arguments);","lastModifiedDate":"2022-03-19"},{"lineNumber":509,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":510,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":511,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":512,"author":{"gitId":"emilysim00"},"content":"     * Creates a new schedule command with the appropriate parameters stored into the object.","lastModifiedDate":"2022-03-21"},{"lineNumber":513,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":514,"author":{"gitId":"emilysim00"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-21"},{"lineNumber":515,"author":{"gitId":"emilysim00"},"content":"     * @return A ScheduleCommand object containing the parsed parameters obtained from the user\u0027s input.","lastModifiedDate":"2022-03-21"},{"lineNumber":516,"author":{"gitId":"emilysim00"},"content":"     * @throws ArrayIndexOutOfBoundsException If the user\u0027s input contains insufficient information to parse.","lastModifiedDate":"2022-03-21"},{"lineNumber":517,"author":{"gitId":"emilysim00"},"content":"     * @throws InvalidCommandException        If the user\u0027s input contains invalid or insufficient information","lastModifiedDate":"2022-03-21"},{"lineNumber":518,"author":{"gitId":"emilysim00"},"content":"     *                                        to parse.","lastModifiedDate":"2022-03-21"},{"lineNumber":519,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":520,"author":{"gitId":"emilysim00"},"content":"    public ScheduleCommand createScheduleCommand(String userInput) throws","lastModifiedDate":"2022-03-21"},{"lineNumber":521,"author":{"gitId":"emilysim00"},"content":"            ArrayIndexOutOfBoundsException, InvalidCommandException {","lastModifiedDate":"2022-03-21"},{"lineNumber":522,"author":{"gitId":"emilysim00"},"content":"        // Determine the action the user has entered","lastModifiedDate":"2022-03-21"},{"lineNumber":523,"author":{"gitId":"emilysim00"},"content":"        String actionKeyword \u003d userInput.split(\" \", 3)[1];","lastModifiedDate":"2022-03-21"},{"lineNumber":524,"author":{"gitId":"emilysim00"},"content":"        String arguments \u003d null;","lastModifiedDate":"2022-03-21"},{"lineNumber":525,"author":{"gitId":"emilysim00"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-21"},{"lineNumber":526,"author":{"gitId":"emilysim00"},"content":"        switch (actionKeyword) {","lastModifiedDate":"2022-03-21"},{"lineNumber":527,"author":{"gitId":"emilysim00"},"content":"        case ACTION_KEYWORD_UPDATE:","lastModifiedDate":"2022-04-08"},{"lineNumber":528,"author":{"gitId":"emilysim00"},"content":"            if (userInput.split(\" \", -1).length \u003c EXPECTED_NUMBER_OF_PARAMETERS_WITH_ARGUMENTS) {","lastModifiedDate":"2022-03-21"},{"lineNumber":529,"author":{"gitId":"emilysim00"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid update schedule command action.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":530,"author":{"gitId":"emilysim00"},"content":"                throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-21"},{"lineNumber":531,"author":{"gitId":"emilysim00"},"content":"                        InvalidCommandException.INVALID_SCHEDULE_UPDATE_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-21"},{"lineNumber":532,"author":{"gitId":"emilysim00"},"content":"            }","lastModifiedDate":"2022-03-21"},{"lineNumber":533,"author":{"gitId":"emilysim00"},"content":"            arguments \u003d userInput.split(\" \", 3)[2];","lastModifiedDate":"2022-03-21"},{"lineNumber":534,"author":{"gitId":"emilysim00"},"content":"            break;","lastModifiedDate":"2022-03-21"},{"lineNumber":535,"author":{"gitId":"alanlowzies"},"content":"        case ScheduleCommand.ACTION_KEYWORD_LIST:","lastModifiedDate":"2022-04-09"},{"lineNumber":536,"author":{"gitId":"emilysim00"},"content":"            if (userInput.split(\" \", -1).length \u003e EXPECTED_NUMBER_OF_PARAMETERS_NO_ARGUMENTS) {","lastModifiedDate":"2022-03-21"},{"lineNumber":537,"author":{"gitId":"emilysim00"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid list schedule command action.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":538,"author":{"gitId":"emilysim00"},"content":"                throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-21"},{"lineNumber":539,"author":{"gitId":"emilysim00"},"content":"                        InvalidCommandException.INVALID_SCHEDULE_LIST_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-21"},{"lineNumber":540,"author":{"gitId":"emilysim00"},"content":"            }","lastModifiedDate":"2022-03-21"},{"lineNumber":541,"author":{"gitId":"emilysim00"},"content":"            break;","lastModifiedDate":"2022-03-21"},{"lineNumber":542,"author":{"gitId":"emilysim00"},"content":"        case ACTION_KEYWORD_CLEAR:","lastModifiedDate":"2022-04-08"},{"lineNumber":543,"author":{"gitId":"emilysim00"},"content":"            if (userInput.split(\" \", -1).length !\u003d EXPECTED_NUMBER_OF_PARAMETERS_WITH_ARGUMENTS) {","lastModifiedDate":"2022-03-21"},{"lineNumber":544,"author":{"gitId":"emilysim00"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid clear schedule command action.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":545,"author":{"gitId":"emilysim00"},"content":"                throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-21"},{"lineNumber":546,"author":{"gitId":"emilysim00"},"content":"                        InvalidCommandException.INVALID_SCHEDULE_CLEAR_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-21"},{"lineNumber":547,"author":{"gitId":"emilysim00"},"content":"            }","lastModifiedDate":"2022-03-21"},{"lineNumber":548,"author":{"gitId":"emilysim00"},"content":"            arguments \u003d userInput.split(\" \", 3)[2];","lastModifiedDate":"2022-03-21"},{"lineNumber":549,"author":{"gitId":"emilysim00"},"content":"            break;","lastModifiedDate":"2022-03-21"},{"lineNumber":550,"author":{"gitId":"emilysim00"},"content":"        case ACTION_KEYWORD_CLEAR_ALL:","lastModifiedDate":"2022-04-08"},{"lineNumber":551,"author":{"gitId":"emilysim00"},"content":"            if (userInput.split(\" \", -1).length \u003e EXPECTED_NUMBER_OF_PARAMETERS_NO_ARGUMENTS) {","lastModifiedDate":"2022-03-21"},{"lineNumber":552,"author":{"gitId":"emilysim00"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid clear all schedule command action.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":553,"author":{"gitId":"emilysim00"},"content":"                throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-21"},{"lineNumber":554,"author":{"gitId":"emilysim00"},"content":"                        InvalidCommandException.INVALID_SCHEDULE_CLEAR_ALL_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-21"},{"lineNumber":555,"author":{"gitId":"emilysim00"},"content":"            }","lastModifiedDate":"2022-03-21"},{"lineNumber":556,"author":{"gitId":"emilysim00"},"content":"            break;","lastModifiedDate":"2022-03-21"},{"lineNumber":557,"author":{"gitId":"emilysim00"},"content":"        default:","lastModifiedDate":"2022-03-21"},{"lineNumber":558,"author":{"gitId":"emilysim00"},"content":"            logger.log(Level.WARNING, \"User has entered an invalid schedule command action.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":559,"author":{"gitId":"emilysim00"},"content":"            throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-21"},{"lineNumber":560,"author":{"gitId":"emilysim00"},"content":"                    InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-21"},{"lineNumber":561,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":562,"author":{"gitId":"emilysim00"},"content":"        return new ScheduleCommand(userInput, fileManager, dayList, actionKeyword, arguments);","lastModifiedDate":"2022-03-21"},{"lineNumber":563,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":564,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"emilysim00":72,"Musfirahe0556596":53,"alanlowzies":220,"TianaiYan":15,"a1021492980":204}},{"path":"src/main/java/werkit/UI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package werkit;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"import data.plans.Plan;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"import data.schedule.Day;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"import data.workouts.Workout;","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"import storage.FileManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"import storage.UnknownFileException;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"import textcolors.TextColor;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2022-04-10"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":" * This class contains all the user interface-related texts and methods for the WerkIt! Application.","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"public class UI {","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"    private static Logger logger \u003d Logger.getLogger(UI.class.getName());","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"    // WerkIt ASCII Banner Logo Art","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"    public static final String WERKIT_BANNER_LOGO \u003d \" __        __        _    ___ _   _ \\n\"","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"            + \" \\\\ \\\\      / /__ _ __| | _|_ _| |_| |\\n\"","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"            + \"  \\\\ \\\\ /\\\\ / / _ \\\\ \u0027__| |/ /| || __| |\\n\"","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"            + \"   \\\\ V  V /  __/ |  |   \u003c | || |_|_|\\n\"","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"            + \"    \\\\_/\\\\_/ \\\\___|_|  |_|\\\\_\\\\___|\\\\__(_)\\n\"","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"            + \"                                    \";","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"    public static final String WELCOME_MESSAGE \u003d \"Welcome to WerkIt!, your personal exercise planner.\";","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"    public static final String GOODBYE_MESSAGE \u003d \"Thank you for using WerkIt! See you again soon...\";","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"    // The default parameters for printing the formatting lines","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"    public static final int DEFAULT_LINE_LENGTH \u003d 70;","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"    public static final String DEFAULT_LINE_CHAR \u003d \"-\";","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"    // Prompt symbol","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"    public static final String PROMPT_SYMBOL \u003d \"\u003e\";","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"    // File loading-related messages","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"    public static final String CHECK_DIRECTORY_AND_FILES_MSG \u003d \"Checking for required directory and files...\";","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"    public static final String ALL_DIRECTORY_AND_FILES_PRESENT \u003d \"All OK!\";","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"    public static final String DIRECTORY_NOT_FOUND_MSG \u003d \"- The required data directory was not found. It will \"","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"            + \"be created.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"    public static final String DIRECTORY_CREATED_MSG \u003d \"- The WerkIt! resource directory has been created in\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"            + \"  your terminal\u0027s current working directory.\";","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"    public static final String EXERCISE_FILE_NOT_FOUND_MSG \u003d \"- The exercise file was not found. It will be created.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"    public static final String EXERCISE_FILE_CREATED_MSG \u003d \"- The exercise file \u0027exercises.txt\u0027 has been created in\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"            + \"  the WerkIt! resource directory.\";","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"    public static final String WORKOUT_FILE_NOT_FOUND_MSG \u003d \"- The workout file was not found. It will be created.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"    public static final String WORKOUT_FILE_CREATED_MSG \u003d \"- The workout file \u0027workouts.txt\u0027 has been created in\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"            + \"  the WerkIt! resource directory.\";","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"a1021492980"},"content":"    public static final String PLAN_FILE_NOT_FOUND_MSG \u003d \"- The plan file was not found. It will be created.\";","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"a1021492980"},"content":"    public static final String PLAN_FILE_CREATED_MSG \u003d \"- The plan file \u0027plans.txt\u0027 has been created in\\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"a1021492980"},"content":"            + \"  the WerkIt! resource directory.\";","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"    public static final String SCHEDULE_FILE_NOT_FOUND_MSG \u003d \"- The schedule file was not found. It will be created.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"    public static final String SCHEDULE_FILE_CREATED_MSG \u003d \"- The schedule file \u0027schedule.txt\u0027 has been\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"            + \"  created in the WerkIt! resource directory.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"    public static final String FILE_LOAD_OK \u003d \"OK!\";","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"    public static final String FILE_LOAD_NOT_OK \u003d \"Not OK...\";","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"    public static final String LOADING_FILE_DATA_MSG \u003d \"Loading saved file data...\";","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"    public static final String EXERCISES_FILE_LOADED_MSG \u003d  \"- Exercises file\\t%s\\n\";","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"    public static final String WORKOUTS_FILE_LOADED_MSG \u003d \"- Workouts file \\t%s\\n\";","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"    public static final String PLANS_FILE_LOADED_MSG \u003d \"- Plans file \\t\\t%s\\n\";","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"    public static final String SCHEDULE_FILE_LOADED_MSG \u003d \"- Schedule file \\t%s\\n\";","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"    // Workout-related messages","lastModifiedDate":"2022-03-05"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"    public static final String NEW_WORKOUT_CREATED_MESSAGE \u003d \"Alright, the following workout has been created:\";","lastModifiedDate":"2022-03-05"},{"lineNumber":65,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String DELETED_WORKOUT_MESSAGE \u003d \"Alright, the following workout has been removed:\";","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"TianaiYan"},"content":"    public static final String UPDATED_WORKOUT_MESSAGE \u003d \"Alright, the workout has been updated from \";","lastModifiedDate":"2022-04-05"},{"lineNumber":67,"author":{"gitId":"Musfirahe0556596"},"content":"    //Plan-related Message","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String NEW_PLAN_CREATED_MESSAGE \u003d \"Alright, the following plan has been created:\";","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"TianaiYan"},"content":"    public static final String DELETED_PLAN_MESSAGE \u003d \"Alright, the following plan has been removed:\";","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"emilysim00"},"content":"    public static final String NEW_DAY_CREATED_MESSAGE \u003d \"Alright, the following plan schedule has been created:\";","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"    // IOException Error Message","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"    public static final String IOEXCEPTION_ERROR_MESSAGE \u003d \"[ERROR] The program has encountered an IOException \"","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"            + \"and needs to close. Sorry about that...\";","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"    // Scanner object for reading in user input from standard input","lastModifiedDate":"2022-03-05"},{"lineNumber":77,"author":{"gitId":"alanlowzies"},"content":"    Scanner inputReader \u003d new Scanner(System.in);","lastModifiedDate":"2022-03-05"},{"lineNumber":78,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":79,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"alanlowzies"},"content":"     * Constructs an instance of the UI class. The constructor will link the Logger object in this UI class","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"     * to the log file as specified in the LogHandler class.","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"alanlowzies"},"content":"    public UI() {","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"        LogHandler.linkToFileLogger(logger);","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"     * Prints a line on the console based on the default parameters defined in this Java class.","lastModifiedDate":"2022-03-04"},{"lineNumber":89,"author":{"gitId":"alanlowzies"},"content":"     * Source: Team Member Alan Low\u0027s iP codebase","lastModifiedDate":"2022-03-04"},{"lineNumber":90,"author":{"gitId":"alanlowzies"},"content":"     * Link: https://github.com/alanlowzies/ip/blob/8556dd6a5106d190f5ac0458c6d2c34f98737a91/src/main/java/sora/SoraUI.java","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"alanlowzies"},"content":"    public void printLine() {","lastModifiedDate":"2022-03-05"},{"lineNumber":93,"author":{"gitId":"alanlowzies"},"content":"        // Prints a line based on the default parameters","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"alanlowzies"},"content":"        printLine(DEFAULT_LINE_LENGTH, DEFAULT_LINE_CHAR);","lastModifiedDate":"2022-03-04"},{"lineNumber":95,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"alanlowzies"},"content":"     * Prints a line on the console based on the specified length and the character/symbol to use","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"alanlowzies"},"content":"     * Source: Team Member Alan Low\u0027s iP codebase","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"alanlowzies"},"content":"     * Link: https://github.com/alanlowzies/ip/blob/8556dd6a5106d190f5ac0458c6d2c34f98737a91/src/main/java/sora/SoraUI.java","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":102,"author":{"gitId":"alanlowzies"},"content":"     * @param lineLen The length of the line (measured in \u0027number of characters\u0027).","lastModifiedDate":"2022-03-04"},{"lineNumber":103,"author":{"gitId":"alanlowzies"},"content":"     * @param character The character that should be used to print the line.","lastModifiedDate":"2022-03-04"},{"lineNumber":104,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":105,"author":{"gitId":"alanlowzies"},"content":"    public void printLine(int lineLen, String character) {","lastModifiedDate":"2022-03-05"},{"lineNumber":106,"author":{"gitId":"alanlowzies"},"content":"        // Generate a line of whitespaces","lastModifiedDate":"2022-03-04"},{"lineNumber":107,"author":{"gitId":"alanlowzies"},"content":"        String lineOfWhitespaces \u003d String.format(\"%\" + lineLen + \"s\", \" \");","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":109,"author":{"gitId":"alanlowzies"},"content":"        // Replace each whitespace with the specified character","lastModifiedDate":"2022-03-04"},{"lineNumber":110,"author":{"gitId":"alanlowzies"},"content":"        String lineOfChars \u003d lineOfWhitespaces.replaceAll(\" \", character);","lastModifiedDate":"2022-03-04"},{"lineNumber":111,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":112,"author":{"gitId":"alanlowzies"},"content":"        // Finally, print out the line of characters","lastModifiedDate":"2022-03-04"},{"lineNumber":113,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(lineOfChars);","lastModifiedDate":"2022-03-04"},{"lineNumber":114,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":115,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":116,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"alanlowzies"},"content":"     * Prints the greetings when the user starts the WerkIt! application. The greeting includes the","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"alanlowzies"},"content":"     * banner logo as well as a welcome message.","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"alanlowzies"},"content":"    public void printGreetings() {","lastModifiedDate":"2022-03-05"},{"lineNumber":121,"author":{"gitId":"alanlowzies"},"content":"        printLine(DEFAULT_LINE_LENGTH, \"\u003d\");","lastModifiedDate":"2022-03-05"},{"lineNumber":122,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(WERKIT_BANNER_LOGO);","lastModifiedDate":"2022-03-05"},{"lineNumber":123,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(WELCOME_MESSAGE);","lastModifiedDate":"2022-03-05"},{"lineNumber":124,"author":{"gitId":"alanlowzies"},"content":"        printLine();","lastModifiedDate":"2022-03-05"},{"lineNumber":125,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":126,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":127,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"alanlowzies"},"content":"     * Prints the message that will greet the user farewell when the user exits the application.","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"alanlowzies"},"content":"    public void printGoodbye() {","lastModifiedDate":"2022-03-05"},{"lineNumber":131,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(GOODBYE_MESSAGE);","lastModifiedDate":"2022-03-05"},{"lineNumber":132,"author":{"gitId":"alanlowzies"},"content":"        printLine(DEFAULT_LINE_LENGTH, \"\u003d\");","lastModifiedDate":"2022-03-05"},{"lineNumber":133,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":134,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":135,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":136,"author":{"gitId":"alanlowzies"},"content":"     * Prints a message that prompts the user to enter a command","lastModifiedDate":"2022-03-05"},{"lineNumber":137,"author":{"gitId":"alanlowzies"},"content":"     * Method adapted from Team Member Alan Low\u0027s iP codebase.","lastModifiedDate":"2022-03-05"},{"lineNumber":138,"author":{"gitId":"alanlowzies"},"content":"     * Link: https://github.com/alanlowzies/ip/blob/8556dd6a5106d190f5ac0458c6d2c34f98737a91/src/main/java/sora/SoraUI.java","lastModifiedDate":"2022-03-05"},{"lineNumber":139,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"emilysim00"},"content":"     * @param isFirstPrompt state whether the input taken from the console is the first command given by user.","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":142,"author":{"gitId":"alanlowzies"},"content":"    public void printUserInputPrompt(boolean isFirstPrompt) {","lastModifiedDate":"2022-03-05"},{"lineNumber":143,"author":{"gitId":"alanlowzies"},"content":"        printLine();","lastModifiedDate":"2022-03-05"},{"lineNumber":144,"author":{"gitId":"alanlowzies"},"content":"        if (isFirstPrompt) {","lastModifiedDate":"2022-03-05"},{"lineNumber":145,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Now then, what can I do for you today?\");","lastModifiedDate":"2022-03-05"},{"lineNumber":146,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"(Need help? Type \u0027help\u0027 for a guide!)\");","lastModifiedDate":"2022-03-09"},{"lineNumber":147,"author":{"gitId":"alanlowzies"},"content":"        } else {","lastModifiedDate":"2022-03-07"},{"lineNumber":148,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"What\u0027s next?\");","lastModifiedDate":"2022-03-05"},{"lineNumber":149,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":150,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":151,"author":{"gitId":"alanlowzies"},"content":"        printLine();","lastModifiedDate":"2022-03-05"},{"lineNumber":152,"author":{"gitId":"alanlowzies"},"content":"        System.out.print(PROMPT_SYMBOL + \" \");","lastModifiedDate":"2022-03-05"},{"lineNumber":153,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":154,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":155,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":156,"author":{"gitId":"alanlowzies"},"content":"     * Reads in a line of the user from the standard input, trims the input, and returns it as a String.","lastModifiedDate":"2022-03-05"},{"lineNumber":157,"author":{"gitId":"alanlowzies"},"content":"     * Method adapted from Team Member Alan Low\u0027s iP codebase.","lastModifiedDate":"2022-03-05"},{"lineNumber":158,"author":{"gitId":"alanlowzies"},"content":"     * Link: https://github.com/alanlowzies/ip/blob/8556dd6a5106d190f5ac0458c6d2c34f98737a91/src/main/java/sora/SoraParser.java","lastModifiedDate":"2022-03-05"},{"lineNumber":159,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":160,"author":{"gitId":"emilysim00"},"content":"     * @return userInputTrimmed user input with no spaces at the back of the input.","lastModifiedDate":"2022-03-27"},{"lineNumber":161,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":162,"author":{"gitId":"alanlowzies"},"content":"    protected String getUserInput() {","lastModifiedDate":"2022-03-05"},{"lineNumber":163,"author":{"gitId":"alanlowzies"},"content":"        String userInputTrimmed \u003d \"\";","lastModifiedDate":"2022-04-10"},{"lineNumber":164,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":165,"author":{"gitId":"alanlowzies"},"content":"        try {","lastModifiedDate":"2022-04-10"},{"lineNumber":166,"author":{"gitId":"alanlowzies"},"content":"            String userInput \u003d inputReader.nextLine();","lastModifiedDate":"2022-03-05"},{"lineNumber":167,"author":{"gitId":"alanlowzies"},"content":"            userInputTrimmed \u003d userInput.trim();","lastModifiedDate":"2022-04-10"},{"lineNumber":168,"author":{"gitId":"alanlowzies"},"content":"            printLine();","lastModifiedDate":"2022-04-10"},{"lineNumber":169,"author":{"gitId":"alanlowzies"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2022-04-10"},{"lineNumber":170,"author":{"gitId":"alanlowzies"},"content":"            System.out.println();","lastModifiedDate":"2022-04-10"},{"lineNumber":171,"author":{"gitId":"alanlowzies"},"content":"            printLine();","lastModifiedDate":"2022-03-05"},{"lineNumber":172,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"System signal detected. Exiting program.\");","lastModifiedDate":"2022-04-10"},{"lineNumber":173,"author":{"gitId":"alanlowzies"},"content":"            userInputTrimmed \u003d \"exit\";","lastModifiedDate":"2022-04-10"},{"lineNumber":174,"author":{"gitId":"alanlowzies"},"content":"            return userInputTrimmed;","lastModifiedDate":"2022-04-10"},{"lineNumber":175,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-04-10"},{"lineNumber":176,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":177,"author":{"gitId":"alanlowzies"},"content":"        return userInputTrimmed;","lastModifiedDate":"2022-03-05"},{"lineNumber":178,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":179,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":180,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":181,"author":{"gitId":"alanlowzies"},"content":"     * Prints a message when a new workout has been created. The newly created workout will also be displayed.","lastModifiedDate":"2022-03-05"},{"lineNumber":182,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":183,"author":{"gitId":"alanlowzies"},"content":"     * @param newWorkout The Workout object that is newly created.","lastModifiedDate":"2022-03-07"},{"lineNumber":184,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":185,"author":{"gitId":"alanlowzies"},"content":"    public void printNewWorkoutCreatedMessage(Workout newWorkout) {","lastModifiedDate":"2022-03-05"},{"lineNumber":186,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(NEW_WORKOUT_CREATED_MESSAGE);","lastModifiedDate":"2022-03-05"},{"lineNumber":187,"author":{"gitId":"alanlowzies"},"content":"        System.out.println();","lastModifiedDate":"2022-03-05"},{"lineNumber":188,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(\"\\t\" + newWorkout.toString());","lastModifiedDate":"2022-03-05"},{"lineNumber":189,"author":{"gitId":"alanlowzies"},"content":"        System.out.println();","lastModifiedDate":"2022-03-05"},{"lineNumber":190,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":191,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":192,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":193,"author":{"gitId":"Musfirahe0556596"},"content":"     * Prints a message when a workout has been deleted. Deleted workout will also be displayed.","lastModifiedDate":"2022-03-09"},{"lineNumber":194,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":195,"author":{"gitId":"alanlowzies"},"content":"     * @param deletedWorkout The workout to be deleted.","lastModifiedDate":"2022-03-10"},{"lineNumber":196,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":197,"author":{"gitId":"Musfirahe0556596"},"content":"    public void printDeleteWorkoutMessage(Workout deletedWorkout) {","lastModifiedDate":"2022-03-09"},{"lineNumber":198,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.println(DELETED_WORKOUT_MESSAGE);","lastModifiedDate":"2022-03-09"},{"lineNumber":199,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.println();","lastModifiedDate":"2022-03-09"},{"lineNumber":200,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.println(\"\\t\" + deletedWorkout.toString());","lastModifiedDate":"2022-03-09"},{"lineNumber":201,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.println();","lastModifiedDate":"2022-03-09"},{"lineNumber":202,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":203,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":204,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":205,"author":{"gitId":"TianaiYan"},"content":"     * Prints a message when a workout has been updated.","lastModifiedDate":"2022-03-12"},{"lineNumber":206,"author":{"gitId":"TianaiYan"},"content":"     * Shows updated workout.","lastModifiedDate":"2022-03-12"},{"lineNumber":207,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":208,"author":{"gitId":"TianaiYan"},"content":"     * @param oldWorkout The original workout in the list.","lastModifiedDate":"2022-04-10"},{"lineNumber":209,"author":{"gitId":"TianaiYan"},"content":"     * @param updatedWorkout The workout that is updated.","lastModifiedDate":"2022-03-24"},{"lineNumber":210,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":211,"author":{"gitId":"TianaiYan"},"content":"    public void printUpdateWorkoutMessage(String oldWorkout, Workout updatedWorkout) {","lastModifiedDate":"2022-04-05"},{"lineNumber":212,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(UPDATED_WORKOUT_MESSAGE + getColorText(TextColor.COLOR_YELLOW, oldWorkout) + \" to:\");","lastModifiedDate":"2022-04-05"},{"lineNumber":213,"author":{"gitId":"TianaiYan"},"content":"        System.out.println();","lastModifiedDate":"2022-03-12"},{"lineNumber":214,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\"\\t\" + updatedWorkout.toString());","lastModifiedDate":"2022-03-24"},{"lineNumber":215,"author":{"gitId":"TianaiYan"},"content":"        System.out.println();","lastModifiedDate":"2022-03-12"},{"lineNumber":216,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":217,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":218,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":219,"author":{"gitId":"a1021492980"},"content":"     * Prints the text in colors pre-defined in TextColor class.","lastModifiedDate":"2022-03-09"},{"lineNumber":220,"author":{"gitId":"a1021492980"},"content":"     * @param color ANSI color codes defined in TextColor class ONLY.","lastModifiedDate":"2022-03-09"},{"lineNumber":221,"author":{"gitId":"a1021492980"},"content":"     * @param text The string text that needs to be colored.","lastModifiedDate":"2022-03-09"},{"lineNumber":222,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":223,"author":{"gitId":"a1021492980"},"content":"    public void printColorText(String color, String text) {","lastModifiedDate":"2022-03-09"},{"lineNumber":224,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(color + text + TextColor.COLOR_RESET);","lastModifiedDate":"2022-03-09"},{"lineNumber":225,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":226,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":227,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":228,"author":{"gitId":"alanlowzies"},"content":"     * Formats the string to contain the ANSI color code specified.","lastModifiedDate":"2022-03-09"},{"lineNumber":229,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":230,"author":{"gitId":"alanlowzies"},"content":"     * @param color The color to format the string into.","lastModifiedDate":"2022-03-09"},{"lineNumber":231,"author":{"gitId":"alanlowzies"},"content":"     * @param text The text to be formatted with a color.","lastModifiedDate":"2022-03-09"},{"lineNumber":232,"author":{"gitId":"alanlowzies"},"content":"     * @return The string formatted with the ANSI color code.","lastModifiedDate":"2022-03-09"},{"lineNumber":233,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":234,"author":{"gitId":"alanlowzies"},"content":"    public String getColorText(String color, String text) {","lastModifiedDate":"2022-03-09"},{"lineNumber":235,"author":{"gitId":"alanlowzies"},"content":"        String textWithColor \u003d color + text + TextColor.COLOR_RESET;","lastModifiedDate":"2022-03-09"},{"lineNumber":236,"author":{"gitId":"alanlowzies"},"content":"        return textWithColor;","lastModifiedDate":"2022-03-09"},{"lineNumber":237,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":238,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":239,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":240,"author":{"gitId":"a1021492980"},"content":"     * Prints the help messages. To be updated.","lastModifiedDate":"2022-03-09"},{"lineNumber":241,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":242,"author":{"gitId":"a1021492980"},"content":"    public void printHelpMessage() {","lastModifiedDate":"2022-03-09"},{"lineNumber":243,"author":{"gitId":"a1021492980"},"content":"        printExerciseHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":244,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-09"},{"lineNumber":245,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-10"},{"lineNumber":246,"author":{"gitId":"a1021492980"},"content":"        printWorkoutHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":247,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-09"},{"lineNumber":248,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-09"},{"lineNumber":249,"author":{"gitId":"a1021492980"},"content":"        printPlanHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":250,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":251,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":252,"author":{"gitId":"a1021492980"},"content":"        printScheduleHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":253,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":254,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":255,"author":{"gitId":"a1021492980"},"content":"        printSearchHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":256,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":257,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-09"},{"lineNumber":258,"author":{"gitId":"a1021492980"},"content":"        printExitHelp();","lastModifiedDate":"2022-03-09"},{"lineNumber":259,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":260,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":261,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":262,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027exercise /list\u0027 command.","lastModifiedDate":"2022-03-10"},{"lineNumber":263,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":264,"author":{"gitId":"a1021492980"},"content":"    public void printExerciseListHelp() {","lastModifiedDate":"2022-03-10"},{"lineNumber":265,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To view all exercises available, please enter:\");","lastModifiedDate":"2022-03-10"},{"lineNumber":266,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t exercise /list\");","lastModifiedDate":"2022-03-10"},{"lineNumber":267,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will print all the exercises available.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":268,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":269,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":270,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":271,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027list\u0027 command.","lastModifiedDate":"2022-03-09"},{"lineNumber":272,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":273,"author":{"gitId":"a1021492980"},"content":"    public void printWorkoutListHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":274,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To view all workouts, please enter:\");","lastModifiedDate":"2022-03-09"},{"lineNumber":275,"author":{"gitId":"alanlowzies"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t workout /list\");","lastModifiedDate":"2022-03-09"},{"lineNumber":276,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will print all the existing workouts.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":277,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":278,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":279,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":280,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027workout /new\u0027 command.","lastModifiedDate":"2022-03-09"},{"lineNumber":281,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":282,"author":{"gitId":"a1021492980"},"content":"    public void printWorkoutAddHelp() {","lastModifiedDate":"2022-03-09"},{"lineNumber":283,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To add a workout, please enter: \");","lastModifiedDate":"2022-03-09"},{"lineNumber":284,"author":{"gitId":"alanlowzies"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t workout /new \u003cexercise name\u003e /reps \u003cno. of repetitions\u003e\");","lastModifiedDate":"2022-03-09"},{"lineNumber":285,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t Example: \");","lastModifiedDate":"2022-03-09"},{"lineNumber":286,"author":{"gitId":"alanlowzies"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t workout /new push up /reps 10\");","lastModifiedDate":"2022-03-09"},{"lineNumber":287,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will add a workout with \" + getColorText(TextColor.COLOR_YELLOW, \"10 reps\")","lastModifiedDate":"2022-03-24"},{"lineNumber":288,"author":{"gitId":"a1021492980"},"content":"                + \" of \" + getColorText(TextColor.COLOR_YELLOW, \"push up\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":289,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":290,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":291,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":292,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027workout /delete\u0027 command.","lastModifiedDate":"2022-03-09"},{"lineNumber":293,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":294,"author":{"gitId":"a1021492980"},"content":"    public void printWorkoutDeleteHelp() {","lastModifiedDate":"2022-03-09"},{"lineNumber":295,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To delete a workout, please enter: \");","lastModifiedDate":"2022-03-09"},{"lineNumber":296,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t workout /delete \u003cindex of workout\u003e\");","lastModifiedDate":"2022-03-24"},{"lineNumber":297,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t Example: \");","lastModifiedDate":"2022-03-09"},{"lineNumber":298,"author":{"gitId":"alanlowzies"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t workout /delete 1\");","lastModifiedDate":"2022-03-09"},{"lineNumber":299,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will delete the workout with index \"","lastModifiedDate":"2022-03-24"},{"lineNumber":300,"author":{"gitId":"a1021492980"},"content":"                + getColorText(TextColor.COLOR_YELLOW, \"1\") + \" if exists.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":301,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":302,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":303,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":304,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027workout /update\u0027 command.","lastModifiedDate":"2022-03-09"},{"lineNumber":305,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":306,"author":{"gitId":"a1021492980"},"content":"    public void printWorkoutUpdateHelp() {","lastModifiedDate":"2022-03-09"},{"lineNumber":307,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To update a workout, please enter: \");","lastModifiedDate":"2022-03-09"},{"lineNumber":308,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t workout /update \u003cindex of workout\u003e \u003cquantity\u003e\");","lastModifiedDate":"2022-03-24"},{"lineNumber":309,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t Example: \");","lastModifiedDate":"2022-03-09"},{"lineNumber":310,"author":{"gitId":"alanlowzies"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t workout /update 1 15\");","lastModifiedDate":"2022-03-09"},{"lineNumber":311,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will update the workout with index \"","lastModifiedDate":"2022-03-24"},{"lineNumber":312,"author":{"gitId":"a1021492980"},"content":"                + getColorText(TextColor.COLOR_YELLOW, \"1\") + \" to \"","lastModifiedDate":"2022-03-24"},{"lineNumber":313,"author":{"gitId":"a1021492980"},"content":"                + getColorText(TextColor.COLOR_YELLOW, \"15 reps\") + \" if exists.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":314,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":315,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":316,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":317,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027exit\u0027 command.","lastModifiedDate":"2022-03-09"},{"lineNumber":318,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":319,"author":{"gitId":"a1021492980"},"content":"    public void printExitHelp() {","lastModifiedDate":"2022-03-09"},{"lineNumber":320,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To exit werkIt, please enter: \");","lastModifiedDate":"2022-03-09"},{"lineNumber":321,"author":{"gitId":"alanlowzies"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t exit\");","lastModifiedDate":"2022-03-09"},{"lineNumber":322,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will exit werkIt.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":323,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":324,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":325,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":326,"author":{"gitId":"alanlowzies"},"content":"     * Prints a message that tells the user that the saved file data is being loaded","lastModifiedDate":"2022-03-14"},{"lineNumber":327,"author":{"gitId":"alanlowzies"},"content":"     * into the application.","lastModifiedDate":"2022-03-14"},{"lineNumber":328,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":329,"author":{"gitId":"alanlowzies"},"content":"    public void printLoadingFileDataMessage() {","lastModifiedDate":"2022-03-09"},{"lineNumber":330,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(LOADING_FILE_DATA_MSG);","lastModifiedDate":"2022-03-09"},{"lineNumber":331,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":332,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":333,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":334,"author":{"gitId":"alanlowzies"},"content":"     * Prints the result of the file load process.","lastModifiedDate":"2022-03-14"},{"lineNumber":335,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":336,"author":{"gitId":"alanlowzies"},"content":"     * @param filename         The name of the file that is loaded.","lastModifiedDate":"2022-03-14"},{"lineNumber":337,"author":{"gitId":"alanlowzies"},"content":"     * @param isLoadSuccessful Whether the file load is successful or not.","lastModifiedDate":"2022-03-14"},{"lineNumber":338,"author":{"gitId":"alanlowzies"},"content":"     * @throws UnknownFileException If the filename specified is unknown.","lastModifiedDate":"2022-03-14"},{"lineNumber":339,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":340,"author":{"gitId":"alanlowzies"},"content":"    public void printFileLoadStatusMessage(String filename, boolean isLoadSuccessful) throws UnknownFileException {","lastModifiedDate":"2022-03-09"},{"lineNumber":341,"author":{"gitId":"alanlowzies"},"content":"        String statusMessage;","lastModifiedDate":"2022-03-09"},{"lineNumber":342,"author":{"gitId":"alanlowzies"},"content":"        if (isLoadSuccessful) {","lastModifiedDate":"2022-03-09"},{"lineNumber":343,"author":{"gitId":"alanlowzies"},"content":"            statusMessage \u003d getColorText(TextColor.COLOR_GREEN, FILE_LOAD_OK);","lastModifiedDate":"2022-03-09"},{"lineNumber":344,"author":{"gitId":"alanlowzies"},"content":"        } else {","lastModifiedDate":"2022-03-09"},{"lineNumber":345,"author":{"gitId":"alanlowzies"},"content":"            statusMessage \u003d getColorText(TextColor.COLOR_RED, FILE_LOAD_NOT_OK);","lastModifiedDate":"2022-03-09"},{"lineNumber":346,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":347,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":348,"author":{"gitId":"alanlowzies"},"content":"        String messageToPrint;","lastModifiedDate":"2022-03-09"},{"lineNumber":349,"author":{"gitId":"alanlowzies"},"content":"        switch (filename) {","lastModifiedDate":"2022-03-09"},{"lineNumber":350,"author":{"gitId":"alanlowzies"},"content":"        case FileManager.NAME_EXERCISE_FILE:","lastModifiedDate":"2022-04-09"},{"lineNumber":351,"author":{"gitId":"alanlowzies"},"content":"            messageToPrint \u003d EXERCISES_FILE_LOADED_MSG;","lastModifiedDate":"2022-03-09"},{"lineNumber":352,"author":{"gitId":"alanlowzies"},"content":"            break;","lastModifiedDate":"2022-03-09"},{"lineNumber":353,"author":{"gitId":"alanlowzies"},"content":"        case FileManager.NAME_WORKOUT_FILE:","lastModifiedDate":"2022-04-09"},{"lineNumber":354,"author":{"gitId":"alanlowzies"},"content":"            messageToPrint \u003d WORKOUTS_FILE_LOADED_MSG;","lastModifiedDate":"2022-03-09"},{"lineNumber":355,"author":{"gitId":"alanlowzies"},"content":"            break;","lastModifiedDate":"2022-03-09"},{"lineNumber":356,"author":{"gitId":"alanlowzies"},"content":"        case FileManager.NAME_PLAN_FILE:","lastModifiedDate":"2022-04-09"},{"lineNumber":357,"author":{"gitId":"a1021492980"},"content":"            messageToPrint \u003d PLANS_FILE_LOADED_MSG;","lastModifiedDate":"2022-03-20"},{"lineNumber":358,"author":{"gitId":"a1021492980"},"content":"            break;","lastModifiedDate":"2022-03-20"},{"lineNumber":359,"author":{"gitId":"alanlowzies"},"content":"        case FileManager.NAME_SCHEDULE_FILE:","lastModifiedDate":"2022-04-09"},{"lineNumber":360,"author":{"gitId":"alanlowzies"},"content":"            messageToPrint \u003d SCHEDULE_FILE_LOADED_MSG;","lastModifiedDate":"2022-03-23"},{"lineNumber":361,"author":{"gitId":"alanlowzies"},"content":"            break;","lastModifiedDate":"2022-03-23"},{"lineNumber":362,"author":{"gitId":"alanlowzies"},"content":"        default:","lastModifiedDate":"2022-03-09"},{"lineNumber":363,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.WARNING, \"Unknown filename encountered.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":364,"author":{"gitId":"alanlowzies"},"content":"            throw new UnknownFileException(filename, UnknownFileException.UNKNOWN_FILE_MSG);","lastModifiedDate":"2022-03-09"},{"lineNumber":365,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":366,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":367,"author":{"gitId":"alanlowzies"},"content":"        System.out.printf(messageToPrint, statusMessage);","lastModifiedDate":"2022-03-09"},{"lineNumber":368,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":369,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":370,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":371,"author":{"gitId":"alanlowzies"},"content":"     * Prints a message to tell the user that the application is currently checking whether the required","lastModifiedDate":"2022-03-14"},{"lineNumber":372,"author":{"gitId":"alanlowzies"},"content":"     * directory and files exist in the user\u0027s system.","lastModifiedDate":"2022-03-14"},{"lineNumber":373,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":374,"author":{"gitId":"alanlowzies"},"content":"    public void printCheckingDirectoryAndFilesMessage() {","lastModifiedDate":"2022-03-09"},{"lineNumber":375,"author":{"gitId":"alanlowzies"},"content":"        System.out.print(CHECK_DIRECTORY_AND_FILES_MSG);","lastModifiedDate":"2022-03-09"},{"lineNumber":376,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":377,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":378,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":379,"author":{"gitId":"alanlowzies"},"content":"     * Prints a message to tell the user that the required directory is not found and a new one","lastModifiedDate":"2022-03-14"},{"lineNumber":380,"author":{"gitId":"alanlowzies"},"content":"     * will be created.","lastModifiedDate":"2022-03-14"},{"lineNumber":381,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":382,"author":{"gitId":"alanlowzies"},"content":"    public void printDirectoryNotFoundMessage() {","lastModifiedDate":"2022-03-09"},{"lineNumber":383,"author":{"gitId":"alanlowzies"},"content":"        System.out.println();","lastModifiedDate":"2022-03-09"},{"lineNumber":384,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(DIRECTORY_NOT_FOUND_MSG);","lastModifiedDate":"2022-03-09"},{"lineNumber":385,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":386,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":387,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":388,"author":{"gitId":"alanlowzies"},"content":"     * Prints a message to tell the user that the required directory has been successfully created.","lastModifiedDate":"2022-03-14"},{"lineNumber":389,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":390,"author":{"gitId":"alanlowzies"},"content":"    public void printDirectoryCreatedMessage() {","lastModifiedDate":"2022-03-10"},{"lineNumber":391,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(DIRECTORY_CREATED_MSG);","lastModifiedDate":"2022-03-10"},{"lineNumber":392,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":393,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":394,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":395,"author":{"gitId":"alanlowzies"},"content":"     * Prints a message to tell the user that the exercise file is not found on the user\u0027s system","lastModifiedDate":"2022-03-14"},{"lineNumber":396,"author":{"gitId":"alanlowzies"},"content":"     * and a new one will be created.","lastModifiedDate":"2022-03-14"},{"lineNumber":397,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":398,"author":{"gitId":"alanlowzies"},"content":"    public void printExerciseFileNotFoundMessage() {","lastModifiedDate":"2022-03-09"},{"lineNumber":399,"author":{"gitId":"alanlowzies"},"content":"        System.out.println();","lastModifiedDate":"2022-03-09"},{"lineNumber":400,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(EXERCISE_FILE_NOT_FOUND_MSG);","lastModifiedDate":"2022-03-09"},{"lineNumber":401,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":402,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":403,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":404,"author":{"gitId":"alanlowzies"},"content":"     * Prints a message to tell the user that the exercise file has been successfully created.","lastModifiedDate":"2022-03-14"},{"lineNumber":405,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":406,"author":{"gitId":"alanlowzies"},"content":"    public void printExerciseFileCreatedMessage() {","lastModifiedDate":"2022-03-10"},{"lineNumber":407,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(EXERCISE_FILE_CREATED_MSG);","lastModifiedDate":"2022-03-10"},{"lineNumber":408,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":409,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":410,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":411,"author":{"gitId":"alanlowzies"},"content":"     * Prints a message to tell the user that the workout file is not found on the user\u0027s system","lastModifiedDate":"2022-03-14"},{"lineNumber":412,"author":{"gitId":"alanlowzies"},"content":"     * and a new one will be created.","lastModifiedDate":"2022-03-14"},{"lineNumber":413,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":414,"author":{"gitId":"alanlowzies"},"content":"    public void printWorkoutFileNotFoundMessage() {","lastModifiedDate":"2022-03-09"},{"lineNumber":415,"author":{"gitId":"alanlowzies"},"content":"        System.out.println();","lastModifiedDate":"2022-03-09"},{"lineNumber":416,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(WORKOUT_FILE_NOT_FOUND_MSG);","lastModifiedDate":"2022-03-09"},{"lineNumber":417,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":418,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":419,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":420,"author":{"gitId":"alanlowzies"},"content":"     * Prints a message to tell the user that the workout file has been successfully created.","lastModifiedDate":"2022-03-14"},{"lineNumber":421,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":422,"author":{"gitId":"alanlowzies"},"content":"    public void printWorkoutFileCreatedMessage() {","lastModifiedDate":"2022-03-10"},{"lineNumber":423,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(WORKOUT_FILE_CREATED_MSG);","lastModifiedDate":"2022-03-10"},{"lineNumber":424,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":425,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":426,"author":{"gitId":"alanlowzies"},"content":"    public void printPlanFileNotFoundMessage() {","lastModifiedDate":"2022-03-23"},{"lineNumber":427,"author":{"gitId":"alanlowzies"},"content":"        System.out.println();","lastModifiedDate":"2022-03-23"},{"lineNumber":428,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(PLAN_FILE_NOT_FOUND_MSG);","lastModifiedDate":"2022-03-23"},{"lineNumber":429,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":430,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":431,"author":{"gitId":"a1021492980"},"content":"    public void printPlanFileCreatedMessage() {","lastModifiedDate":"2022-03-20"},{"lineNumber":432,"author":{"gitId":"a1021492980"},"content":"        System.out.println(PLAN_FILE_CREATED_MSG);","lastModifiedDate":"2022-03-20"},{"lineNumber":433,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":434,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":435,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":436,"author":{"gitId":"alanlowzies"},"content":"     * Prints a message to tell the user that the schedule file is not found on the user\u0027s system","lastModifiedDate":"2022-03-23"},{"lineNumber":437,"author":{"gitId":"alanlowzies"},"content":"     * and a new one will be created.","lastModifiedDate":"2022-03-23"},{"lineNumber":438,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":439,"author":{"gitId":"alanlowzies"},"content":"    public void printScheduleFileNotFoundMessage() {","lastModifiedDate":"2022-03-23"},{"lineNumber":440,"author":{"gitId":"alanlowzies"},"content":"        System.out.println();","lastModifiedDate":"2022-03-23"},{"lineNumber":441,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(SCHEDULE_FILE_NOT_FOUND_MSG);","lastModifiedDate":"2022-03-23"},{"lineNumber":442,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":443,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":444,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":445,"author":{"gitId":"alanlowzies"},"content":"     * Prints a message to tell the user that the schedule file has been successfully created.","lastModifiedDate":"2022-03-23"},{"lineNumber":446,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":447,"author":{"gitId":"alanlowzies"},"content":"    public void printScheduleFileCreatedMessage() {","lastModifiedDate":"2022-03-23"},{"lineNumber":448,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(SCHEDULE_FILE_CREATED_MSG);","lastModifiedDate":"2022-03-23"},{"lineNumber":449,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":450,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":451,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":452,"author":{"gitId":"alanlowzies"},"content":"     * Prints either the status or nothing depending on the presence of the required directory and","lastModifiedDate":"2022-03-14"},{"lineNumber":453,"author":{"gitId":"alanlowzies"},"content":"     * files on the user\u0027s system. If all the required directory and files are present, a status","lastModifiedDate":"2022-03-14"},{"lineNumber":454,"author":{"gitId":"alanlowzies"},"content":"     * will be printed. Otherwise, an empty line will be printed.","lastModifiedDate":"2022-03-14"},{"lineNumber":455,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":456,"author":{"gitId":"alanlowzies"},"content":"     * @param areAllDirectoryAndFilesPresent A boolean indicating if the required directory and","lastModifiedDate":"2022-03-14"},{"lineNumber":457,"author":{"gitId":"alanlowzies"},"content":"     *                                       files are present.","lastModifiedDate":"2022-03-14"},{"lineNumber":458,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":459,"author":{"gitId":"alanlowzies"},"content":"    public void printEmptyLineOrStatus(boolean areAllDirectoryAndFilesPresent) {","lastModifiedDate":"2022-03-09"},{"lineNumber":460,"author":{"gitId":"alanlowzies"},"content":"        if (areAllDirectoryAndFilesPresent) {","lastModifiedDate":"2022-03-09"},{"lineNumber":461,"author":{"gitId":"alanlowzies"},"content":"            String status \u003d getColorText(TextColor.COLOR_GREEN, ALL_DIRECTORY_AND_FILES_PRESENT);","lastModifiedDate":"2022-03-09"},{"lineNumber":462,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\" \" + status);","lastModifiedDate":"2022-03-09"},{"lineNumber":463,"author":{"gitId":"alanlowzies"},"content":"            System.out.println();","lastModifiedDate":"2022-03-09"},{"lineNumber":464,"author":{"gitId":"alanlowzies"},"content":"        } else {","lastModifiedDate":"2022-03-09"},{"lineNumber":465,"author":{"gitId":"alanlowzies"},"content":"            System.out.println();","lastModifiedDate":"2022-03-09"},{"lineNumber":466,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":467,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":468,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":469,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":470,"author":{"gitId":"Musfirahe0556596"},"content":"     * Prints a message when a new plan has been created. The newly created plan will also be displayed.","lastModifiedDate":"2022-03-19"},{"lineNumber":471,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":472,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param newPlan The Plan object that is newly created.","lastModifiedDate":"2022-03-19"},{"lineNumber":473,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":474,"author":{"gitId":"Musfirahe0556596"},"content":"    public void printNewPlanCreatedMessage(Plan newPlan) {","lastModifiedDate":"2022-03-19"},{"lineNumber":475,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.println(NEW_PLAN_CREATED_MESSAGE);","lastModifiedDate":"2022-03-19"},{"lineNumber":476,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.println();","lastModifiedDate":"2022-03-19"},{"lineNumber":477,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.println(\"\\t\" + newPlan.toString());","lastModifiedDate":"2022-03-19"},{"lineNumber":478,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.println();","lastModifiedDate":"2022-03-19"},{"lineNumber":479,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":480,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":481,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":482,"author":{"gitId":"TianaiYan"},"content":"     * Prints a message when a plan has been deleted and shows the deleted workout.","lastModifiedDate":"2022-03-23"},{"lineNumber":483,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":484,"author":{"gitId":"TianaiYan"},"content":"     * @param deletedPlan The plan to be deleted.","lastModifiedDate":"2022-03-23"},{"lineNumber":485,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":486,"author":{"gitId":"TianaiYan"},"content":"    public void printDeletePlanMessage(Plan deletedPlan) {","lastModifiedDate":"2022-03-23"},{"lineNumber":487,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(DELETED_PLAN_MESSAGE);","lastModifiedDate":"2022-03-23"},{"lineNumber":488,"author":{"gitId":"TianaiYan"},"content":"        System.out.println();","lastModifiedDate":"2022-03-23"},{"lineNumber":489,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\"\\t\" + deletedPlan.toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":490,"author":{"gitId":"TianaiYan"},"content":"        System.out.println();","lastModifiedDate":"2022-03-23"},{"lineNumber":491,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":492,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":493,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":494,"author":{"gitId":"emilysim00"},"content":"     * Prints a message when a new day schedule has been created. The newly created schedule will also be displayed.","lastModifiedDate":"2022-03-21"},{"lineNumber":495,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":496,"author":{"gitId":"emilysim00"},"content":"     * @param newDay The Day object that is newly created.","lastModifiedDate":"2022-03-21"},{"lineNumber":497,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":498,"author":{"gitId":"emilysim00"},"content":"    public void printNewScheduleCreatedMessage(Day newDay) {","lastModifiedDate":"2022-03-21"},{"lineNumber":499,"author":{"gitId":"emilysim00"},"content":"        System.out.println(NEW_DAY_CREATED_MESSAGE);","lastModifiedDate":"2022-03-21"},{"lineNumber":500,"author":{"gitId":"emilysim00"},"content":"        System.out.println();","lastModifiedDate":"2022-03-21"},{"lineNumber":501,"author":{"gitId":"emilysim00"},"content":"        System.out.println(\"\\t\" + newDay.toString());","lastModifiedDate":"2022-03-21"},{"lineNumber":502,"author":{"gitId":"emilysim00"},"content":"        System.out.println();","lastModifiedDate":"2022-03-21"},{"lineNumber":503,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":504,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":505,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":506,"author":{"gitId":"emilysim00"},"content":"     * Prints a message when a plan scheduled on a particular day is removed.","lastModifiedDate":"2022-04-06"},{"lineNumber":507,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-04-10"},{"lineNumber":508,"author":{"gitId":"emilysim00"},"content":"     * @param dayName Name of the day to be printed.","lastModifiedDate":"2022-04-10"},{"lineNumber":509,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":510,"author":{"gitId":"emilysim00"},"content":"    public void printClearedScheduleOnADay(String dayName) {","lastModifiedDate":"2022-04-06"},{"lineNumber":511,"author":{"gitId":"emilysim00"},"content":"        if (dayName \u003d\u003d \" \") {","lastModifiedDate":"2022-04-06"},{"lineNumber":512,"author":{"gitId":"emilysim00"},"content":"            System.out.println(\"No plan is being scheduled, hence no plan is cleared.\");","lastModifiedDate":"2022-04-06"},{"lineNumber":513,"author":{"gitId":"emilysim00"},"content":"        } else {","lastModifiedDate":"2022-04-06"},{"lineNumber":514,"author":{"gitId":"emilysim00"},"content":"            System.out.println(\"Plan has been cleared for \" + dayName + \".\");","lastModifiedDate":"2022-04-07"},{"lineNumber":515,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":516,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":517,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":518,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":519,"author":{"gitId":"emilysim00"},"content":"     * Prints a message when all day schedule had been cleared.","lastModifiedDate":"2022-03-22"},{"lineNumber":520,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":521,"author":{"gitId":"emilysim00"},"content":"    public void printClearedScheduleMessage() {","lastModifiedDate":"2022-03-22"},{"lineNumber":522,"author":{"gitId":"emilysim00"},"content":"        System.out.println(\"Schedule has been cleared and reset.\");","lastModifiedDate":"2022-04-07"},{"lineNumber":523,"author":{"gitId":"emilysim00"},"content":"        System.out.println(\"There is no plan scheduled for any day.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":524,"author":{"gitId":"emilysim00"},"content":"        System.out.println(\"To add plan for any day, enter:\");","lastModifiedDate":"2022-03-22"},{"lineNumber":525,"author":{"gitId":"emilysim00"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"schedule /update \u003cday number [1-7]\u003e \u003cplan number\u003e\");","lastModifiedDate":"2022-03-22"},{"lineNumber":526,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":527,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":528,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":529,"author":{"gitId":"a1021492980"},"content":"     * Prints message when no matching result is found under search command.","lastModifiedDate":"2022-03-24"},{"lineNumber":530,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":531,"author":{"gitId":"a1021492980"},"content":"     * @param category The category that will be searched.","lastModifiedDate":"2022-03-24"},{"lineNumber":532,"author":{"gitId":"a1021492980"},"content":"     * @param keyword The keyword to be matched.","lastModifiedDate":"2022-04-10"},{"lineNumber":533,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":534,"author":{"gitId":"a1021492980"},"content":"    public void printSearchNotFoundMessage(String category, String keyword) {","lastModifiedDate":"2022-04-09"},{"lineNumber":535,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"Sorry, no matching \" + category + \" found for the keyword\"","lastModifiedDate":"2022-04-09"},{"lineNumber":536,"author":{"gitId":"a1021492980"},"content":"                + getColorText(TextColor.COLOR_YELLOW, \" [\" + keyword + \"]\") + \u0027.\u0027);","lastModifiedDate":"2022-04-09"},{"lineNumber":537,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":538,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":539,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":540,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027plan /new\u0027 command.","lastModifiedDate":"2022-03-24"},{"lineNumber":541,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":542,"author":{"gitId":"a1021492980"},"content":"    public void printPlanAddHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":543,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To add a plan, please enter: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":544,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t plan /new \u003cplan name\u003e /workouts\"","lastModifiedDate":"2022-03-24"},{"lineNumber":545,"author":{"gitId":"a1021492980"},"content":"                + \" \u003cworkout index(s) separated by \u0027,\u0027\u003e\");","lastModifiedDate":"2022-03-24"},{"lineNumber":546,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t Example: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":547,"author":{"gitId":"a1021492980"},"content":"        printWorkoutExample();","lastModifiedDate":"2022-03-24"},{"lineNumber":548,"author":{"gitId":"a1021492980"},"content":"        printPlanAddExample();","lastModifiedDate":"2022-03-24"},{"lineNumber":549,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":550,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":551,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":552,"author":{"gitId":"a1021492980"},"content":"     * Prints workout list examples.","lastModifiedDate":"2022-03-24"},{"lineNumber":553,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":554,"author":{"gitId":"a1021492980"},"content":"    public void printWorkoutExample() {","lastModifiedDate":"2022-03-24"},{"lineNumber":555,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t The workout list upon entering \"","lastModifiedDate":"2022-03-24"},{"lineNumber":556,"author":{"gitId":"a1021492980"},"content":"                + getColorText(TextColor.COLOR_YELLOW, \"workout /list\")","lastModifiedDate":"2022-03-24"},{"lineNumber":557,"author":{"gitId":"a1021492980"},"content":"                + \", contains the\\n \\t following workouts:\");","lastModifiedDate":"2022-03-24"},{"lineNumber":558,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t 1. push up (10 reps)\");","lastModifiedDate":"2022-03-24"},{"lineNumber":559,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t 2. sit up (10 reps)\");","lastModifiedDate":"2022-03-24"},{"lineNumber":560,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t 3. pull up (10 reps)\");","lastModifiedDate":"2022-03-24"},{"lineNumber":561,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":562,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":563,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":564,"author":{"gitId":"a1021492980"},"content":"     * Prints the example of adding plans.","lastModifiedDate":"2022-03-24"},{"lineNumber":565,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":566,"author":{"gitId":"a1021492980"},"content":"    public void printPlanAddExample() {","lastModifiedDate":"2022-03-24"},{"lineNumber":567,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To create a new plan, enter the following command:\");","lastModifiedDate":"2022-03-24"},{"lineNumber":568,"author":{"gitId":"emilysim00"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t plan /new grow my muscles /workouts 1, 2\");","lastModifiedDate":"2022-04-07"},{"lineNumber":569,"author":{"gitId":"emilysim00"},"content":"        System.out.println(\"\\t A new plan named \" + getColorText(TextColor.COLOR_YELLOW, \"grow my muscles\")","lastModifiedDate":"2022-04-07"},{"lineNumber":570,"author":{"gitId":"a1021492980"},"content":"                + \" with workout index \" + getColorText(TextColor.COLOR_YELLOW, \"1\") + \" and \"","lastModifiedDate":"2022-03-24"},{"lineNumber":571,"author":{"gitId":"a1021492980"},"content":"                + getColorText(TextColor.COLOR_YELLOW, \"2\\n\")","lastModifiedDate":"2022-03-24"},{"lineNumber":572,"author":{"gitId":"a1021492980"},"content":"                + \"\\t will be created and added to the application\u0027s list of plans.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":573,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":574,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":575,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":576,"author":{"gitId":"a1021492980"},"content":"     * Prints the example plan list to be used in schedule update help message.","lastModifiedDate":"2022-03-24"},{"lineNumber":577,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":578,"author":{"gitId":"a1021492980"},"content":"    public void printPlanExample() {","lastModifiedDate":"2022-03-24"},{"lineNumber":579,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t The plan list upon entering \"","lastModifiedDate":"2022-03-24"},{"lineNumber":580,"author":{"gitId":"a1021492980"},"content":"                + getColorText(TextColor.COLOR_YELLOW, \"plan /list\") + \", contains the\\n \\t following plans:\");","lastModifiedDate":"2022-03-24"},{"lineNumber":581,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t 1. arms\");","lastModifiedDate":"2022-03-24"},{"lineNumber":582,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t 2. stronger arms\");","lastModifiedDate":"2022-03-24"},{"lineNumber":583,"author":{"gitId":"emilysim00"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t 3. grow my muscles\");","lastModifiedDate":"2022-04-07"},{"lineNumber":584,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":585,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":586,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":587,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027plan /list\u0027 command.","lastModifiedDate":"2022-03-24"},{"lineNumber":588,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":589,"author":{"gitId":"a1021492980"},"content":"    public void printPlanListHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":590,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To view all plans, please enter:\");","lastModifiedDate":"2022-03-24"},{"lineNumber":591,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t plan /list\");","lastModifiedDate":"2022-03-24"},{"lineNumber":592,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will print all the existing plans.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":593,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":594,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":595,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":596,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027plan /details\u0027 command.","lastModifiedDate":"2022-03-24"},{"lineNumber":597,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":598,"author":{"gitId":"a1021492980"},"content":"    public void printPlanDetailsHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":599,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To view each plan in detail, please enter:\");","lastModifiedDate":"2022-03-24"},{"lineNumber":600,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t plan /details \u003cplan index in list\u003e\");","lastModifiedDate":"2022-03-24"},{"lineNumber":601,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will print all the workouts in the plan of given index.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":602,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":603,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":604,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":605,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027schedule /list\u0027 command.","lastModifiedDate":"2022-03-24"},{"lineNumber":606,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":607,"author":{"gitId":"a1021492980"},"content":"    public void printScheduleListHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":608,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To view the schedule, please enter:\");","lastModifiedDate":"2022-03-24"},{"lineNumber":609,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t schedule /list\");","lastModifiedDate":"2022-03-24"},{"lineNumber":610,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will print the schedule.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":611,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":612,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":613,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":614,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027schedule /update\u0027 command.","lastModifiedDate":"2022-03-24"},{"lineNumber":615,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":616,"author":{"gitId":"a1021492980"},"content":"    public void printScheduleUpdateHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":617,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To update schedule, please enter: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":618,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t schedule /update \u003cday index [1-7]\u003e \u003cplan index in the list\u003e\");","lastModifiedDate":"2022-03-24"},{"lineNumber":619,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t Example: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":620,"author":{"gitId":"a1021492980"},"content":"        printPlanExample();","lastModifiedDate":"2022-03-24"},{"lineNumber":621,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To update the plan schedule for Monday with plan 1,\"","lastModifiedDate":"2022-03-24"},{"lineNumber":622,"author":{"gitId":"a1021492980"},"content":"                + \" enter the\\n \\t following command:\");","lastModifiedDate":"2022-03-24"},{"lineNumber":623,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t schedule /update 1 1\");","lastModifiedDate":"2022-03-24"},{"lineNumber":624,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will update the schedule of \"","lastModifiedDate":"2022-03-24"},{"lineNumber":625,"author":{"gitId":"a1021492980"},"content":"                + getColorText(TextColor.COLOR_YELLOW, \"Monday\")","lastModifiedDate":"2022-03-24"},{"lineNumber":626,"author":{"gitId":"a1021492980"},"content":"                + \" with a plan named \" + getColorText(TextColor.COLOR_YELLOW, \"arms\") + \".\");","lastModifiedDate":"2022-03-24"},{"lineNumber":627,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":628,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":629,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":630,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027schedule /clear\u0027 and \u0027schedule /clearall\u0027 commands.","lastModifiedDate":"2022-03-24"},{"lineNumber":631,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":632,"author":{"gitId":"a1021492980"},"content":"    public void printScheduleClearHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":633,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To clear schedule, please enter: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":634,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t schedule /clear \u003cday index [1-7]\u003e\");","lastModifiedDate":"2022-03-24"},{"lineNumber":635,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will clear the schedule for the given day.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":636,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t schedule /clearall\");","lastModifiedDate":"2022-03-24"},{"lineNumber":637,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will clear the schedule for everyday.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":638,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":639,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":640,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":641,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027plan /delete\u0027 command.","lastModifiedDate":"2022-03-24"},{"lineNumber":642,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":643,"author":{"gitId":"a1021492980"},"content":"    public void printPlanDeleteHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":644,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To delete a plan, please enter: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":645,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t plan /delete \u003cindex of plan\u003e\");","lastModifiedDate":"2022-03-24"},{"lineNumber":646,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t Example: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":647,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t plan /delete 1\");","lastModifiedDate":"2022-03-24"},{"lineNumber":648,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will delete the plan with index \"","lastModifiedDate":"2022-03-24"},{"lineNumber":649,"author":{"gitId":"a1021492980"},"content":"                + getColorText(TextColor.COLOR_YELLOW, \"1\") + \" if exists.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":650,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":651,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":652,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":653,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027search /exercise\u0027 command.","lastModifiedDate":"2022-03-24"},{"lineNumber":654,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":655,"author":{"gitId":"a1021492980"},"content":"    public void printSearchExerciseHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":656,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To search for exercise(s), please enter: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":657,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t search /exercise \u003cexercise keyword\u003e\");","lastModifiedDate":"2022-03-24"},{"lineNumber":658,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t Example: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":659,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t search /exercise up\");","lastModifiedDate":"2022-03-24"},{"lineNumber":660,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will show the exercise(s) containing keyword \"","lastModifiedDate":"2022-03-24"},{"lineNumber":661,"author":{"gitId":"a1021492980"},"content":"                + getColorText(TextColor.COLOR_YELLOW, \"up\") + \" if exist.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":662,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":663,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":664,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":665,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027search /workout\u0027 command.","lastModifiedDate":"2022-03-24"},{"lineNumber":666,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":667,"author":{"gitId":"a1021492980"},"content":"    public void printSearchWorkoutHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":668,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To search for workout(s), please enter: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":669,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t search /workout \u003cexercise keyword or number of reps\u003e\");","lastModifiedDate":"2022-03-24"},{"lineNumber":670,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t Example: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":671,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t search /workout up\");","lastModifiedDate":"2022-03-24"},{"lineNumber":672,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will show the workout(s) containing exercise with keyword\\n\\t \"","lastModifiedDate":"2022-03-24"},{"lineNumber":673,"author":{"gitId":"a1021492980"},"content":"                + getColorText(TextColor.COLOR_YELLOW, \"up\") + \" if exist.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":674,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t search /workout 15\");","lastModifiedDate":"2022-03-24"},{"lineNumber":675,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will show the workout(s) with \"","lastModifiedDate":"2022-03-24"},{"lineNumber":676,"author":{"gitId":"a1021492980"},"content":"                + getColorText(TextColor.COLOR_YELLOW, \"reps \u003d 15\") + \" if exist.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":677,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":678,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":679,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":680,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027search /plan\u0027 command.","lastModifiedDate":"2022-03-24"},{"lineNumber":681,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":682,"author":{"gitId":"a1021492980"},"content":"    public void printSearchPlanHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":683,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To search for plan(s), please enter: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":684,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t search /plan \u003cplan keyword\u003e\");","lastModifiedDate":"2022-03-24"},{"lineNumber":685,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t Example: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":686,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t search /plan grow\");","lastModifiedDate":"2022-03-24"},{"lineNumber":687,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will show the plan(s) containing keyword \"","lastModifiedDate":"2022-03-24"},{"lineNumber":688,"author":{"gitId":"a1021492980"},"content":"                + getColorText(TextColor.COLOR_YELLOW, \"grow\") + \" if exist.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":689,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":690,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":691,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":692,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027search /all\u0027 command.","lastModifiedDate":"2022-03-24"},{"lineNumber":693,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":694,"author":{"gitId":"a1021492980"},"content":"    public void printSearchAllHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":695,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To search for everything related to the keyword, please enter: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":696,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t search /all \u003ckeyword\u003e\");","lastModifiedDate":"2022-03-24"},{"lineNumber":697,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t Example: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":698,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t search /all a\");","lastModifiedDate":"2022-03-24"},{"lineNumber":699,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will show the exercise(s), workout(s) and plan(s) containing\\n\\t keyword \"","lastModifiedDate":"2022-03-24"},{"lineNumber":700,"author":{"gitId":"a1021492980"},"content":"                + getColorText(TextColor.COLOR_YELLOW, \"a\") + \" if exist.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":701,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":702,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":703,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":704,"author":{"gitId":"a1021492980"},"content":"     * Prints all exercise related help messages.","lastModifiedDate":"2022-03-24"},{"lineNumber":705,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":706,"author":{"gitId":"a1021492980"},"content":"    public void printExerciseHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":707,"author":{"gitId":"a1021492980"},"content":"        printExerciseListHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":708,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":709,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":710,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":711,"author":{"gitId":"a1021492980"},"content":"     * Prints all workout related help messages.","lastModifiedDate":"2022-03-24"},{"lineNumber":712,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":713,"author":{"gitId":"a1021492980"},"content":"    public void printWorkoutHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":714,"author":{"gitId":"a1021492980"},"content":"        printWorkoutListHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":715,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":716,"author":{"gitId":"a1021492980"},"content":"        printWorkoutAddHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":717,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":718,"author":{"gitId":"a1021492980"},"content":"        printWorkoutDeleteHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":719,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":720,"author":{"gitId":"a1021492980"},"content":"        printWorkoutUpdateHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":721,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":722,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":723,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":724,"author":{"gitId":"a1021492980"},"content":"     * Prints all plan related help messages.","lastModifiedDate":"2022-03-24"},{"lineNumber":725,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":726,"author":{"gitId":"a1021492980"},"content":"    public void printPlanHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":727,"author":{"gitId":"a1021492980"},"content":"        printPlanListHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":728,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":729,"author":{"gitId":"a1021492980"},"content":"        printPlanDetailsHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":730,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":731,"author":{"gitId":"a1021492980"},"content":"        printPlanAddHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":732,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":733,"author":{"gitId":"a1021492980"},"content":"        printPlanDeleteHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":734,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":735,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":736,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":737,"author":{"gitId":"a1021492980"},"content":"     * Prints all schedule related help messages.","lastModifiedDate":"2022-03-24"},{"lineNumber":738,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":739,"author":{"gitId":"a1021492980"},"content":"    public void printScheduleHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":740,"author":{"gitId":"a1021492980"},"content":"        printScheduleListHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":741,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":742,"author":{"gitId":"a1021492980"},"content":"        printScheduleUpdateHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":743,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":744,"author":{"gitId":"a1021492980"},"content":"        printScheduleClearHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":745,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":746,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":747,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":748,"author":{"gitId":"a1021492980"},"content":"     * Prints all search related help messages.","lastModifiedDate":"2022-03-24"},{"lineNumber":749,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":750,"author":{"gitId":"a1021492980"},"content":"    public void printSearchHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":751,"author":{"gitId":"a1021492980"},"content":"        printSearchExerciseHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":752,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":753,"author":{"gitId":"a1021492980"},"content":"        printSearchWorkoutHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":754,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":755,"author":{"gitId":"a1021492980"},"content":"        printSearchPlanHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":756,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":757,"author":{"gitId":"a1021492980"},"content":"        printSearchAllHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":758,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":759,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"emilysim00":45,"Musfirahe0556596":28,"alanlowzies":333,"TianaiYan":28,"a1021492980":325}},{"path":"src/main/java/werkit/WerkIt.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package werkit;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"import commands.Command;","lastModifiedDate":"2022-04-02"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"import commands.ExitCommand;","lastModifiedDate":"2022-04-02"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"import commands.InvalidCommandException;","lastModifiedDate":"2022-04-02"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"import commands.PlanCommand;","lastModifiedDate":"2022-04-02"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"import commands.WorkoutCommand;","lastModifiedDate":"2022-04-02"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"import data.schedule.DayList;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"import data.workouts.WorkoutList;","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"import storage.FileManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"import storage.UnknownFileException;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"import static commands.WorkoutCommand.ACTION_KEYWORD_DELETE;","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":" * This class initiates the various classes/components of WerkIt! and contains the logic code for","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":" * prompting the user for an input continuously until the user enters the exit command.","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"public class WerkIt {","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"    private UI ui;","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"    private Parser parser;","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"    private ExerciseList exerciseList;","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"    private WorkoutList workoutList;","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"    private FileManager fileManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"    private PlanList planList;","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"    private DayList dayList;","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"    private static Logger logger \u003d Logger.getLogger(WerkIt.class.getName());","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"     * Initialises the components of the WerkIt! application, greets the user, and loads the","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"     * various files stored in the system\u0027s local disk into this instance of WerkIt! (if applicable).","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"emilysim00"},"content":"     * @throws IOException If the application is unable to load the required directory and/or file(s).","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"    public WerkIt() throws IOException {","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"        // Initialise Components","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"        this.exerciseList \u003d new ExerciseList();","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"        this.workoutList \u003d new WorkoutList(getExerciseList());","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"Musfirahe0556596"},"content":"        this.planList \u003d new PlanList(getWorkoutList());","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"        this.fileManager \u003d new FileManager(getPlanList());","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"emilysim00"},"content":"        this.dayList \u003d new DayList(getPlanList());","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"emilysim00"},"content":"        this.parser \u003d new Parser(getUI(), getExerciseList(), getWorkoutList(),","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"emilysim00"},"content":"                getFileManager(), getPlanList(), getDayList());","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"        LogHandler.linkToFileLogger(logger);","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"        logger.log(Level.INFO, \"Components instantiated.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"        getUI().printGreetings();","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"        // Do file imports","lastModifiedDate":"2022-03-05"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"        loadRequiredDirectoryAndFiles();","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"     * Gets the UI object stored in this WerkIt object.","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"     * @return The UI object.","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"    public UI getUI() {","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"        return this.ui;","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"     * Gets the Parser object stored in this WerkIt object.","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"alanlowzies"},"content":"     * @return The Parser object.","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"alanlowzies"},"content":"    public Parser getParser() {","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"alanlowzies"},"content":"        return this.parser;","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"     * Gets the ExerciseList object stored in this WerkIt object.","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"     * @return The ExerciseList object.","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"    public ExerciseList getExerciseList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"alanlowzies"},"content":"        return this.exerciseList;","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"alanlowzies"},"content":"     * Gets the WorkoutList object stored in this WerkIt object.","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"alanlowzies"},"content":"     * @return The WorkoutList object.","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"alanlowzies"},"content":"    public WorkoutList getWorkoutList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"alanlowzies"},"content":"        return this.workoutList;","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":102,"author":{"gitId":"emilysim00"},"content":"    public DayList getDayList() {","lastModifiedDate":"2022-03-21"},{"lineNumber":103,"author":{"gitId":"emilysim00"},"content":"        return this.dayList;","lastModifiedDate":"2022-03-21"},{"lineNumber":104,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":105,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":106,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"alanlowzies"},"content":"     * Gets the FileManager object stored in this WerkIt object.","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"alanlowzies"},"content":"     * @return The FileManager object.","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"alanlowzies"},"content":"    public FileManager getFileManager() {","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"alanlowzies"},"content":"        return this.fileManager;","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":116,"author":{"gitId":"Musfirahe0556596"},"content":"     * Gets the PlanList object stored in this WerkIt object.","lastModifiedDate":"2022-03-19"},{"lineNumber":117,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":118,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return The PlanList object.","lastModifiedDate":"2022-03-19"},{"lineNumber":119,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":120,"author":{"gitId":"Musfirahe0556596"},"content":"    public PlanList getPlanList() {","lastModifiedDate":"2022-03-19"},{"lineNumber":121,"author":{"gitId":"Musfirahe0556596"},"content":"        return this.planList;","lastModifiedDate":"2022-03-19"},{"lineNumber":122,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":123,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":124,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"alanlowzies"},"content":"     * Checks if the required resource directory and files already exists in the user\u0027s filesystem. If not,","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"alanlowzies"},"content":"     * call the relevant method(s) to create the required directory and/or file(s). In addition, once all the","lastModifiedDate":"2022-04-06"},{"lineNumber":127,"author":{"gitId":"alanlowzies"},"content":"     * data is loaded into the respective data structures, all resource files will be re-written to ensure","lastModifiedDate":"2022-04-06"},{"lineNumber":128,"author":{"gitId":"alanlowzies"},"content":"     * that the data in the files are of a correct format (e.g. lower-case formatting).","lastModifiedDate":"2022-04-06"},{"lineNumber":129,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If the application is unable to create the required directory and/or file(s).","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"alanlowzies"},"content":"    private void loadRequiredDirectoryAndFiles() throws IOException {","lastModifiedDate":"2022-03-10"},{"lineNumber":133,"author":{"gitId":"alanlowzies"},"content":"        getUI().printCheckingDirectoryAndFilesMessage();","lastModifiedDate":"2022-03-10"},{"lineNumber":134,"author":{"gitId":"alanlowzies"},"content":"        getFileManager().checkAndCreateDirectoriesAndFiles();","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"alanlowzies"},"content":"        getUI().printEmptyLineOrStatus(getFileManager().checkIfAllDirectoryAndFilesExists());","lastModifiedDate":"2022-04-07"},{"lineNumber":136,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"alanlowzies"},"content":"        assert (Files.exists(getFileManager().getWorkoutFilePath())) : \"Workout file does not exist.\";","lastModifiedDate":"2022-04-07"},{"lineNumber":138,"author":{"gitId":"alanlowzies"},"content":"        assert (Files.exists(getFileManager().getExerciseFilePath())) : \"Exercise file does not exist.\";","lastModifiedDate":"2022-04-07"},{"lineNumber":139,"author":{"gitId":"alanlowzies"},"content":"        assert (Files.exists(getFileManager().getPlanFilePath())) : \"Plan file does not exist.\";","lastModifiedDate":"2022-04-07"},{"lineNumber":140,"author":{"gitId":"alanlowzies"},"content":"        assert (Files.exists(getFileManager().getScheduleFilePath())) : \"Schedule file does not exist.\";","lastModifiedDate":"2022-04-07"},{"lineNumber":141,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":142,"author":{"gitId":"alanlowzies"},"content":"        if (getFileManager().checkIfAtLeastOneFileExists()) {","lastModifiedDate":"2022-04-07"},{"lineNumber":143,"author":{"gitId":"alanlowzies"},"content":"            getUI().printLoadingFileDataMessage();","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":145,"author":{"gitId":"a1021492980"},"content":"        populateExercises();","lastModifiedDate":"2022-04-07"},{"lineNumber":146,"author":{"gitId":"alanlowzies"},"content":"        if (getFileManager().isWasWorkoutsFileAlreadyMade()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":147,"author":{"gitId":"alanlowzies"},"content":"            loadWorkoutFile();","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":149,"author":{"gitId":"a1021492980"},"content":"        if (getFileManager().isWasPlansFileAlreadyMade()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":150,"author":{"gitId":"a1021492980"},"content":"            loadPlanFile();","lastModifiedDate":"2022-03-20"},{"lineNumber":151,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":152,"author":{"gitId":"alanlowzies"},"content":"        if (getFileManager().isWasScheduleFileAlreadyMade()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":153,"author":{"gitId":"alanlowzies"},"content":"            loadScheduleFile();","lastModifiedDate":"2022-03-23"},{"lineNumber":154,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":155,"author":{"gitId":"a1021492980"},"content":"        getFileManager().rewriteAllExercisesToFile(getExerciseList());","lastModifiedDate":"2022-04-05"},{"lineNumber":156,"author":{"gitId":"a1021492980"},"content":"        getFileManager().rewriteAllWorkoutsToFile(getWorkoutList());","lastModifiedDate":"2022-04-05"},{"lineNumber":157,"author":{"gitId":"a1021492980"},"content":"        getFileManager().rewriteAllPlansToFile(getPlanList());","lastModifiedDate":"2022-04-05"},{"lineNumber":158,"author":{"gitId":"a1021492980"},"content":"        getFileManager().rewriteAllDaysScheduleToFile(getDayList());","lastModifiedDate":"2022-04-05"},{"lineNumber":159,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":160,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":161,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":162,"author":{"gitId":"alanlowzies"},"content":"     * Continuously prompts the user for an input (and thereafter executing the necessary","lastModifiedDate":"2022-03-05"},{"lineNumber":163,"author":{"gitId":"alanlowzies"},"content":"     * actions) until the exit command is entered.","lastModifiedDate":"2022-03-05"},{"lineNumber":164,"author":{"gitId":"alanlowzies"},"content":"     * Method adapted from Team Member Alan Low\u0027s iP codebase.","lastModifiedDate":"2022-03-05"},{"lineNumber":165,"author":{"gitId":"alanlowzies"},"content":"     * Link: https://github.com/alanlowzies/ip/blob/8556dd6a5106d190f5ac0458c6d2c34f98737a91/src/main/java/sora/Sora.java","lastModifiedDate":"2022-03-05"},{"lineNumber":166,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":167,"author":{"gitId":"emilysim00"},"content":"     * @throws IOException If the application is unable to process the user input.","lastModifiedDate":"2022-03-27"},{"lineNumber":168,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":169,"author":{"gitId":"alanlowzies"},"content":"    public void startContinuousUserPrompt() throws IOException {","lastModifiedDate":"2022-03-09"},{"lineNumber":170,"author":{"gitId":"alanlowzies"},"content":"        boolean isFirstPrompt \u003d true;","lastModifiedDate":"2022-03-05"},{"lineNumber":171,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":172,"author":{"gitId":"alanlowzies"},"content":"        Command newCommand;","lastModifiedDate":"2022-04-09"},{"lineNumber":173,"author":{"gitId":"alanlowzies"},"content":"        do {","lastModifiedDate":"2022-03-05"},{"lineNumber":174,"author":{"gitId":"alanlowzies"},"content":"            getUI().printUserInputPrompt(isFirstPrompt);","lastModifiedDate":"2022-03-10"},{"lineNumber":175,"author":{"gitId":"alanlowzies"},"content":"            isFirstPrompt \u003d false;","lastModifiedDate":"2022-03-05"},{"lineNumber":176,"author":{"gitId":"alanlowzies"},"content":"            String userInput \u003d getUI().getUserInput();","lastModifiedDate":"2022-03-10"},{"lineNumber":177,"author":{"gitId":"alanlowzies"},"content":"            newCommand \u003d parseUserInput(userInput);","lastModifiedDate":"2022-04-09"},{"lineNumber":178,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":179,"author":{"gitId":"alanlowzies"},"content":"            if (newCommand \u003d\u003d null) {","lastModifiedDate":"2022-04-09"},{"lineNumber":180,"author":{"gitId":"alanlowzies"},"content":"                continue;","lastModifiedDate":"2022-03-05"},{"lineNumber":181,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-03-05"},{"lineNumber":182,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":183,"author":{"gitId":"alanlowzies"},"content":"            assert (newCommand !\u003d null);","lastModifiedDate":"2022-04-09"},{"lineNumber":184,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":185,"author":{"gitId":"alanlowzies"},"content":"            newCommand.execute();","lastModifiedDate":"2022-03-05"},{"lineNumber":186,"author":{"gitId":"alanlowzies"},"content":"            conductPostExecuteChecks(newCommand);","lastModifiedDate":"2022-04-09"},{"lineNumber":187,"author":{"gitId":"alanlowzies"},"content":"        } while (!(newCommand instanceof ExitCommand));","lastModifiedDate":"2022-04-09"},{"lineNumber":188,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":189,"author":{"gitId":"alanlowzies"},"content":"        // User is exiting the program","lastModifiedDate":"2022-04-09"},{"lineNumber":190,"author":{"gitId":"alanlowzies"},"content":"        getUI().printGoodbye();","lastModifiedDate":"2022-04-09"},{"lineNumber":191,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-02"},{"lineNumber":192,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":193,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":194,"author":{"gitId":"alanlowzies"},"content":"     * Conducts certain procedures after a Command#execute() has been called. Currently, the only procedure","lastModifiedDate":"2022-04-09"},{"lineNumber":195,"author":{"gitId":"alanlowzies"},"content":"     * carried out post-execution is to reload schedule.txt if the command ran is a \u0027workout /delete\u0027 or","lastModifiedDate":"2022-04-09"},{"lineNumber":196,"author":{"gitId":"alanlowzies"},"content":"     * \u0027plan /delete\u0027 command.","lastModifiedDate":"2022-04-09"},{"lineNumber":197,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-04-09"},{"lineNumber":198,"author":{"gitId":"alanlowzies"},"content":"     * @param newCommand A Command object that represents the user input.","lastModifiedDate":"2022-04-09"},{"lineNumber":199,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If the reloading of schedule.txt is unsuccessful.","lastModifiedDate":"2022-04-09"},{"lineNumber":200,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":201,"author":{"gitId":"alanlowzies"},"content":"    public void conductPostExecuteChecks(Command newCommand) throws IOException {","lastModifiedDate":"2022-04-09"},{"lineNumber":202,"author":{"gitId":"alanlowzies"},"content":"        boolean isWorkoutOrPlanCommand \u003d (newCommand instanceof WorkoutCommand) || (newCommand instanceof PlanCommand);","lastModifiedDate":"2022-04-09"},{"lineNumber":203,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":204,"author":{"gitId":"alanlowzies"},"content":"        if (!isWorkoutOrPlanCommand) {","lastModifiedDate":"2022-04-09"},{"lineNumber":205,"author":{"gitId":"alanlowzies"},"content":"            return;","lastModifiedDate":"2022-04-09"},{"lineNumber":206,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":207,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":208,"author":{"gitId":"alanlowzies"},"content":"        boolean isDeleteAction \u003d newCommand.getUserAction().equals(ACTION_KEYWORD_DELETE);","lastModifiedDate":"2022-04-09"},{"lineNumber":209,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":210,"author":{"gitId":"alanlowzies"},"content":"        if (isDeleteAction) {","lastModifiedDate":"2022-04-09"},{"lineNumber":211,"author":{"gitId":"a1021492980"},"content":"            reloadScheduleFile();","lastModifiedDate":"2022-04-02"},{"lineNumber":212,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-04-02"},{"lineNumber":213,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-02"},{"lineNumber":214,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":215,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":216,"author":{"gitId":"alanlowzies"},"content":"     * Acts as an intermediary method to call Parser#parseUserInput(). This method was created to flatten","lastModifiedDate":"2022-04-09"},{"lineNumber":217,"author":{"gitId":"alanlowzies"},"content":"     * the arrowhead code that existed in startContinuousUserPrompt().","lastModifiedDate":"2022-04-09"},{"lineNumber":218,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-04-09"},{"lineNumber":219,"author":{"gitId":"alanlowzies"},"content":"     * @param userInput The input given by the user.","lastModifiedDate":"2022-04-09"},{"lineNumber":220,"author":{"gitId":"alanlowzies"},"content":"     * @return A command object that represents the user input. However, null is returned if the parsing","lastModifiedDate":"2022-04-09"},{"lineNumber":221,"author":{"gitId":"alanlowzies"},"content":"     *         is unsuccessful.","lastModifiedDate":"2022-04-09"},{"lineNumber":222,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":223,"author":{"gitId":"alanlowzies"},"content":"    public Command parseUserInput(String userInput) {","lastModifiedDate":"2022-04-09"},{"lineNumber":224,"author":{"gitId":"alanlowzies"},"content":"        Command newCommand \u003d null;","lastModifiedDate":"2022-04-09"},{"lineNumber":225,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":226,"author":{"gitId":"alanlowzies"},"content":"        try {","lastModifiedDate":"2022-04-09"},{"lineNumber":227,"author":{"gitId":"alanlowzies"},"content":"            newCommand \u003d getParser().parseUserInput(userInput);","lastModifiedDate":"2022-04-09"},{"lineNumber":228,"author":{"gitId":"alanlowzies"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2022-03-05"},{"lineNumber":229,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-05"},{"lineNumber":230,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Please try again.\");","lastModifiedDate":"2022-03-05"},{"lineNumber":231,"author":{"gitId":"emilysim00"},"content":"            logger.log(Level.WARNING, \"User has entered an invalid command.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":232,"author":{"gitId":"alanlowzies"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-11"},{"lineNumber":233,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Uh oh, the command entered is invalid.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":234,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Please try again.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":235,"author":{"gitId":"emilysim00"},"content":"            logger.log(Level.WARNING, \"User has entered an array index out of bound invalid command.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":236,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":237,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":238,"author":{"gitId":"alanlowzies"},"content":"        return newCommand;","lastModifiedDate":"2022-04-09"},{"lineNumber":239,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":240,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":241,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":242,"author":{"gitId":"a1021492980"},"content":"     * Populates a set of exercises to exerciseList.","lastModifiedDate":"2022-04-07"},{"lineNumber":243,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":244,"author":{"gitId":"a1021492980"},"content":"    public void populateExercises() {","lastModifiedDate":"2022-04-07"},{"lineNumber":245,"author":{"gitId":"alanlowzies"},"content":"        getExerciseList().populateExercisesToList();","lastModifiedDate":"2022-04-07"},{"lineNumber":246,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":247,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":248,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":249,"author":{"gitId":"alanlowzies"},"content":"     * Loads the workout file\u0027s data that is stored in the user\u0027s filesystem into the current","lastModifiedDate":"2022-03-14"},{"lineNumber":250,"author":{"gitId":"alanlowzies"},"content":"     * session\u0027s list of workouts.","lastModifiedDate":"2022-03-14"},{"lineNumber":251,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":252,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If the application is unable to open the workout file.","lastModifiedDate":"2022-03-14"},{"lineNumber":253,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":254,"author":{"gitId":"alanlowzies"},"content":"    private void loadWorkoutFile() throws IOException {","lastModifiedDate":"2022-03-10"},{"lineNumber":255,"author":{"gitId":"alanlowzies"},"content":"        boolean isWorkoutFileLoadSuccessful;","lastModifiedDate":"2022-03-10"},{"lineNumber":256,"author":{"gitId":"alanlowzies"},"content":"        isWorkoutFileLoadSuccessful \u003d fileManager.loadWorkoutsFromFile(getWorkoutList());","lastModifiedDate":"2022-03-10"},{"lineNumber":257,"author":{"gitId":"alanlowzies"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":258,"author":{"gitId":"alanlowzies"},"content":"            getUI().printFileLoadStatusMessage(FileManager.NAME_WORKOUT_FILE, isWorkoutFileLoadSuccessful);","lastModifiedDate":"2022-04-09"},{"lineNumber":259,"author":{"gitId":"alanlowzies"},"content":"        } catch (UnknownFileException e) {","lastModifiedDate":"2022-03-10"},{"lineNumber":260,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-10"},{"lineNumber":261,"author":{"gitId":"emilysim00"},"content":"            logger.log(Level.WARNING, \"Unknown file name was encountered.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":262,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":263,"author":{"gitId":"a1021492980"},"content":"        if (!isWorkoutFileLoadSuccessful) {","lastModifiedDate":"2022-04-02"},{"lineNumber":264,"author":{"gitId":"a1021492980"},"content":"            fileManager.deleteAndRecreateWorkoutFile();","lastModifiedDate":"2022-04-02"},{"lineNumber":265,"author":{"gitId":"a1021492980"},"content":"            fileManager.rewriteAllWorkoutsToFile(getWorkoutList());","lastModifiedDate":"2022-04-02"},{"lineNumber":266,"author":{"gitId":"a1021492980"},"content":"            System.out.println(\"The corrupted workout data has been removed.\");","lastModifiedDate":"2022-04-02"},{"lineNumber":267,"author":{"gitId":"a1021492980"},"content":"            logger.log(Level.INFO, \"Workout file data loaded with corrupted data removed.\");","lastModifiedDate":"2022-04-02"},{"lineNumber":268,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-04-02"},{"lineNumber":269,"author":{"gitId":"alanlowzies"},"content":"        logger.log(Level.INFO, \"Workout file data loaded.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":270,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":271,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":272,"author":{"gitId":"a1021492980"},"content":"    private void loadPlanFile() throws IOException {","lastModifiedDate":"2022-03-20"},{"lineNumber":273,"author":{"gitId":"a1021492980"},"content":"        boolean isPlanFileLoadSuccessful;","lastModifiedDate":"2022-03-20"},{"lineNumber":274,"author":{"gitId":"a1021492980"},"content":"        isPlanFileLoadSuccessful \u003d fileManager.loadPlansFromFile(getPlanList());","lastModifiedDate":"2022-03-20"},{"lineNumber":275,"author":{"gitId":"a1021492980"},"content":"        try {","lastModifiedDate":"2022-03-20"},{"lineNumber":276,"author":{"gitId":"alanlowzies"},"content":"            getUI().printFileLoadStatusMessage(FileManager.NAME_PLAN_FILE, isPlanFileLoadSuccessful);","lastModifiedDate":"2022-04-09"},{"lineNumber":277,"author":{"gitId":"a1021492980"},"content":"        } catch (UnknownFileException e) {","lastModifiedDate":"2022-03-20"},{"lineNumber":278,"author":{"gitId":"a1021492980"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-20"},{"lineNumber":279,"author":{"gitId":"a1021492980"},"content":"            logger.log(Level.WARNING, \"Unknown file name was encountered.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":280,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":281,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":282,"author":{"gitId":"a1021492980"},"content":"        if (!isPlanFileLoadSuccessful) {","lastModifiedDate":"2022-04-02"},{"lineNumber":283,"author":{"gitId":"a1021492980"},"content":"            fileManager.deleteAndRecreatePlanFile();","lastModifiedDate":"2022-04-02"},{"lineNumber":284,"author":{"gitId":"a1021492980"},"content":"            fileManager.rewriteAllPlansToFile(getPlanList());","lastModifiedDate":"2022-04-02"},{"lineNumber":285,"author":{"gitId":"a1021492980"},"content":"            System.out.println(\"The corrupted plan data has been removed.\");","lastModifiedDate":"2022-04-02"},{"lineNumber":286,"author":{"gitId":"a1021492980"},"content":"            logger.log(Level.INFO, \"Plan file data loaded with corrupted data removed.\");","lastModifiedDate":"2022-04-02"},{"lineNumber":287,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-04-02"},{"lineNumber":288,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":289,"author":{"gitId":"alanlowzies"},"content":"        logger.log(Level.INFO, \"Plan file data loaded.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":290,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":291,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":292,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":293,"author":{"gitId":"alanlowzies"},"content":"     * Loads the schedule file\u0027s data that is stored in the user\u0027s filesystem into the current","lastModifiedDate":"2022-03-23"},{"lineNumber":294,"author":{"gitId":"alanlowzies"},"content":"     * session\u0027s list of workouts.","lastModifiedDate":"2022-03-23"},{"lineNumber":295,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":296,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If the application is unable to open the workout file.","lastModifiedDate":"2022-03-23"},{"lineNumber":297,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":298,"author":{"gitId":"alanlowzies"},"content":"    private void loadScheduleFile() throws IOException {","lastModifiedDate":"2022-03-23"},{"lineNumber":299,"author":{"gitId":"alanlowzies"},"content":"        boolean isScheduleFileLoadSuccessful;","lastModifiedDate":"2022-03-23"},{"lineNumber":300,"author":{"gitId":"alanlowzies"},"content":"        isScheduleFileLoadSuccessful \u003d fileManager.loadScheduleFromFile(getDayList());","lastModifiedDate":"2022-03-23"},{"lineNumber":301,"author":{"gitId":"alanlowzies"},"content":"        try {","lastModifiedDate":"2022-03-23"},{"lineNumber":302,"author":{"gitId":"alanlowzies"},"content":"            getUI().printFileLoadStatusMessage(FileManager.NAME_SCHEDULE_FILE, isScheduleFileLoadSuccessful);","lastModifiedDate":"2022-04-09"},{"lineNumber":303,"author":{"gitId":"alanlowzies"},"content":"        } catch (UnknownFileException e) {","lastModifiedDate":"2022-03-23"},{"lineNumber":304,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-23"},{"lineNumber":305,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.WARNING, \"Unknown file name was encountered.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":306,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":307,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":308,"author":{"gitId":"a1021492980"},"content":"        if (!isScheduleFileLoadSuccessful) {","lastModifiedDate":"2022-04-02"},{"lineNumber":309,"author":{"gitId":"a1021492980"},"content":"            fileManager.deleteAndRecreateScheduleFile();","lastModifiedDate":"2022-04-02"},{"lineNumber":310,"author":{"gitId":"a1021492980"},"content":"            fileManager.rewriteAllDaysScheduleToFile(getDayList());","lastModifiedDate":"2022-04-02"},{"lineNumber":311,"author":{"gitId":"a1021492980"},"content":"            System.out.println(\"The corrupted schedule data has been removed.\");","lastModifiedDate":"2022-04-02"},{"lineNumber":312,"author":{"gitId":"a1021492980"},"content":"            logger.log(Level.INFO, \"Schedule file data loaded with corrupted data removed.\");","lastModifiedDate":"2022-04-02"},{"lineNumber":313,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-04-02"},{"lineNumber":314,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":315,"author":{"gitId":"alanlowzies"},"content":"        logger.log(Level.INFO, \"Schedule file data loaded.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":316,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":317,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":318,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-04-02"},{"lineNumber":319,"author":{"gitId":"a1021492980"},"content":"     * Reloads the schedule file to capture the effects in Daylist due to the deletion of workout and plan.","lastModifiedDate":"2022-04-02"},{"lineNumber":320,"author":{"gitId":"a1021492980"},"content":"     * @throws IOException  If the application is unable to open the schedule file.","lastModifiedDate":"2022-04-02"},{"lineNumber":321,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-04-02"},{"lineNumber":322,"author":{"gitId":"a1021492980"},"content":"    private void reloadScheduleFile() throws IOException {","lastModifiedDate":"2022-04-02"},{"lineNumber":323,"author":{"gitId":"a1021492980"},"content":"        boolean isScheduleFileLoadSuccessful;","lastModifiedDate":"2022-04-02"},{"lineNumber":324,"author":{"gitId":"a1021492980"},"content":"        String[] schedule \u003d dayList.getPrintSchedule();","lastModifiedDate":"2022-04-02"},{"lineNumber":325,"author":{"gitId":"a1021492980"},"content":"        this.dayList.clearAllSchedule();","lastModifiedDate":"2022-04-02"},{"lineNumber":326,"author":{"gitId":"a1021492980"},"content":"        String[] updatedSchedule;","lastModifiedDate":"2022-04-02"},{"lineNumber":327,"author":{"gitId":"a1021492980"},"content":"        for (int i \u003d 0; i \u003c schedule.length; i++) {","lastModifiedDate":"2022-04-02"},{"lineNumber":328,"author":{"gitId":"a1021492980"},"content":"            if (schedule[i] \u003d\u003d null) {","lastModifiedDate":"2022-04-02"},{"lineNumber":329,"author":{"gitId":"a1021492980"},"content":"                schedule[i] \u003d \"rest day\";","lastModifiedDate":"2022-04-02"},{"lineNumber":330,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-04-02"},{"lineNumber":331,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-04-02"},{"lineNumber":332,"author":{"gitId":"a1021492980"},"content":"        isScheduleFileLoadSuccessful \u003d fileManager.reloadScheduleFromFile(getDayList());","lastModifiedDate":"2022-04-02"},{"lineNumber":333,"author":{"gitId":"a1021492980"},"content":"        if (!isScheduleFileLoadSuccessful) {","lastModifiedDate":"2022-04-02"},{"lineNumber":334,"author":{"gitId":"a1021492980"},"content":"            fileManager.deleteAndRecreateScheduleFile();","lastModifiedDate":"2022-04-02"},{"lineNumber":335,"author":{"gitId":"a1021492980"},"content":"            fileManager.rewriteAllDaysScheduleToFile(getDayList());","lastModifiedDate":"2022-04-02"},{"lineNumber":336,"author":{"gitId":"a1021492980"},"content":"            updatedSchedule \u003d dayList.getPrintSchedule();","lastModifiedDate":"2022-04-02"},{"lineNumber":337,"author":{"gitId":"a1021492980"},"content":"            for (int i \u003d 0; i \u003c schedule.length; i++) {","lastModifiedDate":"2022-04-02"},{"lineNumber":338,"author":{"gitId":"a1021492980"},"content":"                if (!updatedSchedule[i].equals(schedule[i])) {","lastModifiedDate":"2022-04-02"},{"lineNumber":339,"author":{"gitId":"a1021492980"},"content":"                    var dayNum \u003d i + 1;","lastModifiedDate":"2022-04-02"},{"lineNumber":340,"author":{"gitId":"a1021492980"},"content":"                    System.out.println(\"Schedule \u0027\" + schedule[i] + \"\u0027 on \" + dayList.covertDayNumberToDay(dayNum)","lastModifiedDate":"2022-04-02"},{"lineNumber":341,"author":{"gitId":"a1021492980"},"content":"                            + \" has been removed.\");","lastModifiedDate":"2022-04-02"},{"lineNumber":342,"author":{"gitId":"a1021492980"},"content":"                }","lastModifiedDate":"2022-04-02"},{"lineNumber":343,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-04-02"},{"lineNumber":344,"author":{"gitId":"a1021492980"},"content":"            logger.log(Level.INFO, \"Schedule file data updated due to deletion on workout/plan.\");","lastModifiedDate":"2022-04-02"},{"lineNumber":345,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-04-02"},{"lineNumber":346,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-02"},{"lineNumber":347,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"emilysim00":17,"Musfirahe0556596":12,"alanlowzies":235,"a1021492980":83}},{"path":"src/test/java/commands/ExerciseCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"package commands;","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"import data.exercises.InvalidExerciseException;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"import data.schedule.DayList;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"import data.workouts.InvalidWorkoutException;","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"import data.workouts.WorkoutList;","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"import storage.FileManager;","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"import textcolors.TextColor;","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"import werkit.Parser;","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"import werkit.UI;","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"public class ExerciseCommandTest {","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"    ExerciseList exerciseList;","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"    WorkoutList workoutList;","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"    PlanList planList;","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"    UI ui;","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"    Parser parser;","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"    FileManager fileManager;","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"    DayList dayList;","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"    void setUp() throws InvalidWorkoutException, InvalidExerciseException, IOException {","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"        LogHandler.startLogHandler();","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"        exerciseList \u003d new ExerciseList();","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"        workoutList \u003d new WorkoutList(exerciseList);","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"a1021492980"},"content":"        planList \u003d new PlanList(workoutList);","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"a1021492980"},"content":"        ui \u003d new UI();","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"a1021492980"},"content":"        fileManager \u003d new FileManager(planList);","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"a1021492980"},"content":"        dayList \u003d new DayList(planList);","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"a1021492980"},"content":"        parser \u003d new Parser(ui, exerciseList, workoutList, fileManager, planList, dayList);","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"a1021492980"},"content":"        exerciseList.addExerciseToList(\"push up\");","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"a1021492980"},"content":"        exerciseList.addExerciseToList(\"sit up\");","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"a1021492980"},"content":"        exerciseList.addExerciseToList(\"pull up\");","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"a1021492980"},"content":"    void execute_validListExercise_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-04-09"},{"lineNumber":51,"author":{"gitId":"a1021492980"},"content":"        ExerciseCommand listExerciseCommand \u003d parser.createExerciseCommand(\"exercise /list\");","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"a1021492980"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-04-09"},{"lineNumber":53,"author":{"gitId":"a1021492980"},"content":"                \"There are 3 exercises available.\\n\" + \"Here is the list of exercises: \\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":54,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":55,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"1. push up\\n\")","lastModifiedDate":"2022-04-09"},{"lineNumber":56,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"2. sit up\\n\")","lastModifiedDate":"2022-04-09"},{"lineNumber":57,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"3. pull up\\n\")","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":59,"author":{"gitId":"a1021492980"},"content":"                        + \"End of exercise list.\";","lastModifiedDate":"2022-04-09"},{"lineNumber":60,"author":{"gitId":"a1021492980"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-09"},{"lineNumber":61,"author":{"gitId":"a1021492980"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-04-09"},{"lineNumber":62,"author":{"gitId":"a1021492980"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-04-09"},{"lineNumber":63,"author":{"gitId":"a1021492980"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-04-09"},{"lineNumber":64,"author":{"gitId":"a1021492980"},"content":"        listExerciseCommand.execute();","lastModifiedDate":"2022-04-09"},{"lineNumber":65,"author":{"gitId":"a1021492980"},"content":"        System.out.flush();","lastModifiedDate":"2022-04-09"},{"lineNumber":66,"author":{"gitId":"a1021492980"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\")","lastModifiedDate":"2022-04-09"},{"lineNumber":67,"author":{"gitId":"a1021492980"},"content":"                .replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-09"},{"lineNumber":68,"author":{"gitId":"a1021492980"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-04-09"},{"lineNumber":69,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":70,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"a1021492980":70}},{"path":"src/test/java/commands/PlanCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"package commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"import data.exercises.InvalidExerciseException;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"import data.plans.InvalidPlanException;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"import data.plans.Plan;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"import data.schedule.DayList;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"import data.workouts.InvalidWorkoutException;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"import data.workouts.Workout;","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"import data.workouts.WorkoutList;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"import storage.FileManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"import werkit.Parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.Random;","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"class PlanCommandTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"    ExerciseList exerciseList;","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"    WorkoutList workoutList;","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"    PlanList planList;","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"    UI ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"    Parser parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"Musfirahe0556596"},"content":"    FileManager fileManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"Musfirahe0556596"},"content":"    DayList dayList;","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"Musfirahe0556596"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"Musfirahe0556596"},"content":"    void setUp() throws InvalidWorkoutException, InvalidExerciseException, IOException {","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"Musfirahe0556596"},"content":"        LogHandler.startLogHandler();","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"Musfirahe0556596"},"content":"        exerciseList \u003d new ExerciseList();","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"Musfirahe0556596"},"content":"        workoutList \u003d new WorkoutList(exerciseList);","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"Musfirahe0556596"},"content":"        planList \u003d new PlanList(workoutList);","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"Musfirahe0556596"},"content":"        ui \u003d new UI();","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"Musfirahe0556596"},"content":"        fileManager \u003d new FileManager(planList);","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"Musfirahe0556596"},"content":"        dayList \u003d new DayList(planList);","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"Musfirahe0556596"},"content":"        parser \u003d new Parser(ui, exerciseList, workoutList, fileManager, planList, dayList);","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"Musfirahe0556596"},"content":"        exerciseList.addExerciseToList(\"push up\");","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"Musfirahe0556596"},"content":"        exerciseList.addExerciseToList(\"sit up\");","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"Musfirahe0556596"},"content":"        exerciseList.addExerciseToList(\"pull up\");","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout1 \u003d workoutList.createNewWorkout(\"push up /reps 10\");","lastModifiedDate":"2022-04-09"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"        workoutList.addNewWorkoutToLists(newWorkout1);","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout2 \u003d workoutList.createNewWorkout(\"sit up /reps 15\");","lastModifiedDate":"2022-04-09"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"        workoutList.addNewWorkoutToLists(newWorkout2);","lastModifiedDate":"2022-04-09"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout3 \u003d workoutList.createNewWorkout(\"pull up /reps 20\");","lastModifiedDate":"2022-04-09"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"        workoutList.addNewWorkoutToLists(newWorkout3);","lastModifiedDate":"2022-04-09"},{"lineNumber":62,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"Musfirahe0556596"},"content":"    void setUserAction_createInvalidAction_expectInvalidCommandException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class,","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"Musfirahe0556596"},"content":"            () -\u003e new PlanCommand(\"plan /test\", fileManager,","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"Musfirahe0556596"},"content":"                    planList, \"/test\", \"\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-04-06"},{"lineNumber":72,"author":{"gitId":"Musfirahe0556596"},"content":"    void execute_validCreatePlan_expectSuccess() throws InvalidCommandException, IOException {","lastModifiedDate":"2022-04-06"},{"lineNumber":73,"author":{"gitId":"Musfirahe0556596"},"content":"        //Check for existence of plans.txt file. If none, create it.","lastModifiedDate":"2022-04-06"},{"lineNumber":74,"author":{"gitId":"Musfirahe0556596"},"content":"        fileManager.checkAndCreateDirectoriesAndFiles();","lastModifiedDate":"2022-04-06"},{"lineNumber":75,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":76,"author":{"gitId":"Musfirahe0556596"},"content":"        //Create random plan name for test case","lastModifiedDate":"2022-04-06"},{"lineNumber":77,"author":{"gitId":"Musfirahe0556596"},"content":"        Random rand \u003d new Random();","lastModifiedDate":"2022-04-06"},{"lineNumber":78,"author":{"gitId":"Musfirahe0556596"},"content":"        int upperbound \u003d Integer.MAX_VALUE;","lastModifiedDate":"2022-04-06"},{"lineNumber":79,"author":{"gitId":"Musfirahe0556596"},"content":"        int randomInteger \u003d rand.nextInt(upperbound);","lastModifiedDate":"2022-04-06"},{"lineNumber":80,"author":{"gitId":"Musfirahe0556596"},"content":"        String createTestPlanName \u003d \"t\" + randomInteger;","lastModifiedDate":"2022-04-06"},{"lineNumber":81,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":82,"author":{"gitId":"Musfirahe0556596"},"content":"        //Read from current plans.txt for existing plan names.","lastModifiedDate":"2022-04-06"},{"lineNumber":83,"author":{"gitId":"Musfirahe0556596"},"content":"        //If plan name exist already, recreate a new random plan name.","lastModifiedDate":"2022-04-06"},{"lineNumber":84,"author":{"gitId":"Musfirahe0556596"},"content":"        Scanner planFileReader \u003d new Scanner(fileManager.getPlanFilePath());","lastModifiedDate":"2022-04-06"},{"lineNumber":85,"author":{"gitId":"Musfirahe0556596"},"content":"        while (planFileReader.hasNext()) {","lastModifiedDate":"2022-04-06"},{"lineNumber":86,"author":{"gitId":"Musfirahe0556596"},"content":"            try {","lastModifiedDate":"2022-04-06"},{"lineNumber":87,"author":{"gitId":"Musfirahe0556596"},"content":"                String planFileDataLine \u003d planFileReader.nextLine();","lastModifiedDate":"2022-04-06"},{"lineNumber":88,"author":{"gitId":"Musfirahe0556596"},"content":"                if (planFileDataLine.contains(createTestPlanName)) {","lastModifiedDate":"2022-04-06"},{"lineNumber":89,"author":{"gitId":"Musfirahe0556596"},"content":"                    createTestPlanName \u003d \"t\" + rand.nextInt(upperbound);","lastModifiedDate":"2022-04-06"},{"lineNumber":90,"author":{"gitId":"Musfirahe0556596"},"content":"                }","lastModifiedDate":"2022-04-06"},{"lineNumber":91,"author":{"gitId":"Musfirahe0556596"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-04-06"},{"lineNumber":92,"author":{"gitId":"Musfirahe0556596"},"content":"                System.out.println(\"File data error: insufficient parameters in plan data.\");","lastModifiedDate":"2022-04-06"},{"lineNumber":93,"author":{"gitId":"Musfirahe0556596"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-04-06"},{"lineNumber":94,"author":{"gitId":"Musfirahe0556596"},"content":"                System.out.println(\"File data error: \" + e.getMessage());","lastModifiedDate":"2022-04-06"},{"lineNumber":95,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-04-06"},{"lineNumber":96,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":97,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":98,"author":{"gitId":"Musfirahe0556596"},"content":"        //Create and add new plan with the random plan name","lastModifiedDate":"2022-04-06"},{"lineNumber":99,"author":{"gitId":"Musfirahe0556596"},"content":"        String commandInput \u003d \"plan /new \" + createTestPlanName + \" /workouts 1,2,1\";","lastModifiedDate":"2022-04-06"},{"lineNumber":100,"author":{"gitId":"Musfirahe0556596"},"content":"        PlanCommand createValidPlanCommand \u003d parser.createPlanCommand(commandInput);","lastModifiedDate":"2022-04-06"},{"lineNumber":101,"author":{"gitId":"Musfirahe0556596"},"content":"        createValidPlanCommand.execute();","lastModifiedDate":"2022-04-06"},{"lineNumber":102,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":103,"author":{"gitId":"Musfirahe0556596"},"content":"        //Assert that new plan with random plan name has been created","lastModifiedDate":"2022-04-06"},{"lineNumber":104,"author":{"gitId":"Musfirahe0556596"},"content":"        //and inserted into plans.txt. Afterwhich, remove that new plan from plans.txt.","lastModifiedDate":"2022-04-06"},{"lineNumber":105,"author":{"gitId":"Musfirahe0556596"},"content":"        boolean hasNewTestPlan \u003d false;","lastModifiedDate":"2022-04-06"},{"lineNumber":106,"author":{"gitId":"Musfirahe0556596"},"content":"        ArrayList\u003cString\u003e linesInFile \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-04-06"},{"lineNumber":107,"author":{"gitId":"Musfirahe0556596"},"content":"        Scanner planCheckFileReader \u003d new Scanner(fileManager.getPlanFilePath());","lastModifiedDate":"2022-04-06"},{"lineNumber":108,"author":{"gitId":"Musfirahe0556596"},"content":"        while (planCheckFileReader.hasNext()) {","lastModifiedDate":"2022-04-06"},{"lineNumber":109,"author":{"gitId":"Musfirahe0556596"},"content":"            try {","lastModifiedDate":"2022-04-06"},{"lineNumber":110,"author":{"gitId":"Musfirahe0556596"},"content":"                String planCheckFileDataLine \u003d planCheckFileReader.nextLine();","lastModifiedDate":"2022-04-06"},{"lineNumber":111,"author":{"gitId":"Musfirahe0556596"},"content":"                if (planCheckFileDataLine.contains(createTestPlanName)) {","lastModifiedDate":"2022-04-06"},{"lineNumber":112,"author":{"gitId":"Musfirahe0556596"},"content":"                    hasNewTestPlan \u003d true;","lastModifiedDate":"2022-04-06"},{"lineNumber":113,"author":{"gitId":"Musfirahe0556596"},"content":"                    continue;","lastModifiedDate":"2022-04-06"},{"lineNumber":114,"author":{"gitId":"Musfirahe0556596"},"content":"                }","lastModifiedDate":"2022-04-06"},{"lineNumber":115,"author":{"gitId":"Musfirahe0556596"},"content":"                linesInFile.add(planCheckFileDataLine);","lastModifiedDate":"2022-04-06"},{"lineNumber":116,"author":{"gitId":"Musfirahe0556596"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-04-06"},{"lineNumber":117,"author":{"gitId":"Musfirahe0556596"},"content":"                System.out.println(\"File data error: insufficient parameters in plan data.\");","lastModifiedDate":"2022-04-06"},{"lineNumber":118,"author":{"gitId":"Musfirahe0556596"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-04-06"},{"lineNumber":119,"author":{"gitId":"Musfirahe0556596"},"content":"                System.out.println(\"File data error: \" + e.getMessage());","lastModifiedDate":"2022-04-06"},{"lineNumber":120,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-04-06"},{"lineNumber":121,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":122,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":123,"author":{"gitId":"Musfirahe0556596"},"content":"        FileWriter fileWriter \u003d new FileWriter(fileManager.getPlanFilePath().toString());","lastModifiedDate":"2022-04-06"},{"lineNumber":124,"author":{"gitId":"Musfirahe0556596"},"content":"        for (int i \u003d 0; i \u003c linesInFile.size(); i +\u003d 1) {","lastModifiedDate":"2022-04-06"},{"lineNumber":125,"author":{"gitId":"Musfirahe0556596"},"content":"            fileWriter.append(linesInFile.get(i));","lastModifiedDate":"2022-04-06"},{"lineNumber":126,"author":{"gitId":"Musfirahe0556596"},"content":"            fileWriter.append(System.lineSeparator());","lastModifiedDate":"2022-04-06"},{"lineNumber":127,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":128,"author":{"gitId":"Musfirahe0556596"},"content":"        fileWriter.close();","lastModifiedDate":"2022-04-06"},{"lineNumber":129,"author":{"gitId":"Musfirahe0556596"},"content":"        assertTrue(hasNewTestPlan);","lastModifiedDate":"2022-04-06"},{"lineNumber":130,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":131,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":132,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"Musfirahe0556596"},"content":"    void execute_invalidCreatePlan_expectCatchNumberFormatException() throws InvalidCommandException {","lastModifiedDate":"2022-03-29"},{"lineNumber":134,"author":{"gitId":"Musfirahe0556596"},"content":"        PlanCommand createInvalidPlanCommand \u003d parser.createPlanCommand(\"plan /new Plan A /workouts abc\");","lastModifiedDate":"2022-03-29"},{"lineNumber":135,"author":{"gitId":"Musfirahe0556596"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"TianaiYan"},"content":"                \"Uh oh, the user argument supplied is invalid.\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":137,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \"Please try again. Alternatively, type \u0027help\u0027 if you need\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":138,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \"more information on the commands.\";","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"Musfirahe0556596"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"Musfirahe0556596"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-03-29"},{"lineNumber":141,"author":{"gitId":"Musfirahe0556596"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-03-29"},{"lineNumber":142,"author":{"gitId":"Musfirahe0556596"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-03-29"},{"lineNumber":143,"author":{"gitId":"Musfirahe0556596"},"content":"        createInvalidPlanCommand.execute();","lastModifiedDate":"2022-03-29"},{"lineNumber":144,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.flush();","lastModifiedDate":"2022-03-29"},{"lineNumber":145,"author":{"gitId":"Musfirahe0556596"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":146,"author":{"gitId":"Musfirahe0556596"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-03-29"},{"lineNumber":147,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":148,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":149,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":150,"author":{"gitId":"Musfirahe0556596"},"content":"    void execute_invalidCreatePlan_expectCatchInvalidPlanException() throws InvalidCommandException {","lastModifiedDate":"2022-03-29"},{"lineNumber":151,"author":{"gitId":"Musfirahe0556596"},"content":"        PlanCommand createInvalidPlanCommand \u003d parser.createPlanCommand(\"plan /new rest day /workouts 1,2\");","lastModifiedDate":"2022-03-29"},{"lineNumber":152,"author":{"gitId":"Musfirahe0556596"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":153,"author":{"gitId":"Musfirahe0556596"},"content":"                \"Uh oh, this plan name is reserved for use.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":154,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \"Please try again\";","lastModifiedDate":"2022-03-29"},{"lineNumber":155,"author":{"gitId":"Musfirahe0556596"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":156,"author":{"gitId":"Musfirahe0556596"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-03-29"},{"lineNumber":157,"author":{"gitId":"Musfirahe0556596"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-03-29"},{"lineNumber":158,"author":{"gitId":"Musfirahe0556596"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"Musfirahe0556596"},"content":"        createInvalidPlanCommand.execute();","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.flush();","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"Musfirahe0556596"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"Musfirahe0556596"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-03-29"},{"lineNumber":163,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":164,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":165,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":166,"author":{"gitId":"Musfirahe0556596"},"content":"    void execute_invalidCreatePlan_expectCatchArrayIndexOutOfBoundsException() throws InvalidCommandException {","lastModifiedDate":"2022-03-29"},{"lineNumber":167,"author":{"gitId":"Musfirahe0556596"},"content":"        PlanCommand createInvalidPlanCommand \u003d parser.createPlanCommand(\"plan /new hh /workouts\");","lastModifiedDate":"2022-03-29"},{"lineNumber":168,"author":{"gitId":"Musfirahe0556596"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"Musfirahe0556596"},"content":"                \"Uh oh, it seems like too few arguments were entered.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":170,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \"Please try again. Alternatively, type \u0027help\u0027 if you need\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":171,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \"more information on the commands.\";","lastModifiedDate":"2022-03-29"},{"lineNumber":172,"author":{"gitId":"Musfirahe0556596"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":173,"author":{"gitId":"Musfirahe0556596"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-03-29"},{"lineNumber":174,"author":{"gitId":"Musfirahe0556596"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-03-29"},{"lineNumber":175,"author":{"gitId":"Musfirahe0556596"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-03-29"},{"lineNumber":176,"author":{"gitId":"Musfirahe0556596"},"content":"        createInvalidPlanCommand.execute();","lastModifiedDate":"2022-03-29"},{"lineNumber":177,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.flush();","lastModifiedDate":"2022-03-29"},{"lineNumber":178,"author":{"gitId":"Musfirahe0556596"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":179,"author":{"gitId":"Musfirahe0556596"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-03-29"},{"lineNumber":180,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":181,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":182,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":183,"author":{"gitId":"Musfirahe0556596"},"content":"    void execute_validListPlan_expectSuccess() throws InvalidCommandException, InvalidPlanException {","lastModifiedDate":"2022-03-29"},{"lineNumber":184,"author":{"gitId":"Musfirahe0556596"},"content":"        Plan newPlan1 \u003d planList.createNewPlan(\"Plan A /workouts 1,2\");","lastModifiedDate":"2022-04-09"},{"lineNumber":185,"author":{"gitId":"Musfirahe0556596"},"content":"        planList.addNewPlanToLists(newPlan1);","lastModifiedDate":"2022-04-09"},{"lineNumber":186,"author":{"gitId":"Musfirahe0556596"},"content":"        PlanCommand listPlanCommand \u003d parser.createPlanCommand(\"plan /list\");","lastModifiedDate":"2022-03-29"},{"lineNumber":187,"author":{"gitId":"Musfirahe0556596"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":188,"author":{"gitId":"Musfirahe0556596"},"content":"                \"Here are all your plan(s).\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":189,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \"To view each plan in detail, enter\\n\u0027plan /details \u003cplan number in list\u003e\u0027.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":190,"author":{"gitId":"a1021492980"},"content":"                        + \"1. plan a\\n\";","lastModifiedDate":"2022-04-05"},{"lineNumber":191,"author":{"gitId":"Musfirahe0556596"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":192,"author":{"gitId":"Musfirahe0556596"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-03-29"},{"lineNumber":193,"author":{"gitId":"Musfirahe0556596"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-03-29"},{"lineNumber":194,"author":{"gitId":"Musfirahe0556596"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-03-29"},{"lineNumber":195,"author":{"gitId":"Musfirahe0556596"},"content":"        listPlanCommand.execute();","lastModifiedDate":"2022-03-29"},{"lineNumber":196,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.flush();","lastModifiedDate":"2022-03-29"},{"lineNumber":197,"author":{"gitId":"Musfirahe0556596"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":198,"author":{"gitId":"Musfirahe0556596"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-03-29"},{"lineNumber":199,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":200,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"Musfirahe0556596":191,"alanlowzies":7,"TianaiYan":1,"a1021492980":1}},{"path":"src/test/java/commands/ScheduleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"package commands;","lastModifiedDate":"2022-04-04"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-04-04"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"import data.exercises.InvalidExerciseException;","lastModifiedDate":"2022-04-04"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"import data.plans.InvalidPlanException;","lastModifiedDate":"2022-04-04"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"import data.plans.Plan;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-04-04"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"import data.schedule.DayList;","lastModifiedDate":"2022-04-04"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"import data.workouts.InvalidWorkoutException;","lastModifiedDate":"2022-04-04"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"import data.workouts.Workout;","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"import data.workouts.WorkoutList;","lastModifiedDate":"2022-04-04"},{"lineNumber":12,"author":{"gitId":"emilysim00"},"content":"import storage.FileManager;","lastModifiedDate":"2022-04-04"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-04-04"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"import werkit.Parser;","lastModifiedDate":"2022-04-04"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"import werkit.UI;","lastModifiedDate":"2022-04-04"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-04"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-04"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-04"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-10"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"import java.util.Random;","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"class ScheduleCommandTest {","lastModifiedDate":"2022-04-04"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"    ExerciseList exerciseList;","lastModifiedDate":"2022-04-04"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"    WorkoutList workoutList;","lastModifiedDate":"2022-04-04"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"    PlanList planList;","lastModifiedDate":"2022-04-04"},{"lineNumber":34,"author":{"gitId":"emilysim00"},"content":"    UI ui;","lastModifiedDate":"2022-04-04"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"    Parser parser;","lastModifiedDate":"2022-04-04"},{"lineNumber":36,"author":{"gitId":"emilysim00"},"content":"    FileManager fileManager;","lastModifiedDate":"2022-04-04"},{"lineNumber":37,"author":{"gitId":"emilysim00"},"content":"    DayList dayList;","lastModifiedDate":"2022-04-04"},{"lineNumber":38,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"    //@@author emilysim00","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"emilysim00"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-04"},{"lineNumber":41,"author":{"gitId":"emilysim00"},"content":"    void setUp() throws InvalidWorkoutException, InvalidExerciseException, InvalidPlanException {","lastModifiedDate":"2022-04-04"},{"lineNumber":42,"author":{"gitId":"emilysim00"},"content":"        LogHandler.startLogHandler();","lastModifiedDate":"2022-04-04"},{"lineNumber":43,"author":{"gitId":"emilysim00"},"content":"        exerciseList \u003d new ExerciseList();","lastModifiedDate":"2022-04-04"},{"lineNumber":44,"author":{"gitId":"emilysim00"},"content":"        workoutList \u003d new WorkoutList(exerciseList);","lastModifiedDate":"2022-04-04"},{"lineNumber":45,"author":{"gitId":"emilysim00"},"content":"        planList \u003d new PlanList(workoutList);","lastModifiedDate":"2022-04-04"},{"lineNumber":46,"author":{"gitId":"emilysim00"},"content":"        ui \u003d new UI();","lastModifiedDate":"2022-04-04"},{"lineNumber":47,"author":{"gitId":"emilysim00"},"content":"        fileManager \u003d new FileManager(planList);","lastModifiedDate":"2022-04-04"},{"lineNumber":48,"author":{"gitId":"emilysim00"},"content":"        dayList \u003d new DayList(planList);","lastModifiedDate":"2022-04-04"},{"lineNumber":49,"author":{"gitId":"emilysim00"},"content":"        parser \u003d new Parser(ui, exerciseList, workoutList, fileManager, planList, dayList);","lastModifiedDate":"2022-04-04"},{"lineNumber":50,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":51,"author":{"gitId":"emilysim00"},"content":"        exerciseList.addExerciseToList(\"push up\");","lastModifiedDate":"2022-04-04"},{"lineNumber":52,"author":{"gitId":"emilysim00"},"content":"        exerciseList.addExerciseToList(\"sit up\");","lastModifiedDate":"2022-04-04"},{"lineNumber":53,"author":{"gitId":"emilysim00"},"content":"        exerciseList.addExerciseToList(\"pull up\");","lastModifiedDate":"2022-04-04"},{"lineNumber":54,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":55,"author":{"gitId":"emilysim00"},"content":"        Workout newWorkout1 \u003d workoutList.createNewWorkout(\"push up /reps 10\");","lastModifiedDate":"2022-04-09"},{"lineNumber":56,"author":{"gitId":"emilysim00"},"content":"        workoutList.addNewWorkoutToLists(newWorkout1);","lastModifiedDate":"2022-04-09"},{"lineNumber":57,"author":{"gitId":"emilysim00"},"content":"        Workout newWorkout2 \u003d workoutList.createNewWorkout(\"sit up /reps 15\");","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"emilysim00"},"content":"        workoutList.addNewWorkoutToLists(newWorkout2);","lastModifiedDate":"2022-04-09"},{"lineNumber":59,"author":{"gitId":"emilysim00"},"content":"        Workout newWorkout3 \u003d workoutList.createNewWorkout(\"pull up /reps 20\");","lastModifiedDate":"2022-04-09"},{"lineNumber":60,"author":{"gitId":"emilysim00"},"content":"        workoutList.addNewWorkoutToLists(newWorkout3);","lastModifiedDate":"2022-04-09"},{"lineNumber":61,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":62,"author":{"gitId":"emilysim00"},"content":"        Plan newPlan1 \u003d planList.createNewPlan(\"more muscles /workouts 1,2,1,2\");","lastModifiedDate":"2022-04-09"},{"lineNumber":63,"author":{"gitId":"emilysim00"},"content":"        planList.addNewPlanToLists(newPlan1);","lastModifiedDate":"2022-04-09"},{"lineNumber":64,"author":{"gitId":"emilysim00"},"content":"        Plan newPlan2 \u003d planList.createNewPlan(\"more arm muscles /workouts 1,3,1,3\");","lastModifiedDate":"2022-04-09"},{"lineNumber":65,"author":{"gitId":"emilysim00"},"content":"        planList.addNewPlanToLists(newPlan2);","lastModifiedDate":"2022-04-09"},{"lineNumber":66,"author":{"gitId":"emilysim00"},"content":"        Plan newPlan3 \u003d planList.createNewPlan(\"only core /workouts 2,2,2,2\");","lastModifiedDate":"2022-04-09"},{"lineNumber":67,"author":{"gitId":"emilysim00"},"content":"        planList.addNewPlanToLists(newPlan3);","lastModifiedDate":"2022-04-09"},{"lineNumber":68,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":69,"author":{"gitId":"emilysim00"},"content":"    //@@author","lastModifiedDate":"2022-04-09"},{"lineNumber":70,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":71,"author":{"gitId":"emilysim00"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":72,"author":{"gitId":"emilysim00"},"content":"    void setUserAction_createInvalidAction_expectInvalidCommandException() {","lastModifiedDate":"2022-04-04"},{"lineNumber":73,"author":{"gitId":"emilysim00"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e new ScheduleCommand(\"schedule /invalid command\",","lastModifiedDate":"2022-04-04"},{"lineNumber":74,"author":{"gitId":"emilysim00"},"content":"                fileManager, dayList, \"/invalid command\", \"\"));","lastModifiedDate":"2022-04-04"},{"lineNumber":75,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":76,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":77,"author":{"gitId":"emilysim00"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":78,"author":{"gitId":"emilysim00"},"content":"    public void scheduleCommand_validScheduleUpdateConstruction() throws IOException, InvalidCommandException {","lastModifiedDate":"2022-04-10"},{"lineNumber":79,"author":{"gitId":"emilysim00"},"content":"        String userInput \u003d \"schedule /update 1 2\";","lastModifiedDate":"2022-04-04"},{"lineNumber":80,"author":{"gitId":"emilysim00"},"content":"        String userAction \u003d \"/update\";","lastModifiedDate":"2022-04-04"},{"lineNumber":81,"author":{"gitId":"emilysim00"},"content":"        String userArguments \u003d \"1 2\";","lastModifiedDate":"2022-04-04"},{"lineNumber":82,"author":{"gitId":"emilysim00"},"content":"        ExerciseList el \u003d new ExerciseList();","lastModifiedDate":"2022-04-04"},{"lineNumber":83,"author":{"gitId":"emilysim00"},"content":"        WorkoutList wl \u003d new WorkoutList(el);","lastModifiedDate":"2022-04-04"},{"lineNumber":84,"author":{"gitId":"emilysim00"},"content":"        PlanList pl \u003d new PlanList(wl);","lastModifiedDate":"2022-04-04"},{"lineNumber":85,"author":{"gitId":"emilysim00"},"content":"        DayList dl \u003d new DayList(pl);","lastModifiedDate":"2022-04-04"},{"lineNumber":86,"author":{"gitId":"emilysim00"},"content":"        FileManager fm \u003d new FileManager(pl);","lastModifiedDate":"2022-04-04"},{"lineNumber":87,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":88,"author":{"gitId":"emilysim00"},"content":"        ScheduleCommand commandTest \u003d new ScheduleCommand(userInput, fm, dl, userAction, userArguments);","lastModifiedDate":"2022-04-04"},{"lineNumber":89,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":90,"author":{"gitId":"emilysim00"},"content":"        assertEquals(\"schedule /update 1 2\", commandTest.getUserInput());","lastModifiedDate":"2022-04-04"},{"lineNumber":91,"author":{"gitId":"emilysim00"},"content":"        assertEquals(\"/update\", commandTest.getUserAction());","lastModifiedDate":"2022-04-04"},{"lineNumber":92,"author":{"gitId":"emilysim00"},"content":"        assertEquals(\"1 2\", commandTest.getUserArguments());","lastModifiedDate":"2022-04-04"},{"lineNumber":93,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":94,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":95,"author":{"gitId":"emilysim00"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":96,"author":{"gitId":"emilysim00"},"content":"    public void scheduleCommand_validScheduleClearConstruction() throws IOException, InvalidCommandException {","lastModifiedDate":"2022-04-10"},{"lineNumber":97,"author":{"gitId":"emilysim00"},"content":"        String userInput \u003d \"schedule /clear 1\";","lastModifiedDate":"2022-04-04"},{"lineNumber":98,"author":{"gitId":"emilysim00"},"content":"        String userAction \u003d \"/clear\";","lastModifiedDate":"2022-04-04"},{"lineNumber":99,"author":{"gitId":"emilysim00"},"content":"        String userArguments \u003d \"1\";","lastModifiedDate":"2022-04-04"},{"lineNumber":100,"author":{"gitId":"emilysim00"},"content":"        ExerciseList el \u003d new ExerciseList();","lastModifiedDate":"2022-04-04"},{"lineNumber":101,"author":{"gitId":"emilysim00"},"content":"        WorkoutList wl \u003d new WorkoutList(el);","lastModifiedDate":"2022-04-04"},{"lineNumber":102,"author":{"gitId":"emilysim00"},"content":"        PlanList pl \u003d new PlanList(wl);","lastModifiedDate":"2022-04-04"},{"lineNumber":103,"author":{"gitId":"emilysim00"},"content":"        DayList dl \u003d new DayList(pl);","lastModifiedDate":"2022-04-04"},{"lineNumber":104,"author":{"gitId":"emilysim00"},"content":"        FileManager fm \u003d new FileManager(pl);","lastModifiedDate":"2022-04-04"},{"lineNumber":105,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":106,"author":{"gitId":"emilysim00"},"content":"        ScheduleCommand commandTest \u003d new ScheduleCommand(userInput, fm, dl, userAction, userArguments);","lastModifiedDate":"2022-04-04"},{"lineNumber":107,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":108,"author":{"gitId":"emilysim00"},"content":"        assertEquals(\"schedule /clear 1\", commandTest.getUserInput());","lastModifiedDate":"2022-04-04"},{"lineNumber":109,"author":{"gitId":"emilysim00"},"content":"        assertEquals(\"/clear\", commandTest.getUserAction());","lastModifiedDate":"2022-04-04"},{"lineNumber":110,"author":{"gitId":"emilysim00"},"content":"        assertEquals(\"1\", commandTest.getUserArguments());","lastModifiedDate":"2022-04-04"},{"lineNumber":111,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":112,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":113,"author":{"gitId":"emilysim00"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":114,"author":{"gitId":"emilysim00"},"content":"    public void scheduleCommand_validScheduleClearAllConstruction() throws IOException, InvalidCommandException {","lastModifiedDate":"2022-04-10"},{"lineNumber":115,"author":{"gitId":"emilysim00"},"content":"        String userInput \u003d \"schedule /clearall\";","lastModifiedDate":"2022-04-04"},{"lineNumber":116,"author":{"gitId":"emilysim00"},"content":"        String userAction \u003d \"/clearall\";","lastModifiedDate":"2022-04-04"},{"lineNumber":117,"author":{"gitId":"emilysim00"},"content":"        String userArguments \u003d \" \";","lastModifiedDate":"2022-04-04"},{"lineNumber":118,"author":{"gitId":"emilysim00"},"content":"        ExerciseList el \u003d new ExerciseList();","lastModifiedDate":"2022-04-04"},{"lineNumber":119,"author":{"gitId":"emilysim00"},"content":"        WorkoutList wl \u003d new WorkoutList(el);","lastModifiedDate":"2022-04-04"},{"lineNumber":120,"author":{"gitId":"emilysim00"},"content":"        PlanList pl \u003d new PlanList(wl);","lastModifiedDate":"2022-04-04"},{"lineNumber":121,"author":{"gitId":"emilysim00"},"content":"        DayList dl \u003d new DayList(pl);","lastModifiedDate":"2022-04-04"},{"lineNumber":122,"author":{"gitId":"emilysim00"},"content":"        FileManager fm \u003d new FileManager(pl);","lastModifiedDate":"2022-04-04"},{"lineNumber":123,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":124,"author":{"gitId":"emilysim00"},"content":"        ScheduleCommand commandTest \u003d new ScheduleCommand(userInput, fm, dl, userAction, userArguments);","lastModifiedDate":"2022-04-04"},{"lineNumber":125,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":126,"author":{"gitId":"emilysim00"},"content":"        assertEquals(\"schedule /clearall\", commandTest.getUserInput());","lastModifiedDate":"2022-04-04"},{"lineNumber":127,"author":{"gitId":"emilysim00"},"content":"        assertEquals(\"/clearall\", commandTest.getUserAction());","lastModifiedDate":"2022-04-04"},{"lineNumber":128,"author":{"gitId":"emilysim00"},"content":"        assertEquals(\" \", commandTest.getUserArguments());","lastModifiedDate":"2022-04-04"},{"lineNumber":129,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":130,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":131,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-04-04"}],"authorContributionMap":{"emilysim00":129,"Musfirahe0556596":1,"alanlowzies":1}},{"path":"src/test/java/commands/SearchCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"package commands;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"import data.exercises.InvalidExerciseException;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"import data.plans.InvalidPlanException;","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"import data.plans.Plan;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"import data.schedule.DayList;","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"import data.workouts.InvalidWorkoutException;","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"import data.workouts.WorkoutList;","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"import storage.FileManager;","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"import textcolors.TextColor;","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"import werkit.Parser;","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"public class SearchCommandTest {","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"    ExerciseList exerciseList;","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"    WorkoutList workoutList;","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"    PlanList planList;","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"    UI ui;","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"    Parser parser;","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"    FileManager fileManager;","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"    DayList dayList;","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"    //@@author a1021492980","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"    void setUp() throws InvalidWorkoutException, InvalidExerciseException, IOException, InvalidPlanException {","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"a1021492980"},"content":"        LogHandler.startLogHandler();","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"a1021492980"},"content":"        exerciseList \u003d new ExerciseList();","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"a1021492980"},"content":"        workoutList \u003d new WorkoutList(exerciseList);","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"a1021492980"},"content":"        planList \u003d new PlanList(workoutList);","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"a1021492980"},"content":"        ui \u003d new UI();","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"a1021492980"},"content":"        fileManager \u003d new FileManager(planList);","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"a1021492980"},"content":"        dayList \u003d new DayList(planList);","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"a1021492980"},"content":"        parser \u003d new Parser(ui, exerciseList, workoutList, fileManager, planList, dayList);","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"a1021492980"},"content":"        exerciseList.addExerciseToList(\"push up\");","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"a1021492980"},"content":"        exerciseList.addExerciseToList(\"sit up\");","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"a1021492980"},"content":"        exerciseList.addExerciseToList(\"pull up\");","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":51,"author":{"gitId":"a1021492980"},"content":"        var testWorkout1 \u003d workoutList.createNewWorkout(\"push up /reps 10\");","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"a1021492980"},"content":"        var testWorkout2 \u003d workoutList.createNewWorkout(\"sit up /reps 15\");","lastModifiedDate":"2022-04-09"},{"lineNumber":53,"author":{"gitId":"a1021492980"},"content":"        var testWorkout3 \u003d workoutList.createNewWorkout(\"pull up /reps 20\");","lastModifiedDate":"2022-04-09"},{"lineNumber":54,"author":{"gitId":"a1021492980"},"content":"        workoutList.addNewWorkoutToLists(testWorkout1);","lastModifiedDate":"2022-04-09"},{"lineNumber":55,"author":{"gitId":"a1021492980"},"content":"        workoutList.addNewWorkoutToLists(testWorkout2);","lastModifiedDate":"2022-04-09"},{"lineNumber":56,"author":{"gitId":"a1021492980"},"content":"        workoutList.addNewWorkoutToLists(testWorkout3);","lastModifiedDate":"2022-04-09"},{"lineNumber":57,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"a1021492980"},"content":"        Plan newPlan1 \u003d planList.createNewPlan(\"more muscles /workouts 1,2,3\");","lastModifiedDate":"2022-04-09"},{"lineNumber":59,"author":{"gitId":"a1021492980"},"content":"        planList.addNewPlanToLists(newPlan1);","lastModifiedDate":"2022-04-09"},{"lineNumber":60,"author":{"gitId":"a1021492980"},"content":"        Plan newPlan2 \u003d planList.createNewPlan(\"legs /workouts 2,3\");","lastModifiedDate":"2022-04-09"},{"lineNumber":61,"author":{"gitId":"a1021492980"},"content":"        planList.addNewPlanToLists(newPlan2);","lastModifiedDate":"2022-04-09"},{"lineNumber":62,"author":{"gitId":"a1021492980"},"content":"        Plan newPlan3 \u003d planList.createNewPlan(\"arms /workouts 3\");","lastModifiedDate":"2022-04-09"},{"lineNumber":63,"author":{"gitId":"a1021492980"},"content":"        planList.addNewPlanToLists(newPlan3);","lastModifiedDate":"2022-04-09"},{"lineNumber":64,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"a1021492980"},"content":"    //@@author","lastModifiedDate":"2022-04-09"},{"lineNumber":66,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"a1021492980"},"content":"    public void searchCommand_normalSearchExerciseConstruction_constructSuccess() throws","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"a1021492980"},"content":"            InvalidCommandException {","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"a1021492980"},"content":"        String userInput \u003d \"search /exercise up\";","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"a1021492980"},"content":"        String userAction \u003d \"/exercise\";","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"a1021492980"},"content":"        String userArguments \u003d \"up\";","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"a1021492980"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"a1021492980"},"content":"        ExerciseList el \u003d new ExerciseList();","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"a1021492980"},"content":"        SearchCommand commandTest \u003d new SearchCommand(userInput, ui, el, userAction, userArguments);","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"a1021492980"},"content":"        assertEquals(\"search /exercise up\", commandTest.getUserInput());","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"a1021492980"},"content":"        assertEquals(\"/exercise\", commandTest.getUserAction());","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"a1021492980"},"content":"        assertEquals(\"up\", commandTest.getUserArguments());","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":81,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":83,"author":{"gitId":"a1021492980"},"content":"    public void searchCommand_normalSearchPlanConstruction_constructSuccess() throws","lastModifiedDate":"2022-03-21"},{"lineNumber":84,"author":{"gitId":"a1021492980"},"content":"            InvalidCommandException {","lastModifiedDate":"2022-03-21"},{"lineNumber":85,"author":{"gitId":"a1021492980"},"content":"        String userInput \u003d \"search /plan gg\";","lastModifiedDate":"2022-03-21"},{"lineNumber":86,"author":{"gitId":"a1021492980"},"content":"        String userAction \u003d \"/plan\";","lastModifiedDate":"2022-03-21"},{"lineNumber":87,"author":{"gitId":"a1021492980"},"content":"        String userArguments \u003d \"gg\";","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"a1021492980"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"a1021492980"},"content":"        ExerciseList el \u003d new ExerciseList();","lastModifiedDate":"2022-03-21"},{"lineNumber":90,"author":{"gitId":"a1021492980"},"content":"        SearchCommand commandTest \u003d new SearchCommand(userInput, ui, el, userAction, userArguments);","lastModifiedDate":"2022-03-21"},{"lineNumber":91,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":92,"author":{"gitId":"a1021492980"},"content":"        assertEquals(\"search /plan gg\", commandTest.getUserInput());","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"a1021492980"},"content":"        assertEquals(\"/plan\", commandTest.getUserAction());","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"a1021492980"},"content":"        assertEquals(\"gg\", commandTest.getUserArguments());","lastModifiedDate":"2022-03-21"},{"lineNumber":95,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":96,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":98,"author":{"gitId":"a1021492980"},"content":"    public void searchCommand_invalidAction_exceptionThrown() {","lastModifiedDate":"2022-03-21"},{"lineNumber":99,"author":{"gitId":"a1021492980"},"content":"        String userInput1 \u003d \"search /exercise\";","lastModifiedDate":"2022-03-21"},{"lineNumber":100,"author":{"gitId":"a1021492980"},"content":"        String userAction1 \u003d \"/exercise\";","lastModifiedDate":"2022-03-21"},{"lineNumber":101,"author":{"gitId":"a1021492980"},"content":"        String userArguments1 \u003d null;","lastModifiedDate":"2022-03-21"},{"lineNumber":102,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":103,"author":{"gitId":"a1021492980"},"content":"        String userInput2 \u003d \"search /plan\";","lastModifiedDate":"2022-03-21"},{"lineNumber":104,"author":{"gitId":"a1021492980"},"content":"        String userAction2 \u003d \"/plan\";","lastModifiedDate":"2022-03-21"},{"lineNumber":105,"author":{"gitId":"a1021492980"},"content":"        String userArguments2 \u003d null;","lastModifiedDate":"2022-03-21"},{"lineNumber":106,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":107,"author":{"gitId":"a1021492980"},"content":"        String userInput3 \u003d \"search\";","lastModifiedDate":"2022-03-21"},{"lineNumber":108,"author":{"gitId":"a1021492980"},"content":"        String userAction3 \u003d null;","lastModifiedDate":"2022-03-21"},{"lineNumber":109,"author":{"gitId":"a1021492980"},"content":"        String userArguments3 \u003d null;","lastModifiedDate":"2022-03-21"},{"lineNumber":110,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":111,"author":{"gitId":"a1021492980"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2022-03-21"},{"lineNumber":112,"author":{"gitId":"a1021492980"},"content":"        ExerciseList el \u003d new ExerciseList();","lastModifiedDate":"2022-03-21"},{"lineNumber":113,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":114,"author":{"gitId":"a1021492980"},"content":"        assertThrows(NullPointerException.class,","lastModifiedDate":"2022-03-21"},{"lineNumber":115,"author":{"gitId":"a1021492980"},"content":"            () -\u003e new SearchCommand(userInput1, ui, el, userAction1, userArguments1));","lastModifiedDate":"2022-03-21"},{"lineNumber":116,"author":{"gitId":"a1021492980"},"content":"        assertThrows(NullPointerException.class,","lastModifiedDate":"2022-03-21"},{"lineNumber":117,"author":{"gitId":"a1021492980"},"content":"            () -\u003e new SearchCommand(userInput2, ui, el, userAction2, userArguments2));","lastModifiedDate":"2022-03-21"},{"lineNumber":118,"author":{"gitId":"a1021492980"},"content":"        assertThrows(NullPointerException.class,","lastModifiedDate":"2022-03-21"},{"lineNumber":119,"author":{"gitId":"a1021492980"},"content":"            () -\u003e new SearchCommand(userInput3, ui, el, userAction3, userArguments3));","lastModifiedDate":"2022-03-21"},{"lineNumber":120,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":121,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":122,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":123,"author":{"gitId":"a1021492980"},"content":"    void execute_validSearchForAll_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-04-09"},{"lineNumber":124,"author":{"gitId":"a1021492980"},"content":"        SearchCommand searchAllCommand \u003d parser.createSearchCommand(\"search /all a\");","lastModifiedDate":"2022-04-09"},{"lineNumber":125,"author":{"gitId":"a1021492980"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-04-09"},{"lineNumber":126,"author":{"gitId":"a1021492980"},"content":"                \"Sorry, no matching exercise found for the keyword\"","lastModifiedDate":"2022-04-09"},{"lineNumber":127,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \" [a]\") + \".\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":128,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":129,"author":{"gitId":"a1021492980"},"content":"                        + \"Sorry, no matching workout found for the keyword\"","lastModifiedDate":"2022-04-09"},{"lineNumber":130,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \" [a]\") + \".\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":131,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":132,"author":{"gitId":"a1021492980"},"content":"                        + \"The plan(s) containing keyword(s)\" + ui.getColorText(TextColor.COLOR_YELLOW, \" [a] \")","lastModifiedDate":"2022-04-09"},{"lineNumber":133,"author":{"gitId":"a1021492980"},"content":"                        + \"is(are) listed below together\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":134,"author":{"gitId":"a1021492980"},"content":"                        + \"with its(their) original index number(s).\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":135,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":136,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"3. arms\");","lastModifiedDate":"2022-04-09"},{"lineNumber":137,"author":{"gitId":"a1021492980"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-09"},{"lineNumber":138,"author":{"gitId":"a1021492980"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-04-09"},{"lineNumber":139,"author":{"gitId":"a1021492980"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-04-09"},{"lineNumber":140,"author":{"gitId":"a1021492980"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-04-09"},{"lineNumber":141,"author":{"gitId":"a1021492980"},"content":"        searchAllCommand.execute();","lastModifiedDate":"2022-04-09"},{"lineNumber":142,"author":{"gitId":"a1021492980"},"content":"        System.out.flush();","lastModifiedDate":"2022-04-09"},{"lineNumber":143,"author":{"gitId":"a1021492980"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\")","lastModifiedDate":"2022-04-09"},{"lineNumber":144,"author":{"gitId":"a1021492980"},"content":"                .replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-09"},{"lineNumber":145,"author":{"gitId":"a1021492980"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-04-09"},{"lineNumber":146,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":147,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":148,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":149,"author":{"gitId":"a1021492980"},"content":"    void execute_validSearchForAll2_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-04-09"},{"lineNumber":150,"author":{"gitId":"a1021492980"},"content":"        SearchCommand searchAllCommand \u003d parser.createSearchCommand(\"search /all u\");","lastModifiedDate":"2022-04-09"},{"lineNumber":151,"author":{"gitId":"a1021492980"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-04-09"},{"lineNumber":152,"author":{"gitId":"a1021492980"},"content":"                \"The exercise(s) containing keyword(s)\" + ui.getColorText(TextColor.COLOR_YELLOW, \" [u] \")","lastModifiedDate":"2022-04-09"},{"lineNumber":153,"author":{"gitId":"a1021492980"},"content":"                        + \"is(are) listed below together\\n\" + \"with its(their) original index number(s).\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":154,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":155,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"1. push up\\n\")","lastModifiedDate":"2022-04-09"},{"lineNumber":156,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"2. sit up\\n\")","lastModifiedDate":"2022-04-09"},{"lineNumber":157,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"3. pull up\\n\")","lastModifiedDate":"2022-04-09"},{"lineNumber":158,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":159,"author":{"gitId":"a1021492980"},"content":"                        + \"The workout(s) containing keyword(s)\" + ui.getColorText(TextColor.COLOR_YELLOW, \" [u] \")","lastModifiedDate":"2022-04-09"},{"lineNumber":160,"author":{"gitId":"a1021492980"},"content":"                        + \"is(are) listed below together\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":161,"author":{"gitId":"a1021492980"},"content":"                        + \"with its(their) original index number(s).\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":162,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":163,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"1. push up (10 reps)\\n\")","lastModifiedDate":"2022-04-09"},{"lineNumber":164,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"2. sit up (15 reps)\\n\")","lastModifiedDate":"2022-04-09"},{"lineNumber":165,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"3. pull up (20 reps)\\n\")","lastModifiedDate":"2022-04-09"},{"lineNumber":166,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":167,"author":{"gitId":"a1021492980"},"content":"                        + \"The plan(s) containing keyword(s)\" + ui.getColorText(TextColor.COLOR_YELLOW, \" [u] \")","lastModifiedDate":"2022-04-09"},{"lineNumber":168,"author":{"gitId":"a1021492980"},"content":"                        + \"is(are) listed below together\\n\" + \"with its(their) original index number(s).\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":169,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":170,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"1. more muscles\\n\");","lastModifiedDate":"2022-04-09"},{"lineNumber":171,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":172,"author":{"gitId":"a1021492980"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-09"},{"lineNumber":173,"author":{"gitId":"a1021492980"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-04-09"},{"lineNumber":174,"author":{"gitId":"a1021492980"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-04-09"},{"lineNumber":175,"author":{"gitId":"a1021492980"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-04-09"},{"lineNumber":176,"author":{"gitId":"a1021492980"},"content":"        searchAllCommand.execute();","lastModifiedDate":"2022-04-09"},{"lineNumber":177,"author":{"gitId":"a1021492980"},"content":"        System.out.flush();","lastModifiedDate":"2022-04-09"},{"lineNumber":178,"author":{"gitId":"a1021492980"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\")","lastModifiedDate":"2022-04-09"},{"lineNumber":179,"author":{"gitId":"a1021492980"},"content":"                .replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-09"},{"lineNumber":180,"author":{"gitId":"a1021492980"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-04-09"},{"lineNumber":181,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":182,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":183,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":184,"author":{"gitId":"a1021492980"},"content":"    void execute_validSearchForAll3_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-04-09"},{"lineNumber":185,"author":{"gitId":"a1021492980"},"content":"        SearchCommand searchAllCommand \u003d parser.createSearchCommand(\"search /all 10\");","lastModifiedDate":"2022-04-09"},{"lineNumber":186,"author":{"gitId":"a1021492980"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-04-09"},{"lineNumber":187,"author":{"gitId":"a1021492980"},"content":"                \"Sorry, no matching exercise found for the keyword\"","lastModifiedDate":"2022-04-09"},{"lineNumber":188,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \" [10]\") + \".\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":189,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":190,"author":{"gitId":"a1021492980"},"content":"                        + \"The workout(s) with \" + ui.getColorText(TextColor.COLOR_YELLOW, \"reps \u003d 10\")","lastModifiedDate":"2022-04-09"},{"lineNumber":191,"author":{"gitId":"a1021492980"},"content":"                        + \" is(are) listed below together\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":192,"author":{"gitId":"a1021492980"},"content":"                        + \"with its(their) original index number(s).\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":193,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":194,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"1. push up (10 reps)\\n\")","lastModifiedDate":"2022-04-09"},{"lineNumber":195,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":196,"author":{"gitId":"a1021492980"},"content":"                        + \"Sorry, no matching plan found for the keyword\"","lastModifiedDate":"2022-04-09"},{"lineNumber":197,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \" [10]\") + \u0027.\u0027;","lastModifiedDate":"2022-04-09"},{"lineNumber":198,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":199,"author":{"gitId":"a1021492980"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-09"},{"lineNumber":200,"author":{"gitId":"a1021492980"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-04-09"},{"lineNumber":201,"author":{"gitId":"a1021492980"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-04-09"},{"lineNumber":202,"author":{"gitId":"a1021492980"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-04-09"},{"lineNumber":203,"author":{"gitId":"a1021492980"},"content":"        searchAllCommand.execute();","lastModifiedDate":"2022-04-09"},{"lineNumber":204,"author":{"gitId":"a1021492980"},"content":"        System.out.flush();","lastModifiedDate":"2022-04-09"},{"lineNumber":205,"author":{"gitId":"a1021492980"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\")","lastModifiedDate":"2022-04-09"},{"lineNumber":206,"author":{"gitId":"a1021492980"},"content":"                .replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-09"},{"lineNumber":207,"author":{"gitId":"a1021492980"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-04-09"},{"lineNumber":208,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":209,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":210,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":211,"author":{"gitId":"a1021492980"},"content":"    void execute_validSearchForAllNoMatch_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-04-09"},{"lineNumber":212,"author":{"gitId":"a1021492980"},"content":"        SearchCommand searchAllCommand \u003d parser.createSearchCommand(\"search /all asldkaskd\");","lastModifiedDate":"2022-04-09"},{"lineNumber":213,"author":{"gitId":"a1021492980"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-04-09"},{"lineNumber":214,"author":{"gitId":"a1021492980"},"content":"                \"Sorry, no matching exercise found for the keyword\"","lastModifiedDate":"2022-04-09"},{"lineNumber":215,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \" [asldkaskd]\") + \".\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":216,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":217,"author":{"gitId":"a1021492980"},"content":"                        + \"Sorry, no matching workout found for the keyword\"","lastModifiedDate":"2022-04-09"},{"lineNumber":218,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \" [asldkaskd]\") + \".\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":219,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":220,"author":{"gitId":"a1021492980"},"content":"                        + \"Sorry, no matching plan found for the keyword\"","lastModifiedDate":"2022-04-09"},{"lineNumber":221,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \" [asldkaskd]\") + \u0027.\u0027;","lastModifiedDate":"2022-04-09"},{"lineNumber":222,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":223,"author":{"gitId":"a1021492980"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-09"},{"lineNumber":224,"author":{"gitId":"a1021492980"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-04-09"},{"lineNumber":225,"author":{"gitId":"a1021492980"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-04-09"},{"lineNumber":226,"author":{"gitId":"a1021492980"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-04-09"},{"lineNumber":227,"author":{"gitId":"a1021492980"},"content":"        searchAllCommand.execute();","lastModifiedDate":"2022-04-09"},{"lineNumber":228,"author":{"gitId":"a1021492980"},"content":"        System.out.flush();","lastModifiedDate":"2022-04-09"},{"lineNumber":229,"author":{"gitId":"a1021492980"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\")","lastModifiedDate":"2022-04-09"},{"lineNumber":230,"author":{"gitId":"a1021492980"},"content":"                .replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-09"},{"lineNumber":231,"author":{"gitId":"a1021492980"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-04-09"},{"lineNumber":232,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":233,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":234,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":235,"author":{"gitId":"a1021492980"},"content":"    void execute_validSearchForExercise_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-04-09"},{"lineNumber":236,"author":{"gitId":"a1021492980"},"content":"        SearchCommand searchExerciseCommand \u003d parser.createSearchCommand(\"search /exercise u\");","lastModifiedDate":"2022-04-09"},{"lineNumber":237,"author":{"gitId":"a1021492980"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-04-09"},{"lineNumber":238,"author":{"gitId":"a1021492980"},"content":"                \"The exercise(s) containing keyword(s)\" + ui.getColorText(TextColor.COLOR_YELLOW, \" [u] \")","lastModifiedDate":"2022-04-09"},{"lineNumber":239,"author":{"gitId":"a1021492980"},"content":"                        + \"is(are) listed below together\\n\" + \"with its(their) original index number(s).\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":240,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":241,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"1. push up\\n\")","lastModifiedDate":"2022-04-09"},{"lineNumber":242,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"2. sit up\\n\")","lastModifiedDate":"2022-04-09"},{"lineNumber":243,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"3. pull up\\n\");","lastModifiedDate":"2022-04-09"},{"lineNumber":244,"author":{"gitId":"a1021492980"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-09"},{"lineNumber":245,"author":{"gitId":"a1021492980"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-04-09"},{"lineNumber":246,"author":{"gitId":"a1021492980"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-04-09"},{"lineNumber":247,"author":{"gitId":"a1021492980"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-04-09"},{"lineNumber":248,"author":{"gitId":"a1021492980"},"content":"        searchExerciseCommand.execute();","lastModifiedDate":"2022-04-09"},{"lineNumber":249,"author":{"gitId":"a1021492980"},"content":"        System.out.flush();","lastModifiedDate":"2022-04-09"},{"lineNumber":250,"author":{"gitId":"a1021492980"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\")","lastModifiedDate":"2022-04-09"},{"lineNumber":251,"author":{"gitId":"a1021492980"},"content":"                .replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-09"},{"lineNumber":252,"author":{"gitId":"a1021492980"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-04-09"},{"lineNumber":253,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":254,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":255,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":256,"author":{"gitId":"a1021492980"},"content":"    void execute_validSearchForWorkout_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-04-09"},{"lineNumber":257,"author":{"gitId":"a1021492980"},"content":"        SearchCommand searchWorkoutCommand \u003d parser.createSearchCommand(\"search /workout 15\");","lastModifiedDate":"2022-04-09"},{"lineNumber":258,"author":{"gitId":"a1021492980"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-04-09"},{"lineNumber":259,"author":{"gitId":"a1021492980"},"content":"                \"The workout(s) with \" + ui.getColorText(TextColor.COLOR_YELLOW, \"reps \u003d 15\")","lastModifiedDate":"2022-04-09"},{"lineNumber":260,"author":{"gitId":"a1021492980"},"content":"                        + \" is(are) listed below together\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":261,"author":{"gitId":"a1021492980"},"content":"                        + \"with its(their) original index number(s).\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":262,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":263,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"2. sit up (15 reps)\\n\");","lastModifiedDate":"2022-04-09"},{"lineNumber":264,"author":{"gitId":"a1021492980"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-09"},{"lineNumber":265,"author":{"gitId":"a1021492980"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-04-09"},{"lineNumber":266,"author":{"gitId":"a1021492980"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-04-09"},{"lineNumber":267,"author":{"gitId":"a1021492980"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-04-09"},{"lineNumber":268,"author":{"gitId":"a1021492980"},"content":"        searchWorkoutCommand.execute();","lastModifiedDate":"2022-04-09"},{"lineNumber":269,"author":{"gitId":"a1021492980"},"content":"        System.out.flush();","lastModifiedDate":"2022-04-09"},{"lineNumber":270,"author":{"gitId":"a1021492980"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\")","lastModifiedDate":"2022-04-09"},{"lineNumber":271,"author":{"gitId":"a1021492980"},"content":"                .replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-09"},{"lineNumber":272,"author":{"gitId":"a1021492980"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-04-09"},{"lineNumber":273,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":274,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":275,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":276,"author":{"gitId":"a1021492980"},"content":"    void execute_validSearchForPlan_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-04-09"},{"lineNumber":277,"author":{"gitId":"a1021492980"},"content":"        SearchCommand searchPlanCommand \u003d parser.createSearchCommand(\"search /plan s\");","lastModifiedDate":"2022-04-09"},{"lineNumber":278,"author":{"gitId":"a1021492980"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-04-09"},{"lineNumber":279,"author":{"gitId":"a1021492980"},"content":"                \"The plan(s) containing keyword(s)\" + ui.getColorText(TextColor.COLOR_YELLOW, \" [s] \")","lastModifiedDate":"2022-04-09"},{"lineNumber":280,"author":{"gitId":"a1021492980"},"content":"                        + \"is(are) listed below together\\n\" + \"with its(their) original index number(s).\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":281,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":282,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"1. more muscles\\n\")","lastModifiedDate":"2022-04-09"},{"lineNumber":283,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"2. legs\\n\")","lastModifiedDate":"2022-04-09"},{"lineNumber":284,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"3. arms\\n\");","lastModifiedDate":"2022-04-09"},{"lineNumber":285,"author":{"gitId":"a1021492980"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-09"},{"lineNumber":286,"author":{"gitId":"a1021492980"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-04-09"},{"lineNumber":287,"author":{"gitId":"a1021492980"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-04-09"},{"lineNumber":288,"author":{"gitId":"a1021492980"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-04-09"},{"lineNumber":289,"author":{"gitId":"a1021492980"},"content":"        searchPlanCommand.execute();","lastModifiedDate":"2022-04-09"},{"lineNumber":290,"author":{"gitId":"a1021492980"},"content":"        System.out.flush();","lastModifiedDate":"2022-04-09"},{"lineNumber":291,"author":{"gitId":"a1021492980"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\")","lastModifiedDate":"2022-04-09"},{"lineNumber":292,"author":{"gitId":"a1021492980"},"content":"                .replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-09"},{"lineNumber":293,"author":{"gitId":"a1021492980"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-04-09"},{"lineNumber":294,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":295,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":296,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":297,"author":{"gitId":"a1021492980"},"content":"    void execute_validSearchForAllWithWhitespace_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-04-10"},{"lineNumber":298,"author":{"gitId":"a1021492980"},"content":"        SearchCommand searchPlanCommand \u003d parser.createSearchCommand(\"search /all\");","lastModifiedDate":"2022-04-10"},{"lineNumber":299,"author":{"gitId":"a1021492980"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-04-10"},{"lineNumber":300,"author":{"gitId":"a1021492980"},"content":"                \"The exercise(s) containing keyword(s)\" + ui.getColorText(TextColor.COLOR_YELLOW, \" [ ] \")","lastModifiedDate":"2022-04-10"},{"lineNumber":301,"author":{"gitId":"a1021492980"},"content":"                        + \"is(are) listed below together\\nwith its(their) original index number(s).\\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":302,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":303,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"1. push up\\n\")","lastModifiedDate":"2022-04-10"},{"lineNumber":304,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"2. sit up\\n\")","lastModifiedDate":"2022-04-10"},{"lineNumber":305,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"3. pull up\\n\")","lastModifiedDate":"2022-04-10"},{"lineNumber":306,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":307,"author":{"gitId":"a1021492980"},"content":"                        + \"The workout(s) containing keyword(s)\"","lastModifiedDate":"2022-04-10"},{"lineNumber":308,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \" [ ] \")","lastModifiedDate":"2022-04-10"},{"lineNumber":309,"author":{"gitId":"a1021492980"},"content":"                        + \"is(are) listed below together\\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":310,"author":{"gitId":"a1021492980"},"content":"                        + \"with its(their) original index number(s).\\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":311,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":312,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"1. push up (10 reps)\\n\")","lastModifiedDate":"2022-04-10"},{"lineNumber":313,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"2. sit up (15 reps)\\n\")","lastModifiedDate":"2022-04-10"},{"lineNumber":314,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"3. pull up (20 reps)\\n\")","lastModifiedDate":"2022-04-10"},{"lineNumber":315,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":316,"author":{"gitId":"a1021492980"},"content":"                        + \"The plan(s) containing keyword(s)\"","lastModifiedDate":"2022-04-10"},{"lineNumber":317,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \" [ ] \")","lastModifiedDate":"2022-04-10"},{"lineNumber":318,"author":{"gitId":"a1021492980"},"content":"                        + \"is(are) listed below together\\n\" + \"with its(their) original index number(s).\\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":319,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":320,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"1. more muscles\\n\");","lastModifiedDate":"2022-04-10"},{"lineNumber":321,"author":{"gitId":"a1021492980"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-10"},{"lineNumber":322,"author":{"gitId":"a1021492980"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-04-10"},{"lineNumber":323,"author":{"gitId":"a1021492980"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-04-10"},{"lineNumber":324,"author":{"gitId":"a1021492980"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-04-10"},{"lineNumber":325,"author":{"gitId":"a1021492980"},"content":"        searchPlanCommand.execute();","lastModifiedDate":"2022-04-10"},{"lineNumber":326,"author":{"gitId":"a1021492980"},"content":"        System.out.flush();","lastModifiedDate":"2022-04-10"},{"lineNumber":327,"author":{"gitId":"a1021492980"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\")","lastModifiedDate":"2022-04-10"},{"lineNumber":328,"author":{"gitId":"a1021492980"},"content":"                .replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-10"},{"lineNumber":329,"author":{"gitId":"a1021492980"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-04-10"},{"lineNumber":330,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":331,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":332,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":333,"author":{"gitId":"a1021492980"},"content":"    void execute_validSearchForExtraWhitespaces_expectNoMatch() throws InvalidCommandException {","lastModifiedDate":"2022-04-10"},{"lineNumber":334,"author":{"gitId":"a1021492980"},"content":"        SearchCommand searchAllCommand \u003d parser.createSearchCommand(\"search /all         p\");","lastModifiedDate":"2022-04-10"},{"lineNumber":335,"author":{"gitId":"a1021492980"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-04-10"},{"lineNumber":336,"author":{"gitId":"a1021492980"},"content":"                \"Sorry, no matching exercise found for the keyword\"","lastModifiedDate":"2022-04-10"},{"lineNumber":337,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \" [        p]\") + \".\\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":338,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":339,"author":{"gitId":"a1021492980"},"content":"                        + \"Sorry, no matching workout found for the keyword\"","lastModifiedDate":"2022-04-10"},{"lineNumber":340,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \" [        p]\") + \".\\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":341,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":342,"author":{"gitId":"a1021492980"},"content":"                        + \"Sorry, no matching plan found for the keyword\"","lastModifiedDate":"2022-04-10"},{"lineNumber":343,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \" [        p]\") + \u0027.\u0027;","lastModifiedDate":"2022-04-10"},{"lineNumber":344,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":345,"author":{"gitId":"a1021492980"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-10"},{"lineNumber":346,"author":{"gitId":"a1021492980"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-04-10"},{"lineNumber":347,"author":{"gitId":"a1021492980"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-04-10"},{"lineNumber":348,"author":{"gitId":"a1021492980"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-04-10"},{"lineNumber":349,"author":{"gitId":"a1021492980"},"content":"        searchAllCommand.execute();","lastModifiedDate":"2022-04-10"},{"lineNumber":350,"author":{"gitId":"a1021492980"},"content":"        System.out.flush();","lastModifiedDate":"2022-04-10"},{"lineNumber":351,"author":{"gitId":"a1021492980"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\")","lastModifiedDate":"2022-04-10"},{"lineNumber":352,"author":{"gitId":"a1021492980"},"content":"                .replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-10"},{"lineNumber":353,"author":{"gitId":"a1021492980"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-04-10"},{"lineNumber":354,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":355,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"Musfirahe0556596":1,"a1021492980":354}},{"path":"src/test/java/commands/WorkoutCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package commands;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"import data.exercises.InvalidExerciseException;","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"import data.schedule.DayList;","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"import data.workouts.InvalidWorkoutException;","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"import data.workouts.Workout;","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"import data.workouts.WorkoutList;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"import storage.FileManager;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"import werkit.Parser;","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"import werkit.UI;","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.Random;","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"public class WorkoutCommandTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"        LogHandler.startLogHandler();","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"    public void workoutCommand_normalWorkoutNewConstruction_constructSuccess() throws IOException,","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"            InvalidCommandException {","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"        String userInput \u003d \"workout /new russian twist /reps 1000\";","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"        String userAction \u003d \"/new\";","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"        String userArguments \u003d \"russian twist /reps 1000\";","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"        ExerciseList el \u003d new ExerciseList();","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"        WorkoutList wl \u003d new WorkoutList(el);","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"        PlanList pl \u003d new PlanList(wl);","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"        FileManager fm \u003d new FileManager(pl);","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"TianaiYan"},"content":"        WorkoutCommand commandTest \u003d new WorkoutCommand(userInput, fm, wl, pl, userAction, userArguments);","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"        assertEquals(\"workout /new russian twist /reps 1000\", commandTest.getUserInput());","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"        assertEquals(\"/new\", commandTest.getUserAction());","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"        assertEquals(\"russian twist /reps 1000\", commandTest.getUserArguments());","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"    public void workoutCommand_invalidAction_exceptionThrown() throws IOException, InvalidCommandException {","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"        String userInput1 \u003d \"workout /pancakes\";","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"        String userAction1 \u003d \"/pancakes\";","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"        String userArguments1 \u003d null;","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"        String userInput2 \u003d \"workout /create running /reps 20\";","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"        String userAction2 \u003d \"/create\";","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"        String userArguments2 \u003d \"running /reps 20\";","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"        ExerciseList el \u003d new ExerciseList();","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"        WorkoutList wl \u003d new WorkoutList(el);","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"        PlanList pl \u003d new PlanList(wl);","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"        FileManager fm \u003d new FileManager(pl);","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"        assertThrows(InvalidCommandException.class,","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"TianaiYan"},"content":"            () -\u003e new WorkoutCommand(userInput1, fm, wl, pl, userAction1, userArguments1));","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"        assertThrows(InvalidCommandException.class,","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"TianaiYan"},"content":"            () -\u003e new WorkoutCommand(userInput2, fm, wl, pl, userAction2, userArguments2));","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":74,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-04-06"},{"lineNumber":75,"author":{"gitId":"Musfirahe0556596"},"content":"    public void execute_validCreateWorkout_expectSuccess() throws IOException,","lastModifiedDate":"2022-04-06"},{"lineNumber":76,"author":{"gitId":"Musfirahe0556596"},"content":"            InvalidCommandException {","lastModifiedDate":"2022-04-06"},{"lineNumber":77,"author":{"gitId":"Musfirahe0556596"},"content":"        ExerciseList el \u003d new ExerciseList();","lastModifiedDate":"2022-04-06"},{"lineNumber":78,"author":{"gitId":"Musfirahe0556596"},"content":"        el.addExerciseToList(\"squat\");","lastModifiedDate":"2022-04-06"},{"lineNumber":79,"author":{"gitId":"Musfirahe0556596"},"content":"        WorkoutList wl \u003d new WorkoutList(el);","lastModifiedDate":"2022-04-06"},{"lineNumber":80,"author":{"gitId":"Musfirahe0556596"},"content":"        PlanList pl \u003d new PlanList(wl);","lastModifiedDate":"2022-04-06"},{"lineNumber":81,"author":{"gitId":"Musfirahe0556596"},"content":"        FileManager fm \u003d new FileManager(pl);","lastModifiedDate":"2022-04-06"},{"lineNumber":82,"author":{"gitId":"Musfirahe0556596"},"content":"        DayList dl \u003d new DayList(pl);","lastModifiedDate":"2022-04-06"},{"lineNumber":83,"author":{"gitId":"Musfirahe0556596"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2022-04-06"},{"lineNumber":84,"author":{"gitId":"Musfirahe0556596"},"content":"        Parser parser \u003d new Parser(ui, el, wl, fm, pl, dl);","lastModifiedDate":"2022-04-06"},{"lineNumber":85,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":86,"author":{"gitId":"Musfirahe0556596"},"content":"        //Check for existence of workouts.txt file. If none, create it.","lastModifiedDate":"2022-04-06"},{"lineNumber":87,"author":{"gitId":"Musfirahe0556596"},"content":"        fm.checkAndCreateDirectoriesAndFiles();","lastModifiedDate":"2022-04-06"},{"lineNumber":88,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":89,"author":{"gitId":"Musfirahe0556596"},"content":"        //Create random workout for test case","lastModifiedDate":"2022-04-06"},{"lineNumber":90,"author":{"gitId":"Musfirahe0556596"},"content":"        Random rand \u003d new Random();","lastModifiedDate":"2022-04-06"},{"lineNumber":91,"author":{"gitId":"Musfirahe0556596"},"content":"        int upperbound \u003d Integer.MAX_VALUE;","lastModifiedDate":"2022-04-06"},{"lineNumber":92,"author":{"gitId":"Musfirahe0556596"},"content":"        int randomInteger \u003d rand.nextInt(upperbound);","lastModifiedDate":"2022-04-06"},{"lineNumber":93,"author":{"gitId":"Musfirahe0556596"},"content":"        String createTestWorkout \u003d \"squat | \" + randomInteger;","lastModifiedDate":"2022-04-06"},{"lineNumber":94,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":95,"author":{"gitId":"Musfirahe0556596"},"content":"        //Read from current workouts.txt for existing workouts.","lastModifiedDate":"2022-04-06"},{"lineNumber":96,"author":{"gitId":"Musfirahe0556596"},"content":"        //If workout exist already, recreate a new random workout.","lastModifiedDate":"2022-04-06"},{"lineNumber":97,"author":{"gitId":"Musfirahe0556596"},"content":"        Scanner workoutFileReader \u003d new Scanner(fm.getWorkoutFilePath());","lastModifiedDate":"2022-04-06"},{"lineNumber":98,"author":{"gitId":"Musfirahe0556596"},"content":"        while (workoutFileReader.hasNext()) {","lastModifiedDate":"2022-04-06"},{"lineNumber":99,"author":{"gitId":"Musfirahe0556596"},"content":"            try {","lastModifiedDate":"2022-04-06"},{"lineNumber":100,"author":{"gitId":"Musfirahe0556596"},"content":"                String planFileDataLine \u003d workoutFileReader.nextLine();","lastModifiedDate":"2022-04-06"},{"lineNumber":101,"author":{"gitId":"Musfirahe0556596"},"content":"                if (planFileDataLine.contains(createTestWorkout)) {","lastModifiedDate":"2022-04-06"},{"lineNumber":102,"author":{"gitId":"Musfirahe0556596"},"content":"                    createTestWorkout \u003d \"squat | \" + rand.nextInt(upperbound);","lastModifiedDate":"2022-04-06"},{"lineNumber":103,"author":{"gitId":"Musfirahe0556596"},"content":"                }","lastModifiedDate":"2022-04-06"},{"lineNumber":104,"author":{"gitId":"Musfirahe0556596"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-04-06"},{"lineNumber":105,"author":{"gitId":"Musfirahe0556596"},"content":"                System.out.println(\"File data error: insufficient parameters in plan data.\");","lastModifiedDate":"2022-04-06"},{"lineNumber":106,"author":{"gitId":"Musfirahe0556596"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-04-06"},{"lineNumber":107,"author":{"gitId":"Musfirahe0556596"},"content":"                System.out.println(\"File data error: \" + e.getMessage());","lastModifiedDate":"2022-04-06"},{"lineNumber":108,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-04-06"},{"lineNumber":109,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":110,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":111,"author":{"gitId":"Musfirahe0556596"},"content":"        //Create and add workout with the random workout","lastModifiedDate":"2022-04-06"},{"lineNumber":112,"author":{"gitId":"Musfirahe0556596"},"content":"        String fetchRepsFromNewRandom \u003d createTestWorkout.split(\"\\\\|\")[1];","lastModifiedDate":"2022-04-06"},{"lineNumber":113,"author":{"gitId":"Musfirahe0556596"},"content":"        String commandInput \u003d \"workout /new squat /reps\" + fetchRepsFromNewRandom;","lastModifiedDate":"2022-04-06"},{"lineNumber":114,"author":{"gitId":"Musfirahe0556596"},"content":"        WorkoutCommand createValidWorkoutCommand \u003d parser.createWorkoutCommand(commandInput);","lastModifiedDate":"2022-04-06"},{"lineNumber":115,"author":{"gitId":"Musfirahe0556596"},"content":"        createValidWorkoutCommand.execute();","lastModifiedDate":"2022-04-06"},{"lineNumber":116,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":117,"author":{"gitId":"Musfirahe0556596"},"content":"        //Assert that new workout has been created and inserted into workouts.txt.","lastModifiedDate":"2022-04-06"},{"lineNumber":118,"author":{"gitId":"Musfirahe0556596"},"content":"        //Afterwhich, remove that new workout from workouts.txt.","lastModifiedDate":"2022-04-06"},{"lineNumber":119,"author":{"gitId":"Musfirahe0556596"},"content":"        boolean hasNewTestWorkout \u003d false;","lastModifiedDate":"2022-04-06"},{"lineNumber":120,"author":{"gitId":"Musfirahe0556596"},"content":"        ArrayList\u003cString\u003e linesInFile \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-04-06"},{"lineNumber":121,"author":{"gitId":"Musfirahe0556596"},"content":"        Scanner workoutCheckFileReader \u003d new Scanner(fm.getWorkoutFilePath());","lastModifiedDate":"2022-04-06"},{"lineNumber":122,"author":{"gitId":"Musfirahe0556596"},"content":"        while (workoutCheckFileReader.hasNext()) {","lastModifiedDate":"2022-04-06"},{"lineNumber":123,"author":{"gitId":"Musfirahe0556596"},"content":"            try {","lastModifiedDate":"2022-04-06"},{"lineNumber":124,"author":{"gitId":"Musfirahe0556596"},"content":"                String workoutCheckFileDataLine \u003d workoutCheckFileReader.nextLine();","lastModifiedDate":"2022-04-06"},{"lineNumber":125,"author":{"gitId":"Musfirahe0556596"},"content":"                if (workoutCheckFileDataLine.contains(createTestWorkout)) {","lastModifiedDate":"2022-04-06"},{"lineNumber":126,"author":{"gitId":"Musfirahe0556596"},"content":"                    hasNewTestWorkout \u003d true;","lastModifiedDate":"2022-04-06"},{"lineNumber":127,"author":{"gitId":"Musfirahe0556596"},"content":"                    continue;","lastModifiedDate":"2022-04-06"},{"lineNumber":128,"author":{"gitId":"Musfirahe0556596"},"content":"                }","lastModifiedDate":"2022-04-06"},{"lineNumber":129,"author":{"gitId":"Musfirahe0556596"},"content":"                linesInFile.add(workoutCheckFileDataLine);","lastModifiedDate":"2022-04-06"},{"lineNumber":130,"author":{"gitId":"Musfirahe0556596"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-04-06"},{"lineNumber":131,"author":{"gitId":"Musfirahe0556596"},"content":"                System.out.println(\"File data error: insufficient parameters in plan data.\");","lastModifiedDate":"2022-04-06"},{"lineNumber":132,"author":{"gitId":"Musfirahe0556596"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-04-06"},{"lineNumber":133,"author":{"gitId":"Musfirahe0556596"},"content":"                System.out.println(\"File data error: \" + e.getMessage());","lastModifiedDate":"2022-04-06"},{"lineNumber":134,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-04-06"},{"lineNumber":135,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":136,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":137,"author":{"gitId":"Musfirahe0556596"},"content":"        FileWriter fileWriter \u003d new FileWriter(fm.getWorkoutFilePath().toString());","lastModifiedDate":"2022-04-06"},{"lineNumber":138,"author":{"gitId":"Musfirahe0556596"},"content":"        for (int i \u003d 0; i \u003c linesInFile.size(); i +\u003d 1) {","lastModifiedDate":"2022-04-06"},{"lineNumber":139,"author":{"gitId":"Musfirahe0556596"},"content":"            fileWriter.append(linesInFile.get(i));","lastModifiedDate":"2022-04-06"},{"lineNumber":140,"author":{"gitId":"Musfirahe0556596"},"content":"            fileWriter.append(System.lineSeparator());","lastModifiedDate":"2022-04-06"},{"lineNumber":141,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":142,"author":{"gitId":"Musfirahe0556596"},"content":"        fileWriter.close();","lastModifiedDate":"2022-04-06"},{"lineNumber":143,"author":{"gitId":"Musfirahe0556596"},"content":"        assertTrue(hasNewTestWorkout);","lastModifiedDate":"2022-04-06"},{"lineNumber":144,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":145,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":146,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-04-06"},{"lineNumber":147,"author":{"gitId":"Musfirahe0556596"},"content":"    void execute_invalidCreateWorkout_expectCatchNumberFormatException() throws InvalidCommandException {","lastModifiedDate":"2022-04-06"},{"lineNumber":148,"author":{"gitId":"Musfirahe0556596"},"content":"        ExerciseList el \u003d new ExerciseList();","lastModifiedDate":"2022-04-06"},{"lineNumber":149,"author":{"gitId":"Musfirahe0556596"},"content":"        el.addExerciseToList(\"push up\");","lastModifiedDate":"2022-04-06"},{"lineNumber":150,"author":{"gitId":"Musfirahe0556596"},"content":"        WorkoutList wl \u003d new WorkoutList(el);","lastModifiedDate":"2022-04-06"},{"lineNumber":151,"author":{"gitId":"Musfirahe0556596"},"content":"        PlanList pl \u003d new PlanList(wl);","lastModifiedDate":"2022-04-06"},{"lineNumber":152,"author":{"gitId":"Musfirahe0556596"},"content":"        FileManager fm \u003d new FileManager(pl);","lastModifiedDate":"2022-04-06"},{"lineNumber":153,"author":{"gitId":"Musfirahe0556596"},"content":"        DayList dl \u003d new DayList(pl);","lastModifiedDate":"2022-04-06"},{"lineNumber":154,"author":{"gitId":"Musfirahe0556596"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2022-04-06"},{"lineNumber":155,"author":{"gitId":"Musfirahe0556596"},"content":"        Parser parser \u003d new Parser(ui, el, wl, fm, pl, dl);","lastModifiedDate":"2022-04-06"},{"lineNumber":156,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":157,"author":{"gitId":"Musfirahe0556596"},"content":"        WorkoutCommand createInvalidWorkoutCommand \u003d parser.createWorkoutCommand(\"workout /new push up /reps abc\");","lastModifiedDate":"2022-04-06"},{"lineNumber":158,"author":{"gitId":"Musfirahe0556596"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-04-06"},{"lineNumber":159,"author":{"gitId":"Musfirahe0556596"},"content":"                \"Uh oh, the user argument supplied is invalid.\"","lastModifiedDate":"2022-04-06"},{"lineNumber":160,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \"Please try again. Alternatively, type \u0027help\u0027 if you need\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":161,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \"more information on the commands.\";","lastModifiedDate":"2022-04-06"},{"lineNumber":162,"author":{"gitId":"Musfirahe0556596"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-06"},{"lineNumber":163,"author":{"gitId":"Musfirahe0556596"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-04-06"},{"lineNumber":164,"author":{"gitId":"Musfirahe0556596"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-04-06"},{"lineNumber":165,"author":{"gitId":"Musfirahe0556596"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-04-06"},{"lineNumber":166,"author":{"gitId":"Musfirahe0556596"},"content":"        createInvalidWorkoutCommand.execute();","lastModifiedDate":"2022-04-06"},{"lineNumber":167,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.flush();","lastModifiedDate":"2022-04-06"},{"lineNumber":168,"author":{"gitId":"Musfirahe0556596"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-06"},{"lineNumber":169,"author":{"gitId":"Musfirahe0556596"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-04-06"},{"lineNumber":170,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":171,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":172,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-04-06"},{"lineNumber":173,"author":{"gitId":"Musfirahe0556596"},"content":"    void execute_invalidCreateWorkout_expectCatchArrayIndexOutOfBoundsException() throws InvalidCommandException {","lastModifiedDate":"2022-04-06"},{"lineNumber":174,"author":{"gitId":"Musfirahe0556596"},"content":"        ExerciseList el \u003d new ExerciseList();","lastModifiedDate":"2022-04-06"},{"lineNumber":175,"author":{"gitId":"Musfirahe0556596"},"content":"        el.addExerciseToList(\"push up\");","lastModifiedDate":"2022-04-06"},{"lineNumber":176,"author":{"gitId":"Musfirahe0556596"},"content":"        WorkoutList wl \u003d new WorkoutList(el);","lastModifiedDate":"2022-04-06"},{"lineNumber":177,"author":{"gitId":"Musfirahe0556596"},"content":"        PlanList pl \u003d new PlanList(wl);","lastModifiedDate":"2022-04-06"},{"lineNumber":178,"author":{"gitId":"Musfirahe0556596"},"content":"        FileManager fm \u003d new FileManager(pl);","lastModifiedDate":"2022-04-06"},{"lineNumber":179,"author":{"gitId":"Musfirahe0556596"},"content":"        DayList dl \u003d new DayList(pl);","lastModifiedDate":"2022-04-06"},{"lineNumber":180,"author":{"gitId":"Musfirahe0556596"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2022-04-06"},{"lineNumber":181,"author":{"gitId":"Musfirahe0556596"},"content":"        Parser parser \u003d new Parser(ui, el, wl, fm, pl, dl);","lastModifiedDate":"2022-04-06"},{"lineNumber":182,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":183,"author":{"gitId":"Musfirahe0556596"},"content":"        WorkoutCommand createInvalidWorkoutCommand \u003d parser.createWorkoutCommand(\"workout /new push up /reps\");","lastModifiedDate":"2022-04-06"},{"lineNumber":184,"author":{"gitId":"Musfirahe0556596"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-04-06"},{"lineNumber":185,"author":{"gitId":"Musfirahe0556596"},"content":"                \"Uh oh, it seems like too few arguments were entered.\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":186,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \"Please try again. Alternatively, type \u0027help\u0027 if you need\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":187,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \"more information on the commands.\";","lastModifiedDate":"2022-04-06"},{"lineNumber":188,"author":{"gitId":"Musfirahe0556596"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-06"},{"lineNumber":189,"author":{"gitId":"Musfirahe0556596"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-04-06"},{"lineNumber":190,"author":{"gitId":"Musfirahe0556596"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-04-06"},{"lineNumber":191,"author":{"gitId":"Musfirahe0556596"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-04-06"},{"lineNumber":192,"author":{"gitId":"Musfirahe0556596"},"content":"        createInvalidWorkoutCommand.execute();","lastModifiedDate":"2022-04-06"},{"lineNumber":193,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.flush();","lastModifiedDate":"2022-04-06"},{"lineNumber":194,"author":{"gitId":"Musfirahe0556596"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-06"},{"lineNumber":195,"author":{"gitId":"Musfirahe0556596"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-04-06"},{"lineNumber":196,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":197,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":198,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-04-06"},{"lineNumber":199,"author":{"gitId":"Musfirahe0556596"},"content":"    public void execute_validDeleteWorkout_expectSuccess() throws IOException,","lastModifiedDate":"2022-04-06"},{"lineNumber":200,"author":{"gitId":"Musfirahe0556596"},"content":"            InvalidCommandException, InvalidWorkoutException, InvalidExerciseException {","lastModifiedDate":"2022-04-06"},{"lineNumber":201,"author":{"gitId":"Musfirahe0556596"},"content":"        ExerciseList el \u003d new ExerciseList();","lastModifiedDate":"2022-04-06"},{"lineNumber":202,"author":{"gitId":"Musfirahe0556596"},"content":"        el.addExerciseToList(\"push up\");","lastModifiedDate":"2022-04-06"},{"lineNumber":203,"author":{"gitId":"Musfirahe0556596"},"content":"        el.addExerciseToList(\"bicep curl\");","lastModifiedDate":"2022-04-06"},{"lineNumber":204,"author":{"gitId":"Musfirahe0556596"},"content":"        el.addExerciseToList(\"pull up\");","lastModifiedDate":"2022-04-06"},{"lineNumber":205,"author":{"gitId":"Musfirahe0556596"},"content":"        el.addExerciseToList(\"squat\");","lastModifiedDate":"2022-04-06"},{"lineNumber":206,"author":{"gitId":"Musfirahe0556596"},"content":"        el.addExerciseToList(\"lunge\");","lastModifiedDate":"2022-04-06"},{"lineNumber":207,"author":{"gitId":"Musfirahe0556596"},"content":"        el.addExerciseToList(\"hip thrust\");","lastModifiedDate":"2022-04-06"},{"lineNumber":208,"author":{"gitId":"Musfirahe0556596"},"content":"        el.addExerciseToList(\"sit up\");","lastModifiedDate":"2022-04-06"},{"lineNumber":209,"author":{"gitId":"Musfirahe0556596"},"content":"        el.addExerciseToList(\"crunch\");","lastModifiedDate":"2022-04-06"},{"lineNumber":210,"author":{"gitId":"Musfirahe0556596"},"content":"        el.addExerciseToList(\"russian twist\");","lastModifiedDate":"2022-04-06"},{"lineNumber":211,"author":{"gitId":"Musfirahe0556596"},"content":"        el.addExerciseToList(\"running\");","lastModifiedDate":"2022-04-06"},{"lineNumber":212,"author":{"gitId":"Musfirahe0556596"},"content":"        el.addExerciseToList(\"swimming\");","lastModifiedDate":"2022-04-06"},{"lineNumber":213,"author":{"gitId":"Musfirahe0556596"},"content":"        el.addExerciseToList(\"jumping jack\");","lastModifiedDate":"2022-04-06"},{"lineNumber":214,"author":{"gitId":"Musfirahe0556596"},"content":"        el.addExerciseToList(\"burpee\");","lastModifiedDate":"2022-04-06"},{"lineNumber":215,"author":{"gitId":"Musfirahe0556596"},"content":"        WorkoutList wl \u003d new WorkoutList(el);","lastModifiedDate":"2022-04-06"},{"lineNumber":216,"author":{"gitId":"Musfirahe0556596"},"content":"        PlanList pl \u003d new PlanList(wl);","lastModifiedDate":"2022-04-06"},{"lineNumber":217,"author":{"gitId":"Musfirahe0556596"},"content":"        FileManager fm \u003d new FileManager(pl);","lastModifiedDate":"2022-04-06"},{"lineNumber":218,"author":{"gitId":"Musfirahe0556596"},"content":"        DayList dl \u003d new DayList(pl);","lastModifiedDate":"2022-04-06"},{"lineNumber":219,"author":{"gitId":"Musfirahe0556596"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2022-04-06"},{"lineNumber":220,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":221,"author":{"gitId":"Musfirahe0556596"},"content":"        //Check for existence of workouts.txt file. If none, create it.","lastModifiedDate":"2022-04-06"},{"lineNumber":222,"author":{"gitId":"Musfirahe0556596"},"content":"        fm.checkAndCreateDirectoriesAndFiles();","lastModifiedDate":"2022-04-06"},{"lineNumber":223,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":224,"author":{"gitId":"Musfirahe0556596"},"content":"        //Create random workout for test case","lastModifiedDate":"2022-04-06"},{"lineNumber":225,"author":{"gitId":"Musfirahe0556596"},"content":"        Random rand \u003d new Random();","lastModifiedDate":"2022-04-06"},{"lineNumber":226,"author":{"gitId":"Musfirahe0556596"},"content":"        int upperbound \u003d Integer.MAX_VALUE;","lastModifiedDate":"2022-04-06"},{"lineNumber":227,"author":{"gitId":"Musfirahe0556596"},"content":"        int randomInteger \u003d rand.nextInt(upperbound);","lastModifiedDate":"2022-04-06"},{"lineNumber":228,"author":{"gitId":"Musfirahe0556596"},"content":"        String createTestWorkout \u003d \"squat | \" + randomInteger;","lastModifiedDate":"2022-04-06"},{"lineNumber":229,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":230,"author":{"gitId":"Musfirahe0556596"},"content":"        //Read from current workouts.txt for existing workouts.","lastModifiedDate":"2022-04-06"},{"lineNumber":231,"author":{"gitId":"Musfirahe0556596"},"content":"        //If workout exist already, recreate a new random workout.","lastModifiedDate":"2022-04-06"},{"lineNumber":232,"author":{"gitId":"Musfirahe0556596"},"content":"        Scanner workoutFileReader \u003d new Scanner(fm.getWorkoutFilePath());","lastModifiedDate":"2022-04-06"},{"lineNumber":233,"author":{"gitId":"Musfirahe0556596"},"content":"        int trackNumberOfWorkouts \u003d 1;","lastModifiedDate":"2022-04-06"},{"lineNumber":234,"author":{"gitId":"Musfirahe0556596"},"content":"        while (workoutFileReader.hasNext()) {","lastModifiedDate":"2022-04-06"},{"lineNumber":235,"author":{"gitId":"Musfirahe0556596"},"content":"            try {","lastModifiedDate":"2022-04-06"},{"lineNumber":236,"author":{"gitId":"Musfirahe0556596"},"content":"                trackNumberOfWorkouts +\u003d 1;","lastModifiedDate":"2022-04-06"},{"lineNumber":237,"author":{"gitId":"Musfirahe0556596"},"content":"                String workoutFileDataLine \u003d workoutFileReader.nextLine();","lastModifiedDate":"2022-04-06"},{"lineNumber":238,"author":{"gitId":"Musfirahe0556596"},"content":"                String getExerciseNameLine \u003d workoutFileDataLine.split(\"\\\\|\")[0].trim();","lastModifiedDate":"2022-04-06"},{"lineNumber":239,"author":{"gitId":"Musfirahe0556596"},"content":"                String getRepsLine \u003d workoutFileDataLine.split(\"\\\\|\")[1].trim();","lastModifiedDate":"2022-04-06"},{"lineNumber":240,"author":{"gitId":"alanlowzies"},"content":"                Workout newWorkout \u003d wl.createNewWorkout(getExerciseNameLine + \" /reps \" + getRepsLine);","lastModifiedDate":"2022-04-09"},{"lineNumber":241,"author":{"gitId":"alanlowzies"},"content":"                wl.addNewWorkoutToLists(newWorkout);","lastModifiedDate":"2022-04-09"},{"lineNumber":242,"author":{"gitId":"Musfirahe0556596"},"content":"                if (workoutFileDataLine.contains(createTestWorkout)) {","lastModifiedDate":"2022-04-06"},{"lineNumber":243,"author":{"gitId":"Musfirahe0556596"},"content":"                    createTestWorkout \u003d \"squat | \" + rand.nextInt(upperbound);","lastModifiedDate":"2022-04-06"},{"lineNumber":244,"author":{"gitId":"Musfirahe0556596"},"content":"                }","lastModifiedDate":"2022-04-06"},{"lineNumber":245,"author":{"gitId":"Musfirahe0556596"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-04-06"},{"lineNumber":246,"author":{"gitId":"Musfirahe0556596"},"content":"                System.out.println(\"File data error: insufficient parameters in plan data.\");","lastModifiedDate":"2022-04-06"},{"lineNumber":247,"author":{"gitId":"Musfirahe0556596"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-04-06"},{"lineNumber":248,"author":{"gitId":"Musfirahe0556596"},"content":"                System.out.println(\"File data error: \" + e.getMessage());","lastModifiedDate":"2022-04-06"},{"lineNumber":249,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-04-06"},{"lineNumber":250,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":251,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":252,"author":{"gitId":"Musfirahe0556596"},"content":"        Parser parser \u003d new Parser(ui, el, wl, fm, pl, dl);","lastModifiedDate":"2022-04-06"},{"lineNumber":253,"author":{"gitId":"Musfirahe0556596"},"content":"        //Add plans to file so it doesn\u0027t get lost as delete method also depends on plans","lastModifiedDate":"2022-04-06"},{"lineNumber":254,"author":{"gitId":"Musfirahe0556596"},"content":"        Scanner planFileReader \u003d new Scanner(fm.getPlanFilePath());","lastModifiedDate":"2022-04-06"},{"lineNumber":255,"author":{"gitId":"Musfirahe0556596"},"content":"        while (planFileReader.hasNext()) {","lastModifiedDate":"2022-04-06"},{"lineNumber":256,"author":{"gitId":"Musfirahe0556596"},"content":"            try {","lastModifiedDate":"2022-04-06"},{"lineNumber":257,"author":{"gitId":"Musfirahe0556596"},"content":"                String planFileDataLine \u003d planFileReader.nextLine();","lastModifiedDate":"2022-04-06"},{"lineNumber":258,"author":{"gitId":"Musfirahe0556596"},"content":"                String[] parsedPlanFileDataLine \u003d fm.parsePlansFileData(planFileDataLine);","lastModifiedDate":"2022-04-06"},{"lineNumber":259,"author":{"gitId":"Musfirahe0556596"},"content":"                fm.addFilePlanToList(pl, parsedPlanFileDataLine);","lastModifiedDate":"2022-04-06"},{"lineNumber":260,"author":{"gitId":"Musfirahe0556596"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-04-06"},{"lineNumber":261,"author":{"gitId":"Musfirahe0556596"},"content":"                System.out.println(\"File data error: insufficient parameters in plan data.\");","lastModifiedDate":"2022-04-06"},{"lineNumber":262,"author":{"gitId":"Musfirahe0556596"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-04-06"},{"lineNumber":263,"author":{"gitId":"Musfirahe0556596"},"content":"                System.out.println(\"File data error: \" + e.getMessage());","lastModifiedDate":"2022-04-06"},{"lineNumber":264,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-04-06"},{"lineNumber":265,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":266,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":267,"author":{"gitId":"Musfirahe0556596"},"content":"        //Create and add workout with the random workout","lastModifiedDate":"2022-04-06"},{"lineNumber":268,"author":{"gitId":"Musfirahe0556596"},"content":"        String fetchRepsFromNewRandom \u003d createTestWorkout.split(\"\\\\|\")[1];","lastModifiedDate":"2022-04-06"},{"lineNumber":269,"author":{"gitId":"Musfirahe0556596"},"content":"        String commandInput \u003d \"workout /new squat /reps\" + fetchRepsFromNewRandom;","lastModifiedDate":"2022-04-06"},{"lineNumber":270,"author":{"gitId":"Musfirahe0556596"},"content":"        WorkoutCommand createValidWorkoutCommand \u003d parser.createWorkoutCommand(commandInput);","lastModifiedDate":"2022-04-06"},{"lineNumber":271,"author":{"gitId":"Musfirahe0556596"},"content":"        createValidWorkoutCommand.execute();","lastModifiedDate":"2022-04-06"},{"lineNumber":272,"author":{"gitId":"Musfirahe0556596"},"content":"        assertEquals(wl.getWorkoutsDisplayList().size(), trackNumberOfWorkouts);","lastModifiedDate":"2022-04-06"},{"lineNumber":273,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":274,"author":{"gitId":"Musfirahe0556596"},"content":"        //Now delete that newly created workout using the delete method.","lastModifiedDate":"2022-04-06"},{"lineNumber":275,"author":{"gitId":"Musfirahe0556596"},"content":"        //Assert that workoutlist is one element lesser than before delete.","lastModifiedDate":"2022-04-06"},{"lineNumber":276,"author":{"gitId":"Musfirahe0556596"},"content":"        String commandDeleteInput \u003d \"workout /delete \" + wl.getWorkoutsDisplayList().size();","lastModifiedDate":"2022-04-06"},{"lineNumber":277,"author":{"gitId":"Musfirahe0556596"},"content":"        WorkoutCommand deleteValidWorkoutCommand \u003d parser.createWorkoutCommand(commandDeleteInput);","lastModifiedDate":"2022-04-06"},{"lineNumber":278,"author":{"gitId":"Musfirahe0556596"},"content":"        deleteValidWorkoutCommand.execute();","lastModifiedDate":"2022-04-06"},{"lineNumber":279,"author":{"gitId":"Musfirahe0556596"},"content":"        assertEquals(wl.getWorkoutsDisplayList().size(), trackNumberOfWorkouts - 1);","lastModifiedDate":"2022-04-06"},{"lineNumber":280,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":281,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"Musfirahe0556596":220,"alanlowzies":58,"TianaiYan":3}},{"path":"src/test/java/data/exercises/ExerciseListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"package data.exercises;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"import textcolors.TextColor;","lastModifiedDate":"2022-04-10"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"import werkit.UI;","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-04-10"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-04-10"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"public class ExerciseListTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"    ExerciseList exerciseList;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"    void setUp() {","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"        LogHandler.startLogHandler();","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"        exerciseList \u003d new ExerciseList();","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"    public void execute_validGetQuantity_expectSuccess() {","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"        String firstSampleExercise \u003d \"push up\";","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"        String secondSampleExercise \u003d \"pull up\";","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"        exerciseList.addExerciseToList(firstSampleExercise);","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"        exerciseList.addExerciseToList(secondSampleExercise);","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"        assertEquals(2, exerciseList.getNumberOfExercises());","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"    public void execute_validGetExerciseAt_expectSuccess() {","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"        String firstSampleExercise \u003d \"push up\";","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"        String secondSampleExercise \u003d \"pull up\";","lastModifiedDate":"2022-04-10"},{"lineNumber":38,"author":{"gitId":"a1021492980"},"content":"        exerciseList.addExerciseToList(firstSampleExercise);","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"a1021492980"},"content":"        exerciseList.addExerciseToList(secondSampleExercise);","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"a1021492980"},"content":"        assertEquals(\"pull up\", exerciseList.getExerciseAt(2));","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"a1021492980"},"content":"    public void execute_validCheckExist_expectSuccess() {","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"a1021492980"},"content":"        String firstSampleExercise \u003d \"push up\";","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"a1021492980"},"content":"        String secondSampleExercise \u003d \"pull up\";","lastModifiedDate":"2022-04-10"},{"lineNumber":47,"author":{"gitId":"a1021492980"},"content":"        exerciseList.addExerciseToList(firstSampleExercise);","lastModifiedDate":"2022-04-10"},{"lineNumber":48,"author":{"gitId":"a1021492980"},"content":"        exerciseList.addExerciseToList(secondSampleExercise);","lastModifiedDate":"2022-04-10"},{"lineNumber":49,"author":{"gitId":"a1021492980"},"content":"        assertTrue(exerciseList.checkIfExerciseExists(\"pull up\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":52,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"a1021492980"},"content":"    void execute_validPrintExercise_expectSuccess() {","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"a1021492980"},"content":"        UI ui;","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"a1021492980"},"content":"        ui \u003d new UI();","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":58,"author":{"gitId":"a1021492980"},"content":"        String firstSampleExercise \u003d \"push up\";","lastModifiedDate":"2022-04-10"},{"lineNumber":59,"author":{"gitId":"a1021492980"},"content":"        String secondSampleExercise \u003d \"pull up\";","lastModifiedDate":"2022-04-10"},{"lineNumber":60,"author":{"gitId":"a1021492980"},"content":"        exerciseList.addExerciseToList(firstSampleExercise);","lastModifiedDate":"2022-04-10"},{"lineNumber":61,"author":{"gitId":"a1021492980"},"content":"        exerciseList.addExerciseToList(secondSampleExercise);","lastModifiedDate":"2022-04-10"},{"lineNumber":62,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":63,"author":{"gitId":"a1021492980"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-04-10"},{"lineNumber":64,"author":{"gitId":"a1021492980"},"content":"                \"There are 2 exercises available.\\n\" + \"Here is the list of exercises: \\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":65,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":66,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"1. push up\\n\")","lastModifiedDate":"2022-04-10"},{"lineNumber":67,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"2. pull up\\n\")","lastModifiedDate":"2022-04-10"},{"lineNumber":68,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":69,"author":{"gitId":"a1021492980"},"content":"                        + \"End of exercise list.\";","lastModifiedDate":"2022-04-10"},{"lineNumber":70,"author":{"gitId":"a1021492980"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-10"},{"lineNumber":71,"author":{"gitId":"a1021492980"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-04-10"},{"lineNumber":72,"author":{"gitId":"a1021492980"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-04-10"},{"lineNumber":73,"author":{"gitId":"a1021492980"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-04-10"},{"lineNumber":74,"author":{"gitId":"a1021492980"},"content":"        exerciseList.printExerciseList();","lastModifiedDate":"2022-04-10"},{"lineNumber":75,"author":{"gitId":"a1021492980"},"content":"        System.out.flush();","lastModifiedDate":"2022-04-10"},{"lineNumber":76,"author":{"gitId":"a1021492980"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\")","lastModifiedDate":"2022-04-10"},{"lineNumber":77,"author":{"gitId":"a1021492980"},"content":"                .replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-10"},{"lineNumber":78,"author":{"gitId":"a1021492980"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-04-10"},{"lineNumber":79,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":80,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":81,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":82,"author":{"gitId":"a1021492980"},"content":"    void execute_validCheckPopulateExercise_expectSuccess() {","lastModifiedDate":"2022-04-10"},{"lineNumber":83,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":84,"author":{"gitId":"a1021492980"},"content":"        UI ui;","lastModifiedDate":"2022-04-10"},{"lineNumber":85,"author":{"gitId":"a1021492980"},"content":"        ui \u003d new UI();","lastModifiedDate":"2022-04-10"},{"lineNumber":86,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":87,"author":{"gitId":"a1021492980"},"content":"        exerciseList.populateExercisesToList();","lastModifiedDate":"2022-04-10"},{"lineNumber":88,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":89,"author":{"gitId":"a1021492980"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-04-10"},{"lineNumber":90,"author":{"gitId":"a1021492980"},"content":"                \"There are 13 exercises available.\\n\" + \"Here is the list of exercises: \\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":91,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":92,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"1. push up\\n\")","lastModifiedDate":"2022-04-10"},{"lineNumber":93,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"2. bicep curl\\n\")","lastModifiedDate":"2022-04-10"},{"lineNumber":94,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"3. pull up\\n\")","lastModifiedDate":"2022-04-10"},{"lineNumber":95,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"4. squat\\n\")","lastModifiedDate":"2022-04-10"},{"lineNumber":96,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"5. lunge\\n\")","lastModifiedDate":"2022-04-10"},{"lineNumber":97,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"6. hip thrust\\n\")","lastModifiedDate":"2022-04-10"},{"lineNumber":98,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"7. sit up\\n\")","lastModifiedDate":"2022-04-10"},{"lineNumber":99,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"8. crunch\\n\")","lastModifiedDate":"2022-04-10"},{"lineNumber":100,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"9. russian twist\\n\")","lastModifiedDate":"2022-04-10"},{"lineNumber":101,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"10. running\\n\")","lastModifiedDate":"2022-04-10"},{"lineNumber":102,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"11. swimming\\n\")","lastModifiedDate":"2022-04-10"},{"lineNumber":103,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"12. jumping jack\\n\")","lastModifiedDate":"2022-04-10"},{"lineNumber":104,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"13. burpee\\n\")","lastModifiedDate":"2022-04-10"},{"lineNumber":105,"author":{"gitId":"a1021492980"},"content":"                        + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":106,"author":{"gitId":"a1021492980"},"content":"                        + \"End of exercise list.\";","lastModifiedDate":"2022-04-10"},{"lineNumber":107,"author":{"gitId":"a1021492980"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-10"},{"lineNumber":108,"author":{"gitId":"a1021492980"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-04-10"},{"lineNumber":109,"author":{"gitId":"a1021492980"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-04-10"},{"lineNumber":110,"author":{"gitId":"a1021492980"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-04-10"},{"lineNumber":111,"author":{"gitId":"a1021492980"},"content":"        exerciseList.printExerciseList();","lastModifiedDate":"2022-04-10"},{"lineNumber":112,"author":{"gitId":"a1021492980"},"content":"        System.out.flush();","lastModifiedDate":"2022-04-10"},{"lineNumber":113,"author":{"gitId":"a1021492980"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\")","lastModifiedDate":"2022-04-10"},{"lineNumber":114,"author":{"gitId":"a1021492980"},"content":"                .replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-10"},{"lineNumber":115,"author":{"gitId":"a1021492980"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-04-10"},{"lineNumber":116,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":117,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"alanlowzies":4,"a1021492980":114}},{"path":"src/test/java/data/plans/PlanListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"package data.plans;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"import data.exercises.InvalidExerciseException;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"import data.workouts.InvalidWorkoutException;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"TianaiYan"},"content":"import data.workouts.Workout;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"import data.workouts.WorkoutList;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"TianaiYan"},"content":"import textcolors.TextColor;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"TianaiYan"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"TianaiYan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"class PlanListTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"    ExerciseList exerciseList;","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"    WorkoutList workoutList;","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"    PlanList planList;","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"TianaiYan"},"content":"    UI ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"    void setUp() throws InvalidWorkoutException, InvalidExerciseException {","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"        LogHandler.startLogHandler();","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"        exerciseList \u003d new ExerciseList();","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"        workoutList \u003d new WorkoutList(exerciseList);","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"        planList \u003d new PlanList(workoutList);","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"TianaiYan"},"content":"        ui \u003d new UI();","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"        exerciseList.addExerciseToList(\"push up\");","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"        exerciseList.addExerciseToList(\"pull up\");","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"        exerciseList.addExerciseToList(\"sit up\");","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"Musfirahe0556596"},"content":"        exerciseList.addExerciseToList(\"burpee\");","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"Musfirahe0556596"},"content":"        exerciseList.addExerciseToList(\"russian twist\");","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout1 \u003d workoutList.createNewWorkout(\"push up /reps 10\");","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"        workoutList.addNewWorkoutToLists(newWorkout1);","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout2 \u003d workoutList.createNewWorkout(\"sit up /reps 15\");","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"        workoutList.addNewWorkoutToLists(newWorkout2);","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout3 \u003d workoutList.createNewWorkout(\"burpee /reps 20\");","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"        workoutList.addNewWorkoutToLists(newWorkout3);","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout4 \u003d workoutList.createNewWorkout(\"burpee /reps 50\");","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"        workoutList.addNewWorkoutToLists(newWorkout4);","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout5 \u003d workoutList.createNewWorkout(\"pull up /reps 10\");","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"        workoutList.addNewWorkoutToLists(newWorkout5);","lastModifiedDate":"2022-04-09"},{"lineNumber":51,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"TianaiYan"},"content":"    void listAllPlan_expectNoPlanPrints() {","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"Musfirahe0556596"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"Musfirahe0556596"},"content":"                \"Oops! You have not created any plans yet!\"","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \"\\nTo create a new plan, enter \u0027plan /new \u003cplan name\u003e /workouts \"","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \"\\n\u003cworkout number(s) to add, separated by comma\u003e\u0027.\"","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \"\\nAlternatively, enter \u0027help\u0027 for more information.\";","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"Musfirahe0556596"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"Musfirahe0556596"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"Musfirahe0556596"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"Musfirahe0556596"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"Musfirahe0556596"},"content":"        planList.listAllPlan();","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.flush();","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"Musfirahe0556596"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"Musfirahe0556596"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"Musfirahe0556596"},"content":"    void listAllPlan_expectThreePrints() throws InvalidPlanException {","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"Musfirahe0556596"},"content":"        Plan newPlan1 \u003d planList.createNewPlan(\"Plan 1 /workouts 1,2,3\");","lastModifiedDate":"2022-04-09"},{"lineNumber":73,"author":{"gitId":"Musfirahe0556596"},"content":"        planList.addNewPlanToLists(newPlan1);","lastModifiedDate":"2022-04-09"},{"lineNumber":74,"author":{"gitId":"Musfirahe0556596"},"content":"        Plan newPlan2 \u003d planList.createNewPlan(\"Plan 2 /workouts 1\");","lastModifiedDate":"2022-04-09"},{"lineNumber":75,"author":{"gitId":"Musfirahe0556596"},"content":"        planList.addNewPlanToLists(newPlan2);","lastModifiedDate":"2022-04-09"},{"lineNumber":76,"author":{"gitId":"Musfirahe0556596"},"content":"        Plan newPlan3 \u003d planList.createNewPlan(\"Plan 3 /workouts 1,5,4,3\");","lastModifiedDate":"2022-04-09"},{"lineNumber":77,"author":{"gitId":"Musfirahe0556596"},"content":"        planList.addNewPlanToLists(newPlan3);","lastModifiedDate":"2022-04-09"},{"lineNumber":78,"author":{"gitId":"Musfirahe0556596"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"Musfirahe0556596"},"content":"                \"Here are all your plan(s).\\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"alanlowzies"},"content":"                        + \"To view each plan in detail, enter\\n\u0027plan /details \u003cplan number in list\u003e\u0027.\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"a1021492980"},"content":"                        + \"1. plan 1\\n\"","lastModifiedDate":"2022-04-05"},{"lineNumber":82,"author":{"gitId":"a1021492980"},"content":"                        + \"2. plan 2\\n\"","lastModifiedDate":"2022-04-05"},{"lineNumber":83,"author":{"gitId":"a1021492980"},"content":"                        + \"3. plan 3\\n\";","lastModifiedDate":"2022-04-05"},{"lineNumber":84,"author":{"gitId":"Musfirahe0556596"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"Musfirahe0556596"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"Musfirahe0556596"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"Musfirahe0556596"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"Musfirahe0556596"},"content":"        planList.listAllPlan();","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.flush();","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"Musfirahe0556596"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"Musfirahe0556596"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"Musfirahe0556596"},"content":"    void createNewPlan_validPlansAdded_expectValidPlans() throws InvalidPlanException {","lastModifiedDate":"2022-04-09"},{"lineNumber":96,"author":{"gitId":"Musfirahe0556596"},"content":"        Plan newPlan1 \u003d planList.createNewPlan(\"Plan 1 /workouts 1,5,4,3\");","lastModifiedDate":"2022-04-09"},{"lineNumber":97,"author":{"gitId":"Musfirahe0556596"},"content":"        planList.addNewPlanToLists(newPlan1);","lastModifiedDate":"2022-04-09"},{"lineNumber":98,"author":{"gitId":"Musfirahe0556596"},"content":"        Plan newPlan2 \u003d planList.createNewPlan(\"Plan 2 /workouts 1,5,4,3,1,1,1\");","lastModifiedDate":"2022-04-09"},{"lineNumber":99,"author":{"gitId":"Musfirahe0556596"},"content":"        planList.addNewPlanToLists(newPlan2);","lastModifiedDate":"2022-04-09"},{"lineNumber":100,"author":{"gitId":"Musfirahe0556596"},"content":"        Plan newPlan3 \u003d planList.createNewPlan(\"Plan 3 /workouts 1, 3, 4\");","lastModifiedDate":"2022-04-09"},{"lineNumber":101,"author":{"gitId":"Musfirahe0556596"},"content":"        planList.addNewPlanToLists(newPlan3);","lastModifiedDate":"2022-04-09"},{"lineNumber":102,"author":{"gitId":"Musfirahe0556596"},"content":"        Plan newPlan4 \u003d planList.createNewPlan(\"Plan 4 /workouts 1,1, 5,2\");","lastModifiedDate":"2022-04-09"},{"lineNumber":103,"author":{"gitId":"Musfirahe0556596"},"content":"        planList.addNewPlanToLists(newPlan4);","lastModifiedDate":"2022-04-09"},{"lineNumber":104,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":105,"author":{"gitId":"Musfirahe0556596"},"content":"        for (int i \u003d 0; i \u003c planList.getPlansDisplayList().size(); i +\u003d 1) {","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"a1021492980"},"content":"            assertEquals(\"plan \" + (i + 1), planList.getPlansDisplayList().get(i).toString());","lastModifiedDate":"2022-04-05"},{"lineNumber":107,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"Musfirahe0556596"},"content":"    void createNewPlan_invalidPlanName_expectInvalidPlanException() throws InvalidPlanException {","lastModifiedDate":"2022-04-09"},{"lineNumber":112,"author":{"gitId":"Musfirahe0556596"},"content":"        Plan newPlan1 \u003d planList.createNewPlan(\"Plan 1 /workouts 1,2,3\");","lastModifiedDate":"2022-04-09"},{"lineNumber":113,"author":{"gitId":"Musfirahe0556596"},"content":"        planList.addNewPlanToLists(newPlan1);","lastModifiedDate":"2022-04-09"},{"lineNumber":114,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidPlanException.class,","lastModifiedDate":"2022-03-20"},{"lineNumber":115,"author":{"gitId":"Musfirahe0556596"},"content":"            () -\u003e planList.createNewPlan(\"Plan 1 /workouts 2,2,2\"));","lastModifiedDate":"2022-04-09"},{"lineNumber":116,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidPlanException.class,","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"Musfirahe0556596"},"content":"            () -\u003e planList.createNewPlan(\"rest day /workouts 3,2,3\"));","lastModifiedDate":"2022-04-09"},{"lineNumber":118,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidPlanException.class,","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"Musfirahe0556596"},"content":"            () -\u003e planList.createNewPlan(\"REST DAY       /workouts 3,2,3,1\"));","lastModifiedDate":"2022-04-09"},{"lineNumber":120,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidPlanException.class,","lastModifiedDate":"2022-03-28"},{"lineNumber":121,"author":{"gitId":"Musfirahe0556596"},"content":"            () -\u003e planList.createNewPlan(\"        /workouts 3,2,3,1,1\"));","lastModifiedDate":"2022-04-09"},{"lineNumber":122,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidPlanException.class,","lastModifiedDate":"2022-03-28"},{"lineNumber":123,"author":{"gitId":"Musfirahe0556596"},"content":"            () -\u003e planList.createNewPlan(\"Exceed the 30 characters limit yes /workouts 1,2,1\"));","lastModifiedDate":"2022-04-09"},{"lineNumber":124,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":125,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":126,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":127,"author":{"gitId":"Musfirahe0556596"},"content":"    void createNewPlan_minMaxWorkoutsToAdd_expectException() {","lastModifiedDate":"2022-04-09"},{"lineNumber":128,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidPlanException.class,","lastModifiedDate":"2022-03-20"},{"lineNumber":129,"author":{"gitId":"Musfirahe0556596"},"content":"            () -\u003e planList.createNewPlan(\"Exceed 10 Plan /workouts 1,1,1,1,1,2,2,2,2,2,3\"));","lastModifiedDate":"2022-04-09"},{"lineNumber":130,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(ArrayIndexOutOfBoundsException.class,","lastModifiedDate":"2022-03-20"},{"lineNumber":131,"author":{"gitId":"Musfirahe0556596"},"content":"            () -\u003e planList.createNewPlan(\"Min 1 Plan /workouts\"));","lastModifiedDate":"2022-04-09"},{"lineNumber":132,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":133,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":134,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":135,"author":{"gitId":"Musfirahe0556596"},"content":"    void createNewPlan_workoutIndexOutOfRange_expectInvalidPlanException() {","lastModifiedDate":"2022-04-09"},{"lineNumber":136,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidPlanException.class,","lastModifiedDate":"2022-03-20"},{"lineNumber":137,"author":{"gitId":"Musfirahe0556596"},"content":"            () -\u003e planList.createNewPlan(\"Plan 1 /workouts 1,2,3,9\"));","lastModifiedDate":"2022-04-09"},{"lineNumber":138,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidPlanException.class,","lastModifiedDate":"2022-03-20"},{"lineNumber":139,"author":{"gitId":"Musfirahe0556596"},"content":"            () -\u003e planList.createNewPlan(\"Plan 2 /workouts 9\"));","lastModifiedDate":"2022-04-09"},{"lineNumber":140,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":141,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":142,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":143,"author":{"gitId":"Musfirahe0556596"},"content":"    void createNewPlan_workoutWithSameSequence_expectInvalidPlanException() throws InvalidPlanException {","lastModifiedDate":"2022-04-09"},{"lineNumber":144,"author":{"gitId":"Musfirahe0556596"},"content":"        Plan newPlan1 \u003d planList.createNewPlan(\"Plan 1 /workouts 1,2,3\");","lastModifiedDate":"2022-04-09"},{"lineNumber":145,"author":{"gitId":"Musfirahe0556596"},"content":"        planList.addNewPlanToLists(newPlan1);","lastModifiedDate":"2022-04-09"},{"lineNumber":146,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidPlanException.class,","lastModifiedDate":"2022-03-28"},{"lineNumber":147,"author":{"gitId":"Musfirahe0556596"},"content":"            () -\u003e planList.createNewPlan(\"Duplicate Sequence /workouts 1,2,3\"));","lastModifiedDate":"2022-04-09"},{"lineNumber":148,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":149,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"TianaiYan"},"content":"    //@@author TianaiYan","lastModifiedDate":"2022-04-09"},{"lineNumber":151,"author":{"gitId":"TianaiYan"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":152,"author":{"gitId":"TianaiYan"},"content":"    void listPlanDetails_validPlanNumber_expectThreeWorkouts() throws InvalidPlanException {","lastModifiedDate":"2022-03-29"},{"lineNumber":153,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan1 \u003d planList.createNewPlan(\"Plan 1 /workouts 1,2,3\");","lastModifiedDate":"2022-04-09"},{"lineNumber":154,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan1);","lastModifiedDate":"2022-04-09"},{"lineNumber":155,"author":{"gitId":"TianaiYan"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":156,"author":{"gitId":"TianaiYan"},"content":"                \"Here are the 3 workouts in [\" + ui.getColorText(TextColor.COLOR_YELLOW, \"plan 1\")","lastModifiedDate":"2022-04-05"},{"lineNumber":157,"author":{"gitId":"TianaiYan"},"content":"                        + \"].\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":158,"author":{"gitId":"TianaiYan"},"content":"                        + \"1. push up (10 reps)\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"TianaiYan"},"content":"                        + \"2. sit up (15 reps)\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"TianaiYan"},"content":"                        + \"3. burpee (20 reps)\\n\";","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"TianaiYan"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"TianaiYan"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-03-29"},{"lineNumber":163,"author":{"gitId":"TianaiYan"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-03-29"},{"lineNumber":164,"author":{"gitId":"TianaiYan"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-03-29"},{"lineNumber":165,"author":{"gitId":"TianaiYan"},"content":"        planList.listPlanDetails(\"1\", ui);","lastModifiedDate":"2022-03-29"},{"lineNumber":166,"author":{"gitId":"TianaiYan"},"content":"        System.out.flush();","lastModifiedDate":"2022-03-29"},{"lineNumber":167,"author":{"gitId":"TianaiYan"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":168,"author":{"gitId":"TianaiYan"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":170,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":171,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":172,"author":{"gitId":"TianaiYan"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":173,"author":{"gitId":"TianaiYan"},"content":"    void listPlanDetails_planNumberOutOfRange_expectInvalidPlanException() throws InvalidPlanException {","lastModifiedDate":"2022-03-29"},{"lineNumber":174,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan1 \u003d planList.createNewPlan(\"Plan 1 /workouts 1,5,4,3\");","lastModifiedDate":"2022-04-09"},{"lineNumber":175,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan1);","lastModifiedDate":"2022-04-09"},{"lineNumber":176,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan2 \u003d planList.createNewPlan(\"Plan 2 /workouts 1,5,4,3,1,1,1\");","lastModifiedDate":"2022-04-09"},{"lineNumber":177,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan2);","lastModifiedDate":"2022-04-09"},{"lineNumber":178,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan3 \u003d planList.createNewPlan(\"Plan 3 /workouts 1, 3, 4\");","lastModifiedDate":"2022-04-09"},{"lineNumber":179,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan3);","lastModifiedDate":"2022-04-09"},{"lineNumber":180,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":181,"author":{"gitId":"TianaiYan"},"content":"        String planNumber \u003d \"5\";","lastModifiedDate":"2022-03-29"},{"lineNumber":182,"author":{"gitId":"TianaiYan"},"content":"        assertThrows(InvalidPlanException.class,","lastModifiedDate":"2022-03-29"},{"lineNumber":183,"author":{"gitId":"TianaiYan"},"content":"            () -\u003e planList.listPlanDetails(planNumber, ui));","lastModifiedDate":"2022-03-29"},{"lineNumber":184,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":185,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":186,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":187,"author":{"gitId":"TianaiYan"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":188,"author":{"gitId":"TianaiYan"},"content":"    void listPlanDetails_inputArgumentIsNotANumber_expectNumberFormatException() throws InvalidPlanException {","lastModifiedDate":"2022-03-29"},{"lineNumber":189,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan1 \u003d planList.createNewPlan(\"Plan 1 /workouts 1,5,4,3\");","lastModifiedDate":"2022-04-09"},{"lineNumber":190,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan1);","lastModifiedDate":"2022-04-09"},{"lineNumber":191,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan2 \u003d planList.createNewPlan(\"Plan 2 /workouts 1,5,4,3,1,1,1\");","lastModifiedDate":"2022-04-09"},{"lineNumber":192,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan2);","lastModifiedDate":"2022-04-09"},{"lineNumber":193,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan3 \u003d planList.createNewPlan(\"Plan 3 /workouts 1, 3, 4\");","lastModifiedDate":"2022-04-09"},{"lineNumber":194,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan3);","lastModifiedDate":"2022-04-09"},{"lineNumber":195,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":196,"author":{"gitId":"TianaiYan"},"content":"        String invalidArgument \u003d \"3a\";","lastModifiedDate":"2022-03-29"},{"lineNumber":197,"author":{"gitId":"TianaiYan"},"content":"        assertThrows(NumberFormatException.class,","lastModifiedDate":"2022-03-29"},{"lineNumber":198,"author":{"gitId":"TianaiYan"},"content":"            () -\u003e planList.listPlanDetails(invalidArgument, ui));","lastModifiedDate":"2022-03-29"},{"lineNumber":199,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":200,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":201,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":202,"author":{"gitId":"TianaiYan"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":203,"author":{"gitId":"TianaiYan"},"content":"    void deletePlan_validIndexToDelete_expectDeletePlanMessage() throws InvalidPlanException {","lastModifiedDate":"2022-03-29"},{"lineNumber":204,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan1 \u003d planList.createNewPlan(\"Plan 1 /workouts 1,5,4,3\");","lastModifiedDate":"2022-04-09"},{"lineNumber":205,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan1);","lastModifiedDate":"2022-04-09"},{"lineNumber":206,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan2 \u003d planList.createNewPlan(\"Plan 2 /workouts 1,5,4,3,1,1,1\");","lastModifiedDate":"2022-04-09"},{"lineNumber":207,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan2);","lastModifiedDate":"2022-04-09"},{"lineNumber":208,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan3 \u003d planList.createNewPlan(\"Plan 3 /workouts 1, 3, 4\");","lastModifiedDate":"2022-04-09"},{"lineNumber":209,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan3);","lastModifiedDate":"2022-04-09"},{"lineNumber":210,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":211,"author":{"gitId":"TianaiYan"},"content":"        int planNumberToDelete \u003d 2;","lastModifiedDate":"2022-03-29"},{"lineNumber":212,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":213,"author":{"gitId":"TianaiYan"},"content":"        assertEquals(\"plan 2\", planList.getPlansDisplayList().get(planNumberToDelete - 1).toString());","lastModifiedDate":"2022-04-05"},{"lineNumber":214,"author":{"gitId":"TianaiYan"},"content":"        planList.deletePlan(Integer.toString(planNumberToDelete));","lastModifiedDate":"2022-03-29"},{"lineNumber":215,"author":{"gitId":"TianaiYan"},"content":"        assertEquals(\"plan 3\", planList.getPlansDisplayList().get(planNumberToDelete - 1).toString());","lastModifiedDate":"2022-04-05"},{"lineNumber":216,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":217,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":218,"author":{"gitId":"TianaiYan"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":219,"author":{"gitId":"TianaiYan"},"content":"    void deletePlan_indexOutOfRange_expectInvalidPlanException() throws InvalidPlanException {","lastModifiedDate":"2022-03-29"},{"lineNumber":220,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan1 \u003d planList.createNewPlan(\"Plan 1 /workouts 1,5,4,3\");","lastModifiedDate":"2022-04-09"},{"lineNumber":221,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan1);","lastModifiedDate":"2022-04-09"},{"lineNumber":222,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan2 \u003d planList.createNewPlan(\"Plan 2 /workouts 1,5,4,3,1,1,1\");","lastModifiedDate":"2022-04-09"},{"lineNumber":223,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan2);","lastModifiedDate":"2022-04-09"},{"lineNumber":224,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan3 \u003d planList.createNewPlan(\"Plan 3 /workouts 1, 3, 4\");","lastModifiedDate":"2022-04-09"},{"lineNumber":225,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan3);","lastModifiedDate":"2022-04-09"},{"lineNumber":226,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":227,"author":{"gitId":"TianaiYan"},"content":"        String planNumberToDelete \u003d \"5\";","lastModifiedDate":"2022-03-29"},{"lineNumber":228,"author":{"gitId":"TianaiYan"},"content":"        assertThrows(InvalidPlanException.class,","lastModifiedDate":"2022-03-29"},{"lineNumber":229,"author":{"gitId":"TianaiYan"},"content":"            () -\u003e planList.deletePlan(planNumberToDelete));","lastModifiedDate":"2022-03-29"},{"lineNumber":230,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":231,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":232,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":233,"author":{"gitId":"TianaiYan"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":234,"author":{"gitId":"TianaiYan"},"content":"    void deleteWorkout_inputArgumentIsNotANumber_expectNumberFormatException() throws InvalidPlanException {","lastModifiedDate":"2022-03-29"},{"lineNumber":235,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan1 \u003d planList.createNewPlan(\"Plan 1 /workouts 1,5,4,3\");","lastModifiedDate":"2022-04-09"},{"lineNumber":236,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan1);","lastModifiedDate":"2022-04-09"},{"lineNumber":237,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan2 \u003d planList.createNewPlan(\"Plan 2 /workouts 1,5,4,3,1,1,1\");","lastModifiedDate":"2022-04-09"},{"lineNumber":238,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan2);","lastModifiedDate":"2022-04-09"},{"lineNumber":239,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan3 \u003d planList.createNewPlan(\"Plan 3 /workouts 1, 3, 4\");","lastModifiedDate":"2022-04-09"},{"lineNumber":240,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan3);","lastModifiedDate":"2022-04-09"},{"lineNumber":241,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":242,"author":{"gitId":"TianaiYan"},"content":"        String invalidArgument \u003d \"3a\";","lastModifiedDate":"2022-03-29"},{"lineNumber":243,"author":{"gitId":"TianaiYan"},"content":"        assertThrows(NumberFormatException.class,","lastModifiedDate":"2022-03-29"},{"lineNumber":244,"author":{"gitId":"TianaiYan"},"content":"            () -\u003e planList.deletePlan(invalidArgument));","lastModifiedDate":"2022-03-29"},{"lineNumber":245,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":246,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":247,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":248,"author":{"gitId":"TianaiYan"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":249,"author":{"gitId":"TianaiYan"},"content":"    void getIndexNumFromPlanName_planNameExists_expectCorrespondingPlanNumber() throws InvalidPlanException {","lastModifiedDate":"2022-04-07"},{"lineNumber":250,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan1 \u003d planList.createNewPlan(\"Plan 1 /workouts 1,2,3\");","lastModifiedDate":"2022-04-09"},{"lineNumber":251,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan1);","lastModifiedDate":"2022-04-09"},{"lineNumber":252,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan2 \u003d planList.createNewPlan(\"Plan 2 /workouts 1\");","lastModifiedDate":"2022-04-09"},{"lineNumber":253,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan2);","lastModifiedDate":"2022-04-09"},{"lineNumber":254,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan3 \u003d planList.createNewPlan(\"Plan 3 /workouts 1,5, 3\");","lastModifiedDate":"2022-04-09"},{"lineNumber":255,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan3);","lastModifiedDate":"2022-04-09"},{"lineNumber":256,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":257,"author":{"gitId":"TianaiYan"},"content":"        assertEquals(2, planList.getIndexNumFromPlanName(\"Plan 2\"));","lastModifiedDate":"2022-04-07"},{"lineNumber":258,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":259,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":260,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":261,"author":{"gitId":"TianaiYan"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":262,"author":{"gitId":"TianaiYan"},"content":"    void getIndexNumFromPlanName_planNameNotFound_expectInvalidPlanException() throws InvalidPlanException {","lastModifiedDate":"2022-04-07"},{"lineNumber":263,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan1 \u003d planList.createNewPlan(\"Plan 1 /workouts 1,2,3\");","lastModifiedDate":"2022-04-09"},{"lineNumber":264,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan1);","lastModifiedDate":"2022-04-09"},{"lineNumber":265,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan2 \u003d planList.createNewPlan(\"Plan 2 /workouts 1\");","lastModifiedDate":"2022-04-09"},{"lineNumber":266,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan2);","lastModifiedDate":"2022-04-09"},{"lineNumber":267,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan3 \u003d planList.createNewPlan(\"Plan 3 /workouts 1,5, 3\");","lastModifiedDate":"2022-04-09"},{"lineNumber":268,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan3);","lastModifiedDate":"2022-04-09"},{"lineNumber":269,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":270,"author":{"gitId":"TianaiYan"},"content":"        assertThrows(InvalidPlanException.class,","lastModifiedDate":"2022-04-07"},{"lineNumber":271,"author":{"gitId":"TianaiYan"},"content":"            () -\u003e planList.getIndexNumFromPlanName(\"Plan 4\"));","lastModifiedDate":"2022-04-07"},{"lineNumber":272,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":273,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":274,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":275,"author":{"gitId":"TianaiYan"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":276,"author":{"gitId":"TianaiYan"},"content":"    void insertPlanIntoList_validNewPlan_expectNewPlanInList() throws InvalidPlanException,","lastModifiedDate":"2022-04-07"},{"lineNumber":277,"author":{"gitId":"TianaiYan"},"content":"            InvalidWorkoutException {","lastModifiedDate":"2022-04-07"},{"lineNumber":278,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan1 \u003d planList.createNewPlan(\"Plan 1 /workouts 1,2,3\");","lastModifiedDate":"2022-04-09"},{"lineNumber":279,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan1);","lastModifiedDate":"2022-04-09"},{"lineNumber":280,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan2 \u003d planList.createNewPlan(\"Plan 2 /workouts 1\");","lastModifiedDate":"2022-04-09"},{"lineNumber":281,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan2);","lastModifiedDate":"2022-04-09"},{"lineNumber":282,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan3 \u003d planList.createNewPlan(\"Plan 3 /workouts 1,5, 3\");","lastModifiedDate":"2022-04-09"},{"lineNumber":283,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan3);","lastModifiedDate":"2022-04-09"},{"lineNumber":284,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":285,"author":{"gitId":"TianaiYan"},"content":"        assertEquals(3, planList.getPlansDisplayList().size());","lastModifiedDate":"2022-04-07"},{"lineNumber":286,"author":{"gitId":"TianaiYan"},"content":"        ArrayList\u003cWorkout\u003e listOfWorkouts \u003d new ArrayList\u003cWorkout\u003e();","lastModifiedDate":"2022-04-07"},{"lineNumber":287,"author":{"gitId":"TianaiYan"},"content":"        listOfWorkouts.add(workoutList.getWorkoutFromIndexNum(1));","lastModifiedDate":"2022-04-07"},{"lineNumber":288,"author":{"gitId":"TianaiYan"},"content":"        listOfWorkouts.add(workoutList.getWorkoutFromIndexNum(4));","lastModifiedDate":"2022-04-07"},{"lineNumber":289,"author":{"gitId":"TianaiYan"},"content":"        Plan plan \u003d new Plan(\"Plan 4\", listOfWorkouts);","lastModifiedDate":"2022-04-07"},{"lineNumber":290,"author":{"gitId":"TianaiYan"},"content":"        planList.insertPlanIntoList(\"Plan 4\", plan);","lastModifiedDate":"2022-04-07"},{"lineNumber":291,"author":{"gitId":"TianaiYan"},"content":"        assertEquals(4, planList.getPlansDisplayList().size());","lastModifiedDate":"2022-04-07"},{"lineNumber":292,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":293,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":294,"author":{"gitId":"TianaiYan"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":295,"author":{"gitId":"TianaiYan"},"content":"    void insertPlanIntoList_invalidNewPlan_expectInvalidWorkoutException() throws InvalidPlanException {","lastModifiedDate":"2022-04-07"},{"lineNumber":296,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan1 \u003d planList.createNewPlan(\"Plan 1 /workouts 1,2,3\");","lastModifiedDate":"2022-04-09"},{"lineNumber":297,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan1);","lastModifiedDate":"2022-04-09"},{"lineNumber":298,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan2 \u003d planList.createNewPlan(\"Plan 2 /workouts 1\");","lastModifiedDate":"2022-04-09"},{"lineNumber":299,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan2);","lastModifiedDate":"2022-04-09"},{"lineNumber":300,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan3 \u003d planList.createNewPlan(\"Plan 3 /workouts 1,5, 3\");","lastModifiedDate":"2022-04-09"},{"lineNumber":301,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan3);","lastModifiedDate":"2022-04-09"},{"lineNumber":302,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":303,"author":{"gitId":"TianaiYan"},"content":"        ArrayList\u003cWorkout\u003e listOfWorkouts \u003d new ArrayList\u003cWorkout\u003e();","lastModifiedDate":"2022-04-07"},{"lineNumber":304,"author":{"gitId":"TianaiYan"},"content":"        Workout workout \u003d new Workout(\"pull up\", 45);","lastModifiedDate":"2022-04-07"},{"lineNumber":305,"author":{"gitId":"TianaiYan"},"content":"        listOfWorkouts.add(workout);","lastModifiedDate":"2022-04-07"},{"lineNumber":306,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":307,"author":{"gitId":"TianaiYan"},"content":"        Plan plan \u003d new Plan(\"Plan 4\", listOfWorkouts);","lastModifiedDate":"2022-04-07"},{"lineNumber":308,"author":{"gitId":"TianaiYan"},"content":"        assertThrows(InvalidWorkoutException.class,","lastModifiedDate":"2022-04-07"},{"lineNumber":309,"author":{"gitId":"TianaiYan"},"content":"            () -\u003e planList.insertPlanIntoList(\"Plan 4\", plan));","lastModifiedDate":"2022-04-07"},{"lineNumber":310,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":311,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":312,"author":{"gitId":"TianaiYan"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":313,"author":{"gitId":"TianaiYan"},"content":"    void deletePlanContainsDeletedWorkout_WorkoutNotInPlan_expectNoChangeWithPlanList() throws","lastModifiedDate":"2022-04-07"},{"lineNumber":314,"author":{"gitId":"TianaiYan"},"content":"            InvalidPlanException, InvalidWorkoutException {","lastModifiedDate":"2022-04-07"},{"lineNumber":315,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan1 \u003d planList.createNewPlan(\"Plan 1 /workouts 1,2,3\");","lastModifiedDate":"2022-04-09"},{"lineNumber":316,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan1);","lastModifiedDate":"2022-04-09"},{"lineNumber":317,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan2 \u003d planList.createNewPlan(\"Plan 2 /workouts 1\");","lastModifiedDate":"2022-04-09"},{"lineNumber":318,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan2);","lastModifiedDate":"2022-04-09"},{"lineNumber":319,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan3 \u003d planList.createNewPlan(\"Plan 3 /workouts 1,5, 3\");","lastModifiedDate":"2022-04-09"},{"lineNumber":320,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan3);","lastModifiedDate":"2022-04-09"},{"lineNumber":321,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":322,"author":{"gitId":"TianaiYan"},"content":"        int workoutNumberToDelete \u003d 4;","lastModifiedDate":"2022-04-07"},{"lineNumber":323,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":324,"author":{"gitId":"TianaiYan"},"content":"        assertEquals(3, planList.getPlansDisplayList().size());","lastModifiedDate":"2022-04-07"},{"lineNumber":325,"author":{"gitId":"TianaiYan"},"content":"        Workout deletedWorkout \u003d workoutList.deleteWorkout(Integer.toString(workoutNumberToDelete));","lastModifiedDate":"2022-04-07"},{"lineNumber":326,"author":{"gitId":"TianaiYan"},"content":"        planList.deletePlanContainsDeletedWorkout(deletedWorkout.toString());","lastModifiedDate":"2022-04-07"},{"lineNumber":327,"author":{"gitId":"TianaiYan"},"content":"        assertEquals(3, planList.getPlansDisplayList().size());","lastModifiedDate":"2022-04-07"},{"lineNumber":328,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":329,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":330,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":331,"author":{"gitId":"TianaiYan"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":332,"author":{"gitId":"TianaiYan"},"content":"    void deletePlanContainsDeletedWorkout_WorkoutInPlan_expectTwoDeletion() throws","lastModifiedDate":"2022-04-07"},{"lineNumber":333,"author":{"gitId":"TianaiYan"},"content":"            InvalidPlanException, InvalidWorkoutException {","lastModifiedDate":"2022-04-07"},{"lineNumber":334,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan1 \u003d planList.createNewPlan(\"Plan 1 /workouts 1,2,3\");","lastModifiedDate":"2022-04-09"},{"lineNumber":335,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan1);","lastModifiedDate":"2022-04-09"},{"lineNumber":336,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan2 \u003d planList.createNewPlan(\"Plan 2 /workouts 1\");","lastModifiedDate":"2022-04-09"},{"lineNumber":337,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan2);","lastModifiedDate":"2022-04-09"},{"lineNumber":338,"author":{"gitId":"TianaiYan"},"content":"        Plan newPlan3 \u003d planList.createNewPlan(\"Plan 3 /workouts 1,5, 3\");","lastModifiedDate":"2022-04-09"},{"lineNumber":339,"author":{"gitId":"TianaiYan"},"content":"        planList.addNewPlanToLists(newPlan3);","lastModifiedDate":"2022-04-09"},{"lineNumber":340,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":341,"author":{"gitId":"TianaiYan"},"content":"        int workoutNumberToDelete \u003d 3;","lastModifiedDate":"2022-04-07"},{"lineNumber":342,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":343,"author":{"gitId":"TianaiYan"},"content":"        assertEquals(3, planList.getPlansDisplayList().size());","lastModifiedDate":"2022-04-07"},{"lineNumber":344,"author":{"gitId":"TianaiYan"},"content":"        Workout deletedWorkout \u003d workoutList.deleteWorkout(Integer.toString(workoutNumberToDelete));","lastModifiedDate":"2022-04-07"},{"lineNumber":345,"author":{"gitId":"TianaiYan"},"content":"        planList.deletePlanContainsDeletedWorkout(deletedWorkout.toString());","lastModifiedDate":"2022-04-07"},{"lineNumber":346,"author":{"gitId":"TianaiYan"},"content":"        assertEquals(1, planList.getPlansDisplayList().size());","lastModifiedDate":"2022-04-07"},{"lineNumber":347,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":348,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":349,"author":{"gitId":"TianaiYan"},"content":"    //@@author","lastModifiedDate":"2022-04-09"},{"lineNumber":350,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"Musfirahe0556596":128,"alanlowzies":11,"TianaiYan":207,"a1021492980":4}},{"path":"src/test/java/data/schedule/DayListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"package data.schedule;","lastModifiedDate":"2022-04-04"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-04-04"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"import data.exercises.InvalidExerciseException;","lastModifiedDate":"2022-04-04"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"import data.plans.InvalidPlanException;","lastModifiedDate":"2022-04-04"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"import data.plans.Plan;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-04-04"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"import data.workouts.InvalidWorkoutException;","lastModifiedDate":"2022-04-04"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"import data.workouts.Workout;","lastModifiedDate":"2022-04-04"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":"import data.workouts.WorkoutList;","lastModifiedDate":"2022-04-04"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-04"},{"lineNumber":12,"author":{"gitId":"emilysim00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-04"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"import storage.FileManager;","lastModifiedDate":"2022-04-04"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-04-04"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"import werkit.UI;","lastModifiedDate":"2022-04-04"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-04"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-04-04"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"class DayListTest {","lastModifiedDate":"2022-04-04"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"    ExerciseList exerciseList;","lastModifiedDate":"2022-04-04"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"    WorkoutList workoutList;","lastModifiedDate":"2022-04-04"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"    PlanList planList;","lastModifiedDate":"2022-04-04"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"    DayList dayList;","lastModifiedDate":"2022-04-04"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"    FileManager fileManager;","lastModifiedDate":"2022-04-04"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"    UI ui;","lastModifiedDate":"2022-04-04"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"    //@@author emilysim00","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-04"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"    void setUp() throws InvalidWorkoutException, InvalidExerciseException, InvalidPlanException {","lastModifiedDate":"2022-04-04"},{"lineNumber":34,"author":{"gitId":"emilysim00"},"content":"        LogHandler.startLogHandler();","lastModifiedDate":"2022-04-04"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"        exerciseList \u003d new ExerciseList();","lastModifiedDate":"2022-04-04"},{"lineNumber":36,"author":{"gitId":"emilysim00"},"content":"        workoutList \u003d new WorkoutList(exerciseList);","lastModifiedDate":"2022-04-04"},{"lineNumber":37,"author":{"gitId":"emilysim00"},"content":"        planList \u003d new PlanList(workoutList);","lastModifiedDate":"2022-04-04"},{"lineNumber":38,"author":{"gitId":"emilysim00"},"content":"        dayList \u003d new DayList(planList);","lastModifiedDate":"2022-04-04"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"        ui \u003d new UI();","lastModifiedDate":"2022-04-04"},{"lineNumber":40,"author":{"gitId":"emilysim00"},"content":"        fileManager \u003d new FileManager(planList);","lastModifiedDate":"2022-04-04"},{"lineNumber":41,"author":{"gitId":"emilysim00"},"content":"        dayList \u003d new DayList(planList);","lastModifiedDate":"2022-04-04"},{"lineNumber":42,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":43,"author":{"gitId":"emilysim00"},"content":"        exerciseList.addExerciseToList(\"push up\");","lastModifiedDate":"2022-04-04"},{"lineNumber":44,"author":{"gitId":"emilysim00"},"content":"        exerciseList.addExerciseToList(\"sit up\");","lastModifiedDate":"2022-04-04"},{"lineNumber":45,"author":{"gitId":"emilysim00"},"content":"        exerciseList.addExerciseToList(\"pull up\");","lastModifiedDate":"2022-04-04"},{"lineNumber":46,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":47,"author":{"gitId":"emilysim00"},"content":"        Workout newWorkout1 \u003d workoutList.createNewWorkout(\"push up /reps 10\");","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"emilysim00"},"content":"        workoutList.addNewWorkoutToLists(newWorkout1);","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"emilysim00"},"content":"        Workout newWorkout2 \u003d workoutList.createNewWorkout(\"sit up /reps 15\");","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"emilysim00"},"content":"        workoutList.addNewWorkoutToLists(newWorkout2);","lastModifiedDate":"2022-04-09"},{"lineNumber":51,"author":{"gitId":"emilysim00"},"content":"        Workout newWorkout3 \u003d workoutList.createNewWorkout(\"pull up /reps 20\");","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"emilysim00"},"content":"        workoutList.addNewWorkoutToLists(newWorkout3);","lastModifiedDate":"2022-04-09"},{"lineNumber":53,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":54,"author":{"gitId":"emilysim00"},"content":"        Plan newPlan1 \u003d planList.createNewPlan(\"more muscles /workouts 1,2,1,2\");","lastModifiedDate":"2022-04-09"},{"lineNumber":55,"author":{"gitId":"emilysim00"},"content":"        planList.addNewPlanToLists(newPlan1);","lastModifiedDate":"2022-04-09"},{"lineNumber":56,"author":{"gitId":"emilysim00"},"content":"        Plan newPlan2 \u003d planList.createNewPlan(\"more arm muscles /workouts 1,3,1,3\");","lastModifiedDate":"2022-04-09"},{"lineNumber":57,"author":{"gitId":"emilysim00"},"content":"        planList.addNewPlanToLists(newPlan2);","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"emilysim00"},"content":"        Plan newPlan3 \u003d planList.createNewPlan(\"only core /workouts 2,2,2,2\");","lastModifiedDate":"2022-04-09"},{"lineNumber":59,"author":{"gitId":"emilysim00"},"content":"        planList.addNewPlanToLists(newPlan3);","lastModifiedDate":"2022-04-09"},{"lineNumber":60,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":61,"author":{"gitId":"emilysim00"},"content":"    //@@author","lastModifiedDate":"2022-04-09"},{"lineNumber":62,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":63,"author":{"gitId":"emilysim00"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":64,"author":{"gitId":"emilysim00"},"content":"    void updateSchedule_expectSuccess() throws InvalidScheduleException {","lastModifiedDate":"2022-04-04"},{"lineNumber":65,"author":{"gitId":"emilysim00"},"content":"        String newPlanToAddInSchedule \u003d \"1 1\";","lastModifiedDate":"2022-04-04"},{"lineNumber":66,"author":{"gitId":"emilysim00"},"content":"        Day newDaySchedule \u003d dayList.updateDay(newPlanToAddInSchedule);","lastModifiedDate":"2022-04-04"},{"lineNumber":67,"author":{"gitId":"emilysim00"},"content":"        assertEquals(newDaySchedule.getDayNumber(), 1);","lastModifiedDate":"2022-04-04"},{"lineNumber":68,"author":{"gitId":"emilysim00"},"content":"        assertEquals(newDaySchedule.getPlanForThisDay().getPlanName(), \"more muscles\");","lastModifiedDate":"2022-04-04"},{"lineNumber":69,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":70,"author":{"gitId":"emilysim00"},"content":"        String newPlanToAddInSchedule1 \u003d \"2 1\";","lastModifiedDate":"2022-04-04"},{"lineNumber":71,"author":{"gitId":"emilysim00"},"content":"        Day newDaySchedule1 \u003d dayList.updateDay(newPlanToAddInSchedule1);","lastModifiedDate":"2022-04-04"},{"lineNumber":72,"author":{"gitId":"emilysim00"},"content":"        assertEquals(newDaySchedule1.getDayNumber(), 2);","lastModifiedDate":"2022-04-04"},{"lineNumber":73,"author":{"gitId":"emilysim00"},"content":"        assertEquals(newDaySchedule1.getPlanForThisDay().getPlanName(), \"more muscles\");","lastModifiedDate":"2022-04-04"},{"lineNumber":74,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":75,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":76,"author":{"gitId":"emilysim00"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":77,"author":{"gitId":"emilysim00"},"content":"    void updateSchedule_expectSuccessPrints() throws InvalidScheduleException {","lastModifiedDate":"2022-04-10"},{"lineNumber":78,"author":{"gitId":"emilysim00"},"content":"        String newPlanToAddInSchedule \u003d \"1 1\";","lastModifiedDate":"2022-04-10"},{"lineNumber":79,"author":{"gitId":"emilysim00"},"content":"        Day newDaySchedule \u003d dayList.updateDay(newPlanToAddInSchedule);","lastModifiedDate":"2022-04-10"},{"lineNumber":80,"author":{"gitId":"emilysim00"},"content":"        assertEquals(newDaySchedule.getDayNumber(), 1);","lastModifiedDate":"2022-04-10"},{"lineNumber":81,"author":{"gitId":"emilysim00"},"content":"        assertEquals(newDaySchedule.getPlanForThisDay().getPlanName(), \"more muscles\");","lastModifiedDate":"2022-04-10"},{"lineNumber":82,"author":{"gitId":"emilysim00"},"content":"        String expectedOutput \u003d \"Alright, the following plan schedule has been created:\\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":83,"author":{"gitId":"emilysim00"},"content":"                + \"\\n\" + \"\\t\" + \"Monday -- more muscles\\n\" + \"\\n\";","lastModifiedDate":"2022-04-10"},{"lineNumber":84,"author":{"gitId":"emilysim00"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-10"},{"lineNumber":85,"author":{"gitId":"emilysim00"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-04-10"},{"lineNumber":86,"author":{"gitId":"emilysim00"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-04-10"},{"lineNumber":87,"author":{"gitId":"emilysim00"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-04-10"},{"lineNumber":88,"author":{"gitId":"emilysim00"},"content":"        ui.printNewScheduleCreatedMessage(newDaySchedule);","lastModifiedDate":"2022-04-10"},{"lineNumber":89,"author":{"gitId":"emilysim00"},"content":"        System.out.flush();","lastModifiedDate":"2022-04-10"},{"lineNumber":90,"author":{"gitId":"emilysim00"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-10"},{"lineNumber":91,"author":{"gitId":"emilysim00"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-04-10"},{"lineNumber":92,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":93,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":94,"author":{"gitId":"emilysim00"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":95,"author":{"gitId":"emilysim00"},"content":"    void updateSchedule_expectInvalidUpdate() throws InvalidScheduleException {","lastModifiedDate":"2022-04-04"},{"lineNumber":96,"author":{"gitId":"emilysim00"},"content":"        String newPlanToAddInSchedule \u003d \"9 1\";","lastModifiedDate":"2022-04-04"},{"lineNumber":97,"author":{"gitId":"emilysim00"},"content":"        assertThrows(InvalidScheduleException.class, () -\u003e dayList.updateDay(newPlanToAddInSchedule));","lastModifiedDate":"2022-04-04"},{"lineNumber":98,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":99,"author":{"gitId":"emilysim00"},"content":"        String newPlanToAddInSchedule1 \u003d \"2 5\";","lastModifiedDate":"2022-04-04"},{"lineNumber":100,"author":{"gitId":"emilysim00"},"content":"        assertThrows(InvalidScheduleException.class, () -\u003e dayList.updateDay(newPlanToAddInSchedule1));","lastModifiedDate":"2022-04-04"},{"lineNumber":101,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":102,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":103,"author":{"gitId":"emilysim00"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":104,"author":{"gitId":"emilysim00"},"content":"    void clearSchedule_expectSuccess() throws InvalidScheduleException {","lastModifiedDate":"2022-04-10"},{"lineNumber":105,"author":{"gitId":"emilysim00"},"content":"        String dayToClear \u003d \"1\";","lastModifiedDate":"2022-04-04"},{"lineNumber":106,"author":{"gitId":"emilysim00"},"content":"        Day newDaySchedule \u003d dayList.updateDay(\"1 1\");","lastModifiedDate":"2022-04-04"},{"lineNumber":107,"author":{"gitId":"emilysim00"},"content":"        assertEquals(newDaySchedule.getDayNumber(), 1);","lastModifiedDate":"2022-04-04"},{"lineNumber":108,"author":{"gitId":"emilysim00"},"content":"        assertEquals(newDaySchedule.getPlanForThisDay().getPlanName(), \"more muscles\");","lastModifiedDate":"2022-04-04"},{"lineNumber":109,"author":{"gitId":"emilysim00"},"content":"        dayList.clearDayPlan(dayToClear);","lastModifiedDate":"2022-04-04"},{"lineNumber":110,"author":{"gitId":"emilysim00"},"content":"        assertEquals(dayList.getDayList()[0], null);","lastModifiedDate":"2022-04-04"},{"lineNumber":111,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":112,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":113,"author":{"gitId":"emilysim00"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":114,"author":{"gitId":"emilysim00"},"content":"    void clearSchedule_expectInvalidClear() throws InvalidScheduleException {","lastModifiedDate":"2022-04-10"},{"lineNumber":115,"author":{"gitId":"emilysim00"},"content":"        String dayToClear \u003d \"9\";","lastModifiedDate":"2022-04-04"},{"lineNumber":116,"author":{"gitId":"emilysim00"},"content":"        assertThrows(InvalidScheduleException.class, () -\u003e dayList.clearDayPlan(dayToClear));","lastModifiedDate":"2022-04-04"},{"lineNumber":117,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":118,"author":{"gitId":"emilysim00"},"content":"        String dayToClear1 \u003d \"0\";","lastModifiedDate":"2022-04-04"},{"lineNumber":119,"author":{"gitId":"emilysim00"},"content":"        assertThrows(InvalidScheduleException.class, () -\u003e dayList.clearDayPlan(dayToClear1));","lastModifiedDate":"2022-04-04"},{"lineNumber":120,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":121,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":122,"author":{"gitId":"emilysim00"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":123,"author":{"gitId":"emilysim00"},"content":"    void clearAllSchedule_expectSuccess() throws InvalidScheduleException {","lastModifiedDate":"2022-04-04"},{"lineNumber":124,"author":{"gitId":"emilysim00"},"content":"        Day newDaySchedule \u003d dayList.updateDay(\"1 1\");","lastModifiedDate":"2022-04-04"},{"lineNumber":125,"author":{"gitId":"emilysim00"},"content":"        Day newDaySchedule2 \u003d dayList.updateDay(\"1 2\");","lastModifiedDate":"2022-04-04"},{"lineNumber":126,"author":{"gitId":"emilysim00"},"content":"        dayList.clearAllSchedule();","lastModifiedDate":"2022-04-04"},{"lineNumber":127,"author":{"gitId":"emilysim00"},"content":"        assertEquals(dayList.getDayList()[0], null);","lastModifiedDate":"2022-04-04"},{"lineNumber":128,"author":{"gitId":"emilysim00"},"content":"        assertEquals(dayList.getDayList()[1], null);","lastModifiedDate":"2022-04-04"},{"lineNumber":129,"author":{"gitId":"emilysim00"},"content":"        assertEquals(dayList.getDayList()[2], null);","lastModifiedDate":"2022-04-04"},{"lineNumber":130,"author":{"gitId":"emilysim00"},"content":"        assertEquals(dayList.getDayList()[3], null);","lastModifiedDate":"2022-04-04"},{"lineNumber":131,"author":{"gitId":"emilysim00"},"content":"        assertEquals(dayList.getDayList()[4], null);","lastModifiedDate":"2022-04-04"},{"lineNumber":132,"author":{"gitId":"emilysim00"},"content":"        assertEquals(dayList.getDayList()[5], null);","lastModifiedDate":"2022-04-04"},{"lineNumber":133,"author":{"gitId":"emilysim00"},"content":"        assertEquals(dayList.getDayList()[6], null);","lastModifiedDate":"2022-04-04"},{"lineNumber":134,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":135,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":136,"author":{"gitId":"emilysim00"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":137,"author":{"gitId":"emilysim00"},"content":"    void printSchedule_expectSuccessNoPlansAdded() {","lastModifiedDate":"2022-04-10"},{"lineNumber":138,"author":{"gitId":"emilysim00"},"content":"        String header \u003d String.format(\"%8s %7s %20s\", \"Day\", \"|\", \"Plan Name\");","lastModifiedDate":"2022-04-10"},{"lineNumber":139,"author":{"gitId":"emilysim00"},"content":"        String info \u003d \"\";","lastModifiedDate":"2022-04-10"},{"lineNumber":140,"author":{"gitId":"emilysim00"},"content":"        for (int i \u003d 1; i \u003c\u003d 7; i++) {","lastModifiedDate":"2022-04-10"},{"lineNumber":141,"author":{"gitId":"emilysim00"},"content":"            info +\u003d String.format(\"%12s %3s %35s\", dayList.covertDayNumberToDay(i), \"|\",","lastModifiedDate":"2022-04-10"},{"lineNumber":142,"author":{"gitId":"emilysim00"},"content":"                    dayList.padWithSpaces(\"rest day\") + \"\\n\");","lastModifiedDate":"2022-04-10"},{"lineNumber":143,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-04-10"},{"lineNumber":144,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":145,"author":{"gitId":"emilysim00"},"content":"        String expectedOutput \u003d \"\\n                         WORKOUT SCHEDULE\\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":146,"author":{"gitId":"emilysim00"},"content":"                + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":147,"author":{"gitId":"emilysim00"},"content":"                + header + \"\\n\" +  \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":148,"author":{"gitId":"emilysim00"},"content":"                + info;","lastModifiedDate":"2022-04-10"},{"lineNumber":149,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":150,"author":{"gitId":"emilysim00"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-10"},{"lineNumber":151,"author":{"gitId":"emilysim00"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-04-10"},{"lineNumber":152,"author":{"gitId":"emilysim00"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-04-10"},{"lineNumber":153,"author":{"gitId":"emilysim00"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-04-10"},{"lineNumber":154,"author":{"gitId":"emilysim00"},"content":"        dayList.printSchedule();","lastModifiedDate":"2022-04-10"},{"lineNumber":155,"author":{"gitId":"emilysim00"},"content":"        System.out.flush();","lastModifiedDate":"2022-04-10"},{"lineNumber":156,"author":{"gitId":"emilysim00"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-04-10"},{"lineNumber":157,"author":{"gitId":"emilysim00"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-04-10"},{"lineNumber":158,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":159,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":160,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-04-04"}],"authorContributionMap":{"emilysim00":159,"Musfirahe0556596":1}},{"path":"src/test/java/data/workouts/WorkoutListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"package data.workouts;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"import data.exercises.InvalidExerciseException;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"TianaiYan"},"content":"import data.plans.InvalidPlanException;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"TianaiYan"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"TianaiYan"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"emilysim00"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"class WorkoutListTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"    ExerciseList exerciseList;","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"    WorkoutList wl;","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"    void setUp() {","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"        LogHandler.startLogHandler();","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"        exerciseList \u003d new ExerciseList();","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"        wl \u003d new WorkoutList(exerciseList);","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"        exerciseList.addExerciseToList(\"push up\");","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"        exerciseList.addExerciseToList(\"pull up\");","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"        exerciseList.addExerciseToList(\"sit up\");","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"        exerciseList.addExerciseToList(\"hip thrust\");","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"emilysim00"},"content":"        exerciseList.addExerciseToList(\"burpee\");","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"        exerciseList.addExerciseToList(\"lunge\");","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"emilysim00"},"content":"        exerciseList.addExerciseToList(\"crunch\");","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"emilysim00"},"content":"        exerciseList.addExerciseToList(\"russian twist\");","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"emilysim00"},"content":"        exerciseList.addExerciseToList(\"jumping jack\");","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"    void createAndAddWorkout_normalCreation_expectSuccess() throws InvalidExerciseException,","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"            InvalidWorkoutException {","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"        String newWorkout1 \u003d \"russian twist /reps 1000\";","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"        Workout outputWorkout1 \u003d wl.createNewWorkout(newWorkout1);","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(outputWorkout1);","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"        assertEquals(outputWorkout1.getExerciseName(), \"russian twist\");","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"        assertEquals(outputWorkout1.getRepetitions(), 1000);","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(wl.checkForExistingWorkout(\"russian twist\", 1000));","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"        String newWorkout2 \u003d \"crunch /reps 2359\";","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"        Workout outputWorkout2 \u003d wl.createNewWorkout(newWorkout2);","lastModifiedDate":"2022-04-09"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(outputWorkout2);","lastModifiedDate":"2022-04-09"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"        assertEquals(outputWorkout2.getExerciseName(), \"crunch\");","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"        assertEquals(outputWorkout2.getRepetitions(), 2359);","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(wl.checkForExistingWorkout(\"crunch\", 2359));","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"        String newWorkout3 \u003d \"lunge /reps 2147483647\";","lastModifiedDate":"2022-04-09"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"        Workout outputWorkout3 \u003d wl.createNewWorkout(newWorkout3);","lastModifiedDate":"2022-04-09"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(outputWorkout3);","lastModifiedDate":"2022-04-09"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"        assertEquals(outputWorkout3.getExerciseName(), \"lunge\");","lastModifiedDate":"2022-04-09"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"        assertEquals(outputWorkout3.getRepetitions(), 2147483647);","lastModifiedDate":"2022-04-09"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"    void createAndAddWorkout_invalidExerciseName_expectInvalidExcerciseException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"        String invalidWorkout \u003d \"weeeeeee /reps 500\";","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"        assertThrows(InvalidExerciseException.class, () -\u003e wl.createNewWorkout(invalidWorkout));","lastModifiedDate":"2022-04-09"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"    void createAndAddWorkout_invalidRepCount_expectInvalidWorkoutException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"        String invalidWorkout1 \u003d \"push up /reps -12345\";","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"        assertThrows(InvalidWorkoutException.class, () -\u003e wl.createNewWorkout(invalidWorkout1));","lastModifiedDate":"2022-04-09"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"        String invalidWorkout2 \u003d \"sit up /reps 0\";","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"alanlowzies"},"content":"        assertThrows(InvalidWorkoutException.class, () -\u003e wl.createNewWorkout(invalidWorkout2));","lastModifiedDate":"2022-04-09"},{"lineNumber":78,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":79,"author":{"gitId":"alanlowzies"},"content":"        String invalidWorkout3 \u003d \"russian twist /reps 2147483648\";","lastModifiedDate":"2022-04-09"},{"lineNumber":80,"author":{"gitId":"alanlowzies"},"content":"        assertThrows(NumberFormatException.class, () -\u003e wl.createNewWorkout(invalidWorkout3));","lastModifiedDate":"2022-04-09"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"    void createAndAddWorkout_addExistingWorkout_expectInvalidWorkoutException() throws InvalidExerciseException,","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"            InvalidWorkoutException {","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"        String workout \u003d \"burpee /reps 100\";","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout \u003d wl.createNewWorkout(workout);","lastModifiedDate":"2022-04-09"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(newWorkout);","lastModifiedDate":"2022-04-09"},{"lineNumber":89,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"alanlowzies"},"content":"        assertThrows(InvalidWorkoutException.class, () -\u003e wl.createNewWorkout(workout));","lastModifiedDate":"2022-04-09"},{"lineNumber":91,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"emilysim00"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"emilysim00"},"content":"    void listWorkout_expectNoPrints() {","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"emilysim00"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"emilysim00"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"emilysim00"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"emilysim00"},"content":"        wl.listAllWorkout();","lastModifiedDate":"2022-04-01"},{"lineNumber":99,"author":{"gitId":"emilysim00"},"content":"        System.out.flush();","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"emilysim00"},"content":"        String expectedOutput \u003d \"The workout list is empty\";","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"emilysim00"},"content":"        assertEquals(expectedOutput, consoleOutput.toString().trim());","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"emilysim00"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"emilysim00"},"content":"    void listWorkout_expectThreePrints() throws InvalidWorkoutException, InvalidExerciseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout1 \u003d wl.createNewWorkout(\"push up /reps 11\");","lastModifiedDate":"2022-04-09"},{"lineNumber":107,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(newWorkout1);","lastModifiedDate":"2022-04-09"},{"lineNumber":108,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout2 \u003d wl.createNewWorkout(\"sit up /reps 15\");","lastModifiedDate":"2022-04-09"},{"lineNumber":109,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(newWorkout2);","lastModifiedDate":"2022-04-09"},{"lineNumber":110,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout3 \u003d wl.createNewWorkout(\"lunge /reps 10\");","lastModifiedDate":"2022-04-09"},{"lineNumber":111,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(newWorkout3);","lastModifiedDate":"2022-04-09"},{"lineNumber":112,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":113,"author":{"gitId":"emilysim00"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"emilysim00"},"content":"                \"Showing workouts 1-3 of 3:\\n\"","lastModifiedDate":"2022-03-11"},{"lineNumber":115,"author":{"gitId":"emilysim00"},"content":"                        + \"1. push up (11 reps)\\n\"","lastModifiedDate":"2022-03-11"},{"lineNumber":116,"author":{"gitId":"emilysim00"},"content":"                        + \"2. sit up (15 reps)\\n\"","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"emilysim00"},"content":"                        + \"3. lunge (10 reps)\\n\"","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"emilysim00"},"content":"                        + \"Showed all workouts in list\\n\";","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"emilysim00"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"emilysim00"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"emilysim00"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-03-11"},{"lineNumber":122,"author":{"gitId":"emilysim00"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"emilysim00"},"content":"        wl.listAllWorkout();","lastModifiedDate":"2022-04-01"},{"lineNumber":124,"author":{"gitId":"emilysim00"},"content":"        System.out.flush();","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"emilysim00"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"emilysim00"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-03-11"},{"lineNumber":127,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":128,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":129,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":130,"author":{"gitId":"Musfirahe0556596"},"content":"    void deleteWorkout_validIndexToDelete_expectDeleteWorkout() throws","lastModifiedDate":"2022-03-11"},{"lineNumber":131,"author":{"gitId":"TianaiYan"},"content":"            InvalidWorkoutException, InvalidExerciseException, InvalidPlanException {","lastModifiedDate":"2022-03-31"},{"lineNumber":132,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":133,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout1 \u003d wl.createNewWorkout(\"push up /reps 11\");","lastModifiedDate":"2022-04-09"},{"lineNumber":134,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(newWorkout1);","lastModifiedDate":"2022-04-09"},{"lineNumber":135,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout2 \u003d wl.createNewWorkout(\"sit up /reps 15\");","lastModifiedDate":"2022-04-09"},{"lineNumber":136,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(newWorkout2);","lastModifiedDate":"2022-04-09"},{"lineNumber":137,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout3 \u003d wl.createNewWorkout(\"lunge /reps 10\");","lastModifiedDate":"2022-04-09"},{"lineNumber":138,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(newWorkout3);","lastModifiedDate":"2022-04-09"},{"lineNumber":139,"author":{"gitId":"TianaiYan"},"content":"        PlanList planList \u003d new PlanList(wl);","lastModifiedDate":"2022-03-31"},{"lineNumber":140,"author":{"gitId":"TianaiYan"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2022-03-31"},{"lineNumber":141,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":142,"author":{"gitId":"Musfirahe0556596"},"content":"        int workoutNumberToDeleteInList \u003d 2;","lastModifiedDate":"2022-03-11"},{"lineNumber":143,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":144,"author":{"gitId":"alanlowzies"},"content":"        assertEquals(\"sit up (15 reps)\", wl.getWorkoutsDisplayList().get(workoutNumberToDeleteInList - 1).toString());","lastModifiedDate":"2022-03-17"},{"lineNumber":145,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":146,"author":{"gitId":"Musfirahe0556596"},"content":"        wl.deleteWorkout(Integer.toString(workoutNumberToDeleteInList));","lastModifiedDate":"2022-04-02"},{"lineNumber":147,"author":{"gitId":"alanlowzies"},"content":"        assertEquals(\"lunge (10 reps)\", wl.getWorkoutsDisplayList().get(workoutNumberToDeleteInList - 1).toString());","lastModifiedDate":"2022-03-17"},{"lineNumber":148,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":149,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":150,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":151,"author":{"gitId":"TianaiYan"},"content":"    void deleteWorkout_indexOutOfRange_expectInvalidWorkoutException() throws InvalidWorkoutException,","lastModifiedDate":"2022-03-29"},{"lineNumber":152,"author":{"gitId":"Musfirahe0556596"},"content":"            InvalidExerciseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":153,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":154,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout1 \u003d wl.createNewWorkout(\"push up /reps 11\");","lastModifiedDate":"2022-04-09"},{"lineNumber":155,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(newWorkout1);","lastModifiedDate":"2022-04-09"},{"lineNumber":156,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout2 \u003d wl.createNewWorkout(\"sit up /reps 15\");","lastModifiedDate":"2022-04-09"},{"lineNumber":157,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(newWorkout2);","lastModifiedDate":"2022-04-09"},{"lineNumber":158,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout3 \u003d wl.createNewWorkout(\"lunge /reps 10\");","lastModifiedDate":"2022-04-09"},{"lineNumber":159,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(newWorkout3);","lastModifiedDate":"2022-04-09"},{"lineNumber":160,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":161,"author":{"gitId":"TianaiYan"},"content":"        PlanList planList \u003d new PlanList(wl);","lastModifiedDate":"2022-03-31"},{"lineNumber":162,"author":{"gitId":"TianaiYan"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2022-03-31"},{"lineNumber":163,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":164,"author":{"gitId":"Musfirahe0556596"},"content":"        int workoutNumberToDeleteInList \u003d 5;","lastModifiedDate":"2022-03-11"},{"lineNumber":165,"author":{"gitId":"TianaiYan"},"content":"        assertThrows(InvalidWorkoutException.class,","lastModifiedDate":"2022-03-26"},{"lineNumber":166,"author":{"gitId":"Musfirahe0556596"},"content":"            () -\u003e wl.deleteWorkout(Integer.toString(workoutNumberToDeleteInList)));","lastModifiedDate":"2022-04-02"},{"lineNumber":167,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":168,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":169,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":170,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":171,"author":{"gitId":"Musfirahe0556596"},"content":"    void deleteWorkout_invalidParseArgumentInput_expectNumberFormatException() throws InvalidWorkoutException,","lastModifiedDate":"2022-03-11"},{"lineNumber":172,"author":{"gitId":"Musfirahe0556596"},"content":"            InvalidExerciseException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2022-03-13"},{"lineNumber":173,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":174,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout1 \u003d wl.createNewWorkout(\"push up /reps 11\");","lastModifiedDate":"2022-04-09"},{"lineNumber":175,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(newWorkout1);","lastModifiedDate":"2022-04-09"},{"lineNumber":176,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout2 \u003d wl.createNewWorkout(\"sit up /reps 15\");","lastModifiedDate":"2022-04-09"},{"lineNumber":177,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(newWorkout2);","lastModifiedDate":"2022-04-09"},{"lineNumber":178,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout3 \u003d wl.createNewWorkout(\"lunge /reps 10\");","lastModifiedDate":"2022-04-09"},{"lineNumber":179,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(newWorkout3);","lastModifiedDate":"2022-04-09"},{"lineNumber":180,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":181,"author":{"gitId":"TianaiYan"},"content":"        PlanList planList \u003d new PlanList(wl);","lastModifiedDate":"2022-03-31"},{"lineNumber":182,"author":{"gitId":"TianaiYan"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2022-03-31"},{"lineNumber":183,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":184,"author":{"gitId":"Musfirahe0556596"},"content":"        String invalidArgumentSupplied \u003d \"t5\";","lastModifiedDate":"2022-03-11"},{"lineNumber":185,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(NumberFormatException.class,","lastModifiedDate":"2022-03-11"},{"lineNumber":186,"author":{"gitId":"Musfirahe0556596"},"content":"            () -\u003e wl.deleteWorkout(invalidArgumentSupplied));","lastModifiedDate":"2022-04-02"},{"lineNumber":187,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":188,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":189,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":190,"author":{"gitId":"TianaiYan"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":191,"author":{"gitId":"TianaiYan"},"content":"    void updateWorkout_validInputArgument_expectSuccessUpdate() throws InvalidWorkoutException,","lastModifiedDate":"2022-03-14"},{"lineNumber":192,"author":{"gitId":"TianaiYan"},"content":"            InvalidExerciseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":193,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout1 \u003d wl.createNewWorkout(\"push up /reps 11\");","lastModifiedDate":"2022-04-09"},{"lineNumber":194,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(newWorkout1);","lastModifiedDate":"2022-04-09"},{"lineNumber":195,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout2 \u003d wl.createNewWorkout(\"sit up /reps 15\");","lastModifiedDate":"2022-04-09"},{"lineNumber":196,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(newWorkout2);","lastModifiedDate":"2022-04-09"},{"lineNumber":197,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout3 \u003d wl.createNewWorkout(\"lunge /reps 10\");","lastModifiedDate":"2022-04-09"},{"lineNumber":198,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(newWorkout3);","lastModifiedDate":"2022-04-09"},{"lineNumber":199,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":200,"author":{"gitId":"TianaiYan"},"content":"        int indexToUpdate \u003d 3;","lastModifiedDate":"2022-03-14"},{"lineNumber":201,"author":{"gitId":"TianaiYan"},"content":"        int newReps \u003d 15;","lastModifiedDate":"2022-03-14"},{"lineNumber":202,"author":{"gitId":"TianaiYan"},"content":"        String updateArgument \u003d Integer.toString(indexToUpdate) + \" \" + Integer.toString(newReps);","lastModifiedDate":"2022-03-14"},{"lineNumber":203,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":204,"author":{"gitId":"alanlowzies"},"content":"        String workoutDetails \u003d wl.getWorkoutsDisplayList().get(indexToUpdate - 1).toString();","lastModifiedDate":"2022-03-17"},{"lineNumber":205,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":206,"author":{"gitId":"TianaiYan"},"content":"        assertEquals(\"lunge (10 reps)\", workoutDetails);","lastModifiedDate":"2022-03-14"},{"lineNumber":207,"author":{"gitId":"TianaiYan"},"content":"        wl.updateWorkout(updateArgument);","lastModifiedDate":"2022-03-14"},{"lineNumber":208,"author":{"gitId":"alanlowzies"},"content":"        workoutDetails \u003d wl.getWorkoutsDisplayList().get(indexToUpdate - 1).toString();","lastModifiedDate":"2022-03-17"},{"lineNumber":209,"author":{"gitId":"TianaiYan"},"content":"        assertEquals(\"lunge (15 reps)\", workoutDetails);","lastModifiedDate":"2022-03-14"},{"lineNumber":210,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":211,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":212,"author":{"gitId":"TianaiYan"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":213,"author":{"gitId":"TianaiYan"},"content":"    void updateWorkout_InvalidNumberFormat_expectNumberFormatException() throws InvalidWorkoutException,","lastModifiedDate":"2022-03-14"},{"lineNumber":214,"author":{"gitId":"TianaiYan"},"content":"            InvalidExerciseException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2022-03-14"},{"lineNumber":215,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout1 \u003d wl.createNewWorkout(\"push up /reps 11\");","lastModifiedDate":"2022-04-09"},{"lineNumber":216,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(newWorkout1);","lastModifiedDate":"2022-04-09"},{"lineNumber":217,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout2 \u003d wl.createNewWorkout(\"sit up /reps 15\");","lastModifiedDate":"2022-04-09"},{"lineNumber":218,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(newWorkout2);","lastModifiedDate":"2022-04-09"},{"lineNumber":219,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout3 \u003d wl.createNewWorkout(\"lunge /reps 10\");","lastModifiedDate":"2022-04-09"},{"lineNumber":220,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(newWorkout3);","lastModifiedDate":"2022-04-09"},{"lineNumber":221,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":222,"author":{"gitId":"TianaiYan"},"content":"        String indexToUpdate \u003d \"a\";","lastModifiedDate":"2022-03-14"},{"lineNumber":223,"author":{"gitId":"TianaiYan"},"content":"        int newReps \u003d 15;","lastModifiedDate":"2022-03-14"},{"lineNumber":224,"author":{"gitId":"TianaiYan"},"content":"        String updateArgument \u003d indexToUpdate + \" \" + Integer.toString(newReps);","lastModifiedDate":"2022-03-14"},{"lineNumber":225,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":226,"author":{"gitId":"TianaiYan"},"content":"        assertThrows(NumberFormatException.class,","lastModifiedDate":"2022-03-14"},{"lineNumber":227,"author":{"gitId":"TianaiYan"},"content":"            () -\u003e wl.updateWorkout(updateArgument));","lastModifiedDate":"2022-03-14"},{"lineNumber":228,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":229,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":230,"author":{"gitId":"TianaiYan"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":231,"author":{"gitId":"TianaiYan"},"content":"    void updateWorkout_workoutIndexOutOfRange_expectInvalidWorkoutException() throws InvalidWorkoutException,","lastModifiedDate":"2022-03-26"},{"lineNumber":232,"author":{"gitId":"TianaiYan"},"content":"            InvalidExerciseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":233,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout1 \u003d wl.createNewWorkout(\"push up /reps 11\");","lastModifiedDate":"2022-04-09"},{"lineNumber":234,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(newWorkout1);","lastModifiedDate":"2022-04-09"},{"lineNumber":235,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout2 \u003d wl.createNewWorkout(\"sit up /reps 15\");","lastModifiedDate":"2022-04-09"},{"lineNumber":236,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(newWorkout2);","lastModifiedDate":"2022-04-09"},{"lineNumber":237,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout3 \u003d wl.createNewWorkout(\"lunge /reps 10\");","lastModifiedDate":"2022-04-09"},{"lineNumber":238,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(newWorkout3);","lastModifiedDate":"2022-04-09"},{"lineNumber":239,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":240,"author":{"gitId":"TianaiYan"},"content":"        String indexToUpdate \u003d \"4\";","lastModifiedDate":"2022-03-14"},{"lineNumber":241,"author":{"gitId":"TianaiYan"},"content":"        int newReps \u003d 15;","lastModifiedDate":"2022-03-14"},{"lineNumber":242,"author":{"gitId":"TianaiYan"},"content":"        String updateArgument \u003d indexToUpdate + \" \" + Integer.toString(newReps);","lastModifiedDate":"2022-03-14"},{"lineNumber":243,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":244,"author":{"gitId":"TianaiYan"},"content":"        assertThrows(InvalidWorkoutException.class,","lastModifiedDate":"2022-03-26"},{"lineNumber":245,"author":{"gitId":"TianaiYan"},"content":"            () -\u003e wl.updateWorkout(updateArgument));","lastModifiedDate":"2022-03-14"},{"lineNumber":246,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":247,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":248,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":249,"author":{"gitId":"TianaiYan"},"content":"    void updateWorkout_workoutToUpdateHasExisted_expectInvalidWorkoutException() throws InvalidWorkoutException,","lastModifiedDate":"2022-03-15"},{"lineNumber":250,"author":{"gitId":"TianaiYan"},"content":"            InvalidExerciseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":251,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout1 \u003d wl.createNewWorkout(\"pull up /reps 15\");","lastModifiedDate":"2022-04-09"},{"lineNumber":252,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(newWorkout1);","lastModifiedDate":"2022-04-09"},{"lineNumber":253,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout2 \u003d wl.createNewWorkout(\"sit up /reps 15\");","lastModifiedDate":"2022-04-09"},{"lineNumber":254,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(newWorkout2);","lastModifiedDate":"2022-04-09"},{"lineNumber":255,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout3 \u003d wl.createNewWorkout(\"pull up /reps 10\");","lastModifiedDate":"2022-04-09"},{"lineNumber":256,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(newWorkout3);","lastModifiedDate":"2022-04-09"},{"lineNumber":257,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":258,"author":{"gitId":"TianaiYan"},"content":"        String indexToUpdate \u003d \"3\";","lastModifiedDate":"2022-03-15"},{"lineNumber":259,"author":{"gitId":"TianaiYan"},"content":"        int newReps \u003d 15;","lastModifiedDate":"2022-03-15"},{"lineNumber":260,"author":{"gitId":"TianaiYan"},"content":"        String updateArgument \u003d indexToUpdate + \" \" + Integer.toString(newReps);","lastModifiedDate":"2022-03-15"},{"lineNumber":261,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":262,"author":{"gitId":"TianaiYan"},"content":"        assertThrows(InvalidWorkoutException.class,","lastModifiedDate":"2022-03-15"},{"lineNumber":263,"author":{"gitId":"TianaiYan"},"content":"            () -\u003e wl.updateWorkout(updateArgument));","lastModifiedDate":"2022-03-15"},{"lineNumber":264,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":265,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":266,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":267,"author":{"gitId":"TianaiYan"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":268,"author":{"gitId":"alanlowzies"},"content":"    void checkForExistingWorkout_uniqueNewWorkout_expectFalse() throws InvalidWorkoutException,","lastModifiedDate":"2022-03-14"},{"lineNumber":269,"author":{"gitId":"alanlowzies"},"content":"            InvalidExerciseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":270,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout \u003d wl.createNewWorkout(\"russian twist /reps 1000\");","lastModifiedDate":"2022-04-09"},{"lineNumber":271,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(newWorkout);","lastModifiedDate":"2022-04-09"},{"lineNumber":272,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":273,"author":{"gitId":"alanlowzies"},"content":"        String newWorkoutExerciseName1 \u003d \"running\";","lastModifiedDate":"2022-03-14"},{"lineNumber":274,"author":{"gitId":"alanlowzies"},"content":"        int newWorkoutRepsCount1 \u003d 1000;","lastModifiedDate":"2022-03-14"},{"lineNumber":275,"author":{"gitId":"alanlowzies"},"content":"        String newWorkoutExerciseName2 \u003d \"russian twist\";","lastModifiedDate":"2022-03-14"},{"lineNumber":276,"author":{"gitId":"alanlowzies"},"content":"        int newWorkoutRepsCount2 \u003d 999;","lastModifiedDate":"2022-03-14"},{"lineNumber":277,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":278,"author":{"gitId":"alanlowzies"},"content":"        assertEquals(false, wl.checkForExistingWorkout(newWorkoutExerciseName1, newWorkoutRepsCount1));","lastModifiedDate":"2022-03-14"},{"lineNumber":279,"author":{"gitId":"alanlowzies"},"content":"        assertEquals(false, wl.checkForExistingWorkout(newWorkoutExerciseName2, newWorkoutRepsCount2));","lastModifiedDate":"2022-03-14"},{"lineNumber":280,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":281,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":282,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":283,"author":{"gitId":"alanlowzies"},"content":"    void checkForExistingWorkout_nonUniqueNewWorkout_expectTrue()","lastModifiedDate":"2022-03-14"},{"lineNumber":284,"author":{"gitId":"alanlowzies"},"content":"            throws InvalidWorkoutException, InvalidExerciseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":285,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout \u003d wl.createNewWorkout(\"russian twist /reps 1000\");","lastModifiedDate":"2022-04-09"},{"lineNumber":286,"author":{"gitId":"alanlowzies"},"content":"        wl.addNewWorkoutToLists(newWorkout);","lastModifiedDate":"2022-04-09"},{"lineNumber":287,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":288,"author":{"gitId":"alanlowzies"},"content":"        String newWorkoutExerciseName \u003d \"russian twist\";","lastModifiedDate":"2022-03-14"},{"lineNumber":289,"author":{"gitId":"alanlowzies"},"content":"        int newWorkoutRepsCount \u003d 1000;","lastModifiedDate":"2022-03-14"},{"lineNumber":290,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":291,"author":{"gitId":"alanlowzies"},"content":"        assertEquals(true, wl.checkForExistingWorkout(newWorkoutExerciseName, newWorkoutRepsCount));","lastModifiedDate":"2022-03-14"},{"lineNumber":292,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":293,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"emilysim00":57,"Musfirahe0556596":30,"alanlowzies":140,"TianaiYan":66}},{"path":"src/test/java/storage/FileManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"import data.workouts.Workout;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"import data.plans.Plan;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"import data.workouts.WorkoutList;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"public class FileManagerTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"    ExerciseList el;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"    WorkoutList wl;","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"    PlanList pl;","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"        LogHandler.startLogHandler();","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"        el \u003d new ExerciseList();","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"        wl \u003d new WorkoutList(el);","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"        pl \u003d new PlanList(wl);","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"    public void convertWorkoutToFileDataFormat_normalWorkoutInput_conversionSuccess() {","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"        Workout testWorkoutSample1 \u003d new Workout(\"push up\", 1);","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"        Workout testWorkoutSample2 \u003d new Workout(\"russian twist\", 1000);","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"        Workout testWorkoutSample3 \u003d new Workout(\"swimming\", 20);","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"        String expectedOutput1 \u003d \"push up | 1\";","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"        String expectedOutput2 \u003d \"russian twist | 1000\";","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"        String expectedOutput3 \u003d \"swimming | 20\";","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"        FileManager fm \u003d new FileManager(pl);","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"a1021492980"},"content":"        assertEquals(expectedOutput1, fm.convertWorkoutToFileDataFormat(testWorkoutSample1));","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"a1021492980"},"content":"        assertEquals(expectedOutput2, fm.convertWorkoutToFileDataFormat(testWorkoutSample2));","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"a1021492980"},"content":"        assertEquals(expectedOutput3, fm.convertWorkoutToFileDataFormat(testWorkoutSample3));","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"a1021492980"},"content":"    public void convertPlanToFileDataFormat_normalPlanInput_conversionSuccess() {","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"a1021492980"},"content":"        Workout testWorkoutSample1 \u003d new Workout(\"push up\", 1);","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"a1021492980"},"content":"        Workout testWorkoutSample2 \u003d new Workout(\"russian twist\", 1000);","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"a1021492980"},"content":"        Workout testWorkoutSample3 \u003d new Workout(\"swimming\", 20);","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"a1021492980"},"content":"        var listOfWorkouts1 \u003d new ArrayList\u003cWorkout\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"a1021492980"},"content":"        listOfWorkouts1.add(testWorkoutSample1);","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"a1021492980"},"content":"        listOfWorkouts1.add(testWorkoutSample2);","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"a1021492980"},"content":"        listOfWorkouts1.add(testWorkoutSample3);","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"a1021492980"},"content":"        var listOfWorkouts2 \u003d new ArrayList\u003cWorkout\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"a1021492980"},"content":"        listOfWorkouts2.add(testWorkoutSample1);","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"a1021492980"},"content":"        listOfWorkouts2.add(testWorkoutSample3);","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"a1021492980"},"content":"        Plan testPlanSample1 \u003d new Plan(\"coolMan\", listOfWorkouts1);","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"a1021492980"},"content":"        Plan testPlanSample2 \u003d new Plan(\"hotMan\", listOfWorkouts2);","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"a1021492980"},"content":"        String expectedOutput1 \u003d \"coolman | push up | 1,russian twist | 1000,swimming | 20\";","lastModifiedDate":"2022-04-05"},{"lineNumber":61,"author":{"gitId":"a1021492980"},"content":"        String expectedOutput2 \u003d \"hotman | push up | 1,swimming | 20\";","lastModifiedDate":"2022-04-05"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"        FileManager fm \u003d new FileManager(pl);","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"a1021492980"},"content":"        assertEquals(expectedOutput1, fm.convertPlanToFileDataFormat(testPlanSample1));","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"a1021492980"},"content":"        assertEquals(expectedOutput2, fm.convertPlanToFileDataFormat(testPlanSample2));","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"    public void convertWorkoutToFileDataFormat_nullWorkoutInput_exceptionThrown() {","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"a1021492980"},"content":"        Workout testWorkoutSample1 \u003d null;","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"        FileManager fm \u003d new FileManager(pl);","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"a1021492980"},"content":"        assertThrows(NullPointerException.class,","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"a1021492980"},"content":"            () -\u003e fm.convertWorkoutToFileDataFormat(testWorkoutSample1));","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"a1021492980"},"content":"    public void convertPlanToFileDataFormat_nullPlanInput_exceptionThrown() {","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"a1021492980"},"content":"        Plan testPlanSample1 \u003d null;","lastModifiedDate":"2022-03-21"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"        FileManager fm \u003d new FileManager(pl);","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"        assertThrows(NullPointerException.class,","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"a1021492980"},"content":"            () -\u003e fm.convertPlanToFileDataFormat(testPlanSample1));","lastModifiedDate":"2022-03-21"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"alanlowzies":46,"a1021492980":41}},{"path":"src/test/java/werkit/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"package werkit;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"import commands.InvalidCommandException;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"import commands.WorkoutCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"import commands.SearchCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"import commands.ExitCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"import commands.HelpCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"import commands.ExerciseCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"import commands.PlanCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"import commands.ScheduleCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"import data.schedule.DayList;","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"import data.workouts.WorkoutList;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"import storage.FileManager;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"class ParserTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"    private UI ui;","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"    private ExerciseList exerciseList;","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"    private WorkoutList workoutList;","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"    private FileManager fileManager;","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"    private Parser parser;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"    private PlanList planList;","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"    private DayList dayList;","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"    void setUp() {","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"        LogHandler.startLogHandler();","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"emilysim00"},"content":"        this.parser \u003d new Parser(ui, exerciseList, workoutList, fileManager, planList, dayList);","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"    void parseUserInput_validWorkoutCommand_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"        String workoutCommand1 \u003d \"workout /new russian twist /reps 1000\";","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"        String workoutCommand2 \u003d \"workout /list\";","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"        String workoutCommand3 \u003d \"workout /delete 1\";","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(workoutCommand1) instanceof WorkoutCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(workoutCommand2) instanceof WorkoutCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(workoutCommand3) instanceof WorkoutCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"    void parseUserInput_validHelpCommand_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"Musfirahe0556596"},"content":"        assertTrue(parser.parseUserInput(\"help\") instanceof HelpCommand);","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"    void parseUserInput_validExitCommand_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"Musfirahe0556596"},"content":"        assertTrue(parser.parseUserInput(\"exit\") instanceof ExitCommand);","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"    void parseUserInput_validExerciseCommand_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"        String exerciseCommand \u003d \"exercise /list\";","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(exerciseCommand) instanceof ExerciseCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"    void parseUserInput_validSearchCommand_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"        String searchCommand1 \u003d \"search /exercise up\";","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(searchCommand1) instanceof SearchCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"        String searchCommand2 \u003d \"search /workout 1000\";","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(searchCommand2) instanceof SearchCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"        String searchCommand3 \u003d \"search /plan biceps\";","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(searchCommand3) instanceof SearchCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"alanlowzies"},"content":"        String searchCommand4 \u003d \"search /all weeee\";","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(searchCommand4) instanceof SearchCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"alanlowzies"},"content":"    void parseUserInput_validPlanCommand_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"        String planCommand1 \u003d \"plan /new plan 1 /workouts 1, 2, 3, 4\";","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(planCommand1) instanceof PlanCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"        String planCommand2 \u003d \"plan /list\";","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(planCommand2) instanceof PlanCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"alanlowzies"},"content":"        String planCommand3 \u003d \"plan /details 1\";","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(planCommand3) instanceof PlanCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"alanlowzies"},"content":"        String planCommand4 \u003d \"plan /delete 1\";","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(planCommand4) instanceof PlanCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"alanlowzies"},"content":"    void parseUserInput_validScheduleCommand_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"alanlowzies"},"content":"        String scheduleCommand1 \u003d \"schedule /update 1 2\";","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(scheduleCommand1) instanceof ScheduleCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"alanlowzies"},"content":"        String scheduleCommand2 \u003d \"schedule /list\";","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(scheduleCommand2) instanceof ScheduleCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"alanlowzies"},"content":"        String scheduleCommand3 \u003d \"schedule /clear 1\";","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(scheduleCommand3) instanceof ScheduleCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"alanlowzies"},"content":"        String scheduleCommand4 \u003d \"schedule /clearall\";","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(scheduleCommand4) instanceof ScheduleCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"Musfirahe0556596"},"content":"    void parseUserInput_invalidGeneralCommand_exceptionThrown() {","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.parseUserInput(\"exitt\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.parseUserInput(\"helpp\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.parseUserInput(\"\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.parseUserInput(\"|\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.parseUserInput(\"workout /new | push up /reps 20\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"Musfirahe0556596"},"content":"    //Workout tests","lastModifiedDate":"2022-03-20"},{"lineNumber":122,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"alanlowzies"},"content":"    void createWorkoutCommand_validWorkoutCommand_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"Musfirahe0556596"},"content":"        assertTrue(parser.createWorkoutCommand(\"workout /new push up /reps 20\") instanceof WorkoutCommand);","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"Musfirahe0556596"},"content":"        assertTrue(parser.createWorkoutCommand(\"workout /update 1 15\") instanceof WorkoutCommand);","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"Musfirahe0556596"},"content":"        assertTrue(parser.createWorkoutCommand(\"workout /delete 1\") instanceof WorkoutCommand);","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"Musfirahe0556596"},"content":"        assertTrue(parser.createWorkoutCommand(\"workout /list\") instanceof WorkoutCommand);","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"Musfirahe0556596"},"content":"    void createWorkoutCommand_invalidWorkoutCommand_exceptionThrown() {","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createWorkoutCommand(\"workout /new\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createWorkoutCommand(\"workout /list extra\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":134,"author":{"gitId":"alanlowzies"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createWorkoutCommand(\"workout /listall hmm?\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createWorkoutCommand(\"workout /delete\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createWorkoutCommand(\"workout /update\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createWorkoutCommand(\"workout /test\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(ArrayIndexOutOfBoundsException.class, () -\u003e parser.createWorkoutCommand(\"workout\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":140,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":141,"author":{"gitId":"a1021492980"},"content":"    //Search tests","lastModifiedDate":"2022-03-21"},{"lineNumber":142,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":143,"author":{"gitId":"alanlowzies"},"content":"    void createSearchCommand_validSearchCommand_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":144,"author":{"gitId":"a1021492980"},"content":"        assertTrue(parser.createSearchCommand(\"search /exercise up\") instanceof SearchCommand);","lastModifiedDate":"2022-03-21"},{"lineNumber":145,"author":{"gitId":"a1021492980"},"content":"        assertTrue(parser.createSearchCommand(\"search /exercise asdaskd\") instanceof SearchCommand);","lastModifiedDate":"2022-03-21"},{"lineNumber":146,"author":{"gitId":"a1021492980"},"content":"        assertTrue(parser.createSearchCommand(\"search /plan cool\") instanceof SearchCommand);","lastModifiedDate":"2022-03-21"},{"lineNumber":147,"author":{"gitId":"a1021492980"},"content":"        assertTrue(parser.createSearchCommand(\"search /plan asldasld\") instanceof SearchCommand);","lastModifiedDate":"2022-03-21"},{"lineNumber":148,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":149,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":150,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":151,"author":{"gitId":"a1021492980"},"content":"    void createSearchCommand_invalidSearchCommand_exceptionThrown() {","lastModifiedDate":"2022-03-21"},{"lineNumber":152,"author":{"gitId":"a1021492980"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createSearchCommand(\"search /new\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":153,"author":{"gitId":"a1021492980"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createSearchCommand(\"search /list extra\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":154,"author":{"gitId":"a1021492980"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createSearchCommand(\"search /delete\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":155,"author":{"gitId":"a1021492980"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createSearchCommand(\"search /update\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":156,"author":{"gitId":"a1021492980"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createSearchCommand(\"search /test\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":157,"author":{"gitId":"a1021492980"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createSearchCommand(\"search /OMG\"));","lastModifiedDate":"2022-04-05"},{"lineNumber":158,"author":{"gitId":"a1021492980"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createSearchCommand(\"search /upgrade\"));","lastModifiedDate":"2022-04-05"},{"lineNumber":159,"author":{"gitId":"a1021492980"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createSearchCommand(\"search fasdjaks\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":160,"author":{"gitId":"a1021492980"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createSearchCommand(\"search -1\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":161,"author":{"gitId":"a1021492980"},"content":"        assertThrows(ArrayIndexOutOfBoundsException.class, () -\u003e parser.createSearchCommand(\"search\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":162,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":163,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":164,"author":{"gitId":"Musfirahe0556596"},"content":"    //Exercise tests","lastModifiedDate":"2022-03-20"},{"lineNumber":165,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":166,"author":{"gitId":"Musfirahe0556596"},"content":"    void createExerciseCommand_validExerciseCommand_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-03-14"},{"lineNumber":167,"author":{"gitId":"Musfirahe0556596"},"content":"        assertTrue(parser.createExerciseCommand(\"exercise /list\") instanceof ExerciseCommand);","lastModifiedDate":"2022-03-14"},{"lineNumber":168,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":169,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":170,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":171,"author":{"gitId":"Musfirahe0556596"},"content":"    void createExerciseCommand_invalidExerciseCommand_exceptionThrown() {","lastModifiedDate":"2022-03-14"},{"lineNumber":172,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(ArrayIndexOutOfBoundsException.class, () -\u003e parser.createExerciseCommand(\"exercise\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":173,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createExerciseCommand(\"exercise /test\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":174,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createExerciseCommand(\"exercise /list extra\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":175,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":176,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":177,"author":{"gitId":"Musfirahe0556596"},"content":"    //Plan tests","lastModifiedDate":"2022-03-20"},{"lineNumber":178,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":179,"author":{"gitId":"Musfirahe0556596"},"content":"    void createPlanCommand_validPlanCommand_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-03-20"},{"lineNumber":180,"author":{"gitId":"Musfirahe0556596"},"content":"        assertTrue(parser.createPlanCommand(\"plan /new Random /workouts 1,2,3\") instanceof PlanCommand);","lastModifiedDate":"2022-03-20"},{"lineNumber":181,"author":{"gitId":"Musfirahe0556596"},"content":"        assertTrue(parser.createPlanCommand(\"plan /new Random /workouts 1,1,1,1,1,1,1,1,1,1\") instanceof PlanCommand);","lastModifiedDate":"2022-03-20"},{"lineNumber":182,"author":{"gitId":"Musfirahe0556596"},"content":"        assertTrue(parser.createPlanCommand(\"plan /new Random /workouts 1, 3, 2\") instanceof PlanCommand);","lastModifiedDate":"2022-03-23"},{"lineNumber":183,"author":{"gitId":"Musfirahe0556596"},"content":"        assertTrue(parser.createPlanCommand(\"plan /new Random /workouts 2\") instanceof PlanCommand);","lastModifiedDate":"2022-03-20"},{"lineNumber":184,"author":{"gitId":"Musfirahe0556596"},"content":"        assertTrue(parser.createPlanCommand(\"plan /list\") instanceof PlanCommand);","lastModifiedDate":"2022-03-20"},{"lineNumber":185,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":186,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":187,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":188,"author":{"gitId":"Musfirahe0556596"},"content":"    void createPlanCommand_invalidPlanCommand_exceptionThrown() {","lastModifiedDate":"2022-03-20"},{"lineNumber":189,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createPlanCommand(\"plan /new\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":190,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(ArrayIndexOutOfBoundsException.class, () -\u003e parser.createPlanCommand(\"plan\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":191,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createWorkoutCommand(\"plan /test\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":192,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createWorkoutCommand(\"plan /list extra\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":193,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":194,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"emilysim00":3,"Musfirahe0556596":90,"alanlowzies":71,"a1021492980":30}},{"path":"src/test/java/werkit/WerkItTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"package werkit;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"import java.io.InputStream;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"class WerkItTest {","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"    private static final InputStream DEFAULT_STDIN \u003d System.in;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"    @AfterEach","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"    void rollbackStdIn() {","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"        System.setIn(DEFAULT_STDIN);","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"    void startContinuousUserPrompt_simpleExit_expectSuccess() throws IOException {","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"        String testCommand \u003d \"exit\" + System.lineSeparator();","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"        ByteArrayInputStream testByteData \u003d new ByteArrayInputStream(testCommand.getBytes());","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"        System.setIn(testByteData);","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"        LogHandler.startLogHandler();","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"        WerkIt werkIt \u003d new WerkIt();","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"        String expectedOutput \u003d \"----------------------------------------------------------------------\"","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"                + System.lineSeparator()","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"                + \"Now then, what can I do for you today?\"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"                + System.lineSeparator()","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"                + \"(Need help? Type \u0027help\u0027 for a guide!)\"","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"                + System.lineSeparator()","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"                + \"----------------------------------------------------------------------\"","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"                + System.lineSeparator()","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"                + \"\u003e ----------------------------------------------------------------------\"","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"                + System.lineSeparator()","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"                + \"Thank you for using WerkIt! See you again soon...\"","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"                + System.lineSeparator()","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\"","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"                + System.lineSeparator();","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"        ByteArrayOutputStream actualOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"        System.setOut(new PrintStream(actualOutput));","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"        werkIt.startContinuousUserPrompt();","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"        assertEquals(expectedOutput, actualOutput.toString());","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"emilysim00":1,"alanlowzies":44,"-":7}}]
