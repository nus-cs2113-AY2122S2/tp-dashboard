[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"# A tP Project","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   * In the same dialog, you _may have to set the Project language level_ field to the SDK default option.","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"2. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"3. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"alanlowzies":2,"-":65}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"    mainClassName \u003d \"Main\"","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"alanlowzies":2,"-":45}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"| Display                                                        |     Name      |                Github Profile                 |               Portfolio                |","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"|----------------------------------------------------------------|:-------------:|:---------------------------------------------:|:--------------------------------------:|","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"| ![](https://avatars.githubusercontent.com/u/95752177?size\u003d100) |  Yan Tianai   |    [Github](https://github.com/TianaiYan)     |   [Portfolio](docs/team/johndoe.md)    |","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"| ![](https://avatars.githubusercontent.com/u/60375639?size\u003d100) | Huang Haofeng |   [Github](https://github.com/a1021492980)    | [Portfolio](docs/team/HuangHaofeng.md) |","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"| ![](https://avatars.githubusercontent.com/u/69451253?size\u003d100) | Musfirah Wani | [Github](https://github.com/Musfirahe0556596) |   [Portfolio](docs/team/johndoe.md)    |","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"| ![](https://avatars.githubusercontent.com/u/69447944?size\u003d100) |   Emily Sim   |    [Github](https://github.com/emilysim00)    |    [Portfolio](docs/team/emily.md)     |","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"| ![](https://avatars.githubusercontent.com/u/30099983?size\u003d100) |   Alan Low    |   [Github](https://github.com/alanlowzies)    | [Portfolio](docs/team/alanlowzies.md)  |","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"emilysim00":7,"-":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"# WerkIt! Developer Guide","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"## Table of Contents","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"* [About this Guide](#about-this-guide)","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"* [Acknowledgements](#acknowledgements)","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"* [Setting Up your Development Environment](#setting-up-your-development-environment)","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"* [Design](#design)","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"* [Implementation](#implementation)","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"* [Product Scope](#product-scope)","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"* [User Stories](#user-stories)","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"* [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"* [Glossary](#glossary)","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"* [Instructions for Manual Testing](#instructions-for-manual-testing)","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"## About this Guide","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"This developer guide serves a documentation of the development of WerkIt!, an application that was created to help","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"prospective users to plan their exercise routines.","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"This technical document is meant for current and future developers of WerkIt! as a reference point on the design,","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"implementation, and other technical and non-technical aspects of the application.","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"### Notations Used In This Guide","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"When reading this document, there are several icons that you may encounter. ","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"Below are the icons and their meanings:","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"\u003e ⚠️**Warning** : Information that you may want to pay attention to in order","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"\u003e to prevent possible issues from arising when using the application.","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"\u003e 🧾  **Note** : Additional information that may be useful for you.","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"️","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"The following websites and codebases were referenced and adapted for our project:","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"* AddressBook-Level2 project ([Website](https://se-education.org/addressbook-level2/) | ","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"[GitHub](https://github.com/se-edu/addressbook-level2))","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"* AddressBook-Level3 project ([Website](https://se-education.org/addressbook-level3/DeveloperGuide.html) |","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"[GitHub](https://github.com/se-edu/addressbook-level3))","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"* Team Member Alan Low\u0027s individual project (iP) codebase ([GitHub](https://github.com/alanlowzies/ip))","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"## Setting Up your Development Environment","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"### Requirements","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"- [X] Java JDK version 11","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"- [X] An IDE of your choice, though IntelliJ IDEA is recommended as this project is developed","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"with this IDE.","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"Musfirahe0556596"},"content":"\u003e 🧾 IDE-related references in this developer guide IDE will be tailored for IntelliJ IDEA. ","lastModifiedDate":"2022-04-01"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"### Setting Up","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"1. Fork the [WerkIt! GitHub repository](https://github.com/AY2122S2-CS2113T-T09-2/tp).","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"2. Clone your fork to your machine.","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"3. Set up your local repo in your IDE.","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"    - Ensure that the project in your IDE is configured to run on Java JDK version 11. ","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"    - A guide on setting your project to use JDK 11 in your IntelliJ IDEA IDE can be found ","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"[here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"4. Run `Main.java`. If you have set up your environment correctly, you should see the following","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"output in your terminal: ","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"    ```","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"     __        __        _    ___ _   _ ","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"     \\ \\      / /__ _ __| | _|_ _| |_| |","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"      \\ \\ /\\ / / _ \\ \u0027__| |/ /| || __| |","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"       \\ V  V /  __/ |  |   \u003c | || |_|_|","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"        \\_/\\_/ \\___|_|  |_|\\_\\___|\\__(_)","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"    Welcome to WerkIt!, your personal exercise planner.","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"    ----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"    Checking for required directory and files...","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"    - The required data directory was not found. It will be created.","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"    - The WerkIt! resource directory has been created in","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"      your terminal\u0027s current working directory.","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"    - The exercise file was not found. It will be created.","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"    - The exercise file \u0027exercises.txt\u0027 has been created in","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"      the WerkIt! resource directory.","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"alanlowzies"},"content":"    - The workout file was not found. It will be created.","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"alanlowzies"},"content":"    - The workout file \u0027workouts.txt\u0027 has been created in","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"alanlowzies"},"content":"      the WerkIt! resource directory.","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"    - The plan file was not found. It will be created.","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"    - The plan file \u0027plans.txt\u0027 has been created in","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"alanlowzies"},"content":"      the WerkIt! resource directory.","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"    - The schedule file was not found. It will be created.","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"    - The schedule file \u0027schedule.txt\u0027 has been","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"      created in the WerkIt! resource directory.","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"alanlowzies"},"content":"    Loading saved file data...","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"alanlowzies"},"content":"    - Exercises file\tOK!","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"alanlowzies"},"content":"    ----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"alanlowzies"},"content":"    Now then, what can I do for you today?","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"alanlowzies"},"content":"    (Need help? Type \u0027help\u0027 for a guide!)","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"alanlowzies"},"content":"    ----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"alanlowzies"},"content":"    \u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"alanlowzies"},"content":"    ```","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"alanlowzies"},"content":"5. Type `exit` to exit the program.","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"alanlowzies"},"content":"You are now ready to begin developing!","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":101,"author":{"gitId":"alanlowzies"},"content":"## Design ","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"alanlowzies"},"content":"### Overview","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"emilysim00"},"content":"### Architecture Diagram","lastModifiedDate":"2022-03-31"},{"lineNumber":104,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":105,"author":{"gitId":"emilysim00"},"content":"![Architecture-Diagram](high-level-diagram/architecture_diagram.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":106,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":107,"author":{"gitId":"Musfirahe0556596"},"content":"The features of WerkIt! are split and grouped into 5 main features:","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"Musfirahe0556596"},"content":"1. [Exercise-related features](#exercise-related-features)","lastModifiedDate":"2022-03-31"},{"lineNumber":109,"author":{"gitId":"Musfirahe0556596"},"content":"2. [Workout-related features](#workout-related-features)","lastModifiedDate":"2022-03-31"},{"lineNumber":110,"author":{"gitId":"Musfirahe0556596"},"content":"3. [Plan-related features](#plan-related-features)","lastModifiedDate":"2022-03-31"},{"lineNumber":111,"author":{"gitId":"Musfirahe0556596"},"content":"4. [Schedule-related features](#schedule-related-features)","lastModifiedDate":"2022-03-31"},{"lineNumber":112,"author":{"gitId":"Musfirahe0556596"},"content":"5. [Search-related features](#search-related-features)","lastModifiedDate":"2022-03-31"},{"lineNumber":113,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":114,"author":{"gitId":"Musfirahe0556596"},"content":"### Exercise-related features","lastModifiedDate":"2022-03-31"},{"lineNumber":115,"author":{"gitId":"Musfirahe0556596"},"content":"_to be updated_","lastModifiedDate":"2022-03-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":117,"author":{"gitId":"Musfirahe0556596"},"content":"---","lastModifiedDate":"2022-03-31"},{"lineNumber":118,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":119,"author":{"gitId":"Musfirahe0556596"},"content":"### Workout-related features","lastModifiedDate":"2022-03-31"},{"lineNumber":120,"author":{"gitId":"Musfirahe0556596"},"content":"_to be updated_","lastModifiedDate":"2022-03-31"},{"lineNumber":121,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":122,"author":{"gitId":"Musfirahe0556596"},"content":"---","lastModifiedDate":"2022-03-31"},{"lineNumber":123,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":124,"author":{"gitId":"Musfirahe0556596"},"content":"### Plan-related features","lastModifiedDate":"2022-03-31"},{"lineNumber":125,"author":{"gitId":"Musfirahe0556596"},"content":"_to be updated_","lastModifiedDate":"2022-03-31"},{"lineNumber":126,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":127,"author":{"gitId":"Musfirahe0556596"},"content":"---","lastModifiedDate":"2022-03-31"},{"lineNumber":128,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":129,"author":{"gitId":"Musfirahe0556596"},"content":"### Schedule-related features","lastModifiedDate":"2022-03-31"},{"lineNumber":130,"author":{"gitId":"Musfirahe0556596"},"content":"_to be updated_","lastModifiedDate":"2022-03-31"},{"lineNumber":131,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":132,"author":{"gitId":"Musfirahe0556596"},"content":"---","lastModifiedDate":"2022-03-31"},{"lineNumber":133,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":134,"author":{"gitId":"Musfirahe0556596"},"content":"### Search-related features","lastModifiedDate":"2022-03-31"},{"lineNumber":135,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":136,"author":{"gitId":"Musfirahe0556596"},"content":"Below is a class diagram of the search-related features:","lastModifiedDate":"2022-03-31"},{"lineNumber":137,"author":{"gitId":"Musfirahe0556596"},"content":"![SearchUML](uml/classDiagrams/images/SearchClass.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":138,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":139,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":140,"author":{"gitId":"Musfirahe0556596"},"content":"When WerkIt is running, the `WerkIt` class will keep prompting the user to enter command through the","lastModifiedDate":"2022-03-31"},{"lineNumber":141,"author":{"gitId":"Musfirahe0556596"},"content":"`WerkIt#startContinuousUserPrompt()` method. After the user has entered command, The `UI#getUserInput()` method in `UI`","lastModifiedDate":"2022-03-31"},{"lineNumber":142,"author":{"gitId":"Musfirahe0556596"},"content":"class will catch the user input, and it will be sent to `Parser#parseUserInput(String userInput)` method to analyse the","lastModifiedDate":"2022-03-31"},{"lineNumber":143,"author":{"gitId":"Musfirahe0556596"},"content":"user\u0027s command. If the user\u0027s command type is search, i.e. `search \u003cuserAction\u003e \u003ckeywords\u003e`, the","lastModifiedDate":"2022-03-31"},{"lineNumber":144,"author":{"gitId":"Musfirahe0556596"},"content":"`Parser#parseUserInput(String userInput)` method will parse the \u0027search\u0027 base word and proceed to create search related","lastModifiedDate":"2022-03-31"},{"lineNumber":145,"author":{"gitId":"Musfirahe0556596"},"content":"command using `Parser#createSearchCommand(String userInput)` method. This method will further evaluate the","lastModifiedDate":"2022-03-31"},{"lineNumber":146,"author":{"gitId":"Musfirahe0556596"},"content":"`\u003cuserAction\u003e` and call the constructor of `SearchCommand` class by passing relevant parameters related to search to the","lastModifiedDate":"2022-03-31"},{"lineNumber":147,"author":{"gitId":"Musfirahe0556596"},"content":"constructor. If the `\u003cuserAction\u003e` is null or incorrect, an `InvalidCommandException` will be thrown. If the `\u003ckeywords\u003e`","lastModifiedDate":"2022-03-31"},{"lineNumber":148,"author":{"gitId":"Musfirahe0556596"},"content":"is not specified, an `InvalidCommandException` will be thrown.","lastModifiedDate":"2022-03-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":150,"author":{"gitId":"emilysim00"},"content":"---","lastModifiedDate":"2022-03-31"},{"lineNumber":151,"author":{"gitId":"alanlowzies"},"content":"## Implementation","lastModifiedDate":"2022-03-23"},{"lineNumber":152,"author":{"gitId":"alanlowzies"},"content":"### Overview","lastModifiedDate":"2022-03-23"},{"lineNumber":153,"author":{"gitId":"alanlowzies"},"content":"* [Getting User Input Continuously](#getting-user-input-continuously)","lastModifiedDate":"2022-03-23"},{"lineNumber":154,"author":{"gitId":"alanlowzies"},"content":"* [Parsing User Input and Getting the Right Command](#parsing-user-input-and-getting-the-right-command)","lastModifiedDate":"2022-03-23"},{"lineNumber":155,"author":{"gitId":"Musfirahe0556596"},"content":"* [Exercise](#exercise)","lastModifiedDate":"2022-03-24"},{"lineNumber":156,"author":{"gitId":"a1021492980"},"content":"  * [List Exercise](#list-exercise)","lastModifiedDate":"2022-03-28"},{"lineNumber":157,"author":{"gitId":"Musfirahe0556596"},"content":"* [Workout](#workout)","lastModifiedDate":"2022-03-24"},{"lineNumber":158,"author":{"gitId":"alanlowzies"},"content":"  * [Create New Workout](#create-new-workout)","lastModifiedDate":"2022-03-23"},{"lineNumber":159,"author":{"gitId":"alanlowzies"},"content":"    * [Design Considerations](#design-considerations-for-creating-a-new-workout)","lastModifiedDate":"2022-03-23"},{"lineNumber":160,"author":{"gitId":"emilysim00"},"content":"  * [List All Workouts](#list-workout)","lastModifiedDate":"2022-04-01"},{"lineNumber":161,"author":{"gitId":"Musfirahe0556596"},"content":"  * [Delete Existing Workout](#delete-existing-workout)","lastModifiedDate":"2022-03-24"},{"lineNumber":162,"author":{"gitId":"Musfirahe0556596"},"content":"    * [Design Considerations](#design-considerations-for-deleting-existing-workout)","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"TianaiYan"},"content":"  * [Update Workout](#update-workout)","lastModifiedDate":"2022-03-24"},{"lineNumber":164,"author":{"gitId":"Musfirahe0556596"},"content":"* [Plan](#plan)","lastModifiedDate":"2022-03-24"},{"lineNumber":165,"author":{"gitId":"Musfirahe0556596"},"content":"  * [Create A New Plan](#create-a-new-plan)","lastModifiedDate":"2022-03-24"},{"lineNumber":166,"author":{"gitId":"Musfirahe0556596"},"content":"  * [List Plans](#list-plans)","lastModifiedDate":"2022-03-24"},{"lineNumber":167,"author":{"gitId":"Musfirahe0556596"},"content":"* [Schedule](#schedule)","lastModifiedDate":"2022-03-24"},{"lineNumber":168,"author":{"gitId":"emilysim00"},"content":"  * [Update Schedule](#update-schedule)","lastModifiedDate":"2022-03-30"},{"lineNumber":169,"author":{"gitId":"emilysim00"},"content":"    * [Design Considerations](#design-considerations-for-update-schedule)","lastModifiedDate":"2022-03-30"},{"lineNumber":170,"author":{"gitId":"emilysim00"},"content":"  * [View Schedule](#view-schedule)","lastModifiedDate":"2022-03-30"},{"lineNumber":171,"author":{"gitId":"emilysim00"},"content":"  * [Clear plan scheduled for a day](#clear-schedule-for-a-day)","lastModifiedDate":"2022-03-30"},{"lineNumber":172,"author":{"gitId":"emilysim00"},"content":"  * [Clear all plans in the Schedule](#clear-schedule-for-the-week)","lastModifiedDate":"2022-03-30"},{"lineNumber":173,"author":{"gitId":"alanlowzies"},"content":"* [Search](#search)","lastModifiedDate":"2022-03-23"},{"lineNumber":174,"author":{"gitId":"alanlowzies"},"content":"  * [Search for Exercise](#search-for-exercise)","lastModifiedDate":"2022-03-23"},{"lineNumber":175,"author":{"gitId":"a1021492980"},"content":"  * [Search for Workout](#search-for-workout)","lastModifiedDate":"2022-03-28"},{"lineNumber":176,"author":{"gitId":"alanlowzies"},"content":"  * [Search for Plan](#search-for-plan)","lastModifiedDate":"2022-03-23"},{"lineNumber":177,"author":{"gitId":"a1021492980"},"content":"  * [Search for All](#search-for-all)","lastModifiedDate":"2022-03-28"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":179,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":180,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":181,"author":{"gitId":"alanlowzies"},"content":"### Getting User Input Continuously","lastModifiedDate":"2022-03-23"},{"lineNumber":182,"author":{"gitId":"alanlowzies"},"content":"Once `WerkIt` has finished loading any saved file data on the user\u0027s system, it will call ","lastModifiedDate":"2022-03-23"},{"lineNumber":183,"author":{"gitId":"alanlowzies"},"content":"`WerkIt#startContinuousUserPrompt()`. This method will call on `UI#printUserInputPrompt()` to print a prompt message","lastModifiedDate":"2022-03-23"},{"lineNumber":184,"author":{"gitId":"alanlowzies"},"content":"to the terminal and `UI#getUserInput()` to wait and capture the user\u0027s input. The input will be captured with the aid ","lastModifiedDate":"2022-03-23"},{"lineNumber":185,"author":{"gitId":"alanlowzies"},"content":"of Java\u0027s built-in `Scanner` class.","lastModifiedDate":"2022-03-23"},{"lineNumber":186,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":187,"author":{"gitId":"alanlowzies"},"content":"Once the user has entered an input, `UI#getUserInput()` trims any preceding and trailing whitespaces before returning ","lastModifiedDate":"2022-03-23"},{"lineNumber":188,"author":{"gitId":"alanlowzies"},"content":"the user\u0027s input as a `String` object to `WerkIt#startContinuousUserPrompt()`. Then, ","lastModifiedDate":"2022-03-23"},{"lineNumber":189,"author":{"gitId":"emilysim00"},"content":"`WerkIt#startContinuousUserPrompt()` calls `Parser#parseUserInput()` to parse the user\u0027s input and create an ","lastModifiedDate":"2022-04-01"},{"lineNumber":190,"author":{"gitId":"emilysim00"},"content":"object that is a subclass of the `Command` class. If there is no issue with the formatting of the user\u0027s input,","lastModifiedDate":"2022-04-01"},{"lineNumber":191,"author":{"gitId":"alanlowzies"},"content":"this subclass-of-`Command` object is returned to `WerkIt#startContinuousUserPrompt()`.","lastModifiedDate":"2022-03-23"},{"lineNumber":192,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":193,"author":{"gitId":"alanlowzies"},"content":"\u003e A detailed implementation of the parsing and creation of subclass-of-`Command` object process can be found in","lastModifiedDate":"2022-03-23"},{"lineNumber":194,"author":{"gitId":"alanlowzies"},"content":"\u0027[Parsing User Input and Getting the Right Command](#parsing-user-input-and-getting-the-right-command)\u0027.","lastModifiedDate":"2022-03-23"},{"lineNumber":195,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":196,"author":{"gitId":"alanlowzies"},"content":"Next, `WerkIt#startContinuousUserPrompt()` calls on the `execute()` method of the subclass-of-`Command` object to","lastModifiedDate":"2022-03-23"},{"lineNumber":197,"author":{"gitId":"alanlowzies"},"content":"perform the user\u0027s requested action. If the execution goes smoothly, this completes the user\u0027s inputted command.","lastModifiedDate":"2022-03-23"},{"lineNumber":198,"author":{"gitId":"alanlowzies"},"content":"This process is repeated until the user enters `exit`, which will terminate the loop, call `UI#printGoodbye()` to","lastModifiedDate":"2022-03-23"},{"lineNumber":199,"author":{"gitId":"alanlowzies"},"content":"print a goodbye message to the user, before handing control back to `Main#main` to end the program.","lastModifiedDate":"2022-03-23"},{"lineNumber":200,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":201,"author":{"gitId":"alanlowzies"},"content":"#### Design Considerations","lastModifiedDate":"2022-03-23"},{"lineNumber":202,"author":{"gitId":"alanlowzies"},"content":"* `WerkIt#startContinuousUserPompt()` has a boolean flag `isFirstPrompt`. This flag allows WerkIt to","lastModifiedDate":"2022-03-23"},{"lineNumber":203,"author":{"gitId":"alanlowzies"},"content":"print a different prompt each time the application starts up, before defaulting to a different prompt message","lastModifiedDate":"2022-03-23"},{"lineNumber":204,"author":{"gitId":"alanlowzies"},"content":"for subsequent prompts.","lastModifiedDate":"2022-03-23"},{"lineNumber":205,"author":{"gitId":"alanlowzies"},"content":"   * When the user starts the application, `isFirstPrompt` is set to `true` and thus, the prompt will be","lastModifiedDate":"2022-03-23"},{"lineNumber":206,"author":{"gitId":"alanlowzies"},"content":"  ```","lastModifiedDate":"2022-03-23"},{"lineNumber":207,"author":{"gitId":"alanlowzies"},"content":"  ----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":208,"author":{"gitId":"alanlowzies"},"content":"  Now then, what can I do for you today?","lastModifiedDate":"2022-03-23"},{"lineNumber":209,"author":{"gitId":"alanlowzies"},"content":"  (Need help? Type \u0027help\u0027 for a guide!)","lastModifiedDate":"2022-03-23"},{"lineNumber":210,"author":{"gitId":"alanlowzies"},"content":"  ----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":211,"author":{"gitId":"alanlowzies"},"content":"  \u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":212,"author":{"gitId":"alanlowzies"},"content":"  ```","lastModifiedDate":"2022-03-23"},{"lineNumber":213,"author":{"gitId":"alanlowzies"},"content":"  * Subsequent prompts in that app\u0027s session will be","lastModifiedDate":"2022-03-23"},{"lineNumber":214,"author":{"gitId":"alanlowzies"},"content":"  ```","lastModifiedDate":"2022-03-23"},{"lineNumber":215,"author":{"gitId":"alanlowzies"},"content":"  ----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":216,"author":{"gitId":"alanlowzies"},"content":"  What\u0027s next?","lastModifiedDate":"2022-03-23"},{"lineNumber":217,"author":{"gitId":"alanlowzies"},"content":"  ----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":218,"author":{"gitId":"alanlowzies"},"content":"  \u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":219,"author":{"gitId":"alanlowzies"},"content":"  ```","lastModifiedDate":"2022-03-23"},{"lineNumber":220,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":221,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":222,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":223,"author":{"gitId":"alanlowzies"},"content":"### Parsing User Input and Getting the Right Command","lastModifiedDate":"2022-03-23"},{"lineNumber":224,"author":{"gitId":"alanlowzies"},"content":"**_TODO_**: Explain how the app parses user input and determines which `Command` subclass object to instantiate.","lastModifiedDate":"2022-03-23"},{"lineNumber":225,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":226,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":227,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":228,"author":{"gitId":"Musfirahe0556596"},"content":"### Exercise","lastModifiedDate":"2022-03-24"},{"lineNumber":229,"author":{"gitId":"a1021492980"},"content":"#### List Exercise","lastModifiedDate":"2022-03-28"},{"lineNumber":230,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":231,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":232,"author":{"gitId":"a1021492980"},"content":"If the user\u0027s command type is to list the exercises available, i.e. `exercise /list`, the","lastModifiedDate":"2022-03-29"},{"lineNumber":233,"author":{"gitId":"a1021492980"},"content":"`Parser#parseUserInput(String userInput)` method will parse the \u0027exercise\u0027 base word and proceed to create exercise related","lastModifiedDate":"2022-03-28"},{"lineNumber":234,"author":{"gitId":"a1021492980"},"content":"command using `Parser#createExerciseCommand(String userInput)` method. This method will further evaluate the","lastModifiedDate":"2022-03-28"},{"lineNumber":235,"author":{"gitId":"a1021492980"},"content":"exercise action, in this case, `/list` and call the constructor of `ExerciseCommand` class by passing relevant parameters related to the","lastModifiedDate":"2022-03-28"},{"lineNumber":236,"author":{"gitId":"a1021492980"},"content":"ExerciseCommand constructor. If the exercise action is null or incorrect, an InvalidCommandException will be thrown. Once the exercise command is created,","lastModifiedDate":"2022-03-28"},{"lineNumber":237,"author":{"gitId":"a1021492980"},"content":"this exercise command is executed via the `ExerciseCommand#execute()` method. As it is executed, the method will check the","lastModifiedDate":"2022-03-28"},{"lineNumber":238,"author":{"gitId":"a1021492980"},"content":"type of action to be executed, in this case, list. It will then list the exercises available for selection from the exerciseList using the `ExerciseList#printExerciseList()`.","lastModifiedDate":"2022-03-28"},{"lineNumber":239,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":240,"author":{"gitId":"Musfirahe0556596"},"content":"The following sequence diagram illustrates how the `exercise /list` command works in greater detail:","lastModifiedDate":"2022-03-30"},{"lineNumber":241,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":242,"author":{"gitId":"alanlowzies"},"content":"![List Exercise Sequence Diagram](uml/sequenceDiagrams/exercises/images/viewExercise.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":243,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":244,"author":{"gitId":"Musfirahe0556596"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":245,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":246,"author":{"gitId":"Musfirahe0556596"},"content":"### Workout","lastModifiedDate":"2022-03-24"},{"lineNumber":247,"author":{"gitId":"Musfirahe0556596"},"content":"#### Create New Workout","lastModifiedDate":"2022-03-24"},{"lineNumber":248,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":249,"author":{"gitId":"alanlowzies"},"content":"A summary of the general procedure of a new workout being inputted and stored into WerkIt! is as follows:","lastModifiedDate":"2022-03-23"},{"lineNumber":250,"author":{"gitId":"alanlowzies"},"content":"1. User enters the command `workout /new \u003cworkout name\u003e /reps \u003cnumber of repetitions\u003e`.","lastModifiedDate":"2022-03-23"},{"lineNumber":251,"author":{"gitId":"alanlowzies"},"content":"2. A new `Workout` object is created and stored in the application.","lastModifiedDate":"2022-03-23"},{"lineNumber":252,"author":{"gitId":"alanlowzies"},"content":"3. The success response is printed to the user through the terminal.","lastModifiedDate":"2022-03-23"},{"lineNumber":253,"author":{"gitId":"alanlowzies"},"content":"4. The new `Workout` object data is written to the resource file `workouts.txt`.","lastModifiedDate":"2022-03-23"},{"lineNumber":254,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":255,"author":{"gitId":"Musfirahe0556596"},"content":"The following sequence diagram illustrates how the `workout /new` command works in greater detail:","lastModifiedDate":"2022-03-30"},{"lineNumber":256,"author":{"gitId":"alanlowzies"},"content":"\u003e To simplify the sequence diagram, some method invocations that are deemed to be trivial ","lastModifiedDate":"2022-03-29"},{"lineNumber":257,"author":{"gitId":"alanlowzies"},"content":"\u003e have been removed from the sequence diagram. Some reference frames will be elaborated further ","lastModifiedDate":"2022-03-29"},{"lineNumber":258,"author":{"gitId":"alanlowzies"},"content":"\u003e down this section. Reference frames that will not be elaborated on will be made known.","lastModifiedDate":"2022-03-29"},{"lineNumber":259,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":260,"author":{"gitId":"alanlowzies"},"content":"![Create Workout Sequence Diagram](uml/sequenceDiagrams/workouts/images/CreateWorkout.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":261,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":262,"author":{"gitId":"alanlowzies"},"content":"**(Before Step 1)** The user\u0027s input (in this case will be a `workout /new` command) is obtained and parsed to obtain","lastModifiedDate":"2022-03-31"},{"lineNumber":263,"author":{"gitId":"alanlowzies"},"content":"a `WorkoutCommand` object that contains the user\u0027s input.","lastModifiedDate":"2022-03-31"},{"lineNumber":264,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":265,"author":{"gitId":"alanlowzies"},"content":"\u003e **Note:** For more information on the obtaining and parsing functionality of WerkIt!, please refer to","lastModifiedDate":"2022-03-31"},{"lineNumber":266,"author":{"gitId":"alanlowzies"},"content":"\u003e [\"Parsing User Input and Getting the Right Command\"](#parsing-user-input-and-getting-the-right-command) section.","lastModifiedDate":"2022-03-31"},{"lineNumber":267,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":268,"author":{"gitId":"alanlowzies"},"content":"**(Step 1)** When `WorkoutCommand#execute()` is called, because this is a `workout /new` command, the method will call","lastModifiedDate":"2022-03-31"},{"lineNumber":269,"author":{"gitId":"alanlowzies"},"content":"`WorkoutList#createAndAddWorkout()`.","lastModifiedDate":"2022-03-31"},{"lineNumber":270,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":271,"author":{"gitId":"alanlowzies"},"content":"The following sequence diagram is the detailed procedures for Step 2\u0027s `WorkoutList#createAndAddWorkout()`:","lastModifiedDate":"2022-03-31"},{"lineNumber":272,"author":{"gitId":"alanlowzies"},"content":"![createAndAddWorkout() Sequence Diagram (Part 1)](uml/sequenceDiagrams/workouts/images/CreateAndAddWorkout.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":273,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":274,"author":{"gitId":"alanlowzies"},"content":"\u003e **Note:** To improve the diagram\u0027s readability, logging-related and input-checking method calls, and exception throws in ","lastModifiedDate":"2022-03-31"},{"lineNumber":275,"author":{"gitId":"alanlowzies"},"content":"\u003e `WorkoutList#createAndAddWorkout()` have been omitted. ","lastModifiedDate":"2022-03-29"},{"lineNumber":276,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":277,"author":{"gitId":"alanlowzies"},"content":"**(Before Step 2.1)** Methods from the `String` and `Integer` classes are called to parse the","lastModifiedDate":"2022-03-31"},{"lineNumber":278,"author":{"gitId":"alanlowzies"},"content":"argument given to `WorkoutList#createAndAddWorkout()` to obtain the following information required to create the","lastModifiedDate":"2022-03-23"},{"lineNumber":279,"author":{"gitId":"alanlowzies"},"content":"`Workout` object:","lastModifiedDate":"2022-03-23"},{"lineNumber":280,"author":{"gitId":"alanlowzies"},"content":"1. Name of the exercise","lastModifiedDate":"2022-03-23"},{"lineNumber":281,"author":{"gitId":"alanlowzies"},"content":"2. Number of repetitions associated with the exercise in (1).","lastModifiedDate":"2022-03-23"},{"lineNumber":282,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":283,"author":{"gitId":"alanlowzies"},"content":"Next, validity checks of the user input are carried out to ensure that the data entered is valid as a","lastModifiedDate":"2022-03-31"},{"lineNumber":284,"author":{"gitId":"alanlowzies"},"content":"new `Workout` object. The requirements for a valid new `Workout` object are as follows:","lastModifiedDate":"2022-03-31"},{"lineNumber":285,"author":{"gitId":"alanlowzies"},"content":"1. The exercise name must exist in `ExerciseList`\u0027s `exerciseList`, which is an `ArrayList\u003cString\u003e` of exercise ","lastModifiedDate":"2022-03-31"},{"lineNumber":286,"author":{"gitId":"alanlowzies"},"content":"names. An `InvalidExceptionException` is thrown if this requirement is not met. ","lastModifiedDate":"2022-03-31"},{"lineNumber":287,"author":{"gitId":"alanlowzies"},"content":"2. The repetition value must be a non-negative integer greater than 0.","lastModifiedDate":"2022-03-31"},{"lineNumber":288,"author":{"gitId":"alanlowzies"},"content":"3. The (exercise name, repetition value)-pair must not already exist in the list of workouts maintained in","lastModifiedDate":"2022-03-31"},{"lineNumber":289,"author":{"gitId":"alanlowzies"},"content":"`WorkoutList`. For example, if a workout of 20 reps of push-ups is already stored in the list,","lastModifiedDate":"2022-03-23"},{"lineNumber":290,"author":{"gitId":"alanlowzies"},"content":"it cannot be created again.","lastModifiedDate":"2022-03-23"},{"lineNumber":291,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":292,"author":{"gitId":"alanlowzies"},"content":"If any of the three requirements are not met, the entire workout creation process is aborted.","lastModifiedDate":"2022-03-31"},{"lineNumber":293,"author":{"gitId":"alanlowzies"},"content":"If requirement 1 is not met, an `InvalidExceptionException` will be thrown. If requirements 2 and/or 3 are not met, an ","lastModifiedDate":"2022-03-31"},{"lineNumber":294,"author":{"gitId":"alanlowzies"},"content":"`InvalidWorkoutException` will be thrown.","lastModifiedDate":"2022-03-31"},{"lineNumber":295,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":296,"author":{"gitId":"alanlowzies"},"content":"Note that the above methods and exception throws are not shown in the sequence diagram to improve the readability of the ","lastModifiedDate":"2022-03-31"},{"lineNumber":297,"author":{"gitId":"alanlowzies"},"content":"sequence diagram.","lastModifiedDate":"2022-03-31"},{"lineNumber":298,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":299,"author":{"gitId":"alanlowzies"},"content":"**(Step 2.1)** If the above checks pass, a new `Workout` object with the user-specified exercise name and","lastModifiedDate":"2022-03-31"},{"lineNumber":300,"author":{"gitId":"alanlowzies"},"content":"repetition value is created. ","lastModifiedDate":"2022-03-31"},{"lineNumber":301,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":302,"author":{"gitId":"alanlowzies"},"content":"**(Step 2.3)** Once the `Workout` object is created, a key of the object will be generated (see the ","lastModifiedDate":"2022-03-31"},{"lineNumber":303,"author":{"gitId":"alanlowzies"},"content":"[Design Considerations](#design-considerations-for-creating-a-new-workout) section for more details of the `HashMap`","lastModifiedDate":"2022-03-23"},{"lineNumber":304,"author":{"gitId":"alanlowzies"},"content":"implementation).","lastModifiedDate":"2022-03-31"},{"lineNumber":305,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":306,"author":{"gitId":"alanlowzies"},"content":"**(Step 2.5)** The key-`Workout` pair is stored in `workoutsHashMapList` which in turn is stored in `WorkoutList` ","lastModifiedDate":"2022-03-31"},{"lineNumber":307,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":308,"author":{"gitId":"alanlowzies"},"content":"**(Step 2.7)** The key of the newly-created `Workout` object is added to the `workoutsDisplayList`, an ","lastModifiedDate":"2022-03-31"},{"lineNumber":309,"author":{"gitId":"alanlowzies"},"content":"`ArrayList\u003cString\u003e` object stored in `WorkoutList`. This ArrayList will be used for displaying the workouts when the ","lastModifiedDate":"2022-03-29"},{"lineNumber":310,"author":{"gitId":"alanlowzies"},"content":"command `workout /list` is entered by the user. This is the final step of `WorkoutList#createAndAddWorkout()`.","lastModifiedDate":"2022-03-29"},{"lineNumber":311,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":312,"author":{"gitId":"alanlowzies"},"content":"**(Step 4)** Upon returning to `WorkoutCommand`, `UI#printNewWorkoutCreatedMessage()` is called to display a response to","lastModifiedDate":"2022-03-31"},{"lineNumber":313,"author":{"gitId":"alanlowzies"},"content":"the user via the terminal. The following is an example of a response after the user entered `workout /new russian twist ","lastModifiedDate":"2022-03-23"},{"lineNumber":314,"author":{"gitId":"alanlowzies"},"content":"/reps 50`:","lastModifiedDate":"2022-03-23"},{"lineNumber":315,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":316,"author":{"gitId":"alanlowzies"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":317,"author":{"gitId":"alanlowzies"},"content":"Alright, the following workout has been created:","lastModifiedDate":"2022-03-23"},{"lineNumber":318,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":319,"author":{"gitId":"alanlowzies"},"content":"\trussian twist (50 reps)","lastModifiedDate":"2022-03-23"},{"lineNumber":320,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":321,"author":{"gitId":"alanlowzies"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":322,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":323,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":324,"author":{"gitId":"alanlowzies"},"content":"**(Step 6)** `FileManager#writeNewWorkoutToFile` is called to write the newly-created `Workout` object\u0027s data into ","lastModifiedDate":"2022-03-31"},{"lineNumber":325,"author":{"gitId":"alanlowzies"},"content":"`workouts.txt` which is stored on the user\u0027s local filesystem.","lastModifiedDate":"2022-03-23"},{"lineNumber":326,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":327,"author":{"gitId":"alanlowzies"},"content":"This completes the process of adding a new workout to WerkIt!","lastModifiedDate":"2022-03-23"},{"lineNumber":328,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":329,"author":{"gitId":"Musfirahe0556596"},"content":"##### Design Considerations for Creating a New Workout","lastModifiedDate":"2022-03-24"},{"lineNumber":330,"author":{"gitId":"Musfirahe0556596"},"content":"###### HashMaps - Motivation","lastModifiedDate":"2022-03-24"},{"lineNumber":331,"author":{"gitId":"alanlowzies"},"content":"Back in Version 1.0 of WerkIt!, workouts were stored in an ArrayList of `Workout` objects. In that version, plans","lastModifiedDate":"2022-03-23"},{"lineNumber":332,"author":{"gitId":"alanlowzies"},"content":"and schedules were not yet implemented and thus there was no real issues, since we can easily use index numbers","lastModifiedDate":"2022-03-23"},{"lineNumber":333,"author":{"gitId":"alanlowzies"},"content":"shown in `workout /list` to reference workouts when the user enters `workout /update` and `workout /delete` commands.","lastModifiedDate":"2022-03-23"},{"lineNumber":334,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":335,"author":{"gitId":"alanlowzies"},"content":"As an example, here is a list of workouts as shown when `workout /list` is used:","lastModifiedDate":"2022-03-23"},{"lineNumber":336,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":337,"author":{"gitId":"alanlowzies"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":338,"author":{"gitId":"alanlowzies"},"content":"\u003e workout /list","lastModifiedDate":"2022-03-23"},{"lineNumber":339,"author":{"gitId":"alanlowzies"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":340,"author":{"gitId":"alanlowzies"},"content":"Showing workouts 1-3 of 3:","lastModifiedDate":"2022-03-23"},{"lineNumber":341,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":342,"author":{"gitId":"alanlowzies"},"content":"1. push up (10 reps)","lastModifiedDate":"2022-03-23"},{"lineNumber":343,"author":{"gitId":"alanlowzies"},"content":"2. sit up (10 reps)","lastModifiedDate":"2022-03-23"},{"lineNumber":344,"author":{"gitId":"alanlowzies"},"content":"3. pull up (10 reps)","lastModifiedDate":"2022-03-23"},{"lineNumber":345,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":346,"author":{"gitId":"alanlowzies"},"content":"Showed all workouts in list","lastModifiedDate":"2022-03-23"},{"lineNumber":347,"author":{"gitId":"alanlowzies"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":348,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":349,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":350,"author":{"gitId":"alanlowzies"},"content":"Thus, if we want to update the workout with 10 reps of push-ups, we can enter `workout /update 1 15` to update ","lastModifiedDate":"2022-03-23"},{"lineNumber":351,"author":{"gitId":"alanlowzies"},"content":"the repetition value to 15.","lastModifiedDate":"2022-03-23"},{"lineNumber":352,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":353,"author":{"gitId":"alanlowzies"},"content":"However, when we were designing and preparing for Version 2.0, we discovered that this **relative referencing** of","lastModifiedDate":"2022-03-23"},{"lineNumber":354,"author":{"gitId":"alanlowzies"},"content":"workouts by their indices pose a potentially cumbersome issue when implementing the plans and schedule features. If","lastModifiedDate":"2022-03-23"},{"lineNumber":355,"author":{"gitId":"alanlowzies"},"content":"we were to continue using relative indexing to reference workouts in plans, the effort needed to maintain the ","lastModifiedDate":"2022-03-23"},{"lineNumber":356,"author":{"gitId":"alanlowzies"},"content":"references in plans can become unnecessary complex.","lastModifiedDate":"2022-03-23"},{"lineNumber":357,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":358,"author":{"gitId":"alanlowzies"},"content":"For example, using the same list of workouts we have above, suppose we have a plan that includes workout indices","lastModifiedDate":"2022-03-23"},{"lineNumber":359,"author":{"gitId":"alanlowzies"},"content":"1 and 3 (10 push-ups and 10 pull-ups). Now, suppose the user decides to delete workout index 2 (10 sit-ups), this","lastModifiedDate":"2022-03-23"},{"lineNumber":360,"author":{"gitId":"alanlowzies"},"content":"means that the 10 pull-ups will now have an index number of 2. Thus, if we were to continue using relative indexing","lastModifiedDate":"2022-03-23"},{"lineNumber":361,"author":{"gitId":"alanlowzies"},"content":"to reference workouts in plans, there is a greater risk of making wrong references, and the amount of additional","lastModifiedDate":"2022-03-23"},{"lineNumber":362,"author":{"gitId":"alanlowzies"},"content":"code to update these references can become too complex.","lastModifiedDate":"2022-03-23"},{"lineNumber":363,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":364,"author":{"gitId":"Musfirahe0556596"},"content":"###### Usage of HashMap","lastModifiedDate":"2022-03-24"},{"lineNumber":365,"author":{"gitId":"alanlowzies"},"content":"Thus, we have decided to use a HashMap on top of the existing ArrayList to store `Workout` objects. This will allow ","lastModifiedDate":"2022-03-23"},{"lineNumber":366,"author":{"gitId":"alanlowzies"},"content":"workouts to be referenced by their unique keys when creating plans and schedules, while allowing the user to continue","lastModifiedDate":"2022-03-23"},{"lineNumber":367,"author":{"gitId":"alanlowzies"},"content":"using the convenience of relative indexing for `workout /update` and `workout /delete` commands. The ArrayList of ","lastModifiedDate":"2022-03-23"},{"lineNumber":368,"author":{"gitId":"alanlowzies"},"content":"`Workout` objects from before is now converted into an ArrayList of Strings that will keep the keys of the `Workout` ","lastModifiedDate":"2022-03-23"},{"lineNumber":369,"author":{"gitId":"alanlowzies"},"content":"objects. Now, to manipulate the `Workout` object (e.g. `workout /update`),","lastModifiedDate":"2022-03-23"},{"lineNumber":370,"author":{"gitId":"alanlowzies"},"content":"1. User enters the index number of the workout he/she wants to update (as seen in `workout /list`).","lastModifiedDate":"2022-03-23"},{"lineNumber":371,"author":{"gitId":"alanlowzies"},"content":"2. The key of the `Workout` object is obtained from the ArrayList of keys (`workoutsDisplayList`).","lastModifiedDate":"2022-03-23"},{"lineNumber":372,"author":{"gitId":"alanlowzies"},"content":"3. The `Workout` object is obtained from the HashMap (`workoutsHashMapList`).","lastModifiedDate":"2022-03-23"},{"lineNumber":373,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":374,"author":{"gitId":"alanlowzies"},"content":"Note that the user will not have any direct interactions with the HashMap implementation and it should be transparent","lastModifiedDate":"2022-03-23"},{"lineNumber":375,"author":{"gitId":"alanlowzies"},"content":"to him/her.","lastModifiedDate":"2022-03-23"},{"lineNumber":376,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":377,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":378,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":379,"author":{"gitId":"Musfirahe0556596"},"content":"#### List Workout","lastModifiedDate":"2022-03-24"},{"lineNumber":380,"author":{"gitId":"emilysim00"},"content":"A summary of the general procedure of listing all the workouts being stored on WerkIt! is as follows:","lastModifiedDate":"2022-04-01"},{"lineNumber":381,"author":{"gitId":"emilysim00"},"content":"1. User enters the command `workout /list`.","lastModifiedDate":"2022-04-01"},{"lineNumber":382,"author":{"gitId":"emilysim00"},"content":"2. The application will then process this command and display all workouts stored in the workoutList at once.","lastModifiedDate":"2022-04-01"},{"lineNumber":383,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":384,"author":{"gitId":"emilysim00"},"content":"The following sequence diagram illustrates how the `workout /list` command works in greater detail:","lastModifiedDate":"2022-04-01"},{"lineNumber":385,"author":{"gitId":"emilysim00"},"content":"\u003e To simplify the sequence diagram, some method invocations that deemed to be trivial","lastModifiedDate":"2022-04-01"},{"lineNumber":386,"author":{"gitId":"emilysim00"},"content":"\u003e have been removed from the sequence diagram. Reference frames will be elaborated further","lastModifiedDate":"2022-04-01"},{"lineNumber":387,"author":{"gitId":"emilysim00"},"content":"\u003e down this section.","lastModifiedDate":"2022-04-01"},{"lineNumber":388,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":389,"author":{"gitId":"emilysim00"},"content":"![ListWorkoutUML](uml/sequenceDiagrams/workouts/images/listWorkout.png)","lastModifiedDate":"2022-04-01"},{"lineNumber":390,"author":{"gitId":"emilysim00"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":391,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":392,"author":{"gitId":"emilysim00"},"content":"(Steps 1 to 3) After the user input is received, the `WerkIt` object will call the `Parser#parseUserInput(userInput)` method to parse the user input.","lastModifiedDate":"2022-04-01"},{"lineNumber":393,"author":{"gitId":"emilysim00"},"content":"Upon parsing of the input, a `WorkoutCommand` object is obtained. This `WorkoutCommand` object is upcasted to a `Command` object on return","lastModifiedDate":"2022-04-01"},{"lineNumber":394,"author":{"gitId":"emilysim00"},"content":"to the `WerkIt` object. It will then execute the workout command by calling the `WorkoutCommand#execute()` method.","lastModifiedDate":"2022-04-01"},{"lineNumber":395,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":396,"author":{"gitId":"emilysim00"},"content":"(Steps 4) Since the workout command entered is `workout /list` the `WorkoutList#listAllWorkout()` method will be called ","lastModifiedDate":"2022-04-01"},{"lineNumber":397,"author":{"gitId":"emilysim00"},"content":"to process the command and perform the action of listing the workouts. ","lastModifiedDate":"2022-04-01"},{"lineNumber":398,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":399,"author":{"gitId":"emilysim00"},"content":"(Steps 5 and 6) To get each of the workouts stored in the workoutList, `WorkoutList#getWorkoutFromIndexNum(index)` method ","lastModifiedDate":"2022-04-01"},{"lineNumber":400,"author":{"gitId":"emilysim00"},"content":"is called to obtain each of the `workout` object. Each `workout` object contains the exercise name as well as the ","lastModifiedDate":"2022-04-01"},{"lineNumber":401,"author":{"gitId":"emilysim00"},"content":"number of repetitions of that exercise set by the user. ","lastModifiedDate":"2022-04-01"},{"lineNumber":402,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":403,"author":{"gitId":"emilysim00"},"content":"(Steps 7 to 9) Upon obtaining the `workout` object, `Workout#toString()` method is called to formulate and print ","lastModifiedDate":"2022-04-01"},{"lineNumber":404,"author":{"gitId":"emilysim00"},"content":"the workouts which is being displayed on the terminal to the user. ","lastModifiedDate":"2022-04-01"},{"lineNumber":405,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":406,"author":{"gitId":"Musfirahe0556596"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":407,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":408,"author":{"gitId":"Musfirahe0556596"},"content":"#### Delete Existing Workout","lastModifiedDate":"2022-03-24"},{"lineNumber":409,"author":{"gitId":"Musfirahe0556596"},"content":"A summary of the general procedure of an existing workout being removed from WerkIt! is as follows:","lastModifiedDate":"2022-03-24"},{"lineNumber":410,"author":{"gitId":"Musfirahe0556596"},"content":"1. User enters the command `workout /delete \u003cworkout index number in workout list\u003e`.","lastModifiedDate":"2022-03-30"},{"lineNumber":411,"author":{"gitId":"Musfirahe0556596"},"content":"2. The workout with the corresponding workout number in the workout list (can be determined by entering `workout /list`) is removed from the application\u0027s workout list.","lastModifiedDate":"2022-03-24"},{"lineNumber":412,"author":{"gitId":"Musfirahe0556596"},"content":"3. The success response is printed to the user through the terminal.","lastModifiedDate":"2022-03-24"},{"lineNumber":413,"author":{"gitId":"Musfirahe0556596"},"content":"4. The resource file, `workouts.txt`, is rewritten according to the application\u0027s workout list that has been modified.","lastModifiedDate":"2022-03-30"},{"lineNumber":414,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":415,"author":{"gitId":"Musfirahe0556596"},"content":"The following sequence diagram illustrates how the `workout /delete` command works in greater detail:","lastModifiedDate":"2022-03-30"},{"lineNumber":416,"author":{"gitId":"Musfirahe0556596"},"content":"\u003e To simplify the sequence diagram, some method invocations that deemed to be trivial","lastModifiedDate":"2022-03-24"},{"lineNumber":417,"author":{"gitId":"Musfirahe0556596"},"content":"\u003e have been removed from the sequence diagram. Reference frames will be elaborated further","lastModifiedDate":"2022-03-24"},{"lineNumber":418,"author":{"gitId":"Musfirahe0556596"},"content":"\u003e down this section.","lastModifiedDate":"2022-03-24"},{"lineNumber":419,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":420,"author":{"gitId":"alanlowzies"},"content":"![Delete Workout Sequence Diagram](uml/sequenceDiagrams/workouts/images/deleteWorkout-Part1.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":421,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":422,"author":{"gitId":"Musfirahe0556596"},"content":"**(Before Step 1)** The user\u0027s input (in this case will be a `workout /delete` command) is obtained and parsed to obtain","lastModifiedDate":"2022-04-01"},{"lineNumber":423,"author":{"gitId":"Musfirahe0556596"},"content":"a `WorkoutCommand` object that contains the user\u0027s input.","lastModifiedDate":"2022-04-01"},{"lineNumber":424,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":425,"author":{"gitId":"Musfirahe0556596"},"content":"\u003e 🧾 For more information on the obtaining and parsing functionality of WerkIt!, please refer to","lastModifiedDate":"2022-04-01"},{"lineNumber":426,"author":{"gitId":"Musfirahe0556596"},"content":"\u003e [\"Parsing User Input and Getting the Right Command\"](#parsing-user-input-and-getting-the-right-command) section.","lastModifiedDate":"2022-04-01"},{"lineNumber":427,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":428,"author":{"gitId":"Musfirahe0556596"},"content":"**(Step 1)** When the `WorkoutCommand#execute()` method is called, it will identify","lastModifiedDate":"2022-04-01"},{"lineNumber":429,"author":{"gitId":"Musfirahe0556596"},"content":"that the workout action is of type `delete`. Thus, it will subsequently call the ","lastModifiedDate":"2022-04-01"},{"lineNumber":430,"author":{"gitId":"Musfirahe0556596"},"content":"`WorkoutList#deleteWorkout()` method to perform the deletion of the workout.","lastModifiedDate":"2022-04-01"},{"lineNumber":431,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":432,"author":{"gitId":"Musfirahe0556596"},"content":"The following sequence diagram is the detailed procedure for Step 2\u0027s `WorkoutList#deleteWorkout()`:","lastModifiedDate":"2022-04-01"},{"lineNumber":433,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":434,"author":{"gitId":"alanlowzies"},"content":"![Delete Workout Detailed Sequence Diagram](uml/sequenceDiagrams/workouts/images/deleteWorkout-Part2.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":435,"author":{"gitId":"Musfirahe0556596"},"content":"\u003e 🧾 To improve the diagram\u0027s readability, logging-related and input-checking method calls, and exception throws in","lastModifiedDate":"2022-04-01"},{"lineNumber":436,"author":{"gitId":"Musfirahe0556596"},"content":"\u003e `WorkoutList#deleteWorkout()` have been omitted.","lastModifiedDate":"2022-04-01"},{"lineNumber":437,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":438,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":439,"author":{"gitId":"Musfirahe0556596"},"content":"**(Steps 2.1 to 2.2)** The `Integer#parseInt()` method is called to parse the user argument parameter given to `WorkoutList#deleteWorkout(userArgument)`.","lastModifiedDate":"2022-04-01"},{"lineNumber":440,"author":{"gitId":"Musfirahe0556596"},"content":"In this case, the user argument parameter is the workout index number of the workout to be deleted from the workout list as a `String` object.","lastModifiedDate":"2022-04-01"},{"lineNumber":441,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":442,"author":{"gitId":"Musfirahe0556596"},"content":"**(Steps 2.3 to 2.4)** With the workout index to delete, the `WorkoutList#deleteWorkout(userArgument)` method will then","lastModifiedDate":"2022-04-01"},{"lineNumber":443,"author":{"gitId":"Musfirahe0556596"},"content":"fetch the `Workout` object to be deleted by calling the `WorkoutList#getWorkoutFromIndexNum(indexToDelete)` method.","lastModifiedDate":"2022-04-01"},{"lineNumber":444,"author":{"gitId":"Musfirahe0556596"},"content":"However, before that `Workout` object is fetched, the `WorkoutList#deleteWorkout(userArgument)` method","lastModifiedDate":"2022-04-01"},{"lineNumber":445,"author":{"gitId":"Musfirahe0556596"},"content":"checks that the workout index to delete is within the range of the application\u0027s workout list.","lastModifiedDate":"2022-04-01"},{"lineNumber":446,"author":{"gitId":"Musfirahe0556596"},"content":"If index to delete is not within the range of the workout list, an `InvalidWorkoutException` exception is thrown.","lastModifiedDate":"2022-04-01"},{"lineNumber":447,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":448,"author":{"gitId":"Musfirahe0556596"},"content":"**(Steps 2.5 to 2.8)** The `Workout` object to be deleted is subsequently removed from the ArrayList and HashMap which stores the","lastModifiedDate":"2022-04-01"},{"lineNumber":449,"author":{"gitId":"Musfirahe0556596"},"content":"application\u0027s workout list.","lastModifiedDate":"2022-03-24"},{"lineNumber":450,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":451,"author":{"gitId":"Musfirahe0556596"},"content":"**(Step 3)** The `WorkoutList#deleteWorkout(userArgument)` method returns the deleted `Workout` object to `WorkoutCommand`.","lastModifiedDate":"2022-04-01"},{"lineNumber":452,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":453,"author":{"gitId":"Musfirahe0556596"},"content":"**(Steps 4 to 5)** Upon returning to the `WorkoutCommand` object, the `UI#printDeleteWorkoutMessage(deletedWorkout)` is called","lastModifiedDate":"2022-04-01"},{"lineNumber":454,"author":{"gitId":"Musfirahe0556596"},"content":"to display the workout that has been deleted to the user via the terminal. The following is an example ","lastModifiedDate":"2022-03-24"},{"lineNumber":455,"author":{"gitId":"Musfirahe0556596"},"content":"of a success deletion message after a valid workout is deleted from the application\u0027s workout list:","lastModifiedDate":"2022-03-30"},{"lineNumber":456,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":457,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":458,"author":{"gitId":"Musfirahe0556596"},"content":"Alright, the following workout has been removed:","lastModifiedDate":"2022-03-24"},{"lineNumber":459,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":460,"author":{"gitId":"Musfirahe0556596"},"content":"\tpush up (20 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":461,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":462,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":463,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":464,"author":{"gitId":"Musfirahe0556596"},"content":"**(Steps 6 to 7)** The `FileManager#rewriteAllWorkoutsToFile(workoutList)` is called to rewrite","lastModifiedDate":"2022-04-01"},{"lineNumber":465,"author":{"gitId":"Musfirahe0556596"},"content":"the `workouts.txt` file according to the newly modified application\u0027s workout list.","lastModifiedDate":"2022-03-24"},{"lineNumber":466,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":467,"author":{"gitId":"Musfirahe0556596"},"content":"This completes the process of deleting an existing workout in WerkIt!","lastModifiedDate":"2022-03-24"},{"lineNumber":468,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":469,"author":{"gitId":"Musfirahe0556596"},"content":"##### Design Considerations for Deleting Existing Workout","lastModifiedDate":"2022-03-24"},{"lineNumber":470,"author":{"gitId":"Musfirahe0556596"},"content":"###### Rewrite All Workout To File","lastModifiedDate":"2022-03-24"},{"lineNumber":471,"author":{"gitId":"Musfirahe0556596"},"content":"Currently, the WerkIt! program will rewrite all workout to the resource file, `workouts.txt`, when the delete workout","lastModifiedDate":"2022-03-24"},{"lineNumber":472,"author":{"gitId":"Musfirahe0556596"},"content":"function is executed. Such implementation may have performance issues as the program needs to rewrite the whole","lastModifiedDate":"2022-03-24"},{"lineNumber":473,"author":{"gitId":"Musfirahe0556596"},"content":"file with the modified workout list whenever a workout is deleted in the application.","lastModifiedDate":"2022-03-24"},{"lineNumber":474,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":475,"author":{"gitId":"Musfirahe0556596"},"content":"An alternative considered was to find the workout to be deleted in the resource file, and then","lastModifiedDate":"2022-03-24"},{"lineNumber":476,"author":{"gitId":"Musfirahe0556596"},"content":"remove that workout. While this is a more efficient implementation, it is more complex due to the","lastModifiedDate":"2022-03-30"},{"lineNumber":477,"author":{"gitId":"Musfirahe0556596"},"content":"way the workout data are formatted and stored in the `workouts.txt` file.","lastModifiedDate":"2022-03-30"},{"lineNumber":478,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":479,"author":{"gitId":"Musfirahe0556596"},"content":"Hence, to simplify the implementation, the team decided to simply","lastModifiedDate":"2022-03-30"},{"lineNumber":480,"author":{"gitId":"Musfirahe0556596"},"content":"rewrite all workouts to the resource file whenever a workout is deleted.","lastModifiedDate":"2022-03-30"},{"lineNumber":481,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":482,"author":{"gitId":"Musfirahe0556596"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":483,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":484,"author":{"gitId":"TianaiYan"},"content":"#### Update Workout","lastModifiedDate":"2022-03-24"},{"lineNumber":485,"author":{"gitId":"TianaiYan"},"content":"![Update Workout Class Diagram](uml/classDiagrams/images/updateWorkout.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":486,"author":{"gitId":"TianaiYan"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":487,"author":{"gitId":"TianaiYan"},"content":"When WerkIt is running, the `WerkIt` class will keep prompting the user to enter command through the","lastModifiedDate":"2022-03-24"},{"lineNumber":488,"author":{"gitId":"TianaiYan"},"content":"`WerkIt#startContinuousUserPrompt()` method. After the user has entered command, The `UI#getUserInput()` method in `UI`","lastModifiedDate":"2022-03-24"},{"lineNumber":489,"author":{"gitId":"TianaiYan"},"content":"class will catch the user input, and it will be sent to `Parser#parseUserInput(String userInput)` method to identify the","lastModifiedDate":"2022-03-24"},{"lineNumber":490,"author":{"gitId":"TianaiYan"},"content":"user\u0027s command. If the user\u0027s command type is to update an existing workout, ","lastModifiedDate":"2022-03-24"},{"lineNumber":491,"author":{"gitId":"TianaiYan"},"content":"i.e. `workout /update \u003cindex of workout\u003e \u003cnew number of repetitions\u003e`, the `Parser#parseUserInput(String userInput)` ","lastModifiedDate":"2022-03-24"},{"lineNumber":492,"author":{"gitId":"TianaiYan"},"content":"method will parse the \u0027workout\u0027 base word and proceed to create workout related command using ","lastModifiedDate":"2022-03-24"},{"lineNumber":493,"author":{"gitId":"TianaiYan"},"content":"`Parser#createWorkoutCommand(String userInput)` method. This method will further evaluate the workout action,","lastModifiedDate":"2022-03-25"},{"lineNumber":494,"author":{"gitId":"TianaiYan"},"content":"in this case, `/update` and call the constructor of `WorkoutCommand` class by passing relevant parameters related to the","lastModifiedDate":"2022-03-24"},{"lineNumber":495,"author":{"gitId":"TianaiYan"},"content":"WorkoutCommand constructor. If the workout action is null or incorrect, an InvalidCommandException will be thrown. ","lastModifiedDate":"2022-03-24"},{"lineNumber":496,"author":{"gitId":"TianaiYan"},"content":"If either `\u003cindex of workout\u003e` or `\u003cnew number of repetitions\u003e` parameter is also not specified, the same ","lastModifiedDate":"2022-03-24"},{"lineNumber":497,"author":{"gitId":"TianaiYan"},"content":"InvalidCommandException is thrown. Once the workout command is created, this workout command is executed ","lastModifiedDate":"2022-03-24"},{"lineNumber":498,"author":{"gitId":"TianaiYan"},"content":"via the `WorkoutCommand#execute()` method. As it is executed, the method will check the type of action to be executed, ","lastModifiedDate":"2022-03-24"},{"lineNumber":499,"author":{"gitId":"TianaiYan"},"content":"in this case, update. It will then update the existing workout using the `WorkoutList#updateWorkout(getUserArguments())` ","lastModifiedDate":"2022-03-24"},{"lineNumber":500,"author":{"gitId":"TianaiYan"},"content":"method. The updateWorkout method in addition, checks whether the given index of workout is a valid integer","lastModifiedDate":"2022-03-24"},{"lineNumber":501,"author":{"gitId":"TianaiYan"},"content":"and is within the range of the workout list. It also checks whether the workout to update exists in the current workout ","lastModifiedDate":"2022-03-25"},{"lineNumber":502,"author":{"gitId":"TianaiYan"},"content":"list. If either check is failed, `WorkoutOutOfRangeException` or `InvalidWorkoutException` will be thrown ","lastModifiedDate":"2022-03-25"},{"lineNumber":503,"author":{"gitId":"TianaiYan"},"content":"correspondingly. Otherwise, workout will be updated successfully. Then, `UI` will print a success message and call ","lastModifiedDate":"2022-03-25"},{"lineNumber":504,"author":{"gitId":"TianaiYan"},"content":"the `FileManager#rewriteAllWorkoutsToFile(getWorkoutList())` method to save the changes.","lastModifiedDate":"2022-03-25"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":506,"author":{"gitId":"TianaiYan"},"content":"##### Update workouts command","lastModifiedDate":"2022-03-24"},{"lineNumber":507,"author":{"gitId":"TianaiYan"},"content":"Format: `workout /update`","lastModifiedDate":"2022-03-24"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":509,"author":{"gitId":"TianaiYan"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":511,"author":{"gitId":"Musfirahe0556596"},"content":"### Plan","lastModifiedDate":"2022-03-24"},{"lineNumber":512,"author":{"gitId":"Musfirahe0556596"},"content":"#### Create A New Plan","lastModifiedDate":"2022-03-24"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":514,"author":{"gitId":"Musfirahe0556596"},"content":"A summary of the general procedure of a new plan being created and stored in WerkIt! is as follows:","lastModifiedDate":"2022-03-25"},{"lineNumber":515,"author":{"gitId":"Musfirahe0556596"},"content":"1. User enters the command `plan /new \u003cplan name\u003e /workouts \u003cworkout index numbers in workout list separated by comma\u003e`.","lastModifiedDate":"2022-03-30"},{"lineNumber":516,"author":{"gitId":"Musfirahe0556596"},"content":"2. A new `Plan` object is created and stored in the application.","lastModifiedDate":"2022-03-25"},{"lineNumber":517,"author":{"gitId":"Musfirahe0556596"},"content":"3. The success response is printed to the user through the terminal.","lastModifiedDate":"2022-03-25"},{"lineNumber":518,"author":{"gitId":"Musfirahe0556596"},"content":"4. The new `Plan` object data is written to the resource file `plans.txt`.","lastModifiedDate":"2022-03-25"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":520,"author":{"gitId":"Musfirahe0556596"},"content":"The following sequence diagram illustrates how the `plan /new` command works in greater detail:","lastModifiedDate":"2022-03-30"},{"lineNumber":521,"author":{"gitId":"Musfirahe0556596"},"content":"\u003e To simplify the sequence diagram, some method invocations that deemed to be trivial","lastModifiedDate":"2022-03-25"},{"lineNumber":522,"author":{"gitId":"Musfirahe0556596"},"content":"\u003e have been removed from the sequence diagram. Reference frames will be elaborated further","lastModifiedDate":"2022-03-25"},{"lineNumber":523,"author":{"gitId":"Musfirahe0556596"},"content":"\u003e down this section.","lastModifiedDate":"2022-03-25"},{"lineNumber":524,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":525,"author":{"gitId":"alanlowzies"},"content":"![Create Plan Sequence Diagram](uml/sequenceDiagrams/plans/images/createPlan-Part1.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":526,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":527,"author":{"gitId":"Musfirahe0556596"},"content":"**(Before Step 1)** The user\u0027s input (in this case will be a `plan /new` command) is obtained and parsed to obtain","lastModifiedDate":"2022-04-01"},{"lineNumber":528,"author":{"gitId":"Musfirahe0556596"},"content":"a `PlanCommand` object that contains the user\u0027s input.","lastModifiedDate":"2022-04-01"},{"lineNumber":529,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":530,"author":{"gitId":"Musfirahe0556596"},"content":"\u003e 🧾 For more information on the obtaining and parsing functionality of WerkIt!, please refer to","lastModifiedDate":"2022-04-01"},{"lineNumber":531,"author":{"gitId":"Musfirahe0556596"},"content":"\u003e [\"Parsing User Input and Getting the Right Command\"](#parsing-user-input-and-getting-the-right-command) section.","lastModifiedDate":"2022-04-01"},{"lineNumber":532,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":533,"author":{"gitId":"Musfirahe0556596"},"content":"**(Step 1)** When the `PlanCommand#execute()` method is called, it will identify","lastModifiedDate":"2022-04-01"},{"lineNumber":534,"author":{"gitId":"Musfirahe0556596"},"content":"that the plan action is of type `new`. Thus, it will subsequently call the","lastModifiedDate":"2022-04-01"},{"lineNumber":535,"author":{"gitId":"Musfirahe0556596"},"content":"`PlanList#createAndAddPlan(userArgument)` method to perform the creation of the plan.","lastModifiedDate":"2022-04-01"},{"lineNumber":536,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":537,"author":{"gitId":"Musfirahe0556596"},"content":"The following sequence diagram is the detailed procedure for Step 2\u0027s `PlanList#createAndAddPlan(userArgument)`:","lastModifiedDate":"2022-04-01"},{"lineNumber":538,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":539,"author":{"gitId":"alanlowzies"},"content":"![Create And Add Plan Detailed Sequence Diagram](uml/sequenceDiagrams/plans/images/createPlan-Part2.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":540,"author":{"gitId":"Musfirahe0556596"},"content":"\u003e 🧾 To improve the diagram\u0027s readability, logging-related and input-checking method calls, and exception throws in","lastModifiedDate":"2022-04-01"},{"lineNumber":541,"author":{"gitId":"Musfirahe0556596"},"content":"\u003e `PlanList#createAndAddPlan()` have been omitted.","lastModifiedDate":"2022-04-01"},{"lineNumber":542,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":543,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":544,"author":{"gitId":"Musfirahe0556596"},"content":"**(Before Steps 2.1 to 2.2)** The user argument parameter of the `PlanList#createAndAddPlan(userArgument)`","lastModifiedDate":"2022-04-01"},{"lineNumber":545,"author":{"gitId":"Musfirahe0556596"},"content":"method is parsed to obtain the following information required to create the `Plan` object:","lastModifiedDate":"2022-04-01"},{"lineNumber":546,"author":{"gitId":"Musfirahe0556596"},"content":"1. Name of the plan.","lastModifiedDate":"2022-03-30"},{"lineNumber":547,"author":{"gitId":"Musfirahe0556596"},"content":"2. Workout index numbers in the workout list separated by comma.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":548,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":549,"author":{"gitId":"Musfirahe0556596"},"content":"Once the information are obtained, the name of the plan to be created will be validated.","lastModifiedDate":"2022-04-01"},{"lineNumber":550,"author":{"gitId":"Musfirahe0556596"},"content":"This is to ensure all plan names are acceptable and unique in the application.","lastModifiedDate":"2022-03-30"},{"lineNumber":551,"author":{"gitId":"Musfirahe0556596"},"content":"If the plan name is invalid, an `InvalidPlanException` exception will be thrown.","lastModifiedDate":"2022-03-30"},{"lineNumber":552,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":553,"author":{"gitId":"Musfirahe0556596"},"content":"Subsequently, this `PlanList#createAndAddPlan()` method will find out the number of workouts","lastModifiedDate":"2022-04-01"},{"lineNumber":554,"author":{"gitId":"Musfirahe0556596"},"content":"to be added into the new plan. This is done in order to check that the number of workouts to be added into the new plan","lastModifiedDate":"2022-04-01"},{"lineNumber":555,"author":{"gitId":"Musfirahe0556596"},"content":"does not exceed 10 workouts, and there should minimally","lastModifiedDate":"2022-04-01"},{"lineNumber":556,"author":{"gitId":"Musfirahe0556596"},"content":"be 1 workout in a plan. If the new plan does not meet the minimum and maximum workout number requirement,","lastModifiedDate":"2022-03-30"},{"lineNumber":557,"author":{"gitId":"Musfirahe0556596"},"content":"an `InvalidPlanException` will be thrown.","lastModifiedDate":"2022-03-25"},{"lineNumber":558,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":559,"author":{"gitId":"Musfirahe0556596"},"content":"**(Steps 2.1 to 2.2)** An ArrayList of Workout object is created to store the workouts to be added into the new plan.","lastModifiedDate":"2022-04-01"},{"lineNumber":560,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":561,"author":{"gitId":"Musfirahe0556596"},"content":"**(Steps 2.3 to 2.4)** As the workout indexes in the user argument parameter (e.g. \"1, 2, 3\") is of type `String`, ","lastModifiedDate":"2022-04-01"},{"lineNumber":562,"author":{"gitId":"Musfirahe0556596"},"content":"the loop will split (by comma) and convert each number string into an `Integer`. ","lastModifiedDate":"2022-03-30"},{"lineNumber":563,"author":{"gitId":"Musfirahe0556596"},"content":"These workout indexes are also checked to ensure that they are within","lastModifiedDate":"2022-04-01"},{"lineNumber":564,"author":{"gitId":"Musfirahe0556596"},"content":"the application\u0027s workout list range.","lastModifiedDate":"2022-04-01"},{"lineNumber":565,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":566,"author":{"gitId":"Musfirahe0556596"},"content":"If the workout indexes are valid, the valid `Workout` object is fetched from the application\u0027s workout list based ","lastModifiedDate":"2022-04-01"},{"lineNumber":567,"author":{"gitId":"Musfirahe0556596"},"content":"on the workout index and then added into the `ArrayList` that was created in the previous step (Steps 2.1 to 2.2).","lastModifiedDate":"2022-04-01"},{"lineNumber":568,"author":{"gitId":"Musfirahe0556596"},"content":"The loop will continue until all workouts to be added in the new plan is added into that `ArrayList`.","lastModifiedDate":"2022-03-30"},{"lineNumber":569,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":570,"author":{"gitId":"Musfirahe0556596"},"content":"**(Steps 2.5 to 2.10)** With the valid plan name and the `ArrayList` containing the workouts to be added into the new plan, ","lastModifiedDate":"2022-04-01"},{"lineNumber":571,"author":{"gitId":"Musfirahe0556596"},"content":"a new `Plan` object can be created. However, before creating the `Plan` object, the `PlanList#createAndAddPlan()` method will ","lastModifiedDate":"2022-04-01"},{"lineNumber":572,"author":{"gitId":"Musfirahe0556596"},"content":"check that the new plan to be created does not contain the same workout order as any existing plans. If it does contain","lastModifiedDate":"2022-04-01"},{"lineNumber":573,"author":{"gitId":"Musfirahe0556596"},"content":"the same workout order as any existing plan, an `InvalidPlanException` exception will be thrown.","lastModifiedDate":"2022-04-01"},{"lineNumber":574,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":575,"author":{"gitId":"Musfirahe0556596"},"content":"If it is confirmed that the new plan does not contain","lastModifiedDate":"2022-04-01"},{"lineNumber":576,"author":{"gitId":"Musfirahe0556596"},"content":"the same workout order as any existing plan, a new `Plan` object is created.","lastModifiedDate":"2022-04-01"},{"lineNumber":577,"author":{"gitId":"Musfirahe0556596"},"content":"This new `Plan` object is then added to the application\u0027s plan list.","lastModifiedDate":"2022-04-01"},{"lineNumber":578,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":579,"author":{"gitId":"Musfirahe0556596"},"content":"**(Step 3)** The `PlanList#createAndAddPlan(userArgument)` method returns the new `Plan` object to `PlanCommand`.","lastModifiedDate":"2022-04-01"},{"lineNumber":580,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":581,"author":{"gitId":"Musfirahe0556596"},"content":"**(Steps 4 to 5)** Upon returning to the `PlanCommand` object, the `UI#printNewPlanCreatedMessage(newPlan)` is called","lastModifiedDate":"2022-04-01"},{"lineNumber":582,"author":{"gitId":"Musfirahe0556596"},"content":"to display the plan that has been created to the user via the terminal. The following is an example","lastModifiedDate":"2022-03-25"},{"lineNumber":583,"author":{"gitId":"Musfirahe0556596"},"content":"of a success plan creation message (new plan is called \"Grow My Muscles\"):","lastModifiedDate":"2022-03-30"},{"lineNumber":584,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-25"},{"lineNumber":585,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-25"},{"lineNumber":586,"author":{"gitId":"Musfirahe0556596"},"content":"Alright, the following plan has been created:","lastModifiedDate":"2022-03-25"},{"lineNumber":587,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":588,"author":{"gitId":"Musfirahe0556596"},"content":"\tGrow My Muscles","lastModifiedDate":"2022-03-25"},{"lineNumber":589,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":590,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-25"},{"lineNumber":591,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-25"},{"lineNumber":592,"author":{"gitId":"Musfirahe0556596"},"content":"**(Steps 6 to 7)** `FileManager#writeNewPlanToFile(newPlan)` is called to write the newly-created `Plan` ","lastModifiedDate":"2022-04-01"},{"lineNumber":593,"author":{"gitId":"Musfirahe0556596"},"content":"object\u0027s data into `plans.txt`, which is stored on the user\u0027s local filesystem.","lastModifiedDate":"2022-03-30"},{"lineNumber":594,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":595,"author":{"gitId":"Musfirahe0556596"},"content":"This completes the process of creating and adding a new plan to WerkIt!.","lastModifiedDate":"2022-04-01"},{"lineNumber":596,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":597,"author":{"gitId":"Musfirahe0556596"},"content":"---","lastModifiedDate":"2022-03-25"},{"lineNumber":598,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":599,"author":{"gitId":"Musfirahe0556596"},"content":"#### List Plans","lastModifiedDate":"2022-03-24"},{"lineNumber":600,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":601,"author":{"gitId":"Musfirahe0556596"},"content":"A summary of the general procedure of listing all plans in the application is as follows:","lastModifiedDate":"2022-03-30"},{"lineNumber":602,"author":{"gitId":"Musfirahe0556596"},"content":"1. User enters the command `plan /list`.","lastModifiedDate":"2022-03-30"},{"lineNumber":603,"author":{"gitId":"Musfirahe0556596"},"content":"2. A list of plan names is displayed to the user via the terminal.","lastModifiedDate":"2022-03-30"},{"lineNumber":604,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":605,"author":{"gitId":"Musfirahe0556596"},"content":"The following sequence diagram illustrates how the `plan /list` command works in greater detail:","lastModifiedDate":"2022-03-30"},{"lineNumber":606,"author":{"gitId":"Musfirahe0556596"},"content":"\u003e To simplify the sequence diagram, some method invocations that deemed to be trivial","lastModifiedDate":"2022-03-30"},{"lineNumber":607,"author":{"gitId":"Musfirahe0556596"},"content":"\u003e have been removed from the sequence diagram. Reference frames will be elaborated further","lastModifiedDate":"2022-03-30"},{"lineNumber":608,"author":{"gitId":"Musfirahe0556596"},"content":"\u003e down this section.","lastModifiedDate":"2022-03-30"},{"lineNumber":609,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":610,"author":{"gitId":"alanlowzies"},"content":"![List Plan Sequence Diagram](uml/sequenceDiagrams/plans/images/listPlan.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":611,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":612,"author":{"gitId":"Musfirahe0556596"},"content":"**(Before Step 1)** The user\u0027s input (in this case will be a `plan /list` command) is obtained and parsed to obtain","lastModifiedDate":"2022-04-01"},{"lineNumber":613,"author":{"gitId":"Musfirahe0556596"},"content":"a `PlanCommand` object that contains the user\u0027s input.","lastModifiedDate":"2022-04-01"},{"lineNumber":614,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":615,"author":{"gitId":"Musfirahe0556596"},"content":"\u003e 🧾 For more information on the obtaining and parsing functionality of WerkIt!, please refer to","lastModifiedDate":"2022-04-01"},{"lineNumber":616,"author":{"gitId":"Musfirahe0556596"},"content":"\u003e [\"Parsing User Input and Getting the Right Command\"](#parsing-user-input-and-getting-the-right-command) section.","lastModifiedDate":"2022-04-01"},{"lineNumber":617,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":618,"author":{"gitId":"Musfirahe0556596"},"content":"**(Steps 1 to 2)** When the `PlanCommand#execute()` method is called, it will identify","lastModifiedDate":"2022-04-01"},{"lineNumber":619,"author":{"gitId":"Musfirahe0556596"},"content":"that the plan action is of type `list`. Thus, it will subsequently call the","lastModifiedDate":"2022-04-01"},{"lineNumber":620,"author":{"gitId":"Musfirahe0556596"},"content":"`PlanList#listAllPlan()` method to display all available plan names.","lastModifiedDate":"2022-04-01"},{"lineNumber":621,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":622,"author":{"gitId":"Musfirahe0556596"},"content":"**(Step 3)** The `PlanList#listAllPlan()` method will first check if the application\u0027s plan list is empty.","lastModifiedDate":"2022-04-01"},{"lineNumber":623,"author":{"gitId":"Musfirahe0556596"},"content":"If it is, it will display to the user that no plan has been created yet.","lastModifiedDate":"2022-04-01"},{"lineNumber":624,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":625,"author":{"gitId":"Musfirahe0556596"},"content":"**(Step 4)** The `PlanList#listAllPlan()` method will then loop through the application\u0027s plan list and show","lastModifiedDate":"2022-04-01"},{"lineNumber":626,"author":{"gitId":"Musfirahe0556596"},"content":"the names of the plan to the user. The following is an example of what is ","lastModifiedDate":"2022-04-01"},{"lineNumber":627,"author":{"gitId":"Musfirahe0556596"},"content":"displayed to the user when the `plan /list` command is entered while the application\u0027s plan list is not empty:","lastModifiedDate":"2022-03-30"},{"lineNumber":628,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":629,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-30"},{"lineNumber":630,"author":{"gitId":"Musfirahe0556596"},"content":"Here are all your plan(s).","lastModifiedDate":"2022-03-30"},{"lineNumber":631,"author":{"gitId":"Musfirahe0556596"},"content":"To view each plan in detail, enter","lastModifiedDate":"2022-03-30"},{"lineNumber":632,"author":{"gitId":"Musfirahe0556596"},"content":"\u0027plan /details \u003cplan number in list\u003e\u0027.","lastModifiedDate":"2022-03-30"},{"lineNumber":633,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":634,"author":{"gitId":"Musfirahe0556596"},"content":"1. Test","lastModifiedDate":"2022-03-30"},{"lineNumber":635,"author":{"gitId":"Musfirahe0556596"},"content":"2. Grow My Muscles","lastModifiedDate":"2022-03-30"},{"lineNumber":636,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-30"},{"lineNumber":637,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":638,"author":{"gitId":"Musfirahe0556596"},"content":"**(Steps 5 to 6)** The `PlanList#listAllPlan()` method returns to the `PlanCommand` object","lastModifiedDate":"2022-04-01"},{"lineNumber":639,"author":{"gitId":"Musfirahe0556596"},"content":"and the `PlanCommand` object returns to the `WerkIt` object.","lastModifiedDate":"2022-03-30"},{"lineNumber":640,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":641,"author":{"gitId":"Musfirahe0556596"},"content":"This completes the process of displaying all plans in WerkIt!.","lastModifiedDate":"2022-03-30"},{"lineNumber":642,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":643,"author":{"gitId":"Musfirahe0556596"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":644,"author":{"gitId":"Musfirahe0556596"},"content":"### Schedule","lastModifiedDate":"2022-03-24"},{"lineNumber":645,"author":{"gitId":"emilysim00"},"content":"User are able to create a 7-day workout plan schedule using the WerkIt application. For each day, user are only allowed","lastModifiedDate":"2022-03-30"},{"lineNumber":646,"author":{"gitId":"emilysim00"},"content":"to schedule 1 workout plan. ","lastModifiedDate":"2022-03-30"},{"lineNumber":647,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":648,"author":{"gitId":"emilysim00"},"content":"When WerkIt is running, the `WerkIt` class will keep prompting the user to enter command through the","lastModifiedDate":"2022-03-30"},{"lineNumber":649,"author":{"gitId":"emilysim00"},"content":"`WerkIt#startContinuousUserPrompt()` method. After the user has entered command, The `UI#getUserInput()` method in `UI`","lastModifiedDate":"2022-03-30"},{"lineNumber":650,"author":{"gitId":"emilysim00"},"content":"class will catch the user input, and it will be sent to `Parser#parseUserInput(String userInput)` method to analyse the","lastModifiedDate":"2022-03-30"},{"lineNumber":651,"author":{"gitId":"emilysim00"},"content":"user\u0027s command. ","lastModifiedDate":"2022-03-30"},{"lineNumber":652,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":653,"author":{"gitId":"emilysim00"},"content":"If the user\u0027s command type is schedule, the `Parser#parseUserInput(String userInput)` method will parse the \u0027schedule\u0027 ","lastModifiedDate":"2022-03-30"},{"lineNumber":654,"author":{"gitId":"emilysim00"},"content":"base word and proceed to create schedule related command using `Parser#createScheduleCommand(String userInput)` method.","lastModifiedDate":"2022-03-30"},{"lineNumber":655,"author":{"gitId":"emilysim00"},"content":"The following table shows the schedule commands that WerkIt! are able to process","lastModifiedDate":"2022-03-30"},{"lineNumber":656,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":657,"author":{"gitId":"emilysim00"},"content":"| Command                                                             | `\u003cuserAction\u003e` | Parameters Meaning                                                                                                                                   |","lastModifiedDate":"2022-03-30"},{"lineNumber":658,"author":{"gitId":"emilysim00"},"content":"|---------------------------------------------------------------------|----------------|------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-30"},{"lineNumber":659,"author":{"gitId":"emilysim00"},"content":"| [schedule /update `\u003cday number\u003e` `\u003cplan number\u003e`](#update-schedule) | update         | `\u003cday number\u003e` Number representing the day. \u003cbr/\u003e`\u003cplan number\u003e` Index of the plan stored in planList. This is the plan to be scheduled for the day. |","lastModifiedDate":"2022-03-30"},{"lineNumber":660,"author":{"gitId":"emilysim00"},"content":"| [schedule /list](#view-schedule)                                    | list           |                                                                                                                                                      |","lastModifiedDate":"2022-03-30"},{"lineNumber":661,"author":{"gitId":"emilysim00"},"content":"| [schedule /clear `\u003cday number\u003e`](#clear-schedule-for-a-day)         | clear          | `\u003cday number\u003e` Number representing the day.                                                                                                          |","lastModifiedDate":"2022-03-30"},{"lineNumber":662,"author":{"gitId":"emilysim00"},"content":"| [schedule /clearall](#clear-schedule-for-the-week)                  | clearall       |                                                                                                                                                      |","lastModifiedDate":"2022-03-30"},{"lineNumber":663,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":664,"author":{"gitId":"emilysim00"},"content":"The `\u003cday number\u003e` range from 1 to 7. The meaning of each day number is explained in the table below.","lastModifiedDate":"2022-03-30"},{"lineNumber":665,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":666,"author":{"gitId":"emilysim00"},"content":"| Day Number | Meaning   |","lastModifiedDate":"2022-03-30"},{"lineNumber":667,"author":{"gitId":"emilysim00"},"content":"|------------|-----------|","lastModifiedDate":"2022-03-30"},{"lineNumber":668,"author":{"gitId":"emilysim00"},"content":"| 1          | Monday    |","lastModifiedDate":"2022-03-30"},{"lineNumber":669,"author":{"gitId":"emilysim00"},"content":"| 2          | Tuesday   |","lastModifiedDate":"2022-03-30"},{"lineNumber":670,"author":{"gitId":"emilysim00"},"content":"| 3          | Wednesday |","lastModifiedDate":"2022-03-30"},{"lineNumber":671,"author":{"gitId":"emilysim00"},"content":"| 4          | Thursday  |","lastModifiedDate":"2022-03-30"},{"lineNumber":672,"author":{"gitId":"emilysim00"},"content":"| 5          | Friday    |","lastModifiedDate":"2022-03-30"},{"lineNumber":673,"author":{"gitId":"emilysim00"},"content":"| 6          | Saturday  |","lastModifiedDate":"2022-03-30"},{"lineNumber":674,"author":{"gitId":"emilysim00"},"content":"| 7          | Sunday    |","lastModifiedDate":"2022-03-30"},{"lineNumber":675,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":676,"author":{"gitId":"emilysim00"},"content":"This method will further evaluate the `\u003cuserAction\u003e` and call the constructor of `ScheduleCommand` class by ","lastModifiedDate":"2022-03-30"},{"lineNumber":677,"author":{"gitId":"emilysim00"},"content":"passing relevant parameters related to schedule to the constructor. If the `\u003cuserAction\u003e` is null or incorrect, ","lastModifiedDate":"2022-03-30"},{"lineNumber":678,"author":{"gitId":"emilysim00"},"content":"an `InvalidCommandException` will be thrown.","lastModifiedDate":"2022-03-31"},{"lineNumber":679,"author":{"gitId":"emilysim00"},"content":"If the `\u003cparameters\u003e` of certain commands are not specified or met, an `InvalidScheduleException` will be thrown.","lastModifiedDate":"2022-03-31"},{"lineNumber":680,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":681,"author":{"gitId":"emilysim00"},"content":"---","lastModifiedDate":"2022-03-30"},{"lineNumber":682,"author":{"gitId":"emilysim00"},"content":"#### Update Schedule","lastModifiedDate":"2022-03-30"},{"lineNumber":683,"author":{"gitId":"emilysim00"},"content":"A summary of the general procedure of updating a plan for a particular day to the schedule in WerkIt! is as follows:","lastModifiedDate":"2022-03-30"},{"lineNumber":684,"author":{"gitId":"emilysim00"},"content":"1. User enters the command `schedule /update \u003cday number\u003e \u003cplan number\u003e`.","lastModifiedDate":"2022-03-31"},{"lineNumber":685,"author":{"gitId":"emilysim00"},"content":"2. If there are no plan being scheduled for the day, a new Day object is created and stored in the application.","lastModifiedDate":"2022-03-30"},{"lineNumber":686,"author":{"gitId":"emilysim00"},"content":"   If there is an existing plan scheduled for that particular day, the Day object that had already been created,","lastModifiedDate":"2022-03-30"},{"lineNumber":687,"author":{"gitId":"emilysim00"},"content":"   will then be updated to store the latest plan scheduled for the day.","lastModifiedDate":"2022-03-30"},{"lineNumber":688,"author":{"gitId":"emilysim00"},"content":"3. The success response is printed to the user through the terminal.","lastModifiedDate":"2022-03-30"},{"lineNumber":689,"author":{"gitId":"emilysim00"},"content":"4. The Day object data is written to the resource file `schedule.txt`.","lastModifiedDate":"2022-03-31"},{"lineNumber":690,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":691,"author":{"gitId":"emilysim00"},"content":"The following sequence illustrates how the schedule /update command works in greater detail:","lastModifiedDate":"2022-03-30"},{"lineNumber":692,"author":{"gitId":"emilysim00"},"content":"\u003e To simplify the sequence diagram, some method invocations that deemed to be trivial","lastModifiedDate":"2022-03-30"},{"lineNumber":693,"author":{"gitId":"emilysim00"},"content":"\u003e have been removed from the sequence diagram. Reference frames will be elaborated further","lastModifiedDate":"2022-03-30"},{"lineNumber":694,"author":{"gitId":"emilysim00"},"content":"\u003e down this section.","lastModifiedDate":"2022-03-30"},{"lineNumber":695,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":696,"author":{"gitId":"alanlowzies"},"content":"![Update Schedule Sequence Diagram](uml/sequenceDiagrams/schedule/images/updateSchedule.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":697,"author":{"gitId":"emilysim00"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":698,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":699,"author":{"gitId":"emilysim00"},"content":"(Steps 1 to 3) The program waits for the user\u0027s input, which in this case,","lastModifiedDate":"2022-03-30"},{"lineNumber":700,"author":{"gitId":"emilysim00"},"content":"is the schedule `/update \u003cday number\u003e \u003cplan number\u003e` command.","lastModifiedDate":"2022-03-31"},{"lineNumber":701,"author":{"gitId":"emilysim00"},"content":"An example of a valid command would be `schedule /update 1 1`.","lastModifiedDate":"2022-03-31"},{"lineNumber":702,"author":{"gitId":"emilysim00"},"content":"After the user input is received, the `WerkIt` object will call the `Parser#parseUserInput(userInput)` method","lastModifiedDate":"2022-04-01"},{"lineNumber":703,"author":{"gitId":"emilysim00"},"content":"to parse the user input. A return `ScheduleCommand` object is obtained from the method.","lastModifiedDate":"2022-03-31"},{"lineNumber":704,"author":{"gitId":"emilysim00"},"content":"This `ScheduleCommand` object is upcasted to a `Command` object on return to the WerkIt object.","lastModifiedDate":"2022-03-31"},{"lineNumber":705,"author":{"gitId":"emilysim00"},"content":"The schedule command is being executed by calling the `ScheduleCommand#execute()` method.","lastModifiedDate":"2022-04-01"},{"lineNumber":706,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":707,"author":{"gitId":"emilysim00"},"content":"Steps 4 and 5 are explained in greater details in the following sequence diagram:","lastModifiedDate":"2022-04-01"},{"lineNumber":708,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":709,"author":{"gitId":"alanlowzies"},"content":"![updateScheduleDetails](uml/sequenceDiagrams/schedule/images/updateScheduleDetails.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":710,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":711,"author":{"gitId":"emilysim00"},"content":"(Steps 4.1 to 4.2) The `DayList#updateDay(userArgument)` method will be called to update/add a plan for a particular day in the schedule ","lastModifiedDate":"2022-04-01"},{"lineNumber":712,"author":{"gitId":"emilysim00"},"content":"stated by the user. It will fist call the `String#split(\" \")` method to separate out the `userArgument` given by the user. Upon, ","lastModifiedDate":"2022-04-01"},{"lineNumber":713,"author":{"gitId":"emilysim00"},"content":"splitting of the whitespaces in `userArgument`, it will then check if the `userArgument` is valid. If it is invalid, an ","lastModifiedDate":"2022-03-30"},{"lineNumber":714,"author":{"gitId":"emilysim00"},"content":"Exception would be thrown to the user and following the termination of the process (step 4.3).","lastModifiedDate":"2022-04-01"},{"lineNumber":715,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":716,"author":{"gitId":"emilysim00"},"content":"(Steps 4.5 to 4.8) After splitting and checking the validity of `userArgument`, variables `userArgument[0]` representing","lastModifiedDate":"2022-04-01"},{"lineNumber":717,"author":{"gitId":"emilysim00"},"content":"day number and `userArgument[1]` representing the plan index of the plan stored in the planList are obtained. Both the ","lastModifiedDate":"2022-03-30"},{"lineNumber":718,"author":{"gitId":"emilysim00"},"content":"variables are then converted from data type string to integer. In addition, there is a check executed on both the converted ","lastModifiedDate":"2022-03-30"},{"lineNumber":719,"author":{"gitId":"emilysim00"},"content":"day number and plan number to ensure that they are valid. This check is done so by calling the `DayList#isDayValid(DayNumber)` and","lastModifiedDate":"2022-04-01"},{"lineNumber":720,"author":{"gitId":"emilysim00"},"content":"`DayList#isPlanValid(planNumber)` methods respectively.","lastModifiedDate":"2022-04-01"},{"lineNumber":721,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":722,"author":{"gitId":"emilysim00"},"content":"(Steps 4.9 and 4.11) If the day number or plan number is not valid, an `InvalidScheduleException` would be thrown to the user,","lastModifiedDate":"2022-04-01"},{"lineNumber":723,"author":{"gitId":"emilysim00"},"content":"and the entire updating of a plan for a particular day in the schedule process is aborted.","lastModifiedDate":"2022-03-30"},{"lineNumber":724,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":725,"author":{"gitId":"emilysim00"},"content":"(Steps 4.13 and 4.14) `PlanList#getPlanDisplayList()` method is called to find and return the hash value of the plan number, ","lastModifiedDate":"2022-04-01"},{"lineNumber":726,"author":{"gitId":"emilysim00"},"content":"`planToAddKey:String` to be scheduled for a particular day. The `planToAddKey` is used to get the `plan` object in the ","lastModifiedDate":"2022-03-30"},{"lineNumber":727,"author":{"gitId":"emilysim00"},"content":"planList by calling the `PlanList#getPlanFromKey` (steps 4.15 to 4.16).","lastModifiedDate":"2022-04-01"},{"lineNumber":728,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":729,"author":{"gitId":"emilysim00"},"content":"(Steps 4.17 to 4.18) Once the `Plan` object is retrieved, if there are no plan being scheduled for the day, ","lastModifiedDate":"2022-04-01"},{"lineNumber":730,"author":{"gitId":"emilysim00"},"content":"a new `Day` object is created and stored in the application.","lastModifiedDate":"2022-04-01"},{"lineNumber":731,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":732,"author":{"gitId":"emilysim00"},"content":"(Steps 4.19 to 4.20) However, if there is an existing plan scheduled for that particular day, the `Day` object that ","lastModifiedDate":"2022-04-01"},{"lineNumber":733,"author":{"gitId":"emilysim00"},"content":"had already been created, will then be updated to store the latest plan scheduled for the day.","lastModifiedDate":"2022-03-30"},{"lineNumber":734,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":735,"author":{"gitId":"emilysim00"},"content":"(Steps 6 and 7) After successfully created/updated the Day object, the `UI#printNewSchedule(newDay)` method","lastModifiedDate":"2022-04-01"},{"lineNumber":736,"author":{"gitId":"emilysim00"},"content":"will be called to display the day and the corresponding plan scheduled for it via the terminal. The following is an","lastModifiedDate":"2022-03-30"},{"lineNumber":737,"author":{"gitId":"emilysim00"},"content":"example of the message after the user had successfully scheduled a plan for the day (e.g. `schedule /update 1 1`):","lastModifiedDate":"2022-03-31"},{"lineNumber":738,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":739,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-30"},{"lineNumber":740,"author":{"gitId":"emilysim00"},"content":"Alright, the following plan schedule has been created:","lastModifiedDate":"2022-03-30"},{"lineNumber":741,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":742,"author":{"gitId":"emilysim00"},"content":"Monday -- arms","lastModifiedDate":"2022-03-30"},{"lineNumber":743,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":744,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-30"},{"lineNumber":745,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":746,"author":{"gitId":"emilysim00"},"content":"(Step 8) Lastly, before the `ScheduleCommand` object is discarded, the `FileManager#rewriteAllDaysScheduleToFile(dayList)`","lastModifiedDate":"2022-04-01"},{"lineNumber":747,"author":{"gitId":"emilysim00"},"content":"is called to rewrite the `schedule.txt` file according to the newly modified application\u0027s day list.","lastModifiedDate":"2022-03-31"},{"lineNumber":748,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":749,"author":{"gitId":"emilysim00"},"content":"This completes the process of scheduling a plan for a particular day in WerkIt!","lastModifiedDate":"2022-03-30"},{"lineNumber":750,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":751,"author":{"gitId":"emilysim00"},"content":"##### Design considerations for update schedule","lastModifiedDate":"2022-03-30"},{"lineNumber":752,"author":{"gitId":"emilysim00"},"content":"###### Day Object","lastModifiedDate":"2022-03-30"},{"lineNumber":753,"author":{"gitId":"emilysim00"},"content":"For the application, schedule is defined to be a 7-days workout plan. The days that do not have any plan scheduled","lastModifiedDate":"2022-03-31"},{"lineNumber":754,"author":{"gitId":"emilysim00"},"content":"would be considered a rest day for the user. Therefore, when implementing the creation of `Day` object, a total of 7","lastModifiedDate":"2022-03-31"},{"lineNumber":755,"author":{"gitId":"emilysim00"},"content":"`Day` objects at most would be created and be stored in the dayList with size 7.","lastModifiedDate":"2022-03-31"},{"lineNumber":756,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":757,"author":{"gitId":"emilysim00"},"content":"Initially, if no plan has been scheduled for a particular day, the corresponding `Day` object would not be created.","lastModifiedDate":"2022-04-01"},{"lineNumber":758,"author":{"gitId":"emilysim00"},"content":"For example, if no plan is being scheduled for Monday, there will be no `Day` object created for Monday and the dayList","lastModifiedDate":"2022-04-01"},{"lineNumber":759,"author":{"gitId":"emilysim00"},"content":"with index 0 will not have any `Day` object being stored.","lastModifiedDate":"2022-03-30"},{"lineNumber":760,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":761,"author":{"gitId":"emilysim00"},"content":"If `dayList[0]` contains a `Day` object, it would mean that the user scheduled a plan on Monday. If the","lastModifiedDate":"2022-03-31"},{"lineNumber":762,"author":{"gitId":"emilysim00"},"content":"user were to execute the `schedule /update` command again to update the plan to be scheduled for Monday, the application","lastModifiedDate":"2022-03-31"},{"lineNumber":763,"author":{"gitId":"emilysim00"},"content":"will update the content in the Day object stored in `dayList[0]`. It will not recreate a `Day` object for Monday","lastModifiedDate":"2022-04-01"},{"lineNumber":764,"author":{"gitId":"emilysim00"},"content":"to store the new plan.","lastModifiedDate":"2022-03-30"},{"lineNumber":765,"author":{"gitId":"emilysim00"},"content":"---","lastModifiedDate":"2022-03-30"},{"lineNumber":766,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":767,"author":{"gitId":"emilysim00"},"content":"#### View Schedule","lastModifiedDate":"2022-03-30"},{"lineNumber":768,"author":{"gitId":"emilysim00"},"content":"To view the schedule in WerkIt! User can enter the command `schedule /list`.","lastModifiedDate":"2022-03-31"},{"lineNumber":769,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":770,"author":{"gitId":"emilysim00"},"content":"A schedule in the WerkIt! refers to a 7-days workout plan schedule. ","lastModifiedDate":"2022-03-31"},{"lineNumber":771,"author":{"gitId":"emilysim00"},"content":"For example, a plan named \"leg day\" which consists of 3 workouts \"5 squats, 5 lunges, 5 squats\"","lastModifiedDate":"2022-03-31"},{"lineNumber":772,"author":{"gitId":"emilysim00"},"content":"can be added into the schedule by entering `schedule /update \u003cday number\u003e \u003cplan number\u003e` command. Hence, \"leg day\" plan","lastModifiedDate":"2022-03-31"},{"lineNumber":773,"author":{"gitId":"emilysim00"},"content":"can be schedule on Monday by the command of `schedule /upate 1 1`. To view the plan in the schedule, user can enter the","lastModifiedDate":"2022-03-31"},{"lineNumber":774,"author":{"gitId":"emilysim00"},"content":"command `schedule /list`.","lastModifiedDate":"2022-03-31"},{"lineNumber":775,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":776,"author":{"gitId":"emilysim00"},"content":"The following sequence illustrates how the `schedule /list` command works in greater detail:","lastModifiedDate":"2022-03-31"},{"lineNumber":777,"author":{"gitId":"emilysim00"},"content":"\u003e To simplify the sequence diagram, some method invocations that deemed to be trivial","lastModifiedDate":"2022-03-30"},{"lineNumber":778,"author":{"gitId":"emilysim00"},"content":"\u003e have been removed from the sequence diagram. Reference frames will be elaborated further","lastModifiedDate":"2022-03-30"},{"lineNumber":779,"author":{"gitId":"emilysim00"},"content":"\u003e down this section.","lastModifiedDate":"2022-03-30"},{"lineNumber":780,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":781,"author":{"gitId":"alanlowzies"},"content":"![ListSchedule](uml/sequenceDiagrams/schedule/images/listSchedule.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":782,"author":{"gitId":"emilysim00"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":783,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":784,"author":{"gitId":"emilysim00"},"content":"(Steps 1 to 3) The program waits for the user\u0027s input, which in this case,","lastModifiedDate":"2022-03-30"},{"lineNumber":785,"author":{"gitId":"emilysim00"},"content":"is the `schedule /list` command. Once the command is entered, the UI class will return","lastModifiedDate":"2022-03-31"},{"lineNumber":786,"author":{"gitId":"emilysim00"},"content":"the user input in a String object to the `WerkIt` object. After the user input is received, the WerkIt object will ","lastModifiedDate":"2022-04-01"},{"lineNumber":787,"author":{"gitId":"emilysim00"},"content":"call the `Parser#parseUserInput(userInput)` method to parse the user input. ","lastModifiedDate":"2022-04-01"},{"lineNumber":788,"author":{"gitId":"emilysim00"},"content":"A return `ScheduleCommand` object is obtained from the method.","lastModifiedDate":"2022-04-01"},{"lineNumber":789,"author":{"gitId":"emilysim00"},"content":"This `ScheduleCommand` object is upcasted to a `Command` object on return to the `WerkIt` object. ","lastModifiedDate":"2022-04-01"},{"lineNumber":790,"author":{"gitId":"emilysim00"},"content":"The schedule command is being executed by calling the `ScheduleCommand#execute()` method.","lastModifiedDate":"2022-04-01"},{"lineNumber":791,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":792,"author":{"gitId":"emilysim00"},"content":"(Step 4) Since the command passed in by the user is `schedule /list`, the application will execute the `DayList#printSchedule()` method.","lastModifiedDate":"2022-04-01"},{"lineNumber":793,"author":{"gitId":"emilysim00"},"content":"No parameters are needed to be passed in the method as the method loop through the scheduleList, which stores all the plan names","lastModifiedDate":"2022-03-30"},{"lineNumber":794,"author":{"gitId":"emilysim00"},"content":"scheduled for the individual days.","lastModifiedDate":"2022-03-30"},{"lineNumber":795,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":796,"author":{"gitId":"emilysim00"},"content":"(Steps 5 and 6) To ensure the printing of the schedule is formatted properly with a common standard, when `DayList#printSchedule()`","lastModifiedDate":"2022-04-01"},{"lineNumber":797,"author":{"gitId":"emilysim00"},"content":"method is called, it will invoke a for loop to pad the plan name for all the plans in the scheduleList","lastModifiedDate":"2022-03-30"},{"lineNumber":798,"author":{"gitId":"emilysim00"},"content":"with spaces by calling the `DayList#padWithSpaces(planForDay)` method. This method will pad both the front and back of the","lastModifiedDate":"2022-03-31"},{"lineNumber":799,"author":{"gitId":"emilysim00"},"content":"plan name with spaces. Total characters that the padding and the plan name combined should not exceed 30 characters.","lastModifiedDate":"2022-03-30"},{"lineNumber":800,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":801,"author":{"gitId":"emilysim00"},"content":"(Step 7) Upon the successful execution of the `DayList#printSchedule()` method, the plan scheduled on each of the day","lastModifiedDate":"2022-04-01"},{"lineNumber":802,"author":{"gitId":"emilysim00"},"content":"will be display on the console to the user. An expected outcome of the `schedule /list` command would be:","lastModifiedDate":"2022-03-31"},{"lineNumber":803,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":804,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":805,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-30"},{"lineNumber":806,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":807,"author":{"gitId":"emilysim00"},"content":"                         WORKOUT SCHEDULE","lastModifiedDate":"2022-03-30"},{"lineNumber":808,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-30"},{"lineNumber":809,"author":{"gitId":"emilysim00"},"content":"     Day       |            Plan Name","lastModifiedDate":"2022-03-30"},{"lineNumber":810,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-30"},{"lineNumber":811,"author":{"gitId":"emilysim00"},"content":"      Monday   |              arms                          ","lastModifiedDate":"2022-03-30"},{"lineNumber":812,"author":{"gitId":"emilysim00"},"content":"     Tuesday   |            rest day                      ","lastModifiedDate":"2022-03-30"},{"lineNumber":813,"author":{"gitId":"emilysim00"},"content":"   Wednesday   |            leg day                      ","lastModifiedDate":"2022-03-30"},{"lineNumber":814,"author":{"gitId":"emilysim00"},"content":"    Thursday   |            rest day                      ","lastModifiedDate":"2022-03-30"},{"lineNumber":815,"author":{"gitId":"emilysim00"},"content":"      Friday   |            rest day                      ","lastModifiedDate":"2022-03-30"},{"lineNumber":816,"author":{"gitId":"emilysim00"},"content":"    Saturday   |            leg day                      ","lastModifiedDate":"2022-03-30"},{"lineNumber":817,"author":{"gitId":"emilysim00"},"content":"      Sunday   |            rest day                      ","lastModifiedDate":"2022-03-30"},{"lineNumber":818,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":819,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-30"},{"lineNumber":820,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":821,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":822,"author":{"gitId":"emilysim00"},"content":"By default, if no plan is being scheduled for any of the day, the day is to be considered as a rest day for the user.","lastModifiedDate":"2022-03-30"},{"lineNumber":823,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":824,"author":{"gitId":"emilysim00"},"content":"---","lastModifiedDate":"2022-03-30"},{"lineNumber":825,"author":{"gitId":"emilysim00"},"content":"#### Clear Schedule For A Day","lastModifiedDate":"2022-03-30"},{"lineNumber":826,"author":{"gitId":"emilysim00"},"content":"A summary of the general procedure of clearing a plan scheduled for a particular day of the schedule in WerkIt! is as follows:","lastModifiedDate":"2022-04-01"},{"lineNumber":827,"author":{"gitId":"emilysim00"},"content":"1. User enters the command `schedule /clear \u003cday number\u003e`.","lastModifiedDate":"2022-03-31"},{"lineNumber":828,"author":{"gitId":"emilysim00"},"content":"2. The application will locate the index in the DayList which stores the corresponding `Day` object.","lastModifiedDate":"2022-03-31"},{"lineNumber":829,"author":{"gitId":"emilysim00"},"content":"   This `Day` object will then be deleted from the DayList. For example, if `schedule /clear 1` command is entered,","lastModifiedDate":"2022-03-31"},{"lineNumber":830,"author":{"gitId":"emilysim00"},"content":"   the index where the `Day` object storing information of the plan scheduled for Monday would be store in index 0,","lastModifiedDate":"2022-03-31"},{"lineNumber":831,"author":{"gitId":"emilysim00"},"content":"   (day number -1), of the DayList.","lastModifiedDate":"2022-03-30"},{"lineNumber":832,"author":{"gitId":"emilysim00"},"content":"3. DayList[day number - 1] would become null after the command is successfully being executed.","lastModifiedDate":"2022-03-30"},{"lineNumber":833,"author":{"gitId":"emilysim00"},"content":"4. The success response is printed to the user through the terminal.","lastModifiedDate":"2022-03-30"},{"lineNumber":834,"author":{"gitId":"emilysim00"},"content":"5. The `schedule.txt` will also be rewritten to reflect the changes. ","lastModifiedDate":"2022-03-31"},{"lineNumber":835,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":836,"author":{"gitId":"emilysim00"},"content":"The following sequence illustrates how the `schedule /clear` command works in greater detail:","lastModifiedDate":"2022-03-31"},{"lineNumber":837,"author":{"gitId":"emilysim00"},"content":"\u003e To simplify the sequence diagram, some method invocations that deemed to be trivial","lastModifiedDate":"2022-03-30"},{"lineNumber":838,"author":{"gitId":"emilysim00"},"content":"\u003e have been removed from the sequence diagram. Reference frames will be elaborated further","lastModifiedDate":"2022-03-30"},{"lineNumber":839,"author":{"gitId":"emilysim00"},"content":"\u003e down this section.","lastModifiedDate":"2022-03-30"},{"lineNumber":840,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":841,"author":{"gitId":"alanlowzies"},"content":"![ClearSchedule](uml/sequenceDiagrams/schedule/images/clearSchedule.png) ","lastModifiedDate":"2022-03-31"},{"lineNumber":842,"author":{"gitId":"emilysim00"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":843,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":844,"author":{"gitId":"emilysim00"},"content":"(Steps 1 to 3) The program waits for the user\u0027s input, which in this case,","lastModifiedDate":"2022-03-30"},{"lineNumber":845,"author":{"gitId":"emilysim00"},"content":"is the `schedule /clear \u003cday number\u003e` command. An example of a valid command would be `schedule \\clear 1`","lastModifiedDate":"2022-03-31"},{"lineNumber":846,"author":{"gitId":"emilysim00"},"content":"Once the command is entered, the UI class will return the user input in a `String` object to the `WerkIt` object.","lastModifiedDate":"2022-04-01"},{"lineNumber":847,"author":{"gitId":"emilysim00"},"content":"After the user input is received, the WerkIt object will call the `Parser#parseUserInput(userInput)` method","lastModifiedDate":"2022-04-01"},{"lineNumber":848,"author":{"gitId":"emilysim00"},"content":"to parse the user input. A return `ScheduleCommand` object is obtained from the method.","lastModifiedDate":"2022-04-01"},{"lineNumber":849,"author":{"gitId":"emilysim00"},"content":"This `ScheduleCommand` object is upcasted to a `Command` object on return to the `WerkIt` object.","lastModifiedDate":"2022-04-01"},{"lineNumber":850,"author":{"gitId":"emilysim00"},"content":"The schedule command is being executed by calling the `ScheduleCommand#execute()` method.","lastModifiedDate":"2022-04-01"},{"lineNumber":851,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":852,"author":{"gitId":"emilysim00"},"content":"(Step 4) Since the command entered is `schedule /clear \u003cday number\u003e`, the `DayList#clearDayPlan(userArgument)` method will","lastModifiedDate":"2022-04-01"},{"lineNumber":853,"author":{"gitId":"emilysim00"},"content":"be called. This method will first convert the userArgument to an Integer data type (steps 5 and 6) and will then call","lastModifiedDate":"2022-04-01"},{"lineNumber":854,"author":{"gitId":"emilysim00"},"content":"the `DayList#isDayValid(dayNumber)` method to check whether the day number entered by the user is valid (step 7). ","lastModifiedDate":"2022-04-01"},{"lineNumber":855,"author":{"gitId":"emilysim00"},"content":"If the day number falls within the range of 1 to 7 then it is considered a valid day else ","lastModifiedDate":"2022-04-01"},{"lineNumber":856,"author":{"gitId":"emilysim00"},"content":"an `InvalidScheduleException` would be thrown to the user, and the entire clearing of plan for a ","lastModifiedDate":"2022-04-01"},{"lineNumber":857,"author":{"gitId":"emilysim00"},"content":"particular day in the schedule process is aborted.","lastModifiedDate":"2022-04-01"},{"lineNumber":858,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":859,"author":{"gitId":"emilysim00"},"content":"(Steps 9 and 10) Upon checking the validity of the day number, the application will then delete the `Day` object that ","lastModifiedDate":"2022-04-01"},{"lineNumber":860,"author":{"gitId":"emilysim00"},"content":"stores the plan details for the specified day in the user command. Once, the `Day` object is successfully deleted, the ","lastModifiedDate":"2022-03-30"},{"lineNumber":861,"author":{"gitId":"emilysim00"},"content":"`DayList#convertDayNumberToDay(dayNumber)` method will be called. As the method name suggests, this method will ","lastModifiedDate":"2022-04-01"},{"lineNumber":862,"author":{"gitId":"emilysim00"},"content":"convert the day number to its corresponding meaning. ","lastModifiedDate":"2022-04-01"},{"lineNumber":863,"author":{"gitId":"emilysim00"},"content":"For example, day number 1 will be converted to Monday. The purpose of this method is to ","lastModifiedDate":"2022-04-01"},{"lineNumber":864,"author":{"gitId":"emilysim00"},"content":"make the success message displayed to the user more user-readable.","lastModifiedDate":"2022-03-30"},{"lineNumber":865,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":866,"author":{"gitId":"emilysim00"},"content":"(Step 11) After the plan is successfully cleared for that indicated day, a success message of the process would be","lastModifiedDate":"2022-04-01"},{"lineNumber":867,"author":{"gitId":"emilysim00"},"content":"printed to the user through the terminal. An example of a success message would be","lastModifiedDate":"2022-03-30"},{"lineNumber":868,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":869,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":870,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-30"},{"lineNumber":871,"author":{"gitId":"emilysim00"},"content":"Plan had been cleared for Monday.","lastModifiedDate":"2022-03-30"},{"lineNumber":872,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-30"},{"lineNumber":873,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":874,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":875,"author":{"gitId":"emilysim00"},"content":"(Step 12) `FileManager#rewriteAllDaysScheduleToFile(dayList)` is called to write all the `Day` objects\u0027 data stored ","lastModifiedDate":"2022-04-01"},{"lineNumber":876,"author":{"gitId":"emilysim00"},"content":"in the dayList into `schedule.txt` which is stored on the user\u0027s local filesystem.","lastModifiedDate":"2022-04-01"},{"lineNumber":877,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":878,"author":{"gitId":"emilysim00"},"content":"This completes the process of clearing a plan on a particular day of the schedule on WerkIt!","lastModifiedDate":"2022-03-30"},{"lineNumber":879,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":880,"author":{"gitId":"emilysim00"},"content":"---","lastModifiedDate":"2022-03-30"},{"lineNumber":881,"author":{"gitId":"emilysim00"},"content":"#### Clear Schedule For The Week","lastModifiedDate":"2022-03-30"},{"lineNumber":882,"author":{"gitId":"emilysim00"},"content":"A summary of the general procedure of clearing all the plans stored in the schedule in WerkIt! is as follows:","lastModifiedDate":"2022-03-30"},{"lineNumber":883,"author":{"gitId":"emilysim00"},"content":"1. User enters the command `schedule /clearall`.","lastModifiedDate":"2022-04-01"},{"lineNumber":884,"author":{"gitId":"emilysim00"},"content":"2. The application will delete all the plans that had been added to the schedule.","lastModifiedDate":"2022-03-31"},{"lineNumber":885,"author":{"gitId":"emilysim00"},"content":"3. The success response is printed to the user through the terminal. ","lastModifiedDate":"2022-03-31"},{"lineNumber":886,"author":{"gitId":"emilysim00"},"content":"4. The `schedule.txt` will also be rewritten to reflect the changes.","lastModifiedDate":"2022-03-31"},{"lineNumber":887,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":888,"author":{"gitId":"emilysim00"},"content":"The following sequence illustrates how the `schedule /clearall` command works in greater detail:","lastModifiedDate":"2022-03-31"},{"lineNumber":889,"author":{"gitId":"emilysim00"},"content":"\u003e To simplify the sequence diagram, some method invocations that deemed to be trivial","lastModifiedDate":"2022-03-30"},{"lineNumber":890,"author":{"gitId":"emilysim00"},"content":"\u003e have been removed from the sequence diagram. Reference frames will be elaborated further","lastModifiedDate":"2022-03-30"},{"lineNumber":891,"author":{"gitId":"emilysim00"},"content":"\u003e down this section.","lastModifiedDate":"2022-03-30"},{"lineNumber":892,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":893,"author":{"gitId":"alanlowzies"},"content":"![ClearSchedule](uml/sequenceDiagrams/schedule/images/clearAllSchedule.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":894,"author":{"gitId":"emilysim00"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":895,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":896,"author":{"gitId":"emilysim00"},"content":"(Steps 1 to 3) The program waits for the user\u0027s input, which in this case,","lastModifiedDate":"2022-03-30"},{"lineNumber":897,"author":{"gitId":"emilysim00"},"content":"is the `schedule /clearall`. The UI class will return the user input in a String object to the WerkIt object.","lastModifiedDate":"2022-03-31"},{"lineNumber":898,"author":{"gitId":"emilysim00"},"content":"After the user input is received, the WerkIt object will call the `Parser#parseUserInput(userInput)` method","lastModifiedDate":"2022-04-01"},{"lineNumber":899,"author":{"gitId":"emilysim00"},"content":"to parse the user input. A return ScheduleCommand object is obtained from the method.","lastModifiedDate":"2022-03-30"},{"lineNumber":900,"author":{"gitId":"emilysim00"},"content":"This ScheduleCommand object is upcasted to a Command object on return to the WerkIt object.","lastModifiedDate":"2022-03-30"},{"lineNumber":901,"author":{"gitId":"emilysim00"},"content":"The schedule command is being executed by calling the `ScheduleCommand#execute()` method.","lastModifiedDate":"2022-04-01"},{"lineNumber":902,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":903,"author":{"gitId":"emilysim00"},"content":"(Step 4) Since the command entered is `schedule /clearall`, the `DayList#clearAllSchedule()` method will","lastModifiedDate":"2022-04-01"},{"lineNumber":904,"author":{"gitId":"emilysim00"},"content":"be called. This method will delete all the `Day` object stored in the dayList using a for loop.  ","lastModifiedDate":"2022-03-30"},{"lineNumber":905,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":906,"author":{"gitId":"emilysim00"},"content":"(Steps 5 and 6) After all the plan is successfully cleared from the schedule, `UI#printClearedScheduleMessage()` method ","lastModifiedDate":"2022-04-01"},{"lineNumber":907,"author":{"gitId":"emilysim00"},"content":"will be called to print a success message of the process. This message would be printed to the user through the terminal. ","lastModifiedDate":"2022-03-30"},{"lineNumber":908,"author":{"gitId":"emilysim00"},"content":"An example of a success message would be","lastModifiedDate":"2022-03-30"},{"lineNumber":909,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":910,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":911,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-30"},{"lineNumber":912,"author":{"gitId":"emilysim00"},"content":"Schedule had been cleared and reset.","lastModifiedDate":"2022-03-30"},{"lineNumber":913,"author":{"gitId":"emilysim00"},"content":"There is no plan scheduled for any day.","lastModifiedDate":"2022-03-30"},{"lineNumber":914,"author":{"gitId":"emilysim00"},"content":"To add plan for any day, enter:","lastModifiedDate":"2022-03-30"},{"lineNumber":915,"author":{"gitId":"emilysim00"},"content":"schedule /update \u003cday number [1-7]\u003e \u003cplan number\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":916,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-30"},{"lineNumber":917,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":918,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":919,"author":{"gitId":"emilysim00"},"content":"(Step 7) `FileManager#rewriteAllDaysScheduleToFile(dayList)` is called to write all the `Day` objects\u0027 data stored ","lastModifiedDate":"2022-04-01"},{"lineNumber":920,"author":{"gitId":"emilysim00"},"content":"in the dayList into `schedule.txt` which is stored on the user\u0027s local filesystem. ","lastModifiedDate":"2022-04-01"},{"lineNumber":921,"author":{"gitId":"emilysim00"},"content":"Since all Day objects are deleted, the writing of data into `schedule.txt` would be an equivalent of ","lastModifiedDate":"2022-04-01"},{"lineNumber":922,"author":{"gitId":"emilysim00"},"content":"resetting the text file. ","lastModifiedDate":"2022-04-01"},{"lineNumber":923,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":924,"author":{"gitId":"emilysim00"},"content":"This completes the process of clearing of all plans stored in the schedule on WerkIt!","lastModifiedDate":"2022-03-30"},{"lineNumber":925,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":926,"author":{"gitId":"Musfirahe0556596"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":927,"author":{"gitId":"alanlowzies"},"content":"### Search","lastModifiedDate":"2022-03-23"},{"lineNumber":928,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":929,"author":{"gitId":"a1021492980"},"content":"#### Search For Exercise","lastModifiedDate":"2022-03-28"},{"lineNumber":930,"author":{"gitId":"alanlowzies"},"content":"Format: `search /exercise \u003ckeywords\u003e`","lastModifiedDate":"2022-03-23"},{"lineNumber":931,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":932,"author":{"gitId":"alanlowzies"},"content":"The `Parser#createSearchCommand(String userInput)` method will further evaluate the user input","lastModifiedDate":"2022-03-23"},{"lineNumber":933,"author":{"gitId":"alanlowzies"},"content":"`/exercise` and call the constructor of `SearchCommand` class by passing relevant parameters related to search exercise","lastModifiedDate":"2022-03-23"},{"lineNumber":934,"author":{"gitId":"alanlowzies"},"content":"to the constructor. The created `SearchCommand` object is returned by the `Parser#createSearchCommand(String userInput)`","lastModifiedDate":"2022-03-23"},{"lineNumber":935,"author":{"gitId":"alanlowzies"},"content":"method to `Parser#parseUserInput(String userInput)` method, and finally returned by","lastModifiedDate":"2022-03-23"},{"lineNumber":936,"author":{"gitId":"alanlowzies"},"content":"`Parser#parseUserInput(String userInput)` method to `WerkIt#startContinuousUserPrompt()` method. The search command will","lastModifiedDate":"2022-03-23"},{"lineNumber":937,"author":{"gitId":"alanlowzies"},"content":"be executed in `WerkIt#startContinuousUserPrompt()`. And based on the `\u003ckeywords\u003e` specified by the user, the output","lastModifiedDate":"2022-03-23"},{"lineNumber":938,"author":{"gitId":"alanlowzies"},"content":"will either be a list of matching exercises or \u0027Sorry, no matching exercise found\u0027 if the user has entered the command","lastModifiedDate":"2022-03-23"},{"lineNumber":939,"author":{"gitId":"alanlowzies"},"content":"correctly.","lastModifiedDate":"2022-03-23"},{"lineNumber":940,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":941,"author":{"gitId":"Musfirahe0556596"},"content":"The following sequence diagram illustrates how the `search /exercise` command works in greater detail:","lastModifiedDate":"2022-03-30"},{"lineNumber":942,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":943,"author":{"gitId":"alanlowzies"},"content":"![Search Exercise Sequence Diagram](uml/sequenceDiagrams/search/images/searchExercise.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":944,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":945,"author":{"gitId":"a1021492980"},"content":"#### Search For Workout","lastModifiedDate":"2022-03-28"},{"lineNumber":946,"author":{"gitId":"a1021492980"},"content":"Format: `search /workout \u003ckeywords\u003e`","lastModifiedDate":"2022-03-28"},{"lineNumber":947,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":948,"author":{"gitId":"a1021492980"},"content":"The `Parser#createSearchCommand(String userInput)` method will further evaluate the user input","lastModifiedDate":"2022-03-28"},{"lineNumber":949,"author":{"gitId":"a1021492980"},"content":"`/workout` and call the constructor of `SearchCommand` class by passing relevant parameters to the constructor.","lastModifiedDate":"2022-03-28"},{"lineNumber":950,"author":{"gitId":"a1021492980"},"content":"The created `SearchCommand` object is returned by the `Parser#createSearchCommand(String userInput)`","lastModifiedDate":"2022-03-28"},{"lineNumber":951,"author":{"gitId":"a1021492980"},"content":"method to `Parser#parseUserInput(String userInput)` method, and finally returned by","lastModifiedDate":"2022-03-28"},{"lineNumber":952,"author":{"gitId":"a1021492980"},"content":"`Parser#parseUserInput(String userInput)` method to `WerkIt#startContinuousUserPrompt()` method. The search command will","lastModifiedDate":"2022-03-28"},{"lineNumber":953,"author":{"gitId":"a1021492980"},"content":"be executed in `WerkIt#startContinuousUserPrompt()`. And based on the `\u003ckeywords\u003e` specified by the user, the output","lastModifiedDate":"2022-03-28"},{"lineNumber":954,"author":{"gitId":"a1021492980"},"content":"will either be a list of matching names of workout or \u0027Sorry, no matching workout found\u0027 if the user has entered the command","lastModifiedDate":"2022-03-28"},{"lineNumber":955,"author":{"gitId":"a1021492980"},"content":"correctly.","lastModifiedDate":"2022-03-28"},{"lineNumber":956,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":957,"author":{"gitId":"Musfirahe0556596"},"content":"The following sequence diagram illustrates how the `search /workout` command works in greater detail:","lastModifiedDate":"2022-03-30"},{"lineNumber":958,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":959,"author":{"gitId":"alanlowzies"},"content":"![Search Exercise Sequence Diagram](uml/sequenceDiagrams/search/images/searchWorkout.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":960,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":961,"author":{"gitId":"a1021492980"},"content":"#### Search For Plan","lastModifiedDate":"2022-03-28"},{"lineNumber":962,"author":{"gitId":"alanlowzies"},"content":"Format: `search /plan \u003ckeywords\u003e`","lastModifiedDate":"2022-03-23"},{"lineNumber":963,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":964,"author":{"gitId":"alanlowzies"},"content":"The `Parser#createSearchCommand(String userInput)` method will further evaluate the user input","lastModifiedDate":"2022-03-23"},{"lineNumber":965,"author":{"gitId":"alanlowzies"},"content":"`/plan` and call the constructor of `SearchCommand` class by passing relevant parameters to the constructor.","lastModifiedDate":"2022-03-23"},{"lineNumber":966,"author":{"gitId":"alanlowzies"},"content":"The created `SearchCommand` object is returned by the `Parser#createSearchCommand(String userInput)`","lastModifiedDate":"2022-03-23"},{"lineNumber":967,"author":{"gitId":"alanlowzies"},"content":"method to `Parser#parseUserInput(String userInput)` method, and finally returned by","lastModifiedDate":"2022-03-23"},{"lineNumber":968,"author":{"gitId":"alanlowzies"},"content":"`Parser#parseUserInput(String userInput)` method to `WerkIt#startContinuousUserPrompt()` method. The search command will","lastModifiedDate":"2022-03-23"},{"lineNumber":969,"author":{"gitId":"alanlowzies"},"content":"be executed in `WerkIt#startContinuousUserPrompt()`. And based on the `\u003ckeywords\u003e` specified by the user, the output","lastModifiedDate":"2022-03-23"},{"lineNumber":970,"author":{"gitId":"alanlowzies"},"content":"will either be a list of matching names of plan or \u0027Sorry, no matching plan found\u0027 if the user has entered the command","lastModifiedDate":"2022-03-23"},{"lineNumber":971,"author":{"gitId":"alanlowzies"},"content":"correctly.","lastModifiedDate":"2022-03-23"},{"lineNumber":972,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":973,"author":{"gitId":"Musfirahe0556596"},"content":"The following sequence diagram illustrates how the `search /plan` command works in greater detail:","lastModifiedDate":"2022-03-30"},{"lineNumber":974,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":975,"author":{"gitId":"alanlowzies"},"content":"![Search Exercise Sequence Diagram](uml/sequenceDiagrams/search/images/searchPlan.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":976,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":977,"author":{"gitId":"a1021492980"},"content":"#### Search For All","lastModifiedDate":"2022-03-28"},{"lineNumber":978,"author":{"gitId":"a1021492980"},"content":"Format: `search /all \u003ckeywords\u003e`","lastModifiedDate":"2022-03-28"},{"lineNumber":979,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":980,"author":{"gitId":"a1021492980"},"content":"The `Parser#createSearchCommand(String userInput)` method will further evaluate the user input","lastModifiedDate":"2022-03-28"},{"lineNumber":981,"author":{"gitId":"a1021492980"},"content":"`/all` and call the constructor of `SearchCommand` class by passing relevant parameters to the constructor.","lastModifiedDate":"2022-03-28"},{"lineNumber":982,"author":{"gitId":"a1021492980"},"content":"The created `SearchCommand` object is returned by the `Parser#createSearchCommand(String userInput)`","lastModifiedDate":"2022-03-28"},{"lineNumber":983,"author":{"gitId":"a1021492980"},"content":"method to `Parser#parseUserInput(String userInput)` method, and finally returned by","lastModifiedDate":"2022-03-28"},{"lineNumber":984,"author":{"gitId":"a1021492980"},"content":"`Parser#parseUserInput(String userInput)` method to `WerkIt#startContinuousUserPrompt()` method. The search command will","lastModifiedDate":"2022-03-28"},{"lineNumber":985,"author":{"gitId":"a1021492980"},"content":"be executed in `WerkIt#startContinuousUserPrompt()`. And based on the `\u003ckeywords\u003e` specified by the user, the output","lastModifiedDate":"2022-03-28"},{"lineNumber":986,"author":{"gitId":"a1021492980"},"content":"will either be a list of matching names of exercise, workout and plan or not found messages if the user has entered the command correctly.","lastModifiedDate":"2022-03-28"},{"lineNumber":987,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":988,"author":{"gitId":"Musfirahe0556596"},"content":"The following sequence diagram illustrates how the `search /all` command works in greater detail:","lastModifiedDate":"2022-03-30"},{"lineNumber":989,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":990,"author":{"gitId":"alanlowzies"},"content":"![Search Exercise Sequence Diagram](uml/sequenceDiagrams/search/images/searchAll.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":991,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":992,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":993,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":994,"author":{"gitId":"alanlowzies"},"content":"## Product Scope","lastModifiedDate":"2022-03-23"},{"lineNumber":995,"author":{"gitId":"alanlowzies"},"content":"### Target User Profile","lastModifiedDate":"2022-03-23"},{"lineNumber":996,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":997,"author":{"gitId":"-"},"content":"{Describe the target user profile}","lastModifiedDate":"2020-05-24"},{"lineNumber":998,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":999,"author":{"gitId":"alanlowzies"},"content":"### Value Proposition","lastModifiedDate":"2022-03-23"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1001,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2020-05-24"},{"lineNumber":1002,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1003,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":1004,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1005,"author":{"gitId":"-"},"content":"| Version | As a ... | I want to ...    | So that I can ...                                                      |","lastModifiedDate":"2020-05-24"},{"lineNumber":1006,"author":{"gitId":"emilysim00"},"content":"|---------|----------|------------------|------------------------------------------------------------------------|","lastModifiedDate":"2022-03-30"},{"lineNumber":1007,"author":{"gitId":"alanlowzies"},"content":"| v1.0    | user     | create a workout | keep track of how many repetitions I would like to do with an exercise |","lastModifiedDate":"2022-03-23"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1009,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":1010,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1011,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":1012,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":1014,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1015,"author":{"gitId":"alanlowzies"},"content":"* **Exercise** - A single \u0027unit\u0027 of exercise. A type of exercise.","lastModifiedDate":"2022-03-23"},{"lineNumber":1016,"author":{"gitId":"alanlowzies"},"content":"    * e.g. push up, jumping jacks, sit-ups","lastModifiedDate":"2022-03-23"},{"lineNumber":1017,"author":{"gitId":"alanlowzies"},"content":"* **Workout** - A single \u0027unit\u0027 of exercise with a number of repetitions associated with it.","lastModifiedDate":"2022-03-23"},{"lineNumber":1018,"author":{"gitId":"alanlowzies"},"content":"    * e.g. push up (5 reps), jumping jacks (2 reps), sit-ups (7 reps)","lastModifiedDate":"2022-03-23"},{"lineNumber":1019,"author":{"gitId":"alanlowzies"},"content":"* **Plan** - A set of workouts","lastModifiedDate":"2022-03-23"},{"lineNumber":1020,"author":{"gitId":"alanlowzies"},"content":"    * Example:","lastModifiedDate":"2022-03-23"},{"lineNumber":1021,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":1022,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":1023,"author":{"gitId":"alanlowzies"},"content":"| Plan Name      | Contains                                                                                                               |","lastModifiedDate":"2022-03-23"},{"lineNumber":1024,"author":{"gitId":"emilysim00"},"content":"|----------------|------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-30"},{"lineNumber":1025,"author":{"gitId":"alanlowzies"},"content":"| Grow my Biceps | Barbell curls (3 reps), push ups (10 reps), deadlift (2 reps)                                                          |","lastModifiedDate":"2022-03-23"},{"lineNumber":1026,"author":{"gitId":"alanlowzies"},"content":"| Whole Body!    | Crunches (10 reps), jumping jack (3 reps), lift ups (4 reps), pull ups (3 reps), planking (2 reps), leg cycle (2 reps) |","lastModifiedDate":"2022-03-23"},{"lineNumber":1027,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":1028,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":1029,"author":{"gitId":"alanlowzies"},"content":"* **Schedule** - Consists of Days 1 to 7. Users will add or modify a plan to that particular day","lastModifiedDate":"2022-03-23"},{"lineNumber":1030,"author":{"gitId":"alanlowzies"},"content":"of their schedule. For instance, the user\u0027s daily schedule can look like this:","lastModifiedDate":"2022-03-23"},{"lineNumber":1031,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":1032,"author":{"gitId":"alanlowzies"},"content":"| Day   | Plan Name      |","lastModifiedDate":"2022-03-23"},{"lineNumber":1033,"author":{"gitId":"emilysim00"},"content":"|-------|----------------|","lastModifiedDate":"2022-03-30"},{"lineNumber":1034,"author":{"gitId":"alanlowzies"},"content":"| Day 1 | Grow my Biceps |","lastModifiedDate":"2022-03-23"},{"lineNumber":1035,"author":{"gitId":"emilysim00"},"content":"| Day 2 | Rest Day       |","lastModifiedDate":"2022-03-23"},{"lineNumber":1036,"author":{"gitId":"alanlowzies"},"content":"| Day 3 | Whole Body!    |","lastModifiedDate":"2022-03-23"},{"lineNumber":1037,"author":{"gitId":"alanlowzies"},"content":"| Day 4 | Leg Day        |","lastModifiedDate":"2022-03-23"},{"lineNumber":1038,"author":{"gitId":"alanlowzies"},"content":"| Day 5 | Grow my Biceps |","lastModifiedDate":"2022-03-23"},{"lineNumber":1039,"author":{"gitId":"alanlowzies"},"content":"| Day 6 | Whole Body!    |","lastModifiedDate":"2022-03-23"},{"lineNumber":1040,"author":{"gitId":"emilysim00"},"content":"| Day 7 | Rest Day       |","lastModifiedDate":"2022-03-23"},{"lineNumber":1041,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":1042,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1043,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":1044,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"emilysim00":320,"Musfirahe0556596":282,"alanlowzies":338,"TianaiYan":25,"-":32,"a1021492980":48}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"# WerkIt!","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"WerkIt! is an application for managing workout routines,","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"optimized for use via a Command Line Interface (CLI).","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"Musfirahe0556596":3,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"# WerkIt! User Guide","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"WerkIt! is an application for managing workout routines,","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"optimized for use via a Command Line Interface (CLI). This application is for you if you wish to","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"have an application to keep track of your workouts and have a system to store your workout routines.","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"You will be able to create, view, update and delete the workouts and plans you have created and store them in the application.","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":"You will also be able to schedule your workout plans for a week (7 days). ","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"emilysim00"},"content":"### Terminology ","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"Please take note of these few terms. It is explained as below:","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"| Term     | Description                                                                                                              |","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"|----------|--------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"| Exercise | A single unit of exercise. \u003cbr/\u003eExample: \"push up\", \"pull up\", \"sit up\"                                                  |","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"| Workout  | An exercise with a quantity/number of repetitions. \u003cbr/\u003eExample: \"5 push up\", \"5 pull up\", \"10 sit up\"                   |","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"| Plan     | A set of workouts. \u003cbr/\u003eExample: A plan named \"Arms\" will contains \"5 push ups, 5 pull ups\"                              |","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"| Schedule | Plan schedule for a day. The schedule is set for a week. \u003cbr/\u003eExample: Arms plan will be added to Monday in the schedule |","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"## Table of Contents","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"* [Quick Start Guide](#quick-start-guide)","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"* [Features](#features)","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"  * [Exercise And Workout Features](#exercise-and-workout-features)","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"    * [Show All Exercises: `exercise /list`](#show-all-exercises-exercise-list)","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"    * [Create A Workout: `workout /new`](#create-a-workout-workout-new)","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"TianaiYan"},"content":"    * [Show All Workouts: `workout /listall`](#show-all-workouts-in-one-go-workout-listall)","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"TianaiYan"},"content":"    * [Show Specific Number Of Workouts: `workout /list`](#show-specific-number-of-workouts-workout-list)","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"    * [Delete A Workout: `workout /delete`](#delete-a-workout-workout-delete)","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"    * [Update A Workout: `workout /update`](#update-a-workout-workout-update)","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"emilysim00"},"content":"  * [Plan Features](#plan-features)","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"    * [Create A Plan: `plan /new`](#create-a-plan-plan-new)","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"    * [List A Plan: `plan /list`](#list-a-plan-plan-list)","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"TianaiYan"},"content":"    * [List Details Of A Plan: `plan /details`](#list-details-of-a-plan-plan-details)","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"TianaiYan"},"content":"    * [Delete A Plan: `plan /delete`](#delete-a-plan-plan-delete)","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"  * [Schedule Features](#schedule-features)","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"Musfirahe0556596"},"content":"    * [Update Schedule: `schedule /update`](#update-schedule-schedule-update)","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"Musfirahe0556596"},"content":"    * [View Schedule: `schedule /list`](#view-schedule-schedule-list)","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"Musfirahe0556596"},"content":"    * [Clear Schedule For A Day: `schedule /clear`](#clear-schedule-for-a-day-schedule-clear)","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"Musfirahe0556596"},"content":"    * [Clear Schedule For The Week: `schedule /clearall`](#clear-schedule-for-the-week-schedule-clearall)","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"emilysim00"},"content":"  * [Search Features](#search-features)","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"a1021492980"},"content":"    * [Search For Exercise: `search /exercise`](#search-for-exercise-search-exercise)","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"a1021492980"},"content":"    * [Search For Workout: `search /workout`](#search-for-workout-search-workout)","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"a1021492980"},"content":"    * [Search For Plan: `search /plan`](#search-for-plan-search-plan)","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"a1021492980"},"content":"    * [Search For All: `search /all`](#search-for-all-search-all)","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"Musfirahe0556596"},"content":"  * [View Help: `help`](#view-help-help)","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"Musfirahe0556596"},"content":"* [WerkIt!\u0027s Local Storage Information](#werkits-local-storage-information)","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"Musfirahe0556596"},"content":"* [Frequently Asked Questions (FAQ)](#frequently-asked-questions-faq)","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"Musfirahe0556596"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"## Quick Start Guide","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"Musfirahe0556596"},"content":"1. Ensure that you have [Java 11](https://www.oracle.com/java/technologies/downloads/) or above installed.","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"Musfirahe0556596"},"content":"2. Download the latest version of WerkIt! from [here](https://github.com/AY2122S2-CS2113T-T09-2/tp/releases).","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"Musfirahe0556596"},"content":"3. (Recommended) Create a new directory and move the WerkIt! JAR file to that directory.","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"4. (Recommended) Set your current working directory to the new directory.","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"5. Run the WerkIt! application with the command: `java -jar WerkIt.jar`.","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"**Recommended Terminals** \u003cbr/\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"| Operating System  | Recommended Terminal                                                                                       |","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"TianaiYan"},"content":"|-------------------|------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"| Microsoft Windows | [Windows Powershell](https://www.digitalcitizen.life/simple-questions-what-powershell-what-can-you-do-it/) |","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"| Apple MacOS       | [Terminal](https://support.apple.com/en-sg/guide/terminal/apd5265185d-f365-44cb-8b09-71a064a42125/mac)     |","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"TianaiYan"},"content":"| (Ubuntu) Linux    | [Bash Terminal](https://ubuntu.com/tutorials/command-line-for-beginners#3-opening-a-terminal)              |","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"\u003e For Microsoft Windows operating systems, if you are having display issues (e.g. colours not displaying) with","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"\u003e your terminal, please see [\"my terminal in Windows is not displaying any colours in the application\"](#1-my-terminal-in-windows-is-not-displaying-any-colours-in-the-application) ","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"\u003e in the FAQ section.","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"\u003e For Linux operating systems, our application is tested on Ubuntu Linux using the default Bash shell.","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2020-05-24"},{"lineNumber":80,"author":{"gitId":"emilysim00"},"content":"In this section, features of the application can be classified into 4 main categories. They are: \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"emilysim00"},"content":"* [Exercise and Workout Features](#exercise-and-workout-features)","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"emilysim00"},"content":"* [Plan Features](#plan-features) ","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"emilysim00"},"content":"* [Schedule Features](#schedule-features)","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"emilysim00"},"content":"* [Search Features](#search-features)","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"emilysim00"},"content":"Each feature is being run by a specific command format. When the command format is matched, ","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"emilysim00"},"content":"the command will then be processed by the application and produce the intended outcome. The format of the commands","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"emilysim00"},"content":"contains two types of formatting.","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"emilysim00"},"content":"| Format         | Parameters                                                                                                                               |","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"emilysim00"},"content":"|----------------|------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"emilysim00"},"content":"| `\u003ccondition\u003e`  | Contents enclosed between \"\u003c\u003e\" are the parameters needed for the command to be valid. \u003cbr /\u003e Not all commands have conditions to be met. |","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"emilysim00"},"content":"| `/commandType` | Content after \"/\" is to classify the command type. \u003cbr/\u003e Such as classifying it to be a workout / plan / schedule / search command       |","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":95,"author":{"gitId":"alanlowzies"},"content":"**_Heads Up!_**\u003cbr/\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"alanlowzies"},"content":"_Your inputs cannot contain the pipe character `|`!_","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"a1021492980"},"content":"---","lastModifiedDate":"2022-03-20"},{"lineNumber":99,"author":{"gitId":"emilysim00"},"content":"## Exercise And Workout Features","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"a1021492980"},"content":"### Show all Exercises: `exercise /list`","lastModifiedDate":"2022-03-20"},{"lineNumber":102,"author":{"gitId":"a1021492980"},"content":"Lists down all exercises that are available for selection.","lastModifiedDate":"2022-03-20"},{"lineNumber":103,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"a1021492980"},"content":"Format: `exercise /list`","lastModifiedDate":"2022-03-20"},{"lineNumber":105,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"a1021492980"},"content":"**Example**","lastModifiedDate":"2022-03-20"},{"lineNumber":107,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"a1021492980"},"content":"\u003e exercise /list","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"a1021492980"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-20"},{"lineNumber":112,"author":{"gitId":"a1021492980"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"a1021492980"},"content":"There are 13 exercises available.","lastModifiedDate":"2022-03-20"},{"lineNumber":114,"author":{"gitId":"a1021492980"},"content":"Here is the list of exercises: ","lastModifiedDate":"2022-03-20"},{"lineNumber":115,"author":{"gitId":"a1021492980"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-03-20"},{"lineNumber":116,"author":{"gitId":"a1021492980"},"content":"1. push up","lastModifiedDate":"2022-03-20"},{"lineNumber":117,"author":{"gitId":"a1021492980"},"content":"2. bicep curl","lastModifiedDate":"2022-03-20"},{"lineNumber":118,"author":{"gitId":"a1021492980"},"content":"3. pull up","lastModifiedDate":"2022-03-20"},{"lineNumber":119,"author":{"gitId":"a1021492980"},"content":"4. squat","lastModifiedDate":"2022-03-20"},{"lineNumber":120,"author":{"gitId":"a1021492980"},"content":"5. lunge","lastModifiedDate":"2022-03-20"},{"lineNumber":121,"author":{"gitId":"a1021492980"},"content":"6. hip thrust","lastModifiedDate":"2022-03-20"},{"lineNumber":122,"author":{"gitId":"a1021492980"},"content":"7. sit up","lastModifiedDate":"2022-03-20"},{"lineNumber":123,"author":{"gitId":"a1021492980"},"content":"8. crunch","lastModifiedDate":"2022-03-20"},{"lineNumber":124,"author":{"gitId":"a1021492980"},"content":"9. russian twist","lastModifiedDate":"2022-03-20"},{"lineNumber":125,"author":{"gitId":"a1021492980"},"content":"10. running","lastModifiedDate":"2022-03-20"},{"lineNumber":126,"author":{"gitId":"a1021492980"},"content":"11. swimming","lastModifiedDate":"2022-03-20"},{"lineNumber":127,"author":{"gitId":"a1021492980"},"content":"12. jumping jack","lastModifiedDate":"2022-03-20"},{"lineNumber":128,"author":{"gitId":"a1021492980"},"content":"13. burpee","lastModifiedDate":"2022-03-20"},{"lineNumber":129,"author":{"gitId":"a1021492980"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-03-20"},{"lineNumber":130,"author":{"gitId":"a1021492980"},"content":"End of exercise list.","lastModifiedDate":"2022-03-20"},{"lineNumber":131,"author":{"gitId":"a1021492980"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-03-20"},{"lineNumber":132,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-20"},{"lineNumber":133,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":134,"author":{"gitId":"a1021492980"},"content":"In the current exercise list, there are 13 exercises available.","lastModifiedDate":"2022-03-20"},{"lineNumber":135,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":136,"author":{"gitId":"a1021492980"},"content":"---","lastModifiedDate":"2022-03-20"},{"lineNumber":137,"author":{"gitId":"alanlowzies"},"content":"### Create a Workout: `workout /new`","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"alanlowzies"},"content":"Creates a new workout.","lastModifiedDate":"2022-03-11"},{"lineNumber":139,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":140,"author":{"gitId":"alanlowzies"},"content":"Format: `workout /new \u003cexercise name\u003e /reps \u003cnumber of repetitions\u003e`","lastModifiedDate":"2022-03-11"},{"lineNumber":141,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":142,"author":{"gitId":"alanlowzies"},"content":"| Parameters                | Description                                                                                                                                           |","lastModifiedDate":"2022-03-11"},{"lineNumber":143,"author":{"gitId":"TianaiYan"},"content":"|---------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-28"},{"lineNumber":144,"author":{"gitId":"alanlowzies"},"content":"| `\u003cexercise name\u003e`         | The name of the exercise. \u003cbr/\u003e- Exercise name must be from the pre-defined list of exercises.\u003cbr/\u003e- Type `exercise /list` for the list of exercises. |","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"alanlowzies"},"content":"| `\u003cnumber of repetitions\u003e` | The number of repetitions that should be carried out for `\u003cexercise name\u003e`.                                                                           |","lastModifiedDate":"2022-03-11"},{"lineNumber":146,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":147,"author":{"gitId":"alanlowzies"},"content":"**Example**","lastModifiedDate":"2022-03-11"},{"lineNumber":148,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-03-11"},{"lineNumber":149,"author":{"gitId":"alanlowzies"},"content":"\u003e workout /new russian twist /reps 50","lastModifiedDate":"2022-03-11"},{"lineNumber":150,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-03-11"},{"lineNumber":151,"author":{"gitId":"alanlowzies"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-11"},{"lineNumber":152,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-03-11"},{"lineNumber":153,"author":{"gitId":"alanlowzies"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-11"},{"lineNumber":154,"author":{"gitId":"alanlowzies"},"content":"Alright, the following workout has been created:","lastModifiedDate":"2022-03-11"},{"lineNumber":155,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":156,"author":{"gitId":"alanlowzies"},"content":"\trussian twist (50 reps)","lastModifiedDate":"2022-03-11"},{"lineNumber":157,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":158,"author":{"gitId":"alanlowzies"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-11"},{"lineNumber":159,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-03-11"},{"lineNumber":160,"author":{"gitId":"alanlowzies"},"content":"A new workout of carrying out Russian twists 50 times will be created and added to the application\u0027s list of workouts.","lastModifiedDate":"2022-03-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":162,"author":{"gitId":"emilysim00"},"content":"---","lastModifiedDate":"2022-03-14"},{"lineNumber":163,"author":{"gitId":"emilysim00"},"content":"### Show all Workouts in one go: `workout /listall`","lastModifiedDate":"2022-03-24"},{"lineNumber":164,"author":{"gitId":"emilysim00"},"content":"Lists down all workouts that have been created and stored in the workout list at the time the command is executed.","lastModifiedDate":"2022-03-24"},{"lineNumber":165,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":166,"author":{"gitId":"emilysim00"},"content":"Format: `workout /listall`","lastModifiedDate":"2022-03-24"},{"lineNumber":167,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":168,"author":{"gitId":"emilysim00"},"content":"**Example**","lastModifiedDate":"2022-03-14"},{"lineNumber":169,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":170,"author":{"gitId":"emilysim00"},"content":"\u003e workout /listall","lastModifiedDate":"2022-03-24"},{"lineNumber":171,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":172,"author":{"gitId":"emilysim00"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-14"},{"lineNumber":173,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":174,"author":{"gitId":"emilysim00"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-03-14"},{"lineNumber":175,"author":{"gitId":"emilysim00"},"content":"Showing workouts 1-3 of 3:","lastModifiedDate":"2022-03-14"},{"lineNumber":176,"author":{"gitId":"emilysim00"},"content":"1. push up (10 reps)","lastModifiedDate":"2022-03-14"},{"lineNumber":177,"author":{"gitId":"emilysim00"},"content":"2. sit up (10 reps)","lastModifiedDate":"2022-03-14"},{"lineNumber":178,"author":{"gitId":"emilysim00"},"content":"3. pull up (10 reps)","lastModifiedDate":"2022-03-14"},{"lineNumber":179,"author":{"gitId":"emilysim00"},"content":"Showed all workouts in list","lastModifiedDate":"2022-03-14"},{"lineNumber":180,"author":{"gitId":"emilysim00"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-03-14"},{"lineNumber":181,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":182,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":183,"author":{"gitId":"emilysim00"},"content":"In the current workout list, there are a total of 3 workouts. All the workouts have been listed.","lastModifiedDate":"2022-03-24"},{"lineNumber":184,"author":{"gitId":"emilysim00"},"content":"If there are 20 workouts in the list, all the 20 workouts will be displayed together. ","lastModifiedDate":"2022-03-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":186,"author":{"gitId":"emilysim00"},"content":"---","lastModifiedDate":"2022-03-14"},{"lineNumber":187,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":188,"author":{"gitId":"emilysim00"},"content":"### Show specific number of Workouts: `workout /list`","lastModifiedDate":"2022-03-24"},{"lineNumber":189,"author":{"gitId":"emilysim00"},"content":"Lists down a specific number of workouts that have been created and stored in the workout list at a time.","lastModifiedDate":"2022-03-24"},{"lineNumber":190,"author":{"gitId":"emilysim00"},"content":"The maximum number of workouts that will be displayed at a time is 10 workouts. If there are more","lastModifiedDate":"2022-03-24"},{"lineNumber":191,"author":{"gitId":"emilysim00"},"content":"workouts in the list, you will be prompted on whether you wish to display the next 10 (or fewer) workouts in the list.","lastModifiedDate":"2022-03-27"},{"lineNumber":192,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":193,"author":{"gitId":"emilysim00"},"content":"Format: `workout /list`","lastModifiedDate":"2022-03-14"},{"lineNumber":194,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":195,"author":{"gitId":"emilysim00"},"content":"**Example**","lastModifiedDate":"2022-03-14"},{"lineNumber":196,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":197,"author":{"gitId":"emilysim00"},"content":"\u003e workout /list","lastModifiedDate":"2022-03-14"},{"lineNumber":198,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":199,"author":{"gitId":"emilysim00"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-14"},{"lineNumber":200,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":201,"author":{"gitId":"alanlowzies"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":202,"author":{"gitId":"emilysim00"},"content":"Showing workouts 1-3 of 3:","lastModifiedDate":"2022-03-14"},{"lineNumber":203,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":204,"author":{"gitId":"emilysim00"},"content":"1. push up (10 reps)","lastModifiedDate":"2022-03-14"},{"lineNumber":205,"author":{"gitId":"emilysim00"},"content":"2. sit up (10 reps)","lastModifiedDate":"2022-03-14"},{"lineNumber":206,"author":{"gitId":"emilysim00"},"content":"3. pull up (10 reps)","lastModifiedDate":"2022-03-14"},{"lineNumber":207,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":208,"author":{"gitId":"emilysim00"},"content":"Showed all workouts in list","lastModifiedDate":"2022-03-14"},{"lineNumber":209,"author":{"gitId":"alanlowzies"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":210,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":211,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":212,"author":{"gitId":"emilysim00"},"content":"In the current workout list, there are a total of 3 workouts. All the workouts have been listed. ","lastModifiedDate":"2022-03-14"},{"lineNumber":213,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":214,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-03-11"},{"lineNumber":215,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":216,"author":{"gitId":"Musfirahe0556596"},"content":"### Delete a Workout: `workout /delete`","lastModifiedDate":"2022-03-14"},{"lineNumber":217,"author":{"gitId":"Musfirahe0556596"},"content":"Removes an existing workout from the workout list.","lastModifiedDate":"2022-03-14"},{"lineNumber":218,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":219,"author":{"gitId":"Musfirahe0556596"},"content":"Format: `workout /delete \u003cworkout number to delete\u003e`","lastModifiedDate":"2022-03-14"},{"lineNumber":220,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":221,"author":{"gitId":"Musfirahe0556596"},"content":"| Parameters                   | Description                                             |","lastModifiedDate":"2022-03-14"},{"lineNumber":222,"author":{"gitId":"Musfirahe0556596"},"content":"|------------------------------|---------------------------------------------------------|","lastModifiedDate":"2022-03-14"},{"lineNumber":223,"author":{"gitId":"Musfirahe0556596"},"content":"| `\u003cworkout number to delete\u003e` | The workout number to be removed from the workout list. |","lastModifiedDate":"2022-03-14"},{"lineNumber":224,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":225,"author":{"gitId":"Musfirahe0556596"},"content":"**Example**","lastModifiedDate":"2022-03-14"},{"lineNumber":226,"author":{"gitId":"Musfirahe0556596"},"content":"\u003cbr/\u003eInitially, the workout list contains the following workouts:","lastModifiedDate":"2022-03-14"},{"lineNumber":227,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":228,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-14"},{"lineNumber":229,"author":{"gitId":"Musfirahe0556596"},"content":"Showing workouts 1-2 of 2:","lastModifiedDate":"2022-03-14"},{"lineNumber":230,"author":{"gitId":"Musfirahe0556596"},"content":"1. russian twist (50 reps)","lastModifiedDate":"2022-03-14"},{"lineNumber":231,"author":{"gitId":"Musfirahe0556596"},"content":"2. push up (20 reps)","lastModifiedDate":"2022-03-14"},{"lineNumber":232,"author":{"gitId":"emilysim00"},"content":"Showed all workouts in list","lastModifiedDate":"2022-03-14"},{"lineNumber":233,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-14"},{"lineNumber":234,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":235,"author":{"gitId":"Musfirahe0556596"},"content":"To remove workout number 2 from the list, the following command is entered:","lastModifiedDate":"2022-03-14"},{"lineNumber":236,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":237,"author":{"gitId":"Musfirahe0556596"},"content":"\u003e workout /delete 2","lastModifiedDate":"2022-03-14"},{"lineNumber":238,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":239,"author":{"gitId":"Musfirahe0556596"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-14"},{"lineNumber":240,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":241,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-14"},{"lineNumber":242,"author":{"gitId":"Musfirahe0556596"},"content":"Alright, the following workout has been removed:","lastModifiedDate":"2022-03-14"},{"lineNumber":243,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":244,"author":{"gitId":"Musfirahe0556596"},"content":"\tpush up (20 reps)","lastModifiedDate":"2022-03-14"},{"lineNumber":245,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":246,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-14"},{"lineNumber":247,"author":{"gitId":"Musfirahe0556596"},"content":"What\u0027s next?","lastModifiedDate":"2022-03-14"},{"lineNumber":248,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-14"},{"lineNumber":249,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":250,"author":{"gitId":"Musfirahe0556596"},"content":"Workout number 2 (push up with 20 reps) is removed from the workout list. ","lastModifiedDate":"2022-03-14"},{"lineNumber":251,"author":{"gitId":"Musfirahe0556596"},"content":"Running the `workout /list` command will show the workout list as follows:","lastModifiedDate":"2022-03-14"},{"lineNumber":252,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":253,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-14"},{"lineNumber":254,"author":{"gitId":"Musfirahe0556596"},"content":"Showing workouts 1-1 of 1:","lastModifiedDate":"2022-03-14"},{"lineNumber":255,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":256,"author":{"gitId":"Musfirahe0556596"},"content":"1. russian twist (50 reps)","lastModifiedDate":"2022-03-14"},{"lineNumber":257,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":258,"author":{"gitId":"emilysim00"},"content":"Showed all workouts in list","lastModifiedDate":"2022-03-14"},{"lineNumber":259,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-14"},{"lineNumber":260,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-14"},{"lineNumber":261,"author":{"gitId":"Musfirahe0556596"},"content":"---","lastModifiedDate":"2022-03-14"},{"lineNumber":262,"author":{"gitId":"TianaiYan"},"content":"### Update a Workout: `workout /update`","lastModifiedDate":"2022-03-16"},{"lineNumber":263,"author":{"gitId":"TianaiYan"},"content":"Modifies an existing workout from the workout list.\u003cbr\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":264,"author":{"gitId":"TianaiYan"},"content":"*Noted: Only the number of repetition can be changed.*","lastModifiedDate":"2022-03-16"},{"lineNumber":265,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":266,"author":{"gitId":"TianaiYan"},"content":"Format: `workout /update \u003cworkout number to update\u003e \u003cnew number of repetitions\u003e`","lastModifiedDate":"2022-03-28"},{"lineNumber":267,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":268,"author":{"gitId":"TianaiYan"},"content":"| Parameters                    | Description                                             |","lastModifiedDate":"2022-03-16"},{"lineNumber":269,"author":{"gitId":"TianaiYan"},"content":"|-------------------------------|---------------------------------------------------------|","lastModifiedDate":"2022-03-28"},{"lineNumber":270,"author":{"gitId":"TianaiYan"},"content":"| `\u003cworkout number to update\u003e`  | The workout number to be updated from the workout list. |","lastModifiedDate":"2022-03-28"},{"lineNumber":271,"author":{"gitId":"TianaiYan"},"content":"| `\u003cnew number of repetitions\u003e` | The number of repetitions to be changed to.             |","lastModifiedDate":"2022-03-16"},{"lineNumber":272,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":273,"author":{"gitId":"TianaiYan"},"content":"**Example**\u003cbr\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":274,"author":{"gitId":"TianaiYan"},"content":"Initially, the workout list contains the following workouts:","lastModifiedDate":"2022-03-16"},{"lineNumber":275,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-16"},{"lineNumber":276,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-16"},{"lineNumber":277,"author":{"gitId":"TianaiYan"},"content":"Showing workouts 1-3 of 3:","lastModifiedDate":"2022-03-16"},{"lineNumber":278,"author":{"gitId":"TianaiYan"},"content":"1. push up (10 reps)","lastModifiedDate":"2022-03-16"},{"lineNumber":279,"author":{"gitId":"TianaiYan"},"content":"2. sit up (10 reps)","lastModifiedDate":"2022-03-16"},{"lineNumber":280,"author":{"gitId":"TianaiYan"},"content":"3. pull up (10 reps)","lastModifiedDate":"2022-03-16"},{"lineNumber":281,"author":{"gitId":"TianaiYan"},"content":"Showed all workouts in list","lastModifiedDate":"2022-03-16"},{"lineNumber":282,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-16"},{"lineNumber":283,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-16"},{"lineNumber":284,"author":{"gitId":"TianaiYan"},"content":"To update workout number 1 (push up with 10 reps) ","lastModifiedDate":"2022-03-28"},{"lineNumber":285,"author":{"gitId":"TianaiYan"},"content":"to 15 reps, enter the following command:","lastModifiedDate":"2022-03-28"},{"lineNumber":286,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-16"},{"lineNumber":287,"author":{"gitId":"TianaiYan"},"content":"\u003e workout /update 1 15","lastModifiedDate":"2022-03-16"},{"lineNumber":288,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-16"},{"lineNumber":289,"author":{"gitId":"TianaiYan"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-16"},{"lineNumber":290,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-16"},{"lineNumber":291,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-16"},{"lineNumber":292,"author":{"gitId":"TianaiYan"},"content":"Alright, the following workout has been updated:","lastModifiedDate":"2022-03-16"},{"lineNumber":293,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":294,"author":{"gitId":"TianaiYan"},"content":"\tpush up (15 reps)","lastModifiedDate":"2022-03-16"},{"lineNumber":295,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":296,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-16"},{"lineNumber":297,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-16"},{"lineNumber":298,"author":{"gitId":"TianaiYan"},"content":"Workout number 1 (push up with 10 reps) is updated to push up with 15 reps.","lastModifiedDate":"2022-03-28"},{"lineNumber":299,"author":{"gitId":"TianaiYan"},"content":"Running the `workout /list` command again will show the workout list as follows:","lastModifiedDate":"2022-03-28"},{"lineNumber":300,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-16"},{"lineNumber":301,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-16"},{"lineNumber":302,"author":{"gitId":"TianaiYan"},"content":"Showing workouts 1-3 of 3:","lastModifiedDate":"2022-03-16"},{"lineNumber":303,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":304,"author":{"gitId":"TianaiYan"},"content":"1. push up (15 reps)","lastModifiedDate":"2022-03-16"},{"lineNumber":305,"author":{"gitId":"TianaiYan"},"content":"2. sit up (10 reps)","lastModifiedDate":"2022-03-16"},{"lineNumber":306,"author":{"gitId":"TianaiYan"},"content":"3. pull up (10 reps)","lastModifiedDate":"2022-03-16"},{"lineNumber":307,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":308,"author":{"gitId":"TianaiYan"},"content":"Showed all workouts in list","lastModifiedDate":"2022-03-16"},{"lineNumber":309,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-16"},{"lineNumber":310,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-16"},{"lineNumber":311,"author":{"gitId":"Musfirahe0556596"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":312,"author":{"gitId":"emilysim00"},"content":"## Plan Features","lastModifiedDate":"2022-03-27"},{"lineNumber":313,"author":{"gitId":"Musfirahe0556596"},"content":"### Create a Plan: `plan /new`","lastModifiedDate":"2022-03-24"},{"lineNumber":314,"author":{"gitId":"Musfirahe0556596"},"content":"Creates a new plan, which consists of a plan name and the workout(s) added.","lastModifiedDate":"2022-03-24"},{"lineNumber":315,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":316,"author":{"gitId":"Musfirahe0556596"},"content":"Format: `plan /new \u003cplan name\u003e /workouts \u003cworkout number(s) separated by comma\u003e`","lastModifiedDate":"2022-03-24"},{"lineNumber":317,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":318,"author":{"gitId":"Musfirahe0556596"},"content":"| Parameters                               | Description                                                                                                                                                                              |","lastModifiedDate":"2022-03-24"},{"lineNumber":319,"author":{"gitId":"Musfirahe0556596"},"content":"|------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-28"},{"lineNumber":320,"author":{"gitId":"Musfirahe0556596"},"content":"| `\u003cplan name\u003e`                            | The name of the plan. Plan name must be unique.                                                                                                                                          |","lastModifiedDate":"2022-03-24"},{"lineNumber":321,"author":{"gitId":"Musfirahe0556596"},"content":"| `\u003cworkout number(s) separated by comma\u003e` | The workout(s) that will be added in this new plan. \u003cbr\u003e- Maximum number of workouts per plan is 10.\u003cbr\u003e- Workouts to be added can be repeated.\u003cbr\u003e- `workout /list` to view workouts.   |","lastModifiedDate":"2022-03-28"},{"lineNumber":322,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":323,"author":{"gitId":"Musfirahe0556596"},"content":"**Example**\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":324,"author":{"gitId":"Musfirahe0556596"},"content":"The workout list upon entering `workout /list`, contains the following workouts:","lastModifiedDate":"2022-03-24"},{"lineNumber":325,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":326,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":327,"author":{"gitId":"Musfirahe0556596"},"content":"Showing workouts 1-3 of 3:","lastModifiedDate":"2022-03-24"},{"lineNumber":328,"author":{"gitId":"Musfirahe0556596"},"content":"1. push up (10 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":329,"author":{"gitId":"Musfirahe0556596"},"content":"2. sit up (10 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":330,"author":{"gitId":"Musfirahe0556596"},"content":"3. pull up (10 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":331,"author":{"gitId":"Musfirahe0556596"},"content":"Showed all workouts in list","lastModifiedDate":"2022-03-24"},{"lineNumber":332,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":333,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":334,"author":{"gitId":"Musfirahe0556596"},"content":"To create a new plan, enter the following command:","lastModifiedDate":"2022-03-24"},{"lineNumber":335,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":336,"author":{"gitId":"Musfirahe0556596"},"content":"\u003e plan /new Grow My Muscles /workouts 1, 2, 3, 1","lastModifiedDate":"2022-03-24"},{"lineNumber":337,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":338,"author":{"gitId":"Musfirahe0556596"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-24"},{"lineNumber":339,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":340,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":341,"author":{"gitId":"Musfirahe0556596"},"content":"Alright, the following plan has been created:","lastModifiedDate":"2022-03-24"},{"lineNumber":342,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":343,"author":{"gitId":"Musfirahe0556596"},"content":"\tGrow My Muscles","lastModifiedDate":"2022-03-24"},{"lineNumber":344,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":345,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":346,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":347,"author":{"gitId":"emilysim00"},"content":"A new plan containing the workouts you had specified earlier will be created and added to the application\u0027s list of plans.","lastModifiedDate":"2022-03-27"},{"lineNumber":348,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":349,"author":{"gitId":"Musfirahe0556596"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":350,"author":{"gitId":"TianaiYan"},"content":"### List a Plan: `plan /list`","lastModifiedDate":"2022-03-28"},{"lineNumber":351,"author":{"gitId":"Musfirahe0556596"},"content":"Displays all available plan names in the application\u0027s plan list.","lastModifiedDate":"2022-03-24"},{"lineNumber":352,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":353,"author":{"gitId":"Musfirahe0556596"},"content":"Format: `plan /list`","lastModifiedDate":"2022-03-24"},{"lineNumber":354,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":355,"author":{"gitId":"Musfirahe0556596"},"content":"**Example**\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":356,"author":{"gitId":"Musfirahe0556596"},"content":"To list the plan names, enter the following command:","lastModifiedDate":"2022-03-24"},{"lineNumber":357,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":358,"author":{"gitId":"Musfirahe0556596"},"content":"\u003e plan /list","lastModifiedDate":"2022-03-24"},{"lineNumber":359,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":360,"author":{"gitId":"Musfirahe0556596"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-24"},{"lineNumber":361,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":362,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":363,"author":{"gitId":"Musfirahe0556596"},"content":"Here are all your plan(s).","lastModifiedDate":"2022-03-24"},{"lineNumber":364,"author":{"gitId":"Musfirahe0556596"},"content":"To view each plan in detail, enter","lastModifiedDate":"2022-03-24"},{"lineNumber":365,"author":{"gitId":"Musfirahe0556596"},"content":"\u0027plan /details \u003cplan number in list\u003e\u0027.","lastModifiedDate":"2022-03-24"},{"lineNumber":366,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":367,"author":{"gitId":"Musfirahe0556596"},"content":"1. Plan A","lastModifiedDate":"2022-03-24"},{"lineNumber":368,"author":{"gitId":"Musfirahe0556596"},"content":"2. Plan B","lastModifiedDate":"2022-03-24"},{"lineNumber":369,"author":{"gitId":"Musfirahe0556596"},"content":"3. Grow My Muscles","lastModifiedDate":"2022-03-24"},{"lineNumber":370,"author":{"gitId":"Musfirahe0556596"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":371,"author":{"gitId":"Musfirahe0556596"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":372,"author":{"gitId":"Musfirahe0556596"},"content":"In the current plans list above, there are 3 plans available.","lastModifiedDate":"2022-03-24"},{"lineNumber":373,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":374,"author":{"gitId":"TianaiYan"},"content":"---","lastModifiedDate":"2022-03-28"},{"lineNumber":375,"author":{"gitId":"TianaiYan"},"content":"### List details of a Plan: `plan /details`","lastModifiedDate":"2022-03-28"},{"lineNumber":376,"author":{"gitId":"TianaiYan"},"content":"Lists all the workouts in a plan.","lastModifiedDate":"2022-03-28"},{"lineNumber":377,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":378,"author":{"gitId":"TianaiYan"},"content":"Format: `plan /details \u003cplan number to view details\u003e`","lastModifiedDate":"2022-03-28"},{"lineNumber":379,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":380,"author":{"gitId":"TianaiYan"},"content":"**Example**\u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":381,"author":{"gitId":"TianaiYan"},"content":"Now, the plan list contains the following plans:","lastModifiedDate":"2022-03-28"},{"lineNumber":382,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":383,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":384,"author":{"gitId":"TianaiYan"},"content":"Here are all your plan(s).","lastModifiedDate":"2022-03-28"},{"lineNumber":385,"author":{"gitId":"TianaiYan"},"content":"To view each plan in detail, enter","lastModifiedDate":"2022-03-28"},{"lineNumber":386,"author":{"gitId":"TianaiYan"},"content":"\u0027plan /details \u003cplan number in list\u003e\u0027.","lastModifiedDate":"2022-03-28"},{"lineNumber":387,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":388,"author":{"gitId":"TianaiYan"},"content":"1. plan A","lastModifiedDate":"2022-03-28"},{"lineNumber":389,"author":{"gitId":"TianaiYan"},"content":"2. plan B","lastModifiedDate":"2022-03-28"},{"lineNumber":390,"author":{"gitId":"TianaiYan"},"content":"3. Grow My Muscles","lastModifiedDate":"2022-03-28"},{"lineNumber":391,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":392,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":393,"author":{"gitId":"TianaiYan"},"content":"To view details of plan number 3 from the list, enter the following command:\u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":394,"author":{"gitId":"TianaiYan"},"content":"*Plan number 3 is created by the command in [Create A Plan](#create-a-plan-plan-new).*","lastModifiedDate":"2022-03-28"},{"lineNumber":395,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":396,"author":{"gitId":"TianaiYan"},"content":"\u003e plan /details 3","lastModifiedDate":"2022-03-28"},{"lineNumber":397,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":398,"author":{"gitId":"TianaiYan"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-28"},{"lineNumber":399,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":400,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":401,"author":{"gitId":"TianaiYan"},"content":"Here are the 4 workouts in [Grow My Muscles].","lastModifiedDate":"2022-03-28"},{"lineNumber":402,"author":{"gitId":"TianaiYan"},"content":"1. push up (10 reps)","lastModifiedDate":"2022-03-28"},{"lineNumber":403,"author":{"gitId":"TianaiYan"},"content":"2. sit up (10 reps)","lastModifiedDate":"2022-03-28"},{"lineNumber":404,"author":{"gitId":"TianaiYan"},"content":"3. pull up (10 reps)","lastModifiedDate":"2022-03-28"},{"lineNumber":405,"author":{"gitId":"TianaiYan"},"content":"4. push up (10 reps)","lastModifiedDate":"2022-03-28"},{"lineNumber":406,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":407,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":408,"author":{"gitId":"TianaiYan"},"content":"All workouts in the [Grow My Muscles] plan will be displayed.","lastModifiedDate":"2022-03-28"},{"lineNumber":409,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":410,"author":{"gitId":"TianaiYan"},"content":"---","lastModifiedDate":"2022-03-28"},{"lineNumber":411,"author":{"gitId":"TianaiYan"},"content":"### Delete a Plan: `plan /delete`","lastModifiedDate":"2022-03-28"},{"lineNumber":412,"author":{"gitId":"TianaiYan"},"content":"Removes an existing plan from the plan list.","lastModifiedDate":"2022-03-28"},{"lineNumber":413,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":414,"author":{"gitId":"TianaiYan"},"content":"Format: `plan /delete \u003cplan number to delete\u003e`","lastModifiedDate":"2022-03-28"},{"lineNumber":415,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":416,"author":{"gitId":"TianaiYan"},"content":"| Parameters                | Description                                       |","lastModifiedDate":"2022-03-28"},{"lineNumber":417,"author":{"gitId":"TianaiYan"},"content":"|---------------------------|---------------------------------------------------|","lastModifiedDate":"2022-03-28"},{"lineNumber":418,"author":{"gitId":"TianaiYan"},"content":"| `\u003cplan number to delete\u003e` | The plan number to be removed from the plan list. |","lastModifiedDate":"2022-03-28"},{"lineNumber":419,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":420,"author":{"gitId":"TianaiYan"},"content":"**Example**\u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":421,"author":{"gitId":"TianaiYan"},"content":"Initially, the plan list contains the following plans:","lastModifiedDate":"2022-03-28"},{"lineNumber":422,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":423,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":424,"author":{"gitId":"TianaiYan"},"content":"Here are all your plan(s).","lastModifiedDate":"2022-03-28"},{"lineNumber":425,"author":{"gitId":"TianaiYan"},"content":"To view each plan in detail, enter","lastModifiedDate":"2022-03-28"},{"lineNumber":426,"author":{"gitId":"TianaiYan"},"content":"\u0027plan /details \u003cplan number in list\u003e\u0027.","lastModifiedDate":"2022-03-28"},{"lineNumber":427,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":428,"author":{"gitId":"TianaiYan"},"content":"1. plan A","lastModifiedDate":"2022-03-28"},{"lineNumber":429,"author":{"gitId":"TianaiYan"},"content":"2. plan B","lastModifiedDate":"2022-03-28"},{"lineNumber":430,"author":{"gitId":"TianaiYan"},"content":"3. Grow My Muscles","lastModifiedDate":"2022-03-28"},{"lineNumber":431,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":432,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":433,"author":{"gitId":"TianaiYan"},"content":"To remove plan number 3 from the list, enter the following command:","lastModifiedDate":"2022-03-28"},{"lineNumber":434,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":435,"author":{"gitId":"TianaiYan"},"content":"\u003e plan /delete 3","lastModifiedDate":"2022-03-28"},{"lineNumber":436,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":437,"author":{"gitId":"TianaiYan"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-28"},{"lineNumber":438,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":439,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":440,"author":{"gitId":"TianaiYan"},"content":"Alright, the following plan has been removed:","lastModifiedDate":"2022-03-28"},{"lineNumber":441,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":442,"author":{"gitId":"TianaiYan"},"content":"\tGrow My Muscles","lastModifiedDate":"2022-03-28"},{"lineNumber":443,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":444,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":445,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":446,"author":{"gitId":"TianaiYan"},"content":"Now, plan number 3 (Grow My Muscles) is removed from the plan list.","lastModifiedDate":"2022-03-28"},{"lineNumber":447,"author":{"gitId":"TianaiYan"},"content":"Running the `plan /list` command will show the plan list as follows:","lastModifiedDate":"2022-03-28"},{"lineNumber":448,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":449,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":450,"author":{"gitId":"TianaiYan"},"content":"Here are all your plan(s).","lastModifiedDate":"2022-03-28"},{"lineNumber":451,"author":{"gitId":"TianaiYan"},"content":"To view each plan in detail, enter","lastModifiedDate":"2022-03-28"},{"lineNumber":452,"author":{"gitId":"TianaiYan"},"content":"\u0027plan /details \u003cplan number in list\u003e\u0027.","lastModifiedDate":"2022-03-28"},{"lineNumber":453,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":454,"author":{"gitId":"TianaiYan"},"content":"1. plan A","lastModifiedDate":"2022-03-28"},{"lineNumber":455,"author":{"gitId":"TianaiYan"},"content":"2. plan B","lastModifiedDate":"2022-03-28"},{"lineNumber":456,"author":{"gitId":"TianaiYan"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":457,"author":{"gitId":"TianaiYan"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":458,"author":{"gitId":"TianaiYan"},"content":"---","lastModifiedDate":"2022-03-16"},{"lineNumber":459,"author":{"gitId":"emilysim00"},"content":"## Schedule Features","lastModifiedDate":"2022-03-27"},{"lineNumber":460,"author":{"gitId":"emilysim00"},"content":"### Update Schedule: `schedule /update`","lastModifiedDate":"2022-03-23"},{"lineNumber":461,"author":{"gitId":"emilysim00"},"content":"Update the plan schedule for a particular day of the week.","lastModifiedDate":"2022-03-23"},{"lineNumber":462,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":463,"author":{"gitId":"emilysim00"},"content":"Format: `schedule /update \u003cday number\u003e \u003cplan number\u003e`","lastModifiedDate":"2022-03-23"},{"lineNumber":464,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":465,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":466,"author":{"gitId":"emilysim00"},"content":"| Parameters      | Description                                                                                                        |","lastModifiedDate":"2022-03-23"},{"lineNumber":467,"author":{"gitId":"emilysim00"},"content":"|-----------------|--------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-23"},{"lineNumber":468,"author":{"gitId":"emilysim00"},"content":"| `\u003cday number\u003e`  | Day number is within the range of 1 to 7. Day number 1 represent Monday, day number 2 represent Tuesday and so on. |","lastModifiedDate":"2022-03-23"},{"lineNumber":469,"author":{"gitId":"emilysim00"},"content":"| `\u003cplan number\u003e` | The plan number to be added for the day.                                                                           |","lastModifiedDate":"2022-03-23"},{"lineNumber":470,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":471,"author":{"gitId":"emilysim00"},"content":"**Example**","lastModifiedDate":"2022-03-23"},{"lineNumber":472,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":473,"author":{"gitId":"emilysim00"},"content":"Assume, the plan list contains the following plans:","lastModifiedDate":"2022-03-23"},{"lineNumber":474,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":475,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":476,"author":{"gitId":"emilysim00"},"content":"Here are all your plan(s).","lastModifiedDate":"2022-03-23"},{"lineNumber":477,"author":{"gitId":"emilysim00"},"content":"To view each plan in detail, enter \u0027plan /details \u003cplan number in list\u003e\u0027.","lastModifiedDate":"2022-03-23"},{"lineNumber":478,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":479,"author":{"gitId":"emilysim00"},"content":"1.arms","lastModifiedDate":"2022-03-23"},{"lineNumber":480,"author":{"gitId":"emilysim00"},"content":"2.stronger arms","lastModifiedDate":"2022-03-23"},{"lineNumber":481,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":482,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":483,"author":{"gitId":"emilysim00"},"content":"To update the plan schedule for Monday with plan 1, enter the following command:","lastModifiedDate":"2022-03-23"},{"lineNumber":484,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":485,"author":{"gitId":"emilysim00"},"content":"\u003e schedule /update 1 1","lastModifiedDate":"2022-03-23"},{"lineNumber":486,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":487,"author":{"gitId":"emilysim00"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-23"},{"lineNumber":488,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":489,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":490,"author":{"gitId":"emilysim00"},"content":"Alright, the following plan schedule has been created:","lastModifiedDate":"2022-03-23"},{"lineNumber":491,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":492,"author":{"gitId":"emilysim00"},"content":"\tMonday -- arms","lastModifiedDate":"2022-03-23"},{"lineNumber":493,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":494,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":495,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":496,"author":{"gitId":"emilysim00"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":497,"author":{"gitId":"emilysim00"},"content":"### View Schedule: `schedule /list`","lastModifiedDate":"2022-03-23"},{"lineNumber":498,"author":{"gitId":"emilysim00"},"content":"Display all the plans scheduled for the week.","lastModifiedDate":"2022-03-23"},{"lineNumber":499,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":500,"author":{"gitId":"emilysim00"},"content":"Format: `schedule /list`","lastModifiedDate":"2022-03-23"},{"lineNumber":501,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":502,"author":{"gitId":"emilysim00"},"content":"**Example**","lastModifiedDate":"2022-03-23"},{"lineNumber":503,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":504,"author":{"gitId":"emilysim00"},"content":"To view all the plans scheduled for the week, enter the following command:","lastModifiedDate":"2022-03-23"},{"lineNumber":505,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":506,"author":{"gitId":"emilysim00"},"content":"\u003e schedule /list","lastModifiedDate":"2022-03-23"},{"lineNumber":507,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":508,"author":{"gitId":"emilysim00"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-23"},{"lineNumber":509,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":510,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":511,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":512,"author":{"gitId":"emilysim00"},"content":"                         WORKOUT SCHEDULE","lastModifiedDate":"2022-03-23"},{"lineNumber":513,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":514,"author":{"gitId":"emilysim00"},"content":"     Day       |            Plan Name","lastModifiedDate":"2022-03-23"},{"lineNumber":515,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":516,"author":{"gitId":"emilysim00"},"content":"      Monday   |              arms                          ","lastModifiedDate":"2022-03-23"},{"lineNumber":517,"author":{"gitId":"emilysim00"},"content":"     Tuesday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":518,"author":{"gitId":"emilysim00"},"content":"   Wednesday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":519,"author":{"gitId":"emilysim00"},"content":"    Thursday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":520,"author":{"gitId":"emilysim00"},"content":"      Friday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":521,"author":{"gitId":"emilysim00"},"content":"    Saturday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":522,"author":{"gitId":"emilysim00"},"content":"      Sunday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":523,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":524,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":525,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":526,"author":{"gitId":"Musfirahe0556596"},"content":"By default, if no plan is being scheduled for the day it is a rest day. From the expected outcome, ","lastModifiedDate":"2022-03-24"},{"lineNumber":527,"author":{"gitId":"emilysim00"},"content":"only arms workout plan is scheduled for Monday.","lastModifiedDate":"2022-03-23"},{"lineNumber":528,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":529,"author":{"gitId":"emilysim00"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":530,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":531,"author":{"gitId":"emilysim00"},"content":"### Clear Schedule For A Day: `schedule /clear`","lastModifiedDate":"2022-03-23"},{"lineNumber":532,"author":{"gitId":"emilysim00"},"content":"Remove a plan for a particular day of the week.","lastModifiedDate":"2022-03-23"},{"lineNumber":533,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":534,"author":{"gitId":"emilysim00"},"content":"Format: `schedule /clear \u003cday number\u003e`","lastModifiedDate":"2022-03-23"},{"lineNumber":535,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":536,"author":{"gitId":"emilysim00"},"content":"| Parameters      | Description                                                                                                        |","lastModifiedDate":"2022-03-23"},{"lineNumber":537,"author":{"gitId":"emilysim00"},"content":"|-----------------|--------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-23"},{"lineNumber":538,"author":{"gitId":"emilysim00"},"content":"| `\u003cday number\u003e`  | Day number is within the range of 1 to 7. Day number 1 represent Monday, day number 2 represent Tuesday and so on. |                                                                    |","lastModifiedDate":"2022-03-23"},{"lineNumber":539,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":540,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":541,"author":{"gitId":"emilysim00"},"content":"**Example**","lastModifiedDate":"2022-03-23"},{"lineNumber":542,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":543,"author":{"gitId":"emilysim00"},"content":"Assume, the schedule for the week contains the following plans:","lastModifiedDate":"2022-03-23"},{"lineNumber":544,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":545,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":546,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":547,"author":{"gitId":"emilysim00"},"content":"                         WORKOUT SCHEDULE","lastModifiedDate":"2022-03-23"},{"lineNumber":548,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":549,"author":{"gitId":"emilysim00"},"content":"     Day       |            Plan Name","lastModifiedDate":"2022-03-23"},{"lineNumber":550,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":551,"author":{"gitId":"emilysim00"},"content":"      Monday   |              arms                          ","lastModifiedDate":"2022-03-23"},{"lineNumber":552,"author":{"gitId":"emilysim00"},"content":"     Tuesday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":553,"author":{"gitId":"emilysim00"},"content":"   Wednesday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":554,"author":{"gitId":"emilysim00"},"content":"    Thursday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":555,"author":{"gitId":"emilysim00"},"content":"      Friday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":556,"author":{"gitId":"emilysim00"},"content":"    Saturday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":557,"author":{"gitId":"emilysim00"},"content":"      Sunday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":558,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":559,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":560,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":561,"author":{"gitId":"emilysim00"},"content":"To clear the plans scheduled for Monday, enter the following command:","lastModifiedDate":"2022-03-23"},{"lineNumber":562,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":563,"author":{"gitId":"emilysim00"},"content":"\u003e schedule /clear 1","lastModifiedDate":"2022-03-23"},{"lineNumber":564,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":565,"author":{"gitId":"emilysim00"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-23"},{"lineNumber":566,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":567,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":568,"author":{"gitId":"emilysim00"},"content":"Plan had been cleared for Monday.","lastModifiedDate":"2022-03-23"},{"lineNumber":569,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":570,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":571,"author":{"gitId":"emilysim00"},"content":"After a plan had been cleared for a particular day, the day will be reset to be a rest day.","lastModifiedDate":"2022-03-23"},{"lineNumber":572,"author":{"gitId":"emilysim00"},"content":"To view the changes enter command ```schedule /list```. ","lastModifiedDate":"2022-03-23"},{"lineNumber":573,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":574,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":575,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":576,"author":{"gitId":"emilysim00"},"content":"                         WORKOUT SCHEDULE","lastModifiedDate":"2022-03-23"},{"lineNumber":577,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":578,"author":{"gitId":"emilysim00"},"content":"     Day       |            Plan Name","lastModifiedDate":"2022-03-23"},{"lineNumber":579,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":580,"author":{"gitId":"emilysim00"},"content":"      Monday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":581,"author":{"gitId":"emilysim00"},"content":"     Tuesday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":582,"author":{"gitId":"emilysim00"},"content":"   Wednesday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":583,"author":{"gitId":"emilysim00"},"content":"    Thursday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":584,"author":{"gitId":"emilysim00"},"content":"      Friday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":585,"author":{"gitId":"emilysim00"},"content":"    Saturday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":586,"author":{"gitId":"emilysim00"},"content":"      Sunday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":587,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":588,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":589,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":590,"author":{"gitId":"emilysim00"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":591,"author":{"gitId":"emilysim00"},"content":"### Clear Schedule For The Week: `schedule /clearall`","lastModifiedDate":"2022-03-23"},{"lineNumber":592,"author":{"gitId":"emilysim00"},"content":"Remove all plans scheduled for the week.","lastModifiedDate":"2022-03-23"},{"lineNumber":593,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":594,"author":{"gitId":"emilysim00"},"content":"Format: `schedule /clearall`","lastModifiedDate":"2022-03-23"},{"lineNumber":595,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":596,"author":{"gitId":"emilysim00"},"content":"**Example**","lastModifiedDate":"2022-03-23"},{"lineNumber":597,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":598,"author":{"gitId":"emilysim00"},"content":"Assume, the schedule for the week contains the following plans:","lastModifiedDate":"2022-03-23"},{"lineNumber":599,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":600,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":601,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":602,"author":{"gitId":"emilysim00"},"content":"                         WORKOUT SCHEDULE","lastModifiedDate":"2022-03-23"},{"lineNumber":603,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":604,"author":{"gitId":"emilysim00"},"content":"     Day       |            Plan Name","lastModifiedDate":"2022-03-23"},{"lineNumber":605,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":606,"author":{"gitId":"emilysim00"},"content":"      Monday   |              arms                          ","lastModifiedDate":"2022-03-23"},{"lineNumber":607,"author":{"gitId":"emilysim00"},"content":"     Tuesday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":608,"author":{"gitId":"emilysim00"},"content":"   Wednesday   |         stronger arms                 ","lastModifiedDate":"2022-03-23"},{"lineNumber":609,"author":{"gitId":"emilysim00"},"content":"    Thursday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":610,"author":{"gitId":"emilysim00"},"content":"      Friday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":611,"author":{"gitId":"emilysim00"},"content":"    Saturday   |         stronger arms                 ","lastModifiedDate":"2022-03-23"},{"lineNumber":612,"author":{"gitId":"emilysim00"},"content":"      Sunday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":613,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":614,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":615,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":616,"author":{"gitId":"emilysim00"},"content":"To clear all plans scheduled for the week, enter the following command:","lastModifiedDate":"2022-03-23"},{"lineNumber":617,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":618,"author":{"gitId":"emilysim00"},"content":"\u003e schedule /clearall","lastModifiedDate":"2022-03-23"},{"lineNumber":619,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":620,"author":{"gitId":"emilysim00"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-23"},{"lineNumber":621,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":622,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":623,"author":{"gitId":"emilysim00"},"content":"Schedule had been cleared and reset.","lastModifiedDate":"2022-03-23"},{"lineNumber":624,"author":{"gitId":"emilysim00"},"content":"There is no plan scheduled for any day.","lastModifiedDate":"2022-03-23"},{"lineNumber":625,"author":{"gitId":"emilysim00"},"content":"To add plan for any day, enter:","lastModifiedDate":"2022-03-23"},{"lineNumber":626,"author":{"gitId":"emilysim00"},"content":"schedule /update \u003cday number [1-7]\u003e \u003cplan number\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":627,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":628,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":629,"author":{"gitId":"emilysim00"},"content":"After a plan had been cleared for a particular day, the day will be reset to be a rest day.","lastModifiedDate":"2022-03-23"},{"lineNumber":630,"author":{"gitId":"emilysim00"},"content":"To view the changes enter command ```schedule /list```.","lastModifiedDate":"2022-03-23"},{"lineNumber":631,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":632,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":633,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":634,"author":{"gitId":"emilysim00"},"content":"                         WORKOUT SCHEDULE","lastModifiedDate":"2022-03-23"},{"lineNumber":635,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":636,"author":{"gitId":"emilysim00"},"content":"     Day       |            Plan Name","lastModifiedDate":"2022-03-23"},{"lineNumber":637,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":638,"author":{"gitId":"emilysim00"},"content":"      Monday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":639,"author":{"gitId":"emilysim00"},"content":"     Tuesday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":640,"author":{"gitId":"emilysim00"},"content":"   Wednesday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":641,"author":{"gitId":"emilysim00"},"content":"    Thursday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":642,"author":{"gitId":"emilysim00"},"content":"      Friday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":643,"author":{"gitId":"emilysim00"},"content":"    Saturday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":644,"author":{"gitId":"emilysim00"},"content":"      Sunday   |            rest day                      ","lastModifiedDate":"2022-03-23"},{"lineNumber":645,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":646,"author":{"gitId":"emilysim00"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":647,"author":{"gitId":"emilysim00"},"content":"```","lastModifiedDate":"2022-03-23"},{"lineNumber":648,"author":{"gitId":"emilysim00"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":649,"author":{"gitId":"emilysim00"},"content":"## Search Features","lastModifiedDate":"2022-03-27"},{"lineNumber":650,"author":{"gitId":"a1021492980"},"content":"### Search For Exercise: `search /exercise`","lastModifiedDate":"2022-03-24"},{"lineNumber":651,"author":{"gitId":"a1021492980"},"content":"Find all exercises containing the specified keywords.","lastModifiedDate":"2022-03-24"},{"lineNumber":652,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":653,"author":{"gitId":"a1021492980"},"content":"Format: `search /exercise \u003cexercise keyword\u003e`","lastModifiedDate":"2022-03-24"},{"lineNumber":654,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":655,"author":{"gitId":"emilysim00"},"content":"| Parameters           | Description                                                         |","lastModifiedDate":"2022-03-27"},{"lineNumber":656,"author":{"gitId":"emilysim00"},"content":"|----------------------|---------------------------------------------------------------------|","lastModifiedDate":"2022-03-27"},{"lineNumber":657,"author":{"gitId":"emilysim00"},"content":"| `\u003cexercise keyword\u003e` | The keyword to be matched when searching through the exercise list. |","lastModifiedDate":"2022-03-27"},{"lineNumber":658,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":659,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":660,"author":{"gitId":"a1021492980"},"content":"**Example**","lastModifiedDate":"2022-03-24"},{"lineNumber":661,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":662,"author":{"gitId":"a1021492980"},"content":"Assume, the exercise list contains the following exercises:","lastModifiedDate":"2022-03-24"},{"lineNumber":663,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":664,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":665,"author":{"gitId":"a1021492980"},"content":"1. push up","lastModifiedDate":"2022-03-24"},{"lineNumber":666,"author":{"gitId":"a1021492980"},"content":"2. bicep curl","lastModifiedDate":"2022-03-24"},{"lineNumber":667,"author":{"gitId":"a1021492980"},"content":"3. pull up","lastModifiedDate":"2022-03-24"},{"lineNumber":668,"author":{"gitId":"a1021492980"},"content":"4. squat","lastModifiedDate":"2022-03-24"},{"lineNumber":669,"author":{"gitId":"a1021492980"},"content":"5. lunge","lastModifiedDate":"2022-03-24"},{"lineNumber":670,"author":{"gitId":"a1021492980"},"content":"6. hip thrust","lastModifiedDate":"2022-03-24"},{"lineNumber":671,"author":{"gitId":"a1021492980"},"content":"7. sit up","lastModifiedDate":"2022-03-24"},{"lineNumber":672,"author":{"gitId":"a1021492980"},"content":"8. crunch","lastModifiedDate":"2022-03-24"},{"lineNumber":673,"author":{"gitId":"a1021492980"},"content":"9. russian twist","lastModifiedDate":"2022-03-24"},{"lineNumber":674,"author":{"gitId":"a1021492980"},"content":"10. running","lastModifiedDate":"2022-03-24"},{"lineNumber":675,"author":{"gitId":"a1021492980"},"content":"11. swimming","lastModifiedDate":"2022-03-24"},{"lineNumber":676,"author":{"gitId":"a1021492980"},"content":"12. jumping jack","lastModifiedDate":"2022-03-24"},{"lineNumber":677,"author":{"gitId":"a1021492980"},"content":"13. burpee","lastModifiedDate":"2022-03-24"},{"lineNumber":678,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":679,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":680,"author":{"gitId":"a1021492980"},"content":"To search for exercises containing keywords \"up\", enter the following command:","lastModifiedDate":"2022-03-24"},{"lineNumber":681,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":682,"author":{"gitId":"a1021492980"},"content":"\u003e search /exercise up","lastModifiedDate":"2022-03-24"},{"lineNumber":683,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":684,"author":{"gitId":"a1021492980"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-24"},{"lineNumber":685,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":686,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":687,"author":{"gitId":"a1021492980"},"content":"The exercise(s) containing keywords [up] is(are) listed below.","lastModifiedDate":"2022-03-24"},{"lineNumber":688,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":689,"author":{"gitId":"a1021492980"},"content":"1. push up","lastModifiedDate":"2022-03-24"},{"lineNumber":690,"author":{"gitId":"a1021492980"},"content":"2. pull up","lastModifiedDate":"2022-03-24"},{"lineNumber":691,"author":{"gitId":"a1021492980"},"content":"3. sit up","lastModifiedDate":"2022-03-24"},{"lineNumber":692,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":693,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":694,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":695,"author":{"gitId":"a1021492980"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":696,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":697,"author":{"gitId":"a1021492980"},"content":"### Search For Workout: `search /workout`","lastModifiedDate":"2022-03-24"},{"lineNumber":698,"author":{"gitId":"a1021492980"},"content":"Find all workouts containing the specified keywords or number of reps.","lastModifiedDate":"2022-03-24"},{"lineNumber":699,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":700,"author":{"gitId":"a1021492980"},"content":"Format: `search /workout \u003cexercise keyword or number of reps\u003e`","lastModifiedDate":"2022-03-24"},{"lineNumber":701,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":702,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":703,"author":{"gitId":"emilysim00"},"content":"| Parameters                             | Description                                                                  |","lastModifiedDate":"2022-03-27"},{"lineNumber":704,"author":{"gitId":"emilysim00"},"content":"|----------------------------------------|------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-27"},{"lineNumber":705,"author":{"gitId":"emilysim00"},"content":"| `\u003cexercise keyword or number of reps\u003e` | The keyword or number to be matched when searching through the workout list. |","lastModifiedDate":"2022-03-27"},{"lineNumber":706,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":707,"author":{"gitId":"a1021492980"},"content":"**Example**","lastModifiedDate":"2022-03-24"},{"lineNumber":708,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":709,"author":{"gitId":"a1021492980"},"content":"Assume, the workout list contains the following workouts:","lastModifiedDate":"2022-03-24"},{"lineNumber":710,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":711,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":712,"author":{"gitId":"a1021492980"},"content":"1. pull up (10 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":713,"author":{"gitId":"a1021492980"},"content":"2. push up (1455 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":714,"author":{"gitId":"a1021492980"},"content":"3. crunch (10 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":715,"author":{"gitId":"a1021492980"},"content":"4. squat (25 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":716,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":717,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":718,"author":{"gitId":"a1021492980"},"content":"To search for workouts containing keywords \"a\", enter the following command:","lastModifiedDate":"2022-03-24"},{"lineNumber":719,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":720,"author":{"gitId":"a1021492980"},"content":"\u003e search /workout a","lastModifiedDate":"2022-03-24"},{"lineNumber":721,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":722,"author":{"gitId":"a1021492980"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-24"},{"lineNumber":723,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":724,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":725,"author":{"gitId":"a1021492980"},"content":"The workout(s) containing keywords [a] is(are) listed below.","lastModifiedDate":"2022-03-24"},{"lineNumber":726,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":727,"author":{"gitId":"a1021492980"},"content":"1. squat (25 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":728,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":729,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":730,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":731,"author":{"gitId":"a1021492980"},"content":"To search for workouts with number of reps \u003d 10, enter the following command:","lastModifiedDate":"2022-03-24"},{"lineNumber":732,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":733,"author":{"gitId":"a1021492980"},"content":"\u003e search /workout 10","lastModifiedDate":"2022-03-24"},{"lineNumber":734,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":735,"author":{"gitId":"a1021492980"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-24"},{"lineNumber":736,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":737,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":738,"author":{"gitId":"a1021492980"},"content":"The workout(s) with reps \u003d 10 is(are) listed below.","lastModifiedDate":"2022-03-24"},{"lineNumber":739,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":740,"author":{"gitId":"a1021492980"},"content":"1. pull up (10 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":741,"author":{"gitId":"a1021492980"},"content":"2. crunch (10 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":742,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":743,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":744,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":745,"author":{"gitId":"a1021492980"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":746,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":747,"author":{"gitId":"a1021492980"},"content":"### Search For Plan: `search /plan`","lastModifiedDate":"2022-03-24"},{"lineNumber":748,"author":{"gitId":"a1021492980"},"content":"Find all plans containing the specified keywords.","lastModifiedDate":"2022-03-24"},{"lineNumber":749,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":750,"author":{"gitId":"a1021492980"},"content":"Format: `search /plan \u003cplan keyword\u003e`","lastModifiedDate":"2022-03-24"},{"lineNumber":751,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":752,"author":{"gitId":"emilysim00"},"content":"| Parameters       | Description                                                     |","lastModifiedDate":"2022-03-27"},{"lineNumber":753,"author":{"gitId":"emilysim00"},"content":"|------------------|-----------------------------------------------------------------|","lastModifiedDate":"2022-03-27"},{"lineNumber":754,"author":{"gitId":"emilysim00"},"content":"| `\u003cplan keyword\u003e` | The keyword to be matched when searching through the plan list. |","lastModifiedDate":"2022-03-27"},{"lineNumber":755,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":756,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":757,"author":{"gitId":"a1021492980"},"content":"**Example**","lastModifiedDate":"2022-03-24"},{"lineNumber":758,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":759,"author":{"gitId":"a1021492980"},"content":"Assume, the plan list contains the following plans:","lastModifiedDate":"2022-03-24"},{"lineNumber":760,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":761,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":762,"author":{"gitId":"a1021492980"},"content":"Here are all your plan(s).","lastModifiedDate":"2022-03-24"},{"lineNumber":763,"author":{"gitId":"a1021492980"},"content":"To view each plan in detail, enter","lastModifiedDate":"2022-03-24"},{"lineNumber":764,"author":{"gitId":"a1021492980"},"content":"\u0027plan /details \u003cplan number in list\u003e\u0027.","lastModifiedDate":"2022-03-24"},{"lineNumber":765,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":766,"author":{"gitId":"a1021492980"},"content":"1. grow my muscles","lastModifiedDate":"2022-03-24"},{"lineNumber":767,"author":{"gitId":"a1021492980"},"content":"2. arms","lastModifiedDate":"2022-03-24"},{"lineNumber":768,"author":{"gitId":"a1021492980"},"content":"3. legs","lastModifiedDate":"2022-03-24"},{"lineNumber":769,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":770,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":771,"author":{"gitId":"a1021492980"},"content":"To search for plans containing keywords \"e\", enter the following command:","lastModifiedDate":"2022-03-24"},{"lineNumber":772,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":773,"author":{"gitId":"a1021492980"},"content":"\u003e search /plan e","lastModifiedDate":"2022-03-24"},{"lineNumber":774,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":775,"author":{"gitId":"a1021492980"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-24"},{"lineNumber":776,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":777,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":778,"author":{"gitId":"a1021492980"},"content":"The plan(s) containing keywords [e] is(are) listed below.","lastModifiedDate":"2022-03-24"},{"lineNumber":779,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":780,"author":{"gitId":"a1021492980"},"content":"1. grow my muscles","lastModifiedDate":"2022-03-24"},{"lineNumber":781,"author":{"gitId":"a1021492980"},"content":"2. legs","lastModifiedDate":"2022-03-24"},{"lineNumber":782,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":783,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":784,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":785,"author":{"gitId":"a1021492980"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":786,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":787,"author":{"gitId":"a1021492980"},"content":"### Search For All: `search /all`","lastModifiedDate":"2022-03-24"},{"lineNumber":788,"author":{"gitId":"a1021492980"},"content":"Find all exercises, workouts and plans containing the specified keywords.","lastModifiedDate":"2022-03-24"},{"lineNumber":789,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":790,"author":{"gitId":"a1021492980"},"content":"Format: `search /all \u003ckeyword\u003e`","lastModifiedDate":"2022-03-24"},{"lineNumber":791,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":792,"author":{"gitId":"emilysim00"},"content":"| Parameters  | Description                                                         |","lastModifiedDate":"2022-03-27"},{"lineNumber":793,"author":{"gitId":"emilysim00"},"content":"|-------------|---------------------------------------------------------------------|","lastModifiedDate":"2022-03-27"},{"lineNumber":794,"author":{"gitId":"emilysim00"},"content":"| `\u003ckeyword\u003e` | The keyword to be matched when searching through the all the lists. |","lastModifiedDate":"2022-03-27"},{"lineNumber":795,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":796,"author":{"gitId":"a1021492980"},"content":"**Example**","lastModifiedDate":"2022-03-24"},{"lineNumber":797,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":798,"author":{"gitId":"a1021492980"},"content":"Assume, the exercise list contains the following exercises:","lastModifiedDate":"2022-03-24"},{"lineNumber":799,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":800,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":801,"author":{"gitId":"a1021492980"},"content":"1. push up","lastModifiedDate":"2022-03-24"},{"lineNumber":802,"author":{"gitId":"a1021492980"},"content":"2. bicep curl","lastModifiedDate":"2022-03-24"},{"lineNumber":803,"author":{"gitId":"a1021492980"},"content":"3. pull up","lastModifiedDate":"2022-03-24"},{"lineNumber":804,"author":{"gitId":"a1021492980"},"content":"4. squat","lastModifiedDate":"2022-03-24"},{"lineNumber":805,"author":{"gitId":"a1021492980"},"content":"5. lunge","lastModifiedDate":"2022-03-24"},{"lineNumber":806,"author":{"gitId":"a1021492980"},"content":"6. hip thrust","lastModifiedDate":"2022-03-24"},{"lineNumber":807,"author":{"gitId":"a1021492980"},"content":"7. sit up","lastModifiedDate":"2022-03-24"},{"lineNumber":808,"author":{"gitId":"a1021492980"},"content":"8. crunch","lastModifiedDate":"2022-03-24"},{"lineNumber":809,"author":{"gitId":"a1021492980"},"content":"9. russian twist","lastModifiedDate":"2022-03-24"},{"lineNumber":810,"author":{"gitId":"a1021492980"},"content":"10. running","lastModifiedDate":"2022-03-24"},{"lineNumber":811,"author":{"gitId":"a1021492980"},"content":"11. swimming","lastModifiedDate":"2022-03-24"},{"lineNumber":812,"author":{"gitId":"a1021492980"},"content":"12. jumping jack","lastModifiedDate":"2022-03-24"},{"lineNumber":813,"author":{"gitId":"a1021492980"},"content":"13. burpee","lastModifiedDate":"2022-03-24"},{"lineNumber":814,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":815,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":816,"author":{"gitId":"a1021492980"},"content":"and the workout list contains the following workouts:","lastModifiedDate":"2022-03-24"},{"lineNumber":817,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":818,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":819,"author":{"gitId":"a1021492980"},"content":"1. pull up (10 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":820,"author":{"gitId":"a1021492980"},"content":"2. push up (1455 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":821,"author":{"gitId":"a1021492980"},"content":"3. crunch (10 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":822,"author":{"gitId":"a1021492980"},"content":"4. squat (25 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":823,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":824,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":825,"author":{"gitId":"a1021492980"},"content":"and the plan list contains the following plans:","lastModifiedDate":"2022-03-24"},{"lineNumber":826,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":827,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":828,"author":{"gitId":"a1021492980"},"content":"1. grow my muscles","lastModifiedDate":"2022-03-24"},{"lineNumber":829,"author":{"gitId":"a1021492980"},"content":"2. arms","lastModifiedDate":"2022-03-24"},{"lineNumber":830,"author":{"gitId":"a1021492980"},"content":"3. legs","lastModifiedDate":"2022-03-24"},{"lineNumber":831,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":832,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":833,"author":{"gitId":"a1021492980"},"content":"To search for everything containing keywords \"a\", enter the following","lastModifiedDate":"2022-03-24"},{"lineNumber":834,"author":{"gitId":"a1021492980"},"content":"command:","lastModifiedDate":"2022-03-24"},{"lineNumber":835,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":836,"author":{"gitId":"a1021492980"},"content":"\u003e search /all a","lastModifiedDate":"2022-03-24"},{"lineNumber":837,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":838,"author":{"gitId":"a1021492980"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-24"},{"lineNumber":839,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":840,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":841,"author":{"gitId":"a1021492980"},"content":"The exercise(s) containing keywords [a] is(are) listed below.","lastModifiedDate":"2022-03-24"},{"lineNumber":842,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":843,"author":{"gitId":"a1021492980"},"content":"1. squat","lastModifiedDate":"2022-03-24"},{"lineNumber":844,"author":{"gitId":"a1021492980"},"content":"2. russian twist","lastModifiedDate":"2022-03-24"},{"lineNumber":845,"author":{"gitId":"a1021492980"},"content":"3. jumping jack","lastModifiedDate":"2022-03-24"},{"lineNumber":846,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":847,"author":{"gitId":"a1021492980"},"content":"The workout(s) containing keywords [a] is(are) listed below.","lastModifiedDate":"2022-03-24"},{"lineNumber":848,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":849,"author":{"gitId":"a1021492980"},"content":"1. squat (25 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":850,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":851,"author":{"gitId":"a1021492980"},"content":"The plan(s) containing keywords [a] is(are) listed below.","lastModifiedDate":"2022-03-24"},{"lineNumber":852,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":853,"author":{"gitId":"a1021492980"},"content":"1. arms","lastModifiedDate":"2022-03-24"},{"lineNumber":854,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":855,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":856,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":857,"author":{"gitId":"a1021492980"},"content":"To search for everything containing keywords 10, enter the following","lastModifiedDate":"2022-03-24"},{"lineNumber":858,"author":{"gitId":"a1021492980"},"content":"command:","lastModifiedDate":"2022-03-24"},{"lineNumber":859,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":860,"author":{"gitId":"a1021492980"},"content":"\u003e search /all 10","lastModifiedDate":"2022-03-24"},{"lineNumber":861,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":862,"author":{"gitId":"a1021492980"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-24"},{"lineNumber":863,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":864,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":865,"author":{"gitId":"a1021492980"},"content":"Sorry, no matching exercise found.","lastModifiedDate":"2022-03-24"},{"lineNumber":866,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":867,"author":{"gitId":"a1021492980"},"content":"The workout(s) with reps \u003d 10 is(are) listed below.","lastModifiedDate":"2022-03-24"},{"lineNumber":868,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":869,"author":{"gitId":"a1021492980"},"content":"1. pull up (10 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":870,"author":{"gitId":"a1021492980"},"content":"2. crunch (10 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":871,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":872,"author":{"gitId":"a1021492980"},"content":"Sorry, no matching plan found.","lastModifiedDate":"2022-03-24"},{"lineNumber":873,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":874,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":875,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":876,"author":{"gitId":"a1021492980"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":877,"author":{"gitId":"emilysim00"},"content":"## Help Feature","lastModifiedDate":"2022-03-27"},{"lineNumber":878,"author":{"gitId":"a1021492980"},"content":"### View Help: `help`","lastModifiedDate":"2022-03-20"},{"lineNumber":879,"author":{"gitId":"a1021492980"},"content":"Lists all the commands with examples.","lastModifiedDate":"2022-03-20"},{"lineNumber":880,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":881,"author":{"gitId":"a1021492980"},"content":"Format: `help`","lastModifiedDate":"2022-03-20"},{"lineNumber":882,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":883,"author":{"gitId":"a1021492980"},"content":"**Example**","lastModifiedDate":"2022-03-20"},{"lineNumber":884,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-20"},{"lineNumber":885,"author":{"gitId":"a1021492980"},"content":"\u003e help","lastModifiedDate":"2022-03-20"},{"lineNumber":886,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-20"},{"lineNumber":887,"author":{"gitId":"a1021492980"},"content":"**Expected Outcome**","lastModifiedDate":"2022-03-20"},{"lineNumber":888,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-20"},{"lineNumber":889,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-20"},{"lineNumber":890,"author":{"gitId":"a1021492980"},"content":"\t To view all exercises available, please enter:","lastModifiedDate":"2022-03-20"},{"lineNumber":891,"author":{"gitId":"a1021492980"},"content":"\t exercise /list","lastModifiedDate":"2022-03-20"},{"lineNumber":892,"author":{"gitId":"a1021492980"},"content":"\t This will print all the exercises available.","lastModifiedDate":"2022-03-20"},{"lineNumber":893,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":894,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":895,"author":{"gitId":"a1021492980"},"content":"\t To view all workouts, please enter:","lastModifiedDate":"2022-03-24"},{"lineNumber":896,"author":{"gitId":"a1021492980"},"content":"\t workout /list","lastModifiedDate":"2022-03-24"},{"lineNumber":897,"author":{"gitId":"a1021492980"},"content":"\t This will print all the existing workouts.","lastModifiedDate":"2022-03-24"},{"lineNumber":898,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-20"},{"lineNumber":899,"author":{"gitId":"a1021492980"},"content":"\t To add a workout, please enter: ","lastModifiedDate":"2022-03-20"},{"lineNumber":900,"author":{"gitId":"a1021492980"},"content":"\t workout /new \u003cexercise name\u003e /reps \u003cno. of repetitions\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":901,"author":{"gitId":"a1021492980"},"content":"\t Example: ","lastModifiedDate":"2022-03-20"},{"lineNumber":902,"author":{"gitId":"a1021492980"},"content":"\t workout /new push up /reps 10","lastModifiedDate":"2022-03-20"},{"lineNumber":903,"author":{"gitId":"a1021492980"},"content":"\t This will add a workout with 10 reps of push up","lastModifiedDate":"2022-03-24"},{"lineNumber":904,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-20"},{"lineNumber":905,"author":{"gitId":"a1021492980"},"content":"\t To delete a workout, please enter: ","lastModifiedDate":"2022-03-20"},{"lineNumber":906,"author":{"gitId":"a1021492980"},"content":"\t workout /delete \u003cindex of workout\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":907,"author":{"gitId":"a1021492980"},"content":"\t Example: ","lastModifiedDate":"2022-03-20"},{"lineNumber":908,"author":{"gitId":"a1021492980"},"content":"\t workout /delete 1","lastModifiedDate":"2022-03-20"},{"lineNumber":909,"author":{"gitId":"a1021492980"},"content":"\t This will delete the workout with index 1 if exists.","lastModifiedDate":"2022-03-20"},{"lineNumber":910,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-20"},{"lineNumber":911,"author":{"gitId":"a1021492980"},"content":"\t To update a workout, please enter: ","lastModifiedDate":"2022-03-20"},{"lineNumber":912,"author":{"gitId":"a1021492980"},"content":"\t workout /update \u003cindex of workout\u003e \u003cquantity\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":913,"author":{"gitId":"a1021492980"},"content":"\t Example: ","lastModifiedDate":"2022-03-20"},{"lineNumber":914,"author":{"gitId":"a1021492980"},"content":"\t workout /update 1 15","lastModifiedDate":"2022-03-20"},{"lineNumber":915,"author":{"gitId":"a1021492980"},"content":"\t This will update the workout with index 1 to 15 reps if exists.","lastModifiedDate":"2022-03-20"},{"lineNumber":916,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":917,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":918,"author":{"gitId":"a1021492980"},"content":"\t To view all plans, please enter:","lastModifiedDate":"2022-03-24"},{"lineNumber":919,"author":{"gitId":"a1021492980"},"content":"\t plan /list","lastModifiedDate":"2022-03-24"},{"lineNumber":920,"author":{"gitId":"a1021492980"},"content":"\t This will print all the existing plans.","lastModifiedDate":"2022-03-24"},{"lineNumber":921,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":922,"author":{"gitId":"a1021492980"},"content":"\t To view each plan in detail, please enter:","lastModifiedDate":"2022-03-24"},{"lineNumber":923,"author":{"gitId":"a1021492980"},"content":"\t plan /details \u003cplan index in list\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":924,"author":{"gitId":"a1021492980"},"content":"\t This will print all the workouts in the plan of given index.","lastModifiedDate":"2022-03-24"},{"lineNumber":925,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":926,"author":{"gitId":"a1021492980"},"content":"\t To add a plan, please enter: ","lastModifiedDate":"2022-03-24"},{"lineNumber":927,"author":{"gitId":"a1021492980"},"content":"\t plan /new \u003cplan name\u003e /workouts \u003cworkout index(s) separated by \u0027,\u0027\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":928,"author":{"gitId":"a1021492980"},"content":"\t Example: ","lastModifiedDate":"2022-03-24"},{"lineNumber":929,"author":{"gitId":"a1021492980"},"content":"\t The workout list upon entering workout /list, contains the","lastModifiedDate":"2022-03-24"},{"lineNumber":930,"author":{"gitId":"a1021492980"},"content":" \t following workouts:","lastModifiedDate":"2022-03-24"},{"lineNumber":931,"author":{"gitId":"a1021492980"},"content":"\t 1. push up (10 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":932,"author":{"gitId":"a1021492980"},"content":"\t 2. sit up (10 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":933,"author":{"gitId":"a1021492980"},"content":"\t 3. pull up (10 reps)","lastModifiedDate":"2022-03-24"},{"lineNumber":934,"author":{"gitId":"a1021492980"},"content":"\t To create a new plan, enter the following command:","lastModifiedDate":"2022-03-24"},{"lineNumber":935,"author":{"gitId":"a1021492980"},"content":"\t plan /new Grow My Muscles /workouts 1, 2","lastModifiedDate":"2022-03-24"},{"lineNumber":936,"author":{"gitId":"a1021492980"},"content":"\t A new plan named Grow My Muscles with workout index 1 and 2","lastModifiedDate":"2022-03-24"},{"lineNumber":937,"author":{"gitId":"a1021492980"},"content":"\t will be created and added to the application\u0027s list of plans.","lastModifiedDate":"2022-03-24"},{"lineNumber":938,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":939,"author":{"gitId":"a1021492980"},"content":"\t To delete a plan, please enter: ","lastModifiedDate":"2022-03-24"},{"lineNumber":940,"author":{"gitId":"a1021492980"},"content":"\t plan /delete \u003cindex of plan\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":941,"author":{"gitId":"a1021492980"},"content":"\t Example: ","lastModifiedDate":"2022-03-24"},{"lineNumber":942,"author":{"gitId":"a1021492980"},"content":"\t plan /delete 1","lastModifiedDate":"2022-03-24"},{"lineNumber":943,"author":{"gitId":"a1021492980"},"content":"\t This will delete the plan with index 1 if exists.","lastModifiedDate":"2022-03-24"},{"lineNumber":944,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":945,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":946,"author":{"gitId":"a1021492980"},"content":"\t To view the schedule, please enter:","lastModifiedDate":"2022-03-24"},{"lineNumber":947,"author":{"gitId":"a1021492980"},"content":"\t schedule /list","lastModifiedDate":"2022-03-24"},{"lineNumber":948,"author":{"gitId":"a1021492980"},"content":"\t This will print the schedule.","lastModifiedDate":"2022-03-24"},{"lineNumber":949,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":950,"author":{"gitId":"a1021492980"},"content":"\t To update schedule, please enter: ","lastModifiedDate":"2022-03-24"},{"lineNumber":951,"author":{"gitId":"a1021492980"},"content":"\t schedule /update \u003cday index [1-7]\u003e \u003cplan index in the list\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":952,"author":{"gitId":"a1021492980"},"content":"\t Example: ","lastModifiedDate":"2022-03-24"},{"lineNumber":953,"author":{"gitId":"a1021492980"},"content":"\t The plan list upon entering plan /list, contains the","lastModifiedDate":"2022-03-24"},{"lineNumber":954,"author":{"gitId":"a1021492980"},"content":" \t following plans:","lastModifiedDate":"2022-03-24"},{"lineNumber":955,"author":{"gitId":"a1021492980"},"content":"\t 1. arms","lastModifiedDate":"2022-03-24"},{"lineNumber":956,"author":{"gitId":"a1021492980"},"content":"\t 2. stronger arms","lastModifiedDate":"2022-03-24"},{"lineNumber":957,"author":{"gitId":"a1021492980"},"content":"\t 3. Grow My Muscles","lastModifiedDate":"2022-03-24"},{"lineNumber":958,"author":{"gitId":"a1021492980"},"content":"\t To update the plan schedule for Monday with plan 1, enter the","lastModifiedDate":"2022-03-24"},{"lineNumber":959,"author":{"gitId":"a1021492980"},"content":" \t following command:","lastModifiedDate":"2022-03-24"},{"lineNumber":960,"author":{"gitId":"a1021492980"},"content":"\t schedule /update 1 1","lastModifiedDate":"2022-03-24"},{"lineNumber":961,"author":{"gitId":"a1021492980"},"content":"\t This will update the schedule of Monday with a plan named arms.","lastModifiedDate":"2022-03-24"},{"lineNumber":962,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":963,"author":{"gitId":"a1021492980"},"content":"\t To clear schedule, please enter: ","lastModifiedDate":"2022-03-24"},{"lineNumber":964,"author":{"gitId":"a1021492980"},"content":"\t schedule /clear \u003cday index [1-7]\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":965,"author":{"gitId":"a1021492980"},"content":"\t This will clear the schedule for the given day.","lastModifiedDate":"2022-03-24"},{"lineNumber":966,"author":{"gitId":"a1021492980"},"content":"\t schedule /clearall","lastModifiedDate":"2022-03-24"},{"lineNumber":967,"author":{"gitId":"a1021492980"},"content":"\t This will clear the schedule for everyday.","lastModifiedDate":"2022-03-24"},{"lineNumber":968,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":969,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":970,"author":{"gitId":"a1021492980"},"content":"\t To search for exercise(s), please enter: ","lastModifiedDate":"2022-03-24"},{"lineNumber":971,"author":{"gitId":"a1021492980"},"content":"\t search /exercise \u003cexercise keyword\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":972,"author":{"gitId":"a1021492980"},"content":"\t Example: ","lastModifiedDate":"2022-03-24"},{"lineNumber":973,"author":{"gitId":"a1021492980"},"content":"\t search /exercise up","lastModifiedDate":"2022-03-24"},{"lineNumber":974,"author":{"gitId":"a1021492980"},"content":"\t This will show the exercise(s) containing keyword up if exist.","lastModifiedDate":"2022-03-24"},{"lineNumber":975,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":976,"author":{"gitId":"a1021492980"},"content":"\t To search for workout(s), please enter: ","lastModifiedDate":"2022-03-24"},{"lineNumber":977,"author":{"gitId":"a1021492980"},"content":"\t search /workout \u003cexercise keyword or number of reps\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":978,"author":{"gitId":"a1021492980"},"content":"\t Example: ","lastModifiedDate":"2022-03-24"},{"lineNumber":979,"author":{"gitId":"a1021492980"},"content":"\t search /workout up","lastModifiedDate":"2022-03-24"},{"lineNumber":980,"author":{"gitId":"a1021492980"},"content":"\t This will show the workout(s) containing exercise with keyword","lastModifiedDate":"2022-03-24"},{"lineNumber":981,"author":{"gitId":"a1021492980"},"content":"\t up if exist.","lastModifiedDate":"2022-03-24"},{"lineNumber":982,"author":{"gitId":"a1021492980"},"content":"\t search /workout 15","lastModifiedDate":"2022-03-24"},{"lineNumber":983,"author":{"gitId":"a1021492980"},"content":"\t This will show the workout(s) with reps \u003d 15 if exist.","lastModifiedDate":"2022-03-24"},{"lineNumber":984,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":985,"author":{"gitId":"a1021492980"},"content":"\t To search for plan(s), please enter: ","lastModifiedDate":"2022-03-24"},{"lineNumber":986,"author":{"gitId":"a1021492980"},"content":"\t search /plan \u003cplan keyword\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":987,"author":{"gitId":"a1021492980"},"content":"\t Example: ","lastModifiedDate":"2022-03-24"},{"lineNumber":988,"author":{"gitId":"a1021492980"},"content":"\t search /plan grow","lastModifiedDate":"2022-03-24"},{"lineNumber":989,"author":{"gitId":"a1021492980"},"content":"\t This will show the plan(s) containing keyword grow if exist.","lastModifiedDate":"2022-03-24"},{"lineNumber":990,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":991,"author":{"gitId":"a1021492980"},"content":"\t To search for everything related to the keyword, please enter: ","lastModifiedDate":"2022-03-24"},{"lineNumber":992,"author":{"gitId":"a1021492980"},"content":"\t search /all \u003ckeyword\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":993,"author":{"gitId":"a1021492980"},"content":"\t Example: ","lastModifiedDate":"2022-03-24"},{"lineNumber":994,"author":{"gitId":"a1021492980"},"content":"\t search /all a","lastModifiedDate":"2022-03-24"},{"lineNumber":995,"author":{"gitId":"a1021492980"},"content":"\t This will show the exercise(s), workout(s) and plan(s) containing","lastModifiedDate":"2022-03-24"},{"lineNumber":996,"author":{"gitId":"a1021492980"},"content":"\t keyword a if exist.","lastModifiedDate":"2022-03-24"},{"lineNumber":997,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":998,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-20"},{"lineNumber":999,"author":{"gitId":"a1021492980"},"content":"\t To exit werkIt, please enter: ","lastModifiedDate":"2022-03-20"},{"lineNumber":1000,"author":{"gitId":"a1021492980"},"content":"\t exit","lastModifiedDate":"2022-03-20"},{"lineNumber":1001,"author":{"gitId":"a1021492980"},"content":"\t This will exit werkIt.","lastModifiedDate":"2022-03-20"},{"lineNumber":1002,"author":{"gitId":"a1021492980"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2022-03-20"},{"lineNumber":1003,"author":{"gitId":"a1021492980"},"content":"```","lastModifiedDate":"2022-03-20"},{"lineNumber":1004,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":1005,"author":{"gitId":"emilysim00"},"content":"This will show a complete guide to use WerkIt.","lastModifiedDate":"2022-03-27"},{"lineNumber":1006,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":1007,"author":{"gitId":"a1021492980"},"content":"---","lastModifiedDate":"2022-03-20"},{"lineNumber":1008,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":1009,"author":{"gitId":"alanlowzies"},"content":"## WerkIt!\u0027s Local Storage Information","lastModifiedDate":"2022-03-11"},{"lineNumber":1010,"author":{"gitId":"alanlowzies"},"content":"When you start WerkIt! for the first time, the following directory and files are created:","lastModifiedDate":"2022-03-14"},{"lineNumber":1011,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":1012,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-03-11"},{"lineNumber":1013,"author":{"gitId":"alanlowzies"},"content":"werkItResources/        // Primary resource directory for WerkIt!","lastModifiedDate":"2022-03-11"},{"lineNumber":1014,"author":{"gitId":"alanlowzies"},"content":"    ├── exercises.txt   // Text file containing a list of exercises","lastModifiedDate":"2022-03-11"},{"lineNumber":1015,"author":{"gitId":"alanlowzies"},"content":"    ├── workouts.txt    // Text file containing a list of user-created workouts","lastModifiedDate":"2022-03-23"},{"lineNumber":1016,"author":{"gitId":"alanlowzies"},"content":"    ├── plans.txt       // Text file containing a list of user-created plans","lastModifiedDate":"2022-03-23"},{"lineNumber":1017,"author":{"gitId":"alanlowzies"},"content":"    └── schedule.txt    // Text file containing a 7-day schedule of user-assigned plans for each day","lastModifiedDate":"2022-03-23"},{"lineNumber":1018,"author":{"gitId":"alanlowzies"},"content":"```","lastModifiedDate":"2022-03-11"},{"lineNumber":1019,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":1020,"author":{"gitId":"alanlowzies"},"content":"Do note that the directory (and by extension, the files) will be created in your terminal\u0027s","lastModifiedDate":"2022-03-11"},{"lineNumber":1021,"author":{"gitId":"alanlowzies"},"content":"**current working directory**. Thus, it is highly recommended for you to create a new directory","lastModifiedDate":"2022-03-11"},{"lineNumber":1022,"author":{"gitId":"alanlowzies"},"content":"with the WerkIt! JAR file inside it, and run the application from the directory.","lastModifiedDate":"2022-03-14"},{"lineNumber":1023,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":1024,"author":{"gitId":"alanlowzies"},"content":"When you launch WerkIt! in subsequent sessions, please ensure that you run it from the same directory","lastModifiedDate":"2022-03-11"},{"lineNumber":1025,"author":{"gitId":"alanlowzies"},"content":"that you did when starting WerkIt! for the first time.","lastModifiedDate":"2022-03-11"},{"lineNumber":1026,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":1027,"author":{"gitId":"alanlowzies"},"content":"**Warning:** It is highly recommended that you do not directly modify these files on your own as it may lead to","lastModifiedDate":"2022-03-27"},{"lineNumber":1028,"author":{"gitId":"alanlowzies"},"content":"instabilities in the application. If you do decide to modify the files, **please make a backup of the `werkItResources`","lastModifiedDate":"2022-03-27"},{"lineNumber":1029,"author":{"gitId":"alanlowzies"},"content":"directory** before modifying the files. ","lastModifiedDate":"2022-03-27"},{"lineNumber":1030,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":1031,"author":{"gitId":"alanlowzies"},"content":"In the event that your application becomes unstable due to accidental file modifications, please replace the","lastModifiedDate":"2022-03-27"},{"lineNumber":1032,"author":{"gitId":"alanlowzies"},"content":"`werkItResources` directory with your backup copy. In a worst case scenario (i.e. if you don\u0027t have a proper backup","lastModifiedDate":"2022-03-28"},{"lineNumber":1033,"author":{"gitId":"alanlowzies"},"content":"copy), delete the `werkItResources` directory and restart WerkIt! to recreate the directory and files from fresh.","lastModifiedDate":"2022-03-28"},{"lineNumber":1034,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":1035,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-03-11"},{"lineNumber":1036,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":1037,"author":{"gitId":"alanlowzies"},"content":"## Frequently Asked Questions (FAQ)","lastModifiedDate":"2022-03-11"},{"lineNumber":1038,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1039,"author":{"gitId":"alanlowzies"},"content":"### 1. My terminal in Windows is not displaying any colours in the application.","lastModifiedDate":"2022-03-31"},{"lineNumber":1040,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":1041,"author":{"gitId":"alanlowzies"},"content":"**A**: Please install Microsoft\u0027s newer terminal \u0027Windows Terminal\u0027 from the Microsoft Store via this","lastModifiedDate":"2022-03-31"},{"lineNumber":1042,"author":{"gitId":"alanlowzies"},"content":"[link](https://www.microsoft.com/en-us/p/windows-terminal/9n0dx20hk701).","lastModifiedDate":"2022-03-31"},{"lineNumber":1043,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":1044,"author":{"gitId":"alanlowzies"},"content":"### 2. How do I transfer my data to another computer? ","lastModifiedDate":"2022-03-31"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1046,"author":{"gitId":"alanlowzies"},"content":"**A**: Locate your `werkItResources` directory and WerkIt! JAR file, copy and paste it in your other ","lastModifiedDate":"2022-03-11"},{"lineNumber":1047,"author":{"gitId":"alanlowzies"},"content":"computer\u0027s desired location. Thereafter, you can run WerkIt! as per normal. ","lastModifiedDate":"2022-03-11"},{"lineNumber":1048,"author":{"gitId":"alanlowzies"},"content":"(Please see [WerkIt\u0027s Local Storage Information](#werkits-local-storage-information) for recommended location).","lastModifiedDate":"2022-03-27"},{"lineNumber":1049,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":1050,"author":{"gitId":"alanlowzies"},"content":"### 3. I cannot see the workouts that I have created in previous sessions.","lastModifiedDate":"2022-03-31"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":1052,"author":{"gitId":"alanlowzies"},"content":"**A**: Please ensure that you launch WerkIt! from the same directory that you did when starting the application for the ","lastModifiedDate":"2022-03-11"},{"lineNumber":1053,"author":{"gitId":"alanlowzies"},"content":"first time. Your saved data should be in that directory.","lastModifiedDate":"2022-03-11"},{"lineNumber":1054,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":1055,"author":{"gitId":"alanlowzies"},"content":"### 4. I keep getting file loading errors whenever I start WerkIt!","lastModifiedDate":"2022-03-31"},{"lineNumber":1056,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":1057,"author":{"gitId":"alanlowzies"},"content":"**A**: It is possible that your local file data is corrupted. If you have a backup copy of the `werkItResources`","lastModifiedDate":"2022-03-27"},{"lineNumber":1058,"author":{"gitId":"alanlowzies"},"content":"directory, replace your existing `werkItResources` directory with the backup copy. Otherwise, you will need to","lastModifiedDate":"2022-03-27"},{"lineNumber":1059,"author":{"gitId":"alanlowzies"},"content":"reset your local file data by deleting the `werkItResources` directory and starting up WerkIt! to recreate the","lastModifiedDate":"2022-03-27"},{"lineNumber":1060,"author":{"gitId":"alanlowzies"},"content":"necessary files in their default numberings.","lastModifiedDate":"2022-03-27"},{"lineNumber":1061,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":1062,"author":{"gitId":"alanlowzies"},"content":"Do note that these suggestions will lead to a **loss of your saved application data** and you may need to re-enter the lost","lastModifiedDate":"2022-03-27"},{"lineNumber":1063,"author":{"gitId":"alanlowzies"},"content":"data.","lastModifiedDate":"2022-03-27"},{"lineNumber":1064,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":1065,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-03-11"},{"lineNumber":1066,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1067,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":1068,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1069,"author":{"gitId":"Musfirahe0556596"},"content":"Below is a summary of all the commands available in the WerkIt! application.","lastModifiedDate":"2022-03-24"},{"lineNumber":1070,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1071,"author":{"gitId":"alanlowzies"},"content":"| Action                                       | Format and Example                                                                                                                                       |","lastModifiedDate":"2022-03-11"},{"lineNumber":1072,"author":{"gitId":"TianaiYan"},"content":"|:---------------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-28"},{"lineNumber":1073,"author":{"gitId":"emilysim00"},"content":"| List Exercise                                | \u003cbr /\u003e Format: `exercise /list` \u003cbr/\u003eExample: `exercise /list` \u003cbr /\u003e \u003cbr /\u003e                                                                             |","lastModifiedDate":"2022-03-27"},{"lineNumber":1074,"author":{"gitId":"emilysim00"},"content":"| Create Workout                               | \u003cbr /\u003e Format: `workout /new \u003cexercise name\u003e /reps \u003cnumber of repetitions\u003e`\u003cbr/\u003eExample: `workout /new biceps curl /reps 1`  \u003cbr /\u003e \u003cbr /\u003e               |","lastModifiedDate":"2022-03-27"},{"lineNumber":1075,"author":{"gitId":"emilysim00"},"content":"| Delete Workout                               | \u003cbr /\u003e Format: `workout /delete \u003cworkout number to delete\u003e`\u003cbr /\u003eExample: `workout /delete 2`  \u003cbr /\u003e \u003cbr /\u003e                                             |","lastModifiedDate":"2022-03-27"},{"lineNumber":1076,"author":{"gitId":"TianaiYan"},"content":"| Update Workout                               | \u003cbr /\u003e Format: `workout /update \u003cworkout number to update\u003e \u003cnew number of repetitions\u003e`\u003cbr/\u003eExample: `workout /update 1 15`   \u003cbr /\u003e \u003cbr /\u003e              |","lastModifiedDate":"2022-03-28"},{"lineNumber":1077,"author":{"gitId":"emilysim00"},"content":"| List Workouts (Display at most 10 at a time) | \u003cbr /\u003e Format: `workout /list` \u003cbr/\u003eExample: `workout /list` \u003cbr /\u003e \u003cbr /\u003e                                                                               |","lastModifiedDate":"2022-03-27"},{"lineNumber":1078,"author":{"gitId":"emilysim00"},"content":"| List All Workouts                            | \u003cbr /\u003e Format: `workout /listall` \u003cbr/\u003eExample: `workout /listall` \u003cbr /\u003e \u003cbr /\u003e                                                                         |","lastModifiedDate":"2022-03-27"},{"lineNumber":1079,"author":{"gitId":"emilysim00"},"content":"| Create Plan                                  | \u003cbr /\u003e Format: `plan /new \u003cplan name\u003e /workouts \u003cworkout number(s) separated by comma\u003e`\u003cbr /\u003eExample: `plan /new Plan A /workouts 1, 2, 3` \u003cbr /\u003e \u003cbr /\u003e |","lastModifiedDate":"2022-03-27"},{"lineNumber":1080,"author":{"gitId":"emilysim00"},"content":"| List Plan                                    | \u003cbr /\u003e Format: `plan /list` \u003cbr /\u003e \u003cbr /\u003e                                                                                                                |","lastModifiedDate":"2022-03-27"},{"lineNumber":1081,"author":{"gitId":"TianaiYan"},"content":"| List Details Of Plan                         | \u003cbr /\u003e Format: `plan /details \u003cplan number to view details\u003e`  \u003cbr /\u003eExample: `plan /details 3` \u003cbr /\u003e \u003cbr /\u003e                                             |","lastModifiedDate":"2022-03-28"},{"lineNumber":1082,"author":{"gitId":"TianaiYan"},"content":"| Delete Plan                                  | \u003cbr /\u003e Format: `plan /delete \u003cplan number to delete\u003e`\u003cbr /\u003eExample: `plan /delete 3`  \u003cbr /\u003e \u003cbr /\u003e                                                      |","lastModifiedDate":"2022-03-28"},{"lineNumber":1083,"author":{"gitId":"emilysim00"},"content":"| Update Schedule                              | \u003cbr /\u003e Format: `schedule /update \u003cday number [1-7]\u003e \u003cplan number\u003e`\u003cbr/\u003eExample: `schedule /update 2 4` \u003cbr /\u003e \u003cbr /\u003e                                     |","lastModifiedDate":"2022-03-27"},{"lineNumber":1084,"author":{"gitId":"emilysim00"},"content":"| List Schedule                                | \u003cbr /\u003e Format: `schedule /list` \u003cbr /\u003e \u003cbr /\u003e                                                                                                            |","lastModifiedDate":"2022-03-27"},{"lineNumber":1085,"author":{"gitId":"emilysim00"},"content":"| Clear Schedule For A Day                     | \u003cbr /\u003e Format: `schedule /clear \u003cday number [1-7]\u003e`\u003cbr/\u003eExample: `schedule /clear 3` \u003cbr /\u003e \u003cbr /\u003e                                                       |","lastModifiedDate":"2022-03-27"},{"lineNumber":1086,"author":{"gitId":"emilysim00"},"content":"| Clear All Schedule                           | \u003cbr /\u003e Format: `schedule /clearall` \u003cbr /\u003e \u003cbr /\u003e                                                                                                        |","lastModifiedDate":"2022-03-27"},{"lineNumber":1087,"author":{"gitId":"emilysim00"},"content":"| Search For Exercise                          | \u003cbr /\u003e Format: `search /exercise \u003cexercise keyword\u003e` \u003cbr/\u003eExample: `search /exercise up` \u003cbr /\u003e \u003cbr /\u003e                                                   |","lastModifiedDate":"2022-03-27"},{"lineNumber":1088,"author":{"gitId":"emilysim00"},"content":"| Search For Workout                           | \u003cbr /\u003e Format: `search /workout \u003cexercise keyword or number of reps\u003e`  \u003cbr/\u003eExample: `search /workout push` \u003cbr /\u003e \u003cbr /\u003e                                |","lastModifiedDate":"2022-03-27"},{"lineNumber":1089,"author":{"gitId":"emilysim00"},"content":"| Search For Plan                              | \u003cbr /\u003e Format: `search /plan \u003cplan keyword\u003e` \u003cbr/\u003eExample: `search /plan arms` \u003cbr /\u003e \u003cbr /\u003e                                                             |","lastModifiedDate":"2022-03-27"},{"lineNumber":1090,"author":{"gitId":"emilysim00"},"content":"| Search For ALL                               | \u003cbr /\u003e Format: `search /all \u003ckeyword\u003e` \u003cbr/\u003eExample: `search /all 10` \u003cbr /\u003e \u003cbr /\u003e                                                                      |","lastModifiedDate":"2022-03-27"},{"lineNumber":1091,"author":{"gitId":"emilysim00"},"content":"| View Help                                    | \u003cbr /\u003e Format: `help`\u003cbr/\u003eExample: `help`  \u003cbr /\u003e \u003cbr /\u003e                                                                                                 |","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"emilysim00":313,"Musfirahe0556596":122,"alanlowzies":106,"TianaiYan":145,"-":26,"a1021492980":379}},{"path":"docs/assets/css/style.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"---","lastModifiedDate":"2022-04-01"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"@import \"{{ site.theme }}\";","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"h5, h6 {","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"  font-size: 1.1rem;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-04-01"}],"authorContributionMap":{"alanlowzies":8}},{"path":"docs/high-level-diagram/architecture-diagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"@startuml","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"!include \u003coffice/Concepts/documents\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"!include \u003coffice/Users/user\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"rectangle \"\u003c$user\u003e\\nUser\" as User #DeepPink","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"rectangle \"\u003c$documents\u003e\\nFiles\" as Files #Lime","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"title Architecture Diagram","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"rectangle {","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":"rectangle UI #lightgreen","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"rectangle Command #lightblue","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"emilysim00"},"content":"rectangle Parser #khaki","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"rectangle WerkIt #yellow","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"rectangle Main #orange","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"rectangle Data #Salmon","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"rectangle FileManager #MediumOrchid","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"rectangle LogHandler #pink","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"UI\u003c.-up-User","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"Main-up-\u003eWerkIt","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"WerkIt-up-\u003eParser","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"Parser-up.\u003eCommand","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"Command-right-\u003eData","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"Command-right-\u003eFileManager","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"WerkIt-right-\u003eFileManager","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"Main-right-\u003eLogHandler","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"WerkIt-left-\u003eUI","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"FileManager-right-\u003eFiles","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"@enduml","lastModifiedDate":"2022-04-01"}],"authorContributionMap":{"emilysim00":33}},{"path":"docs/team/a1021492980.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"# Haofeng - Project Portfolio Page","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"Musfirahe0556596":1,"-":5}},{"path":"docs/team/alanlowzies.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"# Alan - Project Portfolio Page","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"## Overview","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"### Summary of Contributions","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"emilysim00":5,"Musfirahe0556596":1}},{"path":"docs/team/emilysim00.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"# Emily Sim - Project Portfolio Page","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"## Overview","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"### Summary of Contributions","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"emilysim00":6}},{"path":"docs/team/musfirahe0556596.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"# Musfirah - Project Portfolio Page","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"## Overview","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"### Summary of Contributions","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"emilysim00":5,"Musfirahe0556596":1}},{"path":"docs/team/tianaiyan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"# Tianai - Project Portfolio Page","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"## Overview","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"### Summary of Contributions","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"emilysim00":5,"Musfirahe0556596":1}},{"path":"docs/uml/Style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"!define LOGIC_COLOR_T1 #7777DB","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"!define LOGIC_COLOR_T2 #5252CE","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"alanlowzies":5}},{"path":"docs/uml/classDiagrams/Search.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"hide circle","lastModifiedDate":"2022-04-02"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"title Class Diagram of `search` Command","lastModifiedDate":"2022-04-02"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"Main -\u003e WerkIt","lastModifiedDate":"2022-04-02"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"WerkIt -\u003e Parser","lastModifiedDate":"2022-04-02"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"WerkIt -\u003e UI","lastModifiedDate":"2022-04-02"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"\"{abstract}\\nCommand\" \u003c|- SearchCommand","lastModifiedDate":"2022-04-02"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"Parser ..\u003e \"{abstract}\\nCommand\"","lastModifiedDate":"2022-04-02"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"class WerkIt {","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"+ startContinuousUserPrompt()","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"class Main {","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"class SearchCommand {","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"+ execute()","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"+ searchWorkout()","lastModifiedDate":"2022-04-02"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"+ searchPlan()","lastModifiedDate":"2022-04-02"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"+ searchWorkout()","lastModifiedDate":"2022-04-02"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"+ searchExercise()","lastModifiedDate":"2022-04-02"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"class UI {","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"+ getUserInput()","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"class Parser {","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"+ parseUserInput(String userInput)","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"+ SearchCommand createSearchCommand(String userInput)","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"a1021492980"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"a1021492980":39}},{"path":"docs/uml/classDiagrams/deleteWorkout.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"Main - WerkIt","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"WerkIt --\u003e UI","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"WerkIt --\u003e Parser","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"Command \u003c|- WorkoutCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"Parser ..\u003e Command","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"WorkoutCommand --\u003e WorkoutList","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"WorkoutCommand --\u003e FileManager","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"class WerkIt {","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"+ startContinuousUserPrompt()","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"abstract Command {","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"class Main {","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"class WorkoutCommand {","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"+ void execute()","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"+ WorkoutList getWorkoutList()","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"+ FileManager getFileManager()","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"class UI {","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"# String getUserInput()","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"+ void printDeleteWorkoutMessage(Workout deletedWorkout)","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"class Parser {","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"+ Command parseUserInput(String userInput)","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"Musfirahe0556596"},"content":"+ WorkoutCommand createWorkoutCommand(String userInput)","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"Musfirahe0556596"},"content":"class WorkoutList {","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"Musfirahe0556596"},"content":"+ Workout deleteWorkout(String userArgument)","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"Musfirahe0556596"},"content":"- boolean checkIndexIsWithinRange(int index)","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"Musfirahe0556596"},"content":"class FileManager {","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"Musfirahe0556596"},"content":"+ void rewriteAllWorkoutsToFile(WorkoutList workoutList)","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"Musfirahe0556596"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"emilysim00":1,"Musfirahe0556596":48}},{"path":"docs/uml/classDiagrams/listWorkout.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"title Class Diagram of `workout /list` Command","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"Main - WerkIt","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"WerkIt --\u003e UI","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"WerkIt --\u003e Parser","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"Command \u003c|- WorkoutCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"emilysim00"},"content":"Parser ..\u003e Command","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"WorkoutCommand --\u003e WorkoutList","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"class WerkIt {","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"+ startContinuousUserPrompt()","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"abstract Command {","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"class Main {","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"class WorkoutCommand {","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"+ userAction : string","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"+ userArgument : string","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"+ execute() : void","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"+  getWorkoutList() : workoutList","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"emilysim00"},"content":"class UI {","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"# getUserInput() : string","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"emilysim00"},"content":"class Parser {","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"+ parseUserInput(String userInput) : command","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"emilysim00"},"content":"+ createWorkoutCommand(String userInput) : workoutCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"emilysim00"},"content":"class WorkoutList {","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"emilysim00"},"content":"+ workoutsDisplayList : arrayList\u003cstring\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"emilysim00"},"content":"+ listWorkout() : void","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"emilysim00"},"content":"+ continuousPrinting(int index, int noOfPrints) : int","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"emilysim00"},"content":"+ isInputYesOrNo(String answer) : boolean","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"emilysim00"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"emilysim00":49}},{"path":"docs/uml/classDiagrams/updateWorkout.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TianaiYan"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"TianaiYan"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"TianaiYan"},"content":"title Class Diagram of `workout /update` Command","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"TianaiYan"},"content":"Main - WerkIt","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"TianaiYan"},"content":"WerkIt --\u003e UI","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"TianaiYan"},"content":"WerkIt --\u003e Parser","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"TianaiYan"},"content":"Command \u003c|- WorkoutCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"TianaiYan"},"content":"Parser ..\u003e Command","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"TianaiYan"},"content":"WorkoutCommand --\u003e WorkoutList","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"TianaiYan"},"content":"WorkoutCommand --\u003e FileManager","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"TianaiYan"},"content":"class WerkIt {","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"TianaiYan"},"content":"+ startContinuousUserPrompt()","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"TianaiYan"},"content":"abstract Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"TianaiYan"},"content":"class Main {","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"TianaiYan"},"content":"class WorkoutCommand {","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"TianaiYan"},"content":"+ {static} UPDATE_ACTION_KEYWORD : String","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"TianaiYan"},"content":"- userAction : String","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"TianaiYan"},"content":"- userArguments : String","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"TianaiYan"},"content":"+ execute() : void","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"TianaiYan"},"content":"+ getWorkoutList() : WorkoutList","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"TianaiYan"},"content":"+ FileManager getFileManager()","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"TianaiYan"},"content":"class UI {","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"TianaiYan"},"content":"# getUserInput() : String","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"TianaiYan"},"content":"+ printUpdateWorkoutMessage(updatedWorkout : Workout) : void","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"TianaiYan"},"content":"class Parser {","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"TianaiYan"},"content":"+ parseUserInput(userInput : String) : Command","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"TianaiYan"},"content":"+ createWorkoutCommand(userInput : String) : WorkoutCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"TianaiYan"},"content":"- checkInputForIllegalCharacters((userInput : String) : boolean","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"TianaiYan"},"content":"class WorkoutList {","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"TianaiYan"},"content":"+ updateWorkout(userArgument : String) : Workout","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"TianaiYan"},"content":"- checkIndexIsWithinRange(index : int) : boolean","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"TianaiYan"},"content":"+ getWorkoutFromIndexNum(indexNum : int) : Workout","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"TianaiYan"},"content":"+ checkForExistingWorkout(exerciseName : String, repetitionCount : int) : boolean","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"TianaiYan"},"content":"class FileManager {","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"TianaiYan"},"content":"+ rewriteAllWorkoutsToFile(workoutList : WorkoutList) : void","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"TianaiYan"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"TianaiYan"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"TianaiYan":59}},{"path":"docs/uml/sequenceDiagrams/exercises/viewExercise.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"@startuml","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"hide footbox","lastModifiedDate":"2022-04-02"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"autonumber","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"title Sequence Diagram of `exercise /list` Command","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"participant \"werkIt:WerkIt\" AS WerkIt","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"participant \"ui:UI\" AS UI1","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"participant \"parser:Parser\" AS Parser","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"participant \"newCommand\\n:ExerciseCommand\" AS newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"participant \"exerciseList\\n:ExerciseList\" AS ExerciseList","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"activate WerkIt","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"WerkIt -\u003e UI1 : getUserInput()","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"activate UI1","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"WerkIt \u003c-- UI1 : userInputTrimmed:String","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"deactivate UI1","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"WerkIt -\u003e Parser : parseUserInput(userInput)","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"activate Parser","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"WerkIt \u003c-- Parser : :Command","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"deactivate Parser","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"WerkIt -\u003e newCommand : execute()","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"activate newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"newCommand -\u003e ExerciseList : printExerciseList()","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"activate ExerciseList","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"deactivate ExerciseList","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"deactivate newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"a1021492980"},"content":"destroy newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"a1021492980"},"content":"@enduml","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"alanlowzies":1,"a1021492980":39}},{"path":"docs/uml/sequenceDiagrams/miscellaneous/obtainAndParseUserInput.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"@startuml","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"participant \"werkIt:WerkIt\" AS WerkIt","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"participant \"ui:UI\" AS UI","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"WerkIt -\u003e UI : getUserInput()","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"activate UI","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"return userInputTrimmed:String","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"@enduml","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"alanlowzies":11}},{"path":"docs/uml/sequenceDiagrams/plans/createPlan-Part1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"@startuml","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"autonumber","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"title Sequence Diagram of `plan /new` Command","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"hide footbox","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"werkIt:WerkIt\" AS WerkIt","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"newCommand\\n:PlanCommand\" AS newCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"planList\\n:PlanList\" AS PlanList","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"ui:UI\" AS UI2","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"fileManager:FileManager\" as FileManager","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"activate WerkIt","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"ref over WerkIt","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"Obtain and parse user input.","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"WerkIt -\u003e newCommand : execute()","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"activate newCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"newCommand -\u003e PlanList : createAndAddPlan(userArgument)","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"activate PlanList","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"ref over PlanList","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"Create new Plan","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"and add it to list.","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"newCommand \u003c-- PlanList : newPlan:Plan","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate PlanList","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"newCommand -\u003e UI2 : printNewPlanCreatedMessage(newPlan)","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"activate UI2","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"newCommand \u003c-- UI2","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate UI2","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"newCommand -\u003e FileManager : writeNewPlanToFile(newPlan)","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"Musfirahe0556596"},"content":"activate FileManager","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"Musfirahe0556596"},"content":"ref over FileManager","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"Musfirahe0556596"},"content":"Write new Plan data","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"Musfirahe0556596"},"content":"into file on user\u0027s system.","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"Musfirahe0556596"},"content":"newCommand \u003c-- FileManager","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate FileManager","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"Musfirahe0556596"},"content":"WerkIt \u003c-- newCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate newCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"Musfirahe0556596"},"content":"destroy newCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"Musfirahe0556596"},"content":"@enduml","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"Musfirahe0556596":49,"alanlowzies":1}},{"path":"docs/uml/sequenceDiagrams/plans/createPlan-Part2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"@startuml","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"autonumber 2.1","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"title Sequence Diagram of `PlanList#createAndAddPlan()`","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"hide footbox","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"planList\\n:PlanList\" AS pl","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"workoutList\\n:WorkoutList\" AS wl","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"activate pl","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"group sd Write new Plan data into file on user\u0027s system.","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"ref over pl","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"Parse the user input to obtain the plan name and the workout index numbers separated by comma.","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"(Method calls not shown)","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"ref over pl","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"Obtain number of workouts to be added into the new plan (split string by comma).","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"(Method calls not shown)","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"create \"workoutsToAddInAPlanList\\n:ArrayList\u003cWorkout\u003e\" AS wtoadd","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"pl -\u003e wtoadd : new","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"activate wtoadd","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"return","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"loop until all workouts to be added in a plan is added","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"ref over pl","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"Get each individual workout index from user input and","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"fetch the corresponding Workout object from the application\u0027s workout list.","lastModifiedDate":"2022-04-01"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"(Method calls not shown)","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"Musfirahe0556596"},"content":"pl -\u003e wtoadd : add(workoutToAddObject)","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"Musfirahe0556596"},"content":"activate wtoadd","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"Musfirahe0556596"},"content":"return","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"Musfirahe0556596"},"content":"create \"newPlan:Plan\" AS newPlan","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"Musfirahe0556596"},"content":"pl -\u003e newPlan : new Plan(userPlanNameInput, workoutsToAddInAPlanList)","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"Musfirahe0556596"},"content":"activate newPlan","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"Musfirahe0556596"},"content":"return newPlan:Plan","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"Musfirahe0556596"},"content":"pl -\u003e \"plansHashMapList\\n:HashMap\" : put(newPlanKey, newPlan)","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"Musfirahe0556596"},"content":"activate \"plansHashMapList\\n:HashMap\"","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"Musfirahe0556596"},"content":"return","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"Musfirahe0556596"},"content":"pl -\u003e \"plansDisplayList\\n:ArrayList\u003cString\u003e\" : add(newPlanKey)","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"Musfirahe0556596"},"content":"activate \"plansDisplayList\\n:ArrayList\u003cString\u003e\"","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"Musfirahe0556596"},"content":"return","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"Musfirahe0556596"},"content":"@enduml","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"Musfirahe0556596":57,"alanlowzies":1}},{"path":"docs/uml/sequenceDiagrams/plans/listPlan.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"@startuml","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"autonumber","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"title Sequence Diagram of `plan /list` Command","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"hide footbox","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"werkIt:WerkIt\" AS WerkIt","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"newCommand\\n:PlanCommand\" AS newCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"planList\\n:PlanList\" AS PlanList","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"activate WerkIt","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"ref over WerkIt","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"Obtain and parse user input.","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"WerkIt -\u003e newCommand : execute()","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"activate newCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"newCommand -\u003e PlanList : listAllPlan()","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"activate PlanList","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"opt application plan list is empty","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"newCommand \u003c-- PlanList : No plan created yet message","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"loop all plans in plan list","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"newCommand \u003c-- PlanList : Show name of plans","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"newCommand \u003c-- PlanList","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate PlanList","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"WerkIt \u003c-- newCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate newCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"destroy newCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"@enduml","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"Musfirahe0556596":35,"alanlowzies":1}},{"path":"docs/uml/sequenceDiagrams/schedule/clearAllSchedule.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"@startuml","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"autonumber","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"title Sequence Diagram of `schedule /clearall` Command","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"actor   User","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":"participant \"werkIt:WerkIt\" AS WerkIt","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"participant \"parser:Parser\" AS Parser","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"emilysim00"},"content":"participant \"newCommand\\n:ScheduleCommand\" AS newCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"participant \"dayList\\n:DayList\" AS DayList","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"participant \"ui:UI\" AS UI","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"activate WerkIt","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"ref over WerkIt","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"Obtain and parse user input","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"WerkIt -\u003e Parser : parseUserInput(userInput)","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"activate Parser","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"WerkIt \u003c-- Parser : :Command","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"deactivate Parser","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"WerkIt -\u003e newCommand : execute()","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"activate newCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"newCommand -\u003e DayList : clearAllSchedule()","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"activate DayList","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"deactivate DayList","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"emilysim00"},"content":"newCommand -\u003e UI : printClearedScheduleMessage();","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"activate UI","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"emilysim00"},"content":"UI --\u003e User: Display a message to indicate the process is completed","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"emilysim00"},"content":"deactivate UI","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"participant \"fileManager:FileManager\" as FileManager","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"emilysim00"},"content":"newCommand -\u003e FileManager : rewriteAllDaysScheduleToFile(newDay)","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"emilysim00"},"content":"activate FileManager","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"emilysim00"},"content":"ref over FileManager","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"emilysim00"},"content":"Write the plans scheduled","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"emilysim00"},"content":"for the week into \u0027schedule.txt\u0027","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"emilysim00"},"content":"file on user\u0027s system.","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"emilysim00"},"content":"newCommand \u003c-- FileManager","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"emilysim00"},"content":"deactivate FileManager","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"emilysim00"},"content":"destroy newCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"emilysim00"},"content":"@enduml","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"emilysim00":51}},{"path":"docs/uml/sequenceDiagrams/schedule/clearSchedule.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"@startuml","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"autonumber","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"title Sequence Diagram of `schedule /clear` Command","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"actor   User","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":"participant \"werkIt:WerkIt\" AS WerkIt","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"participant \"parser:Parser\" AS Parser","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"emilysim00"},"content":"participant \"newCommand\\n:ScheduleCommand\" AS newCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"participant \"dayList\\n:DayList\" AS DayList","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"activate WerkIt","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"ref over WerkIt","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"Obtain and parse user input","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"WerkIt -\u003e Parser : parseUserInput(userInput)","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"activate Parser","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"WerkIt \u003c-- Parser : :Command","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"deactivate Parser","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"WerkIt -\u003e newCommand : execute()","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"activate newCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"newCommand -\u003e DayList : clearDayPlan(userArgument)","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"activate DayList","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"create \"Integer\" AS int","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"DayList -\u003e int: parseInt(userArgument)","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"DayList \u003c-- int : dayNumber: int","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"create InvalidScheduleException AS ise","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"emilysim00"},"content":"opt !isDayValid","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"emilysim00"},"content":"DayList -\u003e ise : throw new InvalidScheduleException","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"emilysim00"},"content":"activate ise","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"return","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"emilysim00"},"content":"deactivate ise","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"emilysim00"},"content":"DayList -\u003e DayList : covertDayNumberToDay(dayNumber)","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"emilysim00"},"content":"activate DayList","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"emilysim00"},"content":"return day:String","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"emilysim00"},"content":"DayList --\u003e User : Display plan clear success message","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"emilysim00"},"content":"deactivate DayList","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"emilysim00"},"content":"participant \"fileManager:FileManager\" as FileManager","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"emilysim00"},"content":"newCommand -\u003e FileManager : rewriteAllDaysScheduleToFile(newDay)","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"emilysim00"},"content":"activate FileManager","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"emilysim00"},"content":"ref over FileManager","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"emilysim00"},"content":"Write the plans scheduled","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"emilysim00"},"content":"for the week into \u0027schedule.txt\u0027","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"emilysim00"},"content":"file on user\u0027s system.","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"emilysim00"},"content":"newCommand \u003c-- FileManager","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"emilysim00"},"content":"deactivate FileManager","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"emilysim00"},"content":"destroy newCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"emilysim00"},"content":"@enduml","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"emilysim00":60}},{"path":"docs/uml/sequenceDiagrams/schedule/updateSchedule.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"@startuml","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"autonumber","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"title Sequence Diagram of `schedule /update` Command","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"actor   User","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":"participant \"werkIt:WerkIt\" AS WerkIt","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"participant \"parser:Parser\" AS Parser","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"emilysim00"},"content":"participant \"newCommand\\n:ScheduleCommand\" AS newCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"participant \"dayList\\n:DayList\" AS DayList","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"participant \"ui:UI\" AS UI2","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"participant \"fileManager:FileManager\" as FileManager","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"activate WerkIt","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"ref over WerkIt","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"Obtain and parse user input","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"WerkIt -\u003e Parser : parseUserInput(userInput)","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"activate Parser","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"WerkIt \u003c-- Parser : :Command","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"deactivate Parser","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"WerkIt -\u003e newCommand : execute()","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"activate newCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"newCommand -\u003e DayList : updateDay(userArgument)","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"activate DayList","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"ref over DayList","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"Add/update a","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"plan for a Day.","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"newCommand \u003c-- DayList : \"newDay:Day\"","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"emilysim00"},"content":"deactivate DayList","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"emilysim00"},"content":"newCommand -\u003e UI2 : printNewScheduleCreatedMessage(newDay)","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"activate UI2","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"emilysim00"},"content":"User \u003c-- UI2 : Plan successfully added/updated message","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"emilysim00"},"content":"deactivate UI2","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"emilysim00"},"content":"newCommand -\u003e FileManager : rewriteAllDaysScheduleToFile(newDay)","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"emilysim00"},"content":"activate FileManager","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"emilysim00"},"content":"ref over FileManager","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"emilysim00"},"content":"Write the plans scheduled","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"emilysim00"},"content":"for the week into \u0027schedule.txt\u0027","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"emilysim00"},"content":"file on user\u0027s system.","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"emilysim00"},"content":"newCommand \u003c-- FileManager","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"emilysim00"},"content":"deactivate FileManager","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"emilysim00"},"content":"WerkIt \u003c-- newCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"emilysim00"},"content":"deactivate newCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"emilysim00"},"content":"destroy newCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"emilysim00"},"content":"@enduml","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"emilysim00":57}},{"path":"docs/uml/sequenceDiagrams/schedule/updateScheduleDetails.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"@startuml","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"autonumber 4.1","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"participant \"dayList\\n:DayList\" AS DayList","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"participant \":String\" AS string","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"activate DayList","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"group sd Add/update a plan for a Day.","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"DayList -\u003e string : userArgument.split(\" \")","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"activate string","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"return userArgumentArray:String[]","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"opt userArgumentArray. length \u003e 2","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"create \":ArrayOutOfBoundException\" AS iee","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"DayList -\u003e iee : throw new ArrayOutOfBoundException","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"activate iee","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"return","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"deactivate iee","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"create \"Integer\" AS int","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"DayList -\u003e int: parseInt(userArgument[0])","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"return dayNumber:int","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"DayList -\u003e int: parseInt(userArgument[1])","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"return planNumber:int","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"emilysim00"},"content":"opt !isDayValid","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"create \":InvalidScheduleException\" AS ise","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"emilysim00"},"content":"DayList -\u003e ise : throw new InvalidScheduleException","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"emilysim00"},"content":"activate ise","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"emilysim00"},"content":"return","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"deactivate ise","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"emilysim00"},"content":"opt !isPlanValid","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"emilysim00"},"content":"DayList -\u003e ise : throw new InvalidScheduleException","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"emilysim00"},"content":"activate ise","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"emilysim00"},"content":"return","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"emilysim00"},"content":"deactivate ise","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"emilysim00"},"content":"participant \"planList\\n:PlanList\" AS PlanList","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"emilysim00"},"content":"DayList -\u003e PlanList : getPlanDisplayList().get(planNumber - 1)","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"emilysim00"},"content":"activate PlanList","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"emilysim00"},"content":"return planToAddKey:String","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"emilysim00"},"content":"DayList -\u003e PlanList : getPlanFromKey(planToAddKey)","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"emilysim00"},"content":"activate PlanList","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"emilysim00"},"content":"return planToAdd:Plan","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"emilysim00"},"content":"create \"Day\" AS newDay","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"emilysim00"},"content":"alt scheduleList[dayNumber - 1] \u003d\u003d null","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"emilysim00"},"content":"DayList -\u003e newDay : new Day(dayNumber, planToAdd)","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"emilysim00"},"content":"activate newDay","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"emilysim00"},"content":"return newDay:Day","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"emilysim00"},"content":"else","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"emilysim00"},"content":"DayList -\u003e newDay :setNewPlanForThisDay(newDay, planToAdd)","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"emilysim00"},"content":"activate newDay","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"emilysim00"},"content":"return","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"emilysim00"},"content":"deactivate newDay","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"emilysim00"},"content":"@enduml","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"emilysim00":72}},{"path":"docs/uml/sequenceDiagrams/schedule/viewSchedule.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"@startuml","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"autonumber","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"title Sequence Diagram of `schedule /list` Command","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"actor   User","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":"participant \"werkIt:WerkIt\" AS WerkIt","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"participant \"parser:Parser\" AS Parser","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"emilysim00"},"content":"participant \"newCommand\\n:ScheduleCommand\" AS newCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"participant \"dayList\\n:DayList\" AS DayList","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"activate WerkIt","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"ref over WerkIt","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"Obtain and parse user input","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"WerkIt -\u003e Parser : parseUserInput(userInput)","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"activate Parser","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"WerkIt \u003c-- Parser : :Command","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"deactivate Parser","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"WerkIt -\u003e newCommand : execute()","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"activate newCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"newCommand -\u003e DayList : printSchedule()","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"activate DayList","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"loop 7 times","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"DayList -\u003e DayList : padWithSpaces(planForDay)","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"emilysim00"},"content":"activate DayList","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"return planForDayWithPadding:string","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"emilysim00"},"content":"User \u003c-- DayList : Display plans scheduled for the week","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"return","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"emilysim00"},"content":"destroy newCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"emilysim00"},"content":"@enduml","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"emilysim00":41}},{"path":"docs/uml/sequenceDiagrams/search/searchAll.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"@startuml","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"autonumber","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"hide footbox","lastModifiedDate":"2022-04-02"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"title Sequence Diagram of `search /all` Command","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"participant \"werkIt:WerkIt\" AS WerkIt","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"participant \"ui:UI\" AS UI1","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"participant \"parser:Parser\" AS Parser","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"participant \"newCommand\\n:SearchCommand\" AS newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"participant \"planList\\n:PlanList\" AS PlanList","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"participant \"exerciseList\\n:ExerciseList\" AS ExerciseList","lastModifiedDate":"2022-04-02"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"participant \"workoutList\\n:WorkoutList\" AS WorkoutList","lastModifiedDate":"2022-04-02"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"activate WerkIt","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"WerkIt -\u003e UI1 : getUserInput()","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"activate UI1","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"WerkIt \u003c-- UI1 : userInputTrimmed:String","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"deactivate UI1","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"WerkIt -\u003e Parser : parseUserInput(userInput)","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"activate Parser","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"WerkIt \u003c-- Parser : :Command","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"deactivate Parser","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"WerkIt -\u003e newCommand : execute()","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"activate newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"newCommand -\u003e PlanList : getPlansDisplayList()","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"activate PlanList","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"newCommand \u003c-- PlanList : \"planList:ArrayList\u003cString\u003e\"","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"deactivate PlanList","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"newCommand -\u003e ExerciseList : getExerciseList()","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"a1021492980"},"content":"activate ExerciseList","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"a1021492980"},"content":"newCommand \u003c-- ExerciseList : \"exerciseList:ArrayList\u003cString\u003e\"","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"a1021492980"},"content":"deactivate ExerciseList","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"a1021492980"},"content":"newCommand -\u003e WorkoutList : getWorkoutsDisplayList()","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"a1021492980"},"content":"activate WorkoutList","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"a1021492980"},"content":"newCommand \u003c-- WorkoutList : \"workoutList:ArrayList\u003cString\u003e\"","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"a1021492980"},"content":"deactivate WorkoutList","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"a1021492980"},"content":"newCommand -\u003e newCommand : searchPlan()","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"a1021492980"},"content":"newCommand -\u003e newCommand : searchExercise()","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"a1021492980"},"content":"newCommand -\u003e newCommand : searchWorkout()","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"a1021492980"},"content":"deactivate newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"a1021492980"},"content":"destroy newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"a1021492980"},"content":"@enduml","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"alanlowzies":1,"a1021492980":55}},{"path":"docs/uml/sequenceDiagrams/search/searchExercise.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"@startuml","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"hide footbox","lastModifiedDate":"2022-04-02"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"autonumber","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"title Sequence Diagram of `search /exercise` Command","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"participant \"werkIt:WerkIt\" AS WerkIt","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"participant \"ui:UI\" AS UI1","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"participant \"parser:Parser\" AS Parser","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"participant \"newCommand\\n:SearchCommand\" AS newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"participant \"exerciseList\\n:ExerciseList\" AS ExerciseList","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"activate WerkIt","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"WerkIt -\u003e UI1 : getUserInput()","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"activate UI1","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"WerkIt \u003c-- UI1 : userInputTrimmed:String","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"deactivate UI1","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"WerkIt -\u003e Parser : parseUserInput(userInput)","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"activate Parser","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"WerkIt \u003c-- Parser : :Command","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"deactivate Parser","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"WerkIt -\u003e newCommand : execute()","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"activate newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"newCommand -\u003e ExerciseList : getExerciseList()","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"activate ExerciseList","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"newCommand \u003c-- ExerciseList : \"exerciseList:ArrayList\u003cString\u003e\"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"deactivate ExerciseList","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"newCommand -\u003e newCommand : searchExercise()","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"deactivate newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"a1021492980"},"content":"destroy newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"a1021492980"},"content":"@enduml","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"alanlowzies":1,"a1021492980":38}},{"path":"docs/uml/sequenceDiagrams/search/searchPlan.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"@startuml","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"hide footbox","lastModifiedDate":"2022-04-02"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"autonumber","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"title Sequence Diagram of `search /plan` Command","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"participant \"werkIt:WerkIt\" AS WerkIt","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"participant \"ui:UI\" AS UI1","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"participant \"parser:Parser\" AS Parser","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"participant \"newCommand\\n:SearchCommand\" AS newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"participant \"planList\\n:PlanList\" AS PlanList","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"activate WerkIt","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"WerkIt -\u003e UI1 : getUserInput()","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"activate UI1","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"WerkIt \u003c-- UI1 : userInputTrimmed:String","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"deactivate UI1","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"WerkIt -\u003e Parser : parseUserInput(userInput)","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"activate Parser","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"WerkIt \u003c-- Parser : :Command","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"deactivate Parser","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"WerkIt -\u003e newCommand : execute()","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"activate newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"newCommand -\u003e PlanList : getPlansDisplayList()","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"activate PlanList","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"newCommand \u003c-- PlanList : \"planList:ArrayList\u003cString\u003e\"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"deactivate PlanList","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"newCommand -\u003e newCommand : searchPlan()","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"deactivate newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"a1021492980"},"content":"destroy newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"a1021492980"},"content":"@enduml","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"alanlowzies":1,"a1021492980":38}},{"path":"docs/uml/sequenceDiagrams/search/searchWorkout.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"@startuml","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"hide footbox","lastModifiedDate":"2022-04-02"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"autonumber","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"title Sequence Diagram of `search /workout` Command","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"participant \"werkIt:WerkIt\" AS WerkIt","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"participant \"ui:UI\" AS UI1","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"participant \"parser:Parser\" AS Parser","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"participant \"newCommand\\n:SearchCommand\" AS newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"participant \"workoutList\\n:WorkoutList\" AS WorkoutList","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"activate WerkIt","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"WerkIt -\u003e UI1 : getUserInput()","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"activate UI1","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"WerkIt \u003c-- UI1 : userInputTrimmed:String","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"deactivate UI1","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"WerkIt -\u003e Parser : parseUserInput(userInput)","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"activate Parser","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"WerkIt \u003c-- Parser : :Command","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"deactivate Parser","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"WerkIt -\u003e newCommand : execute()","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"activate newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"newCommand -\u003e WorkoutList : getWorkoutsDisplayList()","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"activate WorkoutList","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"newCommand \u003c-- WorkoutList : \"workoutList:ArrayList\u003cString\u003e\"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"deactivate WorkoutList","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"newCommand -\u003e newCommand : searchWorkout()","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"deactivate newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"a1021492980"},"content":"destroy newCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"a1021492980"},"content":"@enduml","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"alanlowzies":1,"a1021492980":38}},{"path":"docs/uml/sequenceDiagrams/workouts/CreateAndAddWorkout.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"@startuml","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"title Sequence Diagram of `WorkoutList#createAndAddWorkout()`","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"autonumber 2.1","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"participant \"workoutList\\n:WorkoutList\" AS wl","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"activate wl","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"group sd Create new Workout and add it to list.","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"ref over wl","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"Parse the user input to obtain","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"the exercise name and repetition count.","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"(Method calls not shown)","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"end","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"ref over wl","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"Check the validity user input and","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"throw exceptions if checking fails.","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"(Method calls not shown)","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"end","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"create \"newWorkout:Workout\" AS newWorkout","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"wl -\u003e newWorkout : new Workout(userExerciseInput, userRepsInput)","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"activate newWorkout","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"return newWorkout:Workout","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"wl -\u003e newWorkout : toString()","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"activate newWorkout","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"return :String","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"wl -\u003e \"workoutsHashMapList\\n:HashMap\" : put(newWorkoutKey, newWorkout)","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"activate \"workoutsHashMapList\\n:HashMap\"","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"return","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"wl -\u003e \"workoutDisplayList\\n:ArrayList\u003cString\u003e\" : add(newWorkoutKey)","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"activate \"workoutDisplayList\\n:ArrayList\u003cString\u003e\"","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"return","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"end","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"@enduml","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"alanlowzies":45}},{"path":"docs/uml/sequenceDiagrams/workouts/CreateWorkout.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"autonumber","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"title Sequence Diagram of `workout /new` Command","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"participant \"werkIt:WerkIt\" AS WerkIt","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"participant \"newCommand\\n:WorkoutCommand\" AS newCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"participant \"ui:UI\" as UI","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"participant \"workoutList\\n:WorkoutList\" AS WorkoutList","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"participant \"fileManager:FileManager\" as FileManager","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"activate WerkIt","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"ref over WerkIt","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"Obtain and parse user input.","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"end","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"WerkIt -\u003e newCommand : execute()","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"activate newCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"newCommand -\u003e WorkoutList : createAndAddWorkout(userArguments)","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"activate WorkoutList","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"ref over WorkoutList","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"Create new Workout","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"and add it to list.","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"end","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"newCommand \u003c-- WorkoutList : \"newWorkout:Workout\"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"deactivate WorkoutList","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"newCommand -\u003e UI : printNewWorkoutCreatedMessage(newWorkout)","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"activate UI","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"return","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"newCommand -\u003e FileManager : writeNewWorkoutToFile(newWorkout)","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"activate FileManager","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"ref over FileManager","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"Write new Workout data","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"into file on user\u0027s system.","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"end","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"newCommand \u003c-- FileManager","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"deactivate FileManager","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"WerkIt \u003c-- newCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"deactivate newCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"destroy newCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"alanlowzies":49}},{"path":"docs/uml/sequenceDiagrams/workouts/deleteWorkout-Part1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"autonumber","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"title Sequence Diagram of `workout /delete` Command","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"hide footbox","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"werkIt:WerkIt\" AS WerkIt","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"deleteCommand\\n:WorkoutCommand\" AS deleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"workoutList\\n:WorkoutList\" AS WorkoutList","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"ui:UI\" AS UI2","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"fileManager:FileManager\" as FileManager","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"activate WerkIt","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"ref over WerkIt","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"Obtain and parse user input.","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"WerkIt -\u003e deleteCommand : execute()","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"activate deleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"deleteCommand -\u003e WorkoutList : deleteWorkout(userArguments)","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"activate WorkoutList","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"ref over WorkoutList","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"Delete existing workout","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"specified by user.","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"deleteCommand \u003c-- WorkoutList : deletedWorkout:Workout","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate WorkoutList","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"deleteCommand -\u003e UI2 : printDeleteWorkoutMessage(deletedWorkout)","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"activate UI2","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"deleteCommand \u003c-- UI2","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate UI2","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"deleteCommand -\u003e FileManager : rewriteAllWorkoutsToFile(workoutList)","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"Musfirahe0556596"},"content":"activate FileManager","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"Musfirahe0556596"},"content":"ref over FileManager","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"Musfirahe0556596"},"content":"Rewrite the modified workoutList data","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"Musfirahe0556596"},"content":"(workout removed) into file on user\u0027s system","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"Musfirahe0556596"},"content":"end","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"Musfirahe0556596"},"content":"deleteCommand \u003c-- FileManager","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate FileManager","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"Musfirahe0556596"},"content":"WerkIt \u003c-- deleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate deleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"Musfirahe0556596"},"content":"destroy deleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"Musfirahe0556596"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"Musfirahe0556596":49,"alanlowzies":1}},{"path":"docs/uml/sequenceDiagrams/workouts/deleteWorkout-Part2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"autonumber 2.1","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"title Sequence Diagram of `WorkoutList#deleteWorkout()`","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"hide footbox","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"participant \"workoutList\\n:WorkoutList\" AS wl","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"activate wl","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"wl -\u003e \":Integer\" :parseInt(userArgument)","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"activate \":Integer\"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"return indextoDelete:int","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate \":Integer\"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"wl -\u003e wl :getWorkoutFromIndexNum(indexToDelete)","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"activate wl","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"return deletedWorkout:Workout","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"wl -\u003e \"workoutsDisplayList:\\nArrayList\u003cString\u003e\" :remove(indexToDelete - 1)","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"activate \"workoutsDisplayList:\\nArrayList\u003cString\u003e\"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"return","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate \"workoutsDisplayList:\\nArrayList\u003cString\u003e\"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"wl -\u003e \"workoutsHashMapList:\\nHashMap\" :remove(deletedWorkout)","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"activate \"workoutsHashMapList:\\nHashMap\"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"return","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"deactivate \"workoutsHashMapList:\\nHashMap\"","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"Musfirahe0556596":31,"alanlowzies":1}},{"path":"docs/uml/sequenceDiagrams/workouts/listWorkouts.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"@startuml","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-04-01"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"!include ../../Style.puml","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"actor   User","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"autonumber","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"title Sequence Diagram of `workout /list` Command","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"participant \"werkIt:WerkIt\" AS WerkIt","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":"participant \"parser:Parser\" AS Parser","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"participant \"newCommand\\n:WorkoutCommand\" AS newCommand","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"emilysim00"},"content":"participant \"workoutList\\n:WorkoutList\" AS WorkoutList","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"participant \"workout\\n:Workout\" AS Workout","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"activate WerkIt","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"ref over WerkIt","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"Obtain user input.","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"WerkIt -\u003e Parser : parseUserInput(userInput)","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"activate Parser","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"WerkIt \u003c-- Parser : :Command","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"deactivate Parser","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"WerkIt -\u003e newCommand : execute()","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"activate newCommand","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"newCommand -\u003e WorkoutList : listAllWorkout()","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"activate WorkoutList","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"loop index \u003c\u003d workoutDisplayList.size()","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"WorkoutList -\u003e WorkoutList:getWorkoutFromIndexNum(index)","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"activate WorkoutList","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"return workoutObject:Workout","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"emilysim00"},"content":"WorkoutList--\u003eWorkout: toString()","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"activate Workout","lastModifiedDate":"2022-04-01"},{"lineNumber":36,"author":{"gitId":"emilysim00"},"content":"return displayString:String","lastModifiedDate":"2022-04-01"},{"lineNumber":37,"author":{"gitId":"emilysim00"},"content":"WorkoutList --\u003e User: Printed Workouts","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"emilysim00"},"content":"end","lastModifiedDate":"2022-04-01"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":41,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":42,"author":{"gitId":"emilysim00"},"content":"destroy newCommand","lastModifiedDate":"2022-04-01"},{"lineNumber":43,"author":{"gitId":"emilysim00"},"content":"@enduml","lastModifiedDate":"2022-04-01"}],"authorContributionMap":{"emilysim00":43}},{"path":"src/main/java/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"import werkit.WerkIt;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":" * Main entry-point for the WerkIt! application.","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"public class Main {","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"    private static Logger logger \u003d Logger.getLogger(WerkIt.class.getName());","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"        // Start up the WerkIt! application","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"        LogHandler.startLogHandler();","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"        try {","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"            WerkIt werkIt \u003d new WerkIt();","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"            werkIt.startContinuousUserPrompt();","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(UI.IOEXCEPTION_ERROR_MESSAGE);","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.SEVERE, \"Program encountered an IO Exception and needs to terminate.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"            System.exit(-1);","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"        logger.log(Level.INFO, \"Program has finished and is exiting.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"alanlowzies":30}},{"path":"src/main/java/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package commands;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":" * An abstract class representing the basic structure of a command object.","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":" * Design of the commands is inspired by the AddressBook-Level2 project","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":" * Link: https://se-education.org/addressbook-level2/","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"public abstract class Command {","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"    protected String userInput;","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"     * Constructs a Command object and stores the complete user\u0027s input into the object.","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"     * @param userInput A string representing the input the user has entered.","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"    public Command(String userInput) {","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"     * Gets the user input stored in a Command instance.","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"     * @return A string containing the user input.","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"    public String getUserInput() {","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"        return userInput;","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"     * Sets the user input to the specified user input.","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"     * @param userInput The user input to store in the Command object.","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"    public void setUserInput(String userInput) {","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"     * Executes a certain series of actions based on the implementation of the different commands.","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"    public abstract void execute();","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"alanlowzies":42}},{"path":"src/main/java/commands/ExerciseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"package commands;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"public class ExerciseCommand extends Command {","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"    public static final String BASE_KEYWORD \u003d \"exercise\";","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"    public static final String LIST_ACTION_KEYWORD \u003d \"/list\";","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"    private UI ui;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"    private ExerciseList exerciseList;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"    private String userAction;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"    private String userArguments;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"    public ExerciseCommand(String userInput, UI ui, ExerciseList exerciseList,","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"                           String userAction, String userArguments) throws InvalidCommandException {","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"        super(userInput);","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"        this.exerciseList \u003d exerciseList;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"        setUserAction(userAction);","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"        this.userArguments \u003d userArguments;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"    public void setUserAction(String userAction) throws InvalidCommandException {","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"        switch (userAction) {","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"        case LIST_ACTION_KEYWORD:","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"            this.userAction \u003d userAction;","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"            break;","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"        default:","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"            String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"            throw new InvalidCommandException(className, InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"    public void execute() {","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"a1021492980"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"a1021492980"},"content":"            switch (userAction) {","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"a1021492980"},"content":"            case LIST_ACTION_KEYWORD:","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"a1021492980"},"content":"                exerciseList.printExerciseList();","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"a1021492980"},"content":"                break;","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"a1021492980"},"content":"            default:","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"a1021492980"},"content":"                String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"a1021492980"},"content":"                throw new InvalidCommandException(className, InvalidCommandException.INVALID_ACTION_ERROR_MSG); ","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"a1021492980"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"a1021492980"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"a1021492980"},"content":"            System.out.println(\"Please try again\");","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"a1021492980":52}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package commands;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"    public static final String BASE_KEYWORD \u003d \"exit\";","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"    public ExitCommand(String userInput) {","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"        super(userInput);","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"    public void execute() {","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"        // Will do nothing, since it\u0027s an exit command","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"alanlowzies":14}},{"path":"src/main/java/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package commands;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"    public static final String BASE_KEYWORD \u003d \"help\";","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"    private final UI ui \u003d new UI();","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"    public HelpCommand(String userInput) {","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"        super(userInput);","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"    public void execute() {","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"        ui.printHelpMessage();","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"emilysim00":1,"alanlowzies":12,"a1021492980":5}},{"path":"src/main/java/commands/InvalidCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package commands;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":" * Thrown to indicate that a command entered by the user is invalid.","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"    public static final String INVALID_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is not recognised.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"    public static final String INVALID_ACTION_ERROR_MSG \u003d \"Uh oh, an invalid user action was specified.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"    public static final String ILLEGAL_CHARACTER_USED_ERROR_MSG \u003d \"Uh oh, an illegal character was found \"","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"            + \"in your input.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"    public static final String INVALID_WORKOUT_LIST_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"            + \"Do you mean \u0027workout /list?\u0027\";","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"    public static final String INVALID_WORKOUT_LIST_ALL_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"            + \"Do you mean \u0027workout /listall?\u0027\";","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"    public static final String INVALID_EXERCISE_LIST_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"            + \"Do you mean \u0027exercise /list?\u0027\";","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String INVALID_NEW_WORKOUT_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"            + \"Do you mean \u0027workout /new \u003cexercise name\u003e /reps \u003cnumber of reps\u003e\u0027?\";","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String INVALID_DELETE_WORKOUT_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"            + \"Do you mean \u0027workout /delete \u003cworkout number to delete\u003e\u0027?\";","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"TianaiYan"},"content":"    public static final String INVALID_UPDATE_WORKOUT_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"TianaiYan"},"content":"            + \"Do you mean \u0027workout /update \u003cworkout number to update\u003e \u003cnew number of reps\u003e\u0027?\";","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"    public static final String INVALID_SEARCH_EXERCISE_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"            + \"Do you mean \u0027search /exercise \u003cexercise keyword\u003e\u0027?\";","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"    public static final String INVALID_SEARCH_PLAN_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"            + \"Do you mean \u0027search /plan \u003cplan keyword\u003e\u0027?\";","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"    public static final String INVALID_SEARCH_WORKOUT_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"            + \"Do you mean \u0027search /workout \u003cworkout keyword/reps\u003e\u0027?\";","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"    public static final String INVALID_SEARCH_ALL_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"            + \"Do you mean \u0027search /all \u003ckeyword\u003e\u0027?\";","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String INVALID_NEW_PLAN_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"            + \"Do you mean \u0027plan /new \u003cplan name\u003e /workouts \u003cworkout number(s) to add, separated by comma\u003e\u0027?\";","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String INVALID_PLAN_LIST_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"            + \"Do you mean \u0027plan /list?\u0027\";","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"TianaiYan"},"content":"    public static final String INVALID_DELETE_PLAN_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"TianaiYan"},"content":"            + \"Do you mean \u0027plan /delete \u003cplan number to delete\u003e\u0027?\";","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"TianaiYan"},"content":"    public static final String INVALID_PLAN_DETAILS_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"TianaiYan"},"content":"            + \"Do you mean \u0027plan /details \u003cplan number to view details\u003e\u0027?\";","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"    public static final String INVALID_SCHEDULE_UPDATE_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"emilysim00"},"content":"            + \"Do you mean \u0027schedule /update \u003cday number [1-7]\u003e \u003cplan number\u003e\u0027\";","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"emilysim00"},"content":"    public static final String INVALID_SCHEDULE_LIST_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"emilysim00"},"content":"            + \"Do you mean \u0027schedule /list?\u0027\";","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"emilysim00"},"content":"    public static final String INVALID_SCHEDULE_CLEAR_ALL_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"emilysim00"},"content":"            + \"Do you mean \u0027schedule /clearall?\u0027\";","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"emilysim00"},"content":"    public static final String INVALID_SCHEDULE_CLEAR_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"emilysim00"},"content":"            + \"Do you mean \u0027schedule /clear \u003cday number [1-7]\u003e?\u0027\";","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"a1021492980"},"content":"    public static final String INVALID_HELP_COMMAND_ERROR_MSG \u003d \"Uh oh, the command entered is wrong.\\n\"","lastModifiedDate":"2022-04-02"},{"lineNumber":48,"author":{"gitId":"a1021492980"},"content":"            + \"Do you mean \u0027help\u0027?\";","lastModifiedDate":"2022-04-02"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"    private String throwingClass;","lastModifiedDate":"2022-03-05"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"     * Constructs an InvalidCommandException with the class that threw it and the error message.","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"     * @param throwingClass The class that threw this InvalidCommandException.","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"     * @param errorMessage  The accompanying error message.","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"    public InvalidCommandException(String throwingClass, String errorMessage) {","lastModifiedDate":"2022-03-05"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"        super(errorMessage);","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"        this.throwingClass \u003d throwingClass;","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"     * Gets the class that threw this InvalidCommandException.","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"     * @return A string containing the name of the class that threw this exception.","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"    public String getThrowingClass() {","lastModifiedDate":"2022-03-05"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"        return this.throwingClass;","lastModifiedDate":"2022-03-05"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"emilysim00":10,"Musfirahe0556596":9,"alanlowzies":33,"TianaiYan":6,"a1021492980":13}},{"path":"src/main/java/commands/PlanCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package commands;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"import data.plans.InvalidPlanException;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"import data.plans.Plan;","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"import storage.FileManager;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":" * A class that will handle the commands relating to plan.","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"public class PlanCommand extends Command {","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String BASE_KEYWORD \u003d \"plan\";","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String CREATE_ACTION_KEYWORD \u003d \"/new\";","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String CREATE_ACTION_WORKOUTS_KEYWORD \u003d \"/workouts\";","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String LIST_ACTION_KEYWORD \u003d \"/list\";","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String DETAILS_ACTION_KEYWORD \u003d \"/details\";","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String DELETE_ACTION_KEYWORD \u003d \"/delete\";","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"    private FileManager fileManager;","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"    private UI ui \u003d new UI();","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"    private PlanList planList;","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"    private String userAction;","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"    private String userArguments;","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"    private static Logger logger \u003d Logger.getLogger(PlanCommand.class.getName());","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"     * Constructs a new instance of the PlanCommand. Constructed when the user enters a","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"     * plan-related command.","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param userInput The user\u0027s full original input.","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param fileManager An instance of the FileManager class.","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param planList An instance of the PlanList class.","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param userAction The action that was parsed from the user\u0027s input.","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param userArguments The arguments that are accompanied by the user action.","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws InvalidCommandException If the command entered by the user is incorrect.","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"Musfirahe0556596"},"content":"    public PlanCommand(String userInput, FileManager fileManager, PlanList planList,","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"Musfirahe0556596"},"content":"                       String userAction, String userArguments) throws InvalidCommandException {","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"        super(userInput);","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"Musfirahe0556596"},"content":"        this.fileManager \u003d fileManager;","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"Musfirahe0556596"},"content":"        this.planList \u003d planList;","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"Musfirahe0556596"},"content":"        setUserAction(userAction);","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"Musfirahe0556596"},"content":"        this.userArguments \u003d userArguments;","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"Musfirahe0556596"},"content":"        LogHandler.linkToFileLogger(logger);","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"Musfirahe0556596"},"content":"     * Gets the instance of the UI class.","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return An instance of the UI class.","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"Musfirahe0556596"},"content":"    public UI getUI() {","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"Musfirahe0556596"},"content":"        return this.ui;","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"Musfirahe0556596"},"content":"     * Gets the instance of the FileManager class.","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return An instance of the FileManager class.","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"Musfirahe0556596"},"content":"    public FileManager getFileManager() {","lastModifiedDate":"2022-03-19"},{"lineNumber":71,"author":{"gitId":"Musfirahe0556596"},"content":"        return this.fileManager;","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":73,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":75,"author":{"gitId":"Musfirahe0556596"},"content":"     * Gets the instance of the PlanList class.","lastModifiedDate":"2022-03-19"},{"lineNumber":76,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":77,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return An instance of the PlanList class.","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"Musfirahe0556596"},"content":"    public PlanList getPlanList() {","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"Musfirahe0556596"},"content":"        return this.planList;","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"Musfirahe0556596"},"content":"     * Gets the action of the plan command specified by the user.","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":86,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return A string containing the action specified by the user.","lastModifiedDate":"2022-03-19"},{"lineNumber":87,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":88,"author":{"gitId":"Musfirahe0556596"},"content":"    public String getUserAction() {","lastModifiedDate":"2022-03-19"},{"lineNumber":89,"author":{"gitId":"Musfirahe0556596"},"content":"        return this.userAction;","lastModifiedDate":"2022-03-19"},{"lineNumber":90,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":91,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":93,"author":{"gitId":"Musfirahe0556596"},"content":"     * Checks for the validity of the action specified by the user and sets the class field","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"Musfirahe0556596"},"content":"     * userAction to the action (if valid).","lastModifiedDate":"2022-03-19"},{"lineNumber":95,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":96,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param userAction A string containing the action specified by the user.","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws InvalidCommandException If the action specified by the user is invalid.","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"Musfirahe0556596"},"content":"    public void setUserAction(String userAction) throws InvalidCommandException {","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"Musfirahe0556596"},"content":"        switch (userAction) {","lastModifiedDate":"2022-03-19"},{"lineNumber":101,"author":{"gitId":"Musfirahe0556596"},"content":"        case CREATE_ACTION_KEYWORD:","lastModifiedDate":"2022-03-19"},{"lineNumber":102,"author":{"gitId":"Musfirahe0556596"},"content":"            //Fallthrough","lastModifiedDate":"2022-03-19"},{"lineNumber":103,"author":{"gitId":"Musfirahe0556596"},"content":"        case LIST_ACTION_KEYWORD:","lastModifiedDate":"2022-03-19"},{"lineNumber":104,"author":{"gitId":"Musfirahe0556596"},"content":"            //Fallthrough","lastModifiedDate":"2022-03-19"},{"lineNumber":105,"author":{"gitId":"Musfirahe0556596"},"content":"        case DELETE_ACTION_KEYWORD:","lastModifiedDate":"2022-03-19"},{"lineNumber":106,"author":{"gitId":"Musfirahe0556596"},"content":"            //Fallthrough","lastModifiedDate":"2022-03-19"},{"lineNumber":107,"author":{"gitId":"Musfirahe0556596"},"content":"        case DETAILS_ACTION_KEYWORD:","lastModifiedDate":"2022-03-19"},{"lineNumber":108,"author":{"gitId":"Musfirahe0556596"},"content":"            this.userAction \u003d userAction;","lastModifiedDate":"2022-03-19"},{"lineNumber":109,"author":{"gitId":"Musfirahe0556596"},"content":"            break;","lastModifiedDate":"2022-03-19"},{"lineNumber":110,"author":{"gitId":"Musfirahe0556596"},"content":"        default:","lastModifiedDate":"2022-03-19"},{"lineNumber":111,"author":{"gitId":"Musfirahe0556596"},"content":"            String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-19"},{"lineNumber":112,"author":{"gitId":"Musfirahe0556596"},"content":"            throw new InvalidCommandException(className, InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-19"},{"lineNumber":113,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":114,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":115,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":116,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":117,"author":{"gitId":"Musfirahe0556596"},"content":"     * Gets the user argument stored in the class instance.","lastModifiedDate":"2022-03-19"},{"lineNumber":118,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":119,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return A string containing the user argument.","lastModifiedDate":"2022-03-19"},{"lineNumber":120,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":121,"author":{"gitId":"Musfirahe0556596"},"content":"    public String getUserArguments() {","lastModifiedDate":"2022-03-19"},{"lineNumber":122,"author":{"gitId":"Musfirahe0556596"},"content":"        return this.userArguments;","lastModifiedDate":"2022-03-19"},{"lineNumber":123,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":124,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":125,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":126,"author":{"gitId":"Musfirahe0556596"},"content":"     * Executes a plan-related command based on the action and arguments that is stored in the","lastModifiedDate":"2022-03-24"},{"lineNumber":127,"author":{"gitId":"Musfirahe0556596"},"content":"     * class fields. If the action and/or arguments specified are invalid, this method will handle the","lastModifiedDate":"2022-03-24"},{"lineNumber":128,"author":{"gitId":"Musfirahe0556596"},"content":"     * exceptions and print appropriate responses.","lastModifiedDate":"2022-03-24"},{"lineNumber":129,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":130,"author":{"gitId":"Musfirahe0556596"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":131,"author":{"gitId":"alanlowzies"},"content":"    public void execute() {","lastModifiedDate":"2022-03-17"},{"lineNumber":132,"author":{"gitId":"Musfirahe0556596"},"content":"        try {","lastModifiedDate":"2022-03-19"},{"lineNumber":133,"author":{"gitId":"Musfirahe0556596"},"content":"            switch (getUserAction()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":134,"author":{"gitId":"Musfirahe0556596"},"content":"            case CREATE_ACTION_KEYWORD:","lastModifiedDate":"2022-03-19"},{"lineNumber":135,"author":{"gitId":"Musfirahe0556596"},"content":"                Plan newPlan \u003d getPlanList().createAndAddPlan(getUserArguments());","lastModifiedDate":"2022-03-19"},{"lineNumber":136,"author":{"gitId":"Musfirahe0556596"},"content":"                getUI().printNewPlanCreatedMessage(newPlan);","lastModifiedDate":"2022-03-19"},{"lineNumber":137,"author":{"gitId":"a1021492980"},"content":"                getFileManager().writeNewPlanToFile(newPlan);","lastModifiedDate":"2022-03-20"},{"lineNumber":138,"author":{"gitId":"Musfirahe0556596"},"content":"                break;","lastModifiedDate":"2022-03-19"},{"lineNumber":139,"author":{"gitId":"Musfirahe0556596"},"content":"            case LIST_ACTION_KEYWORD:","lastModifiedDate":"2022-03-19"},{"lineNumber":140,"author":{"gitId":"Musfirahe0556596"},"content":"                getPlanList().listAllPlan();","lastModifiedDate":"2022-03-19"},{"lineNumber":141,"author":{"gitId":"Musfirahe0556596"},"content":"                break;","lastModifiedDate":"2022-03-19"},{"lineNumber":142,"author":{"gitId":"Musfirahe0556596"},"content":"            case DETAILS_ACTION_KEYWORD:","lastModifiedDate":"2022-03-19"},{"lineNumber":143,"author":{"gitId":"TianaiYan"},"content":"                getPlanList().listPlanDetails(getUserArguments(), ui);","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"Musfirahe0556596"},"content":"                break;","lastModifiedDate":"2022-03-19"},{"lineNumber":145,"author":{"gitId":"Musfirahe0556596"},"content":"            case DELETE_ACTION_KEYWORD:","lastModifiedDate":"2022-03-19"},{"lineNumber":146,"author":{"gitId":"TianaiYan"},"content":"                Plan deletedPlan \u003d getPlanList().deletePlan(getUserArguments());","lastModifiedDate":"2022-03-23"},{"lineNumber":147,"author":{"gitId":"TianaiYan"},"content":"                getUI().printDeletePlanMessage(deletedPlan);","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"TianaiYan"},"content":"                getFileManager().rewriteAllPlansToFile(getPlanList());","lastModifiedDate":"2022-03-23"},{"lineNumber":149,"author":{"gitId":"Musfirahe0556596"},"content":"                break;","lastModifiedDate":"2022-03-19"},{"lineNumber":150,"author":{"gitId":"Musfirahe0556596"},"content":"            default:","lastModifiedDate":"2022-03-19"},{"lineNumber":151,"author":{"gitId":"Musfirahe0556596"},"content":"                String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-19"},{"lineNumber":152,"author":{"gitId":"Musfirahe0556596"},"content":"                logger.log(Level.WARNING, \"Invalid action under plan command is entered!\");","lastModifiedDate":"2022-03-19"},{"lineNumber":153,"author":{"gitId":"Musfirahe0556596"},"content":"                throw new InvalidCommandException(className, InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-19"},{"lineNumber":154,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":155,"author":{"gitId":"Musfirahe0556596"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2022-03-19"},{"lineNumber":156,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-19"},{"lineNumber":157,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"Please try again\");","lastModifiedDate":"2022-03-19"},{"lineNumber":158,"author":{"gitId":"Musfirahe0556596"},"content":"        } catch (InvalidPlanException e) {","lastModifiedDate":"2022-03-19"},{"lineNumber":159,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-19"},{"lineNumber":160,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"Please try again\");","lastModifiedDate":"2022-03-19"},{"lineNumber":161,"author":{"gitId":"Musfirahe0556596"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-19"},{"lineNumber":162,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"Uh oh, it seems like too few arguments were entered.\");","lastModifiedDate":"2022-03-19"},{"lineNumber":163,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"Please try again. Alternatively, type \u0027help\u0027 if you need\\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":164,"author":{"gitId":"Musfirahe0556596"},"content":"                    + \"more information on the commands.\");","lastModifiedDate":"2022-03-19"},{"lineNumber":165,"author":{"gitId":"Musfirahe0556596"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-19"},{"lineNumber":166,"author":{"gitId":"Musfirahe0556596"},"content":"            logger.log(Level.WARNING, \"A non-formattable number was received!\");","lastModifiedDate":"2022-03-19"},{"lineNumber":167,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"Uh oh, a number was expected in your input, but a non-formattable\\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":168,"author":{"gitId":"Musfirahe0556596"},"content":"                    + \"number was received.\");","lastModifiedDate":"2022-03-19"},{"lineNumber":169,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"Please try again. Alternatively, type \u0027help\u0027 if you need\\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":170,"author":{"gitId":"Musfirahe0556596"},"content":"                    + \"more information on the commands.\");","lastModifiedDate":"2022-03-19"},{"lineNumber":171,"author":{"gitId":"a1021492980"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-20"},{"lineNumber":172,"author":{"gitId":"a1021492980"},"content":"            System.out.println(UI.IOEXCEPTION_ERROR_MESSAGE);","lastModifiedDate":"2022-03-20"},{"lineNumber":173,"author":{"gitId":"a1021492980"},"content":"            System.exit(-1);","lastModifiedDate":"2022-03-20"},{"lineNumber":174,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":175,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":176,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-17"},{"lineNumber":177,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"Musfirahe0556596":159,"alanlowzies":9,"TianaiYan":4,"a1021492980":5}},{"path":"src/main/java/commands/ScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package commands;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"import data.plans.Plan;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"import data.schedule.Day;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"import data.schedule.DayList;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"import data.schedule.InvalidScheduleException;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"import storage.FileManager;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"import static data.schedule.InvalidScheduleException.INDEX_OUT_OF_BOUND;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"import static data.schedule.InvalidScheduleException.INPUT_NOT_NUMBER_FORMATTABLE;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"public class ScheduleCommand extends Command {","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"    public static final String BASE_KEYWORD \u003d \"schedule\";","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"    public static final String UPDATE_ACTION_KEYWORD \u003d \"/update\";","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"    public static final String LIST_ACTION_KEYWORD \u003d \"/list\";","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"    public static final String CLEAR_ACTION_KEYWORD \u003d \"/clear\";","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"    public static final String CLEAR_ALL_ACTION_KEYWORD \u003d \"/clearall\";","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"    private FileManager fileManager;","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"    private UI ui \u003d new UI();","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"    private PlanList planList;","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"    private DayList scheduleList;","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"    private String userAction;","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"    private String userArguments;","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"emilysim00"},"content":"    private static Logger logger \u003d Logger.getLogger(commands.ScheduleCommand.class.getName());","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"emilysim00"},"content":"     * Constructs a new instance of the ScheduleCommand. Constructed when the user enters a","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"emilysim00"},"content":"     * schedule-related command.","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"emilysim00"},"content":"     * @param userInput     The user\u0027s full original input.","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"emilysim00"},"content":"     * @param fileManager   An instance of the FileManager class.","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"emilysim00"},"content":"     * @param scheduleList   An instance of the DayList class.","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"emilysim00"},"content":"     * @param userAction    The action that was parsed from the user\u0027s input.","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"emilysim00"},"content":"     * @param userArguments The arguments that are accompanied by the user action.","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"emilysim00"},"content":"     * @throws InvalidCommandException If the command entered by the user is incorrect.","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"emilysim00"},"content":"    public ScheduleCommand(String userInput, FileManager fileManager, DayList scheduleList,","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"emilysim00"},"content":"                           String userAction, String userArguments) throws InvalidCommandException {","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"        super(userInput);","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"emilysim00"},"content":"        this.fileManager \u003d fileManager;","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"emilysim00"},"content":"        this.scheduleList \u003d scheduleList;","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"emilysim00"},"content":"        setUserAction(userAction);","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"emilysim00"},"content":"        this.userArguments \u003d userArguments;","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"emilysim00"},"content":"        LogHandler.linkToFileLogger(logger);","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"emilysim00"},"content":"     * Gets the instance of the UI class.","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"emilysim00"},"content":"     * @return An instance of the UI class.","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"emilysim00"},"content":"    public UI getUI() {","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"emilysim00"},"content":"        return this.ui;","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"emilysim00"},"content":"     * Gets the instance of the FileManager class.","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"emilysim00"},"content":"     * @return An instance of the FileManager class.","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"emilysim00"},"content":"    public FileManager getFileManager() {","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"emilysim00"},"content":"        return this.fileManager;","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"emilysim00"},"content":"     * Gets the instance of the PlanList class.","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"emilysim00"},"content":"     * @return An instance of the PlanList class.","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"emilysim00"},"content":"    public PlanList getPlanList() {","lastModifiedDate":"2022-03-21"},{"lineNumber":81,"author":{"gitId":"emilysim00"},"content":"        return this.planList;","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":83,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"     * Gets the instance of the DayList class.","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"     * @return An instance of the DayList class.","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"alanlowzies"},"content":"    public DayList getScheduleList() {","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"alanlowzies"},"content":"        return this.scheduleList;","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"emilysim00"},"content":"     * Gets the action of the workout command specified by the user.","lastModifiedDate":"2022-03-21"},{"lineNumber":95,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":96,"author":{"gitId":"emilysim00"},"content":"     * @return A string containing the action specified by the user.","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":98,"author":{"gitId":"emilysim00"},"content":"    public String getUserAction() {","lastModifiedDate":"2022-03-21"},{"lineNumber":99,"author":{"gitId":"emilysim00"},"content":"        return this.userAction;","lastModifiedDate":"2022-03-21"},{"lineNumber":100,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":101,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":102,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":103,"author":{"gitId":"emilysim00"},"content":"     * Checks for the validity of the action specified by the user and sets the class field","lastModifiedDate":"2022-03-21"},{"lineNumber":104,"author":{"gitId":"emilysim00"},"content":"     * userAction to the action (if valid).","lastModifiedDate":"2022-03-21"},{"lineNumber":105,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":106,"author":{"gitId":"emilysim00"},"content":"     * @param userAction A string containing the action specified by the user.","lastModifiedDate":"2022-03-21"},{"lineNumber":107,"author":{"gitId":"emilysim00"},"content":"     * @throws InvalidCommandException If the action specified by the user is invalid.","lastModifiedDate":"2022-03-21"},{"lineNumber":108,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":109,"author":{"gitId":"emilysim00"},"content":"    public void setUserAction(String userAction) throws InvalidCommandException {","lastModifiedDate":"2022-03-21"},{"lineNumber":110,"author":{"gitId":"emilysim00"},"content":"        switch (userAction) {","lastModifiedDate":"2022-03-21"},{"lineNumber":111,"author":{"gitId":"emilysim00"},"content":"        case UPDATE_ACTION_KEYWORD:","lastModifiedDate":"2022-03-21"},{"lineNumber":112,"author":{"gitId":"emilysim00"},"content":"            //Fallthrough","lastModifiedDate":"2022-03-21"},{"lineNumber":113,"author":{"gitId":"emilysim00"},"content":"        case LIST_ACTION_KEYWORD:","lastModifiedDate":"2022-03-21"},{"lineNumber":114,"author":{"gitId":"emilysim00"},"content":"            //Fallthrough","lastModifiedDate":"2022-03-21"},{"lineNumber":115,"author":{"gitId":"emilysim00"},"content":"        case CLEAR_ACTION_KEYWORD:","lastModifiedDate":"2022-03-21"},{"lineNumber":116,"author":{"gitId":"emilysim00"},"content":"            //Fallthrough","lastModifiedDate":"2022-03-21"},{"lineNumber":117,"author":{"gitId":"emilysim00"},"content":"        case CLEAR_ALL_ACTION_KEYWORD:","lastModifiedDate":"2022-03-21"},{"lineNumber":118,"author":{"gitId":"emilysim00"},"content":"            this.userAction \u003d userAction;","lastModifiedDate":"2022-03-21"},{"lineNumber":119,"author":{"gitId":"emilysim00"},"content":"            break;","lastModifiedDate":"2022-03-21"},{"lineNumber":120,"author":{"gitId":"emilysim00"},"content":"        default:","lastModifiedDate":"2022-03-21"},{"lineNumber":121,"author":{"gitId":"emilysim00"},"content":"            String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-21"},{"lineNumber":122,"author":{"gitId":"emilysim00"},"content":"            throw new InvalidCommandException(className, InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-21"},{"lineNumber":123,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":124,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":125,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":126,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":127,"author":{"gitId":"emilysim00"},"content":"     * Gets the user argument stored in the class instance.","lastModifiedDate":"2022-03-21"},{"lineNumber":128,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":129,"author":{"gitId":"emilysim00"},"content":"     * @return A string containing the user argument.","lastModifiedDate":"2022-03-21"},{"lineNumber":130,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":131,"author":{"gitId":"emilysim00"},"content":"    public String getUserArguments() {","lastModifiedDate":"2022-03-21"},{"lineNumber":132,"author":{"gitId":"emilysim00"},"content":"        return this.userArguments;","lastModifiedDate":"2022-03-21"},{"lineNumber":133,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":134,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":135,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":136,"author":{"gitId":"emilysim00"},"content":"     * Executes a schedule-related command based on the action and arguments that is stored in the","lastModifiedDate":"2022-03-24"},{"lineNumber":137,"author":{"gitId":"emilysim00"},"content":"     * class fields. If the action and/or arguments specified are invalid, this method will handle the","lastModifiedDate":"2022-03-24"},{"lineNumber":138,"author":{"gitId":"emilysim00"},"content":"     * exceptions and print appropriate responses.","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":140,"author":{"gitId":"emilysim00"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":141,"author":{"gitId":"emilysim00"},"content":"    public void execute() {","lastModifiedDate":"2022-03-21"},{"lineNumber":142,"author":{"gitId":"emilysim00"},"content":"        try {","lastModifiedDate":"2022-03-21"},{"lineNumber":143,"author":{"gitId":"emilysim00"},"content":"            switch (getUserAction()) {","lastModifiedDate":"2022-03-21"},{"lineNumber":144,"author":{"gitId":"emilysim00"},"content":"            case UPDATE_ACTION_KEYWORD:","lastModifiedDate":"2022-03-21"},{"lineNumber":145,"author":{"gitId":"emilysim00"},"content":"                Day newDay \u003d scheduleList.updateDay(getUserArguments());","lastModifiedDate":"2022-03-21"},{"lineNumber":146,"author":{"gitId":"emilysim00"},"content":"                getUI().printNewScheduleCreatedMessage(newDay);","lastModifiedDate":"2022-03-21"},{"lineNumber":147,"author":{"gitId":"alanlowzies"},"content":"                getFileManager().rewriteAllDaysScheduleToFile(getScheduleList());","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-21"},{"lineNumber":149,"author":{"gitId":"emilysim00"},"content":"            case LIST_ACTION_KEYWORD:","lastModifiedDate":"2022-03-21"},{"lineNumber":150,"author":{"gitId":"emilysim00"},"content":"                scheduleList.printSchedule();","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-21"},{"lineNumber":152,"author":{"gitId":"emilysim00"},"content":"            case CLEAR_ACTION_KEYWORD:","lastModifiedDate":"2022-03-21"},{"lineNumber":153,"author":{"gitId":"emilysim00"},"content":"                scheduleList.clearDayPlan(getUserArguments());","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"emilysim00"},"content":"                getFileManager().rewriteAllDaysScheduleToFile(getScheduleList());","lastModifiedDate":"2022-03-30"},{"lineNumber":155,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-21"},{"lineNumber":156,"author":{"gitId":"emilysim00"},"content":"            case CLEAR_ALL_ACTION_KEYWORD:","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"emilysim00"},"content":"                scheduleList.clearAllSchedule();","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"emilysim00"},"content":"                getUI().printClearedScheduleMessage();","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"emilysim00"},"content":"                getFileManager().rewriteAllDaysScheduleToFile(getScheduleList());","lastModifiedDate":"2022-03-30"},{"lineNumber":160,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-21"},{"lineNumber":161,"author":{"gitId":"emilysim00"},"content":"            default:","lastModifiedDate":"2022-03-21"},{"lineNumber":162,"author":{"gitId":"emilysim00"},"content":"                String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-21"},{"lineNumber":163,"author":{"gitId":"emilysim00"},"content":"                logger.log(Level.WARNING, \"Invalid action under schedule command is entered!\");","lastModifiedDate":"2022-03-21"},{"lineNumber":164,"author":{"gitId":"emilysim00"},"content":"                throw new InvalidCommandException(className, InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-21"},{"lineNumber":165,"author":{"gitId":"emilysim00"},"content":"            }","lastModifiedDate":"2022-03-21"},{"lineNumber":166,"author":{"gitId":"emilysim00"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2022-03-21"},{"lineNumber":167,"author":{"gitId":"emilysim00"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-21"},{"lineNumber":168,"author":{"gitId":"emilysim00"},"content":"            System.out.println(\"Please try again\");","lastModifiedDate":"2022-03-21"},{"lineNumber":169,"author":{"gitId":"emilysim00"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-21"},{"lineNumber":170,"author":{"gitId":"emilysim00"},"content":"            System.out.println(INDEX_OUT_OF_BOUND);","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"emilysim00"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-21"},{"lineNumber":172,"author":{"gitId":"emilysim00"},"content":"            logger.log(Level.WARNING, \"A non-formattable number was received!\");","lastModifiedDate":"2022-03-21"},{"lineNumber":173,"author":{"gitId":"emilysim00"},"content":"            System.out.println(INPUT_NOT_NUMBER_FORMATTABLE);","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"emilysim00"},"content":"        } catch (InvalidScheduleException e) {","lastModifiedDate":"2022-03-21"},{"lineNumber":175,"author":{"gitId":"emilysim00"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-21"},{"lineNumber":176,"author":{"gitId":"alanlowzies"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-23"},{"lineNumber":177,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(UI.IOEXCEPTION_ERROR_MESSAGE);","lastModifiedDate":"2022-03-23"},{"lineNumber":178,"author":{"gitId":"alanlowzies"},"content":"            System.exit(-1);","lastModifiedDate":"2022-03-23"},{"lineNumber":179,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":180,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":181,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"emilysim00":158,"alanlowzies":23}},{"path":"src/main/java/commands/SearchCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package commands;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"import data.workouts.WorkoutList;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"import textcolors.TextColor;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":" * A class that will handle the commands relating to search.","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"public class SearchCommand extends Command {","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"    public static final String BASE_KEYWORD \u003d \"search\";","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"    public static final String SEARCH_EXERCISE_ACTION_KEYWORD \u003d \"/exercise\";","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"    public static final String SEARCH_WORKOUT_ACTION_KEYWORD \u003d \"/workout\";","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"    public static final String SEARCH_PLAN_ACTION_KEYWORD \u003d \"/plan\";","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"    public static final String SEARCH_ALL_ACTION_KEYWORD \u003d \"/all\";","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"    public static final String CATEGORY_EXERCISE \u003d \"exercise\";","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"    public static final String CATEGORY_WORKOUT \u003d \"workout\";","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"    public static final String CATEGORY_PLAN \u003d \"plan\";","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"    private UI ui;","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"    private ExerciseList exerciseList;","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"    private WorkoutList workoutList;","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"    private PlanList planList;","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"    private String userAction;","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"    private String userArguments;","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"    private int matchCount;","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"    private static Logger logger \u003d Logger.getLogger(SearchCommand.class.getName());","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"a1021492980"},"content":"     * Constructs a new instance of the SearchCommand. Constructed when the user enters an","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"a1021492980"},"content":"     * exercise-related search command.","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"a1021492980"},"content":"     * @param userInput     The user\u0027s full original input.","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"a1021492980"},"content":"     * @param ui            An instance of the ui class.","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"a1021492980"},"content":"     * @param exerciseList  An instance of the ExerciseList class.","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"a1021492980"},"content":"     * @param userAction    The action that was parsed from the user\u0027s input.","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"a1021492980"},"content":"     * @param userArguments The arguments that are accompanied by the user action.","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidCommandException  If the command entered by the user is incorrect.","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"a1021492980"},"content":"    public SearchCommand(String userInput, UI ui, ExerciseList exerciseList,","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"a1021492980"},"content":"                         String userAction, String userArguments) throws InvalidCommandException {","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"        super(userInput);","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"a1021492980"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"a1021492980"},"content":"        this.exerciseList \u003d exerciseList;","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"a1021492980"},"content":"        setUserAction(userAction);","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"a1021492980"},"content":"        this.userArguments \u003d userArguments.toLowerCase();","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"a1021492980"},"content":"        this.matchCount \u003d 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"a1021492980"},"content":"        LogHandler.linkToFileLogger(logger);","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"a1021492980"},"content":"     * Constructs a new instance of the SearchCommand. Constructed when the user enters a","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"a1021492980"},"content":"     * plan-related search command.","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"a1021492980"},"content":"     * @param userInput     The user\u0027s full original input.","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"a1021492980"},"content":"     * @param ui            An instance of the ui class.","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"a1021492980"},"content":"     * @param planList      An instance of the PlanList class.","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"a1021492980"},"content":"     * @param userAction    The action that was parsed from the user\u0027s input.","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"a1021492980"},"content":"     * @param userArguments The arguments that are accompanied by the user action.","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidCommandException  If the command entered by the user is incorrect.","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"a1021492980"},"content":"    public SearchCommand(String userInput, UI ui, PlanList planList,","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"a1021492980"},"content":"                             String userAction, String userArguments) throws InvalidCommandException {","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"a1021492980"},"content":"        super(userInput);","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"a1021492980"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"a1021492980"},"content":"        this.planList \u003d planList;","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"a1021492980"},"content":"        setUserAction(userAction);","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"a1021492980"},"content":"        this.userArguments \u003d userArguments.toLowerCase();","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"a1021492980"},"content":"        this.matchCount \u003d 0;","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"a1021492980"},"content":"        LogHandler.linkToFileLogger(logger);","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"a1021492980"},"content":"     * Constructs a new instance of the SearchCommand. Constructed when the user enters a","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"a1021492980"},"content":"     * search command for all types.","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"a1021492980"},"content":"     * @param userInput     The user\u0027s full original input.","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"a1021492980"},"content":"     * @param ui            An instance of the ui class.","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"a1021492980"},"content":"     * @param exerciseList  An instance of the ExerciseList class.","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"a1021492980"},"content":"     * @param workoutList   An instance of the WorkoutList class.","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"a1021492980"},"content":"     * @param planList      An instance of the PlanList class.","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"a1021492980"},"content":"     * @param userAction    The action that was parsed from the user\u0027s input.","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"a1021492980"},"content":"     * @param userArguments The arguments that are accompanied by the user action.","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidCommandException  If the command entered by the user is incorrect.","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"a1021492980"},"content":"    public SearchCommand(String userInput, UI ui, ExerciseList exerciseList, WorkoutList workoutList, PlanList planList,","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"a1021492980"},"content":"                         String userAction, String userArguments) throws InvalidCommandException {","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"a1021492980"},"content":"        super(userInput);","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"a1021492980"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"a1021492980"},"content":"        this.exerciseList \u003d exerciseList;","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"a1021492980"},"content":"        this.workoutList \u003d workoutList;","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"a1021492980"},"content":"        this.planList \u003d planList;","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"a1021492980"},"content":"        setUserAction(userAction);","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"a1021492980"},"content":"        this.userArguments \u003d userArguments.toLowerCase();","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"a1021492980"},"content":"        this.matchCount \u003d 0;","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"a1021492980"},"content":"        LogHandler.linkToFileLogger(logger);","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"a1021492980"},"content":"     * Constructs a new instance of the SearchCommand. Constructed when the user enters a","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"a1021492980"},"content":"     * workout-related search command.","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"a1021492980"},"content":"     * @param userInput     The user\u0027s full original input.","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"a1021492980"},"content":"     * @param ui            An instance of the ui class.","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"a1021492980"},"content":"     * @param workoutList   An instance of the WorkoutList class.","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"a1021492980"},"content":"     * @param userAction    The action that was parsed from the user\u0027s input.","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"a1021492980"},"content":"     * @param userArguments The arguments that are accompanied by the user action.","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidCommandException  If the command entered by the user is incorrect.","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"a1021492980"},"content":"    public SearchCommand(String userInput, UI ui, WorkoutList workoutList,","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"a1021492980"},"content":"                         String userAction, String userArguments) throws InvalidCommandException {","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"a1021492980"},"content":"        super(userInput);","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"a1021492980"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"a1021492980"},"content":"        this.workoutList \u003d workoutList;","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"a1021492980"},"content":"        setUserAction(userAction);","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"a1021492980"},"content":"        this.userArguments \u003d userArguments.toLowerCase();","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"a1021492980"},"content":"        this.matchCount \u003d 0;","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"a1021492980"},"content":"        LogHandler.linkToFileLogger(logger);","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":133,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":134,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":135,"author":{"gitId":"a1021492980"},"content":"     * Gets the action of the workout command specified by the user.","lastModifiedDate":"2022-03-23"},{"lineNumber":136,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":137,"author":{"gitId":"a1021492980"},"content":"     * @return A string containing the action specified by the user.","lastModifiedDate":"2022-03-23"},{"lineNumber":138,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":139,"author":{"gitId":"a1021492980"},"content":"    public String getUserAction() {","lastModifiedDate":"2022-03-21"},{"lineNumber":140,"author":{"gitId":"a1021492980"},"content":"        return this.userAction;","lastModifiedDate":"2022-03-21"},{"lineNumber":141,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":142,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":143,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":144,"author":{"gitId":"a1021492980"},"content":"     * Gets the user argument stored in the class instance.","lastModifiedDate":"2022-03-23"},{"lineNumber":145,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":146,"author":{"gitId":"a1021492980"},"content":"     * @return A string containing the user argument.","lastModifiedDate":"2022-03-23"},{"lineNumber":147,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"a1021492980"},"content":"    public String getUserArguments() {","lastModifiedDate":"2022-03-21"},{"lineNumber":149,"author":{"gitId":"a1021492980"},"content":"        return this.userArguments;","lastModifiedDate":"2022-03-21"},{"lineNumber":150,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":151,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":152,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":153,"author":{"gitId":"a1021492980"},"content":"     * Checks for the validity of the action specified by the user and sets the class field","lastModifiedDate":"2022-03-23"},{"lineNumber":154,"author":{"gitId":"a1021492980"},"content":"     * userAction to the action (if valid).","lastModifiedDate":"2022-03-23"},{"lineNumber":155,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":156,"author":{"gitId":"a1021492980"},"content":"     * @param userAction A string containing the action specified by the user.","lastModifiedDate":"2022-03-23"},{"lineNumber":157,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidCommandException If the action specified by the user is invalid.","lastModifiedDate":"2022-03-23"},{"lineNumber":158,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":159,"author":{"gitId":"a1021492980"},"content":"    public void setUserAction(String userAction) throws InvalidCommandException {","lastModifiedDate":"2022-03-19"},{"lineNumber":160,"author":{"gitId":"a1021492980"},"content":"        switch (userAction) {","lastModifiedDate":"2022-03-19"},{"lineNumber":161,"author":{"gitId":"a1021492980"},"content":"        case SEARCH_WORKOUT_ACTION_KEYWORD:","lastModifiedDate":"2022-03-20"},{"lineNumber":162,"author":{"gitId":"a1021492980"},"content":"            //Fallthrough","lastModifiedDate":"2022-03-20"},{"lineNumber":163,"author":{"gitId":"a1021492980"},"content":"        case SEARCH_PLAN_ACTION_KEYWORD:","lastModifiedDate":"2022-03-20"},{"lineNumber":164,"author":{"gitId":"a1021492980"},"content":"            //Fallthrough","lastModifiedDate":"2022-03-20"},{"lineNumber":165,"author":{"gitId":"a1021492980"},"content":"        case SEARCH_EXERCISE_ACTION_KEYWORD:","lastModifiedDate":"2022-03-19"},{"lineNumber":166,"author":{"gitId":"a1021492980"},"content":"            //Fallthrough","lastModifiedDate":"2022-03-23"},{"lineNumber":167,"author":{"gitId":"a1021492980"},"content":"        case SEARCH_ALL_ACTION_KEYWORD:","lastModifiedDate":"2022-03-23"},{"lineNumber":168,"author":{"gitId":"a1021492980"},"content":"            this.userAction \u003d userAction;","lastModifiedDate":"2022-03-19"},{"lineNumber":169,"author":{"gitId":"a1021492980"},"content":"            break;","lastModifiedDate":"2022-03-19"},{"lineNumber":170,"author":{"gitId":"a1021492980"},"content":"        default:","lastModifiedDate":"2022-03-19"},{"lineNumber":171,"author":{"gitId":"a1021492980"},"content":"            logger.log(Level.WARNING, \"User has entered an invalid search command action.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":172,"author":{"gitId":"a1021492980"},"content":"            String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-19"},{"lineNumber":173,"author":{"gitId":"a1021492980"},"content":"            throw new InvalidCommandException(className, InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-19"},{"lineNumber":174,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":175,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":176,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":177,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":178,"author":{"gitId":"a1021492980"},"content":"     * Prints the heading of search result base on the userAction stored in the class field.","lastModifiedDate":"2022-03-23"},{"lineNumber":179,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":180,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidCommandException  If the action specified by the user is invalid.","lastModifiedDate":"2022-03-23"},{"lineNumber":181,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":182,"author":{"gitId":"a1021492980"},"content":"    private void printSearchHeading() throws InvalidCommandException {","lastModifiedDate":"2022-03-20"},{"lineNumber":183,"author":{"gitId":"a1021492980"},"content":"        switch (userAction) {","lastModifiedDate":"2022-03-20"},{"lineNumber":184,"author":{"gitId":"a1021492980"},"content":"        case SEARCH_EXERCISE_ACTION_KEYWORD:","lastModifiedDate":"2022-03-20"},{"lineNumber":185,"author":{"gitId":"a1021492980"},"content":"            if (isFirstMatch()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":186,"author":{"gitId":"a1021492980"},"content":"                printHeadingMessage(CATEGORY_EXERCISE);","lastModifiedDate":"2022-03-23"},{"lineNumber":187,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":188,"author":{"gitId":"a1021492980"},"content":"            break;","lastModifiedDate":"2022-03-20"},{"lineNumber":189,"author":{"gitId":"a1021492980"},"content":"        case SEARCH_PLAN_ACTION_KEYWORD:","lastModifiedDate":"2022-03-20"},{"lineNumber":190,"author":{"gitId":"a1021492980"},"content":"            if (isFirstMatch()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":191,"author":{"gitId":"a1021492980"},"content":"                printHeadingMessage(CATEGORY_PLAN);","lastModifiedDate":"2022-03-23"},{"lineNumber":192,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":193,"author":{"gitId":"a1021492980"},"content":"            break;","lastModifiedDate":"2022-03-20"},{"lineNumber":194,"author":{"gitId":"a1021492980"},"content":"        case SEARCH_WORKOUT_ACTION_KEYWORD:","lastModifiedDate":"2022-03-23"},{"lineNumber":195,"author":{"gitId":"a1021492980"},"content":"            if (isFirstMatch()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":196,"author":{"gitId":"a1021492980"},"content":"                printHeadingMessage(CATEGORY_WORKOUT);","lastModifiedDate":"2022-03-23"},{"lineNumber":197,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":198,"author":{"gitId":"a1021492980"},"content":"            break;","lastModifiedDate":"2022-03-23"},{"lineNumber":199,"author":{"gitId":"a1021492980"},"content":"        default:","lastModifiedDate":"2022-03-20"},{"lineNumber":200,"author":{"gitId":"a1021492980"},"content":"            logger.log(Level.WARNING, \"User has entered an invalid search command action.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":201,"author":{"gitId":"a1021492980"},"content":"            String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-20"},{"lineNumber":202,"author":{"gitId":"a1021492980"},"content":"            throw new InvalidCommandException(className, InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-20"},{"lineNumber":203,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":204,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":205,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":206,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":207,"author":{"gitId":"a1021492980"},"content":"     * Prints the heading of search result base on the category of userAction.","lastModifiedDate":"2022-03-23"},{"lineNumber":208,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":209,"author":{"gitId":"a1021492980"},"content":"     * @param category The category that will be searched.","lastModifiedDate":"2022-03-23"},{"lineNumber":210,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":211,"author":{"gitId":"a1021492980"},"content":"    private void printHeadingMessage(String category) {","lastModifiedDate":"2022-03-20"},{"lineNumber":212,"author":{"gitId":"a1021492980"},"content":"        switch (userAction) {","lastModifiedDate":"2022-03-23"},{"lineNumber":213,"author":{"gitId":"a1021492980"},"content":"        case SEARCH_WORKOUT_ACTION_KEYWORD:","lastModifiedDate":"2022-03-23"},{"lineNumber":214,"author":{"gitId":"a1021492980"},"content":"            try {","lastModifiedDate":"2022-03-23"},{"lineNumber":215,"author":{"gitId":"a1021492980"},"content":"                Integer.parseInt(userArguments);","lastModifiedDate":"2022-03-23"},{"lineNumber":216,"author":{"gitId":"a1021492980"},"content":"                System.out.println(\"The \" + category + \"(s) with \"","lastModifiedDate":"2022-03-23"},{"lineNumber":217,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \"reps \u003d \" + userArguments)","lastModifiedDate":"2022-03-23"},{"lineNumber":218,"author":{"gitId":"a1021492980"},"content":"                        + \" is(are) listed below.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":219,"author":{"gitId":"a1021492980"},"content":"                ui.printLine();","lastModifiedDate":"2022-03-23"},{"lineNumber":220,"author":{"gitId":"a1021492980"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-23"},{"lineNumber":221,"author":{"gitId":"a1021492980"},"content":"                System.out.println(\"The \" + category + \"(s)\" + \" containing keywords\"","lastModifiedDate":"2022-03-23"},{"lineNumber":222,"author":{"gitId":"a1021492980"},"content":"                        + ui.getColorText(TextColor.COLOR_YELLOW, \" [\" + userArguments + \"] \")","lastModifiedDate":"2022-03-23"},{"lineNumber":223,"author":{"gitId":"a1021492980"},"content":"                        + \"is(are) listed below.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":224,"author":{"gitId":"a1021492980"},"content":"                ui.printLine();","lastModifiedDate":"2022-03-23"},{"lineNumber":225,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":226,"author":{"gitId":"a1021492980"},"content":"            break;","lastModifiedDate":"2022-03-23"},{"lineNumber":227,"author":{"gitId":"a1021492980"},"content":"        default:","lastModifiedDate":"2022-03-23"},{"lineNumber":228,"author":{"gitId":"a1021492980"},"content":"            System.out.println(\"The \" + category + \"(s)\" + \" containing keywords\"","lastModifiedDate":"2022-03-20"},{"lineNumber":229,"author":{"gitId":"a1021492980"},"content":"                    + ui.getColorText(TextColor.COLOR_YELLOW, \" [\" + userArguments + \"] \")","lastModifiedDate":"2022-03-19"},{"lineNumber":230,"author":{"gitId":"a1021492980"},"content":"                    + \"is(are) listed below.\");","lastModifiedDate":"2022-03-19"},{"lineNumber":231,"author":{"gitId":"a1021492980"},"content":"            ui.printLine();","lastModifiedDate":"2022-03-19"},{"lineNumber":232,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":233,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":234,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":235,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":236,"author":{"gitId":"a1021492980"},"content":"     * Returns the number of matching results.","lastModifiedDate":"2022-03-23"},{"lineNumber":237,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":238,"author":{"gitId":"a1021492980"},"content":"     * @return  The number of matching results.","lastModifiedDate":"2022-03-23"},{"lineNumber":239,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":240,"author":{"gitId":"a1021492980"},"content":"    private int getMatchCount() {","lastModifiedDate":"2022-03-19"},{"lineNumber":241,"author":{"gitId":"a1021492980"},"content":"        return matchCount;","lastModifiedDate":"2022-03-19"},{"lineNumber":242,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":243,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":244,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":245,"author":{"gitId":"a1021492980"},"content":"     * Returns true if the matchCount has a value of 1.","lastModifiedDate":"2022-03-23"},{"lineNumber":246,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":247,"author":{"gitId":"a1021492980"},"content":"     * @return True if the matchCount has a value of 1.","lastModifiedDate":"2022-03-23"},{"lineNumber":248,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":249,"author":{"gitId":"a1021492980"},"content":"    private boolean isFirstMatch() {","lastModifiedDate":"2022-03-19"},{"lineNumber":250,"author":{"gitId":"a1021492980"},"content":"        return getMatchCount() \u003d\u003d 1;","lastModifiedDate":"2022-03-19"},{"lineNumber":251,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":252,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":253,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":254,"author":{"gitId":"a1021492980"},"content":"     * Increments the matchCount value by 1.","lastModifiedDate":"2022-03-23"},{"lineNumber":255,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":256,"author":{"gitId":"a1021492980"},"content":"    private void incrementMatchCount() {","lastModifiedDate":"2022-03-19"},{"lineNumber":257,"author":{"gitId":"a1021492980"},"content":"        this.matchCount +\u003d 1;","lastModifiedDate":"2022-03-19"},{"lineNumber":258,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":259,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":260,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":261,"author":{"gitId":"a1021492980"},"content":"     * Returns true if the matchCount value has a value of 0.","lastModifiedDate":"2022-03-23"},{"lineNumber":262,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":263,"author":{"gitId":"a1021492980"},"content":"     * @return True if the matchCount value has a value of 0.","lastModifiedDate":"2022-03-23"},{"lineNumber":264,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":265,"author":{"gitId":"a1021492980"},"content":"    private boolean isZeroMatch() {","lastModifiedDate":"2022-03-19"},{"lineNumber":266,"author":{"gitId":"a1021492980"},"content":"        return matchCount \u003d\u003d 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":267,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":268,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":269,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":270,"author":{"gitId":"a1021492980"},"content":"     * Sets the matchCount to zero.","lastModifiedDate":"2022-03-23"},{"lineNumber":271,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":272,"author":{"gitId":"a1021492980"},"content":"    private void clearMatchCount() {","lastModifiedDate":"2022-03-23"},{"lineNumber":273,"author":{"gitId":"a1021492980"},"content":"        this.matchCount \u003d 0;","lastModifiedDate":"2022-03-23"},{"lineNumber":274,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":275,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":276,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":277,"author":{"gitId":"a1021492980"},"content":"     * Prints all the matching exercises if there exist at least one matching exercise, prints","lastModifiedDate":"2022-03-23"},{"lineNumber":278,"author":{"gitId":"a1021492980"},"content":"     * \"Sorry, no matching exercise found.\" if no matching exercise could be found.","lastModifiedDate":"2022-03-23"},{"lineNumber":279,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":280,"author":{"gitId":"emilysim00"},"content":"     * @throws InvalidCommandException If the action specified by the user is invalid.","lastModifiedDate":"2022-03-27"},{"lineNumber":281,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":282,"author":{"gitId":"a1021492980"},"content":"    public void searchExercise() throws InvalidCommandException {","lastModifiedDate":"2022-03-20"},{"lineNumber":283,"author":{"gitId":"a1021492980"},"content":"        ArrayList\u003cString\u003e exerciseListToSearch \u003d exerciseList.getExerciseList();","lastModifiedDate":"2022-03-19"},{"lineNumber":284,"author":{"gitId":"a1021492980"},"content":"        for (String exerciseToSearch : exerciseListToSearch) {","lastModifiedDate":"2022-03-19"},{"lineNumber":285,"author":{"gitId":"a1021492980"},"content":"            if (isMatch(exerciseToSearch.toLowerCase())) {","lastModifiedDate":"2022-03-20"},{"lineNumber":286,"author":{"gitId":"a1021492980"},"content":"                incrementMatchCount();","lastModifiedDate":"2022-03-19"},{"lineNumber":287,"author":{"gitId":"a1021492980"},"content":"                printSearchHeading();","lastModifiedDate":"2022-03-19"},{"lineNumber":288,"author":{"gitId":"a1021492980"},"content":"                ui.printColorText(TextColor.COLOR_YELLOW, matchCount + \". \" + exerciseToSearch);","lastModifiedDate":"2022-03-19"},{"lineNumber":289,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":290,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":291,"author":{"gitId":"a1021492980"},"content":"        if (isZeroMatch()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":292,"author":{"gitId":"a1021492980"},"content":"            ui.printSearchNotFoundMessage(CATEGORY_EXERCISE);","lastModifiedDate":"2022-03-24"},{"lineNumber":293,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":294,"author":{"gitId":"a1021492980"},"content":"        clearMatchCount();","lastModifiedDate":"2022-03-23"},{"lineNumber":295,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":296,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":297,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":298,"author":{"gitId":"a1021492980"},"content":"     * Prints message when no matching result is found.","lastModifiedDate":"2022-03-23"},{"lineNumber":299,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":300,"author":{"gitId":"a1021492980"},"content":"     * @param category The category that will be searched.","lastModifiedDate":"2022-03-23"},{"lineNumber":301,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":302,"author":{"gitId":"a1021492980"},"content":"    public void printNotFoundMessage(String category) {","lastModifiedDate":"2022-03-23"},{"lineNumber":303,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"Sorry, no matching \" + category + \" found.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":304,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":305,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":306,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":307,"author":{"gitId":"a1021492980"},"content":"     * Returns true if the String record contains userArguments.","lastModifiedDate":"2022-03-23"},{"lineNumber":308,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":309,"author":{"gitId":"a1021492980"},"content":"     * @param record    A record stored in local resource file to be compared with userArguments.","lastModifiedDate":"2022-03-23"},{"lineNumber":310,"author":{"gitId":"a1021492980"},"content":"     * @return          True if the String record contains userArguments.","lastModifiedDate":"2022-03-23"},{"lineNumber":311,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":312,"author":{"gitId":"a1021492980"},"content":"    public boolean isMatch(String record) {","lastModifiedDate":"2022-03-20"},{"lineNumber":313,"author":{"gitId":"a1021492980"},"content":"        return record.contains(userArguments);","lastModifiedDate":"2022-03-20"},{"lineNumber":314,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":315,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":316,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":317,"author":{"gitId":"a1021492980"},"content":"     * Prints all the matching plans if there exist at least one matching plan, prints","lastModifiedDate":"2022-03-23"},{"lineNumber":318,"author":{"gitId":"a1021492980"},"content":"     * \"Sorry, no matching plan found.\" if no matching plan could be found.","lastModifiedDate":"2022-03-23"},{"lineNumber":319,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":320,"author":{"gitId":"emilysim00"},"content":"     * @throws InvalidCommandException If the action specified by the user is invalid.","lastModifiedDate":"2022-03-27"},{"lineNumber":321,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":322,"author":{"gitId":"a1021492980"},"content":"    public void searchPlan() throws InvalidCommandException {","lastModifiedDate":"2022-03-20"},{"lineNumber":323,"author":{"gitId":"a1021492980"},"content":"        var planListToSearch \u003d planList.getPlansDisplayList();","lastModifiedDate":"2022-03-20"},{"lineNumber":324,"author":{"gitId":"a1021492980"},"content":"        for (String planToSearch : planListToSearch) {","lastModifiedDate":"2022-03-24"},{"lineNumber":325,"author":{"gitId":"a1021492980"},"content":"            String planToBeCompared \u003d planToSearch.toLowerCase();","lastModifiedDate":"2022-03-24"},{"lineNumber":326,"author":{"gitId":"a1021492980"},"content":"            if (isMatch(planToBeCompared)) {","lastModifiedDate":"2022-03-20"},{"lineNumber":327,"author":{"gitId":"a1021492980"},"content":"                incrementMatchCount();","lastModifiedDate":"2022-03-20"},{"lineNumber":328,"author":{"gitId":"a1021492980"},"content":"                printSearchHeading();","lastModifiedDate":"2022-03-20"},{"lineNumber":329,"author":{"gitId":"a1021492980"},"content":"                ui.printColorText(TextColor.COLOR_YELLOW, matchCount + \". \" + planToBeCompared);","lastModifiedDate":"2022-03-20"},{"lineNumber":330,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":331,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":332,"author":{"gitId":"a1021492980"},"content":"        if (isZeroMatch()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":333,"author":{"gitId":"a1021492980"},"content":"            ui.printSearchNotFoundMessage(CATEGORY_PLAN);","lastModifiedDate":"2022-03-24"},{"lineNumber":334,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":335,"author":{"gitId":"a1021492980"},"content":"        clearMatchCount();","lastModifiedDate":"2022-03-23"},{"lineNumber":336,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":337,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":338,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":339,"author":{"gitId":"a1021492980"},"content":"     * Parses the number of reps of a given workout.","lastModifiedDate":"2022-03-23"},{"lineNumber":340,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":341,"author":{"gitId":"a1021492980"},"content":"     * @param workoutDisplayName    The workout name to be parsed.","lastModifiedDate":"2022-03-23"},{"lineNumber":342,"author":{"gitId":"a1021492980"},"content":"     * @return                      The integer value of reps.","lastModifiedDate":"2022-03-23"},{"lineNumber":343,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":344,"author":{"gitId":"a1021492980"},"content":"    public int parseWorkoutReps(String workoutDisplayName) {","lastModifiedDate":"2022-03-23"},{"lineNumber":345,"author":{"gitId":"a1021492980"},"content":"        var beginningOfReps \u003d workoutDisplayName.indexOf(\"(\") + 1;","lastModifiedDate":"2022-03-23"},{"lineNumber":346,"author":{"gitId":"a1021492980"},"content":"        var endingOfReps \u003d workoutDisplayName.indexOf(\" reps)\");","lastModifiedDate":"2022-03-23"},{"lineNumber":347,"author":{"gitId":"a1021492980"},"content":"        var reps \u003d workoutDisplayName.substring(beginningOfReps, endingOfReps).trim();","lastModifiedDate":"2022-03-23"},{"lineNumber":348,"author":{"gitId":"a1021492980"},"content":"        return Integer.parseInt(reps);","lastModifiedDate":"2022-03-23"},{"lineNumber":349,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":350,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":351,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":352,"author":{"gitId":"a1021492980"},"content":"     * Returns true if the int value of userArguments is the same as quantity.","lastModifiedDate":"2022-03-23"},{"lineNumber":353,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":354,"author":{"gitId":"a1021492980"},"content":"     * @param quantity                  Number of reps of a workout.","lastModifiedDate":"2022-03-23"},{"lineNumber":355,"author":{"gitId":"a1021492980"},"content":"     * @return                          True if the int value of userArguments is the same as quantity.","lastModifiedDate":"2022-03-23"},{"lineNumber":356,"author":{"gitId":"a1021492980"},"content":"     * @throws NumberFormatException    If userArguments cannot be parsed to integer.","lastModifiedDate":"2022-03-23"},{"lineNumber":357,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":358,"author":{"gitId":"a1021492980"},"content":"    public boolean isMatchQuantity(int quantity) throws NumberFormatException {","lastModifiedDate":"2022-03-23"},{"lineNumber":359,"author":{"gitId":"a1021492980"},"content":"        return quantity \u003d\u003d Integer.parseInt(userArguments);","lastModifiedDate":"2022-03-23"},{"lineNumber":360,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":361,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":362,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":363,"author":{"gitId":"a1021492980"},"content":"     * Prints all the matching workouts if there exist at least one matching workout, prints","lastModifiedDate":"2022-03-23"},{"lineNumber":364,"author":{"gitId":"a1021492980"},"content":"     * \"Sorry, no matching workout found.\" if no matching workout could be found.","lastModifiedDate":"2022-03-23"},{"lineNumber":365,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":366,"author":{"gitId":"emilysim00"},"content":"     * @throws InvalidCommandException If the action specified by the user is invalid.","lastModifiedDate":"2022-03-27"},{"lineNumber":367,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":368,"author":{"gitId":"a1021492980"},"content":"    public void searchWorkout() throws InvalidCommandException {","lastModifiedDate":"2022-03-23"},{"lineNumber":369,"author":{"gitId":"a1021492980"},"content":"        var workoutListToSearch \u003d workoutList.getWorkoutsDisplayList();","lastModifiedDate":"2022-03-23"},{"lineNumber":370,"author":{"gitId":"a1021492980"},"content":"        for (String workoutToSearch : workoutListToSearch) {","lastModifiedDate":"2022-03-24"},{"lineNumber":371,"author":{"gitId":"a1021492980"},"content":"            String workoutToBeCompared \u003d workoutToSearch.toLowerCase();","lastModifiedDate":"2022-03-24"},{"lineNumber":372,"author":{"gitId":"a1021492980"},"content":"            var reps \u003d parseWorkoutReps(workoutToBeCompared);","lastModifiedDate":"2022-03-23"},{"lineNumber":373,"author":{"gitId":"a1021492980"},"content":"            var beginningOfReps \u003d workoutToBeCompared.indexOf(\"(\");","lastModifiedDate":"2022-03-23"},{"lineNumber":374,"author":{"gitId":"a1021492980"},"content":"            var exerciseName \u003d workoutToBeCompared.substring(0, beginningOfReps).trim();","lastModifiedDate":"2022-03-23"},{"lineNumber":375,"author":{"gitId":"a1021492980"},"content":"            try {","lastModifiedDate":"2022-03-23"},{"lineNumber":376,"author":{"gitId":"a1021492980"},"content":"                if (isMatchQuantity(reps)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":377,"author":{"gitId":"a1021492980"},"content":"                    incrementMatchCount();","lastModifiedDate":"2022-03-23"},{"lineNumber":378,"author":{"gitId":"a1021492980"},"content":"                    printSearchHeading();","lastModifiedDate":"2022-03-23"},{"lineNumber":379,"author":{"gitId":"a1021492980"},"content":"                    ui.printColorText(TextColor.COLOR_YELLOW, matchCount + \". \" + workoutToBeCompared);","lastModifiedDate":"2022-03-23"},{"lineNumber":380,"author":{"gitId":"a1021492980"},"content":"                }","lastModifiedDate":"2022-03-23"},{"lineNumber":381,"author":{"gitId":"a1021492980"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-23"},{"lineNumber":382,"author":{"gitId":"a1021492980"},"content":"                if (isMatch(exerciseName)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":383,"author":{"gitId":"a1021492980"},"content":"                    incrementMatchCount();","lastModifiedDate":"2022-03-23"},{"lineNumber":384,"author":{"gitId":"a1021492980"},"content":"                    printSearchHeading();","lastModifiedDate":"2022-03-23"},{"lineNumber":385,"author":{"gitId":"a1021492980"},"content":"                    ui.printColorText(TextColor.COLOR_YELLOW, matchCount + \". \" + workoutToBeCompared);","lastModifiedDate":"2022-03-23"},{"lineNumber":386,"author":{"gitId":"a1021492980"},"content":"                }","lastModifiedDate":"2022-03-23"},{"lineNumber":387,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":388,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":389,"author":{"gitId":"a1021492980"},"content":"        if (isZeroMatch()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":390,"author":{"gitId":"a1021492980"},"content":"            ui.printSearchNotFoundMessage(CATEGORY_WORKOUT);","lastModifiedDate":"2022-03-24"},{"lineNumber":391,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":392,"author":{"gitId":"a1021492980"},"content":"        clearMatchCount();","lastModifiedDate":"2022-03-23"},{"lineNumber":393,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":394,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":395,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":396,"author":{"gitId":"a1021492980"},"content":"     * Prints the relevant exercises, workouts and plans that match the userArguments.","lastModifiedDate":"2022-03-23"},{"lineNumber":397,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":398,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidCommandException  If the action specified by the user is invalid.","lastModifiedDate":"2022-03-23"},{"lineNumber":399,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":400,"author":{"gitId":"a1021492980"},"content":"    public void searchAll() throws InvalidCommandException {","lastModifiedDate":"2022-03-23"},{"lineNumber":401,"author":{"gitId":"a1021492980"},"content":"        setUserAction(SEARCH_EXERCISE_ACTION_KEYWORD);","lastModifiedDate":"2022-03-23"},{"lineNumber":402,"author":{"gitId":"a1021492980"},"content":"        searchExercise();","lastModifiedDate":"2022-03-23"},{"lineNumber":403,"author":{"gitId":"a1021492980"},"content":"        ui.printLine();","lastModifiedDate":"2022-03-23"},{"lineNumber":404,"author":{"gitId":"a1021492980"},"content":"        setUserAction(SEARCH_WORKOUT_ACTION_KEYWORD);","lastModifiedDate":"2022-03-23"},{"lineNumber":405,"author":{"gitId":"a1021492980"},"content":"        searchWorkout();","lastModifiedDate":"2022-03-23"},{"lineNumber":406,"author":{"gitId":"a1021492980"},"content":"        ui.printLine();","lastModifiedDate":"2022-03-23"},{"lineNumber":407,"author":{"gitId":"a1021492980"},"content":"        setUserAction(SEARCH_PLAN_ACTION_KEYWORD);","lastModifiedDate":"2022-03-23"},{"lineNumber":408,"author":{"gitId":"a1021492980"},"content":"        searchPlan();","lastModifiedDate":"2022-03-23"},{"lineNumber":409,"author":{"gitId":"a1021492980"},"content":"        setUserAction(SEARCH_ALL_ACTION_KEYWORD);","lastModifiedDate":"2022-03-23"},{"lineNumber":410,"author":{"gitId":"a1021492980"},"content":"        clearMatchCount();","lastModifiedDate":"2022-03-23"},{"lineNumber":411,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":412,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":413,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":414,"author":{"gitId":"a1021492980"},"content":"     * Executes a search-related command based on the action and arguments that is stored in the","lastModifiedDate":"2022-03-23"},{"lineNumber":415,"author":{"gitId":"a1021492980"},"content":"     * class fields. If the action and/or arguments specified are invalid, this method will handle the","lastModifiedDate":"2022-03-23"},{"lineNumber":416,"author":{"gitId":"a1021492980"},"content":"     * exceptions and print appropriate responses.","lastModifiedDate":"2022-03-23"},{"lineNumber":417,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":418,"author":{"gitId":"a1021492980"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":419,"author":{"gitId":"a1021492980"},"content":"    public void execute() {","lastModifiedDate":"2022-03-19"},{"lineNumber":420,"author":{"gitId":"a1021492980"},"content":"        try {","lastModifiedDate":"2022-03-19"},{"lineNumber":421,"author":{"gitId":"a1021492980"},"content":"            switch (userAction) {","lastModifiedDate":"2022-03-19"},{"lineNumber":422,"author":{"gitId":"a1021492980"},"content":"            case SEARCH_EXERCISE_ACTION_KEYWORD:","lastModifiedDate":"2022-03-19"},{"lineNumber":423,"author":{"gitId":"a1021492980"},"content":"                searchExercise();","lastModifiedDate":"2022-03-19"},{"lineNumber":424,"author":{"gitId":"a1021492980"},"content":"                break;","lastModifiedDate":"2022-03-19"},{"lineNumber":425,"author":{"gitId":"a1021492980"},"content":"            case SEARCH_PLAN_ACTION_KEYWORD:","lastModifiedDate":"2022-03-20"},{"lineNumber":426,"author":{"gitId":"a1021492980"},"content":"                searchPlan();","lastModifiedDate":"2022-03-20"},{"lineNumber":427,"author":{"gitId":"a1021492980"},"content":"                break;","lastModifiedDate":"2022-03-20"},{"lineNumber":428,"author":{"gitId":"a1021492980"},"content":"            case SEARCH_WORKOUT_ACTION_KEYWORD:","lastModifiedDate":"2022-03-23"},{"lineNumber":429,"author":{"gitId":"a1021492980"},"content":"                searchWorkout();","lastModifiedDate":"2022-03-23"},{"lineNumber":430,"author":{"gitId":"a1021492980"},"content":"                break;","lastModifiedDate":"2022-03-23"},{"lineNumber":431,"author":{"gitId":"a1021492980"},"content":"            case SEARCH_ALL_ACTION_KEYWORD:","lastModifiedDate":"2022-03-23"},{"lineNumber":432,"author":{"gitId":"a1021492980"},"content":"                searchAll();","lastModifiedDate":"2022-03-23"},{"lineNumber":433,"author":{"gitId":"a1021492980"},"content":"                break;","lastModifiedDate":"2022-03-23"},{"lineNumber":434,"author":{"gitId":"a1021492980"},"content":"            default:","lastModifiedDate":"2022-03-19"},{"lineNumber":435,"author":{"gitId":"a1021492980"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid search command action.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":436,"author":{"gitId":"a1021492980"},"content":"                String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-19"},{"lineNumber":437,"author":{"gitId":"a1021492980"},"content":"                throw new InvalidCommandException(className, InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-19"},{"lineNumber":438,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":439,"author":{"gitId":"a1021492980"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2022-03-19"},{"lineNumber":440,"author":{"gitId":"a1021492980"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-19"},{"lineNumber":441,"author":{"gitId":"a1021492980"},"content":"            System.out.println(\"Please try again\");","lastModifiedDate":"2022-03-19"},{"lineNumber":442,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":443,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":444,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"emilysim00":6,"alanlowzies":8,"a1021492980":430}},{"path":"src/main/java/commands/WorkoutCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package commands;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"import data.exercises.InvalidExerciseException;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"TianaiYan"},"content":"import data.plans.InvalidPlanException;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"TianaiYan"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"import data.workouts.InvalidWorkoutException;","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"import data.workouts.Workout;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"import data.workouts.WorkoutList;","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"import storage.FileManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":" * A class that will handle the commands relating to workout.","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"public class WorkoutCommand extends Command {","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"    public static final String BASE_KEYWORD \u003d \"workout\";","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"    public static final String CREATE_ACTION_KEYWORD \u003d \"/new\";","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"    public static final String CREATE_ACTION_REPS_KEYWORD \u003d \"/reps\";","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"    public static final String LIST_ACTION_KEYWORD \u003d \"/list\";","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"    public static final String DELETE_ACTION_KEYWORD \u003d \"/delete\";","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"    public static final String UPDATE_ACTION_KEYWORD \u003d \"/update\";","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"    private FileManager fileManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"    private UI ui \u003d new UI();","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"    private WorkoutList workoutList;","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"TianaiYan"},"content":"    private PlanList planList;","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"    private String userAction;","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"    private String userArguments;","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"    private static Logger logger \u003d Logger.getLogger(WorkoutCommand.class.getName());","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"     * Constructs a new instance of the WorkoutCommand. Constructed when the user enters a","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"     * workout-related command.","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"     * @param userInput     The user\u0027s full original input.","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"     * @param fileManager   An instance of the FileManager class.","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"     * @param workoutList   An instance of the WorkoutList class.","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"TianaiYan"},"content":"     * @param planList      An instance of the PlanList class.","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"     * @param userAction    The action that was parsed from the user\u0027s input.","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"     * @param userArguments The arguments that are accompanied by the user action.","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidCommandException If the command entered by the user is incorrect.","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"    public WorkoutCommand(String userInput, FileManager fileManager, WorkoutList workoutList,","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"TianaiYan"},"content":"            PlanList planList, String userAction, String userArguments) throws InvalidCommandException {","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"        super(userInput);","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"        this.fileManager \u003d fileManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"        this.workoutList \u003d workoutList;","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"TianaiYan"},"content":"        this.planList \u003d planList;","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"        setUserAction(userAction);","lastModifiedDate":"2022-03-05"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"        this.userArguments \u003d userArguments;","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"        LogHandler.linkToFileLogger(logger);","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"     * Gets the instance of the UI class.","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"     * @return An instance of the UI class.","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"    public UI getUI() {","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"        return this.ui;","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"     * Gets the instance of the FileManager class.","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"     * @return An instance of the FileManager class.","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"    public FileManager getFileManager() {","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"alanlowzies"},"content":"        return this.fileManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"     * Gets the instance of the WorkoutList class.","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"alanlowzies"},"content":"     * @return An instance of the WorkoutList class.","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"    public WorkoutList getWorkoutList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"        return this.workoutList;","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"TianaiYan"},"content":"     * Gets the instance of the PlanList class.","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"TianaiYan"},"content":"     * @return An instance of the PlanList class.","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"TianaiYan"},"content":"    public PlanList getPlanList() {","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"TianaiYan"},"content":"        return planList;","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"alanlowzies"},"content":"     * Gets the action of the workout command specified by the user.","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"alanlowzies"},"content":"     * @return A string containing the action specified by the user.","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"alanlowzies"},"content":"    public String getUserAction() {","lastModifiedDate":"2022-03-05"},{"lineNumber":104,"author":{"gitId":"alanlowzies"},"content":"        return this.userAction;","lastModifiedDate":"2022-03-05"},{"lineNumber":105,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":106,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":107,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"alanlowzies"},"content":"     * Checks for the validity of the action specified by the user and sets the class field","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"alanlowzies"},"content":"     * userAction to the action (if valid).","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"alanlowzies"},"content":"     * @param userAction A string containing the action specified by the user.","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidCommandException If the action specified by the user is invalid.","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"alanlowzies"},"content":"    public void setUserAction(String userAction) throws InvalidCommandException {","lastModifiedDate":"2022-03-05"},{"lineNumber":115,"author":{"gitId":"alanlowzies"},"content":"        switch (userAction) {","lastModifiedDate":"2022-03-05"},{"lineNumber":116,"author":{"gitId":"alanlowzies"},"content":"        case CREATE_ACTION_KEYWORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":117,"author":{"gitId":"alanlowzies"},"content":"            // Fallthrough","lastModifiedDate":"2022-03-05"},{"lineNumber":118,"author":{"gitId":"alanlowzies"},"content":"        case LIST_ACTION_KEYWORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":119,"author":{"gitId":"alanlowzies"},"content":"            // Fallthrough","lastModifiedDate":"2022-03-05"},{"lineNumber":120,"author":{"gitId":"alanlowzies"},"content":"        case DELETE_ACTION_KEYWORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":121,"author":{"gitId":"alanlowzies"},"content":"            // Fallthrough","lastModifiedDate":"2022-03-05"},{"lineNumber":122,"author":{"gitId":"alanlowzies"},"content":"        case UPDATE_ACTION_KEYWORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":123,"author":{"gitId":"alanlowzies"},"content":"            this.userAction \u003d userAction;","lastModifiedDate":"2022-03-05"},{"lineNumber":124,"author":{"gitId":"alanlowzies"},"content":"            break;","lastModifiedDate":"2022-03-05"},{"lineNumber":125,"author":{"gitId":"alanlowzies"},"content":"        default:","lastModifiedDate":"2022-03-05"},{"lineNumber":126,"author":{"gitId":"alanlowzies"},"content":"            String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-05"},{"lineNumber":127,"author":{"gitId":"alanlowzies"},"content":"            throw new InvalidCommandException(className, InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-05"},{"lineNumber":128,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":129,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":130,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":131,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"alanlowzies"},"content":"     * Gets the user argument stored in the class instance.","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"alanlowzies"},"content":"     * @return A string containing the user argument.","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"alanlowzies"},"content":"    public String getUserArguments() {","lastModifiedDate":"2022-03-05"},{"lineNumber":137,"author":{"gitId":"alanlowzies"},"content":"        return this.userArguments;","lastModifiedDate":"2022-03-05"},{"lineNumber":138,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":139,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":140,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":141,"author":{"gitId":"alanlowzies"},"content":"     * Executes a workout-related command based on the action and arguments that is stored in the","lastModifiedDate":"2022-03-14"},{"lineNumber":142,"author":{"gitId":"alanlowzies"},"content":"     * class fields. If the action and/or arguments specified are invalid, this method will handle the","lastModifiedDate":"2022-03-14"},{"lineNumber":143,"author":{"gitId":"alanlowzies"},"content":"     * exceptions and print appropriate responses.","lastModifiedDate":"2022-03-14"},{"lineNumber":144,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":145,"author":{"gitId":"alanlowzies"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":146,"author":{"gitId":"alanlowzies"},"content":"    public void execute() {","lastModifiedDate":"2022-03-05"},{"lineNumber":147,"author":{"gitId":"alanlowzies"},"content":"        try {","lastModifiedDate":"2022-03-05"},{"lineNumber":148,"author":{"gitId":"alanlowzies"},"content":"            switch (getUserAction()) {","lastModifiedDate":"2022-03-05"},{"lineNumber":149,"author":{"gitId":"alanlowzies"},"content":"            case CREATE_ACTION_KEYWORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":150,"author":{"gitId":"alanlowzies"},"content":"                Workout newWorkout \u003d getWorkoutList().createAndAddWorkout(getUserArguments());","lastModifiedDate":"2022-03-09"},{"lineNumber":151,"author":{"gitId":"alanlowzies"},"content":"                getUI().printNewWorkoutCreatedMessage(newWorkout);","lastModifiedDate":"2022-03-09"},{"lineNumber":152,"author":{"gitId":"alanlowzies"},"content":"                getFileManager().writeNewWorkoutToFile(newWorkout);","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"alanlowzies"},"content":"                break;","lastModifiedDate":"2022-03-07"},{"lineNumber":154,"author":{"gitId":"emilysim00"},"content":"            case LIST_ACTION_KEYWORD:","lastModifiedDate":"2022-03-07"},{"lineNumber":155,"author":{"gitId":"emilysim00"},"content":"                getWorkoutList().listAllWorkout();","lastModifiedDate":"2022-03-24"},{"lineNumber":156,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-24"},{"lineNumber":157,"author":{"gitId":"Musfirahe0556596"},"content":"            case DELETE_ACTION_KEYWORD:","lastModifiedDate":"2022-03-09"},{"lineNumber":158,"author":{"gitId":"TianaiYan"},"content":"                getWorkoutList().deleteWorkout(getUserArguments(), planList, ui);","lastModifiedDate":"2022-04-02"},{"lineNumber":159,"author":{"gitId":"alanlowzies"},"content":"                getFileManager().rewriteAllWorkoutsToFile(getWorkoutList());","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"TianaiYan"},"content":"                getFileManager().rewriteAllPlansToFile(getPlanList());","lastModifiedDate":"2022-03-27"},{"lineNumber":161,"author":{"gitId":"Musfirahe0556596"},"content":"                break;","lastModifiedDate":"2022-03-09"},{"lineNumber":162,"author":{"gitId":"TianaiYan"},"content":"            case UPDATE_ACTION_KEYWORD:","lastModifiedDate":"2022-03-12"},{"lineNumber":163,"author":{"gitId":"TianaiYan"},"content":"                String oldWorkout \u003d getWorkoutList().getTargetWorkout(getUserArguments());","lastModifiedDate":"2022-03-29"},{"lineNumber":164,"author":{"gitId":"TianaiYan"},"content":"                Workout updatedWorkout \u003d getWorkoutList().updateWorkout(getUserArguments());","lastModifiedDate":"2022-03-12"},{"lineNumber":165,"author":{"gitId":"TianaiYan"},"content":"                getUI().printUpdateWorkoutMessage(updatedWorkout);","lastModifiedDate":"2022-03-12"},{"lineNumber":166,"author":{"gitId":"TianaiYan"},"content":"                planList.updatePlanContainsUpdatedWorkout(oldWorkout, updatedWorkout);","lastModifiedDate":"2022-03-29"},{"lineNumber":167,"author":{"gitId":"TianaiYan"},"content":"                getFileManager().rewriteAllWorkoutsToFile(getWorkoutList());","lastModifiedDate":"2022-03-12"},{"lineNumber":168,"author":{"gitId":"TianaiYan"},"content":"                getFileManager().rewriteAllPlansToFile(getPlanList());","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"TianaiYan"},"content":"                break;","lastModifiedDate":"2022-03-12"},{"lineNumber":170,"author":{"gitId":"alanlowzies"},"content":"            default:","lastModifiedDate":"2022-03-07"},{"lineNumber":171,"author":{"gitId":"alanlowzies"},"content":"                String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-07"},{"lineNumber":172,"author":{"gitId":"Musfirahe0556596"},"content":"                logger.log(Level.WARNING, \"Invalid action under workout command is entered!\");","lastModifiedDate":"2022-03-13"},{"lineNumber":173,"author":{"gitId":"alanlowzies"},"content":"                throw new InvalidCommandException(className, InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-07"},{"lineNumber":174,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-03-05"},{"lineNumber":175,"author":{"gitId":"alanlowzies"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2022-03-07"},{"lineNumber":176,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-07"},{"lineNumber":177,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Please try again\");","lastModifiedDate":"2022-03-07"},{"lineNumber":178,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":179,"author":{"gitId":"alanlowzies"},"content":"        } catch (InvalidExerciseException e) {","lastModifiedDate":"2022-03-05"},{"lineNumber":180,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-05"},{"lineNumber":181,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Please try again. Enter \u0027exercise /list\u0027 for a list\\nof available exercises.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":182,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":183,"author":{"gitId":"alanlowzies"},"content":"        } catch (InvalidWorkoutException e) {","lastModifiedDate":"2022-03-05"},{"lineNumber":184,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-05"},{"lineNumber":185,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Please try again.\");","lastModifiedDate":"2022-03-05"},{"lineNumber":186,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":187,"author":{"gitId":"alanlowzies"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":188,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Uh oh, it seems like too few arguments were entered.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":189,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Please try again. Alternatively, type \u0027help\u0027 if you need\\n\"","lastModifiedDate":"2022-03-07"},{"lineNumber":190,"author":{"gitId":"alanlowzies"},"content":"                    + \"more information on the commands.\");","lastModifiedDate":"2022-03-07"},{"lineNumber":191,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":192,"author":{"gitId":"alanlowzies"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":193,"author":{"gitId":"Musfirahe0556596"},"content":"            logger.log(Level.WARNING, \"A non-formattable number was received!\");","lastModifiedDate":"2022-03-13"},{"lineNumber":194,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Uh oh, a number was expected in your input, but a non-formattable\\n\"","lastModifiedDate":"2022-03-07"},{"lineNumber":195,"author":{"gitId":"alanlowzies"},"content":"                    + \"number was received.\");","lastModifiedDate":"2022-03-07"},{"lineNumber":196,"author":{"gitId":"TianaiYan"},"content":"            System.out.println(\"Please try again. Alternatively, type \u0027help\u0027 if you need\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":197,"author":{"gitId":"TianaiYan"},"content":"                    + \"more information on the commands.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":198,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":199,"author":{"gitId":"alanlowzies"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-09"},{"lineNumber":200,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(UI.IOEXCEPTION_ERROR_MESSAGE);","lastModifiedDate":"2022-03-09"},{"lineNumber":201,"author":{"gitId":"alanlowzies"},"content":"            System.exit(-1);","lastModifiedDate":"2022-03-09"},{"lineNumber":202,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":203,"author":{"gitId":"alanlowzies"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-11"},{"lineNumber":204,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-11"},{"lineNumber":205,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Please try again.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":206,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":207,"author":{"gitId":"TianaiYan"},"content":"        } catch (InvalidPlanException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":208,"author":{"gitId":"TianaiYan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-27"},{"lineNumber":209,"author":{"gitId":"TianaiYan"},"content":"            System.out.println(\"Please try again.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":210,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":211,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":212,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":213,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"emilysim00":3,"Musfirahe0556596":8,"alanlowzies":170,"TianaiYan":32}},{"path":"src/main/java/data/exercises/ExerciseList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package data.exercises;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"import textcolors.TextColor;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"public class ExerciseList {","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"    private final ArrayList\u003cString\u003e exercisesList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"    private int numberOfExercises \u003d 0;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"    private UI ui \u003d new UI();","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"     * Adds a new exercise into the exercises ArrayList and updates","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"     * the relevant variables on the change.","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"     * @param exerciseName The name of the exercise to be added to the list.","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"    public void addExerciseToList(String exerciseName) {","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"        exercisesList.add(exerciseName);","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"        incrementNumberOfExercises();","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"    public ArrayList\u003cString\u003e getExerciseList() {","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"        return exercisesList;","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"     * Prints the list of exercises starting with their index.","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"    public void printExerciseList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"        assert getNumberOfExercises() \u003d\u003d exercisesList.size();","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"There are \" + getNumberOfExercises() + \" exercises available.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"Here is the list of exercises: \");","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"        ui.printLine();","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"        for (int i \u003d 0; i \u003c numberOfExercises; i++) {","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"            ui.printColorText(TextColor.COLOR_YELLOW, (i + 1) + \". \" + exercisesList.get(i));","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"a1021492980"},"content":"        ui.printLine();","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"End of exercise list.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"a1021492980"},"content":"     * Returns the exercise at given index.","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"a1021492980"},"content":"     * @param index index of exercise.","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"a1021492980"},"content":"     * @return the exercise at given index.","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"a1021492980"},"content":"     * @throws IndexOutOfBoundsException when the index provided is less than 0 or greater than the numberOfExercises.","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"a1021492980"},"content":"    protected String getExerciseAt(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"a1021492980"},"content":"        assert (0 \u003c index)  \u0026\u0026 (index \u003c\u003d numberOfExercises);","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"        return exercisesList.get(index - 1);","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"a1021492980"},"content":"     * Returns the total number of exercises that is loaded.","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"a1021492980"},"content":"     * @return number of exercises.","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"a1021492980"},"content":"    protected int getNumberOfExercises() {","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"a1021492980"},"content":"        return numberOfExercises;","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"     * Increments the number of exercises by 1.","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"    protected void incrementNumberOfExercises() {","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"        this.numberOfExercises +\u003d 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"     * Checks if the specified exercise name exists in the exercises ArrayList.","lastModifiedDate":"2022-03-05"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"     * @param exerciseName The name of the exercise that will be checked for its existence in the list.","lastModifiedDate":"2022-03-05"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"     * @return Returns true if the exercise name exists in the list. Otherwise, false is returned.","lastModifiedDate":"2022-03-05"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"    public boolean checkIfExerciseExists(String exerciseName) {","lastModifiedDate":"2022-03-05"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"        if (!exercisesList.contains(exerciseName)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"alanlowzies"},"content":"            return false;","lastModifiedDate":"2022-03-05"},{"lineNumber":78,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":79,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":80,"author":{"gitId":"alanlowzies"},"content":"        return true;","lastModifiedDate":"2022-03-05"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"     * This method provides a default list of default exercises to populate into the exercises.txt file.","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"     * The method is coded this way in order to solve the following checkstyle issue:","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"     * \u0027array initialization\u0027 child has incorrect indentation level 16, expected level should be 12.","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"     * @return An ArrayList of default exercises.","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"alanlowzies"},"content":"    public static ArrayList\u003cString\u003e getDefaultExerciseList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"alanlowzies"},"content":"        ArrayList\u003cString\u003e defaultExerciseList \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"alanlowzies"},"content":"        defaultExerciseList.add(\"push up\");","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"alanlowzies"},"content":"        defaultExerciseList.add(\"bicep curl\");","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"alanlowzies"},"content":"        defaultExerciseList.add(\"pull up\");","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"alanlowzies"},"content":"        defaultExerciseList.add(\"squat\");","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"alanlowzies"},"content":"        defaultExerciseList.add(\"lunge\");","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"alanlowzies"},"content":"        defaultExerciseList.add(\"hip thrust\");","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"alanlowzies"},"content":"        defaultExerciseList.add(\"sit up\");","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"alanlowzies"},"content":"        defaultExerciseList.add(\"crunch\");","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"alanlowzies"},"content":"        defaultExerciseList.add(\"russian twist\");","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"alanlowzies"},"content":"        defaultExerciseList.add(\"running\");","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"alanlowzies"},"content":"        defaultExerciseList.add(\"swimming\");","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"alanlowzies"},"content":"        defaultExerciseList.add(\"jumping jack\");","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"alanlowzies"},"content":"        defaultExerciseList.add(\"burpee\");","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"alanlowzies"},"content":"        return defaultExerciseList;","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"alanlowzies":57,"a1021492980":51}},{"path":"src/main/java/data/exercises/InvalidExerciseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package data.exercises;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"public class InvalidExerciseException extends Exception {","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"    public static final String INVALID_EXERCISE_NAME_ERROR_MSG \u003d \"The exercise name given does not exist.\";","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"    private String throwingClass;","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"    public InvalidExerciseException(String throwingClass, String errorMessage) {","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"        super(errorMessage);","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"        this.throwingClass \u003d throwingClass;","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"    public String getThrowingClass() {","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"        return this.throwingClass;","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"alanlowzies":16}},{"path":"src/main/java/data/plans/InvalidPlanException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"package data.plans;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":" * Thrown to indicate that the Plan being created has some invalid parameters.","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"public class InvalidPlanException extends Exception {","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"    // Pre-defined error messages","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String DUPLICATE_PLAN_NAME_ERROR_MSG \u003d \"Uh oh, the plan name already exists.\";","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"    public static final String UNKNOWN_PLAN_NAME_ERROR_MSG \u003d \"Uh oh, the plan name given does not exist.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String WORKOUT_NUMBER_OUT_OF_RANGE \u003d \"Uh oh, the index specified is out of range.\\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"            + \"(Index specified needs to be within the number of workouts)\";","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String MIN_MAX_WORKOUTS_IN_A_PLAN \u003d \"Uh oh, number of workouts specified is out of range.\\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"            + \"(A plan should minimally have 1 workout and 10 workouts at most.)\";","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"TianaiYan"},"content":"    public static final String PLAN_INDEX_OUT_OF_RANGE \u003d \"Uh oh, the index specified is out of range.\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"TianaiYan"},"content":"            + \"(Index specified needs to be within the number of plans)\";","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String PLAN_SAME_WORKOUT_SEQUENCE \u003d \"Uh oh, an existing plan with the same\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"            + \"workout sequence already exists.\";","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String PLAN_NAME_EXCEED_LIMIT \u003d \"Uh oh, the plan name exceeds the character limit (30).\";","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String PLAN_NAME_WHITESPACES_ONLY \u003d \"Uh oh, the plan name cannot contain whitespaces only.\";","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String RESERVED_PLAN_NAME \u003d \"Uh oh, this plan name is reserved for use.\";","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"    private String throwingClass;","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"     * Constructs an InvalidPlanException with the class name that this exception instance was","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"     * thrown from and the accompanying error message.","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param throwingClass The class name that this exception instance was thrown from.","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param errorMessage  The error message given by the throwing method.","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"    public InvalidPlanException(String throwingClass, String errorMessage) {","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"        super(errorMessage);","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"        this.throwingClass \u003d throwingClass;","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"Musfirahe0556596":33,"alanlowzies":1,"TianaiYan":2}},{"path":"src/main/java/data/plans/Plan.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package data.plans;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"import data.workouts.Workout;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":" * This class represents a Plan, which groups a number of workout(s) together and is given a plan name.","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"public class Plan {","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"    private String planName;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"    private ArrayList\u003cWorkout\u003e listOfWorkouts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"    public Plan(String planName, ArrayList\u003cWorkout\u003e listOfWorkouts) {","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"        this.planName \u003d planName;","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"        this.listOfWorkouts \u003d listOfWorkouts;","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"    public String getPlanName() {","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"        return planName;","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"    public ArrayList\u003cWorkout\u003e getWorkoutsInPlanList() {","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"        return listOfWorkouts;","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"    public void setPlanName() {","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"        this.planName \u003d planName;","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"    public void setWorkoutsInPlanList() {","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"        this.listOfWorkouts \u003d listOfWorkouts;","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"    public String toString() {","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"        String displayString \u003d getPlanName();","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"        return displayString;","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"Musfirahe0556596":35,"alanlowzies":4}},{"path":"src/main/java/data/plans/PlanList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package data.plans;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"import commands.PlanCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"import data.workouts.InvalidWorkoutException;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"import data.workouts.Workout;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"import data.workouts.WorkoutList;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"TianaiYan"},"content":"import textcolors.TextColor;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"TianaiYan"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"TianaiYan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":" * This class represents an instance of a list of plans entered by the user.","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":" * It contains functionality to validate the user\u0027s inputs as well as allow the user to","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":" * create, list and delete plans.","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"public class PlanList {","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final int MAX_NUMBER_OF_WORKOUTS_IN_A_PLAN \u003d 10;","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String RESERVED_PLAN_NAME \u003d \"rest day\";","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final int PLAN_NAME_CHARACTER_LIMIT \u003d 30;","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"    private WorkoutList workoutList;","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"    private HashMap\u003cString, Plan\u003e plansHashMapList \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"    private ArrayList\u003cString\u003e plansDisplayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"    private static Logger logger \u003d Logger.getLogger(PlanList.class.getName());","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"     * Constructs an instance of the PlanList class.","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param workoutList An instance of the WorkoutList class.","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"    public PlanList(WorkoutList workoutList) {","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"        this.workoutList \u003d workoutList;","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"        LogHandler.linkToFileLogger(logger);","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"Musfirahe0556596"},"content":"     * Gets the ArrayList of keys of Plan objects.","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"Musfirahe0556596"},"content":"     * The keys of Plan objects are their unique plan names.","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return An ArrayList of keys of Plan objects.","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"Musfirahe0556596"},"content":"    public ArrayList\u003cString\u003e getPlansDisplayList() {","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"Musfirahe0556596"},"content":"        return this.plansDisplayList;","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"Musfirahe0556596"},"content":"     * Gets the HashMap of Plan objects.","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return A HashMap of Plan objects.","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"Musfirahe0556596"},"content":"    public HashMap\u003cString, Plan\u003e getPlansHashMapList() {","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"Musfirahe0556596"},"content":"        return this.plansHashMapList;","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"Musfirahe0556596"},"content":"     * Gets the Plan object based on its key as stored in the plansHashMapList.","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param planKey The key that maps to the desired Plan object.","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return The Plan object that is mapped to planKey.","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"Musfirahe0556596"},"content":"    public Plan getPlanFromKey(String planKey) {","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"Musfirahe0556596"},"content":"        return getPlansHashMapList().get(planKey);","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"Musfirahe0556596"},"content":"     * Retrieves the Plan object from the HashMap plansHashMapList based on the index number","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"Musfirahe0556596"},"content":"     * of the object stored in plansDisplayList. This index number is the number shown in","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"Musfirahe0556596"},"content":"     * \u0027plan /list\u0027.","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param indexNum The index number of the plan as shown in \u0027plan /list\u0027.","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return The Plan object that corresponds to the index number.","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"Musfirahe0556596"},"content":"    public Plan getPlanFromIndexNum(int indexNum) {","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"Musfirahe0556596"},"content":"        int elementNum \u003d indexNum - 1;","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"Musfirahe0556596"},"content":"        assert (elementNum \u003e\u003d 0);","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"Musfirahe0556596"},"content":"        String keyValue \u003d getPlansDisplayList().get(elementNum);","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"Musfirahe0556596"},"content":"        Plan planObject \u003d plansHashMapList.get(keyValue);","lastModifiedDate":"2022-03-19"},{"lineNumber":82,"author":{"gitId":"Musfirahe0556596"},"content":"        return planObject;","lastModifiedDate":"2022-03-19"},{"lineNumber":83,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"     * Retrieves the index number of a plan based on its position in the plansDisplayList","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"     * ArrayList.","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"alanlowzies"},"content":"     * @param planName The name of the plan whose index number this method has to find.","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"alanlowzies"},"content":"     * @return An integer representing the index number the plan is listed in the plansDisplayList","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"alanlowzies"},"content":"     *         ArrayList.","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidPlanException If the given plan name was not found in plansDisplayList.","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"alanlowzies"},"content":"    public int getIndexNumFromPlanName(String planName) throws InvalidPlanException {","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"alanlowzies"},"content":"        for (int i \u003d 0; i \u003c getPlansDisplayList().size(); i +\u003d 1) {","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"alanlowzies"},"content":"            if (getPlansDisplayList().get(i).equals(planName)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"alanlowzies"},"content":"                return (i + 1);","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"alanlowzies"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"alanlowzies"},"content":"        throw new InvalidPlanException(className, InvalidPlanException.UNKNOWN_PLAN_NAME_ERROR_MSG);","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":106,"author":{"gitId":"Musfirahe0556596"},"content":"     * Parses the given user argument to identify the details of the new plan to be added.","lastModifiedDate":"2022-03-19"},{"lineNumber":107,"author":{"gitId":"Musfirahe0556596"},"content":"     * Thereafter, the details will be checked for their validity. If all checks pass, a new","lastModifiedDate":"2022-03-19"},{"lineNumber":108,"author":{"gitId":"Musfirahe0556596"},"content":"     * Plan object is instantiated before adding it to the ArrayList of plans.","lastModifiedDate":"2022-03-19"},{"lineNumber":109,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":110,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param userArgument The user\u0027s details for the new plan, including plan name","lastModifiedDate":"2022-03-19"},{"lineNumber":111,"author":{"gitId":"Musfirahe0556596"},"content":"     *                     and workout(s) to be added to the plan, via their workout number(s).","lastModifiedDate":"2022-03-19"},{"lineNumber":112,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return A Plan object that represents the new plan.","lastModifiedDate":"2022-03-19"},{"lineNumber":113,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws ArrayIndexOutOfBoundsException If userArgument contains insufficient arguments and parsing fails.","lastModifiedDate":"2022-03-19"},{"lineNumber":114,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws NumberFormatException If the workout number(s) specified in userArgument is an","lastModifiedDate":"2022-03-19"},{"lineNumber":115,"author":{"gitId":"Musfirahe0556596"},"content":"     *                               invalid number.","lastModifiedDate":"2022-03-19"},{"lineNumber":116,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws InvalidPlanException If the details specified in userArgument is invalid.","lastModifiedDate":"2022-03-19"},{"lineNumber":117,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":118,"author":{"gitId":"Musfirahe0556596"},"content":"    public Plan createAndAddPlan(String userArgument) throws ArrayIndexOutOfBoundsException,","lastModifiedDate":"2022-03-19"},{"lineNumber":119,"author":{"gitId":"Musfirahe0556596"},"content":"            NumberFormatException, InvalidPlanException {","lastModifiedDate":"2022-03-19"},{"lineNumber":120,"author":{"gitId":"Musfirahe0556596"},"content":"        String userPlanNameInput \u003d userArgument.split(PlanCommand.CREATE_ACTION_WORKOUTS_KEYWORD)[0].trim();","lastModifiedDate":"2022-03-19"},{"lineNumber":121,"author":{"gitId":"Musfirahe0556596"},"content":"        String userWorkoutIndexNumbersString \u003d userArgument.split(PlanCommand.CREATE_ACTION_WORKOUTS_KEYWORD)[1].trim();","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"Musfirahe0556596"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-28"},{"lineNumber":123,"author":{"gitId":"Musfirahe0556596"},"content":"        checkPlanNameValidity(userPlanNameInput, className);","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":125,"author":{"gitId":"Musfirahe0556596"},"content":"        int numberOfWorkoutsInAPlan \u003d userWorkoutIndexNumbersString.split(\",\").length;","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"Musfirahe0556596"},"content":"        checkMinMaxNumberOfWorkouts(numberOfWorkoutsInAPlan, className);","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"Musfirahe0556596"},"content":"        assert (numberOfWorkoutsInAPlan \u003e 0) \u0026\u0026 (numberOfWorkoutsInAPlan \u003c\u003d MAX_NUMBER_OF_WORKOUTS_IN_A_PLAN);","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":129,"author":{"gitId":"Musfirahe0556596"},"content":"        ArrayList\u003cWorkout\u003e workoutsToAddInAPlanList \u003d new ArrayList\u003cWorkout\u003e();","lastModifiedDate":"2022-03-19"},{"lineNumber":130,"author":{"gitId":"Musfirahe0556596"},"content":"        for (int i \u003d 0; i \u003c numberOfWorkoutsInAPlan; i +\u003d 1) {","lastModifiedDate":"2022-03-19"},{"lineNumber":131,"author":{"gitId":"Musfirahe0556596"},"content":"            int workoutIndexNumberInteger \u003d Integer.parseInt(userWorkoutIndexNumbersString.split(\",\")[i].trim());","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":133,"author":{"gitId":"Musfirahe0556596"},"content":"            checkWorkoutNumberWithinRange(workoutIndexNumberInteger, className);","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"Musfirahe0556596"},"content":"            assert (workoutIndexNumberInteger \u003e 0)","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"Musfirahe0556596"},"content":"                    \u0026\u0026 (workoutIndexNumberInteger \u003c\u003d workoutList.getWorkoutsDisplayList().size());","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":137,"author":{"gitId":"Musfirahe0556596"},"content":"            String workoutToAddKey \u003d workoutList.getWorkoutsDisplayList().get(workoutIndexNumberInteger - 1);","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"Musfirahe0556596"},"content":"            Workout workoutToAddObject \u003d workoutList.getWorkoutFromKey(workoutToAddKey);","lastModifiedDate":"2022-03-19"},{"lineNumber":139,"author":{"gitId":"Musfirahe0556596"},"content":"            workoutsToAddInAPlanList.add(workoutToAddObject);","lastModifiedDate":"2022-03-19"},{"lineNumber":140,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":141,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":142,"author":{"gitId":"Musfirahe0556596"},"content":"        checkPlanWithSameWorkoutSequence(workoutsToAddInAPlanList, className);","lastModifiedDate":"2022-03-28"},{"lineNumber":143,"author":{"gitId":"Musfirahe0556596"},"content":"        Plan newPlan \u003d new Plan(userPlanNameInput, workoutsToAddInAPlanList);","lastModifiedDate":"2022-03-19"},{"lineNumber":144,"author":{"gitId":"Musfirahe0556596"},"content":"        logger.log(Level.INFO, \"New plan created.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":145,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":146,"author":{"gitId":"Musfirahe0556596"},"content":"        String newPlanKey \u003d newPlan.toString();","lastModifiedDate":"2022-03-19"},{"lineNumber":147,"author":{"gitId":"Musfirahe0556596"},"content":"        plansHashMapList.put(newPlanKey, newPlan);","lastModifiedDate":"2022-03-19"},{"lineNumber":148,"author":{"gitId":"Musfirahe0556596"},"content":"        plansDisplayList.add(newPlanKey);","lastModifiedDate":"2022-03-19"},{"lineNumber":149,"author":{"gitId":"Musfirahe0556596"},"content":"        return newPlan;","lastModifiedDate":"2022-03-19"},{"lineNumber":150,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":151,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":152,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":153,"author":{"gitId":"Musfirahe0556596"},"content":"     * Checks if the plan name exceeds the 30 characters limit, if it only consists of","lastModifiedDate":"2022-03-28"},{"lineNumber":154,"author":{"gitId":"Musfirahe0556596"},"content":"     * whitespaces and also checks if the provided plan name already exists in the ArrayList of plans.","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"Musfirahe0556596"},"content":"     * Additionally, checks if the plan name is called \"rest day\". If it is,","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"Musfirahe0556596"},"content":"     * do not allow a plan called \"rest day\" to be created as it is used in the schedule feature.","lastModifiedDate":"2022-03-28"},{"lineNumber":157,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":158,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param userPlanNameInput The plan name entered by user to check.","lastModifiedDate":"2022-03-19"},{"lineNumber":159,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param className The class name used for exception throwing.","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws InvalidPlanException If the name of the plan to be created is invalid.","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":162,"author":{"gitId":"Musfirahe0556596"},"content":"    public void checkPlanNameValidity(String userPlanNameInput, String className) throws","lastModifiedDate":"2022-03-28"},{"lineNumber":163,"author":{"gitId":"Musfirahe0556596"},"content":"            InvalidPlanException {","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"Musfirahe0556596"},"content":"        String userPlanNameInputLowerCase \u003d userPlanNameInput.toLowerCase();","lastModifiedDate":"2022-03-19"},{"lineNumber":165,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"Musfirahe0556596"},"content":"        int characterCount \u003d userPlanNameInput.length();","lastModifiedDate":"2022-03-28"},{"lineNumber":167,"author":{"gitId":"Musfirahe0556596"},"content":"        if (characterCount \u003e PLAN_NAME_CHARACTER_LIMIT) {","lastModifiedDate":"2022-03-28"},{"lineNumber":168,"author":{"gitId":"Musfirahe0556596"},"content":"            logger.log(Level.WARNING, \"Plan name exceeds character limit.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":169,"author":{"gitId":"Musfirahe0556596"},"content":"            throw new InvalidPlanException(className, InvalidPlanException.PLAN_NAME_EXCEED_LIMIT);","lastModifiedDate":"2022-03-28"},{"lineNumber":170,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":171,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":172,"author":{"gitId":"Musfirahe0556596"},"content":"        if (userPlanNameInput.trim().equals(\"\")) {","lastModifiedDate":"2022-03-28"},{"lineNumber":173,"author":{"gitId":"Musfirahe0556596"},"content":"            logger.log(Level.WARNING, \"Plan name is just whitespaces.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"Musfirahe0556596"},"content":"            throw new InvalidPlanException(className, InvalidPlanException.PLAN_NAME_WHITESPACES_ONLY);","lastModifiedDate":"2022-03-28"},{"lineNumber":175,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":176,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":177,"author":{"gitId":"Musfirahe0556596"},"content":"        for (int i \u003d 0; i \u003c plansDisplayList.size(); i +\u003d 1) {","lastModifiedDate":"2022-03-19"},{"lineNumber":178,"author":{"gitId":"Musfirahe0556596"},"content":"            String getPlanName \u003d plansDisplayList.get(i).toLowerCase();","lastModifiedDate":"2022-03-24"},{"lineNumber":179,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":180,"author":{"gitId":"Musfirahe0556596"},"content":"            if (userPlanNameInputLowerCase.equals(getPlanName)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":181,"author":{"gitId":"Musfirahe0556596"},"content":"                logger.log(Level.WARNING, \"Plan name already exists.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":182,"author":{"gitId":"Musfirahe0556596"},"content":"                throw new InvalidPlanException(className, InvalidPlanException.DUPLICATE_PLAN_NAME_ERROR_MSG);","lastModifiedDate":"2022-03-28"},{"lineNumber":183,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":184,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":185,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":186,"author":{"gitId":"Musfirahe0556596"},"content":"        if (userPlanNameInputLowerCase.trim().equals(RESERVED_PLAN_NAME)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":187,"author":{"gitId":"Musfirahe0556596"},"content":"            logger.log(Level.WARNING, \"Plan name cannot be \u0027rest day\u0027.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":188,"author":{"gitId":"Musfirahe0556596"},"content":"            throw new InvalidPlanException(className, InvalidPlanException.RESERVED_PLAN_NAME);","lastModifiedDate":"2022-03-28"},{"lineNumber":189,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":190,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":191,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":192,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":193,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method checks whether the number of workouts to be added in a","lastModifiedDate":"2022-03-19"},{"lineNumber":194,"author":{"gitId":"Musfirahe0556596"},"content":"     * plan is within the minimum and maximum number of workouts a plan can hold.","lastModifiedDate":"2022-03-19"},{"lineNumber":195,"author":{"gitId":"Musfirahe0556596"},"content":"     * The range is 1 - 10 workouts.","lastModifiedDate":"2022-03-19"},{"lineNumber":196,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":197,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param numberOfWorkouts The number of workouts to be added in a plan.","lastModifiedDate":"2022-03-19"},{"lineNumber":198,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param className The class name used for exception throwing.","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws InvalidPlanException If the number of workouts to add in a plan is not","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"Musfirahe0556596"},"content":"     *                              within the min max range stated.","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":202,"author":{"gitId":"Musfirahe0556596"},"content":"    public void checkMinMaxNumberOfWorkouts(int numberOfWorkouts, String className) throws","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"Musfirahe0556596"},"content":"            InvalidPlanException {","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"Musfirahe0556596"},"content":"        boolean isAppropriateNumberOfWorkouts \u003d false;","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"Musfirahe0556596"},"content":"        if (numberOfWorkouts \u003e 0 \u0026\u0026 numberOfWorkouts \u003c\u003d MAX_NUMBER_OF_WORKOUTS_IN_A_PLAN) {","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"Musfirahe0556596"},"content":"            isAppropriateNumberOfWorkouts \u003d true;","lastModifiedDate":"2022-03-28"},{"lineNumber":207,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":208,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":209,"author":{"gitId":"Musfirahe0556596"},"content":"        if (!isAppropriateNumberOfWorkouts) {","lastModifiedDate":"2022-03-28"},{"lineNumber":210,"author":{"gitId":"Musfirahe0556596"},"content":"            logger.log(Level.WARNING, \"Number of workouts to add in a plan is invalid.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":211,"author":{"gitId":"Musfirahe0556596"},"content":"            throw new InvalidPlanException(className, InvalidPlanException.MIN_MAX_WORKOUTS_IN_A_PLAN);","lastModifiedDate":"2022-03-28"},{"lineNumber":212,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":213,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":214,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":215,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":216,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method checks whether the workout number supplied","lastModifiedDate":"2022-03-19"},{"lineNumber":217,"author":{"gitId":"Musfirahe0556596"},"content":"     * is within the range of the current workout list (in workout /list).","lastModifiedDate":"2022-03-24"},{"lineNumber":218,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":219,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param workoutNumber The workout number to check.","lastModifiedDate":"2022-03-19"},{"lineNumber":220,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param className The class name used for exception throwing.","lastModifiedDate":"2022-03-28"},{"lineNumber":221,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws InvalidPlanException If the workout number is not within the range of","lastModifiedDate":"2022-03-28"},{"lineNumber":222,"author":{"gitId":"Musfirahe0556596"},"content":"     *                              the workout list.","lastModifiedDate":"2022-03-28"},{"lineNumber":223,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":224,"author":{"gitId":"Musfirahe0556596"},"content":"    public void checkWorkoutNumberWithinRange(int workoutNumber, String className) throws","lastModifiedDate":"2022-03-28"},{"lineNumber":225,"author":{"gitId":"Musfirahe0556596"},"content":"            InvalidPlanException {","lastModifiedDate":"2022-03-28"},{"lineNumber":226,"author":{"gitId":"Musfirahe0556596"},"content":"        boolean isWithinWorkoutListRange \u003d false;","lastModifiedDate":"2022-03-28"},{"lineNumber":227,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":228,"author":{"gitId":"Musfirahe0556596"},"content":"        if (workoutNumber \u003e 0 \u0026\u0026 workoutNumber \u003c\u003d workoutList.getWorkoutsDisplayList().size()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":229,"author":{"gitId":"Musfirahe0556596"},"content":"            isWithinWorkoutListRange \u003d true;","lastModifiedDate":"2022-03-28"},{"lineNumber":230,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":231,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":232,"author":{"gitId":"Musfirahe0556596"},"content":"        if (!isWithinWorkoutListRange) {","lastModifiedDate":"2022-03-28"},{"lineNumber":233,"author":{"gitId":"Musfirahe0556596"},"content":"            logger.log(Level.WARNING, \"Workout number to add in the plan is invalid.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":234,"author":{"gitId":"Musfirahe0556596"},"content":"            throw new InvalidPlanException(className, InvalidPlanException.WORKOUT_NUMBER_OUT_OF_RANGE);","lastModifiedDate":"2022-03-28"},{"lineNumber":235,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":236,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":237,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":238,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":239,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method checks whether the new plan to be created has the same workout","lastModifiedDate":"2022-03-28"},{"lineNumber":240,"author":{"gitId":"Musfirahe0556596"},"content":"     * sequence/order as any other existing plans in the application\u0027s plan list.","lastModifiedDate":"2022-03-28"},{"lineNumber":241,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":242,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param workoutsToAddInNewPlanList The workouts to be added into the plan to be created.","lastModifiedDate":"2022-03-28"},{"lineNumber":243,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param className The class name used for exception throwing.","lastModifiedDate":"2022-03-28"},{"lineNumber":244,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws InvalidPlanException If the plan has the same sequence as existing plans.","lastModifiedDate":"2022-03-28"},{"lineNumber":245,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":246,"author":{"gitId":"Musfirahe0556596"},"content":"    public void checkPlanWithSameWorkoutSequence(ArrayList\u003cWorkout\u003e workoutsToAddInNewPlanList, String className)","lastModifiedDate":"2022-03-28"},{"lineNumber":247,"author":{"gitId":"Musfirahe0556596"},"content":"            throws InvalidPlanException {","lastModifiedDate":"2022-03-28"},{"lineNumber":248,"author":{"gitId":"Musfirahe0556596"},"content":"        boolean hasSameSequence \u003d false;","lastModifiedDate":"2022-03-28"},{"lineNumber":249,"author":{"gitId":"Musfirahe0556596"},"content":"        for (int i \u003d 0; i \u003c plansDisplayList.size(); i +\u003d 1) {","lastModifiedDate":"2022-03-28"},{"lineNumber":250,"author":{"gitId":"Musfirahe0556596"},"content":"            String getPlanKey \u003d plansDisplayList.get(i);","lastModifiedDate":"2022-03-28"},{"lineNumber":251,"author":{"gitId":"Musfirahe0556596"},"content":"            Plan getPlan \u003d plansHashMapList.get(getPlanKey);","lastModifiedDate":"2022-03-28"},{"lineNumber":252,"author":{"gitId":"Musfirahe0556596"},"content":"            ArrayList\u003cWorkout\u003e workoutsListToCheck \u003d getPlan.getWorkoutsInPlanList();","lastModifiedDate":"2022-03-28"},{"lineNumber":253,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":254,"author":{"gitId":"Musfirahe0556596"},"content":"            if (workoutsToAddInNewPlanList.size() \u003d\u003d workoutsListToCheck.size()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":255,"author":{"gitId":"Musfirahe0556596"},"content":"                assert (workoutsToAddInNewPlanList.size() \u003d\u003d workoutsListToCheck.size());","lastModifiedDate":"2022-03-28"},{"lineNumber":256,"author":{"gitId":"Musfirahe0556596"},"content":"                int matchCount \u003d countNumberOfWorkoutMatches(workoutsListToCheck, workoutsToAddInNewPlanList);","lastModifiedDate":"2022-03-28"},{"lineNumber":257,"author":{"gitId":"Musfirahe0556596"},"content":"                hasSameSequence \u003d determineSameSequence(matchCount, workoutsListToCheck);","lastModifiedDate":"2022-03-28"},{"lineNumber":258,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":259,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":260,"author":{"gitId":"Musfirahe0556596"},"content":"            if (hasSameSequence) {","lastModifiedDate":"2022-03-28"},{"lineNumber":261,"author":{"gitId":"Musfirahe0556596"},"content":"                System.out.println(\"Plan [\" + getPlanKey + \"]\"","lastModifiedDate":"2022-03-28"},{"lineNumber":262,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \" has same workout sequence as the plan to be created.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":263,"author":{"gitId":"Musfirahe0556596"},"content":"                logger.log(Level.WARNING, \"Invalid plan to add as an existing plan with same workout sequence exists.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":264,"author":{"gitId":"Musfirahe0556596"},"content":"                throw new InvalidPlanException(className, InvalidPlanException.PLAN_SAME_WORKOUT_SEQUENCE);","lastModifiedDate":"2022-03-28"},{"lineNumber":265,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":266,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":267,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":268,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":269,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":270,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method counts the number of exact matches between two workout ArrayList.","lastModifiedDate":"2022-03-28"},{"lineNumber":271,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":272,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param workoutsListToCheck The workout list of an existing plan in the application.","lastModifiedDate":"2022-03-28"},{"lineNumber":273,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param workoutsToAddInNewPlanList The workout list of the plan to be created.","lastModifiedDate":"2022-03-28"},{"lineNumber":274,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return The number of exact matches.","lastModifiedDate":"2022-03-28"},{"lineNumber":275,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":276,"author":{"gitId":"Musfirahe0556596"},"content":"    public int countNumberOfWorkoutMatches(ArrayList\u003cWorkout\u003e workoutsListToCheck,","lastModifiedDate":"2022-03-28"},{"lineNumber":277,"author":{"gitId":"Musfirahe0556596"},"content":"            ArrayList\u003cWorkout\u003e workoutsToAddInNewPlanList) {","lastModifiedDate":"2022-03-28"},{"lineNumber":278,"author":{"gitId":"Musfirahe0556596"},"content":"        int matchCount \u003d 0;","lastModifiedDate":"2022-03-28"},{"lineNumber":279,"author":{"gitId":"Musfirahe0556596"},"content":"        for (int k \u003d 0; k \u003c workoutsListToCheck.size(); k +\u003d 1) {","lastModifiedDate":"2022-03-28"},{"lineNumber":280,"author":{"gitId":"Musfirahe0556596"},"content":"            String compareWorkoutsStringNewPlan \u003d workoutsToAddInNewPlanList.get(k).toString();","lastModifiedDate":"2022-03-28"},{"lineNumber":281,"author":{"gitId":"Musfirahe0556596"},"content":"            if (compareWorkoutsStringNewPlan.equals(workoutsListToCheck.get(k).toString())) {","lastModifiedDate":"2022-03-28"},{"lineNumber":282,"author":{"gitId":"Musfirahe0556596"},"content":"                matchCount +\u003d 1;","lastModifiedDate":"2022-03-28"},{"lineNumber":283,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":284,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":285,"author":{"gitId":"Musfirahe0556596"},"content":"        return matchCount;","lastModifiedDate":"2022-03-28"},{"lineNumber":286,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":287,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":288,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":289,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method determines whether two workout lists have the same sequence","lastModifiedDate":"2022-03-28"},{"lineNumber":290,"author":{"gitId":"Musfirahe0556596"},"content":"     * by comparing the number of matches to the size of the workouts list of an existing plan.","lastModifiedDate":"2022-03-28"},{"lineNumber":291,"author":{"gitId":"Musfirahe0556596"},"content":"     * If the number of matches is more or equal to the size of that workout list,","lastModifiedDate":"2022-03-28"},{"lineNumber":292,"author":{"gitId":"Musfirahe0556596"},"content":"     * it means that the workout sequence is a duplicate.","lastModifiedDate":"2022-03-28"},{"lineNumber":293,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":294,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param matchCount The number of matches.","lastModifiedDate":"2022-03-28"},{"lineNumber":295,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param workoutsListToCheck The workout list of an existing plan.","lastModifiedDate":"2022-03-28"},{"lineNumber":296,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return True if the number of matches is more or equal to the size of the workouts list","lastModifiedDate":"2022-03-28"},{"lineNumber":297,"author":{"gitId":"Musfirahe0556596"},"content":"     *         Or else, false.","lastModifiedDate":"2022-03-28"},{"lineNumber":298,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":299,"author":{"gitId":"Musfirahe0556596"},"content":"    public boolean determineSameSequence(int matchCount, ArrayList\u003cWorkout\u003e workoutsListToCheck) {","lastModifiedDate":"2022-03-28"},{"lineNumber":300,"author":{"gitId":"Musfirahe0556596"},"content":"        return matchCount \u003e\u003d workoutsListToCheck.size();","lastModifiedDate":"2022-03-28"},{"lineNumber":301,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":302,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":303,"author":{"gitId":"a1021492980"},"content":"    public void insertPlanIntoList(String planKey, Plan plan) throws InvalidWorkoutException {","lastModifiedDate":"2022-03-20"},{"lineNumber":304,"author":{"gitId":"a1021492980"},"content":"        boolean isExistingWorkout \u003d true;","lastModifiedDate":"2022-03-20"},{"lineNumber":305,"author":{"gitId":"a1021492980"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-20"},{"lineNumber":306,"author":{"gitId":"a1021492980"},"content":"        var workoutData \u003d plan.getWorkoutsInPlanList();","lastModifiedDate":"2022-03-20"},{"lineNumber":307,"author":{"gitId":"a1021492980"},"content":"        for (Workout workoutInPlanFile : workoutData) {","lastModifiedDate":"2022-03-20"},{"lineNumber":308,"author":{"gitId":"a1021492980"},"content":"            if (!workoutList.getWorkoutsHashMapList().containsKey(workoutInPlanFile.toString())) {","lastModifiedDate":"2022-03-20"},{"lineNumber":309,"author":{"gitId":"a1021492980"},"content":"                isExistingWorkout \u003d false;","lastModifiedDate":"2022-03-20"},{"lineNumber":310,"author":{"gitId":"a1021492980"},"content":"                break;","lastModifiedDate":"2022-03-20"},{"lineNumber":311,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":312,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":313,"author":{"gitId":"a1021492980"},"content":"        if (!isExistingWorkout) {","lastModifiedDate":"2022-03-20"},{"lineNumber":314,"author":{"gitId":"a1021492980"},"content":"            throw new InvalidWorkoutException(className, InvalidWorkoutException.INVALID_WORKOUT_ERROR_MSG);","lastModifiedDate":"2022-03-20"},{"lineNumber":315,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":316,"author":{"gitId":"a1021492980"},"content":"        plansHashMapList.put(planKey, plan);","lastModifiedDate":"2022-03-20"},{"lineNumber":317,"author":{"gitId":"a1021492980"},"content":"        plansDisplayList.add(planKey);","lastModifiedDate":"2022-03-20"},{"lineNumber":318,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":319,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":320,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":321,"author":{"gitId":"Musfirahe0556596"},"content":"     * Prints all the plan names that are stored in the plans list.","lastModifiedDate":"2022-03-19"},{"lineNumber":322,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":323,"author":{"gitId":"Musfirahe0556596"},"content":"    public void listAllPlan() {","lastModifiedDate":"2022-03-19"},{"lineNumber":324,"author":{"gitId":"Musfirahe0556596"},"content":"        if (getPlansDisplayList().size() \u003c\u003d 0) {","lastModifiedDate":"2022-03-19"},{"lineNumber":325,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println(\"Oops! You have not created any plans yet!\"","lastModifiedDate":"2022-03-24"},{"lineNumber":326,"author":{"gitId":"Musfirahe0556596"},"content":"                    + \"\\nTo create a new plan, enter \u0027plan /new \u003cplan name\u003e /workouts \"","lastModifiedDate":"2022-03-24"},{"lineNumber":327,"author":{"gitId":"Musfirahe0556596"},"content":"                    + \"\\n\u003cworkout number(s) to add, separated by comma\u003e\u0027.\"","lastModifiedDate":"2022-03-19"},{"lineNumber":328,"author":{"gitId":"Musfirahe0556596"},"content":"                    + \"\\nAlternatively, enter \u0027help\u0027 for more information.\");","lastModifiedDate":"2022-03-19"},{"lineNumber":329,"author":{"gitId":"Musfirahe0556596"},"content":"            return;","lastModifiedDate":"2022-03-19"},{"lineNumber":330,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":331,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":332,"author":{"gitId":"Musfirahe0556596"},"content":"        assert (getPlansDisplayList().size() \u003e 0);","lastModifiedDate":"2022-03-19"},{"lineNumber":333,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.println(\"Here are all your plan(s).\");","lastModifiedDate":"2022-03-19"},{"lineNumber":334,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(\"To view each plan in detail, enter\\n\u0027plan /details \u003cplan number in list\u003e\u0027.\\n\");","lastModifiedDate":"2022-03-23"},{"lineNumber":335,"author":{"gitId":"Musfirahe0556596"},"content":"        for (int i \u003d 0; i \u003c getPlansDisplayList().size(); i +\u003d 1) {","lastModifiedDate":"2022-03-19"},{"lineNumber":336,"author":{"gitId":"Musfirahe0556596"},"content":"            System.out.println((i + 1) + \". \" + getPlansDisplayList().get(i));","lastModifiedDate":"2022-03-24"},{"lineNumber":337,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":338,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":339,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":340,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":341,"author":{"gitId":"TianaiYan"},"content":"     * Prints the plan details, workouts in the plan.","lastModifiedDate":"2022-03-26"},{"lineNumber":342,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":343,"author":{"gitId":"TianaiYan"},"content":"     * @param userArgument The argument entered by user, that is, the index of plan to view details.","lastModifiedDate":"2022-03-27"},{"lineNumber":344,"author":{"gitId":"TianaiYan"},"content":"     * @param ui An instance of the UI class.","lastModifiedDate":"2022-03-27"},{"lineNumber":345,"author":{"gitId":"TianaiYan"},"content":"     * @throws NumberFormatException If index of plan that user entered is not an integer.","lastModifiedDate":"2022-03-28"},{"lineNumber":346,"author":{"gitId":"TianaiYan"},"content":"     * @throws InvalidPlanException If index of plan is out of range.","lastModifiedDate":"2022-03-28"},{"lineNumber":347,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":348,"author":{"gitId":"TianaiYan"},"content":"    public void listPlanDetails(String userArgument, UI ui) throws NumberFormatException, InvalidPlanException {","lastModifiedDate":"2022-03-28"},{"lineNumber":349,"author":{"gitId":"TianaiYan"},"content":"        logger.entering(getClass().getName(), \"listPlanDetails\");","lastModifiedDate":"2022-03-29"},{"lineNumber":350,"author":{"gitId":"TianaiYan"},"content":"        int indexOfPlan \u003d Integer.parseInt(userArgument.trim());","lastModifiedDate":"2022-03-26"},{"lineNumber":351,"author":{"gitId":"TianaiYan"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-28"},{"lineNumber":352,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":353,"author":{"gitId":"TianaiYan"},"content":"        boolean isPlanIndexToViewDetailsValid \u003d checkPlanIndexIsWithinRange(indexOfPlan);","lastModifiedDate":"2022-03-29"},{"lineNumber":354,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":355,"author":{"gitId":"TianaiYan"},"content":"        if (!isPlanIndexToViewDetailsValid) {","lastModifiedDate":"2022-03-29"},{"lineNumber":356,"author":{"gitId":"TianaiYan"},"content":"            logger.log(Level.WARNING, \"Plan index to view details is out of range!\");","lastModifiedDate":"2022-03-29"},{"lineNumber":357,"author":{"gitId":"TianaiYan"},"content":"            throw new InvalidPlanException(className, InvalidPlanException.PLAN_INDEX_OUT_OF_RANGE);","lastModifiedDate":"2022-03-28"},{"lineNumber":358,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":359,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":360,"author":{"gitId":"TianaiYan"},"content":"        Plan planToViewDetails \u003d getPlanFromIndexNum(indexOfPlan);","lastModifiedDate":"2022-03-26"},{"lineNumber":361,"author":{"gitId":"TianaiYan"},"content":"        String planName \u003d getPlansDisplayList().get(indexOfPlan - 1);","lastModifiedDate":"2022-03-26"},{"lineNumber":362,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":363,"author":{"gitId":"TianaiYan"},"content":"        ArrayList\u003cWorkout\u003e workoutsInPlanList \u003d planToViewDetails.getWorkoutsInPlanList();","lastModifiedDate":"2022-03-26"},{"lineNumber":364,"author":{"gitId":"TianaiYan"},"content":"        int numberOfWorkoutsInPlan \u003d workoutsInPlanList.size();","lastModifiedDate":"2022-03-26"},{"lineNumber":365,"author":{"gitId":"TianaiYan"},"content":"        assert ((numberOfWorkoutsInPlan \u003c\u003d MAX_NUMBER_OF_WORKOUTS_IN_A_PLAN) \u0026\u0026 (numberOfWorkoutsInPlan \u003e 0)) :","lastModifiedDate":"2022-03-27"},{"lineNumber":366,"author":{"gitId":"TianaiYan"},"content":"                \"Total number of workouts is not valid.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":367,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":368,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\"Here are the \" + numberOfWorkoutsInPlan + \" workouts in [\"","lastModifiedDate":"2022-03-26"},{"lineNumber":369,"author":{"gitId":"TianaiYan"},"content":"                + ui.getColorText(TextColor.COLOR_YELLOW, planName) + \"].\");","lastModifiedDate":"2022-03-26"},{"lineNumber":370,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":371,"author":{"gitId":"TianaiYan"},"content":"        for (int i \u003d 0; i \u003c numberOfWorkoutsInPlan; i++) {","lastModifiedDate":"2022-03-26"},{"lineNumber":372,"author":{"gitId":"TianaiYan"},"content":"            System.out.println((i + 1) + \". \" + workoutsInPlanList.get(i).toString());","lastModifiedDate":"2022-03-26"},{"lineNumber":373,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":374,"author":{"gitId":"TianaiYan"},"content":"        logger.exiting(getClass().getName(), \"listPlanDetails\");","lastModifiedDate":"2022-03-29"},{"lineNumber":375,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":376,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":377,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":378,"author":{"gitId":"TianaiYan"},"content":"     * Removes the intended plan in the plans list.","lastModifiedDate":"2022-03-23"},{"lineNumber":379,"author":{"gitId":"TianaiYan"},"content":"     * The plan to delete is determined by the user who will","lastModifiedDate":"2022-03-23"},{"lineNumber":380,"author":{"gitId":"TianaiYan"},"content":"     * indicate the index of plan to delete in the plan list.","lastModifiedDate":"2022-03-23"},{"lineNumber":381,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":382,"author":{"gitId":"TianaiYan"},"content":"     * @param userArgument The argument entered by user, that is, the index of plan to delete.","lastModifiedDate":"2022-03-23"},{"lineNumber":383,"author":{"gitId":"TianaiYan"},"content":"     * @return deletedPlan The plan object that is deleted from the plansDisplayList.","lastModifiedDate":"2022-03-23"},{"lineNumber":384,"author":{"gitId":"TianaiYan"},"content":"     * @throws NumberFormatException If index of plan that user entered is not an integer.","lastModifiedDate":"2022-03-23"},{"lineNumber":385,"author":{"gitId":"TianaiYan"},"content":"     * @throws InvalidPlanException If index of plan to delete is out of range.","lastModifiedDate":"2022-03-23"},{"lineNumber":386,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":387,"author":{"gitId":"TianaiYan"},"content":"    public Plan deletePlan(String userArgument) throws NumberFormatException, InvalidPlanException {","lastModifiedDate":"2022-03-23"},{"lineNumber":388,"author":{"gitId":"TianaiYan"},"content":"        logger.entering(getClass().getName(), \"deletePlan\");","lastModifiedDate":"2022-03-29"},{"lineNumber":389,"author":{"gitId":"TianaiYan"},"content":"        int indexToDelete \u003d Integer.parseInt(userArgument.trim());","lastModifiedDate":"2022-03-23"},{"lineNumber":390,"author":{"gitId":"TianaiYan"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-23"},{"lineNumber":391,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":392,"author":{"gitId":"TianaiYan"},"content":"        boolean isPlanIndexToDeleteValid \u003d checkPlanIndexIsWithinRange(indexToDelete);","lastModifiedDate":"2022-03-27"},{"lineNumber":393,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":394,"author":{"gitId":"TianaiYan"},"content":"        if (!isPlanIndexToDeleteValid) {","lastModifiedDate":"2022-03-27"},{"lineNumber":395,"author":{"gitId":"TianaiYan"},"content":"            logger.log(Level.WARNING, \"Plan index to delete is out of range!\");","lastModifiedDate":"2022-03-29"},{"lineNumber":396,"author":{"gitId":"TianaiYan"},"content":"            throw new InvalidPlanException(className, InvalidPlanException.PLAN_INDEX_OUT_OF_RANGE);","lastModifiedDate":"2022-03-23"},{"lineNumber":397,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":398,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":399,"author":{"gitId":"TianaiYan"},"content":"        assert (indexToDelete \u003e 0) \u0026\u0026 (indexToDelete \u003c\u003d plansDisplayList.size());","lastModifiedDate":"2022-03-23"},{"lineNumber":400,"author":{"gitId":"TianaiYan"},"content":"        Plan deletedPlan \u003d getPlanFromIndexNum(indexToDelete);","lastModifiedDate":"2022-03-23"},{"lineNumber":401,"author":{"gitId":"TianaiYan"},"content":"        String deletedPlanKey \u003d deletedPlan.toString();","lastModifiedDate":"2022-03-23"},{"lineNumber":402,"author":{"gitId":"TianaiYan"},"content":"        plansDisplayList.remove(indexToDelete - 1);","lastModifiedDate":"2022-03-23"},{"lineNumber":403,"author":{"gitId":"TianaiYan"},"content":"        getPlansHashMapList().remove(deletedPlanKey);","lastModifiedDate":"2022-03-23"},{"lineNumber":404,"author":{"gitId":"TianaiYan"},"content":"        logger.exiting(getClass().getName(), \"deletePlan\");","lastModifiedDate":"2022-03-29"},{"lineNumber":405,"author":{"gitId":"TianaiYan"},"content":"        return deletedPlan;","lastModifiedDate":"2022-03-23"},{"lineNumber":406,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":407,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":408,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":409,"author":{"gitId":"TianaiYan"},"content":"     * Checks whether the plan index is within the range of the current plan list (in plan /list).","lastModifiedDate":"2022-03-29"},{"lineNumber":410,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":411,"author":{"gitId":"TianaiYan"},"content":"     * @param planIndex The plan index to check.","lastModifiedDate":"2022-03-29"},{"lineNumber":412,"author":{"gitId":"TianaiYan"},"content":"     * @return True if plan index is within the range of the plan list, else false if out of range.","lastModifiedDate":"2022-03-29"},{"lineNumber":413,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":414,"author":{"gitId":"TianaiYan"},"content":"    public boolean checkPlanIndexIsWithinRange(int planIndex) {","lastModifiedDate":"2022-03-31"},{"lineNumber":415,"author":{"gitId":"TianaiYan"},"content":"        return planIndex \u003e 0 \u0026\u0026 planIndex \u003c\u003d plansDisplayList.size();","lastModifiedDate":"2022-03-27"},{"lineNumber":416,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":417,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":418,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":419,"author":{"gitId":"TianaiYan"},"content":"     * Checks whether the workout is in the plan.","lastModifiedDate":"2022-03-27"},{"lineNumber":420,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":421,"author":{"gitId":"TianaiYan"},"content":"     * @param workoutToCheck The workout to look for in the plan.","lastModifiedDate":"2022-03-27"},{"lineNumber":422,"author":{"gitId":"TianaiYan"},"content":"     * @param plan An instance of the Plan class.","lastModifiedDate":"2022-03-27"},{"lineNumber":423,"author":{"gitId":"TianaiYan"},"content":"     * @return True if workout is found in the plan, else false if the workout is not in the plan.","lastModifiedDate":"2022-03-27"},{"lineNumber":424,"author":{"gitId":"TianaiYan"},"content":"     * @throws ArrayIndexOutOfBoundsException For operations which involves index checking.","lastModifiedDate":"2022-03-27"},{"lineNumber":425,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":426,"author":{"gitId":"TianaiYan"},"content":"    public boolean checkWorkoutInPlan(String workoutToCheck, Plan plan) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2022-03-31"},{"lineNumber":427,"author":{"gitId":"TianaiYan"},"content":"        ArrayList\u003cWorkout\u003e workoutsInPlanList \u003d plan.getWorkoutsInPlanList();","lastModifiedDate":"2022-03-27"},{"lineNumber":428,"author":{"gitId":"TianaiYan"},"content":"        String workoutInPlanDetails;","lastModifiedDate":"2022-03-27"},{"lineNumber":429,"author":{"gitId":"TianaiYan"},"content":"        for (Workout workoutsInPlan : workoutsInPlanList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":430,"author":{"gitId":"TianaiYan"},"content":"            workoutInPlanDetails \u003d workoutsInPlan.toString();","lastModifiedDate":"2022-03-27"},{"lineNumber":431,"author":{"gitId":"TianaiYan"},"content":"            if (workoutToCheck.equals(workoutInPlanDetails)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":432,"author":{"gitId":"TianaiYan"},"content":"                return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":433,"author":{"gitId":"TianaiYan"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":434,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":435,"author":{"gitId":"TianaiYan"},"content":"        return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":436,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":437,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":438,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":439,"author":{"gitId":"TianaiYan"},"content":"     * Gets the number of plans which includes the deleted workout.","lastModifiedDate":"2022-03-27"},{"lineNumber":440,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":441,"author":{"gitId":"TianaiYan"},"content":"     * @param workoutToCheck The workout to look for in the plan.","lastModifiedDate":"2022-03-27"},{"lineNumber":442,"author":{"gitId":"TianaiYan"},"content":"     * @return An Arraylist of integer which includes the number of the","lastModifiedDate":"2022-03-27"},{"lineNumber":443,"author":{"gitId":"TianaiYan"},"content":"     *         plan that includes the deleted workout.","lastModifiedDate":"2022-03-27"},{"lineNumber":444,"author":{"gitId":"TianaiYan"},"content":"     * @throws ArrayIndexOutOfBoundsException For operations which involves index checking.","lastModifiedDate":"2022-03-27"},{"lineNumber":445,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":446,"author":{"gitId":"TianaiYan"},"content":"    public ArrayList\u003cInteger\u003e findPlanContainsTargetWorkout(String workoutToCheck) throws","lastModifiedDate":"2022-03-31"},{"lineNumber":447,"author":{"gitId":"TianaiYan"},"content":"             ArrayIndexOutOfBoundsException {","lastModifiedDate":"2022-03-27"},{"lineNumber":448,"author":{"gitId":"TianaiYan"},"content":"        Plan planObject;","lastModifiedDate":"2022-03-27"},{"lineNumber":449,"author":{"gitId":"TianaiYan"},"content":"        boolean isWorkoutInPlan \u003d false;","lastModifiedDate":"2022-03-27"},{"lineNumber":450,"author":{"gitId":"TianaiYan"},"content":"        ArrayList\u003cInteger\u003e planIndexWithTargetWorkout \u003d new ArrayList\u003cInteger\u003e();","lastModifiedDate":"2022-03-31"},{"lineNumber":451,"author":{"gitId":"TianaiYan"},"content":"        for (int i \u003d 1; i \u003c\u003d getPlansDisplayList().size(); i++) {","lastModifiedDate":"2022-03-27"},{"lineNumber":452,"author":{"gitId":"TianaiYan"},"content":"            planObject \u003d getPlanFromIndexNum(i);","lastModifiedDate":"2022-03-27"},{"lineNumber":453,"author":{"gitId":"TianaiYan"},"content":"            isWorkoutInPlan \u003d checkWorkoutInPlan(workoutToCheck, planObject);","lastModifiedDate":"2022-03-27"},{"lineNumber":454,"author":{"gitId":"TianaiYan"},"content":"            if (isWorkoutInPlan) {","lastModifiedDate":"2022-03-27"},{"lineNumber":455,"author":{"gitId":"TianaiYan"},"content":"                planIndexWithTargetWorkout.add(i);","lastModifiedDate":"2022-03-31"},{"lineNumber":456,"author":{"gitId":"TianaiYan"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":457,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":458,"author":{"gitId":"TianaiYan"},"content":"        return planIndexWithTargetWorkout;","lastModifiedDate":"2022-03-31"},{"lineNumber":459,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":460,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":461,"author":{"gitId":"TianaiYan"},"content":"    public void updatePlanContainsUpdatedWorkout(String workoutToCheck, Workout updatedWorkout) throws","lastModifiedDate":"2022-03-29"},{"lineNumber":462,"author":{"gitId":"TianaiYan"},"content":"            InvalidPlanException {","lastModifiedDate":"2022-03-29"},{"lineNumber":463,"author":{"gitId":"TianaiYan"},"content":"        ArrayList\u003cInteger\u003e planWithUpdatedWorkout \u003d findPlanContainsTargetWorkout(workoutToCheck);","lastModifiedDate":"2022-03-29"},{"lineNumber":464,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":465,"author":{"gitId":"TianaiYan"},"content":"        if (planWithUpdatedWorkout.size() \u003c\u003d 0) {","lastModifiedDate":"2022-03-29"},{"lineNumber":466,"author":{"gitId":"TianaiYan"},"content":"            return;","lastModifiedDate":"2022-03-29"},{"lineNumber":467,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":468,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":469,"author":{"gitId":"TianaiYan"},"content":"        if (planWithUpdatedWorkout.size() \u003e 0) {","lastModifiedDate":"2022-03-29"},{"lineNumber":470,"author":{"gitId":"TianaiYan"},"content":"            System.out.println(workoutToCheck + \" is found in:\\n\");","lastModifiedDate":"2022-03-29"},{"lineNumber":471,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":472,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":473,"author":{"gitId":"TianaiYan"},"content":"        for (int planNumber : planWithUpdatedWorkout) {","lastModifiedDate":"2022-03-29"},{"lineNumber":474,"author":{"gitId":"TianaiYan"},"content":"            assert (checkPlanIndexIsWithinRange(planNumber)) : \"Plan number is out of range.\";","lastModifiedDate":"2022-03-29"},{"lineNumber":475,"author":{"gitId":"TianaiYan"},"content":"            System.out.println(\"\\t\" + getPlansDisplayList().get(planNumber - 1));","lastModifiedDate":"2022-03-29"},{"lineNumber":476,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":477,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":478,"author":{"gitId":"TianaiYan"},"content":"        int totalNumberOfPlanToUpdate \u003d planWithUpdatedWorkout.size();","lastModifiedDate":"2022-03-29"},{"lineNumber":479,"author":{"gitId":"TianaiYan"},"content":"        for (int i \u003d 0; i \u003c totalNumberOfPlanToUpdate; i++) {","lastModifiedDate":"2022-03-29"},{"lineNumber":480,"author":{"gitId":"TianaiYan"},"content":"            if (i \u003d\u003d 0) {","lastModifiedDate":"2022-03-29"},{"lineNumber":481,"author":{"gitId":"TianaiYan"},"content":"                System.out.println(\"\\nThe following plan has been updated:\\n\");","lastModifiedDate":"2022-03-29"},{"lineNumber":482,"author":{"gitId":"TianaiYan"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":483,"author":{"gitId":"TianaiYan"},"content":"            System.out.println((i + 1) + \". \" + getPlansDisplayList().get(planWithUpdatedWorkout.get(i) - 1));","lastModifiedDate":"2022-03-29"},{"lineNumber":484,"author":{"gitId":"TianaiYan"},"content":"            updatePlanDetails((planWithUpdatedWorkout.get(i)), workoutToCheck, updatedWorkout);","lastModifiedDate":"2022-03-29"},{"lineNumber":485,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":486,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":487,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":488,"author":{"gitId":"TianaiYan"},"content":"    public void updatePlanDetails(int planIndexToUpdate, String workoutToCheck, Workout updatedWorkout) throws","lastModifiedDate":"2022-03-29"},{"lineNumber":489,"author":{"gitId":"TianaiYan"},"content":"            NumberFormatException, InvalidPlanException {","lastModifiedDate":"2022-03-29"},{"lineNumber":490,"author":{"gitId":"TianaiYan"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-29"},{"lineNumber":491,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":492,"author":{"gitId":"TianaiYan"},"content":"        boolean isPlanIndexToUpdateValid \u003d checkPlanIndexIsWithinRange(planIndexToUpdate);","lastModifiedDate":"2022-03-29"},{"lineNumber":493,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":494,"author":{"gitId":"TianaiYan"},"content":"        if (!isPlanIndexToUpdateValid) {","lastModifiedDate":"2022-03-29"},{"lineNumber":495,"author":{"gitId":"TianaiYan"},"content":"            throw new InvalidPlanException(className, InvalidPlanException.PLAN_INDEX_OUT_OF_RANGE);","lastModifiedDate":"2022-03-29"},{"lineNumber":496,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":497,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":498,"author":{"gitId":"TianaiYan"},"content":"        Plan planToUpdate \u003d getPlanFromIndexNum(planIndexToUpdate);","lastModifiedDate":"2022-03-29"},{"lineNumber":499,"author":{"gitId":"TianaiYan"},"content":"        ArrayList\u003cWorkout\u003e workoutsInPlanList \u003d planToUpdate.getWorkoutsInPlanList();","lastModifiedDate":"2022-03-29"},{"lineNumber":500,"author":{"gitId":"TianaiYan"},"content":"        int totalNumberOfWorkoutsInPlan \u003d workoutsInPlanList.size();","lastModifiedDate":"2022-03-29"},{"lineNumber":501,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":502,"author":{"gitId":"TianaiYan"},"content":"        for (int i \u003d 0; i \u003c totalNumberOfWorkoutsInPlan; i++) {","lastModifiedDate":"2022-03-29"},{"lineNumber":503,"author":{"gitId":"TianaiYan"},"content":"            if (workoutToCheck.equals(workoutsInPlanList.get(i).toString())) {","lastModifiedDate":"2022-03-29"},{"lineNumber":504,"author":{"gitId":"TianaiYan"},"content":"                workoutsInPlanList.set(i, updatedWorkout);","lastModifiedDate":"2022-03-29"},{"lineNumber":505,"author":{"gitId":"TianaiYan"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":506,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":507,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":508,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"Musfirahe0556596":292,"alanlowzies":25,"TianaiYan":172,"a1021492980":19}},{"path":"src/main/java/data/schedule/Day.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package data.schedule;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"import commands.InvalidCommandException;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"import data.plans.Plan;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"import static data.schedule.InvalidScheduleException.INVALID_DAY;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":" * This class represents a Day, which is a day scheduled with a specified plan.","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"public class Day {","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"    private int dayNumber;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"    private Plan planForThisDay;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"    public Day(int dayNumber, Plan planForThisDay) {","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"        this.dayNumber \u003d dayNumber;","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"        this.planForThisDay \u003d planForThisDay;","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"    public void setPlanForThisDay() {","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"        this.planForThisDay \u003d planForThisDay;","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"    public void setDayNumber() {","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"        this.dayNumber \u003d dayNumber;","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"    public Plan getPlanForThisDay() {","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"        return planForThisDay;","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"    public int getDayNumber() {","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"emilysim00"},"content":"        return dayNumber;","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"emilysim00"},"content":"    public void setNewPlanForThisDay(Day day, Plan newPlan) {","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"emilysim00"},"content":"        day.planForThisDay \u003d newPlan;","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"emilysim00"},"content":"    public String toString() {","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"emilysim00"},"content":"        int dayNumber \u003d getDayNumber();","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"emilysim00"},"content":"        String day \u003d \"\";","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"emilysim00"},"content":"        try {","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"emilysim00"},"content":"            switch (dayNumber) {","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"emilysim00"},"content":"            case 1:","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"emilysim00"},"content":"                day \u003d \"Monday\";","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"emilysim00"},"content":"            case 2:","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"emilysim00"},"content":"                day \u003d \"Tuesday\";","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"emilysim00"},"content":"            case 3:","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"emilysim00"},"content":"                day \u003d \"Wednesday\";","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"emilysim00"},"content":"            case 4:","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"emilysim00"},"content":"                day \u003d \"Thursday\";","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"emilysim00"},"content":"            case 5:","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"emilysim00"},"content":"                day \u003d \"Friday\";","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"emilysim00"},"content":"            case 6:","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"emilysim00"},"content":"                day \u003d \"Saturday\";","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"emilysim00"},"content":"            case 7:","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"emilysim00"},"content":"                day \u003d \"Sunday\";","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"emilysim00"},"content":"            default:","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"emilysim00"},"content":"                String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"emilysim00"},"content":"                throw new InvalidScheduleException(className, INVALID_DAY);","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"emilysim00"},"content":"            } ","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"emilysim00"},"content":"        } catch (InvalidScheduleException e) {","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"emilysim00"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"emilysim00"},"content":"        String displayString \u003d day + \" -- \" + getPlanForThisDay().getPlanName();","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"emilysim00"},"content":"        return displayString;","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"emilysim00":70,"alanlowzies":8}},{"path":"src/main/java/data/schedule/DayList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package data.schedule;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"import data.plans.Plan;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"import werkit.Parser;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":"import static data.schedule.InvalidScheduleException.INVALID_DAY;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"public class DayList {","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"    private static final int FIXED_LENGTH \u003d 30;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"    private static final int NUMBER_OF_SCHEDULE_DAYS \u003d 7;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"    private PlanList planList;","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"    private String[] scheduleList \u003d new String[NUMBER_OF_SCHEDULE_DAYS]; ","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"    private String[] schedulePrintList \u003d new String[NUMBER_OF_SCHEDULE_DAYS];","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"    private Day[] dayList \u003d new Day[NUMBER_OF_SCHEDULE_DAYS]; //store all created day object","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"    private static Logger logger \u003d Logger.getLogger(Parser.class.getName());","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"    public DayList(PlanList planList) {","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"        this.planList \u003d planList;","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"    public String[] getScheduleList() {","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"        return scheduleList;","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"    public String[] getSchedulePrintList() {","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"        return schedulePrintList;","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"    public Day[] getDayList() {","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"        return this.dayList;","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"emilysim00"},"content":"     * Add/Update a plan to a particular day of the week. User specify the plan (plan number) that they","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"emilysim00"},"content":"     * want to add to a particular day (day number). A day object will be created if the day object does not exist,","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"emilysim00"},"content":"     * otherwise the day object will be updated to reflect the latest changes.","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"emilysim00"},"content":"     * @param userArgument Day number and plan number to be added into the schedule.","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"emilysim00"},"content":"     * @return newDay Day object created with the day number and plan name specified by user.","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"emilysim00"},"content":"     * @throws ArrayIndexOutOfBoundsException If userArgument contains insufficient arguments and parsing fails.","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"emilysim00"},"content":"     * @throws InvalidScheduleException If the schedule parameters specified in userArgument is invalid.","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"emilysim00"},"content":"    public Day updateDay(String userArgument) throws ArrayIndexOutOfBoundsException, InvalidScheduleException {","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"emilysim00"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"emilysim00"},"content":"        String[] userArgumentArray \u003d userArgument.split(\" \", -1);","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"emilysim00"},"content":"        if (userArgumentArray.length \u003e 2) {","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"emilysim00"},"content":"            logger.log(Level.WARNING, \"User entered more parameters than expected.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"emilysim00"},"content":"            throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"emilysim00"},"content":"        int dayNumber \u003d Integer.parseInt(userArgumentArray[0]);","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"emilysim00"},"content":"        int planNumber \u003d Integer.parseInt(userArgumentArray[1]);","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"emilysim00"},"content":"        if (!isDayValid(dayNumber)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"emilysim00"},"content":"            logger.log(Level.WARNING, \"User entered an invalid day number.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"emilysim00"},"content":"            throw new InvalidScheduleException(className, InvalidScheduleException.DAY_NUMBER_OUT_OF_RANGE);","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"emilysim00"},"content":"        if (!isPlanValid(planNumber)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"emilysim00"},"content":"            logger.log(Level.WARNING, \"User entered an invalid plan number.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"emilysim00"},"content":"            throw new InvalidScheduleException(className, InvalidScheduleException.INVALID_PLAN);","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"emilysim00"},"content":"        assert (isPlanValid(planNumber) \u0026\u0026 isDayValid(dayNumber));","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"emilysim00"},"content":"        String planToAddKey \u003d planList.getPlansDisplayList().get(planNumber - 1); //plan name","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"emilysim00"},"content":"        Plan planToAdd \u003d planList.getPlanFromKey(planToAddKey); //plan hash value","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"emilysim00"},"content":"        Day newDay;","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"emilysim00"},"content":"        if (scheduleList[dayNumber - 1] \u003d\u003d null) {","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"emilysim00"},"content":"            newDay \u003d new Day(dayNumber, planToAdd);","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"emilysim00"},"content":"            dayList[dayNumber - 1] \u003d newDay;","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"emilysim00"},"content":"        } else {","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"emilysim00"},"content":"            newDay \u003d dayList[dayNumber - 1];","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"emilysim00"},"content":"            newDay.setNewPlanForThisDay(newDay, planToAdd);","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"emilysim00"},"content":"        scheduleList[dayNumber - 1] \u003d planToAdd.getPlanName();","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"emilysim00"},"content":"        return newDay;","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":81,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"emilysim00"},"content":"     * Checks if the provided day number is valid. A day number is valid if it falls","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"emilysim00"},"content":"     * between 1 and 7. Day number 1 refers to Monday, Day number 2 refers to Tuesday","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"emilysim00"},"content":"     * and so on till Day number 7 referring to Sunday, the last day of the week.","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"emilysim00"},"content":"     * @param dayNumber The day number entered by user to check for validity.","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"emilysim00"},"content":"     * @return True if the day number falls between 1 to 7.","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"emilysim00"},"content":"     *         Otherwise, returns false.","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"emilysim00"},"content":"    public Boolean isDayValid(int dayNumber) {","lastModifiedDate":"2022-03-21"},{"lineNumber":91,"author":{"gitId":"emilysim00"},"content":"        if (dayNumber \u003c 1 || dayNumber \u003e NUMBER_OF_SCHEDULE_DAYS) {","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"emilysim00"},"content":"            return false;","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"emilysim00"},"content":"        return true;","lastModifiedDate":"2022-03-21"},{"lineNumber":95,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":96,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"emilysim00"},"content":"     * Checks if the provided plan number is valid. A plan number is valid if it falls between","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"emilysim00"},"content":"     * the index range of the plan list.","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"emilysim00"},"content":"     * @param planNumber The plan number entered by user to check for validity.","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"emilysim00"},"content":"     * @return True if the plan number specified exist in the plans list.","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"emilysim00"},"content":"     *      *         Otherwise, returns false.","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"emilysim00"},"content":"    public Boolean isPlanValid(int planNumber) {","lastModifiedDate":"2022-03-21"},{"lineNumber":106,"author":{"gitId":"emilysim00"},"content":"        if (planNumber \u003c 1 || planNumber \u003e planList.getPlansDisplayList().size()) {","lastModifiedDate":"2022-03-21"},{"lineNumber":107,"author":{"gitId":"emilysim00"},"content":"            return false;","lastModifiedDate":"2022-03-21"},{"lineNumber":108,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":109,"author":{"gitId":"emilysim00"},"content":"        return true;","lastModifiedDate":"2022-03-21"},{"lineNumber":110,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":111,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"emilysim00"},"content":"     * Print out all the plans scheduled for the week. One week consists of 7 days.","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"emilysim00"},"content":"     * If no plan is scheduled for any of the day, it is considered as rest day.","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"emilysim00"},"content":"    public void printSchedule() {","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"emilysim00"},"content":"        for (int i \u003d 0; i \u003c NUMBER_OF_SCHEDULE_DAYS; i +\u003d 1) {","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"emilysim00"},"content":"            if (scheduleList[i] \u003d\u003d null) {","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"emilysim00"},"content":"                schedulePrintList[i] \u003d \"rest day\";","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"emilysim00"},"content":"            } else {","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"emilysim00"},"content":"                schedulePrintList[i] \u003d scheduleList[i];","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"emilysim00"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"emilysim00"},"content":"            schedulePrintList[i] \u003d padWithSpaces(schedulePrintList[i]);","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"emilysim00"},"content":"        String header \u003d String.format(\"%8s %7s %20s\", \"Day\", \"|\", \"Plan Name\");","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"emilysim00"},"content":"        String info \u003d \"\";","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"emilysim00"},"content":"        for (int i \u003d 1; i \u003c\u003d NUMBER_OF_SCHEDULE_DAYS; i++) {","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"emilysim00"},"content":"            info +\u003d String.format(\"%12s %3s %35s\", covertDayNumberToDay(i), \"|\", schedulePrintList[i - 1]) + \"\\n\";","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"emilysim00"},"content":"        System.out.println(\"\\n                         WORKOUT SCHEDULE\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"emilysim00"},"content":"                + \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"emilysim00"},"content":"                + header + \"\\n\" +  \"----------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"emilysim00"},"content":"                + info","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"emilysim00"},"content":"        );","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":140,"author":{"gitId":"emilysim00"},"content":"     * Pad the plan name with empty spaces at the front of the plan name as well as the back of the plan name.","lastModifiedDate":"2022-03-24"},{"lineNumber":141,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":142,"author":{"gitId":"emilysim00"},"content":"     * @param planForDay Plan name scheduled for a particular day.","lastModifiedDate":"2022-03-24"},{"lineNumber":143,"author":{"gitId":"emilysim00"},"content":"     * @return planForDayWith Plan name scheduled for a particular day with added empty spaces at the front and back.","lastModifiedDate":"2022-03-24"},{"lineNumber":144,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":145,"author":{"gitId":"emilysim00"},"content":"    public String padWithSpaces(String planForDay) {","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"emilysim00"},"content":"        String prePadded \u003d \"\";","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"emilysim00"},"content":"        String postPadded \u003d \"\";","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"emilysim00"},"content":"        int numberOfSpacesToBePadFront \u003d (FIXED_LENGTH - planForDay.length()) / 2;","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"emilysim00"},"content":"        int numberOfSpacesToBePadBack \u003d FIXED_LENGTH - prePadded.length() - planForDay.length();","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"emilysim00"},"content":"        for (int i \u003d 0; i \u003c numberOfSpacesToBePadFront; i++) {","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"emilysim00"},"content":"            prePadded +\u003d \" \";","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"emilysim00"},"content":"        for (int i \u003d 0; i \u003c numberOfSpacesToBePadBack; i++) {","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"emilysim00"},"content":"            postPadded +\u003d \" \";","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"emilysim00"},"content":"        String planForDayWithPadding \u003d prePadded + planForDay + postPadded;","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"emilysim00"},"content":"        return planForDayWithPadding;","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":162,"author":{"gitId":"emilysim00"},"content":"     * Clear the plan for a specific day. The plan scheduled for the day will be cleared/reset.","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"emilysim00"},"content":"     * When a plan is clear/reset, the day will set to be a rest day.","lastModifiedDate":"2022-03-24"},{"lineNumber":164,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":165,"author":{"gitId":"emilysim00"},"content":"     * @param userArgument Day number to be reset/cleared.","lastModifiedDate":"2022-03-24"},{"lineNumber":166,"author":{"gitId":"emilysim00"},"content":"     * @throws InvalidScheduleException If the day number specified in userArgument is invalid.","lastModifiedDate":"2022-03-24"},{"lineNumber":167,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":168,"author":{"gitId":"emilysim00"},"content":"    public void clearDayPlan(String userArgument) throws InvalidScheduleException {","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"emilysim00"},"content":"        int dayNumber \u003d Integer.parseInt(userArgument);","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"emilysim00"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"emilysim00"},"content":"        if (!isDayValid(dayNumber)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"emilysim00"},"content":"            logger.log(Level.WARNING, \"User entered an invalid day number.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"emilysim00"},"content":"            throw new InvalidScheduleException(className, InvalidScheduleException.DAY_NUMBER_OUT_OF_RANGE);","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"emilysim00"},"content":"        scheduleList[dayNumber - 1] \u003d null;","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"emilysim00"},"content":"        dayList[dayNumber - 1] \u003d null;","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"emilysim00"},"content":"        System.out.println(\"Plan had been cleared for \" + covertDayNumberToDay(dayNumber) + \".\");","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":179,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":181,"author":{"gitId":"emilysim00"},"content":"     * Clear all the plans schdeule for the week. Reset the schedule list to default.","lastModifiedDate":"2022-03-24"},{"lineNumber":182,"author":{"gitId":"emilysim00"},"content":"     * All plans for the week will be set as rest day.","lastModifiedDate":"2022-03-24"},{"lineNumber":183,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":184,"author":{"gitId":"emilysim00"},"content":"    public void clearAllSchedule() {","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"emilysim00"},"content":"        for (int i \u003d 0; i \u003c NUMBER_OF_SCHEDULE_DAYS; i +\u003d 1) {","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"emilysim00"},"content":"            scheduleList[i] \u003d null;","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"emilysim00"},"content":"            dayList[i] \u003d null;","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"emilysim00"},"content":"            assert (scheduleList[i] \u003d\u003d null);","lastModifiedDate":"2022-03-23"},{"lineNumber":189,"author":{"gitId":"emilysim00"},"content":"            assert (dayList[i] \u003d\u003d null);","lastModifiedDate":"2022-03-23"},{"lineNumber":190,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":194,"author":{"gitId":"emilysim00"},"content":"     * Covert the day number to its english meaning. For example,","lastModifiedDate":"2022-03-24"},{"lineNumber":195,"author":{"gitId":"emilysim00"},"content":"     * day number 1 will be converted to Monday,","lastModifiedDate":"2022-03-24"},{"lineNumber":196,"author":{"gitId":"emilysim00"},"content":"     * day number 2 will be converted to Tuesday,","lastModifiedDate":"2022-03-24"},{"lineNumber":197,"author":{"gitId":"emilysim00"},"content":"     * and so on till day number 7 which will be converted to Sunday.","lastModifiedDate":"2022-03-24"},{"lineNumber":198,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":199,"author":{"gitId":"emilysim00"},"content":"     * @param dayNumber Day number to be converted to its String equivalent.","lastModifiedDate":"2022-03-24"},{"lineNumber":200,"author":{"gitId":"emilysim00"},"content":"     * @return day English meaning of the day number specified.","lastModifiedDate":"2022-03-24"},{"lineNumber":201,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":202,"author":{"gitId":"emilysim00"},"content":"    public String covertDayNumberToDay(int dayNumber) {","lastModifiedDate":"2022-03-22"},{"lineNumber":203,"author":{"gitId":"emilysim00"},"content":"        String day \u003d \"\";","lastModifiedDate":"2022-03-22"},{"lineNumber":204,"author":{"gitId":"emilysim00"},"content":"        assert (dayNumber \u003e 0 \u0026\u0026 dayNumber \u003c\u003d NUMBER_OF_SCHEDULE_DAYS);","lastModifiedDate":"2022-03-23"},{"lineNumber":205,"author":{"gitId":"emilysim00"},"content":"        try {","lastModifiedDate":"2022-03-22"},{"lineNumber":206,"author":{"gitId":"emilysim00"},"content":"            switch (dayNumber) {","lastModifiedDate":"2022-03-22"},{"lineNumber":207,"author":{"gitId":"emilysim00"},"content":"            case 1:","lastModifiedDate":"2022-03-22"},{"lineNumber":208,"author":{"gitId":"emilysim00"},"content":"                day \u003d \"Monday\";","lastModifiedDate":"2022-03-22"},{"lineNumber":209,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-22"},{"lineNumber":210,"author":{"gitId":"emilysim00"},"content":"            case 2:","lastModifiedDate":"2022-03-22"},{"lineNumber":211,"author":{"gitId":"emilysim00"},"content":"                day \u003d \"Tuesday\";","lastModifiedDate":"2022-03-22"},{"lineNumber":212,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-22"},{"lineNumber":213,"author":{"gitId":"emilysim00"},"content":"            case 3:","lastModifiedDate":"2022-03-22"},{"lineNumber":214,"author":{"gitId":"emilysim00"},"content":"                day \u003d \"Wednesday\";","lastModifiedDate":"2022-03-22"},{"lineNumber":215,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-22"},{"lineNumber":216,"author":{"gitId":"emilysim00"},"content":"            case 4:","lastModifiedDate":"2022-03-22"},{"lineNumber":217,"author":{"gitId":"emilysim00"},"content":"                day \u003d \"Thursday\";","lastModifiedDate":"2022-03-22"},{"lineNumber":218,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-22"},{"lineNumber":219,"author":{"gitId":"emilysim00"},"content":"            case 5:","lastModifiedDate":"2022-03-22"},{"lineNumber":220,"author":{"gitId":"emilysim00"},"content":"                day \u003d \"Friday\";","lastModifiedDate":"2022-03-22"},{"lineNumber":221,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-22"},{"lineNumber":222,"author":{"gitId":"emilysim00"},"content":"            case 6:","lastModifiedDate":"2022-03-22"},{"lineNumber":223,"author":{"gitId":"emilysim00"},"content":"                day \u003d \"Saturday\";","lastModifiedDate":"2022-03-22"},{"lineNumber":224,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-22"},{"lineNumber":225,"author":{"gitId":"emilysim00"},"content":"            case 7:","lastModifiedDate":"2022-03-22"},{"lineNumber":226,"author":{"gitId":"emilysim00"},"content":"                day \u003d \"Sunday\";","lastModifiedDate":"2022-03-22"},{"lineNumber":227,"author":{"gitId":"emilysim00"},"content":"                break;","lastModifiedDate":"2022-03-22"},{"lineNumber":228,"author":{"gitId":"emilysim00"},"content":"            default:","lastModifiedDate":"2022-03-22"},{"lineNumber":229,"author":{"gitId":"emilysim00"},"content":"                String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-22"},{"lineNumber":230,"author":{"gitId":"emilysim00"},"content":"                logger.log(Level.WARNING, \"User entered an invalid day.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":231,"author":{"gitId":"emilysim00"},"content":"                throw new InvalidScheduleException(className, INVALID_DAY);","lastModifiedDate":"2022-03-22"},{"lineNumber":232,"author":{"gitId":"emilysim00"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":233,"author":{"gitId":"emilysim00"},"content":"        } catch (InvalidScheduleException e) {","lastModifiedDate":"2022-03-22"},{"lineNumber":234,"author":{"gitId":"emilysim00"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-22"},{"lineNumber":235,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":236,"author":{"gitId":"emilysim00"},"content":"        return day;","lastModifiedDate":"2022-03-22"},{"lineNumber":237,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":238,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"emilysim00":225,"alanlowzies":13}},{"path":"src/main/java/data/schedule/InvalidScheduleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"package data.schedule;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"public class InvalidScheduleException extends Exception {","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"    // Pre-defined error messages","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"emilysim00"},"content":"    public static final String DAY_NUMBER_OUT_OF_RANGE \u003d \"Uh oh, the day number specified is invalid.\\n\"","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"            + \"Please make sure it is between 1-7.\";","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"    public static final String INVALID_PLAN \u003d \"Uh oh, the plan number entered is invalid.\\n\"","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"            + \"Please specify a valid plan number.\";","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"emilysim00"},"content":"    public static final String INVALID_DAY \u003d \"Uh oh, the day number entered is invalid.\\n\";","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"    public static final String INPUT_NOT_NUMBER_FORMATTABLE \u003d \"Uh oh, a number was expected in your input, \"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"emilysim00"},"content":"            + \"but a non-formattable number was received.\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"            + \"Please try again. Alternatively, type \u0027help\u0027 if you need\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"            + \"more information on the commands.\";","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"    public static final String INDEX_OUT_OF_BOUND \u003d \"Uh oh, it seems like too few arguments were entered.\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"emilysim00"},"content":"            + \"Please try again. Alternatively, type \u0027help\u0027 if you need\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"emilysim00"},"content":"            + \"more information on the commands.\";","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"    private String throwingClass;","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"     * Constructs an InvalidPlanException with the class name that this exception instance was","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"     * thrown from and the accompanying error message.","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"emilysim00"},"content":"     * @param throwingClass The class name that this exception instance was thrown from.","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"emilysim00"},"content":"     * @param errorMessage  The error message given by the throwing method.","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"emilysim00"},"content":"    public InvalidScheduleException(String throwingClass, String errorMessage) {","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"        super(errorMessage);","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"        this.throwingClass \u003d throwingClass;","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"emilysim00":33}},{"path":"src/main/java/data/workouts/InvalidWorkoutException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package data.workouts;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":" * Thrown to indicate that the Workout being created has some invalid parameters.","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"public class InvalidWorkoutException extends Exception {","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"    // Pre-defined error messages","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"    public static final String INVALID_REPS_VALUE_ERROR_MSG \u003d \"Uh oh, the number of reps specified is invalid.\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"emilysim00"},"content":"            + \"(Needs to be a value of at least 1.)\";","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"    public static final String DUPLICATE_WORKOUT_ERROR_MSG \u003d \"Uh oh, there already is an existing workout with \"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"            + \"an identical\\nexercise name and number of repetitions.\";","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"    public static final String INVALID_WORKOUT_ERROR_MSG \u003d \"The workout given does not exist.\";","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"TianaiYan"},"content":"    public static final String INDEX_VALUE_OUT_OF_RANGE \u003d \"Uh oh, the index specified is out of range.\\n\"","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"TianaiYan"},"content":"            + \"(Index specified needs to be within the number of workouts)\";","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"    private String throwingClass;","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"     * Constructs an InvalidWorkoutException with the class name that this exception instance was","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"     * thrown from and the accompanying error message.","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"     * @param throwingClass The class name that this exception instance was thrown from.","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"     * @param errorMessage  The error message given by the throwing method.","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"    public InvalidWorkoutException(String throwingClass, String errorMessage) {","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"        super(errorMessage);","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"        this.throwingClass \u003d throwingClass;","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"emilysim00":1,"alanlowzies":25,"TianaiYan":2,"a1021492980":1}},{"path":"src/main/java/data/workouts/Workout.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package data.workouts;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":" * This class represents a Workout, which is an exercise with a specified number of repetitions.","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"public class Workout {","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"    private String exerciseName;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"    private int repetitions;","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"    public Workout(String exerciseName, int repetitions) {","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"        this.exerciseName \u003d exerciseName;","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"        this.repetitions \u003d repetitions;","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"    public String getExerciseName() {","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"        return exerciseName;","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"    public int getRepetitions() {","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"        return repetitions;","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"TianaiYan"},"content":"    public void setRepetitions(int repetitions) {","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"TianaiYan"},"content":"        this.repetitions \u003d repetitions;","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"    public String toString() {","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"        String displayString \u003d getExerciseName() + \" (\" + getRepetitions() + \" reps)\";","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"        return displayString;","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"alanlowzies":27,"TianaiYan":4}},{"path":"src/main/java/data/workouts/WorkoutList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package data.workouts;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"import commands.WorkoutCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"import data.exercises.InvalidExerciseException;","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"TianaiYan"},"content":"import data.plans.InvalidPlanException;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"TianaiYan"},"content":"import data.plans.Plan;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"TianaiYan"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"TianaiYan"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":" * This class represents an instance of a list of workouts entered by the user.","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":" * It contains functionality to validate the user\u0027s inputs as well as allow the user to","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":" * create, modify, and delete workouts.","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"public class WorkoutList {","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"    public static final int MAX_DISPLAY \u003d 10;","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"    private ExerciseList exerciseList;","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"    private HashMap\u003cString, Workout\u003e workoutsHashMapList \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"    private ArrayList\u003cString\u003e workoutsDisplayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"    private static Logger logger \u003d Logger.getLogger(WorkoutList.class.getName());","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"     * Constructs an instance of the WorkoutList class.","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"     * @param exerciseList An instance of the ExerciseList class.","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"    public WorkoutList(ExerciseList exerciseList) {","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"        this.exerciseList \u003d exerciseList;","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"        LogHandler.linkToFileLogger(logger);","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"     * Gets the ArrayList of keys of Workout objects.","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"     * @return An ArrayList of keys of Workout objects.","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"    public ArrayList\u003cString\u003e getWorkoutsDisplayList() {","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"        return this.workoutsDisplayList;","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"     * Gets the HashMap of Workout objects.","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"     * @return A HashMap of Workout objects.","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"    public HashMap\u003cString, Workout\u003e getWorkoutsHashMapList() {","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"        return this.workoutsHashMapList;","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"     * Gets the Workout object based on its key as stored in the workoutsHashMapList.","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"     * @param workoutKey The key that maps to the desired Workout object.","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"     * @return The Workout object that is mapped to workoutKey.","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"    public Workout getWorkoutFromKey(String workoutKey) {","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"        return getWorkoutsHashMapList().get(workoutKey);","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"     * Retrieves the Workout object from the HashMap workoutsHashMapList based on the index number","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"     * of the object stored in workoutsDisplayList. This index number is the number shown in","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"     * \u0027workout /list\u0027.","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"     * @param indexNum The index number of the workout as shown in \u0027workout /list\u0027.","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"     * @return The Workout object that corresponds to the index number.","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"alanlowzies"},"content":"    public Workout getWorkoutFromIndexNum(int indexNum) {","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"alanlowzies"},"content":"        int elementNum \u003d indexNum - 1;","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"alanlowzies"},"content":"        assert (elementNum \u003e\u003d 0);","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"alanlowzies"},"content":"        String keyValue \u003d getWorkoutsDisplayList().get(elementNum);","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"        Workout workoutObject \u003d workoutsHashMapList.get(keyValue);","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"        return workoutObject;","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"     * Updates an existing Workout object in workoutsHashMapList\u0027s with a new key. This should be called when","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"     * a workout\u0027s repetition count has been updated. Once the Workout object has been reassigned to the new","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"     * key, the former key will be removed. The ArrayList workoutsDisplayList will also be updated with the","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"alanlowzies"},"content":"     * new key.","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"alanlowzies"},"content":"     * @param existingKey    The existing key that maps to the updated Workout object.","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"alanlowzies"},"content":"     * @param updatedWorkout The Workout object that has been updated.","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"alanlowzies"},"content":"    public void updateWorkoutsHashMapList(String existingKey, Workout updatedWorkout) {","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"alanlowzies"},"content":"        // Update key-value in workoutHashMapList","lastModifiedDate":"2022-03-17"},{"lineNumber":96,"author":{"gitId":"alanlowzies"},"content":"        String newKey \u003d updatedWorkout.toString();","lastModifiedDate":"2022-03-17"},{"lineNumber":97,"author":{"gitId":"alanlowzies"},"content":"        getWorkoutsHashMapList().put(newKey, updatedWorkout);","lastModifiedDate":"2022-03-17"},{"lineNumber":98,"author":{"gitId":"alanlowzies"},"content":"        getWorkoutsHashMapList().remove(existingKey);","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"alanlowzies"},"content":"        // Update key in workoutsDisplayList","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"alanlowzies"},"content":"        for (int i \u003d 0; i \u003c getWorkoutsDisplayList().size(); i +\u003d 1) {","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"alanlowzies"},"content":"            String key \u003d getWorkoutsDisplayList().get(i);","lastModifiedDate":"2022-03-17"},{"lineNumber":103,"author":{"gitId":"alanlowzies"},"content":"            if (key.equals(existingKey)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":104,"author":{"gitId":"alanlowzies"},"content":"                getWorkoutsDisplayList().set(i, newKey);","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"alanlowzies"},"content":"                break;","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":107,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":109,"author":{"gitId":"alanlowzies"},"content":"        assert (!getWorkoutsDisplayList().contains(existingKey)) : \"Old key should no longer \"","lastModifiedDate":"2022-03-17"},{"lineNumber":110,"author":{"gitId":"alanlowzies"},"content":"                + \"exist in workoutsDisplayList.\";","lastModifiedDate":"2022-03-17"},{"lineNumber":111,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":112,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":113,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"alanlowzies"},"content":"     * Parses the given user argument to identify the details of the new workout to be added.","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"alanlowzies"},"content":"     * Thereafter, the details will be checked for their validity. If all checks pass, a new","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"alanlowzies"},"content":"     * Workout object is instantiated before adding it to the ArrayList of workouts.","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"alanlowzies"},"content":"     * @param userArgument The user\u0027s details for the new workout, including exercise name","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"alanlowzies"},"content":"     *                     and number of repetitions.","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"alanlowzies"},"content":"     * @return A Workout object that represents the new workout.","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"alanlowzies"},"content":"     * @throws ArrayIndexOutOfBoundsException If userArgument contains insufficient arguments and parsing fails.","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"alanlowzies"},"content":"     * @throws NumberFormatException          If the number of repetitions specified in userArgument is an","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"alanlowzies"},"content":"     *                                        invalid number.","lastModifiedDate":"2022-03-14"},{"lineNumber":124,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidExerciseException       If the exercise name specified in userArgument is invalid.","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidWorkoutException        If the details specified in userArgument is invalid.","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"alanlowzies"},"content":"    public Workout createAndAddWorkout(String userArgument) throws ArrayIndexOutOfBoundsException,","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"alanlowzies"},"content":"            NumberFormatException, InvalidExerciseException, InvalidWorkoutException {","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"alanlowzies"},"content":"        String userExerciseInput \u003d userArgument.split(WorkoutCommand.CREATE_ACTION_REPS_KEYWORD)[0].trim();","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"alanlowzies"},"content":"        String userRepsInputString \u003d userArgument.split(WorkoutCommand.CREATE_ACTION_REPS_KEYWORD)[1].trim();","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"alanlowzies"},"content":"        int userRepsInput \u003d Integer.parseInt(userRepsInputString);","lastModifiedDate":"2022-03-05"},{"lineNumber":132,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":133,"author":{"gitId":"alanlowzies"},"content":"        boolean isExerciseValid \u003d exerciseList.checkIfExerciseExists(userExerciseInput);","lastModifiedDate":"2022-03-05"},{"lineNumber":134,"author":{"gitId":"alanlowzies"},"content":"        boolean isRepsValueValid \u003d checkIfRepsValueIsValid(userRepsInput);","lastModifiedDate":"2022-03-05"},{"lineNumber":135,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":136,"author":{"gitId":"alanlowzies"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-05"},{"lineNumber":137,"author":{"gitId":"alanlowzies"},"content":"        if (!isExerciseValid) {","lastModifiedDate":"2022-03-05"},{"lineNumber":138,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.WARNING, \"Exercise name is invalid.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"alanlowzies"},"content":"            throw new InvalidExerciseException(className, InvalidExerciseException.INVALID_EXERCISE_NAME_ERROR_MSG);","lastModifiedDate":"2022-03-05"},{"lineNumber":140,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":141,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":142,"author":{"gitId":"alanlowzies"},"content":"        if (!isRepsValueValid) {","lastModifiedDate":"2022-03-05"},{"lineNumber":143,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.WARNING, \"Repetition value is invalid.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":144,"author":{"gitId":"alanlowzies"},"content":"            throw new InvalidWorkoutException(className, InvalidWorkoutException.INVALID_REPS_VALUE_ERROR_MSG);","lastModifiedDate":"2022-03-14"},{"lineNumber":145,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":146,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":147,"author":{"gitId":"alanlowzies"},"content":"        boolean hasSameExerciseNameAndReps \u003d checkForExistingWorkout(userExerciseInput, userRepsInput);","lastModifiedDate":"2022-03-14"},{"lineNumber":148,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":149,"author":{"gitId":"alanlowzies"},"content":"        if (hasSameExerciseNameAndReps) {","lastModifiedDate":"2022-03-14"},{"lineNumber":150,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.WARNING, \"Existing workout with identical exercise name and repetition \"","lastModifiedDate":"2022-03-14"},{"lineNumber":151,"author":{"gitId":"alanlowzies"},"content":"                    + \"value found in the list of workouts.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":152,"author":{"gitId":"alanlowzies"},"content":"            throw new InvalidWorkoutException(className, InvalidWorkoutException.DUPLICATE_WORKOUT_ERROR_MSG);","lastModifiedDate":"2022-03-14"},{"lineNumber":153,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":154,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":155,"author":{"gitId":"alanlowzies"},"content":"        assert (isExerciseValid \u0026\u0026 isRepsValueValid \u0026\u0026 !hasSameExerciseNameAndReps);","lastModifiedDate":"2022-03-14"},{"lineNumber":156,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":157,"author":{"gitId":"alanlowzies"},"content":"        Workout newWorkout \u003d new Workout(userExerciseInput, userRepsInput);","lastModifiedDate":"2022-03-05"},{"lineNumber":158,"author":{"gitId":"alanlowzies"},"content":"        logger.log(Level.INFO, \"New workout created.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":159,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":160,"author":{"gitId":"alanlowzies"},"content":"        String newWorkoutKey \u003d newWorkout.toString();","lastModifiedDate":"2022-03-17"},{"lineNumber":161,"author":{"gitId":"alanlowzies"},"content":"        workoutsHashMapList.put(newWorkoutKey, newWorkout);","lastModifiedDate":"2022-03-17"},{"lineNumber":162,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":163,"author":{"gitId":"alanlowzies"},"content":"        workoutsDisplayList.add(newWorkoutKey);","lastModifiedDate":"2022-03-17"},{"lineNumber":164,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":165,"author":{"gitId":"alanlowzies"},"content":"        return newWorkout;","lastModifiedDate":"2022-03-05"},{"lineNumber":166,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":167,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":168,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":169,"author":{"gitId":"alanlowzies"},"content":"     * Checks if the number of repetitions specified is a value that is at least 1.","lastModifiedDate":"2022-03-14"},{"lineNumber":170,"author":{"gitId":"alanlowzies"},"content":"     * Workouts must be an exercise with a minimum repetition value of 1.","lastModifiedDate":"2022-03-14"},{"lineNumber":171,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":172,"author":{"gitId":"alanlowzies"},"content":"     * @param userRepsInput The repetition value to check.","lastModifiedDate":"2022-03-14"},{"lineNumber":173,"author":{"gitId":"alanlowzies"},"content":"     * @return True if the repetition value is at least 1. Otherwise, returns false.","lastModifiedDate":"2022-03-14"},{"lineNumber":174,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":175,"author":{"gitId":"alanlowzies"},"content":"    public boolean checkIfRepsValueIsValid(int userRepsInput) {","lastModifiedDate":"2022-03-05"},{"lineNumber":176,"author":{"gitId":"alanlowzies"},"content":"        return userRepsInput \u003e\u003d 1;","lastModifiedDate":"2022-03-05"},{"lineNumber":177,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":178,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":179,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":180,"author":{"gitId":"emilysim00"},"content":"     * Prints all workouts stored in workout list at once.","lastModifiedDate":"2022-03-24"},{"lineNumber":181,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":182,"author":{"gitId":"emilysim00"},"content":"    public void listAllWorkout() {","lastModifiedDate":"2022-03-24"},{"lineNumber":183,"author":{"gitId":"emilysim00"},"content":"        int index \u003d 1;","lastModifiedDate":"2022-03-24"},{"lineNumber":184,"author":{"gitId":"emilysim00"},"content":"        if (workoutsDisplayList.size() \u003c\u003d 0) {","lastModifiedDate":"2022-04-01"},{"lineNumber":185,"author":{"gitId":"emilysim00"},"content":"            System.out.println(\"The workout list is empty\");","lastModifiedDate":"2022-04-01"},{"lineNumber":186,"author":{"gitId":"emilysim00"},"content":"        } else {","lastModifiedDate":"2022-04-01"},{"lineNumber":187,"author":{"gitId":"emilysim00"},"content":"            System.out.println(\"Showing workouts \" + (index) + \"-\" + workoutsDisplayList.size()","lastModifiedDate":"2022-03-24"},{"lineNumber":188,"author":{"gitId":"emilysim00"},"content":"                    + \" of \" + workoutsDisplayList.size() + \":\");","lastModifiedDate":"2022-03-24"},{"lineNumber":189,"author":{"gitId":"emilysim00"},"content":"            while (index \u003c\u003d workoutsDisplayList.size()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":190,"author":{"gitId":"emilysim00"},"content":"                Workout workoutObject \u003d getWorkoutFromIndexNum(index);","lastModifiedDate":"2022-03-24"},{"lineNumber":191,"author":{"gitId":"emilysim00"},"content":"                System.out.println(index + \". \" + workoutObject.toString());","lastModifiedDate":"2022-03-24"},{"lineNumber":192,"author":{"gitId":"emilysim00"},"content":"                index +\u003d 1;","lastModifiedDate":"2022-03-24"},{"lineNumber":193,"author":{"gitId":"emilysim00"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":194,"author":{"gitId":"emilysim00"},"content":"            System.out.println(\"Showed all workouts in list\");","lastModifiedDate":"2022-03-24"},{"lineNumber":195,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":196,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":197,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":198,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":199,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":200,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method removes the intended workout in the workout list.","lastModifiedDate":"2022-03-13"},{"lineNumber":201,"author":{"gitId":"Musfirahe0556596"},"content":"     * The intended workout to delete is determined by the user who","lastModifiedDate":"2022-03-13"},{"lineNumber":202,"author":{"gitId":"Musfirahe0556596"},"content":"     * will indicate the workout number to delete in the workout list.","lastModifiedDate":"2022-03-13"},{"lineNumber":203,"author":{"gitId":"TianaiYan"},"content":"     * Checks whether the deleted workout is any plan. If there is a plan","lastModifiedDate":"2022-03-31"},{"lineNumber":204,"author":{"gitId":"TianaiYan"},"content":"     * contains the deleted workout, the plan will also be deleted.","lastModifiedDate":"2022-03-31"},{"lineNumber":205,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":206,"author":{"gitId":"TianaiYan"},"content":"     * @param userArgument The argument entered by user, that is, the workout index number to delete.","lastModifiedDate":"2022-03-31"},{"lineNumber":207,"author":{"gitId":"TianaiYan"},"content":"     * @param planList An instance of the PlanList class.","lastModifiedDate":"2022-03-31"},{"lineNumber":208,"author":{"gitId":"TianaiYan"},"content":"     * @throws NumberFormatException If workout index number could not be parsed into an integer.","lastModifiedDate":"2022-03-31"},{"lineNumber":209,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws ArrayIndexOutOfBoundsException For operations which involves index checking.","lastModifiedDate":"2022-03-13"},{"lineNumber":210,"author":{"gitId":"TianaiYan"},"content":"     * @throws InvalidWorkoutException        If workout index number to delete is out of range.","lastModifiedDate":"2022-03-31"},{"lineNumber":211,"author":{"gitId":"TianaiYan"},"content":"     * @throws InvalidPlanException        If plan index number to delete is out of range.","lastModifiedDate":"2022-03-31"},{"lineNumber":212,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":213,"author":{"gitId":"TianaiYan"},"content":"    public void deleteWorkout(String userArgument, PlanList planList, UI ui) throws InvalidWorkoutException,","lastModifiedDate":"2022-04-02"},{"lineNumber":214,"author":{"gitId":"TianaiYan"},"content":"            NumberFormatException, ArrayIndexOutOfBoundsException, InvalidPlanException {","lastModifiedDate":"2022-03-31"},{"lineNumber":215,"author":{"gitId":"Musfirahe0556596"},"content":"        logger.entering(getClass().getName(), \"deleteWorkout\");","lastModifiedDate":"2022-03-13"},{"lineNumber":216,"author":{"gitId":"Musfirahe0556596"},"content":"        int indexToDelete \u003d Integer.parseInt(userArgument.trim());","lastModifiedDate":"2022-03-09"},{"lineNumber":217,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":218,"author":{"gitId":"Musfirahe0556596"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-09"},{"lineNumber":219,"author":{"gitId":"TianaiYan"},"content":"        boolean isIndexToDeleteValid \u003d checkIndexIsWithinRange(indexToDelete);","lastModifiedDate":"2022-03-12"},{"lineNumber":220,"author":{"gitId":"Musfirahe0556596"},"content":"        if (!isIndexToDeleteValid) {","lastModifiedDate":"2022-03-09"},{"lineNumber":221,"author":{"gitId":"Musfirahe0556596"},"content":"            logger.log(Level.WARNING, \"Workout number to delete is out of range!\");","lastModifiedDate":"2022-03-13"},{"lineNumber":222,"author":{"gitId":"TianaiYan"},"content":"            throw new InvalidWorkoutException(className, InvalidWorkoutException.INDEX_VALUE_OUT_OF_RANGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":223,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":224,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":225,"author":{"gitId":"alanlowzies"},"content":"        assert (indexToDelete \u003e 0) \u0026\u0026 (indexToDelete \u003c\u003d workoutsDisplayList.size());","lastModifiedDate":"2022-03-17"},{"lineNumber":226,"author":{"gitId":"alanlowzies"},"content":"        Workout deletedWorkout \u003d getWorkoutFromIndexNum(indexToDelete);","lastModifiedDate":"2022-03-17"},{"lineNumber":227,"author":{"gitId":"alanlowzies"},"content":"        workoutsDisplayList.remove(indexToDelete - 1);","lastModifiedDate":"2022-03-17"},{"lineNumber":228,"author":{"gitId":"alanlowzies"},"content":"        String deletedWorkoutKey \u003d deletedWorkout.toString();","lastModifiedDate":"2022-03-17"},{"lineNumber":229,"author":{"gitId":"alanlowzies"},"content":"        getWorkoutsHashMapList().remove(deletedWorkoutKey);","lastModifiedDate":"2022-03-17"},{"lineNumber":230,"author":{"gitId":"TianaiYan"},"content":"        ui.printDeleteWorkoutMessage(deletedWorkout);","lastModifiedDate":"2022-03-31"},{"lineNumber":231,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":232,"author":{"gitId":"TianaiYan"},"content":"        String deletedWorkoutDetail \u003d deletedWorkout.toString();","lastModifiedDate":"2022-03-31"},{"lineNumber":233,"author":{"gitId":"TianaiYan"},"content":"        deletePlanContainsDeletedWorkout(deletedWorkoutDetail, planList);","lastModifiedDate":"2022-03-31"},{"lineNumber":234,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":235,"author":{"gitId":"Musfirahe0556596"},"content":"        logger.exiting(getClass().getName(), \"deleteWorkout\");","lastModifiedDate":"2022-03-13"},{"lineNumber":236,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":237,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":238,"author":{"gitId":"TianaiYan"},"content":"    public void deletePlanContainsDeletedWorkout(String deletedWorkoutDetail, PlanList planList) throws","lastModifiedDate":"2022-03-31"},{"lineNumber":239,"author":{"gitId":"TianaiYan"},"content":"            InvalidPlanException {","lastModifiedDate":"2022-03-31"},{"lineNumber":240,"author":{"gitId":"TianaiYan"},"content":"        ArrayList\u003cInteger\u003e planIndexWithDeletedWorkout \u003d planList.findPlanContainsTargetWorkout(deletedWorkoutDetail);","lastModifiedDate":"2022-03-31"},{"lineNumber":241,"author":{"gitId":"TianaiYan"},"content":"        if (planIndexWithDeletedWorkout.size() \u003e 0) {","lastModifiedDate":"2022-03-31"},{"lineNumber":242,"author":{"gitId":"TianaiYan"},"content":"            System.out.println(deletedWorkoutDetail + \" is found in:\\n\");","lastModifiedDate":"2022-03-31"},{"lineNumber":243,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":244,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":245,"author":{"gitId":"TianaiYan"},"content":"        for (int planNumber : planIndexWithDeletedWorkout) {","lastModifiedDate":"2022-03-31"},{"lineNumber":246,"author":{"gitId":"TianaiYan"},"content":"            assert (planList.checkPlanIndexIsWithinRange(planNumber)) : \"Plan number is out of range.\";","lastModifiedDate":"2022-03-31"},{"lineNumber":247,"author":{"gitId":"TianaiYan"},"content":"            System.out.println(\"\\t\" + planList.getPlansDisplayList().get(planNumber - 1));","lastModifiedDate":"2022-03-31"},{"lineNumber":248,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":249,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":250,"author":{"gitId":"TianaiYan"},"content":"        int totalNumberOfPlanToDelete \u003d planIndexWithDeletedWorkout.size();","lastModifiedDate":"2022-03-31"},{"lineNumber":251,"author":{"gitId":"TianaiYan"},"content":"        for (int i \u003d 0; i \u003c totalNumberOfPlanToDelete; i++) {","lastModifiedDate":"2022-03-31"},{"lineNumber":252,"author":{"gitId":"TianaiYan"},"content":"            if (i \u003d\u003d 0) {","lastModifiedDate":"2022-03-31"},{"lineNumber":253,"author":{"gitId":"TianaiYan"},"content":"                System.out.println(\"\\nThe following plan has been removed:\\n\");","lastModifiedDate":"2022-03-31"},{"lineNumber":254,"author":{"gitId":"TianaiYan"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":255,"author":{"gitId":"TianaiYan"},"content":"            System.out.println((i + 1) + \". \"","lastModifiedDate":"2022-03-31"},{"lineNumber":256,"author":{"gitId":"TianaiYan"},"content":"                    + planList.getPlansDisplayList().get(planIndexWithDeletedWorkout.get(i) - i - 1));","lastModifiedDate":"2022-03-31"},{"lineNumber":257,"author":{"gitId":"TianaiYan"},"content":"            planList.deletePlan(Integer.toString(planIndexWithDeletedWorkout.get(i) - i));","lastModifiedDate":"2022-03-31"},{"lineNumber":258,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":259,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":260,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":261,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":262,"author":{"gitId":"Musfirahe0556596"},"content":"     * This method checks whether the index supplied for operations","lastModifiedDate":"2022-03-13"},{"lineNumber":263,"author":{"gitId":"Musfirahe0556596"},"content":"     * such as delete and update is within the range of the current workout list.","lastModifiedDate":"2022-03-13"},{"lineNumber":264,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":265,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param index The index to check.","lastModifiedDate":"2022-03-13"},{"lineNumber":266,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return true if index is within range, else false if out of range.","lastModifiedDate":"2022-03-13"},{"lineNumber":267,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":268,"author":{"gitId":"TianaiYan"},"content":"    private boolean checkIndexIsWithinRange(int index) {","lastModifiedDate":"2022-03-12"},{"lineNumber":269,"author":{"gitId":"alanlowzies"},"content":"        return index \u003e 0 \u0026\u0026 index \u003c\u003d workoutsDisplayList.size();","lastModifiedDate":"2022-03-17"},{"lineNumber":270,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":271,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":272,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":273,"author":{"gitId":"TianaiYan"},"content":"     * Updates the number of repetitions of an existing workout.","lastModifiedDate":"2022-03-15"},{"lineNumber":274,"author":{"gitId":"TianaiYan"},"content":"     * Modifies the workout by stating the index of the workout and","lastModifiedDate":"2022-03-15"},{"lineNumber":275,"author":{"gitId":"TianaiYan"},"content":"     * new number of repetitions.","lastModifiedDate":"2022-03-15"},{"lineNumber":276,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":277,"author":{"gitId":"TianaiYan"},"content":"     * @param userArgument The argument entered by user, which includes index of workout to update","lastModifiedDate":"2022-03-15"},{"lineNumber":278,"author":{"gitId":"TianaiYan"},"content":"     *                     and new number of repetitions.","lastModifiedDate":"2022-03-15"},{"lineNumber":279,"author":{"gitId":"TianaiYan"},"content":"     * @return updatedWorkout The workout object which has been updated.","lastModifiedDate":"2022-03-15"},{"lineNumber":280,"author":{"gitId":"TianaiYan"},"content":"     * @throws ArrayIndexOutOfBoundsException For operations which involves index checking.","lastModifiedDate":"2022-03-15"},{"lineNumber":281,"author":{"gitId":"TianaiYan"},"content":"     * @throws NumberFormatException          If workout index and number of reps could not be parsed into an integer.","lastModifiedDate":"2022-03-15"},{"lineNumber":282,"author":{"gitId":"TianaiYan"},"content":"     * @throws InvalidWorkoutException        If number of repetition is not valid or workout number to update","lastModifiedDate":"2022-03-26"},{"lineNumber":283,"author":{"gitId":"TianaiYan"},"content":"     *                                        is out of range.","lastModifiedDate":"2022-03-26"},{"lineNumber":284,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":285,"author":{"gitId":"TianaiYan"},"content":"    public Workout updateWorkout(String userArgument) throws ArrayIndexOutOfBoundsException,","lastModifiedDate":"2022-03-12"},{"lineNumber":286,"author":{"gitId":"TianaiYan"},"content":"            NumberFormatException, InvalidWorkoutException {","lastModifiedDate":"2022-03-26"},{"lineNumber":287,"author":{"gitId":"TianaiYan"},"content":"        logger.entering(getClass().getName(), \"updateWorkout\");","lastModifiedDate":"2022-03-15"},{"lineNumber":288,"author":{"gitId":"TianaiYan"},"content":"        String[] updateDetails \u003d userArgument.split(\" \", 2);","lastModifiedDate":"2022-03-12"},{"lineNumber":289,"author":{"gitId":"TianaiYan"},"content":"        String indexToUpdateString \u003d updateDetails[0].trim();","lastModifiedDate":"2022-03-12"},{"lineNumber":290,"author":{"gitId":"TianaiYan"},"content":"        String newNumberOfRepsString \u003d updateDetails[1].trim();","lastModifiedDate":"2022-03-12"},{"lineNumber":291,"author":{"gitId":"TianaiYan"},"content":"        int indexToUpdate \u003d Integer.parseInt(indexToUpdateString);","lastModifiedDate":"2022-03-12"},{"lineNumber":292,"author":{"gitId":"TianaiYan"},"content":"        int newRepsValue \u003d Integer.parseInt(newNumberOfRepsString);","lastModifiedDate":"2022-03-15"},{"lineNumber":293,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":294,"author":{"gitId":"TianaiYan"},"content":"        boolean isIndexToUpdateValid \u003d checkIndexIsWithinRange(indexToUpdate);","lastModifiedDate":"2022-03-12"},{"lineNumber":295,"author":{"gitId":"TianaiYan"},"content":"        boolean isNewRepsValueValid \u003d checkIfRepsValueIsValid(newRepsValue);","lastModifiedDate":"2022-03-15"},{"lineNumber":296,"author":{"gitId":"TianaiYan"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-12"},{"lineNumber":297,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":298,"author":{"gitId":"TianaiYan"},"content":"        if (!isIndexToUpdateValid) {","lastModifiedDate":"2022-03-12"},{"lineNumber":299,"author":{"gitId":"TianaiYan"},"content":"            logger.log(Level.WARNING, \"Workout index to update is out of range!\");","lastModifiedDate":"2022-03-15"},{"lineNumber":300,"author":{"gitId":"TianaiYan"},"content":"            throw new InvalidWorkoutException(className, InvalidWorkoutException.INDEX_VALUE_OUT_OF_RANGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":301,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":302,"author":{"gitId":"TianaiYan"},"content":"        if (!isNewRepsValueValid) {","lastModifiedDate":"2022-03-15"},{"lineNumber":303,"author":{"gitId":"TianaiYan"},"content":"            logger.log(Level.WARNING, \"Repetition value is invalid.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":304,"author":{"gitId":"alanlowzies"},"content":"            throw new InvalidWorkoutException(className, InvalidWorkoutException.INVALID_REPS_VALUE_ERROR_MSG);","lastModifiedDate":"2022-03-14"},{"lineNumber":305,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":306,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":307,"author":{"gitId":"alanlowzies"},"content":"        Workout workoutToUpdate \u003d getWorkoutFromIndexNum(indexToUpdate);","lastModifiedDate":"2022-03-18"},{"lineNumber":308,"author":{"gitId":"alanlowzies"},"content":"        String exerciseName \u003d workoutToUpdate.getExerciseName();","lastModifiedDate":"2022-03-18"},{"lineNumber":309,"author":{"gitId":"TianaiYan"},"content":"        boolean isExistingWorkout \u003d checkForExistingWorkout(exerciseName, newRepsValue);","lastModifiedDate":"2022-03-15"},{"lineNumber":310,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":311,"author":{"gitId":"TianaiYan"},"content":"        if (isExistingWorkout) {","lastModifiedDate":"2022-03-15"},{"lineNumber":312,"author":{"gitId":"TianaiYan"},"content":"            logger.log(Level.WARNING, \"\\\"\" + exerciseName + \" (\" + newRepsValue + \")\\\" \"","lastModifiedDate":"2022-03-15"},{"lineNumber":313,"author":{"gitId":"TianaiYan"},"content":"                + \"has already existed in the list. Cannot be updated.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":314,"author":{"gitId":"TianaiYan"},"content":"            throw new InvalidWorkoutException(className, InvalidWorkoutException.DUPLICATE_WORKOUT_ERROR_MSG);","lastModifiedDate":"2022-03-15"},{"lineNumber":315,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":316,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":317,"author":{"gitId":"TianaiYan"},"content":"        assert (isIndexToUpdateValid \u0026\u0026 isNewRepsValueValid \u0026\u0026 !isExistingWorkout);","lastModifiedDate":"2022-03-15"},{"lineNumber":318,"author":{"gitId":"alanlowzies"},"content":"        String oldWorkoutKey \u003d workoutToUpdate.toString();","lastModifiedDate":"2022-03-18"},{"lineNumber":319,"author":{"gitId":"alanlowzies"},"content":"        workoutToUpdate.setRepetitions(newRepsValue);","lastModifiedDate":"2022-03-18"},{"lineNumber":320,"author":{"gitId":"alanlowzies"},"content":"        updateWorkoutsHashMapList(oldWorkoutKey, workoutToUpdate);","lastModifiedDate":"2022-03-18"},{"lineNumber":321,"author":{"gitId":"TianaiYan"},"content":"        logger.exiting(getClass().getName(), \"updateWorkout\");","lastModifiedDate":"2022-03-29"},{"lineNumber":322,"author":{"gitId":"alanlowzies"},"content":"        return workoutToUpdate;","lastModifiedDate":"2022-03-18"},{"lineNumber":323,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":324,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":325,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":326,"author":{"gitId":"alanlowzies"},"content":"     * Checks if the provided workout details already exists in the ArrayList of workouts. A workout","lastModifiedDate":"2022-03-14"},{"lineNumber":327,"author":{"gitId":"alanlowzies"},"content":"     * is considered to already exist in the list if both the exercise name and repetition count matches","lastModifiedDate":"2022-03-14"},{"lineNumber":328,"author":{"gitId":"alanlowzies"},"content":"     * an existing workout in the ArrayList.","lastModifiedDate":"2022-03-14"},{"lineNumber":329,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":330,"author":{"gitId":"alanlowzies"},"content":"     * @param exerciseName    The name of the exercise to check.","lastModifiedDate":"2022-03-14"},{"lineNumber":331,"author":{"gitId":"alanlowzies"},"content":"     * @param repetitionCount The number of repetitions of the exercise to check.","lastModifiedDate":"2022-03-14"},{"lineNumber":332,"author":{"gitId":"alanlowzies"},"content":"     * @return True if an existing workout with the same exercise name and repetition count exists in the list.","lastModifiedDate":"2022-03-14"},{"lineNumber":333,"author":{"gitId":"alanlowzies"},"content":"     *         Otherwise, returns false.","lastModifiedDate":"2022-03-14"},{"lineNumber":334,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":335,"author":{"gitId":"alanlowzies"},"content":"    public boolean checkForExistingWorkout(String exerciseName, int repetitionCount) {","lastModifiedDate":"2022-03-14"},{"lineNumber":336,"author":{"gitId":"alanlowzies"},"content":"        for (String existingWorkoutKey : getWorkoutsDisplayList()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":337,"author":{"gitId":"alanlowzies"},"content":"            Workout existingWorkout \u003d getWorkoutsHashMapList().get(existingWorkoutKey);","lastModifiedDate":"2022-03-17"},{"lineNumber":338,"author":{"gitId":"alanlowzies"},"content":"            boolean hasSameExerciseName \u003d existingWorkout.getExerciseName().equals(exerciseName);","lastModifiedDate":"2022-03-14"},{"lineNumber":339,"author":{"gitId":"alanlowzies"},"content":"            boolean hasSameRepsCount \u003d (existingWorkout.getRepetitions() \u003d\u003d repetitionCount);","lastModifiedDate":"2022-03-14"},{"lineNumber":340,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":341,"author":{"gitId":"alanlowzies"},"content":"            if (hasSameExerciseName \u0026\u0026 hasSameRepsCount) {","lastModifiedDate":"2022-03-14"},{"lineNumber":342,"author":{"gitId":"alanlowzies"},"content":"                logger.log(Level.INFO, \"Existing workout found in the list.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":343,"author":{"gitId":"alanlowzies"},"content":"                return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":344,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":345,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":346,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":347,"author":{"gitId":"alanlowzies"},"content":"        return false;","lastModifiedDate":"2022-03-14"},{"lineNumber":348,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":349,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":350,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-04-02"},{"lineNumber":351,"author":{"gitId":"TianaiYan"},"content":"     * Finds the workout that the user wants to update.","lastModifiedDate":"2022-04-02"},{"lineNumber":352,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-04-02"},{"lineNumber":353,"author":{"gitId":"TianaiYan"},"content":"     * @param userArgument The argument entered by user, which includes index of workout to update","lastModifiedDate":"2022-04-02"},{"lineNumber":354,"author":{"gitId":"TianaiYan"},"content":"     *                     and new number of repetitions.","lastModifiedDate":"2022-04-02"},{"lineNumber":355,"author":{"gitId":"TianaiYan"},"content":"     * @return targetWorkout The workout object which is going to be updated.","lastModifiedDate":"2022-04-02"},{"lineNumber":356,"author":{"gitId":"TianaiYan"},"content":"     * @throws InvalidWorkoutException If index of workout is not valid.","lastModifiedDate":"2022-04-02"},{"lineNumber":357,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-04-02"},{"lineNumber":358,"author":{"gitId":"TianaiYan"},"content":"    public String getTargetWorkout(String userArgument) throws InvalidWorkoutException {","lastModifiedDate":"2022-03-29"},{"lineNumber":359,"author":{"gitId":"TianaiYan"},"content":"        String[] updateDetails \u003d userArgument.split(\" \", 2);","lastModifiedDate":"2022-03-29"},{"lineNumber":360,"author":{"gitId":"TianaiYan"},"content":"        String indexToUpdateString \u003d updateDetails[0].trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":361,"author":{"gitId":"TianaiYan"},"content":"        int indexToUpdate \u003d Integer.parseInt(indexToUpdateString);","lastModifiedDate":"2022-03-29"},{"lineNumber":362,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":363,"author":{"gitId":"TianaiYan"},"content":"        boolean isIndexToUpdateValid \u003d checkIndexIsWithinRange(indexToUpdate);","lastModifiedDate":"2022-03-29"},{"lineNumber":364,"author":{"gitId":"TianaiYan"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-29"},{"lineNumber":365,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":366,"author":{"gitId":"TianaiYan"},"content":"        if (!isIndexToUpdateValid) {","lastModifiedDate":"2022-03-29"},{"lineNumber":367,"author":{"gitId":"TianaiYan"},"content":"            throw new InvalidWorkoutException(className, InvalidWorkoutException.INDEX_VALUE_OUT_OF_RANGE);","lastModifiedDate":"2022-03-29"},{"lineNumber":368,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":369,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":370,"author":{"gitId":"TianaiYan"},"content":"        String targetWorkout \u003d workoutsDisplayList.get(indexToUpdate - 1);","lastModifiedDate":"2022-03-29"},{"lineNumber":371,"author":{"gitId":"TianaiYan"},"content":"        return targetWorkout;","lastModifiedDate":"2022-03-29"},{"lineNumber":372,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":373,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"emilysim00":24,"Musfirahe0556596":29,"alanlowzies":206,"TianaiYan":114}},{"path":"src/main/java/storage/FileManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package storage;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"import commands.WorkoutCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"import data.exercises.InvalidExerciseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"import data.plans.InvalidPlanException;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"import data.plans.Plan;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"import data.schedule.Day;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"import data.schedule.DayList;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"import data.schedule.InvalidScheduleException;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"import data.workouts.InvalidWorkoutException;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"import data.workouts.Workout;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"import data.workouts.WorkoutList;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":" * This class manages the reading and writing of the various files used by the WerkIt! application.","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"public class FileManager {","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"     * These characters are used for internal parsing (e.g. reading from data files)","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"     * and thus cannot be used by the user in his/her input.","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"    public static final String[] ILLEGAL_CHARACTERS \u003d {\"|\"};","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"    // Directory and filenames for data storage","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"    public static final String USER_WORKING_DIRECTORY_PROPERTY \u003d \"user.dir\";","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"    public static final String DATA_DIRECTORY_NAME \u003d \"werkItResources\";","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"    public static final String EXERCISE_FILENAME \u003d \"exercises.txt\";","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"    public static final String WORKOUT_FILENAME \u003d \"workouts.txt\";","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"a1021492980"},"content":"    public static final String PLAN_FILENAME \u003d \"plans.txt\";","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"    public static final String SCHEDULE_FILENAME \u003d \"schedule.txt\";","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"    // Delimiters for processing file data","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"    private static final String FILE_DATA_DELIMITER_REGEX \u003d \"\\\\|\";","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"    private static final String FILE_DATA_DELIMITER \u003d \" | \";","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"a1021492980"},"content":"    private static final String FILE_DATA_DELIMITER_PLAN \u003d \",\";","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"    private UI ui \u003d new UI();","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"    private Path directoryPath;","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"    private Path exerciseFilePath;","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"    private Path workoutFilePath;","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"a1021492980"},"content":"    private Path planFilePath;","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"    private Path scheduleFilePath;","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"    // These booleans indicate whether the directory and/or files already exist","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"    // prior to the current application\u0027s session.","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"    private boolean wasDirectoryAlreadyMade \u003d false;","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"    private boolean wasExercisesFileAlreadyMade \u003d false;","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"    private boolean wasWorkoutsFileAlreadyMade \u003d false;","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"a1021492980"},"content":"    private boolean wasPlansFileAlreadyMade \u003d false;","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"    private boolean wasScheduleFileAlreadyMade \u003d false;","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"    private PlanList planList;","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"    private static Logger logger \u003d Logger.getLogger(FileManager.class.getName());","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"     * Constructs a FileManager object. While instantiating, Paths objects of the various URIs","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"     * are also instantiated.","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"    public FileManager(PlanList planList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"        String workingDirectory \u003d System.getProperty(USER_WORKING_DIRECTORY_PROPERTY);","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"        this.directoryPath \u003d Paths.get(workingDirectory, DATA_DIRECTORY_NAME);","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"        this.exerciseFilePath \u003d Paths.get(workingDirectory, DATA_DIRECTORY_NAME, EXERCISE_FILENAME);","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"alanlowzies"},"content":"        this.workoutFilePath \u003d Paths.get(workingDirectory, DATA_DIRECTORY_NAME, WORKOUT_FILENAME);","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"a1021492980"},"content":"        this.planFilePath \u003d Paths.get(workingDirectory, DATA_DIRECTORY_NAME, PLAN_FILENAME);","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"alanlowzies"},"content":"        this.scheduleFilePath \u003d Paths.get(workingDirectory, DATA_DIRECTORY_NAME, SCHEDULE_FILENAME);","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"        this.planList \u003d planList;","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"alanlowzies"},"content":"        LogHandler.linkToFileLogger(logger);","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"     * Gets the Paths object that stores the URI of the WerkIt! resource directory.","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"alanlowzies"},"content":"     * @return A Paths object with the URI of the application\u0027s resource directory.","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"alanlowzies"},"content":"    public Path getDirectoryPath() {","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"alanlowzies"},"content":"        return this.directoryPath;","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"alanlowzies"},"content":"     * Gets the Paths object that stores the URI of the WerkIt! data file containing","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"alanlowzies"},"content":"     * a list of exercises.","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"alanlowzies"},"content":"     * @return A Paths object with the URI of the application\u0027s exercise file.","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"alanlowzies"},"content":"    public Path getExerciseFilePath() {","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"alanlowzies"},"content":"        return this.exerciseFilePath;","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"alanlowzies"},"content":"     * Gets the Paths object that stores the URI of the WerkIt! data file containing","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"alanlowzies"},"content":"     * a list of workouts.","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"alanlowzies"},"content":"     * @return A Paths object with the URI of the application\u0027s workouts file.","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"alanlowzies"},"content":"    public Path getWorkoutFilePath() {","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"alanlowzies"},"content":"        return this.workoutFilePath;","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"a1021492980"},"content":"    public Path getPlanFilePath() {","lastModifiedDate":"2022-03-20"},{"lineNumber":116,"author":{"gitId":"a1021492980"},"content":"        return this.planFilePath;","lastModifiedDate":"2022-03-20"},{"lineNumber":117,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":118,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":119,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"alanlowzies"},"content":"     * Gets the Paths object that stores the URI of the WerkIt! data file containing","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"alanlowzies"},"content":"     * the schedule.","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"alanlowzies"},"content":"     * @return A Paths object with the URI of the application\u0027s schedule file.","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"alanlowzies"},"content":"    public Path getScheduleFilePath() {","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"alanlowzies"},"content":"        return this.scheduleFilePath;","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"alanlowzies"},"content":"     * Gets the status of whether the directory already exists prior to the current session","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"alanlowzies"},"content":"     * of the application.","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"alanlowzies"},"content":"     * @return Returns true if the directory already exists. Otherwise, returns false.","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"alanlowzies"},"content":"    public boolean isWasDirectoryAlreadyMade() {","lastModifiedDate":"2022-03-09"},{"lineNumber":136,"author":{"gitId":"alanlowzies"},"content":"        return this.wasDirectoryAlreadyMade;","lastModifiedDate":"2022-03-09"},{"lineNumber":137,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":138,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":139,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":140,"author":{"gitId":"alanlowzies"},"content":"     * Sets the status of whether the directory already exists prior to the current session","lastModifiedDate":"2022-03-14"},{"lineNumber":141,"author":{"gitId":"alanlowzies"},"content":"     * of the application.","lastModifiedDate":"2022-03-14"},{"lineNumber":142,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":143,"author":{"gitId":"alanlowzies"},"content":"     * @param wasDirectoryAlreadyMade The status of the directory\u0027s existence.","lastModifiedDate":"2022-03-14"},{"lineNumber":144,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":145,"author":{"gitId":"alanlowzies"},"content":"    public void setWasDirectoryAlreadyMade(boolean wasDirectoryAlreadyMade) {","lastModifiedDate":"2022-03-09"},{"lineNumber":146,"author":{"gitId":"alanlowzies"},"content":"        this.wasDirectoryAlreadyMade \u003d wasDirectoryAlreadyMade;","lastModifiedDate":"2022-03-09"},{"lineNumber":147,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":148,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":149,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":150,"author":{"gitId":"alanlowzies"},"content":"     * Gets the status of whether the exercise file already exists prior to the current session","lastModifiedDate":"2022-03-14"},{"lineNumber":151,"author":{"gitId":"alanlowzies"},"content":"     * of the application.","lastModifiedDate":"2022-03-14"},{"lineNumber":152,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":153,"author":{"gitId":"alanlowzies"},"content":"     * @return Returns true if the exercise file already exists. Otherwise, returns false.","lastModifiedDate":"2022-03-14"},{"lineNumber":154,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":155,"author":{"gitId":"alanlowzies"},"content":"    public boolean isWasExercisesFileAlreadyMade() {","lastModifiedDate":"2022-03-09"},{"lineNumber":156,"author":{"gitId":"alanlowzies"},"content":"        return this.wasExercisesFileAlreadyMade;","lastModifiedDate":"2022-03-09"},{"lineNumber":157,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":158,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":159,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":160,"author":{"gitId":"alanlowzies"},"content":"     * Sets the status of whether the exercise file already exists prior to the current session","lastModifiedDate":"2022-03-14"},{"lineNumber":161,"author":{"gitId":"alanlowzies"},"content":"     * of the application.","lastModifiedDate":"2022-03-14"},{"lineNumber":162,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":163,"author":{"gitId":"alanlowzies"},"content":"     * @param wasExercisesFileAlreadyMade The status of the exercise file\u0027s existence.","lastModifiedDate":"2022-03-14"},{"lineNumber":164,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":165,"author":{"gitId":"alanlowzies"},"content":"    public void setWasExercisesFileAlreadyMade(boolean wasExercisesFileAlreadyMade) {","lastModifiedDate":"2022-03-09"},{"lineNumber":166,"author":{"gitId":"alanlowzies"},"content":"        this.wasExercisesFileAlreadyMade \u003d wasExercisesFileAlreadyMade;","lastModifiedDate":"2022-03-09"},{"lineNumber":167,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":168,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":169,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":170,"author":{"gitId":"alanlowzies"},"content":"     * Gets the status of whether the workout file already exists prior to the current session","lastModifiedDate":"2022-03-14"},{"lineNumber":171,"author":{"gitId":"alanlowzies"},"content":"     * of the application.","lastModifiedDate":"2022-03-14"},{"lineNumber":172,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":173,"author":{"gitId":"alanlowzies"},"content":"     * @return Returns true if the workout file already exists. Otherwise, returns false.","lastModifiedDate":"2022-03-14"},{"lineNumber":174,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":175,"author":{"gitId":"alanlowzies"},"content":"    public boolean isWasWorkoutsFileAlreadyMade() {","lastModifiedDate":"2022-03-09"},{"lineNumber":176,"author":{"gitId":"alanlowzies"},"content":"        return this.wasWorkoutsFileAlreadyMade;","lastModifiedDate":"2022-03-09"},{"lineNumber":177,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":178,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":179,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":180,"author":{"gitId":"alanlowzies"},"content":"     * Sets the status of whether the workout file already exists prior to the current session","lastModifiedDate":"2022-03-14"},{"lineNumber":181,"author":{"gitId":"alanlowzies"},"content":"     * of the application.","lastModifiedDate":"2022-03-14"},{"lineNumber":182,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":183,"author":{"gitId":"alanlowzies"},"content":"     * @param wasWorkoutsFileAlreadyMade The status of the workout file\u0027s existence.","lastModifiedDate":"2022-03-14"},{"lineNumber":184,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":185,"author":{"gitId":"alanlowzies"},"content":"    public void setWasWorkoutsFileAlreadyMade(boolean wasWorkoutsFileAlreadyMade) {","lastModifiedDate":"2022-03-09"},{"lineNumber":186,"author":{"gitId":"alanlowzies"},"content":"        this.wasWorkoutsFileAlreadyMade \u003d wasWorkoutsFileAlreadyMade;","lastModifiedDate":"2022-03-09"},{"lineNumber":187,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":188,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":189,"author":{"gitId":"alanlowzies"},"content":"    public boolean isWasPlansFileAlreadyMade() {","lastModifiedDate":"2022-03-23"},{"lineNumber":190,"author":{"gitId":"alanlowzies"},"content":"        return this.wasPlansFileAlreadyMade;","lastModifiedDate":"2022-03-23"},{"lineNumber":191,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":192,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":193,"author":{"gitId":"a1021492980"},"content":"    public void setWasPlansFileAlreadyMade(boolean wasPlansFileAlreadyMade) {","lastModifiedDate":"2022-03-20"},{"lineNumber":194,"author":{"gitId":"a1021492980"},"content":"        this.wasPlansFileAlreadyMade \u003d wasPlansFileAlreadyMade;","lastModifiedDate":"2022-03-20"},{"lineNumber":195,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":196,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":197,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":198,"author":{"gitId":"alanlowzies"},"content":"     * Gets the status of whether the schedule file already exists prior to the current session","lastModifiedDate":"2022-03-23"},{"lineNumber":199,"author":{"gitId":"alanlowzies"},"content":"     * of the application.","lastModifiedDate":"2022-03-23"},{"lineNumber":200,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":201,"author":{"gitId":"alanlowzies"},"content":"     * @return Returns true if the schedule file already exists. Otherwise, returns false.","lastModifiedDate":"2022-03-23"},{"lineNumber":202,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":203,"author":{"gitId":"alanlowzies"},"content":"    public boolean isWasScheduleFileAlreadyMade() {","lastModifiedDate":"2022-03-23"},{"lineNumber":204,"author":{"gitId":"alanlowzies"},"content":"        return this.wasScheduleFileAlreadyMade;","lastModifiedDate":"2022-03-23"},{"lineNumber":205,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":206,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":207,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":208,"author":{"gitId":"alanlowzies"},"content":"     * Sets the status of whether the schedule file already exists prior to the current session","lastModifiedDate":"2022-03-23"},{"lineNumber":209,"author":{"gitId":"alanlowzies"},"content":"     * of the application.","lastModifiedDate":"2022-03-23"},{"lineNumber":210,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":211,"author":{"gitId":"alanlowzies"},"content":"     * @param wasScheduleFileAlreadyMade The status of the schedule file\u0027s existence.","lastModifiedDate":"2022-03-23"},{"lineNumber":212,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":213,"author":{"gitId":"alanlowzies"},"content":"    public void setWasScheduleFileAlreadyMade(boolean wasScheduleFileAlreadyMade) {","lastModifiedDate":"2022-03-23"},{"lineNumber":214,"author":{"gitId":"alanlowzies"},"content":"        this.wasScheduleFileAlreadyMade \u003d wasScheduleFileAlreadyMade;","lastModifiedDate":"2022-03-23"},{"lineNumber":215,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":216,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":217,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":218,"author":{"gitId":"alanlowzies"},"content":"     * Gets the PlanList object stored in this instance of FileManager.","lastModifiedDate":"2022-03-27"},{"lineNumber":219,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":220,"author":{"gitId":"alanlowzies"},"content":"     * @return The PlanList object.","lastModifiedDate":"2022-03-27"},{"lineNumber":221,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":222,"author":{"gitId":"alanlowzies"},"content":"    public PlanList getPlanList() {","lastModifiedDate":"2022-03-27"},{"lineNumber":223,"author":{"gitId":"alanlowzies"},"content":"        return this.planList;","lastModifiedDate":"2022-03-27"},{"lineNumber":224,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":225,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":226,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":227,"author":{"gitId":"alanlowzies"},"content":"     * Checks if all the required directory and files already exist prior to the current session","lastModifiedDate":"2022-03-14"},{"lineNumber":228,"author":{"gitId":"alanlowzies"},"content":"     * of the application.","lastModifiedDate":"2022-03-14"},{"lineNumber":229,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":230,"author":{"gitId":"alanlowzies"},"content":"     * @return Returns true if all the required directory and files already exists. Otherwise,","lastModifiedDate":"2022-03-14"},{"lineNumber":231,"author":{"gitId":"alanlowzies"},"content":"     *         returns false.","lastModifiedDate":"2022-03-14"},{"lineNumber":232,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":233,"author":{"gitId":"alanlowzies"},"content":"    public boolean checkIfAllDirectoryAndFilesExists() {","lastModifiedDate":"2022-03-09"},{"lineNumber":234,"author":{"gitId":"alanlowzies"},"content":"        if (!isWasDirectoryAlreadyMade()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":235,"author":{"gitId":"alanlowzies"},"content":"            return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":236,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":237,"author":{"gitId":"alanlowzies"},"content":"        if (!isWasExercisesFileAlreadyMade()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":238,"author":{"gitId":"alanlowzies"},"content":"            return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":239,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":240,"author":{"gitId":"alanlowzies"},"content":"        if (!isWasWorkoutsFileAlreadyMade()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":241,"author":{"gitId":"alanlowzies"},"content":"            return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":242,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":243,"author":{"gitId":"a1021492980"},"content":"        if (!isWasPlansFileAlreadyMade()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":244,"author":{"gitId":"a1021492980"},"content":"            return false;","lastModifiedDate":"2022-03-20"},{"lineNumber":245,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":246,"author":{"gitId":"alanlowzies"},"content":"        if (!isWasScheduleFileAlreadyMade()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":247,"author":{"gitId":"alanlowzies"},"content":"            return false;","lastModifiedDate":"2022-03-23"},{"lineNumber":248,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":249,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":250,"author":{"gitId":"alanlowzies"},"content":"        return true;","lastModifiedDate":"2022-03-09"},{"lineNumber":251,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":252,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":253,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":254,"author":{"gitId":"alanlowzies"},"content":"     * Checks if the required directory and files already exist prior to the current session","lastModifiedDate":"2022-03-14"},{"lineNumber":255,"author":{"gitId":"alanlowzies"},"content":"     * of the application. If any of them does not exist, create them.","lastModifiedDate":"2022-03-14"},{"lineNumber":256,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":257,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If the application is unable to create the required directory","lastModifiedDate":"2022-03-14"},{"lineNumber":258,"author":{"gitId":"alanlowzies"},"content":"     *         and/or files.","lastModifiedDate":"2022-03-14"},{"lineNumber":259,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":260,"author":{"gitId":"alanlowzies"},"content":"    public void checkAndCreateDirectoriesAndFiles() throws IOException {","lastModifiedDate":"2022-03-09"},{"lineNumber":261,"author":{"gitId":"alanlowzies"},"content":"        checkIfDataDirectoryAlreadyExists();","lastModifiedDate":"2022-03-09"},{"lineNumber":262,"author":{"gitId":"alanlowzies"},"content":"        if (!isWasDirectoryAlreadyMade()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":263,"author":{"gitId":"alanlowzies"},"content":"            ui.printDirectoryNotFoundMessage();","lastModifiedDate":"2022-03-09"},{"lineNumber":264,"author":{"gitId":"alanlowzies"},"content":"            createDataDirectory();","lastModifiedDate":"2022-03-09"},{"lineNumber":265,"author":{"gitId":"alanlowzies"},"content":"            ui.printDirectoryCreatedMessage();","lastModifiedDate":"2022-03-10"},{"lineNumber":266,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":267,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":268,"author":{"gitId":"alanlowzies"},"content":"        checkIfExerciseFileAlreadyExists();","lastModifiedDate":"2022-03-09"},{"lineNumber":269,"author":{"gitId":"alanlowzies"},"content":"        if (!isWasExercisesFileAlreadyMade()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":270,"author":{"gitId":"alanlowzies"},"content":"            ui.printExerciseFileNotFoundMessage();","lastModifiedDate":"2022-03-09"},{"lineNumber":271,"author":{"gitId":"alanlowzies"},"content":"            createExerciseFile();","lastModifiedDate":"2022-03-09"},{"lineNumber":272,"author":{"gitId":"alanlowzies"},"content":"            ui.printExerciseFileCreatedMessage();","lastModifiedDate":"2022-03-10"},{"lineNumber":273,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":274,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":275,"author":{"gitId":"alanlowzies"},"content":"        checkIfWorkoutFileAlreadyExists();","lastModifiedDate":"2022-03-09"},{"lineNumber":276,"author":{"gitId":"alanlowzies"},"content":"        if (!isWasWorkoutsFileAlreadyMade()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":277,"author":{"gitId":"alanlowzies"},"content":"            ui.printWorkoutFileNotFoundMessage();","lastModifiedDate":"2022-03-09"},{"lineNumber":278,"author":{"gitId":"alanlowzies"},"content":"            createWorkoutFile();","lastModifiedDate":"2022-03-09"},{"lineNumber":279,"author":{"gitId":"alanlowzies"},"content":"            ui.printWorkoutFileCreatedMessage();","lastModifiedDate":"2022-03-10"},{"lineNumber":280,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":281,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":282,"author":{"gitId":"a1021492980"},"content":"        checkIfPlanFileAlreadyExists();","lastModifiedDate":"2022-03-20"},{"lineNumber":283,"author":{"gitId":"a1021492980"},"content":"        if (!isWasPlansFileAlreadyMade()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":284,"author":{"gitId":"a1021492980"},"content":"            ui.printPlanFileNotFoundMessage();","lastModifiedDate":"2022-03-20"},{"lineNumber":285,"author":{"gitId":"a1021492980"},"content":"            createPlanFile();","lastModifiedDate":"2022-03-20"},{"lineNumber":286,"author":{"gitId":"a1021492980"},"content":"            ui.printPlanFileCreatedMessage();","lastModifiedDate":"2022-03-20"},{"lineNumber":287,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":288,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":289,"author":{"gitId":"alanlowzies"},"content":"        checkIfScheduleFileAlreadyExists();","lastModifiedDate":"2022-03-23"},{"lineNumber":290,"author":{"gitId":"alanlowzies"},"content":"        if (!isWasScheduleFileAlreadyMade()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":291,"author":{"gitId":"alanlowzies"},"content":"            ui.printScheduleFileNotFoundMessage();","lastModifiedDate":"2022-03-23"},{"lineNumber":292,"author":{"gitId":"alanlowzies"},"content":"            createScheduleFile();","lastModifiedDate":"2022-03-23"},{"lineNumber":293,"author":{"gitId":"alanlowzies"},"content":"            ui.printScheduleFileCreatedMessage();","lastModifiedDate":"2022-03-23"},{"lineNumber":294,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":295,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":296,"author":{"gitId":"alanlowzies"},"content":"        assert (Files.exists(getDirectoryPath())) : \"Directory does not exist, but it should.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":297,"author":{"gitId":"alanlowzies"},"content":"        assert (Files.exists(getExerciseFilePath())) : \"Exercise file does not exist, but it should.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":298,"author":{"gitId":"alanlowzies"},"content":"        assert (Files.exists(getWorkoutFilePath())) : \"Workout file does not exist, but it should.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":299,"author":{"gitId":"alanlowzies"},"content":"        // TODO: assert for plans (Haofeng?)","lastModifiedDate":"2022-03-23"},{"lineNumber":300,"author":{"gitId":"alanlowzies"},"content":"        assert (Files.exists(getScheduleFilePath())) : \"Schedule file does not exist, but it should.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":301,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":302,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":303,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":304,"author":{"gitId":"alanlowzies"},"content":"     * Checks for the existence of the resource directory. If the directory exists,","lastModifiedDate":"2022-03-14"},{"lineNumber":305,"author":{"gitId":"alanlowzies"},"content":"     * update the status of wasDirectoryAlreadyMade.","lastModifiedDate":"2022-03-14"},{"lineNumber":306,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":307,"author":{"gitId":"alanlowzies"},"content":"    public void checkIfDataDirectoryAlreadyExists() {","lastModifiedDate":"2022-03-09"},{"lineNumber":308,"author":{"gitId":"alanlowzies"},"content":"        if (Files.exists(getDirectoryPath())) {","lastModifiedDate":"2022-03-09"},{"lineNumber":309,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.INFO, \"Resource directory already exists.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":310,"author":{"gitId":"alanlowzies"},"content":"            setWasDirectoryAlreadyMade(true);","lastModifiedDate":"2022-03-09"},{"lineNumber":311,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":312,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":313,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":314,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":315,"author":{"gitId":"alanlowzies"},"content":"     * Creates the resource directory of the application.","lastModifiedDate":"2022-03-14"},{"lineNumber":316,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":317,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If the application is unable to create the resource directory.","lastModifiedDate":"2022-03-14"},{"lineNumber":318,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":319,"author":{"gitId":"alanlowzies"},"content":"    public void createDataDirectory() throws IOException {","lastModifiedDate":"2022-03-09"},{"lineNumber":320,"author":{"gitId":"alanlowzies"},"content":"        Files.createDirectory(getDirectoryPath());","lastModifiedDate":"2022-03-09"},{"lineNumber":321,"author":{"gitId":"alanlowzies"},"content":"        logger.log(Level.INFO, \"A new data directory was created.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":322,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":323,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":324,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":325,"author":{"gitId":"alanlowzies"},"content":"     * Checks for the existence of the exercise file. If the file exists,","lastModifiedDate":"2022-03-14"},{"lineNumber":326,"author":{"gitId":"alanlowzies"},"content":"     * update the status of wasExercisesFileAlreadyMade.","lastModifiedDate":"2022-03-14"},{"lineNumber":327,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":328,"author":{"gitId":"alanlowzies"},"content":"    public void checkIfExerciseFileAlreadyExists() {","lastModifiedDate":"2022-03-09"},{"lineNumber":329,"author":{"gitId":"alanlowzies"},"content":"        if (Files.exists(getExerciseFilePath())) {","lastModifiedDate":"2022-03-09"},{"lineNumber":330,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.INFO, \"Exercise file already exists.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":331,"author":{"gitId":"alanlowzies"},"content":"            setWasExercisesFileAlreadyMade(true);","lastModifiedDate":"2022-03-09"},{"lineNumber":332,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":333,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":334,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":335,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":336,"author":{"gitId":"alanlowzies"},"content":"     * Creates the exercise file of the application.","lastModifiedDate":"2022-03-14"},{"lineNumber":337,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":338,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If the application is unable to create the exercise file.","lastModifiedDate":"2022-03-14"},{"lineNumber":339,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":340,"author":{"gitId":"alanlowzies"},"content":"    public void createExerciseFile() throws IOException {","lastModifiedDate":"2022-03-09"},{"lineNumber":341,"author":{"gitId":"alanlowzies"},"content":"        Files.createFile(getExerciseFilePath());","lastModifiedDate":"2022-03-09"},{"lineNumber":342,"author":{"gitId":"alanlowzies"},"content":"        logger.log(Level.INFO, \"A new exercise file was created.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":343,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":344,"author":{"gitId":"alanlowzies"},"content":"        // Populate file with default exercises","lastModifiedDate":"2022-03-09"},{"lineNumber":345,"author":{"gitId":"alanlowzies"},"content":"        FileWriter fileWriter \u003d new FileWriter(getExerciseFilePath().toString());","lastModifiedDate":"2022-03-09"},{"lineNumber":346,"author":{"gitId":"alanlowzies"},"content":"        for (String exerciseName : ExerciseList.getDefaultExerciseList()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":347,"author":{"gitId":"alanlowzies"},"content":"            fileWriter.append(exerciseName);","lastModifiedDate":"2022-03-09"},{"lineNumber":348,"author":{"gitId":"alanlowzies"},"content":"            fileWriter.append(System.lineSeparator());","lastModifiedDate":"2022-03-09"},{"lineNumber":349,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":350,"author":{"gitId":"alanlowzies"},"content":"        fileWriter.close();","lastModifiedDate":"2022-03-09"},{"lineNumber":351,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":352,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":353,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":354,"author":{"gitId":"alanlowzies"},"content":"     * Checks for the existence of the workout file. If the file exists,","lastModifiedDate":"2022-03-14"},{"lineNumber":355,"author":{"gitId":"alanlowzies"},"content":"     * update the status of wasWorkoutsFileAlreadyMade.","lastModifiedDate":"2022-03-14"},{"lineNumber":356,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":357,"author":{"gitId":"alanlowzies"},"content":"    public void checkIfWorkoutFileAlreadyExists() {","lastModifiedDate":"2022-03-09"},{"lineNumber":358,"author":{"gitId":"alanlowzies"},"content":"        if (Files.exists(getWorkoutFilePath())) {","lastModifiedDate":"2022-03-09"},{"lineNumber":359,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.INFO, \"Workout file already exists.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":360,"author":{"gitId":"alanlowzies"},"content":"            setWasWorkoutsFileAlreadyMade(true);","lastModifiedDate":"2022-03-09"},{"lineNumber":361,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":362,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":363,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":364,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":365,"author":{"gitId":"alanlowzies"},"content":"     * Creates the workout file of the application.","lastModifiedDate":"2022-03-14"},{"lineNumber":366,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":367,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If the application is unable to create the workout file.","lastModifiedDate":"2022-03-14"},{"lineNumber":368,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":369,"author":{"gitId":"alanlowzies"},"content":"    public void createWorkoutFile() throws IOException {","lastModifiedDate":"2022-03-09"},{"lineNumber":370,"author":{"gitId":"alanlowzies"},"content":"        Files.createFile(getWorkoutFilePath());","lastModifiedDate":"2022-03-09"},{"lineNumber":371,"author":{"gitId":"alanlowzies"},"content":"        logger.log(Level.INFO, \"A new workout file was created.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":372,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":373,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":374,"author":{"gitId":"alanlowzies"},"content":"    public void checkIfPlanFileAlreadyExists() {","lastModifiedDate":"2022-03-23"},{"lineNumber":375,"author":{"gitId":"alanlowzies"},"content":"        if (Files.exists(getPlanFilePath())) {","lastModifiedDate":"2022-03-23"},{"lineNumber":376,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.INFO, \"Plan file already exists.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":377,"author":{"gitId":"alanlowzies"},"content":"            setWasPlansFileAlreadyMade(true);","lastModifiedDate":"2022-03-23"},{"lineNumber":378,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":379,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":380,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":381,"author":{"gitId":"a1021492980"},"content":"    public void createPlanFile() throws IOException {","lastModifiedDate":"2022-03-20"},{"lineNumber":382,"author":{"gitId":"a1021492980"},"content":"        Files.createFile(getPlanFilePath());","lastModifiedDate":"2022-03-20"},{"lineNumber":383,"author":{"gitId":"alanlowzies"},"content":"        logger.log(Level.INFO, \"A new plan file was created.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":384,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":385,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":386,"author":{"gitId":"alanlowzies"},"content":"    public void checkIfScheduleFileAlreadyExists() {","lastModifiedDate":"2022-03-23"},{"lineNumber":387,"author":{"gitId":"alanlowzies"},"content":"        if (Files.exists(getScheduleFilePath())) {","lastModifiedDate":"2022-03-23"},{"lineNumber":388,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.INFO, \"Schedule file already exists.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":389,"author":{"gitId":"alanlowzies"},"content":"            setWasScheduleFileAlreadyMade(true);","lastModifiedDate":"2022-03-23"},{"lineNumber":390,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":391,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":392,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":393,"author":{"gitId":"alanlowzies"},"content":"    public void createScheduleFile() throws IOException {","lastModifiedDate":"2022-03-23"},{"lineNumber":394,"author":{"gitId":"alanlowzies"},"content":"        Files.createFile(getScheduleFilePath());","lastModifiedDate":"2022-03-23"},{"lineNumber":395,"author":{"gitId":"alanlowzies"},"content":"        logger.log(Level.INFO, \"A new schedule file was created.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":396,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":397,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":398,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":399,"author":{"gitId":"alanlowzies"},"content":"     * Reads the exercises from local exercise file and stores them into an ArrayList named exercises.","lastModifiedDate":"2022-03-14"},{"lineNumber":400,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":401,"author":{"gitId":"emilysim00"},"content":"     * @param exerciseList List to store all exercises.","lastModifiedDate":"2022-03-27"},{"lineNumber":402,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException when the local file is missing.","lastModifiedDate":"2022-03-09"},{"lineNumber":403,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":404,"author":{"gitId":"alanlowzies"},"content":"    public void loadExercisesFromFile(ExerciseList exerciseList) throws IOException {","lastModifiedDate":"2022-03-09"},{"lineNumber":405,"author":{"gitId":"alanlowzies"},"content":"        Scanner scanner \u003d new Scanner(getExerciseFilePath());","lastModifiedDate":"2022-03-09"},{"lineNumber":406,"author":{"gitId":"alanlowzies"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":407,"author":{"gitId":"alanlowzies"},"content":"            var exercise \u003d scanner.nextLine();","lastModifiedDate":"2022-03-09"},{"lineNumber":408,"author":{"gitId":"alanlowzies"},"content":"            exerciseList.addExerciseToList(exercise);","lastModifiedDate":"2022-03-09"},{"lineNumber":409,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":410,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":411,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":412,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":413,"author":{"gitId":"alanlowzies"},"content":"     * Reads the workouts from the local workout file and stores them into a WorkoutList object.","lastModifiedDate":"2022-03-23"},{"lineNumber":414,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":415,"author":{"gitId":"alanlowzies"},"content":"     * @param workoutList An instance of the WorkoutList class.","lastModifiedDate":"2022-03-14"},{"lineNumber":416,"author":{"gitId":"alanlowzies"},"content":"     * @return Returns true if all workouts have been loaded into the application successfully.","lastModifiedDate":"2022-03-14"},{"lineNumber":417,"author":{"gitId":"alanlowzies"},"content":"     *         Otherwise, returns false.","lastModifiedDate":"2022-03-14"},{"lineNumber":418,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If the method is unable to open the workout file.","lastModifiedDate":"2022-03-14"},{"lineNumber":419,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":420,"author":{"gitId":"alanlowzies"},"content":"    public boolean loadWorkoutsFromFile(WorkoutList workoutList) throws IOException {","lastModifiedDate":"2022-03-09"},{"lineNumber":421,"author":{"gitId":"alanlowzies"},"content":"        boolean hasNoErrorsDuringLoad \u003d true;","lastModifiedDate":"2022-03-09"},{"lineNumber":422,"author":{"gitId":"alanlowzies"},"content":"        Scanner workoutFileReader \u003d new Scanner(getWorkoutFilePath());","lastModifiedDate":"2022-03-09"},{"lineNumber":423,"author":{"gitId":"alanlowzies"},"content":"        while (workoutFileReader.hasNext()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":424,"author":{"gitId":"alanlowzies"},"content":"            try {","lastModifiedDate":"2022-03-09"},{"lineNumber":425,"author":{"gitId":"alanlowzies"},"content":"                String workoutFileDataLine \u003d workoutFileReader.nextLine();","lastModifiedDate":"2022-03-09"},{"lineNumber":426,"author":{"gitId":"alanlowzies"},"content":"                String[] parsedWorkoutFileDataLine \u003d parseFileDataLine(workoutFileDataLine);","lastModifiedDate":"2022-03-09"},{"lineNumber":427,"author":{"gitId":"alanlowzies"},"content":"                addFileWorkoutToList(workoutList, parsedWorkoutFileDataLine);","lastModifiedDate":"2022-03-09"},{"lineNumber":428,"author":{"gitId":"alanlowzies"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-09"},{"lineNumber":429,"author":{"gitId":"alanlowzies"},"content":"                System.out.println(\"File data error: insufficient parameters in workout data.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":430,"author":{"gitId":"alanlowzies"},"content":"                hasNoErrorsDuringLoad \u003d false;","lastModifiedDate":"2022-03-09"},{"lineNumber":431,"author":{"gitId":"alanlowzies"},"content":"            } catch (InvalidExerciseException | InvalidWorkoutException e) {","lastModifiedDate":"2022-03-09"},{"lineNumber":432,"author":{"gitId":"alanlowzies"},"content":"                System.out.println(\"File data error: \" + e.getMessage());","lastModifiedDate":"2022-03-09"},{"lineNumber":433,"author":{"gitId":"alanlowzies"},"content":"                hasNoErrorsDuringLoad \u003d false;","lastModifiedDate":"2022-03-09"},{"lineNumber":434,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-03-09"},{"lineNumber":435,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":436,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":437,"author":{"gitId":"alanlowzies"},"content":"        return hasNoErrorsDuringLoad;","lastModifiedDate":"2022-03-09"},{"lineNumber":438,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":439,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":440,"author":{"gitId":"a1021492980"},"content":"    public boolean loadPlansFromFile(PlanList planList) throws IOException {","lastModifiedDate":"2022-03-20"},{"lineNumber":441,"author":{"gitId":"a1021492980"},"content":"        boolean hasNoErrorsDuringLoad \u003d true;","lastModifiedDate":"2022-03-20"},{"lineNumber":442,"author":{"gitId":"a1021492980"},"content":"        Scanner planFileReader \u003d new Scanner(getPlanFilePath());","lastModifiedDate":"2022-03-20"},{"lineNumber":443,"author":{"gitId":"a1021492980"},"content":"        while (planFileReader.hasNext()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":444,"author":{"gitId":"a1021492980"},"content":"            try {","lastModifiedDate":"2022-03-20"},{"lineNumber":445,"author":{"gitId":"a1021492980"},"content":"                String planFileDataLine \u003d planFileReader.nextLine();","lastModifiedDate":"2022-03-20"},{"lineNumber":446,"author":{"gitId":"a1021492980"},"content":"                String[] parsedPlanFileDataLine \u003d parsePlansFileData(planFileDataLine);","lastModifiedDate":"2022-03-20"},{"lineNumber":447,"author":{"gitId":"a1021492980"},"content":"                addFilePlanToList(planList, parsedPlanFileDataLine);","lastModifiedDate":"2022-03-20"},{"lineNumber":448,"author":{"gitId":"a1021492980"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-20"},{"lineNumber":449,"author":{"gitId":"a1021492980"},"content":"                System.out.println(\"File data error: insufficient parameters in plan data.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":450,"author":{"gitId":"a1021492980"},"content":"                hasNoErrorsDuringLoad \u003d false;","lastModifiedDate":"2022-03-20"},{"lineNumber":451,"author":{"gitId":"a1021492980"},"content":"            } catch (InvalidExerciseException | InvalidWorkoutException e) {","lastModifiedDate":"2022-03-20"},{"lineNumber":452,"author":{"gitId":"a1021492980"},"content":"                System.out.println(\"File data error: \" + e.getMessage());","lastModifiedDate":"2022-03-20"},{"lineNumber":453,"author":{"gitId":"a1021492980"},"content":"                hasNoErrorsDuringLoad \u003d false;","lastModifiedDate":"2022-03-20"},{"lineNumber":454,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":455,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":456,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":457,"author":{"gitId":"a1021492980"},"content":"        return hasNoErrorsDuringLoad;","lastModifiedDate":"2022-03-20"},{"lineNumber":458,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":459,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":460,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":461,"author":{"gitId":"alanlowzies"},"content":"     * Reads the days and corresponding plans from the local schedule file and stores the","lastModifiedDate":"2022-03-23"},{"lineNumber":462,"author":{"gitId":"alanlowzies"},"content":"     * parsed data into a DayList object.","lastModifiedDate":"2022-03-23"},{"lineNumber":463,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":464,"author":{"gitId":"alanlowzies"},"content":"     * @param dayList The DayList object to store the day schedule in.","lastModifiedDate":"2022-03-23"},{"lineNumber":465,"author":{"gitId":"alanlowzies"},"content":"     * @return Returns true if the entire schedule is loaded into the application successfully.","lastModifiedDate":"2022-03-23"},{"lineNumber":466,"author":{"gitId":"alanlowzies"},"content":"     *         Otherwise, returns false.","lastModifiedDate":"2022-03-23"},{"lineNumber":467,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If the method is unable to open the schedule file.","lastModifiedDate":"2022-03-23"},{"lineNumber":468,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":469,"author":{"gitId":"alanlowzies"},"content":"    public boolean loadScheduleFromFile(DayList dayList) throws IOException {","lastModifiedDate":"2022-03-23"},{"lineNumber":470,"author":{"gitId":"alanlowzies"},"content":"        boolean hasNoErrorsDuringLoad \u003d true;","lastModifiedDate":"2022-03-23"},{"lineNumber":471,"author":{"gitId":"alanlowzies"},"content":"        Scanner scheduleFileReader \u003d new Scanner(getScheduleFilePath());","lastModifiedDate":"2022-03-23"},{"lineNumber":472,"author":{"gitId":"alanlowzies"},"content":"        while (scheduleFileReader.hasNext()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":473,"author":{"gitId":"alanlowzies"},"content":"            try {","lastModifiedDate":"2022-03-23"},{"lineNumber":474,"author":{"gitId":"alanlowzies"},"content":"                String scheduleFileDataLine \u003d scheduleFileReader.nextLine();","lastModifiedDate":"2022-03-23"},{"lineNumber":475,"author":{"gitId":"alanlowzies"},"content":"                String[] parsedScheduleFileDataLine \u003d parseFileDataLine(scheduleFileDataLine);","lastModifiedDate":"2022-03-23"},{"lineNumber":476,"author":{"gitId":"alanlowzies"},"content":"                addFileScheduleToList(dayList, parsedScheduleFileDataLine);","lastModifiedDate":"2022-03-23"},{"lineNumber":477,"author":{"gitId":"alanlowzies"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-23"},{"lineNumber":478,"author":{"gitId":"alanlowzies"},"content":"                System.out.println(\"File data error: insufficient parameters in plan data.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":479,"author":{"gitId":"alanlowzies"},"content":"                hasNoErrorsDuringLoad \u003d false;","lastModifiedDate":"2022-03-23"},{"lineNumber":480,"author":{"gitId":"alanlowzies"},"content":"            } catch (InvalidScheduleException | InvalidPlanException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":481,"author":{"gitId":"alanlowzies"},"content":"                System.out.println(\"File data error: \" + e.getMessage());","lastModifiedDate":"2022-03-23"},{"lineNumber":482,"author":{"gitId":"alanlowzies"},"content":"                hasNoErrorsDuringLoad \u003d false;","lastModifiedDate":"2022-03-23"},{"lineNumber":483,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":484,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":485,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":486,"author":{"gitId":"alanlowzies"},"content":"        return hasNoErrorsDuringLoad;","lastModifiedDate":"2022-03-23"},{"lineNumber":487,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":488,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":489,"author":{"gitId":"a1021492980"},"content":"    public String[] parsePlansFileData(String fileDataLine) {","lastModifiedDate":"2022-03-20"},{"lineNumber":490,"author":{"gitId":"a1021492980"},"content":"        String[] parsedPlansData \u003d fileDataLine.split(FILE_DATA_DELIMITER_REGEX, 2);","lastModifiedDate":"2022-03-20"},{"lineNumber":491,"author":{"gitId":"a1021492980"},"content":"        return parsedPlansData;","lastModifiedDate":"2022-03-20"},{"lineNumber":492,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":493,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":494,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":495,"author":{"gitId":"alanlowzies"},"content":"     * Where applicable, parses a line of data read from a resource file by splitting the data according","lastModifiedDate":"2022-03-14"},{"lineNumber":496,"author":{"gitId":"alanlowzies"},"content":"     * to the delimiters.","lastModifiedDate":"2022-03-14"},{"lineNumber":497,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":498,"author":{"gitId":"alanlowzies"},"content":"     * @param fileDataLine The line of data that is read from a resource file.","lastModifiedDate":"2022-03-14"},{"lineNumber":499,"author":{"gitId":"alanlowzies"},"content":"     * @return An array containing the parsed line of data split by the delimiter.","lastModifiedDate":"2022-03-14"},{"lineNumber":500,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":501,"author":{"gitId":"alanlowzies"},"content":"    public String[] parseFileDataLine(String fileDataLine) {","lastModifiedDate":"2022-03-11"},{"lineNumber":502,"author":{"gitId":"alanlowzies"},"content":"        String[] parsedFileDataLine \u003d fileDataLine.split(FILE_DATA_DELIMITER_REGEX);","lastModifiedDate":"2022-03-09"},{"lineNumber":503,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":504,"author":{"gitId":"alanlowzies"},"content":"        for (int i \u003d 0; i \u003c parsedFileDataLine.length; i +\u003d 1) {","lastModifiedDate":"2022-03-27"},{"lineNumber":505,"author":{"gitId":"alanlowzies"},"content":"            parsedFileDataLine[i] \u003d parsedFileDataLine[i].trim();","lastModifiedDate":"2022-03-27"},{"lineNumber":506,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":507,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":508,"author":{"gitId":"alanlowzies"},"content":"        return parsedFileDataLine;","lastModifiedDate":"2022-03-09"},{"lineNumber":509,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":510,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":511,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":512,"author":{"gitId":"alanlowzies"},"content":"     * Adds a parsed workout data that is read from the resource file \u0027workouts.txt\u0027 into","lastModifiedDate":"2022-03-23"},{"lineNumber":513,"author":{"gitId":"alanlowzies"},"content":"     * the current application session\u0027s list of workouts.","lastModifiedDate":"2022-03-23"},{"lineNumber":514,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":515,"author":{"gitId":"alanlowzies"},"content":"     * @param workoutList         An instance of the WorkoutList class.","lastModifiedDate":"2022-03-14"},{"lineNumber":516,"author":{"gitId":"alanlowzies"},"content":"     * @param workoutFileDataLine An array of the parsed workout data read from the resource file.","lastModifiedDate":"2022-03-14"},{"lineNumber":517,"author":{"gitId":"alanlowzies"},"content":"     * @throws ArrayIndexOutOfBoundsException If the parsed data contains insufficient information.","lastModifiedDate":"2022-03-14"},{"lineNumber":518,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidExerciseException       If the parsed data contains an invalid exercise name.","lastModifiedDate":"2022-03-14"},{"lineNumber":519,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidWorkoutException        If the parsed data contains invalid or insufficient information needed","lastModifiedDate":"2022-03-14"},{"lineNumber":520,"author":{"gitId":"alanlowzies"},"content":"     *                                        to create a Workout object.","lastModifiedDate":"2022-03-14"},{"lineNumber":521,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":522,"author":{"gitId":"alanlowzies"},"content":"    public void addFileWorkoutToList(WorkoutList workoutList, String[] workoutFileDataLine)","lastModifiedDate":"2022-03-11"},{"lineNumber":523,"author":{"gitId":"alanlowzies"},"content":"            throws ArrayIndexOutOfBoundsException, InvalidExerciseException, InvalidWorkoutException {","lastModifiedDate":"2022-03-09"},{"lineNumber":524,"author":{"gitId":"alanlowzies"},"content":"        String workoutName \u003d workoutFileDataLine[0];","lastModifiedDate":"2022-03-09"},{"lineNumber":525,"author":{"gitId":"alanlowzies"},"content":"        String workoutReps \u003d workoutFileDataLine[1];","lastModifiedDate":"2022-03-09"},{"lineNumber":526,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":527,"author":{"gitId":"alanlowzies"},"content":"        String userArguments \u003d workoutName + \" \" + WorkoutCommand.CREATE_ACTION_REPS_KEYWORD + \" \" + workoutReps;","lastModifiedDate":"2022-03-09"},{"lineNumber":528,"author":{"gitId":"alanlowzies"},"content":"        workoutList.createAndAddWorkout(userArguments);","lastModifiedDate":"2022-03-09"},{"lineNumber":529,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":530,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":531,"author":{"gitId":"a1021492980"},"content":"    public void addFilePlanToList(PlanList planList, String[] planFileDataLine)","lastModifiedDate":"2022-03-20"},{"lineNumber":532,"author":{"gitId":"a1021492980"},"content":"            throws ArrayIndexOutOfBoundsException, InvalidExerciseException, InvalidWorkoutException {","lastModifiedDate":"2022-03-20"},{"lineNumber":533,"author":{"gitId":"a1021492980"},"content":"        String planName \u003d planFileDataLine[0].trim();","lastModifiedDate":"2022-03-20"},{"lineNumber":534,"author":{"gitId":"a1021492980"},"content":"        String workoutsInPlan \u003d planFileDataLine[1].trim();","lastModifiedDate":"2022-03-20"},{"lineNumber":535,"author":{"gitId":"a1021492980"},"content":"        String[] individualWorkout \u003d workoutsInPlan.split(FILE_DATA_DELIMITER_PLAN, -1);","lastModifiedDate":"2022-03-20"},{"lineNumber":536,"author":{"gitId":"a1021492980"},"content":"        ArrayList\u003cWorkout\u003e workoutsToAddInPlanList \u003d new ArrayList\u003cWorkout\u003e();","lastModifiedDate":"2022-03-20"},{"lineNumber":537,"author":{"gitId":"a1021492980"},"content":"        for (int i \u003d 0; i \u003c individualWorkout.length; i++) {","lastModifiedDate":"2022-03-20"},{"lineNumber":538,"author":{"gitId":"a1021492980"},"content":"            String[] workoutDetail \u003d individualWorkout[i].split(FILE_DATA_DELIMITER_REGEX);","lastModifiedDate":"2022-03-20"},{"lineNumber":539,"author":{"gitId":"a1021492980"},"content":"            workoutsToAddInPlanList.add(new Workout(workoutDetail[0].trim(),","lastModifiedDate":"2022-03-20"},{"lineNumber":540,"author":{"gitId":"a1021492980"},"content":"                    Integer.parseInt(workoutDetail[1].trim())));","lastModifiedDate":"2022-03-20"},{"lineNumber":541,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":542,"author":{"gitId":"a1021492980"},"content":"        Plan planToBeAdded \u003d new Plan(planName, workoutsToAddInPlanList);","lastModifiedDate":"2022-03-20"},{"lineNumber":543,"author":{"gitId":"a1021492980"},"content":"        planList.insertPlanIntoList(planName, planToBeAdded);","lastModifiedDate":"2022-03-20"},{"lineNumber":544,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":545,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":546,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":547,"author":{"gitId":"alanlowzies"},"content":"     * Adds a parsed day schedule data that is read from the resource file \u0027schedule.txt\u0027 into","lastModifiedDate":"2022-03-23"},{"lineNumber":548,"author":{"gitId":"alanlowzies"},"content":"     * the current application session\u0027s schedule of the days.","lastModifiedDate":"2022-03-23"},{"lineNumber":549,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":550,"author":{"gitId":"alanlowzies"},"content":"     * @param dayList              An instance of the DayList class.","lastModifiedDate":"2022-03-23"},{"lineNumber":551,"author":{"gitId":"alanlowzies"},"content":"     * @param scheduleFileDataLine An array of the parsed day schedule data read from the resource file.","lastModifiedDate":"2022-03-23"},{"lineNumber":552,"author":{"gitId":"alanlowzies"},"content":"     * @throws ArrayIndexOutOfBoundsException If the parsed data contains insufficient information.","lastModifiedDate":"2022-03-23"},{"lineNumber":553,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidScheduleException       If the parsed data contains invalid day schedule data or format.","lastModifiedDate":"2022-03-23"},{"lineNumber":554,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidPlanException           If the plan name could not be found in this session\u0027s list of plans.","lastModifiedDate":"2022-03-27"},{"lineNumber":555,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":556,"author":{"gitId":"alanlowzies"},"content":"    public void addFileScheduleToList(DayList dayList, String[] scheduleFileDataLine)","lastModifiedDate":"2022-03-23"},{"lineNumber":557,"author":{"gitId":"alanlowzies"},"content":"            throws ArrayIndexOutOfBoundsException, InvalidScheduleException, InvalidPlanException {","lastModifiedDate":"2022-03-27"},{"lineNumber":558,"author":{"gitId":"alanlowzies"},"content":"        String dayNumber \u003d scheduleFileDataLine[0];","lastModifiedDate":"2022-03-23"},{"lineNumber":559,"author":{"gitId":"alanlowzies"},"content":"        String planName \u003d scheduleFileDataLine[1];","lastModifiedDate":"2022-03-23"},{"lineNumber":560,"author":{"gitId":"alanlowzies"},"content":"        int planNameIndexNum \u003d getPlanList().getIndexNumFromPlanName(planName);","lastModifiedDate":"2022-03-27"},{"lineNumber":561,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":562,"author":{"gitId":"alanlowzies"},"content":"        String userArguments \u003d dayNumber + \" \" + planNameIndexNum;","lastModifiedDate":"2022-03-27"},{"lineNumber":563,"author":{"gitId":"alanlowzies"},"content":"        dayList.updateDay(userArguments);","lastModifiedDate":"2022-03-23"},{"lineNumber":564,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":565,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":566,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":567,"author":{"gitId":"alanlowzies"},"content":"     * Writes a newly-created Workout object into the workout resource file with the correct data format.","lastModifiedDate":"2022-03-14"},{"lineNumber":568,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":569,"author":{"gitId":"alanlowzies"},"content":"     * @param newWorkout The newly-created Workout object to be added into the resource file.","lastModifiedDate":"2022-03-14"},{"lineNumber":570,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException          If the workout resource file cannot be opened.","lastModifiedDate":"2022-03-14"},{"lineNumber":571,"author":{"gitId":"alanlowzies"},"content":"     * @throws NullPointerException If the Workout parameter is null.","lastModifiedDate":"2022-03-14"},{"lineNumber":572,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":573,"author":{"gitId":"alanlowzies"},"content":"    public void writeNewWorkoutToFile(Workout newWorkout) throws IOException, NullPointerException {","lastModifiedDate":"2022-03-11"},{"lineNumber":574,"author":{"gitId":"alanlowzies"},"content":"        String workoutInFileFormat \u003d convertWorkoutToFileDataFormat(newWorkout);","lastModifiedDate":"2022-03-09"},{"lineNumber":575,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":576,"author":{"gitId":"alanlowzies"},"content":"        FileWriter fileWriter \u003d new FileWriter(getWorkoutFilePath().toString(), true);","lastModifiedDate":"2022-03-09"},{"lineNumber":577,"author":{"gitId":"alanlowzies"},"content":"        fileWriter.append(workoutInFileFormat);","lastModifiedDate":"2022-03-09"},{"lineNumber":578,"author":{"gitId":"alanlowzies"},"content":"        fileWriter.append(System.lineSeparator());","lastModifiedDate":"2022-03-09"},{"lineNumber":579,"author":{"gitId":"alanlowzies"},"content":"        fileWriter.close();","lastModifiedDate":"2022-03-09"},{"lineNumber":580,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":581,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":582,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":583,"author":{"gitId":"alanlowzies"},"content":"     * Converts the data stored in the Workout object into a string that will be written to the","lastModifiedDate":"2022-03-14"},{"lineNumber":584,"author":{"gitId":"alanlowzies"},"content":"     * workout resource file.","lastModifiedDate":"2022-03-14"},{"lineNumber":585,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":586,"author":{"gitId":"alanlowzies"},"content":"     * @param workout The Workout object whose data will be written to the resource file.","lastModifiedDate":"2022-03-14"},{"lineNumber":587,"author":{"gitId":"alanlowzies"},"content":"     * @return The string that will be written to the resource file.","lastModifiedDate":"2022-03-14"},{"lineNumber":588,"author":{"gitId":"alanlowzies"},"content":"     * @throws NullPointerException If the Workout parameter is null.","lastModifiedDate":"2022-03-14"},{"lineNumber":589,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":590,"author":{"gitId":"alanlowzies"},"content":"    public String convertWorkoutToFileDataFormat(Workout workout) throws NullPointerException {","lastModifiedDate":"2022-03-11"},{"lineNumber":591,"author":{"gitId":"alanlowzies"},"content":"        if (workout \u003d\u003d null) {","lastModifiedDate":"2022-03-11"},{"lineNumber":592,"author":{"gitId":"alanlowzies"},"content":"            throw new NullPointerException(\"Workout object inputted into convertWorkoutToFileDataFormat() is null.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":593,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":594,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":595,"author":{"gitId":"alanlowzies"},"content":"        StringBuilder workoutInFileFormat \u003d new StringBuilder();","lastModifiedDate":"2022-03-09"},{"lineNumber":596,"author":{"gitId":"alanlowzies"},"content":"        workoutInFileFormat.append(workout.getExerciseName());","lastModifiedDate":"2022-03-09"},{"lineNumber":597,"author":{"gitId":"alanlowzies"},"content":"        workoutInFileFormat.append(FILE_DATA_DELIMITER);","lastModifiedDate":"2022-03-09"},{"lineNumber":598,"author":{"gitId":"alanlowzies"},"content":"        workoutInFileFormat.append(workout.getRepetitions());","lastModifiedDate":"2022-03-09"},{"lineNumber":599,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":600,"author":{"gitId":"alanlowzies"},"content":"        return workoutInFileFormat.toString();","lastModifiedDate":"2022-03-09"},{"lineNumber":601,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":602,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":603,"author":{"gitId":"a1021492980"},"content":"    public void writeNewPlanToFile(Plan newPlan) throws IOException, NullPointerException {","lastModifiedDate":"2022-03-20"},{"lineNumber":604,"author":{"gitId":"a1021492980"},"content":"        String planInFileFormat \u003d convertPlanToFileDataFormat(newPlan);","lastModifiedDate":"2022-03-20"},{"lineNumber":605,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":606,"author":{"gitId":"a1021492980"},"content":"        FileWriter fileWriter \u003d new FileWriter(getPlanFilePath().toString(), true);","lastModifiedDate":"2022-03-20"},{"lineNumber":607,"author":{"gitId":"a1021492980"},"content":"        fileWriter.append(planInFileFormat);","lastModifiedDate":"2022-03-20"},{"lineNumber":608,"author":{"gitId":"a1021492980"},"content":"        fileWriter.append(System.lineSeparator());","lastModifiedDate":"2022-03-20"},{"lineNumber":609,"author":{"gitId":"a1021492980"},"content":"        fileWriter.close();","lastModifiedDate":"2022-03-20"},{"lineNumber":610,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":611,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":612,"author":{"gitId":"a1021492980"},"content":"    public String convertPlanToFileDataFormat(Plan plan) throws NullPointerException {","lastModifiedDate":"2022-03-20"},{"lineNumber":613,"author":{"gitId":"a1021492980"},"content":"        if (plan \u003d\u003d null) {","lastModifiedDate":"2022-03-20"},{"lineNumber":614,"author":{"gitId":"a1021492980"},"content":"            throw new NullPointerException(\"Plan object inputted into convertPlanToFileDataFormat() is null.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":615,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":616,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":617,"author":{"gitId":"a1021492980"},"content":"        StringBuilder planInFileFormat \u003d new StringBuilder();","lastModifiedDate":"2022-03-20"},{"lineNumber":618,"author":{"gitId":"a1021492980"},"content":"        planInFileFormat.append(plan.getPlanName());","lastModifiedDate":"2022-03-20"},{"lineNumber":619,"author":{"gitId":"a1021492980"},"content":"        planInFileFormat.append(FILE_DATA_DELIMITER);","lastModifiedDate":"2022-03-20"},{"lineNumber":620,"author":{"gitId":"a1021492980"},"content":"        var workoutInPlan \u003d plan.getWorkoutsInPlanList();","lastModifiedDate":"2022-03-20"},{"lineNumber":621,"author":{"gitId":"a1021492980"},"content":"        for (int i \u003d 0; i \u003c workoutInPlan.size(); i++) {","lastModifiedDate":"2022-03-20"},{"lineNumber":622,"author":{"gitId":"a1021492980"},"content":"            planInFileFormat.append(convertWorkoutToFileDataFormat(workoutInPlan.get(i)));","lastModifiedDate":"2022-03-20"},{"lineNumber":623,"author":{"gitId":"a1021492980"},"content":"            if (i !\u003d workoutInPlan.size() - 1) {","lastModifiedDate":"2022-03-20"},{"lineNumber":624,"author":{"gitId":"a1021492980"},"content":"                planInFileFormat.append(FILE_DATA_DELIMITER_PLAN);","lastModifiedDate":"2022-03-20"},{"lineNumber":625,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":626,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":627,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":628,"author":{"gitId":"a1021492980"},"content":"        return planInFileFormat.toString();","lastModifiedDate":"2022-03-20"},{"lineNumber":629,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":630,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":631,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":632,"author":{"gitId":"alanlowzies"},"content":"     * Rewrites the entire list of workouts stored in the WorkoutList object into the workout resource file.","lastModifiedDate":"2022-03-14"},{"lineNumber":633,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":634,"author":{"gitId":"alanlowzies"},"content":"     * @param workoutList An instance of the WorkoutList class.","lastModifiedDate":"2022-03-14"},{"lineNumber":635,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException          If the application is unable to open the workout resource file.","lastModifiedDate":"2022-03-14"},{"lineNumber":636,"author":{"gitId":"alanlowzies"},"content":"     * @throws NullPointerException If a null object is given as a parameter for any of the methods called","lastModifiedDate":"2022-03-14"},{"lineNumber":637,"author":{"gitId":"alanlowzies"},"content":"     *                              by this method.","lastModifiedDate":"2022-03-14"},{"lineNumber":638,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":639,"author":{"gitId":"alanlowzies"},"content":"    public void rewriteAllWorkoutsToFile(WorkoutList workoutList) throws IOException, NullPointerException {","lastModifiedDate":"2022-03-11"},{"lineNumber":640,"author":{"gitId":"alanlowzies"},"content":"        ArrayList\u003cString\u003e listOfWorkouts \u003d workoutList.getWorkoutsDisplayList();","lastModifiedDate":"2022-03-17"},{"lineNumber":641,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":642,"author":{"gitId":"alanlowzies"},"content":"        FileWriter fileWriter \u003d new FileWriter(getWorkoutFilePath().toString());","lastModifiedDate":"2022-03-09"},{"lineNumber":643,"author":{"gitId":"alanlowzies"},"content":"        for (String workoutKey : listOfWorkouts) {","lastModifiedDate":"2022-03-17"},{"lineNumber":644,"author":{"gitId":"alanlowzies"},"content":"            Workout workoutObject \u003d workoutList.getWorkoutFromKey(workoutKey);","lastModifiedDate":"2022-03-17"},{"lineNumber":645,"author":{"gitId":"alanlowzies"},"content":"            assert (workoutObject !\u003d null) : \"Workout object is NULL\";","lastModifiedDate":"2022-03-17"},{"lineNumber":646,"author":{"gitId":"alanlowzies"},"content":"            String workoutInFileFormat \u003d convertWorkoutToFileDataFormat(workoutObject);","lastModifiedDate":"2022-03-17"},{"lineNumber":647,"author":{"gitId":"alanlowzies"},"content":"            fileWriter.append(workoutInFileFormat);","lastModifiedDate":"2022-03-09"},{"lineNumber":648,"author":{"gitId":"alanlowzies"},"content":"            fileWriter.append(System.lineSeparator());","lastModifiedDate":"2022-03-09"},{"lineNumber":649,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":650,"author":{"gitId":"alanlowzies"},"content":"        fileWriter.close();","lastModifiedDate":"2022-03-09"},{"lineNumber":651,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":652,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":653,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":654,"author":{"gitId":"TianaiYan"},"content":"     * Rewrites the entire list of plans stored in the PlanList object into the plan resource file.","lastModifiedDate":"2022-03-23"},{"lineNumber":655,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":656,"author":{"gitId":"TianaiYan"},"content":"     * @param planList An instance of the PlanList class.","lastModifiedDate":"2022-03-23"},{"lineNumber":657,"author":{"gitId":"TianaiYan"},"content":"     * @throws IOException          If the application is unable to open the plan resource file.","lastModifiedDate":"2022-03-23"},{"lineNumber":658,"author":{"gitId":"TianaiYan"},"content":"     * @throws NullPointerException If a null object is given as a parameter for any of the methods called","lastModifiedDate":"2022-03-23"},{"lineNumber":659,"author":{"gitId":"TianaiYan"},"content":"     *                              by this method.","lastModifiedDate":"2022-03-23"},{"lineNumber":660,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":661,"author":{"gitId":"TianaiYan"},"content":"    public void rewriteAllPlansToFile(PlanList planList) throws IOException, NullPointerException {","lastModifiedDate":"2022-03-23"},{"lineNumber":662,"author":{"gitId":"TianaiYan"},"content":"        ArrayList\u003cString\u003e listOfPlans \u003d planList.getPlansDisplayList();","lastModifiedDate":"2022-03-23"},{"lineNumber":663,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":664,"author":{"gitId":"TianaiYan"},"content":"        FileWriter fileWriter \u003d new FileWriter(getPlanFilePath().toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":665,"author":{"gitId":"TianaiYan"},"content":"        for (String planKey : listOfPlans) {","lastModifiedDate":"2022-03-23"},{"lineNumber":666,"author":{"gitId":"TianaiYan"},"content":"            Plan planObject \u003d planList.getPlanFromKey(planKey);","lastModifiedDate":"2022-03-23"},{"lineNumber":667,"author":{"gitId":"TianaiYan"},"content":"            assert (planObject !\u003d null) : \"Plan object is NULL\";","lastModifiedDate":"2022-03-23"},{"lineNumber":668,"author":{"gitId":"TianaiYan"},"content":"            String planInFileFormat \u003d convertPlanToFileDataFormat(planObject);","lastModifiedDate":"2022-03-23"},{"lineNumber":669,"author":{"gitId":"TianaiYan"},"content":"            fileWriter.append(planInFileFormat);","lastModifiedDate":"2022-03-23"},{"lineNumber":670,"author":{"gitId":"TianaiYan"},"content":"            fileWriter.append(System.lineSeparator());","lastModifiedDate":"2022-03-23"},{"lineNumber":671,"author":{"gitId":"TianaiYan"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":672,"author":{"gitId":"TianaiYan"},"content":"        fileWriter.close();","lastModifiedDate":"2022-03-23"},{"lineNumber":673,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":674,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":675,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":676,"author":{"gitId":"alanlowzies"},"content":"     * Rewrites the entire list of Days and their corresponding plans stored in the DayList object into","lastModifiedDate":"2022-03-23"},{"lineNumber":677,"author":{"gitId":"alanlowzies"},"content":"     * the schedule resource file.","lastModifiedDate":"2022-03-23"},{"lineNumber":678,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":679,"author":{"gitId":"alanlowzies"},"content":"     * @param dayList An instance of the DayList class.","lastModifiedDate":"2022-03-23"},{"lineNumber":680,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If the application is unable to open the schedule resource file.","lastModifiedDate":"2022-03-23"},{"lineNumber":681,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":682,"author":{"gitId":"alanlowzies"},"content":"    public void rewriteAllDaysScheduleToFile(DayList dayList) throws IOException {","lastModifiedDate":"2022-03-23"},{"lineNumber":683,"author":{"gitId":"alanlowzies"},"content":"        Day[] listOfDaysPlans \u003d dayList.getDayList();","lastModifiedDate":"2022-03-23"},{"lineNumber":684,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":685,"author":{"gitId":"alanlowzies"},"content":"        FileWriter fileWriter \u003d new FileWriter(getScheduleFilePath().toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":686,"author":{"gitId":"alanlowzies"},"content":"        for (int i \u003d 0; i \u003c listOfDaysPlans.length; i +\u003d 1) {","lastModifiedDate":"2022-03-23"},{"lineNumber":687,"author":{"gitId":"alanlowzies"},"content":"            if (listOfDaysPlans[i] \u003d\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":688,"author":{"gitId":"alanlowzies"},"content":"                // Day has no plan, nothing to write to the file. Proceed to the next Day.","lastModifiedDate":"2022-03-23"},{"lineNumber":689,"author":{"gitId":"alanlowzies"},"content":"                continue;","lastModifiedDate":"2022-03-23"},{"lineNumber":690,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":691,"author":{"gitId":"alanlowzies"},"content":"            assert (listOfDaysPlans[i] !\u003d null) : \"Element referenced is null, but it should not be.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":692,"author":{"gitId":"alanlowzies"},"content":"            String dayScheduleInFileFormat \u003d convertDayScheduleToFileDataFormat(listOfDaysPlans[i]);","lastModifiedDate":"2022-03-23"},{"lineNumber":693,"author":{"gitId":"alanlowzies"},"content":"            fileWriter.append(dayScheduleInFileFormat);","lastModifiedDate":"2022-03-23"},{"lineNumber":694,"author":{"gitId":"alanlowzies"},"content":"            fileWriter.append(System.lineSeparator());","lastModifiedDate":"2022-03-23"},{"lineNumber":695,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":696,"author":{"gitId":"alanlowzies"},"content":"        fileWriter.close();","lastModifiedDate":"2022-03-23"},{"lineNumber":697,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":698,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":699,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":700,"author":{"gitId":"alanlowzies"},"content":"     * Converts the data stored in the Day object into a string that will be written to the","lastModifiedDate":"2022-03-23"},{"lineNumber":701,"author":{"gitId":"alanlowzies"},"content":"     * schedule resource file.","lastModifiedDate":"2022-03-23"},{"lineNumber":702,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":703,"author":{"gitId":"alanlowzies"},"content":"     * @param day The Day object whose data will be written to the schedule resource file.","lastModifiedDate":"2022-03-23"},{"lineNumber":704,"author":{"gitId":"alanlowzies"},"content":"     * @return A string representing the Day object data.","lastModifiedDate":"2022-03-23"},{"lineNumber":705,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":706,"author":{"gitId":"alanlowzies"},"content":"    public String convertDayScheduleToFileDataFormat(Day day) {","lastModifiedDate":"2022-03-23"},{"lineNumber":707,"author":{"gitId":"alanlowzies"},"content":"        assert (day !\u003d null) : \"Day object is null, but it should not be.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":708,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":709,"author":{"gitId":"alanlowzies"},"content":"        StringBuilder dayScheduleInFileFormat \u003d new StringBuilder();","lastModifiedDate":"2022-03-23"},{"lineNumber":710,"author":{"gitId":"alanlowzies"},"content":"        dayScheduleInFileFormat.append(day.getDayNumber());","lastModifiedDate":"2022-03-23"},{"lineNumber":711,"author":{"gitId":"alanlowzies"},"content":"        dayScheduleInFileFormat.append(FILE_DATA_DELIMITER);","lastModifiedDate":"2022-03-23"},{"lineNumber":712,"author":{"gitId":"alanlowzies"},"content":"        dayScheduleInFileFormat.append(day.getPlanForThisDay());","lastModifiedDate":"2022-03-23"},{"lineNumber":713,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":714,"author":{"gitId":"alanlowzies"},"content":"        return dayScheduleInFileFormat.toString();","lastModifiedDate":"2022-03-23"},{"lineNumber":715,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":716,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"emilysim00":1,"alanlowzies":595,"TianaiYan":23,"a1021492980":97}},{"path":"src/main/java/storage/LogHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package storage;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":" * Handles the management of the logs. In particular, it contains methods to create the log file","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":" * as well as to direct the Logger objects used in the various classes in WerkIt! to write to the","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":" * log file specified in this class. Note that Logger objects will still need to be instantiated","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":" * in the classes that needs to be logged.","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"public class LogHandler {","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"    public static final String LOGS_DIRECTORY_NAME \u003d \"werkItLogs\";","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"    public static final String LOGS_FILENAME \u003d \"logs.log\";","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"    private static FileHandler logFileHandler;","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"    private static String workingDirectory \u003d System.getProperty(FileManager.USER_WORKING_DIRECTORY_PROPERTY);","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"    private static Path logFileDirectory \u003d Paths.get(workingDirectory, LOGS_DIRECTORY_NAME);","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"    private static Path logFilePath \u003d Paths.get(workingDirectory, LOGS_DIRECTORY_NAME, LOGS_FILENAME);","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"     * Resets the LogManager behaviour to allow logs to be written to the specified log file.","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"     * In addition, if necessary, creates the directory and file that will contain the logs.","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"     * This method should be preferably called the moment the program is started (i.e. located","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"     * at the start of the main method).","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"    public static void startLogHandler() {","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"            checkAndCreateLogsDirectory();","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Logs directory could not be created. Exiting program...\");","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"            System.exit(-1);","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"        assert (Files.exists(logFileDirectory)) : \"Logs directory does not exist.\";","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"            logFileHandler \u003d new FileHandler(logFilePath.toString(), true);","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"            logFileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"WARNING! Log file could not be opened. You may continue to use the\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"                    + \"program, but any logs generated in this application\u0027s session will not be\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"                    + \"logged to the file.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"     * Directs the Logger object specified as the parameter to use the FileHandler specified in this","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"     * class as its log handler.","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"     * @param logger The Logger object to direct it to a handler.","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"    public static void linkToFileLogger(Logger logger) {","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"        logger.addHandler(logFileHandler);","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"     * Checks if the required directory to store the log file exists. If it does not, the directory","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"     * will be created.","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If the required directory cannot be created.","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"    public static void checkAndCreateLogsDirectory() throws IOException {","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"        if (!Files.exists(logFileDirectory)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"            Files.createDirectory(logFileDirectory);","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"alanlowzies":76}},{"path":"src/main/java/storage/UnknownFileException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package storage;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"public class UnknownFileException extends Exception {","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"    public static final String UNKNOWN_FILE_MSG \u003d \"Uh on, an unknown file name was encountered.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"    private String unknownFilename;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"    public UnknownFileException(String unknownFilename, String errorMessage) {","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"        super(errorMessage);","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"        this.unknownFilename \u003d unknownFilename;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"    public String getUnknownFilename() {","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"        return this.unknownFilename;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"alanlowzies":16}},{"path":"src/main/java/textcolors/TextColor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"package textcolors;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":" * This class contains different ANSI color codes which can be used to color texts.","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"public class TextColor {","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"     * ANSI codes for different colors.","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"    public static final String COLOR_RESET \u003d \"\\u001B[0m\";","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"    public static final String COLOR_BLACK \u003d \"\\u001B[30m\";","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"    public static final String COLOR_RED \u003d \"\\u001B[31m\";","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"    public static final String COLOR_GREEN \u003d \"\\u001B[32m\";","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"    public static final String COLOR_YELLOW \u003d \"\\u001B[33m\";","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"    public static final String COLOR_BLUE \u003d \"\\u001B[34m\";","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"    public static final String COLOR_PURPLE \u003d \"\\u001B[35m\";","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"    public static final String COLOR_CYAN \u003d \"\\u001B[36m\";","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"    public static final String COLOR_WHITE \u003d \"\\u001B[37m\";","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"a1021492980":19}},{"path":"src/main/java/werkit/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package werkit;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"import commands.Command;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"import commands.ExitCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"import commands.InvalidCommandException;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"import commands.WorkoutCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"import commands.HelpCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"import commands.ExerciseCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"import commands.SearchCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"import commands.PlanCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"import commands.ScheduleCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"import data.plans.Plan;","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"import data.schedule.DayList;","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"import data.workouts.WorkoutList;","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"import storage.FileManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"import static commands.PlanCommand.DETAILS_ACTION_KEYWORD;","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"import static commands.ScheduleCommand.CLEAR_ACTION_KEYWORD;","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"import static commands.ScheduleCommand.CLEAR_ALL_ACTION_KEYWORD;","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"import static commands.SearchCommand.SEARCH_PLAN_ACTION_KEYWORD;","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"import static commands.SearchCommand.SEARCH_EXERCISE_ACTION_KEYWORD;","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"import static commands.SearchCommand.SEARCH_WORKOUT_ACTION_KEYWORD;","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"import static commands.SearchCommand.SEARCH_ALL_ACTION_KEYWORD;","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"import static commands.WorkoutCommand.CREATE_ACTION_KEYWORD;","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"import static commands.WorkoutCommand.LIST_ACTION_KEYWORD;","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"import static commands.WorkoutCommand.DELETE_ACTION_KEYWORD;","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"TianaiYan"},"content":"import static commands.WorkoutCommand.UPDATE_ACTION_KEYWORD;","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":" * This class will parse the input that the user enters into the WerkIt! application into data","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":" * that can be further processed by other classes in this application.","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":" * Design of the commands is inspired by the AddressBook-Level2 project","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":" * Link: https://se-education.org/addressbook-level2/","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"public class Parser {","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"    private UI ui;","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"    private ExerciseList exerciseList;","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"    private WorkoutList workoutList;","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"Musfirahe0556596"},"content":"    private PlanList planList;","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"emilysim00"},"content":"    private DayList dayList;","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"    private FileManager fileManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"a1021492980"},"content":"    public static final String SPACE_CHARACTER \u003d \" \";","lastModifiedDate":"2022-04-02"},{"lineNumber":50,"author":{"gitId":"a1021492980"},"content":"    public static final int EXPECTED_NUMBER_OF_PARAMETERS_HELP \u003d 1;","lastModifiedDate":"2022-04-02"},{"lineNumber":51,"author":{"gitId":"a1021492980"},"content":"    public static final int EXPECTED_NUMBER_OF_PARAMETERS_SEARCH_SPACE \u003d 2;","lastModifiedDate":"2022-04-02"},{"lineNumber":52,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final int EXPECTED_NUMBER_OF_PARAMETERS_NO_ARGUMENTS \u003d 2;","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final int EXPECTED_NUMBER_OF_PARAMETERS_WITH_ARGUMENTS \u003d 3;","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"a1021492980"},"content":"    private static Logger logger \u003d Logger.getLogger(Parser.class.getName());","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"     * Constructs the Parser object with the required components for this instance to operate.","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"     * @param ui           An instance of the UI class.","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"     * @param exerciseList An instance of the ExerciseList class.","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"     * @param workoutList  An instance of the WorkoutList class.","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"emilysim00"},"content":"     * @param planList An instance of the PlanList class.","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"emilysim00"},"content":"     * @param dayList An instance of the DayList class.","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"     * @param fileManager  An instance of the FileManager class.","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"Musfirahe0556596"},"content":"    public Parser(UI ui, ExerciseList exerciseList, WorkoutList workoutList,","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"emilysim00"},"content":"                  FileManager fileManager, PlanList planList, DayList dayList) {","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-03-05"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"        this.exerciseList \u003d exerciseList;","lastModifiedDate":"2022-03-05"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"        this.workoutList \u003d workoutList;","lastModifiedDate":"2022-03-05"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"        this.fileManager \u003d fileManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"Musfirahe0556596"},"content":"        this.planList \u003d planList;","lastModifiedDate":"2022-03-19"},{"lineNumber":73,"author":{"gitId":"emilysim00"},"content":"        this.dayList \u003d dayList;","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"        LogHandler.linkToFileLogger(logger);","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":77,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":78,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"alanlowzies"},"content":"     * Gets the UI object stored in this Parser object.","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"     * @return The UI object.","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"alanlowzies"},"content":"    public UI getUi() {","lastModifiedDate":"2022-03-05"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"        return ui;","lastModifiedDate":"2022-03-05"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"     * Gets the ExerciseList object stored in this Parser object.","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"alanlowzies"},"content":"     * @return The ExerciseList object.","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"alanlowzies"},"content":"    public ExerciseList getExerciseList() {","lastModifiedDate":"2022-03-05"},{"lineNumber":93,"author":{"gitId":"alanlowzies"},"content":"        return exerciseList;","lastModifiedDate":"2022-03-05"},{"lineNumber":94,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":95,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":96,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"alanlowzies"},"content":"     * Gets the WorkoutList object stored in this Parser object.","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"alanlowzies"},"content":"     * @return The WorkoutList object.","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"alanlowzies"},"content":"    public WorkoutList getWorkoutList() {","lastModifiedDate":"2022-03-05"},{"lineNumber":102,"author":{"gitId":"alanlowzies"},"content":"        return workoutList;","lastModifiedDate":"2022-03-05"},{"lineNumber":103,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":104,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":105,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"alanlowzies"},"content":"     * Parses the user\u0027s input and determines the correct command object to instantiate.","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"alanlowzies"},"content":"     * @param userInput The unparsed input given by the user.","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"alanlowzies"},"content":"     * @return A subclass of the Command object. The type of Command object is determined based on the","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"alanlowzies"},"content":"     *         user\u0027s input.","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"alanlowzies"},"content":"     * @throws ArrayIndexOutOfBoundsException If the user\u0027s input contains insufficient information to parse.","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidCommandException        If the user\u0027s input contains invalid or insufficient information","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"alanlowzies"},"content":"     *                                        to parse.","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"alanlowzies"},"content":"    public Command parseUserInput(String userInput) throws ArrayIndexOutOfBoundsException,","lastModifiedDate":"2022-03-05"},{"lineNumber":116,"author":{"gitId":"alanlowzies"},"content":"            InvalidCommandException {","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"alanlowzies"},"content":"        // Check for illegal characters","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"alanlowzies"},"content":"        boolean hasIllegalCharacters \u003d checkInputForIllegalCharacters(userInput);","lastModifiedDate":"2022-03-09"},{"lineNumber":119,"author":{"gitId":"alanlowzies"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-09"},{"lineNumber":120,"author":{"gitId":"alanlowzies"},"content":"        if (hasIllegalCharacters) {","lastModifiedDate":"2022-03-09"},{"lineNumber":121,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.WARNING, \"Illegal character used by user.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"alanlowzies"},"content":"            throw new InvalidCommandException(className, InvalidCommandException.ILLEGAL_CHARACTER_USED_ERROR_MSG);","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":125,"author":{"gitId":"alanlowzies"},"content":"        // Determine the type of Command subclass to instantiate","lastModifiedDate":"2022-03-05"},{"lineNumber":126,"author":{"gitId":"alanlowzies"},"content":"        String commandKeyword \u003d userInput.split(\" \", 2)[0];","lastModifiedDate":"2022-03-05"},{"lineNumber":127,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":128,"author":{"gitId":"alanlowzies"},"content":"        switch (commandKeyword) {","lastModifiedDate":"2022-03-05"},{"lineNumber":129,"author":{"gitId":"alanlowzies"},"content":"        case WorkoutCommand.BASE_KEYWORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":130,"author":{"gitId":"alanlowzies"},"content":"            return createWorkoutCommand(userInput);","lastModifiedDate":"2022-03-05"},{"lineNumber":131,"author":{"gitId":"alanlowzies"},"content":"        case ExitCommand.BASE_KEYWORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":132,"author":{"gitId":"alanlowzies"},"content":"            return createExitCommand(userInput);","lastModifiedDate":"2022-03-05"},{"lineNumber":133,"author":{"gitId":"a1021492980"},"content":"        case HelpCommand.BASE_KEYWORD:","lastModifiedDate":"2022-03-09"},{"lineNumber":134,"author":{"gitId":"a1021492980"},"content":"            return createHelpCommand(userInput);","lastModifiedDate":"2022-03-09"},{"lineNumber":135,"author":{"gitId":"a1021492980"},"content":"        case ExerciseCommand.BASE_KEYWORD:","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"a1021492980"},"content":"            return createExerciseCommand(userInput);","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"a1021492980"},"content":"        case SearchCommand.BASE_KEYWORD:","lastModifiedDate":"2022-03-19"},{"lineNumber":138,"author":{"gitId":"a1021492980"},"content":"            return createSearchCommand(userInput);","lastModifiedDate":"2022-03-19"},{"lineNumber":139,"author":{"gitId":"Musfirahe0556596"},"content":"        case PlanCommand.BASE_KEYWORD:","lastModifiedDate":"2022-03-19"},{"lineNumber":140,"author":{"gitId":"Musfirahe0556596"},"content":"            return createPlanCommand(userInput);","lastModifiedDate":"2022-03-19"},{"lineNumber":141,"author":{"gitId":"emilysim00"},"content":"        case ScheduleCommand.BASE_KEYWORD:","lastModifiedDate":"2022-03-21"},{"lineNumber":142,"author":{"gitId":"emilysim00"},"content":"            return createScheduleCommand(userInput);","lastModifiedDate":"2022-03-21"},{"lineNumber":143,"author":{"gitId":"alanlowzies"},"content":"        default:","lastModifiedDate":"2022-03-05"},{"lineNumber":144,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.WARNING, \"Unknown command entered by user.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"alanlowzies"},"content":"            throw new InvalidCommandException(className, InvalidCommandException.INVALID_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-05"},{"lineNumber":146,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":147,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":148,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":149,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":150,"author":{"gitId":"alanlowzies"},"content":"     * Checks if the user\u0027s input contains illegal characters. Illegal characters are characters that are","lastModifiedDate":"2022-03-14"},{"lineNumber":151,"author":{"gitId":"alanlowzies"},"content":"     * required by the application for purposes such as reading/writing to resource files. Thus, these","lastModifiedDate":"2022-03-14"},{"lineNumber":152,"author":{"gitId":"alanlowzies"},"content":"     * characters cannot be used by the user.","lastModifiedDate":"2022-03-14"},{"lineNumber":153,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":154,"author":{"gitId":"alanlowzies"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-14"},{"lineNumber":155,"author":{"gitId":"alanlowzies"},"content":"     * @return Returns true if the user\u0027s input contains at least one illegal character. Otherwise,","lastModifiedDate":"2022-03-14"},{"lineNumber":156,"author":{"gitId":"alanlowzies"},"content":"     *         returns false.","lastModifiedDate":"2022-03-14"},{"lineNumber":157,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":158,"author":{"gitId":"alanlowzies"},"content":"    private boolean checkInputForIllegalCharacters(String userInput) {","lastModifiedDate":"2022-03-09"},{"lineNumber":159,"author":{"gitId":"alanlowzies"},"content":"        for (String illegalCharacter : FileManager.ILLEGAL_CHARACTERS) {","lastModifiedDate":"2022-03-09"},{"lineNumber":160,"author":{"gitId":"alanlowzies"},"content":"            if (userInput.contains(illegalCharacter)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":161,"author":{"gitId":"alanlowzies"},"content":"                return true;","lastModifiedDate":"2022-03-09"},{"lineNumber":162,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-03-09"},{"lineNumber":163,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":164,"author":{"gitId":"alanlowzies"},"content":"        return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":165,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":166,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":167,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":168,"author":{"gitId":"alanlowzies"},"content":"     * Creates a new workout command with the appropriate parameters stored into the object.","lastModifiedDate":"2022-03-14"},{"lineNumber":169,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":170,"author":{"gitId":"alanlowzies"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-14"},{"lineNumber":171,"author":{"gitId":"alanlowzies"},"content":"     * @return A WorkoutCommand object containing the parsed parameters obtained from the user\u0027s input.","lastModifiedDate":"2022-03-14"},{"lineNumber":172,"author":{"gitId":"alanlowzies"},"content":"     * @throws ArrayIndexOutOfBoundsException If the user\u0027s input contains insufficient information to parse.","lastModifiedDate":"2022-03-14"},{"lineNumber":173,"author":{"gitId":"alanlowzies"},"content":"     * @throws InvalidCommandException        If the user\u0027s input contains invalid or insufficient information","lastModifiedDate":"2022-03-14"},{"lineNumber":174,"author":{"gitId":"alanlowzies"},"content":"     *                                        to parse.","lastModifiedDate":"2022-03-14"},{"lineNumber":175,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":176,"author":{"gitId":"alanlowzies"},"content":"    public WorkoutCommand createWorkoutCommand(String userInput) throws ArrayIndexOutOfBoundsException,","lastModifiedDate":"2022-03-05"},{"lineNumber":177,"author":{"gitId":"alanlowzies"},"content":"            InvalidCommandException {","lastModifiedDate":"2022-03-14"},{"lineNumber":178,"author":{"gitId":"alanlowzies"},"content":"        // Determine the action the user has entered","lastModifiedDate":"2022-03-05"},{"lineNumber":179,"author":{"gitId":"alanlowzies"},"content":"        String actionKeyword \u003d userInput.split(\" \", 3)[1];","lastModifiedDate":"2022-03-05"},{"lineNumber":180,"author":{"gitId":"emilysim00"},"content":"        String arguments \u003d null;","lastModifiedDate":"2022-03-07"},{"lineNumber":181,"author":{"gitId":"Musfirahe0556596"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-11"},{"lineNumber":182,"author":{"gitId":"emilysim00"},"content":"        switch (actionKeyword) {","lastModifiedDate":"2022-03-07"},{"lineNumber":183,"author":{"gitId":"emilysim00"},"content":"        case CREATE_ACTION_KEYWORD:","lastModifiedDate":"2022-03-07"},{"lineNumber":184,"author":{"gitId":"Musfirahe0556596"},"content":"            if (userInput.split(\" \", 3).length \u003c EXPECTED_NUMBER_OF_PARAMETERS_WITH_ARGUMENTS) {","lastModifiedDate":"2022-03-11"},{"lineNumber":185,"author":{"gitId":"emilysim00"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid create workout command action.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":186,"author":{"gitId":"Musfirahe0556596"},"content":"                throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-11"},{"lineNumber":187,"author":{"gitId":"Musfirahe0556596"},"content":"                        InvalidCommandException.INVALID_NEW_WORKOUT_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-11"},{"lineNumber":188,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":189,"author":{"gitId":"Musfirahe0556596"},"content":"            arguments \u003d userInput.split(\" \", 3)[2];","lastModifiedDate":"2022-03-11"},{"lineNumber":190,"author":{"gitId":"Musfirahe0556596"},"content":"            break;","lastModifiedDate":"2022-03-11"},{"lineNumber":191,"author":{"gitId":"Musfirahe0556596"},"content":"        case DELETE_ACTION_KEYWORD:","lastModifiedDate":"2022-03-09"},{"lineNumber":192,"author":{"gitId":"Musfirahe0556596"},"content":"            if (userInput.split(\" \", 3).length \u003c EXPECTED_NUMBER_OF_PARAMETERS_WITH_ARGUMENTS) {","lastModifiedDate":"2022-03-11"},{"lineNumber":193,"author":{"gitId":"emilysim00"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid delete workout command action.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":194,"author":{"gitId":"Musfirahe0556596"},"content":"                throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-11"},{"lineNumber":195,"author":{"gitId":"Musfirahe0556596"},"content":"                        InvalidCommandException.INVALID_DELETE_WORKOUT_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-11"},{"lineNumber":196,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":197,"author":{"gitId":"emilysim00"},"content":"            arguments \u003d userInput.split(\" \", 3)[2];","lastModifiedDate":"2022-03-07"},{"lineNumber":198,"author":{"gitId":"emilysim00"},"content":"            break;","lastModifiedDate":"2022-03-07"},{"lineNumber":199,"author":{"gitId":"TianaiYan"},"content":"        case UPDATE_ACTION_KEYWORD:","lastModifiedDate":"2022-03-12"},{"lineNumber":200,"author":{"gitId":"TianaiYan"},"content":"            if (userInput.split(\" \", 3).length \u003c EXPECTED_NUMBER_OF_PARAMETERS_WITH_ARGUMENTS) {","lastModifiedDate":"2022-03-12"},{"lineNumber":201,"author":{"gitId":"emilysim00"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid update workout command action.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":202,"author":{"gitId":"TianaiYan"},"content":"                throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-12"},{"lineNumber":203,"author":{"gitId":"TianaiYan"},"content":"                        InvalidCommandException.INVALID_UPDATE_WORKOUT_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-12"},{"lineNumber":204,"author":{"gitId":"TianaiYan"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":205,"author":{"gitId":"TianaiYan"},"content":"            arguments \u003d userInput.split(\" \", 3)[2];","lastModifiedDate":"2022-03-12"},{"lineNumber":206,"author":{"gitId":"TianaiYan"},"content":"            break;","lastModifiedDate":"2022-03-12"},{"lineNumber":207,"author":{"gitId":"emilysim00"},"content":"        case LIST_ACTION_KEYWORD:","lastModifiedDate":"2022-03-07"},{"lineNumber":208,"author":{"gitId":"Musfirahe0556596"},"content":"            if (userInput.split(\" \", -1).length \u003e EXPECTED_NUMBER_OF_PARAMETERS_NO_ARGUMENTS) {","lastModifiedDate":"2022-03-11"},{"lineNumber":209,"author":{"gitId":"emilysim00"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid list workout command action.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":210,"author":{"gitId":"a1021492980"},"content":"                throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-16"},{"lineNumber":211,"author":{"gitId":"a1021492980"},"content":"                        InvalidCommandException.INVALID_WORKOUT_LIST_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-16"},{"lineNumber":212,"author":{"gitId":"emilysim00"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":213,"author":{"gitId":"emilysim00"},"content":"            break;","lastModifiedDate":"2022-03-07"},{"lineNumber":214,"author":{"gitId":"alanlowzies"},"content":"        default:","lastModifiedDate":"2022-03-10"},{"lineNumber":215,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.WARNING, \"User has entered an invalid workout command action.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":216,"author":{"gitId":"a1021492980"},"content":"            throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-16"},{"lineNumber":217,"author":{"gitId":"a1021492980"},"content":"                    InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-16"},{"lineNumber":218,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":219,"author":{"gitId":"TianaiYan"},"content":"        return new WorkoutCommand(userInput, fileManager, workoutList, planList, actionKeyword, arguments);","lastModifiedDate":"2022-03-27"},{"lineNumber":220,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":221,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":222,"author":{"gitId":"alanlowzies"},"content":"    public ExitCommand createExitCommand(String userInput) {","lastModifiedDate":"2022-03-05"},{"lineNumber":223,"author":{"gitId":"alanlowzies"},"content":"        ExitCommand newCommand \u003d new ExitCommand(userInput);","lastModifiedDate":"2022-03-05"},{"lineNumber":224,"author":{"gitId":"alanlowzies"},"content":"        return newCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":225,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":226,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":227,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":228,"author":{"gitId":"a1021492980"},"content":"     * Creates a new exercise command with the appropriate parameters stored into the object.","lastModifiedDate":"2022-03-23"},{"lineNumber":229,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":230,"author":{"gitId":"a1021492980"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-23"},{"lineNumber":231,"author":{"gitId":"a1021492980"},"content":"     * @return A ExerciseCommand object containing the parsed parameters obtained from the user\u0027s input.","lastModifiedDate":"2022-03-23"},{"lineNumber":232,"author":{"gitId":"a1021492980"},"content":"     * @throws ArrayIndexOutOfBoundsException If the user\u0027s input contains insufficient information to parse.","lastModifiedDate":"2022-03-23"},{"lineNumber":233,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidCommandException        If the user\u0027s input contains invalid or insufficient information","lastModifiedDate":"2022-03-23"},{"lineNumber":234,"author":{"gitId":"a1021492980"},"content":"     *                                        to parse.","lastModifiedDate":"2022-03-23"},{"lineNumber":235,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":236,"author":{"gitId":"Musfirahe0556596"},"content":"    public ExerciseCommand createExerciseCommand(String userInput) throws","lastModifiedDate":"2022-03-14"},{"lineNumber":237,"author":{"gitId":"Musfirahe0556596"},"content":"            InvalidCommandException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2022-03-14"},{"lineNumber":238,"author":{"gitId":"a1021492980"},"content":"        logger.entering(getClass().getName(), \"createExerciseCommand\");","lastModifiedDate":"2022-03-13"},{"lineNumber":239,"author":{"gitId":"a1021492980"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-16"},{"lineNumber":240,"author":{"gitId":"a1021492980"},"content":"        String actionKeyword \u003d userInput.split(\" \", 3)[1];","lastModifiedDate":"2022-03-10"},{"lineNumber":241,"author":{"gitId":"a1021492980"},"content":"        String arguments \u003d null;","lastModifiedDate":"2022-03-10"},{"lineNumber":242,"author":{"gitId":"a1021492980"},"content":"        switch (actionKeyword) {","lastModifiedDate":"2022-03-10"},{"lineNumber":243,"author":{"gitId":"a1021492980"},"content":"        case LIST_ACTION_KEYWORD:","lastModifiedDate":"2022-03-10"},{"lineNumber":244,"author":{"gitId":"a1021492980"},"content":"            if (userInput.split(\" \", -1).length \u003e EXPECTED_NUMBER_OF_PARAMETERS_NO_ARGUMENTS) {","lastModifiedDate":"2022-03-16"},{"lineNumber":245,"author":{"gitId":"a1021492980"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid list exercise command action.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":246,"author":{"gitId":"a1021492980"},"content":"                throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-16"},{"lineNumber":247,"author":{"gitId":"a1021492980"},"content":"                        InvalidCommandException.INVALID_EXERCISE_LIST_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-16"},{"lineNumber":248,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":249,"author":{"gitId":"a1021492980"},"content":"            break;","lastModifiedDate":"2022-03-10"},{"lineNumber":250,"author":{"gitId":"a1021492980"},"content":"        default:","lastModifiedDate":"2022-03-10"},{"lineNumber":251,"author":{"gitId":"a1021492980"},"content":"            logger.log(Level.WARNING, \"User has entered an invalid action under exercise command.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":252,"author":{"gitId":"a1021492980"},"content":"            throw new InvalidCommandException(className, InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-10"},{"lineNumber":253,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":254,"author":{"gitId":"a1021492980"},"content":"        logger.exiting(getClass().getName(), \"createExerciseCommand\");","lastModifiedDate":"2022-03-13"},{"lineNumber":255,"author":{"gitId":"a1021492980"},"content":"        return new ExerciseCommand(userInput, ui, exerciseList, actionKeyword, arguments);","lastModifiedDate":"2022-03-10"},{"lineNumber":256,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":257,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":258,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":259,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":260,"author":{"gitId":"a1021492980"},"content":"     * Creates a new help command.","lastModifiedDate":"2022-03-23"},{"lineNumber":261,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":262,"author":{"gitId":"a1021492980"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-23"},{"lineNumber":263,"author":{"gitId":"a1021492980"},"content":"     * @return A HelpCommand object.","lastModifiedDate":"2022-03-23"},{"lineNumber":264,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":265,"author":{"gitId":"a1021492980"},"content":"    public HelpCommand createHelpCommand(String userInput) throws InvalidCommandException {","lastModifiedDate":"2022-04-02"},{"lineNumber":266,"author":{"gitId":"a1021492980"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-04-02"},{"lineNumber":267,"author":{"gitId":"a1021492980"},"content":"        if (userInput.trim().split(\" \", -1).length \u003e EXPECTED_NUMBER_OF_PARAMETERS_HELP) {","lastModifiedDate":"2022-04-02"},{"lineNumber":268,"author":{"gitId":"a1021492980"},"content":"            throw new InvalidCommandException(className,","lastModifiedDate":"2022-04-02"},{"lineNumber":269,"author":{"gitId":"a1021492980"},"content":"                    InvalidCommandException.INVALID_HELP_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-04-02"},{"lineNumber":270,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-04-02"},{"lineNumber":271,"author":{"gitId":"a1021492980"},"content":"        return new HelpCommand(userInput);","lastModifiedDate":"2022-03-09"},{"lineNumber":272,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":273,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":274,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":275,"author":{"gitId":"a1021492980"},"content":"     * Creates a new search command with the appropriate parameters stored into the object.","lastModifiedDate":"2022-03-23"},{"lineNumber":276,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":277,"author":{"gitId":"a1021492980"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-23"},{"lineNumber":278,"author":{"gitId":"a1021492980"},"content":"     * @return A SearchCommand object containing the parsed parameters obtained from the user\u0027s input.","lastModifiedDate":"2022-03-23"},{"lineNumber":279,"author":{"gitId":"a1021492980"},"content":"     * @throws ArrayIndexOutOfBoundsException If the user\u0027s input contains insufficient information to parse.","lastModifiedDate":"2022-03-23"},{"lineNumber":280,"author":{"gitId":"a1021492980"},"content":"     * @throws InvalidCommandException        If the user\u0027s input contains invalid or insufficient information","lastModifiedDate":"2022-03-23"},{"lineNumber":281,"author":{"gitId":"a1021492980"},"content":"     *                                        to parse.","lastModifiedDate":"2022-03-23"},{"lineNumber":282,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":283,"author":{"gitId":"a1021492980"},"content":"    public SearchCommand createSearchCommand(String userInput) throws","lastModifiedDate":"2022-03-19"},{"lineNumber":284,"author":{"gitId":"a1021492980"},"content":"            InvalidCommandException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2022-03-19"},{"lineNumber":285,"author":{"gitId":"a1021492980"},"content":"        String actionKeyword \u003d userInput.split(\" \", 3)[1];","lastModifiedDate":"2022-03-19"},{"lineNumber":286,"author":{"gitId":"a1021492980"},"content":"        String arguments \u003d null;","lastModifiedDate":"2022-03-19"},{"lineNumber":287,"author":{"gitId":"a1021492980"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-19"},{"lineNumber":288,"author":{"gitId":"a1021492980"},"content":"        switch (actionKeyword) {","lastModifiedDate":"2022-03-19"},{"lineNumber":289,"author":{"gitId":"a1021492980"},"content":"        case SEARCH_EXERCISE_ACTION_KEYWORD:","lastModifiedDate":"2022-03-19"},{"lineNumber":290,"author":{"gitId":"a1021492980"},"content":"            if (userInput.split(\" \", 3).length \u003c EXPECTED_NUMBER_OF_PARAMETERS_WITH_ARGUMENTS) {","lastModifiedDate":"2022-03-19"},{"lineNumber":291,"author":{"gitId":"a1021492980"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid search exercise command action.\");","lastModifiedDate":"2022-03-19"},{"lineNumber":292,"author":{"gitId":"a1021492980"},"content":"                throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-19"},{"lineNumber":293,"author":{"gitId":"a1021492980"},"content":"                        InvalidCommandException.INVALID_SEARCH_EXERCISE_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-19"},{"lineNumber":294,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":295,"author":{"gitId":"a1021492980"},"content":"            arguments \u003d userInput.split(\" \", 3)[2].trim();","lastModifiedDate":"2022-03-23"},{"lineNumber":296,"author":{"gitId":"a1021492980"},"content":"            return new SearchCommand(userInput, ui, exerciseList, actionKeyword, arguments);","lastModifiedDate":"2022-03-20"},{"lineNumber":297,"author":{"gitId":"a1021492980"},"content":"        case SEARCH_PLAN_ACTION_KEYWORD:","lastModifiedDate":"2022-03-20"},{"lineNumber":298,"author":{"gitId":"a1021492980"},"content":"            if (userInput.split(\" \", 3).length \u003c EXPECTED_NUMBER_OF_PARAMETERS_WITH_ARGUMENTS) {","lastModifiedDate":"2022-03-20"},{"lineNumber":299,"author":{"gitId":"a1021492980"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid search plan command action.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":300,"author":{"gitId":"a1021492980"},"content":"                throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-20"},{"lineNumber":301,"author":{"gitId":"a1021492980"},"content":"                        InvalidCommandException.INVALID_SEARCH_PLAN_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-23"},{"lineNumber":302,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":303,"author":{"gitId":"a1021492980"},"content":"            arguments \u003d userInput.split(\" \", 3)[2].trim();","lastModifiedDate":"2022-03-23"},{"lineNumber":304,"author":{"gitId":"a1021492980"},"content":"            return new SearchCommand(userInput, ui, planList, actionKeyword, arguments);","lastModifiedDate":"2022-03-20"},{"lineNumber":305,"author":{"gitId":"a1021492980"},"content":"        case SEARCH_WORKOUT_ACTION_KEYWORD:","lastModifiedDate":"2022-03-23"},{"lineNumber":306,"author":{"gitId":"a1021492980"},"content":"            if (userInput.split(\" \", 3).length \u003c EXPECTED_NUMBER_OF_PARAMETERS_WITH_ARGUMENTS) {","lastModifiedDate":"2022-03-23"},{"lineNumber":307,"author":{"gitId":"a1021492980"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid search workout command action.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":308,"author":{"gitId":"a1021492980"},"content":"                throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-23"},{"lineNumber":309,"author":{"gitId":"a1021492980"},"content":"                        InvalidCommandException.INVALID_SEARCH_WORKOUT_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-23"},{"lineNumber":310,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":311,"author":{"gitId":"a1021492980"},"content":"            arguments \u003d userInput.split(\" \", 3)[2].trim();","lastModifiedDate":"2022-03-23"},{"lineNumber":312,"author":{"gitId":"a1021492980"},"content":"            return new SearchCommand(userInput, ui, workoutList, actionKeyword, arguments);","lastModifiedDate":"2022-03-23"},{"lineNumber":313,"author":{"gitId":"a1021492980"},"content":"        case SEARCH_ALL_ACTION_KEYWORD:","lastModifiedDate":"2022-03-23"},{"lineNumber":314,"author":{"gitId":"a1021492980"},"content":"            if (userInput.split(\" \", 3).length \u003d\u003d EXPECTED_NUMBER_OF_PARAMETERS_SEARCH_SPACE) {","lastModifiedDate":"2022-04-02"},{"lineNumber":315,"author":{"gitId":"a1021492980"},"content":"                arguments \u003d SPACE_CHARACTER;","lastModifiedDate":"2022-04-02"},{"lineNumber":316,"author":{"gitId":"a1021492980"},"content":"                return new SearchCommand(userInput, ui, exerciseList, workoutList, planList, actionKeyword, arguments);","lastModifiedDate":"2022-04-02"},{"lineNumber":317,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-04-02"},{"lineNumber":318,"author":{"gitId":"a1021492980"},"content":"            if (userInput.split(\" \", 3).length \u003c EXPECTED_NUMBER_OF_PARAMETERS_WITH_ARGUMENTS) {","lastModifiedDate":"2022-03-23"},{"lineNumber":319,"author":{"gitId":"a1021492980"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid search all command action.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":320,"author":{"gitId":"a1021492980"},"content":"                throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-23"},{"lineNumber":321,"author":{"gitId":"a1021492980"},"content":"                        InvalidCommandException.INVALID_SEARCH_ALL_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-23"},{"lineNumber":322,"author":{"gitId":"a1021492980"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":323,"author":{"gitId":"a1021492980"},"content":"            arguments \u003d userInput.split(\" \", 3)[2].trim();","lastModifiedDate":"2022-03-23"},{"lineNumber":324,"author":{"gitId":"a1021492980"},"content":"            return new SearchCommand(userInput, ui, exerciseList, workoutList, planList, actionKeyword, arguments);","lastModifiedDate":"2022-03-23"},{"lineNumber":325,"author":{"gitId":"a1021492980"},"content":"        default:","lastModifiedDate":"2022-03-19"},{"lineNumber":326,"author":{"gitId":"a1021492980"},"content":"            logger.log(Level.WARNING, \"User has entered an invalid search command action.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":327,"author":{"gitId":"a1021492980"},"content":"            throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-19"},{"lineNumber":328,"author":{"gitId":"a1021492980"},"content":"                    InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-19"},{"lineNumber":329,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":330,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":331,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":332,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":333,"author":{"gitId":"Musfirahe0556596"},"content":"     * Creates a new plan command with the appropriate parameters stored into the object.","lastModifiedDate":"2022-03-19"},{"lineNumber":334,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":335,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-19"},{"lineNumber":336,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return A PlanCommand object containing the parsed parameters obtained from the user\u0027s input.","lastModifiedDate":"2022-03-19"},{"lineNumber":337,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws ArrayIndexOutOfBoundsException If the user\u0027s input contains insufficient information to parse.","lastModifiedDate":"2022-03-19"},{"lineNumber":338,"author":{"gitId":"Musfirahe0556596"},"content":"     * @throws InvalidCommandException        If the user\u0027s input contains invalid or insufficient information","lastModifiedDate":"2022-03-19"},{"lineNumber":339,"author":{"gitId":"Musfirahe0556596"},"content":"     *                                        to parse.","lastModifiedDate":"2022-03-19"},{"lineNumber":340,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":341,"author":{"gitId":"Musfirahe0556596"},"content":"    public PlanCommand createPlanCommand(String userInput) throws","lastModifiedDate":"2022-03-19"},{"lineNumber":342,"author":{"gitId":"Musfirahe0556596"},"content":"            ArrayIndexOutOfBoundsException, InvalidCommandException {","lastModifiedDate":"2022-03-19"},{"lineNumber":343,"author":{"gitId":"Musfirahe0556596"},"content":"        // Determine the action the user has entered","lastModifiedDate":"2022-03-19"},{"lineNumber":344,"author":{"gitId":"Musfirahe0556596"},"content":"        String actionKeyword \u003d userInput.split(\" \", 3)[1];","lastModifiedDate":"2022-03-19"},{"lineNumber":345,"author":{"gitId":"Musfirahe0556596"},"content":"        String arguments \u003d null;","lastModifiedDate":"2022-03-19"},{"lineNumber":346,"author":{"gitId":"Musfirahe0556596"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-19"},{"lineNumber":347,"author":{"gitId":"Musfirahe0556596"},"content":"        switch (actionKeyword) {","lastModifiedDate":"2022-03-19"},{"lineNumber":348,"author":{"gitId":"Musfirahe0556596"},"content":"        case CREATE_ACTION_KEYWORD:","lastModifiedDate":"2022-03-19"},{"lineNumber":349,"author":{"gitId":"Musfirahe0556596"},"content":"            if (userInput.split(\" \", 3).length \u003c EXPECTED_NUMBER_OF_PARAMETERS_WITH_ARGUMENTS) {","lastModifiedDate":"2022-03-19"},{"lineNumber":350,"author":{"gitId":"Musfirahe0556596"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid create plan command action.\");","lastModifiedDate":"2022-03-19"},{"lineNumber":351,"author":{"gitId":"Musfirahe0556596"},"content":"                throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-19"},{"lineNumber":352,"author":{"gitId":"Musfirahe0556596"},"content":"                        InvalidCommandException.INVALID_NEW_PLAN_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-19"},{"lineNumber":353,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":354,"author":{"gitId":"Musfirahe0556596"},"content":"            arguments \u003d userInput.split(\" \", 3)[2];","lastModifiedDate":"2022-03-19"},{"lineNumber":355,"author":{"gitId":"Musfirahe0556596"},"content":"            break;","lastModifiedDate":"2022-03-19"},{"lineNumber":356,"author":{"gitId":"Musfirahe0556596"},"content":"        case DELETE_ACTION_KEYWORD:","lastModifiedDate":"2022-03-19"},{"lineNumber":357,"author":{"gitId":"TianaiYan"},"content":"            if (userInput.split(\" \", 3).length \u003c EXPECTED_NUMBER_OF_PARAMETERS_WITH_ARGUMENTS) {","lastModifiedDate":"2022-03-23"},{"lineNumber":358,"author":{"gitId":"TianaiYan"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid delete plan command action.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":359,"author":{"gitId":"TianaiYan"},"content":"                throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-23"},{"lineNumber":360,"author":{"gitId":"TianaiYan"},"content":"                        InvalidCommandException.INVALID_DELETE_PLAN_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-23"},{"lineNumber":361,"author":{"gitId":"TianaiYan"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":362,"author":{"gitId":"TianaiYan"},"content":"            arguments \u003d userInput.split(\" \", 3)[2];","lastModifiedDate":"2022-03-23"},{"lineNumber":363,"author":{"gitId":"Musfirahe0556596"},"content":"            break;","lastModifiedDate":"2022-03-19"},{"lineNumber":364,"author":{"gitId":"Musfirahe0556596"},"content":"        case LIST_ACTION_KEYWORD:","lastModifiedDate":"2022-03-19"},{"lineNumber":365,"author":{"gitId":"Musfirahe0556596"},"content":"            if (userInput.split(\" \", -1).length \u003e EXPECTED_NUMBER_OF_PARAMETERS_NO_ARGUMENTS) {","lastModifiedDate":"2022-03-19"},{"lineNumber":366,"author":{"gitId":"Musfirahe0556596"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid list plan command action.\");","lastModifiedDate":"2022-03-19"},{"lineNumber":367,"author":{"gitId":"Musfirahe0556596"},"content":"                throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-19"},{"lineNumber":368,"author":{"gitId":"Musfirahe0556596"},"content":"                        InvalidCommandException.INVALID_PLAN_LIST_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-19"},{"lineNumber":369,"author":{"gitId":"Musfirahe0556596"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":370,"author":{"gitId":"Musfirahe0556596"},"content":"            break;","lastModifiedDate":"2022-03-19"},{"lineNumber":371,"author":{"gitId":"Musfirahe0556596"},"content":"        case DETAILS_ACTION_KEYWORD:","lastModifiedDate":"2022-03-19"},{"lineNumber":372,"author":{"gitId":"TianaiYan"},"content":"            if (userInput.split(\" \", 3).length \u003c EXPECTED_NUMBER_OF_PARAMETERS_WITH_ARGUMENTS) {","lastModifiedDate":"2022-03-26"},{"lineNumber":373,"author":{"gitId":"TianaiYan"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid plan details command action.\");","lastModifiedDate":"2022-03-26"},{"lineNumber":374,"author":{"gitId":"TianaiYan"},"content":"                throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-26"},{"lineNumber":375,"author":{"gitId":"TianaiYan"},"content":"                        InvalidCommandException.INVALID_PLAN_DETAILS_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-26"},{"lineNumber":376,"author":{"gitId":"TianaiYan"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":377,"author":{"gitId":"TianaiYan"},"content":"            arguments \u003d userInput.split(\" \", 3)[2];","lastModifiedDate":"2022-03-26"},{"lineNumber":378,"author":{"gitId":"Musfirahe0556596"},"content":"            break;","lastModifiedDate":"2022-03-19"},{"lineNumber":379,"author":{"gitId":"Musfirahe0556596"},"content":"        default:","lastModifiedDate":"2022-03-19"},{"lineNumber":380,"author":{"gitId":"Musfirahe0556596"},"content":"            logger.log(Level.WARNING, \"User has entered an invalid plan command action.\");","lastModifiedDate":"2022-03-19"},{"lineNumber":381,"author":{"gitId":"Musfirahe0556596"},"content":"            throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-19"},{"lineNumber":382,"author":{"gitId":"Musfirahe0556596"},"content":"                    InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-19"},{"lineNumber":383,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":384,"author":{"gitId":"Musfirahe0556596"},"content":"        return new PlanCommand(userInput, fileManager, planList, actionKeyword, arguments);","lastModifiedDate":"2022-03-19"},{"lineNumber":385,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":386,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":387,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":388,"author":{"gitId":"emilysim00"},"content":"     * Creates a new schedule command with the appropriate parameters stored into the object.","lastModifiedDate":"2022-03-21"},{"lineNumber":389,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":390,"author":{"gitId":"emilysim00"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2022-03-21"},{"lineNumber":391,"author":{"gitId":"emilysim00"},"content":"     * @return A ScheduleCommand object containing the parsed parameters obtained from the user\u0027s input.","lastModifiedDate":"2022-03-21"},{"lineNumber":392,"author":{"gitId":"emilysim00"},"content":"     * @throws ArrayIndexOutOfBoundsException If the user\u0027s input contains insufficient information to parse.","lastModifiedDate":"2022-03-21"},{"lineNumber":393,"author":{"gitId":"emilysim00"},"content":"     * @throws InvalidCommandException        If the user\u0027s input contains invalid or insufficient information","lastModifiedDate":"2022-03-21"},{"lineNumber":394,"author":{"gitId":"emilysim00"},"content":"     *                                        to parse.","lastModifiedDate":"2022-03-21"},{"lineNumber":395,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":396,"author":{"gitId":"emilysim00"},"content":"    public ScheduleCommand createScheduleCommand(String userInput) throws","lastModifiedDate":"2022-03-21"},{"lineNumber":397,"author":{"gitId":"emilysim00"},"content":"            ArrayIndexOutOfBoundsException, InvalidCommandException {","lastModifiedDate":"2022-03-21"},{"lineNumber":398,"author":{"gitId":"emilysim00"},"content":"        // Determine the action the user has entered","lastModifiedDate":"2022-03-21"},{"lineNumber":399,"author":{"gitId":"emilysim00"},"content":"        String actionKeyword \u003d userInput.split(\" \", 3)[1];","lastModifiedDate":"2022-03-21"},{"lineNumber":400,"author":{"gitId":"emilysim00"},"content":"        String arguments \u003d null;","lastModifiedDate":"2022-03-21"},{"lineNumber":401,"author":{"gitId":"emilysim00"},"content":"        String className \u003d this.getClass().getSimpleName();","lastModifiedDate":"2022-03-21"},{"lineNumber":402,"author":{"gitId":"emilysim00"},"content":"        switch (actionKeyword) {","lastModifiedDate":"2022-03-21"},{"lineNumber":403,"author":{"gitId":"emilysim00"},"content":"        case UPDATE_ACTION_KEYWORD:","lastModifiedDate":"2022-03-21"},{"lineNumber":404,"author":{"gitId":"emilysim00"},"content":"            if (userInput.split(\" \", -1).length \u003c EXPECTED_NUMBER_OF_PARAMETERS_WITH_ARGUMENTS) {","lastModifiedDate":"2022-03-21"},{"lineNumber":405,"author":{"gitId":"emilysim00"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid update schedule command action.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":406,"author":{"gitId":"emilysim00"},"content":"                throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-21"},{"lineNumber":407,"author":{"gitId":"emilysim00"},"content":"                        InvalidCommandException.INVALID_SCHEDULE_UPDATE_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-21"},{"lineNumber":408,"author":{"gitId":"emilysim00"},"content":"            }","lastModifiedDate":"2022-03-21"},{"lineNumber":409,"author":{"gitId":"emilysim00"},"content":"            arguments \u003d userInput.split(\" \", 3)[2];","lastModifiedDate":"2022-03-21"},{"lineNumber":410,"author":{"gitId":"emilysim00"},"content":"            break;","lastModifiedDate":"2022-03-21"},{"lineNumber":411,"author":{"gitId":"emilysim00"},"content":"        case LIST_ACTION_KEYWORD:","lastModifiedDate":"2022-03-21"},{"lineNumber":412,"author":{"gitId":"emilysim00"},"content":"            if (userInput.split(\" \", -1).length \u003e EXPECTED_NUMBER_OF_PARAMETERS_NO_ARGUMENTS) {","lastModifiedDate":"2022-03-21"},{"lineNumber":413,"author":{"gitId":"emilysim00"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid list schedule command action.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":414,"author":{"gitId":"emilysim00"},"content":"                throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-21"},{"lineNumber":415,"author":{"gitId":"emilysim00"},"content":"                        InvalidCommandException.INVALID_SCHEDULE_LIST_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-21"},{"lineNumber":416,"author":{"gitId":"emilysim00"},"content":"            }","lastModifiedDate":"2022-03-21"},{"lineNumber":417,"author":{"gitId":"emilysim00"},"content":"            break;","lastModifiedDate":"2022-03-21"},{"lineNumber":418,"author":{"gitId":"emilysim00"},"content":"        case CLEAR_ACTION_KEYWORD:","lastModifiedDate":"2022-03-21"},{"lineNumber":419,"author":{"gitId":"emilysim00"},"content":"            if (userInput.split(\" \", -1).length !\u003d EXPECTED_NUMBER_OF_PARAMETERS_WITH_ARGUMENTS) {","lastModifiedDate":"2022-03-21"},{"lineNumber":420,"author":{"gitId":"emilysim00"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid clear schedule command action.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":421,"author":{"gitId":"emilysim00"},"content":"                throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-21"},{"lineNumber":422,"author":{"gitId":"emilysim00"},"content":"                        InvalidCommandException.INVALID_SCHEDULE_CLEAR_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-21"},{"lineNumber":423,"author":{"gitId":"emilysim00"},"content":"            }","lastModifiedDate":"2022-03-21"},{"lineNumber":424,"author":{"gitId":"emilysim00"},"content":"            arguments \u003d userInput.split(\" \", 3)[2];","lastModifiedDate":"2022-03-21"},{"lineNumber":425,"author":{"gitId":"emilysim00"},"content":"            break;","lastModifiedDate":"2022-03-21"},{"lineNumber":426,"author":{"gitId":"emilysim00"},"content":"        case CLEAR_ALL_ACTION_KEYWORD:","lastModifiedDate":"2022-03-21"},{"lineNumber":427,"author":{"gitId":"emilysim00"},"content":"            if (userInput.split(\" \", -1).length \u003e EXPECTED_NUMBER_OF_PARAMETERS_NO_ARGUMENTS) {","lastModifiedDate":"2022-03-21"},{"lineNumber":428,"author":{"gitId":"emilysim00"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid clear all schedule command action.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":429,"author":{"gitId":"emilysim00"},"content":"                throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-21"},{"lineNumber":430,"author":{"gitId":"emilysim00"},"content":"                        InvalidCommandException.INVALID_SCHEDULE_CLEAR_ALL_COMMAND_ERROR_MSG);","lastModifiedDate":"2022-03-21"},{"lineNumber":431,"author":{"gitId":"emilysim00"},"content":"            }","lastModifiedDate":"2022-03-21"},{"lineNumber":432,"author":{"gitId":"emilysim00"},"content":"            break;","lastModifiedDate":"2022-03-21"},{"lineNumber":433,"author":{"gitId":"emilysim00"},"content":"        default:","lastModifiedDate":"2022-03-21"},{"lineNumber":434,"author":{"gitId":"emilysim00"},"content":"            logger.log(Level.WARNING, \"User has entered an invalid schedule command action.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":435,"author":{"gitId":"emilysim00"},"content":"            throw new InvalidCommandException(className,","lastModifiedDate":"2022-03-21"},{"lineNumber":436,"author":{"gitId":"emilysim00"},"content":"                    InvalidCommandException.INVALID_ACTION_ERROR_MSG);","lastModifiedDate":"2022-03-21"},{"lineNumber":437,"author":{"gitId":"emilysim00"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":438,"author":{"gitId":"emilysim00"},"content":"        return new ScheduleCommand(userInput, fileManager, dayList, actionKeyword, arguments);","lastModifiedDate":"2022-03-21"},{"lineNumber":439,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":440,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"emilysim00":81,"Musfirahe0556596":69,"alanlowzies":137,"TianaiYan":22,"a1021492980":131}},{"path":"src/main/java/werkit/UI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package werkit;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"import data.plans.Plan;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"import data.schedule.Day;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"import data.workouts.Workout;","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"import storage.FileManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"import storage.UnknownFileException;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"import textcolors.TextColor;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":" * This class contains all the user interface-related texts and methods for the WerkIt! Application.","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"public class UI {","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"    private static Logger logger \u003d Logger.getLogger(UI.class.getName());","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"    // WerkIt ASCII Banner Logo Art","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"    public static final String WERKIT_BANNER_LOGO \u003d \" __        __        _    ___ _   _ \\n\"","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"            + \" \\\\ \\\\      / /__ _ __| | _|_ _| |_| |\\n\"","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"            + \"  \\\\ \\\\ /\\\\ / / _ \\\\ \u0027__| |/ /| || __| |\\n\"","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"            + \"   \\\\ V  V /  __/ |  |   \u003c | || |_|_|\\n\"","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"            + \"    \\\\_/\\\\_/ \\\\___|_|  |_|\\\\_\\\\___|\\\\__(_)\\n\"","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"            + \"                                    \";","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"    public static final String WELCOME_MESSAGE \u003d \"Welcome to WerkIt!, your personal exercise planner.\";","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"    public static final String GOODBYE_MESSAGE \u003d \"Thank you for using WerkIt! See you again soon...\";","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"    // The default parameters for printing the formatting lines","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"    public static final int DEFAULT_LINE_LENGTH \u003d 70;","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"    public static final String DEFAULT_LINE_CHAR \u003d \"-\";","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"    // Prompt symbol","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"    public static final String PROMPT_SYMBOL \u003d \"\u003e\";","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"    // File loading-related messages","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"    public static final String CHECK_DIRECTORY_AND_FILES_MSG \u003d \"Checking for required directory and files...\";","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"    public static final String ALL_DIRECTORY_AND_FILES_PRESENT \u003d \"All OK!\";","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"    public static final String DIRECTORY_NOT_FOUND_MSG \u003d \"- The required data directory was not found. It will \"","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"            + \"be created.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"    public static final String DIRECTORY_CREATED_MSG \u003d \"- The WerkIt! resource directory has been created in\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"            + \"  your terminal\u0027s current working directory.\";","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"    public static final String EXERCISE_FILE_NOT_FOUND_MSG \u003d \"- The exercise file was not found. It will be created.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"    public static final String EXERCISE_FILE_CREATED_MSG \u003d \"- The exercise file \u0027exercises.txt\u0027 has been created in\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"            + \"  the WerkIt! resource directory.\";","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"    public static final String WORKOUT_FILE_NOT_FOUND_MSG \u003d \"- The workout file was not found. It will be created.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"    public static final String WORKOUT_FILE_CREATED_MSG \u003d \"- The workout file \u0027workouts.txt\u0027 has been created in\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"            + \"  the WerkIt! resource directory.\";","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"a1021492980"},"content":"    public static final String PLAN_FILE_NOT_FOUND_MSG \u003d \"- The plan file was not found. It will be created.\";","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"a1021492980"},"content":"    public static final String PLAN_FILE_CREATED_MSG \u003d \"- The plan file \u0027plans.txt\u0027 has been created in\\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"a1021492980"},"content":"            + \"  the WerkIt! resource directory.\";","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"    public static final String SCHEDULE_FILE_NOT_FOUND_MSG \u003d \"- The schedule file was not found. It will be created.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"    public static final String SCHEDULE_FILE_CREATED_MSG \u003d \"- The schedule file \u0027schedule.txt\u0027 has been\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"            + \"  created in the WerkIt! resource directory.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"    public static final String FILE_LOAD_OK \u003d \"OK!\";","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"    public static final String FILE_LOAD_NOT_OK \u003d \"Not OK...\";","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"    public static final String LOADING_FILE_DATA_MSG \u003d \"Loading saved file data...\";","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"    public static final String EXERCISES_FILE_LOADED_MSG \u003d  \"- Exercises file\\t%s\\n\";","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"    public static final String WORKOUTS_FILE_LOADED_MSG \u003d \"- Workouts file \\t%s\\n\";","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"    public static final String PLANS_FILE_LOADED_MSG \u003d \"- Plans file \\t\\t%s\\n\";","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"    public static final String SCHEDULE_FILE_LOADED_MSG \u003d \"- Schedule file \\t%s\\n\";","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"    // Workout-related messages","lastModifiedDate":"2022-03-05"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"    public static final String NEW_WORKOUT_CREATED_MESSAGE \u003d \"Alright, the following workout has been created:\";","lastModifiedDate":"2022-03-05"},{"lineNumber":64,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String DELETED_WORKOUT_MESSAGE \u003d \"Alright, the following workout has been removed:\";","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"TianaiYan"},"content":"    public static final String UPDATED_WORKOUT_MESSAGE \u003d \"Alright, the following workout has been updated:\";","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"Musfirahe0556596"},"content":"    //Plan-related Message","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"Musfirahe0556596"},"content":"    public static final String NEW_PLAN_CREATED_MESSAGE \u003d \"Alright, the following plan has been created:\";","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"TianaiYan"},"content":"    public static final String DELETED_PLAN_MESSAGE \u003d \"Alright, the following plan has been removed:\";","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"emilysim00"},"content":"    public static final String NEW_DAY_CREATED_MESSAGE \u003d \"Alright, the following plan schedule has been created:\";","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"    // IOException Error Message","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"    public static final String IOEXCEPTION_ERROR_MESSAGE \u003d \"[ERROR] The program has encountered an IOException \"","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"            + \"and needs to close. Sorry about that...\";","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"    // Scanner object for reading in user input from standard input","lastModifiedDate":"2022-03-05"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"    Scanner inputReader \u003d new Scanner(System.in);","lastModifiedDate":"2022-03-05"},{"lineNumber":77,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":78,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"alanlowzies"},"content":"     * Constructs an instance of the UI class. The constructor will link the Logger object in this UI class","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"alanlowzies"},"content":"     * to the log file as specified in the LogHandler class.","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"    public UI() {","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"alanlowzies"},"content":"        LogHandler.linkToFileLogger(logger);","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"     * Prints a line on the console based on the default parameters defined in this Java class.","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"     * Source: Team Member Alan Low\u0027s iP codebase","lastModifiedDate":"2022-03-04"},{"lineNumber":89,"author":{"gitId":"alanlowzies"},"content":"     * Link: https://github.com/alanlowzies/ip/blob/8556dd6a5106d190f5ac0458c6d2c34f98737a91/src/main/java/sora/SoraUI.java","lastModifiedDate":"2022-03-04"},{"lineNumber":90,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"alanlowzies"},"content":"    public void printLine() {","lastModifiedDate":"2022-03-05"},{"lineNumber":92,"author":{"gitId":"alanlowzies"},"content":"        // Prints a line based on the default parameters","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"alanlowzies"},"content":"        printLine(DEFAULT_LINE_LENGTH, DEFAULT_LINE_CHAR);","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":95,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"alanlowzies"},"content":"     * Prints a line on the console based on the specified length and the character/symbol to use","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"alanlowzies"},"content":"     * Source: Team Member Alan Low\u0027s iP codebase","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"alanlowzies"},"content":"     * Link: https://github.com/alanlowzies/ip/blob/8556dd6a5106d190f5ac0458c6d2c34f98737a91/src/main/java/sora/SoraUI.java","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"alanlowzies"},"content":"     * @param lineLen The length of the line (measured in \u0027number of characters\u0027).","lastModifiedDate":"2022-03-04"},{"lineNumber":102,"author":{"gitId":"alanlowzies"},"content":"     * @param character The character that should be used to print the line.","lastModifiedDate":"2022-03-04"},{"lineNumber":103,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":104,"author":{"gitId":"alanlowzies"},"content":"    public void printLine(int lineLen, String character) {","lastModifiedDate":"2022-03-05"},{"lineNumber":105,"author":{"gitId":"alanlowzies"},"content":"        // Generate a line of whitespaces","lastModifiedDate":"2022-03-04"},{"lineNumber":106,"author":{"gitId":"alanlowzies"},"content":"        String lineOfWhitespaces \u003d String.format(\"%\" + lineLen + \"s\", \" \");","lastModifiedDate":"2022-03-04"},{"lineNumber":107,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"alanlowzies"},"content":"        // Replace each whitespace with the specified character","lastModifiedDate":"2022-03-04"},{"lineNumber":109,"author":{"gitId":"alanlowzies"},"content":"        String lineOfChars \u003d lineOfWhitespaces.replaceAll(\" \", character);","lastModifiedDate":"2022-03-04"},{"lineNumber":110,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":111,"author":{"gitId":"alanlowzies"},"content":"        // Finally, print out the line of characters","lastModifiedDate":"2022-03-04"},{"lineNumber":112,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(lineOfChars);","lastModifiedDate":"2022-03-04"},{"lineNumber":113,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":114,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":115,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"alanlowzies"},"content":"     * Prints the greetings when the user starts the WerkIt! application. The greeting includes the","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"alanlowzies"},"content":"     * banner logo as well as a welcome message.","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"alanlowzies"},"content":"    public void printGreetings() {","lastModifiedDate":"2022-03-05"},{"lineNumber":120,"author":{"gitId":"alanlowzies"},"content":"        printLine(DEFAULT_LINE_LENGTH, \"\u003d\");","lastModifiedDate":"2022-03-05"},{"lineNumber":121,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(WERKIT_BANNER_LOGO);","lastModifiedDate":"2022-03-05"},{"lineNumber":122,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(WELCOME_MESSAGE);","lastModifiedDate":"2022-03-05"},{"lineNumber":123,"author":{"gitId":"alanlowzies"},"content":"        printLine();","lastModifiedDate":"2022-03-05"},{"lineNumber":124,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":125,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":126,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"alanlowzies"},"content":"     * Prints the message that will greet the user farewell when the user exits the application.","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"alanlowzies"},"content":"    public void printGoodbye() {","lastModifiedDate":"2022-03-05"},{"lineNumber":130,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(GOODBYE_MESSAGE);","lastModifiedDate":"2022-03-05"},{"lineNumber":131,"author":{"gitId":"alanlowzies"},"content":"        printLine(DEFAULT_LINE_LENGTH, \"\u003d\");","lastModifiedDate":"2022-03-05"},{"lineNumber":132,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":133,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":134,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":135,"author":{"gitId":"alanlowzies"},"content":"     * Prints a message that prompts the user to enter a command","lastModifiedDate":"2022-03-05"},{"lineNumber":136,"author":{"gitId":"alanlowzies"},"content":"     * Method adapted from Team Member Alan Low\u0027s iP codebase.","lastModifiedDate":"2022-03-05"},{"lineNumber":137,"author":{"gitId":"alanlowzies"},"content":"     * Link: https://github.com/alanlowzies/ip/blob/8556dd6a5106d190f5ac0458c6d2c34f98737a91/src/main/java/sora/SoraUI.java","lastModifiedDate":"2022-03-05"},{"lineNumber":138,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"emilysim00"},"content":"     * @param isFirstPrompt state whether the input taken from the console is the first command given by user.","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":141,"author":{"gitId":"alanlowzies"},"content":"    public void printUserInputPrompt(boolean isFirstPrompt) {","lastModifiedDate":"2022-03-05"},{"lineNumber":142,"author":{"gitId":"alanlowzies"},"content":"        printLine();","lastModifiedDate":"2022-03-05"},{"lineNumber":143,"author":{"gitId":"alanlowzies"},"content":"        if (isFirstPrompt) {","lastModifiedDate":"2022-03-05"},{"lineNumber":144,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"Now then, what can I do for you today?\");","lastModifiedDate":"2022-03-05"},{"lineNumber":145,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"(Need help? Type \u0027help\u0027 for a guide!)\");","lastModifiedDate":"2022-03-09"},{"lineNumber":146,"author":{"gitId":"alanlowzies"},"content":"        } else {","lastModifiedDate":"2022-03-07"},{"lineNumber":147,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\"What\u0027s next?\");","lastModifiedDate":"2022-03-05"},{"lineNumber":148,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":149,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":150,"author":{"gitId":"alanlowzies"},"content":"        printLine();","lastModifiedDate":"2022-03-05"},{"lineNumber":151,"author":{"gitId":"alanlowzies"},"content":"        System.out.print(PROMPT_SYMBOL + \" \");","lastModifiedDate":"2022-03-05"},{"lineNumber":152,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":153,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":154,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":155,"author":{"gitId":"alanlowzies"},"content":"     * Reads in a line of the user from the standard input, trims the input, and returns it as a String.","lastModifiedDate":"2022-03-05"},{"lineNumber":156,"author":{"gitId":"alanlowzies"},"content":"     * Method adapted from Team Member Alan Low\u0027s iP codebase.","lastModifiedDate":"2022-03-05"},{"lineNumber":157,"author":{"gitId":"alanlowzies"},"content":"     * Link: https://github.com/alanlowzies/ip/blob/8556dd6a5106d190f5ac0458c6d2c34f98737a91/src/main/java/sora/SoraParser.java","lastModifiedDate":"2022-03-05"},{"lineNumber":158,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":159,"author":{"gitId":"emilysim00"},"content":"     * @return userInputTrimmed user input with no spaces at the back of the input.","lastModifiedDate":"2022-03-27"},{"lineNumber":160,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":161,"author":{"gitId":"alanlowzies"},"content":"    protected String getUserInput() {","lastModifiedDate":"2022-03-05"},{"lineNumber":162,"author":{"gitId":"alanlowzies"},"content":"        String userInput \u003d inputReader.nextLine();","lastModifiedDate":"2022-03-05"},{"lineNumber":163,"author":{"gitId":"alanlowzies"},"content":"        String userInputTrimmed \u003d userInput.trim();","lastModifiedDate":"2022-03-05"},{"lineNumber":164,"author":{"gitId":"alanlowzies"},"content":"        printLine();","lastModifiedDate":"2022-03-05"},{"lineNumber":165,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":166,"author":{"gitId":"alanlowzies"},"content":"        return userInputTrimmed;","lastModifiedDate":"2022-03-05"},{"lineNumber":167,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":168,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":169,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":170,"author":{"gitId":"alanlowzies"},"content":"     * Prints a message when a new workout has been created. The newly created workout will also be displayed.","lastModifiedDate":"2022-03-05"},{"lineNumber":171,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":172,"author":{"gitId":"alanlowzies"},"content":"     * @param newWorkout The Workout object that is newly created.","lastModifiedDate":"2022-03-07"},{"lineNumber":173,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":174,"author":{"gitId":"alanlowzies"},"content":"    public void printNewWorkoutCreatedMessage(Workout newWorkout) {","lastModifiedDate":"2022-03-05"},{"lineNumber":175,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(NEW_WORKOUT_CREATED_MESSAGE);","lastModifiedDate":"2022-03-05"},{"lineNumber":176,"author":{"gitId":"alanlowzies"},"content":"        System.out.println();","lastModifiedDate":"2022-03-05"},{"lineNumber":177,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(\"\\t\" + newWorkout.toString());","lastModifiedDate":"2022-03-05"},{"lineNumber":178,"author":{"gitId":"alanlowzies"},"content":"        System.out.println();","lastModifiedDate":"2022-03-05"},{"lineNumber":179,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":180,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":181,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":182,"author":{"gitId":"Musfirahe0556596"},"content":"     * Prints a message when a workout has been deleted. Deleted workout will also be displayed.","lastModifiedDate":"2022-03-09"},{"lineNumber":183,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":184,"author":{"gitId":"alanlowzies"},"content":"     * @param deletedWorkout The workout to be deleted.","lastModifiedDate":"2022-03-10"},{"lineNumber":185,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":186,"author":{"gitId":"Musfirahe0556596"},"content":"    public void printDeleteWorkoutMessage(Workout deletedWorkout) {","lastModifiedDate":"2022-03-09"},{"lineNumber":187,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.println(DELETED_WORKOUT_MESSAGE);","lastModifiedDate":"2022-03-09"},{"lineNumber":188,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.println();","lastModifiedDate":"2022-03-09"},{"lineNumber":189,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.println(\"\\t\" + deletedWorkout.toString());","lastModifiedDate":"2022-03-09"},{"lineNumber":190,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.println();","lastModifiedDate":"2022-03-09"},{"lineNumber":191,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":192,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":193,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":194,"author":{"gitId":"TianaiYan"},"content":"     * Prints a message when a workout has been updated.","lastModifiedDate":"2022-03-12"},{"lineNumber":195,"author":{"gitId":"TianaiYan"},"content":"     * Shows updated workout.","lastModifiedDate":"2022-03-12"},{"lineNumber":196,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":197,"author":{"gitId":"TianaiYan"},"content":"     * @param updatedWorkout The workout that is updated.","lastModifiedDate":"2022-03-24"},{"lineNumber":198,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":199,"author":{"gitId":"TianaiYan"},"content":"    public void printUpdateWorkoutMessage(Workout updatedWorkout) {","lastModifiedDate":"2022-03-24"},{"lineNumber":200,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(UPDATED_WORKOUT_MESSAGE);","lastModifiedDate":"2022-03-12"},{"lineNumber":201,"author":{"gitId":"TianaiYan"},"content":"        System.out.println();","lastModifiedDate":"2022-03-12"},{"lineNumber":202,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\"\\t\" + updatedWorkout.toString());","lastModifiedDate":"2022-03-24"},{"lineNumber":203,"author":{"gitId":"TianaiYan"},"content":"        System.out.println();","lastModifiedDate":"2022-03-12"},{"lineNumber":204,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":205,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":206,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":207,"author":{"gitId":"a1021492980"},"content":"     * Prints the text in colors pre-defined in TextColor class.","lastModifiedDate":"2022-03-09"},{"lineNumber":208,"author":{"gitId":"a1021492980"},"content":"     * @param color ANSI color codes defined in TextColor class ONLY.","lastModifiedDate":"2022-03-09"},{"lineNumber":209,"author":{"gitId":"a1021492980"},"content":"     * @param text The string text that needs to be colored.","lastModifiedDate":"2022-03-09"},{"lineNumber":210,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":211,"author":{"gitId":"a1021492980"},"content":"    public void printColorText(String color, String text) {","lastModifiedDate":"2022-03-09"},{"lineNumber":212,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(color + text + TextColor.COLOR_RESET);","lastModifiedDate":"2022-03-09"},{"lineNumber":213,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":214,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":215,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":216,"author":{"gitId":"alanlowzies"},"content":"     * Formats the string to contain the ANSI color code specified.","lastModifiedDate":"2022-03-09"},{"lineNumber":217,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":218,"author":{"gitId":"alanlowzies"},"content":"     * @param color The color to format the string into.","lastModifiedDate":"2022-03-09"},{"lineNumber":219,"author":{"gitId":"alanlowzies"},"content":"     * @param text The text to be formatted with a color.","lastModifiedDate":"2022-03-09"},{"lineNumber":220,"author":{"gitId":"alanlowzies"},"content":"     * @return The string formatted with the ANSI color code.","lastModifiedDate":"2022-03-09"},{"lineNumber":221,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":222,"author":{"gitId":"alanlowzies"},"content":"    public String getColorText(String color, String text) {","lastModifiedDate":"2022-03-09"},{"lineNumber":223,"author":{"gitId":"alanlowzies"},"content":"        String textWithColor \u003d color + text + TextColor.COLOR_RESET;","lastModifiedDate":"2022-03-09"},{"lineNumber":224,"author":{"gitId":"alanlowzies"},"content":"        return textWithColor;","lastModifiedDate":"2022-03-09"},{"lineNumber":225,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":226,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":227,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":228,"author":{"gitId":"a1021492980"},"content":"     * Prints the help messages. To be updated.","lastModifiedDate":"2022-03-09"},{"lineNumber":229,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":230,"author":{"gitId":"a1021492980"},"content":"    public void printHelpMessage() {","lastModifiedDate":"2022-03-09"},{"lineNumber":231,"author":{"gitId":"a1021492980"},"content":"        printExerciseHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":232,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-09"},{"lineNumber":233,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-10"},{"lineNumber":234,"author":{"gitId":"a1021492980"},"content":"        printWorkoutHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":235,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-09"},{"lineNumber":236,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-09"},{"lineNumber":237,"author":{"gitId":"a1021492980"},"content":"        printPlanHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":238,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":239,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":240,"author":{"gitId":"a1021492980"},"content":"        printScheduleHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":241,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":242,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":243,"author":{"gitId":"a1021492980"},"content":"        printSearchHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":244,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":245,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-09"},{"lineNumber":246,"author":{"gitId":"a1021492980"},"content":"        printExitHelp();","lastModifiedDate":"2022-03-09"},{"lineNumber":247,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":248,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":249,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":250,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027exercise /list\u0027 command.","lastModifiedDate":"2022-03-10"},{"lineNumber":251,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":252,"author":{"gitId":"a1021492980"},"content":"    public void printExerciseListHelp() {","lastModifiedDate":"2022-03-10"},{"lineNumber":253,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To view all exercises available, please enter:\");","lastModifiedDate":"2022-03-10"},{"lineNumber":254,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t exercise /list\");","lastModifiedDate":"2022-03-10"},{"lineNumber":255,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will print all the exercises available.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":256,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":257,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":258,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":259,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027list\u0027 command.","lastModifiedDate":"2022-03-09"},{"lineNumber":260,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":261,"author":{"gitId":"a1021492980"},"content":"    public void printWorkoutListHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":262,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To view all workouts, please enter:\");","lastModifiedDate":"2022-03-09"},{"lineNumber":263,"author":{"gitId":"alanlowzies"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t workout /list\");","lastModifiedDate":"2022-03-09"},{"lineNumber":264,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will print all the existing workouts.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":265,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":266,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":267,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":268,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027workout /new\u0027 command.","lastModifiedDate":"2022-03-09"},{"lineNumber":269,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":270,"author":{"gitId":"a1021492980"},"content":"    public void printWorkoutAddHelp() {","lastModifiedDate":"2022-03-09"},{"lineNumber":271,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To add a workout, please enter: \");","lastModifiedDate":"2022-03-09"},{"lineNumber":272,"author":{"gitId":"alanlowzies"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t workout /new \u003cexercise name\u003e /reps \u003cno. of repetitions\u003e\");","lastModifiedDate":"2022-03-09"},{"lineNumber":273,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t Example: \");","lastModifiedDate":"2022-03-09"},{"lineNumber":274,"author":{"gitId":"alanlowzies"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t workout /new push up /reps 10\");","lastModifiedDate":"2022-03-09"},{"lineNumber":275,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will add a workout with \" + getColorText(TextColor.COLOR_YELLOW, \"10 reps\")","lastModifiedDate":"2022-03-24"},{"lineNumber":276,"author":{"gitId":"a1021492980"},"content":"                + \" of \" + getColorText(TextColor.COLOR_YELLOW, \"push up\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":277,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":278,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":279,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":280,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027workout /delete\u0027 command.","lastModifiedDate":"2022-03-09"},{"lineNumber":281,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":282,"author":{"gitId":"a1021492980"},"content":"    public void printWorkoutDeleteHelp() {","lastModifiedDate":"2022-03-09"},{"lineNumber":283,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To delete a workout, please enter: \");","lastModifiedDate":"2022-03-09"},{"lineNumber":284,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t workout /delete \u003cindex of workout\u003e\");","lastModifiedDate":"2022-03-24"},{"lineNumber":285,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t Example: \");","lastModifiedDate":"2022-03-09"},{"lineNumber":286,"author":{"gitId":"alanlowzies"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t workout /delete 1\");","lastModifiedDate":"2022-03-09"},{"lineNumber":287,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will delete the workout with index \"","lastModifiedDate":"2022-03-24"},{"lineNumber":288,"author":{"gitId":"a1021492980"},"content":"                + getColorText(TextColor.COLOR_YELLOW, \"1\") + \" if exists.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":289,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":290,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":291,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":292,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027workout /update\u0027 command.","lastModifiedDate":"2022-03-09"},{"lineNumber":293,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":294,"author":{"gitId":"a1021492980"},"content":"    public void printWorkoutUpdateHelp() {","lastModifiedDate":"2022-03-09"},{"lineNumber":295,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To update a workout, please enter: \");","lastModifiedDate":"2022-03-09"},{"lineNumber":296,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t workout /update \u003cindex of workout\u003e \u003cquantity\u003e\");","lastModifiedDate":"2022-03-24"},{"lineNumber":297,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t Example: \");","lastModifiedDate":"2022-03-09"},{"lineNumber":298,"author":{"gitId":"alanlowzies"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t workout /update 1 15\");","lastModifiedDate":"2022-03-09"},{"lineNumber":299,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will update the workout with index \"","lastModifiedDate":"2022-03-24"},{"lineNumber":300,"author":{"gitId":"a1021492980"},"content":"                + getColorText(TextColor.COLOR_YELLOW, \"1\") + \" to \"","lastModifiedDate":"2022-03-24"},{"lineNumber":301,"author":{"gitId":"a1021492980"},"content":"                + getColorText(TextColor.COLOR_YELLOW, \"15 reps\") + \" if exists.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":302,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":303,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":304,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":305,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027exit\u0027 command.","lastModifiedDate":"2022-03-09"},{"lineNumber":306,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":307,"author":{"gitId":"a1021492980"},"content":"    public void printExitHelp() {","lastModifiedDate":"2022-03-09"},{"lineNumber":308,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To exit werkIt, please enter: \");","lastModifiedDate":"2022-03-09"},{"lineNumber":309,"author":{"gitId":"alanlowzies"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t exit\");","lastModifiedDate":"2022-03-09"},{"lineNumber":310,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will exit werkIt.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":311,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":312,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":313,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":314,"author":{"gitId":"alanlowzies"},"content":"     * Prints a message that tells the user that the saved file data is being loaded","lastModifiedDate":"2022-03-14"},{"lineNumber":315,"author":{"gitId":"alanlowzies"},"content":"     * into the application.","lastModifiedDate":"2022-03-14"},{"lineNumber":316,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":317,"author":{"gitId":"alanlowzies"},"content":"    public void printLoadingFileDataMessage() {","lastModifiedDate":"2022-03-09"},{"lineNumber":318,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(LOADING_FILE_DATA_MSG);","lastModifiedDate":"2022-03-09"},{"lineNumber":319,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":320,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":321,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":322,"author":{"gitId":"alanlowzies"},"content":"     * Prints the result of the file load process.","lastModifiedDate":"2022-03-14"},{"lineNumber":323,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":324,"author":{"gitId":"alanlowzies"},"content":"     * @param filename         The name of the file that is loaded.","lastModifiedDate":"2022-03-14"},{"lineNumber":325,"author":{"gitId":"alanlowzies"},"content":"     * @param isLoadSuccessful Whether the file load is successful or not.","lastModifiedDate":"2022-03-14"},{"lineNumber":326,"author":{"gitId":"alanlowzies"},"content":"     * @throws UnknownFileException If the filename specified is unknown.","lastModifiedDate":"2022-03-14"},{"lineNumber":327,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":328,"author":{"gitId":"alanlowzies"},"content":"    public void printFileLoadStatusMessage(String filename, boolean isLoadSuccessful) throws UnknownFileException {","lastModifiedDate":"2022-03-09"},{"lineNumber":329,"author":{"gitId":"alanlowzies"},"content":"        String statusMessage;","lastModifiedDate":"2022-03-09"},{"lineNumber":330,"author":{"gitId":"alanlowzies"},"content":"        if (isLoadSuccessful) {","lastModifiedDate":"2022-03-09"},{"lineNumber":331,"author":{"gitId":"alanlowzies"},"content":"            statusMessage \u003d getColorText(TextColor.COLOR_GREEN, FILE_LOAD_OK);","lastModifiedDate":"2022-03-09"},{"lineNumber":332,"author":{"gitId":"alanlowzies"},"content":"        } else {","lastModifiedDate":"2022-03-09"},{"lineNumber":333,"author":{"gitId":"alanlowzies"},"content":"            statusMessage \u003d getColorText(TextColor.COLOR_RED, FILE_LOAD_NOT_OK);","lastModifiedDate":"2022-03-09"},{"lineNumber":334,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":335,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":336,"author":{"gitId":"alanlowzies"},"content":"        String messageToPrint;","lastModifiedDate":"2022-03-09"},{"lineNumber":337,"author":{"gitId":"alanlowzies"},"content":"        switch (filename) {","lastModifiedDate":"2022-03-09"},{"lineNumber":338,"author":{"gitId":"alanlowzies"},"content":"        case FileManager.EXERCISE_FILENAME:","lastModifiedDate":"2022-03-09"},{"lineNumber":339,"author":{"gitId":"alanlowzies"},"content":"            messageToPrint \u003d EXERCISES_FILE_LOADED_MSG;","lastModifiedDate":"2022-03-09"},{"lineNumber":340,"author":{"gitId":"alanlowzies"},"content":"            break;","lastModifiedDate":"2022-03-09"},{"lineNumber":341,"author":{"gitId":"alanlowzies"},"content":"        case FileManager.WORKOUT_FILENAME:","lastModifiedDate":"2022-03-09"},{"lineNumber":342,"author":{"gitId":"alanlowzies"},"content":"            messageToPrint \u003d WORKOUTS_FILE_LOADED_MSG;","lastModifiedDate":"2022-03-09"},{"lineNumber":343,"author":{"gitId":"alanlowzies"},"content":"            break;","lastModifiedDate":"2022-03-09"},{"lineNumber":344,"author":{"gitId":"a1021492980"},"content":"        case FileManager.PLAN_FILENAME:","lastModifiedDate":"2022-03-20"},{"lineNumber":345,"author":{"gitId":"a1021492980"},"content":"            messageToPrint \u003d PLANS_FILE_LOADED_MSG;","lastModifiedDate":"2022-03-20"},{"lineNumber":346,"author":{"gitId":"a1021492980"},"content":"            break;","lastModifiedDate":"2022-03-20"},{"lineNumber":347,"author":{"gitId":"alanlowzies"},"content":"        case FileManager.SCHEDULE_FILENAME:","lastModifiedDate":"2022-03-23"},{"lineNumber":348,"author":{"gitId":"alanlowzies"},"content":"            messageToPrint \u003d SCHEDULE_FILE_LOADED_MSG;","lastModifiedDate":"2022-03-23"},{"lineNumber":349,"author":{"gitId":"alanlowzies"},"content":"            break;","lastModifiedDate":"2022-03-23"},{"lineNumber":350,"author":{"gitId":"alanlowzies"},"content":"        default:","lastModifiedDate":"2022-03-09"},{"lineNumber":351,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.WARNING, \"Unknown filename encountered.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":352,"author":{"gitId":"alanlowzies"},"content":"            throw new UnknownFileException(filename, UnknownFileException.UNKNOWN_FILE_MSG);","lastModifiedDate":"2022-03-09"},{"lineNumber":353,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":354,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":355,"author":{"gitId":"alanlowzies"},"content":"        System.out.printf(messageToPrint, statusMessage);","lastModifiedDate":"2022-03-09"},{"lineNumber":356,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":357,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":358,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":359,"author":{"gitId":"alanlowzies"},"content":"     * Prints a message to tell the user that the application is currently checking whether the required","lastModifiedDate":"2022-03-14"},{"lineNumber":360,"author":{"gitId":"alanlowzies"},"content":"     * directory and files exist in the user\u0027s system.","lastModifiedDate":"2022-03-14"},{"lineNumber":361,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":362,"author":{"gitId":"alanlowzies"},"content":"    public void printCheckingDirectoryAndFilesMessage() {","lastModifiedDate":"2022-03-09"},{"lineNumber":363,"author":{"gitId":"alanlowzies"},"content":"        System.out.print(CHECK_DIRECTORY_AND_FILES_MSG);","lastModifiedDate":"2022-03-09"},{"lineNumber":364,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":365,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":366,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":367,"author":{"gitId":"alanlowzies"},"content":"     * Prints a message to tell the user that the required directory is not found and a new one","lastModifiedDate":"2022-03-14"},{"lineNumber":368,"author":{"gitId":"alanlowzies"},"content":"     * will be created.","lastModifiedDate":"2022-03-14"},{"lineNumber":369,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":370,"author":{"gitId":"alanlowzies"},"content":"    public void printDirectoryNotFoundMessage() {","lastModifiedDate":"2022-03-09"},{"lineNumber":371,"author":{"gitId":"alanlowzies"},"content":"        System.out.println();","lastModifiedDate":"2022-03-09"},{"lineNumber":372,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(DIRECTORY_NOT_FOUND_MSG);","lastModifiedDate":"2022-03-09"},{"lineNumber":373,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":374,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":375,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":376,"author":{"gitId":"alanlowzies"},"content":"     * Prints a message to tell the user that the required directory has been successfully created.","lastModifiedDate":"2022-03-14"},{"lineNumber":377,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":378,"author":{"gitId":"alanlowzies"},"content":"    public void printDirectoryCreatedMessage() {","lastModifiedDate":"2022-03-10"},{"lineNumber":379,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(DIRECTORY_CREATED_MSG);","lastModifiedDate":"2022-03-10"},{"lineNumber":380,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":381,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":382,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":383,"author":{"gitId":"alanlowzies"},"content":"     * Prints a message to tell the user that the exercise file is not found on the user\u0027s system","lastModifiedDate":"2022-03-14"},{"lineNumber":384,"author":{"gitId":"alanlowzies"},"content":"     * and a new one will be created.","lastModifiedDate":"2022-03-14"},{"lineNumber":385,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":386,"author":{"gitId":"alanlowzies"},"content":"    public void printExerciseFileNotFoundMessage() {","lastModifiedDate":"2022-03-09"},{"lineNumber":387,"author":{"gitId":"alanlowzies"},"content":"        System.out.println();","lastModifiedDate":"2022-03-09"},{"lineNumber":388,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(EXERCISE_FILE_NOT_FOUND_MSG);","lastModifiedDate":"2022-03-09"},{"lineNumber":389,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":390,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":391,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":392,"author":{"gitId":"alanlowzies"},"content":"     * Prints a message to tell the user that the exercise file has been successfully created.","lastModifiedDate":"2022-03-14"},{"lineNumber":393,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":394,"author":{"gitId":"alanlowzies"},"content":"    public void printExerciseFileCreatedMessage() {","lastModifiedDate":"2022-03-10"},{"lineNumber":395,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(EXERCISE_FILE_CREATED_MSG);","lastModifiedDate":"2022-03-10"},{"lineNumber":396,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":397,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":398,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":399,"author":{"gitId":"alanlowzies"},"content":"     * Prints a message to tell the user that the workout file is not found on the user\u0027s system","lastModifiedDate":"2022-03-14"},{"lineNumber":400,"author":{"gitId":"alanlowzies"},"content":"     * and a new one will be created.","lastModifiedDate":"2022-03-14"},{"lineNumber":401,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":402,"author":{"gitId":"alanlowzies"},"content":"    public void printWorkoutFileNotFoundMessage() {","lastModifiedDate":"2022-03-09"},{"lineNumber":403,"author":{"gitId":"alanlowzies"},"content":"        System.out.println();","lastModifiedDate":"2022-03-09"},{"lineNumber":404,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(WORKOUT_FILE_NOT_FOUND_MSG);","lastModifiedDate":"2022-03-09"},{"lineNumber":405,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":406,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":407,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":408,"author":{"gitId":"alanlowzies"},"content":"     * Prints a message to tell the user that the workout file has been successfully created.","lastModifiedDate":"2022-03-14"},{"lineNumber":409,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":410,"author":{"gitId":"alanlowzies"},"content":"    public void printWorkoutFileCreatedMessage() {","lastModifiedDate":"2022-03-10"},{"lineNumber":411,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(WORKOUT_FILE_CREATED_MSG);","lastModifiedDate":"2022-03-10"},{"lineNumber":412,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":413,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":414,"author":{"gitId":"alanlowzies"},"content":"    public void printPlanFileNotFoundMessage() {","lastModifiedDate":"2022-03-23"},{"lineNumber":415,"author":{"gitId":"alanlowzies"},"content":"        System.out.println();","lastModifiedDate":"2022-03-23"},{"lineNumber":416,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(PLAN_FILE_NOT_FOUND_MSG);","lastModifiedDate":"2022-03-23"},{"lineNumber":417,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":418,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":419,"author":{"gitId":"a1021492980"},"content":"    public void printPlanFileCreatedMessage() {","lastModifiedDate":"2022-03-20"},{"lineNumber":420,"author":{"gitId":"a1021492980"},"content":"        System.out.println(PLAN_FILE_CREATED_MSG);","lastModifiedDate":"2022-03-20"},{"lineNumber":421,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":422,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":423,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":424,"author":{"gitId":"alanlowzies"},"content":"     * Prints a message to tell the user that the schedule file is not found on the user\u0027s system","lastModifiedDate":"2022-03-23"},{"lineNumber":425,"author":{"gitId":"alanlowzies"},"content":"     * and a new one will be created.","lastModifiedDate":"2022-03-23"},{"lineNumber":426,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":427,"author":{"gitId":"alanlowzies"},"content":"    public void printScheduleFileNotFoundMessage() {","lastModifiedDate":"2022-03-23"},{"lineNumber":428,"author":{"gitId":"alanlowzies"},"content":"        System.out.println();","lastModifiedDate":"2022-03-23"},{"lineNumber":429,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(SCHEDULE_FILE_NOT_FOUND_MSG);","lastModifiedDate":"2022-03-23"},{"lineNumber":430,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":431,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":432,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":433,"author":{"gitId":"alanlowzies"},"content":"     * Prints a message to tell the user that the schedule file has been successfully created.","lastModifiedDate":"2022-03-23"},{"lineNumber":434,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":435,"author":{"gitId":"alanlowzies"},"content":"    public void printScheduleFileCreatedMessage() {","lastModifiedDate":"2022-03-23"},{"lineNumber":436,"author":{"gitId":"alanlowzies"},"content":"        System.out.println(SCHEDULE_FILE_CREATED_MSG);","lastModifiedDate":"2022-03-23"},{"lineNumber":437,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":438,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":439,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":440,"author":{"gitId":"alanlowzies"},"content":"     * Prints either the status or nothing depending on the presence of the required directory and","lastModifiedDate":"2022-03-14"},{"lineNumber":441,"author":{"gitId":"alanlowzies"},"content":"     * files on the user\u0027s system. If all the required directory and files are present, a status","lastModifiedDate":"2022-03-14"},{"lineNumber":442,"author":{"gitId":"alanlowzies"},"content":"     * will be printed. Otherwise, an empty line will be printed.","lastModifiedDate":"2022-03-14"},{"lineNumber":443,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":444,"author":{"gitId":"alanlowzies"},"content":"     * @param areAllDirectoryAndFilesPresent A boolean indicating if the required directory and","lastModifiedDate":"2022-03-14"},{"lineNumber":445,"author":{"gitId":"alanlowzies"},"content":"     *                                       files are present.","lastModifiedDate":"2022-03-14"},{"lineNumber":446,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":447,"author":{"gitId":"alanlowzies"},"content":"    public void printEmptyLineOrStatus(boolean areAllDirectoryAndFilesPresent) {","lastModifiedDate":"2022-03-09"},{"lineNumber":448,"author":{"gitId":"alanlowzies"},"content":"        if (areAllDirectoryAndFilesPresent) {","lastModifiedDate":"2022-03-09"},{"lineNumber":449,"author":{"gitId":"alanlowzies"},"content":"            String status \u003d getColorText(TextColor.COLOR_GREEN, ALL_DIRECTORY_AND_FILES_PRESENT);","lastModifiedDate":"2022-03-09"},{"lineNumber":450,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(\" \" + status);","lastModifiedDate":"2022-03-09"},{"lineNumber":451,"author":{"gitId":"alanlowzies"},"content":"            System.out.println();","lastModifiedDate":"2022-03-09"},{"lineNumber":452,"author":{"gitId":"alanlowzies"},"content":"        } else {","lastModifiedDate":"2022-03-09"},{"lineNumber":453,"author":{"gitId":"alanlowzies"},"content":"            System.out.println();","lastModifiedDate":"2022-03-09"},{"lineNumber":454,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":455,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":456,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":457,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":458,"author":{"gitId":"Musfirahe0556596"},"content":"     * Prints a message when a new plan has been created. The newly created plan will also be displayed.","lastModifiedDate":"2022-03-19"},{"lineNumber":459,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":460,"author":{"gitId":"Musfirahe0556596"},"content":"     * @param newPlan The Plan object that is newly created.","lastModifiedDate":"2022-03-19"},{"lineNumber":461,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":462,"author":{"gitId":"Musfirahe0556596"},"content":"    public void printNewPlanCreatedMessage(Plan newPlan) {","lastModifiedDate":"2022-03-19"},{"lineNumber":463,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.println(NEW_PLAN_CREATED_MESSAGE);","lastModifiedDate":"2022-03-19"},{"lineNumber":464,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.println();","lastModifiedDate":"2022-03-19"},{"lineNumber":465,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.println(\"\\t\" + newPlan.toString());","lastModifiedDate":"2022-03-19"},{"lineNumber":466,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.println();","lastModifiedDate":"2022-03-19"},{"lineNumber":467,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":468,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":469,"author":{"gitId":"TianaiYan"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":470,"author":{"gitId":"TianaiYan"},"content":"     * Prints a message when a plan has been deleted and shows the deleted workout.","lastModifiedDate":"2022-03-23"},{"lineNumber":471,"author":{"gitId":"TianaiYan"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":472,"author":{"gitId":"TianaiYan"},"content":"     * @param deletedPlan The plan to be deleted.","lastModifiedDate":"2022-03-23"},{"lineNumber":473,"author":{"gitId":"TianaiYan"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":474,"author":{"gitId":"TianaiYan"},"content":"    public void printDeletePlanMessage(Plan deletedPlan) {","lastModifiedDate":"2022-03-23"},{"lineNumber":475,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(DELETED_PLAN_MESSAGE);","lastModifiedDate":"2022-03-23"},{"lineNumber":476,"author":{"gitId":"TianaiYan"},"content":"        System.out.println();","lastModifiedDate":"2022-03-23"},{"lineNumber":477,"author":{"gitId":"TianaiYan"},"content":"        System.out.println(\"\\t\" + deletedPlan.toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":478,"author":{"gitId":"TianaiYan"},"content":"        System.out.println();","lastModifiedDate":"2022-03-23"},{"lineNumber":479,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":480,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":481,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":482,"author":{"gitId":"emilysim00"},"content":"     * Prints a message when a new day schedule has been created. The newly created schedule will also be displayed.","lastModifiedDate":"2022-03-21"},{"lineNumber":483,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":484,"author":{"gitId":"emilysim00"},"content":"     * @param newDay The Day object that is newly created.","lastModifiedDate":"2022-03-21"},{"lineNumber":485,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":486,"author":{"gitId":"emilysim00"},"content":"    public void printNewScheduleCreatedMessage(Day newDay) {","lastModifiedDate":"2022-03-21"},{"lineNumber":487,"author":{"gitId":"emilysim00"},"content":"        System.out.println(NEW_DAY_CREATED_MESSAGE);","lastModifiedDate":"2022-03-21"},{"lineNumber":488,"author":{"gitId":"emilysim00"},"content":"        System.out.println();","lastModifiedDate":"2022-03-21"},{"lineNumber":489,"author":{"gitId":"emilysim00"},"content":"        System.out.println(\"\\t\" + newDay.toString());","lastModifiedDate":"2022-03-21"},{"lineNumber":490,"author":{"gitId":"emilysim00"},"content":"        System.out.println();","lastModifiedDate":"2022-03-21"},{"lineNumber":491,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":492,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":493,"author":{"gitId":"emilysim00"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":494,"author":{"gitId":"emilysim00"},"content":"     * Prints a message when all day schedule had been cleared.","lastModifiedDate":"2022-03-22"},{"lineNumber":495,"author":{"gitId":"emilysim00"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":496,"author":{"gitId":"emilysim00"},"content":"    public void printClearedScheduleMessage() {","lastModifiedDate":"2022-03-22"},{"lineNumber":497,"author":{"gitId":"emilysim00"},"content":"        System.out.println(\"Schedule had been cleared and reset.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":498,"author":{"gitId":"emilysim00"},"content":"        System.out.println(\"There is no plan scheduled for any day.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":499,"author":{"gitId":"emilysim00"},"content":"        System.out.println(\"To add plan for any day, enter:\");","lastModifiedDate":"2022-03-22"},{"lineNumber":500,"author":{"gitId":"emilysim00"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"schedule /update \u003cday number [1-7]\u003e \u003cplan number\u003e\");","lastModifiedDate":"2022-03-22"},{"lineNumber":501,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":502,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":503,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":504,"author":{"gitId":"a1021492980"},"content":"     * Prints message when no matching result is found under search command.","lastModifiedDate":"2022-03-24"},{"lineNumber":505,"author":{"gitId":"a1021492980"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":506,"author":{"gitId":"a1021492980"},"content":"     * @param category The category that will be searched.","lastModifiedDate":"2022-03-24"},{"lineNumber":507,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":508,"author":{"gitId":"a1021492980"},"content":"    public void printSearchNotFoundMessage(String category) {","lastModifiedDate":"2022-03-24"},{"lineNumber":509,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"Sorry, no matching \" + category + \" found.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":510,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":511,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":512,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":513,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027plan /new\u0027 command.","lastModifiedDate":"2022-03-24"},{"lineNumber":514,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":515,"author":{"gitId":"a1021492980"},"content":"    public void printPlanAddHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":516,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To add a plan, please enter: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":517,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t plan /new \u003cplan name\u003e /workouts\"","lastModifiedDate":"2022-03-24"},{"lineNumber":518,"author":{"gitId":"a1021492980"},"content":"                + \" \u003cworkout index(s) separated by \u0027,\u0027\u003e\");","lastModifiedDate":"2022-03-24"},{"lineNumber":519,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t Example: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":520,"author":{"gitId":"a1021492980"},"content":"        printWorkoutExample();","lastModifiedDate":"2022-03-24"},{"lineNumber":521,"author":{"gitId":"a1021492980"},"content":"        printPlanAddExample();","lastModifiedDate":"2022-03-24"},{"lineNumber":522,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":523,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":524,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":525,"author":{"gitId":"a1021492980"},"content":"     * Prints workout list examples.","lastModifiedDate":"2022-03-24"},{"lineNumber":526,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":527,"author":{"gitId":"a1021492980"},"content":"    public void printWorkoutExample() {","lastModifiedDate":"2022-03-24"},{"lineNumber":528,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t The workout list upon entering \"","lastModifiedDate":"2022-03-24"},{"lineNumber":529,"author":{"gitId":"a1021492980"},"content":"                + getColorText(TextColor.COLOR_YELLOW, \"workout /list\")","lastModifiedDate":"2022-03-24"},{"lineNumber":530,"author":{"gitId":"a1021492980"},"content":"                + \", contains the\\n \\t following workouts:\");","lastModifiedDate":"2022-03-24"},{"lineNumber":531,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t 1. push up (10 reps)\");","lastModifiedDate":"2022-03-24"},{"lineNumber":532,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t 2. sit up (10 reps)\");","lastModifiedDate":"2022-03-24"},{"lineNumber":533,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t 3. pull up (10 reps)\");","lastModifiedDate":"2022-03-24"},{"lineNumber":534,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":535,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":536,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":537,"author":{"gitId":"a1021492980"},"content":"     * Prints the example of adding plans.","lastModifiedDate":"2022-03-24"},{"lineNumber":538,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":539,"author":{"gitId":"a1021492980"},"content":"    public void printPlanAddExample() {","lastModifiedDate":"2022-03-24"},{"lineNumber":540,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To create a new plan, enter the following command:\");","lastModifiedDate":"2022-03-24"},{"lineNumber":541,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t plan /new Grow My Muscles /workouts 1, 2\");","lastModifiedDate":"2022-03-24"},{"lineNumber":542,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t A new plan named \" + getColorText(TextColor.COLOR_YELLOW, \"Grow My Muscles\")","lastModifiedDate":"2022-03-24"},{"lineNumber":543,"author":{"gitId":"a1021492980"},"content":"                + \" with workout index \" + getColorText(TextColor.COLOR_YELLOW, \"1\") + \" and \"","lastModifiedDate":"2022-03-24"},{"lineNumber":544,"author":{"gitId":"a1021492980"},"content":"                + getColorText(TextColor.COLOR_YELLOW, \"2\\n\")","lastModifiedDate":"2022-03-24"},{"lineNumber":545,"author":{"gitId":"a1021492980"},"content":"                + \"\\t will be created and added to the application\u0027s list of plans.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":546,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":547,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":548,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":549,"author":{"gitId":"a1021492980"},"content":"     * Prints the example plan list to be used in schedule update help message.","lastModifiedDate":"2022-03-24"},{"lineNumber":550,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":551,"author":{"gitId":"a1021492980"},"content":"    public void printPlanExample() {","lastModifiedDate":"2022-03-24"},{"lineNumber":552,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t The plan list upon entering \"","lastModifiedDate":"2022-03-24"},{"lineNumber":553,"author":{"gitId":"a1021492980"},"content":"                + getColorText(TextColor.COLOR_YELLOW, \"plan /list\") + \", contains the\\n \\t following plans:\");","lastModifiedDate":"2022-03-24"},{"lineNumber":554,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t 1. arms\");","lastModifiedDate":"2022-03-24"},{"lineNumber":555,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t 2. stronger arms\");","lastModifiedDate":"2022-03-24"},{"lineNumber":556,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t 3. Grow My Muscles\");","lastModifiedDate":"2022-03-24"},{"lineNumber":557,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":558,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":559,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":560,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027plan /list\u0027 command.","lastModifiedDate":"2022-03-24"},{"lineNumber":561,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":562,"author":{"gitId":"a1021492980"},"content":"    public void printPlanListHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":563,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To view all plans, please enter:\");","lastModifiedDate":"2022-03-24"},{"lineNumber":564,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t plan /list\");","lastModifiedDate":"2022-03-24"},{"lineNumber":565,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will print all the existing plans.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":566,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":567,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":568,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":569,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027plan /details\u0027 command.","lastModifiedDate":"2022-03-24"},{"lineNumber":570,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":571,"author":{"gitId":"a1021492980"},"content":"    public void printPlanDetailsHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":572,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To view each plan in detail, please enter:\");","lastModifiedDate":"2022-03-24"},{"lineNumber":573,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t plan /details \u003cplan index in list\u003e\");","lastModifiedDate":"2022-03-24"},{"lineNumber":574,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will print all the workouts in the plan of given index.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":575,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":576,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":577,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":578,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027schedule /list\u0027 command.","lastModifiedDate":"2022-03-24"},{"lineNumber":579,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":580,"author":{"gitId":"a1021492980"},"content":"    public void printScheduleListHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":581,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To view the schedule, please enter:\");","lastModifiedDate":"2022-03-24"},{"lineNumber":582,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t schedule /list\");","lastModifiedDate":"2022-03-24"},{"lineNumber":583,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will print the schedule.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":584,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":585,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":586,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":587,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027schedule /update\u0027 command.","lastModifiedDate":"2022-03-24"},{"lineNumber":588,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":589,"author":{"gitId":"a1021492980"},"content":"    public void printScheduleUpdateHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":590,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To update schedule, please enter: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":591,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t schedule /update \u003cday index [1-7]\u003e \u003cplan index in the list\u003e\");","lastModifiedDate":"2022-03-24"},{"lineNumber":592,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t Example: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":593,"author":{"gitId":"a1021492980"},"content":"        printPlanExample();","lastModifiedDate":"2022-03-24"},{"lineNumber":594,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To update the plan schedule for Monday with plan 1,\"","lastModifiedDate":"2022-03-24"},{"lineNumber":595,"author":{"gitId":"a1021492980"},"content":"                + \" enter the\\n \\t following command:\");","lastModifiedDate":"2022-03-24"},{"lineNumber":596,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t schedule /update 1 1\");","lastModifiedDate":"2022-03-24"},{"lineNumber":597,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will update the schedule of \"","lastModifiedDate":"2022-03-24"},{"lineNumber":598,"author":{"gitId":"a1021492980"},"content":"                + getColorText(TextColor.COLOR_YELLOW, \"Monday\")","lastModifiedDate":"2022-03-24"},{"lineNumber":599,"author":{"gitId":"a1021492980"},"content":"                + \" with a plan named \" + getColorText(TextColor.COLOR_YELLOW, \"arms\") + \".\");","lastModifiedDate":"2022-03-24"},{"lineNumber":600,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":601,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":602,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":603,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027schedule /clear\u0027 and \u0027schedule /clearall\u0027 commands.","lastModifiedDate":"2022-03-24"},{"lineNumber":604,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":605,"author":{"gitId":"a1021492980"},"content":"    public void printScheduleClearHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":606,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To clear schedule, please enter: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":607,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t schedule /clear \u003cday index [1-7]\u003e\");","lastModifiedDate":"2022-03-24"},{"lineNumber":608,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will clear the schedule for the given day.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":609,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t schedule /clearall\");","lastModifiedDate":"2022-03-24"},{"lineNumber":610,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will clear the schedule for everyday.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":611,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":612,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":613,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":614,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027plan /delete\u0027 command.","lastModifiedDate":"2022-03-24"},{"lineNumber":615,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":616,"author":{"gitId":"a1021492980"},"content":"    public void printPlanDeleteHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":617,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To delete a plan, please enter: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":618,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t plan /delete \u003cindex of plan\u003e\");","lastModifiedDate":"2022-03-24"},{"lineNumber":619,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t Example: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":620,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t plan /delete 1\");","lastModifiedDate":"2022-03-24"},{"lineNumber":621,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will delete the plan with index \"","lastModifiedDate":"2022-03-24"},{"lineNumber":622,"author":{"gitId":"a1021492980"},"content":"                + getColorText(TextColor.COLOR_YELLOW, \"1\") + \" if exists.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":623,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":624,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":625,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":626,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027search /exercise\u0027 command.","lastModifiedDate":"2022-03-24"},{"lineNumber":627,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":628,"author":{"gitId":"a1021492980"},"content":"    public void printSearchExerciseHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":629,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To search for exercise(s), please enter: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":630,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t search /exercise \u003cexercise keyword\u003e\");","lastModifiedDate":"2022-03-24"},{"lineNumber":631,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t Example: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":632,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t search /exercise up\");","lastModifiedDate":"2022-03-24"},{"lineNumber":633,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will show the exercise(s) containing keyword \"","lastModifiedDate":"2022-03-24"},{"lineNumber":634,"author":{"gitId":"a1021492980"},"content":"                + getColorText(TextColor.COLOR_YELLOW, \"up\") + \" if exist.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":635,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":636,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":637,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":638,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027search /workout\u0027 command.","lastModifiedDate":"2022-03-24"},{"lineNumber":639,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":640,"author":{"gitId":"a1021492980"},"content":"    public void printSearchWorkoutHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":641,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To search for workout(s), please enter: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":642,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t search /workout \u003cexercise keyword or number of reps\u003e\");","lastModifiedDate":"2022-03-24"},{"lineNumber":643,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t Example: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":644,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t search /workout up\");","lastModifiedDate":"2022-03-24"},{"lineNumber":645,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will show the workout(s) containing exercise with keyword\\n\\t \"","lastModifiedDate":"2022-03-24"},{"lineNumber":646,"author":{"gitId":"a1021492980"},"content":"                + getColorText(TextColor.COLOR_YELLOW, \"up\") + \" if exist.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":647,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t search /workout 15\");","lastModifiedDate":"2022-03-24"},{"lineNumber":648,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will show the workout(s) with \"","lastModifiedDate":"2022-03-24"},{"lineNumber":649,"author":{"gitId":"a1021492980"},"content":"                + getColorText(TextColor.COLOR_YELLOW, \"reps \u003d 15\") + \" if exist.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":650,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":651,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":652,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":653,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027search /plan\u0027 command.","lastModifiedDate":"2022-03-24"},{"lineNumber":654,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":655,"author":{"gitId":"a1021492980"},"content":"    public void printSearchPlanHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":656,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To search for plan(s), please enter: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":657,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t search /plan \u003cplan keyword\u003e\");","lastModifiedDate":"2022-03-24"},{"lineNumber":658,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t Example: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":659,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t search /plan grow\");","lastModifiedDate":"2022-03-24"},{"lineNumber":660,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will show the plan(s) containing keyword \"","lastModifiedDate":"2022-03-24"},{"lineNumber":661,"author":{"gitId":"a1021492980"},"content":"                + getColorText(TextColor.COLOR_YELLOW, \"grow\") + \" if exist.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":662,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":663,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":664,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":665,"author":{"gitId":"a1021492980"},"content":"     * Prints help message for \u0027search /all\u0027 command.","lastModifiedDate":"2022-03-24"},{"lineNumber":666,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":667,"author":{"gitId":"a1021492980"},"content":"    public void printSearchAllHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":668,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t To search for everything related to the keyword, please enter: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":669,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t search /all \u003ckeyword\u003e\");","lastModifiedDate":"2022-03-24"},{"lineNumber":670,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t Example: \");","lastModifiedDate":"2022-03-24"},{"lineNumber":671,"author":{"gitId":"a1021492980"},"content":"        printColorText(TextColor.COLOR_YELLOW, \"\\t search /all a\");","lastModifiedDate":"2022-03-24"},{"lineNumber":672,"author":{"gitId":"a1021492980"},"content":"        System.out.println(\"\\t This will show the exercise(s), workout(s) and plan(s) containing\\n\\t keyword \"","lastModifiedDate":"2022-03-24"},{"lineNumber":673,"author":{"gitId":"a1021492980"},"content":"                + getColorText(TextColor.COLOR_YELLOW, \"a\") + \" if exist.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":674,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":675,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":676,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":677,"author":{"gitId":"a1021492980"},"content":"     * Prints all exercise related help messages.","lastModifiedDate":"2022-03-24"},{"lineNumber":678,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":679,"author":{"gitId":"a1021492980"},"content":"    public void printExerciseHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":680,"author":{"gitId":"a1021492980"},"content":"        printExerciseListHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":681,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":682,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":683,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":684,"author":{"gitId":"a1021492980"},"content":"     * Prints all workout related help messages.","lastModifiedDate":"2022-03-24"},{"lineNumber":685,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":686,"author":{"gitId":"a1021492980"},"content":"    public void printWorkoutHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":687,"author":{"gitId":"a1021492980"},"content":"        printWorkoutListHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":688,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":689,"author":{"gitId":"a1021492980"},"content":"        printWorkoutAddHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":690,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":691,"author":{"gitId":"a1021492980"},"content":"        printWorkoutDeleteHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":692,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":693,"author":{"gitId":"a1021492980"},"content":"        printWorkoutUpdateHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":694,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":695,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":696,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":697,"author":{"gitId":"a1021492980"},"content":"     * Prints all plan related help messages.","lastModifiedDate":"2022-03-24"},{"lineNumber":698,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":699,"author":{"gitId":"a1021492980"},"content":"    public void printPlanHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":700,"author":{"gitId":"a1021492980"},"content":"        printPlanListHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":701,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":702,"author":{"gitId":"a1021492980"},"content":"        printPlanDetailsHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":703,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":704,"author":{"gitId":"a1021492980"},"content":"        printPlanAddHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":705,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":706,"author":{"gitId":"a1021492980"},"content":"        printPlanDeleteHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":707,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":708,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":709,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":710,"author":{"gitId":"a1021492980"},"content":"     * Prints all schedule related help messages.","lastModifiedDate":"2022-03-24"},{"lineNumber":711,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":712,"author":{"gitId":"a1021492980"},"content":"    public void printScheduleHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":713,"author":{"gitId":"a1021492980"},"content":"        printScheduleListHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":714,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":715,"author":{"gitId":"a1021492980"},"content":"        printScheduleUpdateHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":716,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":717,"author":{"gitId":"a1021492980"},"content":"        printScheduleClearHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":718,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":719,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":720,"author":{"gitId":"a1021492980"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":721,"author":{"gitId":"a1021492980"},"content":"     * Prints all search related help messages.","lastModifiedDate":"2022-03-24"},{"lineNumber":722,"author":{"gitId":"a1021492980"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":723,"author":{"gitId":"a1021492980"},"content":"    public void printSearchHelp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":724,"author":{"gitId":"a1021492980"},"content":"        printSearchExerciseHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":725,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":726,"author":{"gitId":"a1021492980"},"content":"        printSearchWorkoutHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":727,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":728,"author":{"gitId":"a1021492980"},"content":"        printSearchPlanHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":729,"author":{"gitId":"a1021492980"},"content":"        printLine();","lastModifiedDate":"2022-03-24"},{"lineNumber":730,"author":{"gitId":"a1021492980"},"content":"        printSearchAllHelp();","lastModifiedDate":"2022-03-24"},{"lineNumber":731,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":732,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"emilysim00":29,"Musfirahe0556596":28,"alanlowzies":321,"TianaiYan":27,"a1021492980":327}},{"path":"src/main/java/werkit/WerkIt.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package werkit;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"import commands.Command;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"import commands.ExitCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"import commands.InvalidCommandException;","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"import data.schedule.DayList;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"import data.workouts.WorkoutList;","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"import storage.FileManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"import storage.UnknownFileException;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":" * This class initiates the various classes/components of WerkIt! and contains the logic code for","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":" * prompting the user for an input continuously until the user enters the exit command.","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"public class WerkIt {","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"    private UI ui;","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"    private Parser parser;","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"    private ExerciseList exerciseList;","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"    private WorkoutList workoutList;","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"    private FileManager fileManager;","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"    private PlanList planList;","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"    private DayList dayList;","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"    private static Logger logger \u003d Logger.getLogger(WerkIt.class.getName());","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"     * Initialises the components of the WerkIt! application, greets the user, and loads the","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"     * various files stored in the system\u0027s local disk into this instance of WerkIt! (if applicable).","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"emilysim00"},"content":"     * @throws IOException If the application is unable to load the required directory and/or file(s).","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"    public WerkIt() throws IOException {","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"        // Initialise Components","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"        this.exerciseList \u003d new ExerciseList();","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"        this.workoutList \u003d new WorkoutList(getExerciseList());","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"Musfirahe0556596"},"content":"        this.planList \u003d new PlanList(getWorkoutList());","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"        this.fileManager \u003d new FileManager(getPlanList());","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"emilysim00"},"content":"        this.dayList \u003d new DayList(getPlanList());","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"emilysim00"},"content":"        this.parser \u003d new Parser(getUI(), getExerciseList(), getWorkoutList(),","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"emilysim00"},"content":"                getFileManager(), getPlanList(), getDayList());","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"        LogHandler.linkToFileLogger(logger);","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"        logger.log(Level.INFO, \"Components instantiated.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"        getUI().printGreetings();","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"        // Do file imports","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"        loadRequiredDirectoryAndFiles();","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"     * Gets the UI object stored in this WerkIt object.","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"     * @return The UI object.","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"    public UI getUI() {","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"        return this.ui;","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"     * Gets the Parser object stored in this WerkIt object.","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"     * @return The Parser object.","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"    public Parser getParser() {","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"        return this.parser;","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"alanlowzies"},"content":"     * Gets the ExerciseList object stored in this WerkIt object.","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"alanlowzies"},"content":"     * @return The ExerciseList object.","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"    public ExerciseList getExerciseList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"alanlowzies"},"content":"        return this.exerciseList;","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"     * Gets the WorkoutList object stored in this WerkIt object.","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"alanlowzies"},"content":"     * @return The WorkoutList object.","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"alanlowzies"},"content":"    public WorkoutList getWorkoutList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"alanlowzies"},"content":"        return this.workoutList;","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":96,"author":{"gitId":"emilysim00"},"content":"    public DayList getDayList() {","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"emilysim00"},"content":"        return this.dayList;","lastModifiedDate":"2022-03-21"},{"lineNumber":98,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":99,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":100,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"alanlowzies"},"content":"     * Gets the FileManager object stored in this WerkIt object.","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"alanlowzies"},"content":"     * @return The FileManager object.","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"alanlowzies"},"content":"    public FileManager getFileManager() {","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"alanlowzies"},"content":"        return this.fileManager;","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"Musfirahe0556596"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":110,"author":{"gitId":"Musfirahe0556596"},"content":"     * Gets the PlanList object stored in this WerkIt object.","lastModifiedDate":"2022-03-19"},{"lineNumber":111,"author":{"gitId":"Musfirahe0556596"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":112,"author":{"gitId":"Musfirahe0556596"},"content":"     * @return The PlanList object.","lastModifiedDate":"2022-03-19"},{"lineNumber":113,"author":{"gitId":"Musfirahe0556596"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":114,"author":{"gitId":"Musfirahe0556596"},"content":"    public PlanList getPlanList() {","lastModifiedDate":"2022-03-19"},{"lineNumber":115,"author":{"gitId":"Musfirahe0556596"},"content":"        return this.planList;","lastModifiedDate":"2022-03-19"},{"lineNumber":116,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":117,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":118,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"alanlowzies"},"content":"     * Checks if the required resource directory and files already exists in the user\u0027s filesystem. If not,","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"alanlowzies"},"content":"     * call the relevant method(s) to create the required directory and/or file(s).","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If the application is unable to create the required directory and/or file(s).","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":124,"author":{"gitId":"alanlowzies"},"content":"    private void loadRequiredDirectoryAndFiles() throws IOException {","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"alanlowzies"},"content":"        getUI().printCheckingDirectoryAndFilesMessage();","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"alanlowzies"},"content":"        getFileManager().checkAndCreateDirectoriesAndFiles();","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"alanlowzies"},"content":"        getUI().printEmptyLineOrStatus(fileManager.checkIfAllDirectoryAndFilesExists());","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"alanlowzies"},"content":"        assert (Files.exists(fileManager.getWorkoutFilePath())) : \"Workout file does not exist.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"alanlowzies"},"content":"        assert (Files.exists(fileManager.getExerciseFilePath())) : \"Exercise file does not exist.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"alanlowzies"},"content":"        assert (Files.exists(fileManager.getPlanFilePath())) : \"Plan file does not exist.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"alanlowzies"},"content":"        assert (Files.exists(fileManager.getScheduleFilePath())) : \"Schedule file does not exist.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":133,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"alanlowzies"},"content":"        getUI().printLoadingFileDataMessage();","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"alanlowzies"},"content":"        loadExerciseFile();","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"alanlowzies"},"content":"        if (getFileManager().isWasWorkoutsFileAlreadyMade()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"alanlowzies"},"content":"            loadWorkoutFile();","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":139,"author":{"gitId":"a1021492980"},"content":"        if (getFileManager().isWasPlansFileAlreadyMade()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":140,"author":{"gitId":"a1021492980"},"content":"            loadPlanFile();","lastModifiedDate":"2022-03-20"},{"lineNumber":141,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":142,"author":{"gitId":"alanlowzies"},"content":"        if (getFileManager().isWasScheduleFileAlreadyMade()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":143,"author":{"gitId":"alanlowzies"},"content":"            loadScheduleFile();","lastModifiedDate":"2022-03-23"},{"lineNumber":144,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":145,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":146,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":147,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":148,"author":{"gitId":"alanlowzies"},"content":"     * Continuously prompts the user for an input (and thereafter executing the necessary","lastModifiedDate":"2022-03-05"},{"lineNumber":149,"author":{"gitId":"alanlowzies"},"content":"     * actions) until the exit command is entered.","lastModifiedDate":"2022-03-05"},{"lineNumber":150,"author":{"gitId":"alanlowzies"},"content":"     * Method adapted from Team Member Alan Low\u0027s iP codebase.","lastModifiedDate":"2022-03-05"},{"lineNumber":151,"author":{"gitId":"alanlowzies"},"content":"     * Link: https://github.com/alanlowzies/ip/blob/8556dd6a5106d190f5ac0458c6d2c34f98737a91/src/main/java/sora/Sora.java","lastModifiedDate":"2022-03-05"},{"lineNumber":152,"author":{"gitId":"emilysim00"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"emilysim00"},"content":"     * @throws IOException If the application is unable to process the user input.","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":155,"author":{"gitId":"alanlowzies"},"content":"    public void startContinuousUserPrompt() throws IOException {","lastModifiedDate":"2022-03-09"},{"lineNumber":156,"author":{"gitId":"alanlowzies"},"content":"        boolean userWantsToExit \u003d false;","lastModifiedDate":"2022-03-05"},{"lineNumber":157,"author":{"gitId":"alanlowzies"},"content":"        boolean isFirstPrompt \u003d true;","lastModifiedDate":"2022-03-05"},{"lineNumber":158,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":159,"author":{"gitId":"alanlowzies"},"content":"        do {","lastModifiedDate":"2022-03-05"},{"lineNumber":160,"author":{"gitId":"alanlowzies"},"content":"            try {","lastModifiedDate":"2022-03-05"},{"lineNumber":161,"author":{"gitId":"alanlowzies"},"content":"                getUI().printUserInputPrompt(isFirstPrompt);","lastModifiedDate":"2022-03-10"},{"lineNumber":162,"author":{"gitId":"alanlowzies"},"content":"                isFirstPrompt \u003d false;","lastModifiedDate":"2022-03-05"},{"lineNumber":163,"author":{"gitId":"alanlowzies"},"content":"                String userInput \u003d getUI().getUserInput();","lastModifiedDate":"2022-03-10"},{"lineNumber":164,"author":{"gitId":"alanlowzies"},"content":"                Command newCommand \u003d getParser().parseUserInput(userInput);","lastModifiedDate":"2022-03-10"},{"lineNumber":165,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":166,"author":{"gitId":"alanlowzies"},"content":"                if (newCommand instanceof ExitCommand) {","lastModifiedDate":"2022-03-05"},{"lineNumber":167,"author":{"gitId":"alanlowzies"},"content":"                    userWantsToExit \u003d true;","lastModifiedDate":"2022-03-05"},{"lineNumber":168,"author":{"gitId":"alanlowzies"},"content":"                    continue;","lastModifiedDate":"2022-03-05"},{"lineNumber":169,"author":{"gitId":"alanlowzies"},"content":"                }","lastModifiedDate":"2022-03-05"},{"lineNumber":170,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":171,"author":{"gitId":"alanlowzies"},"content":"                newCommand.execute();","lastModifiedDate":"2022-03-05"},{"lineNumber":172,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":173,"author":{"gitId":"alanlowzies"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2022-03-05"},{"lineNumber":174,"author":{"gitId":"alanlowzies"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-03-05"},{"lineNumber":175,"author":{"gitId":"alanlowzies"},"content":"                System.out.println(\"Please try again.\");","lastModifiedDate":"2022-03-05"},{"lineNumber":176,"author":{"gitId":"emilysim00"},"content":"                logger.log(Level.WARNING, \"User has entered an invalid command.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":177,"author":{"gitId":"alanlowzies"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-11"},{"lineNumber":178,"author":{"gitId":"alanlowzies"},"content":"                System.out.println(\"Uh oh, the command entered is invalid.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":179,"author":{"gitId":"alanlowzies"},"content":"                System.out.println(\"Please try again.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":180,"author":{"gitId":"emilysim00"},"content":"                logger.log(Level.WARNING, \"User has entered an array index out of bound invalid command.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":181,"author":{"gitId":"alanlowzies"},"content":"            }","lastModifiedDate":"2022-03-05"},{"lineNumber":182,"author":{"gitId":"alanlowzies"},"content":"        } while (!userWantsToExit);","lastModifiedDate":"2022-03-05"},{"lineNumber":183,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":184,"author":{"gitId":"alanlowzies"},"content":"        // User is exiting the program","lastModifiedDate":"2022-03-05"},{"lineNumber":185,"author":{"gitId":"alanlowzies"},"content":"        assert (userWantsToExit);","lastModifiedDate":"2022-03-14"},{"lineNumber":186,"author":{"gitId":"alanlowzies"},"content":"        getUI().printGoodbye();","lastModifiedDate":"2022-03-10"},{"lineNumber":187,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":188,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":189,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":190,"author":{"gitId":"alanlowzies"},"content":"     * Loads the exercise file\u0027s data that is stored in the user\u0027s filesystem into the current","lastModifiedDate":"2022-03-14"},{"lineNumber":191,"author":{"gitId":"alanlowzies"},"content":"     * session\u0027s list of exercises.","lastModifiedDate":"2022-03-14"},{"lineNumber":192,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":193,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If the application is unable to open the exercise file.","lastModifiedDate":"2022-03-14"},{"lineNumber":194,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":195,"author":{"gitId":"alanlowzies"},"content":"    private void loadExerciseFile() throws IOException {","lastModifiedDate":"2022-03-10"},{"lineNumber":196,"author":{"gitId":"alanlowzies"},"content":"        fileManager.loadExercisesFromFile(getExerciseList());","lastModifiedDate":"2022-03-10"},{"lineNumber":197,"author":{"gitId":"alanlowzies"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":198,"author":{"gitId":"alanlowzies"},"content":"            getUI().printFileLoadStatusMessage(FileManager.EXERCISE_FILENAME, true);","lastModifiedDate":"2022-03-10"},{"lineNumber":199,"author":{"gitId":"alanlowzies"},"content":"        } catch (UnknownFileException e) {","lastModifiedDate":"2022-03-10"},{"lineNumber":200,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-10"},{"lineNumber":201,"author":{"gitId":"emilysim00"},"content":"            logger.log(Level.WARNING, \"Unknown file name was encountered.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":202,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":203,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":204,"author":{"gitId":"alanlowzies"},"content":"        logger.log(Level.INFO, \"Exercise file data loaded.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":205,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":206,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":207,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":208,"author":{"gitId":"alanlowzies"},"content":"     * Loads the workout file\u0027s data that is stored in the user\u0027s filesystem into the current","lastModifiedDate":"2022-03-14"},{"lineNumber":209,"author":{"gitId":"alanlowzies"},"content":"     * session\u0027s list of workouts.","lastModifiedDate":"2022-03-14"},{"lineNumber":210,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":211,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If the application is unable to open the workout file.","lastModifiedDate":"2022-03-14"},{"lineNumber":212,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":213,"author":{"gitId":"alanlowzies"},"content":"    private void loadWorkoutFile() throws IOException {","lastModifiedDate":"2022-03-10"},{"lineNumber":214,"author":{"gitId":"alanlowzies"},"content":"        boolean isWorkoutFileLoadSuccessful;","lastModifiedDate":"2022-03-10"},{"lineNumber":215,"author":{"gitId":"alanlowzies"},"content":"        isWorkoutFileLoadSuccessful \u003d fileManager.loadWorkoutsFromFile(getWorkoutList());","lastModifiedDate":"2022-03-10"},{"lineNumber":216,"author":{"gitId":"alanlowzies"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":217,"author":{"gitId":"alanlowzies"},"content":"            getUI().printFileLoadStatusMessage(FileManager.WORKOUT_FILENAME, isWorkoutFileLoadSuccessful);","lastModifiedDate":"2022-03-10"},{"lineNumber":218,"author":{"gitId":"alanlowzies"},"content":"        } catch (UnknownFileException e) {","lastModifiedDate":"2022-03-10"},{"lineNumber":219,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-10"},{"lineNumber":220,"author":{"gitId":"emilysim00"},"content":"            logger.log(Level.WARNING, \"Unknown file name was encountered.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":221,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":222,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":223,"author":{"gitId":"alanlowzies"},"content":"        logger.log(Level.INFO, \"Workout file data loaded.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":224,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":225,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":226,"author":{"gitId":"a1021492980"},"content":"    private void loadPlanFile() throws IOException {","lastModifiedDate":"2022-03-20"},{"lineNumber":227,"author":{"gitId":"a1021492980"},"content":"        boolean isPlanFileLoadSuccessful;","lastModifiedDate":"2022-03-20"},{"lineNumber":228,"author":{"gitId":"a1021492980"},"content":"        isPlanFileLoadSuccessful \u003d fileManager.loadPlansFromFile(getPlanList());","lastModifiedDate":"2022-03-20"},{"lineNumber":229,"author":{"gitId":"a1021492980"},"content":"        try {","lastModifiedDate":"2022-03-20"},{"lineNumber":230,"author":{"gitId":"a1021492980"},"content":"            getUI().printFileLoadStatusMessage(FileManager.PLAN_FILENAME, isPlanFileLoadSuccessful);","lastModifiedDate":"2022-03-20"},{"lineNumber":231,"author":{"gitId":"a1021492980"},"content":"        } catch (UnknownFileException e) {","lastModifiedDate":"2022-03-20"},{"lineNumber":232,"author":{"gitId":"a1021492980"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-20"},{"lineNumber":233,"author":{"gitId":"a1021492980"},"content":"            logger.log(Level.WARNING, \"Unknown file name was encountered.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":234,"author":{"gitId":"a1021492980"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":235,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":236,"author":{"gitId":"alanlowzies"},"content":"        logger.log(Level.INFO, \"Plan file data loaded.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":237,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":238,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":239,"author":{"gitId":"alanlowzies"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":240,"author":{"gitId":"alanlowzies"},"content":"     * Loads the schedule file\u0027s data that is stored in the user\u0027s filesystem into the current","lastModifiedDate":"2022-03-23"},{"lineNumber":241,"author":{"gitId":"alanlowzies"},"content":"     * session\u0027s list of workouts.","lastModifiedDate":"2022-03-23"},{"lineNumber":242,"author":{"gitId":"alanlowzies"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":243,"author":{"gitId":"alanlowzies"},"content":"     * @throws IOException If the application is unable to open the workout file.","lastModifiedDate":"2022-03-23"},{"lineNumber":244,"author":{"gitId":"alanlowzies"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":245,"author":{"gitId":"alanlowzies"},"content":"    private void loadScheduleFile() throws IOException {","lastModifiedDate":"2022-03-23"},{"lineNumber":246,"author":{"gitId":"alanlowzies"},"content":"        boolean isScheduleFileLoadSuccessful;","lastModifiedDate":"2022-03-23"},{"lineNumber":247,"author":{"gitId":"alanlowzies"},"content":"        isScheduleFileLoadSuccessful \u003d fileManager.loadScheduleFromFile(getDayList());","lastModifiedDate":"2022-03-23"},{"lineNumber":248,"author":{"gitId":"alanlowzies"},"content":"        try {","lastModifiedDate":"2022-03-23"},{"lineNumber":249,"author":{"gitId":"alanlowzies"},"content":"            getUI().printFileLoadStatusMessage(FileManager.SCHEDULE_FILENAME, isScheduleFileLoadSuccessful);","lastModifiedDate":"2022-03-23"},{"lineNumber":250,"author":{"gitId":"alanlowzies"},"content":"        } catch (UnknownFileException e) {","lastModifiedDate":"2022-03-23"},{"lineNumber":251,"author":{"gitId":"alanlowzies"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-23"},{"lineNumber":252,"author":{"gitId":"alanlowzies"},"content":"            logger.log(Level.WARNING, \"Unknown file name was encountered.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":253,"author":{"gitId":"alanlowzies"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":254,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":255,"author":{"gitId":"alanlowzies"},"content":"        logger.log(Level.INFO, \"Schedule file data loaded.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":256,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":257,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"emilysim00":18,"Musfirahe0556596":12,"alanlowzies":212,"a1021492980":15}},{"path":"src/test/java/commands/PlanCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"package commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"import data.exercises.InvalidExerciseException;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"import data.plans.InvalidPlanException;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"Musfirahe0556596"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"import data.schedule.DayList;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"import data.workouts.InvalidWorkoutException;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"import data.workouts.WorkoutList;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"Musfirahe0556596"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"import storage.FileManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"import werkit.Parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"class PlanCommandTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"    ExerciseList exerciseList;","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"    WorkoutList workoutList;","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"    PlanList planList;","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"    UI ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"    Parser parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"    FileManager fileManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"    DayList dayList;","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"    void setUp() throws InvalidWorkoutException, InvalidExerciseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"        LogHandler.startLogHandler();","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"        exerciseList \u003d new ExerciseList();","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"        workoutList \u003d new WorkoutList(exerciseList);","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"        planList \u003d new PlanList(workoutList);","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"Musfirahe0556596"},"content":"        ui \u003d new UI();","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"Musfirahe0556596"},"content":"        fileManager \u003d new FileManager(planList);","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"Musfirahe0556596"},"content":"        dayList \u003d new DayList(planList);","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"Musfirahe0556596"},"content":"        parser \u003d new Parser(ui, exerciseList, workoutList, fileManager, planList, dayList);","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"Musfirahe0556596"},"content":"        exerciseList.addExerciseToList(\"push up\");","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"Musfirahe0556596"},"content":"        exerciseList.addExerciseToList(\"sit up\");","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"Musfirahe0556596"},"content":"        exerciseList.addExerciseToList(\"pull up\");","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"Musfirahe0556596"},"content":"        workoutList.createAndAddWorkout(\"push up /reps 10\");","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"Musfirahe0556596"},"content":"        workoutList.createAndAddWorkout(\"sit up /reps 15\");","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"Musfirahe0556596"},"content":"        workoutList.createAndAddWorkout(\"pull up /reps 20\");","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"Musfirahe0556596"},"content":"    void setUserAction_createInvalidAction_expectInvalidCommandException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class,","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"Musfirahe0556596"},"content":"            () -\u003e new PlanCommand(\"plan /test\", fileManager,","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"Musfirahe0556596"},"content":"                    planList, \"/test\", \"\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"Musfirahe0556596"},"content":"    void execute_invalidCreatePlan_expectCatchNumberFormatException() throws InvalidCommandException {","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"Musfirahe0556596"},"content":"        PlanCommand createInvalidPlanCommand \u003d parser.createPlanCommand(\"plan /new Plan A /workouts abc\");","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"Musfirahe0556596"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"Musfirahe0556596"},"content":"                \"Uh oh, a number was expected in your input, but a non-formattable\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \"number was received.\"","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \"Please try again. Alternatively, type \u0027help\u0027 if you need\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \"more information on the commands.\";","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"Musfirahe0556596"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"Musfirahe0556596"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"Musfirahe0556596"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"Musfirahe0556596"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"Musfirahe0556596"},"content":"        createInvalidPlanCommand.execute();","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.flush();","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"Musfirahe0556596"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"Musfirahe0556596"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"Musfirahe0556596"},"content":"    void execute_invalidCreatePlan_expectCatchInvalidPlanException() throws InvalidCommandException {","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"Musfirahe0556596"},"content":"        PlanCommand createInvalidPlanCommand \u003d parser.createPlanCommand(\"plan /new rest day /workouts 1,2\");","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"Musfirahe0556596"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"Musfirahe0556596"},"content":"                \"Uh oh, this plan name is reserved for use.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \"Please try again\";","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"Musfirahe0556596"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"Musfirahe0556596"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"Musfirahe0556596"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"Musfirahe0556596"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"Musfirahe0556596"},"content":"        createInvalidPlanCommand.execute();","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.flush();","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"Musfirahe0556596"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"Musfirahe0556596"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"Musfirahe0556596"},"content":"    void execute_invalidCreatePlan_expectCatchArrayIndexOutOfBoundsException() throws InvalidCommandException {","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"Musfirahe0556596"},"content":"        PlanCommand createInvalidPlanCommand \u003d parser.createPlanCommand(\"plan /new hh /workouts\");","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"Musfirahe0556596"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"Musfirahe0556596"},"content":"                \"Uh oh, it seems like too few arguments were entered.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \"Please try again. Alternatively, type \u0027help\u0027 if you need\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \"more information on the commands.\";","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"Musfirahe0556596"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"Musfirahe0556596"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"Musfirahe0556596"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"Musfirahe0556596"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"Musfirahe0556596"},"content":"        createInvalidPlanCommand.execute();","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.flush();","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"Musfirahe0556596"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"Musfirahe0556596"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"Musfirahe0556596"},"content":"    void execute_validListPlan_expectSuccess() throws InvalidCommandException, InvalidPlanException {","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"Musfirahe0556596"},"content":"        planList.createAndAddPlan(\"Plan A /workouts 1,2\");","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"Musfirahe0556596"},"content":"        PlanCommand listPlanCommand \u003d parser.createPlanCommand(\"plan /list\");","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"Musfirahe0556596"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"Musfirahe0556596"},"content":"                \"Here are all your plan(s).\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \"To view each plan in detail, enter\\n\u0027plan /details \u003cplan number in list\u003e\u0027.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \"1. Plan A\\n\";","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"Musfirahe0556596"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"Musfirahe0556596"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"Musfirahe0556596"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"Musfirahe0556596"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"Musfirahe0556596"},"content":"        listPlanCommand.execute();","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.flush();","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"Musfirahe0556596"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"Musfirahe0556596"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":127,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"Musfirahe0556596":127}},{"path":"src/test/java/commands/SearchCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"package commands;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"public class SearchCommandTest {","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"a1021492980"},"content":"        LogHandler.startLogHandler();","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"    public void searchCommand_normalSearchExerciseConstruction_constructSuccess() throws","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"            InvalidCommandException {","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"        String userInput \u003d \"search /exercise up\";","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"        String userAction \u003d \"/exercise\";","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"        String userArguments \u003d \"up\";","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"        ExerciseList el \u003d new ExerciseList();","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"        SearchCommand commandTest \u003d new SearchCommand(userInput, ui, el, userAction, userArguments);","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"        assertEquals(\"search /exercise up\", commandTest.getUserInput());","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"        assertEquals(\"/exercise\", commandTest.getUserAction());","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"        assertEquals(\"up\", commandTest.getUserArguments());","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"    public void searchCommand_normalSearchPlanConstruction_constructSuccess() throws","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"            InvalidCommandException {","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"        String userInput \u003d \"search /plan gg\";","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"        String userAction \u003d \"/plan\";","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"a1021492980"},"content":"        String userArguments \u003d \"gg\";","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"a1021492980"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"a1021492980"},"content":"        ExerciseList el \u003d new ExerciseList();","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"a1021492980"},"content":"        SearchCommand commandTest \u003d new SearchCommand(userInput, ui, el, userAction, userArguments);","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"a1021492980"},"content":"        assertEquals(\"search /plan gg\", commandTest.getUserInput());","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"a1021492980"},"content":"        assertEquals(\"/plan\", commandTest.getUserAction());","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"a1021492980"},"content":"        assertEquals(\"gg\", commandTest.getUserArguments());","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"a1021492980"},"content":"    public void searchCommand_invalidAction_exceptionThrown() {","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"a1021492980"},"content":"        String userInput1 \u003d \"search /exercise\";","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"a1021492980"},"content":"        String userAction1 \u003d \"/exercise\";","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"a1021492980"},"content":"        String userArguments1 \u003d null;","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"a1021492980"},"content":"        String userInput2 \u003d \"search /plan\";","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"a1021492980"},"content":"        String userAction2 \u003d \"/plan\";","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"a1021492980"},"content":"        String userArguments2 \u003d null;","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"a1021492980"},"content":"        String userInput3 \u003d \"search\";","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"a1021492980"},"content":"        String userAction3 \u003d null;","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"a1021492980"},"content":"        String userArguments3 \u003d null;","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"a1021492980"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"a1021492980"},"content":"        ExerciseList el \u003d new ExerciseList();","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"a1021492980"},"content":"        assertThrows(NullPointerException.class,","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"a1021492980"},"content":"            () -\u003e new SearchCommand(userInput1, ui, el, userAction1, userArguments1));","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"a1021492980"},"content":"        assertThrows(NullPointerException.class,","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"a1021492980"},"content":"            () -\u003e new SearchCommand(userInput2, ui, el, userAction2, userArguments2));","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"a1021492980"},"content":"        assertThrows(NullPointerException.class,","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"a1021492980"},"content":"            () -\u003e new SearchCommand(userInput3, ui, el, userAction3, userArguments3));","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"a1021492980":72}},{"path":"src/test/java/commands/WorkoutCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package commands;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"import data.workouts.WorkoutList;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"alanlowzies"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"import storage.FileManager;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"public class WorkoutCommandTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"        LogHandler.startLogHandler();","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"    public void workoutCommand_normalWorkoutNewConstruction_constructSuccess() throws IOException,","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"            InvalidCommandException {","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"        String userInput \u003d \"workout /new russian twist /reps 1000\";","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"        String userAction \u003d \"/new\";","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"        String userArguments \u003d \"russian twist /reps 1000\";","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"        ExerciseList el \u003d new ExerciseList();","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"        WorkoutList wl \u003d new WorkoutList(el);","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"        PlanList pl \u003d new PlanList(wl);","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"        FileManager fm \u003d new FileManager(pl);","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"TianaiYan"},"content":"        WorkoutCommand commandTest \u003d new WorkoutCommand(userInput, fm, wl, pl, userAction, userArguments);","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"        assertEquals(\"workout /new russian twist /reps 1000\", commandTest.getUserInput());","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"        assertEquals(\"/new\", commandTest.getUserAction());","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"        assertEquals(\"russian twist /reps 1000\", commandTest.getUserArguments());","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"    public void workoutCommand_invalidAction_exceptionThrown() throws IOException, InvalidCommandException {","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"        String userInput1 \u003d \"workout /pancakes\";","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"        String userAction1 \u003d \"/pancakes\";","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"        String userArguments1 \u003d null;","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"        String userInput2 \u003d \"workout /create running /reps 20\";","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"        String userAction2 \u003d \"/create\";","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"        String userArguments2 \u003d \"running /reps 20\";","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"        ExerciseList el \u003d new ExerciseList();","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"        WorkoutList wl \u003d new WorkoutList(el);","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"        PlanList pl \u003d new PlanList(wl);","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"        FileManager fm \u003d new FileManager(pl);","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"        assertThrows(InvalidCommandException.class,","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"TianaiYan"},"content":"            () -\u003e new WorkoutCommand(userInput1, fm, wl, pl, userAction1, userArguments1));","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"        assertThrows(InvalidCommandException.class,","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"TianaiYan"},"content":"            () -\u003e new WorkoutCommand(userInput2, fm, wl, pl, userAction2, userArguments2));","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"alanlowzies":57,"TianaiYan":3}},{"path":"src/test/java/data/exercises/ExerciseListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"a1021492980"},"content":"package data.exercises;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"public class ExerciseListTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"    ExerciseList exerciseList;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"a1021492980"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"a1021492980"},"content":"    void setUp() {","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"        LogHandler.startLogHandler();","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"        exerciseList \u003d new ExerciseList();","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"a1021492980"},"content":"        String firstSampleExercise \u003d \"push up\";","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"a1021492980"},"content":"        String secondSampleExercise \u003d \"pull up\";","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"a1021492980"},"content":"        exerciseList.addExerciseToList(firstSampleExercise);","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"a1021492980"},"content":"        exerciseList.addExerciseToList(secondSampleExercise);","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"a1021492980"},"content":"    public void isCorrectQuantity() {","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"a1021492980"},"content":"        assertEquals(2, exerciseList.getNumberOfExercises());","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"a1021492980"},"content":"    public void isCorrectIndex() {","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"a1021492980"},"content":"        assertEquals(\"pull up\", exerciseList.getExerciseAt(2));","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"a1021492980"},"content":"    public void isExist() {","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"a1021492980"},"content":"        assertTrue(exerciseList.checkIfExerciseExists(\"pull up\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"a1021492980"},"content":"}","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"alanlowzies":4,"a1021492980":34}},{"path":"src/test/java/data/plans/PlanListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"package data.plans;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"Musfirahe0556596"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"Musfirahe0556596"},"content":"import data.exercises.InvalidExerciseException;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"Musfirahe0556596"},"content":"import data.workouts.InvalidWorkoutException;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"TianaiYan"},"content":"import data.workouts.Workout;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"Musfirahe0556596"},"content":"import data.workouts.WorkoutList;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"Musfirahe0556596"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"Musfirahe0556596"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"Musfirahe0556596"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"TianaiYan"},"content":"import textcolors.TextColor;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"TianaiYan"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"Musfirahe0556596"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"class PlanListTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"    ExerciseList exerciseList;","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"    WorkoutList workoutList;","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"    PlanList planList;","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"TianaiYan"},"content":"    UI ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"    void setUp() throws InvalidWorkoutException, InvalidExerciseException {","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"        LogHandler.startLogHandler();","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"        exerciseList \u003d new ExerciseList();","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"        workoutList \u003d new WorkoutList(exerciseList);","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"Musfirahe0556596"},"content":"        planList \u003d new PlanList(workoutList);","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"TianaiYan"},"content":"        ui \u003d new UI();","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"        exerciseList.addExerciseToList(\"push up\");","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"Musfirahe0556596"},"content":"        exerciseList.addExerciseToList(\"pull up\");","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"Musfirahe0556596"},"content":"        exerciseList.addExerciseToList(\"sit up\");","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"        exerciseList.addExerciseToList(\"burpee\");","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"Musfirahe0556596"},"content":"        exerciseList.addExerciseToList(\"russian twist\");","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"Musfirahe0556596"},"content":"        workoutList.createAndAddWorkout(\"push up /reps 10\");","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"Musfirahe0556596"},"content":"        workoutList.createAndAddWorkout(\"sit up /reps 15\");","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"Musfirahe0556596"},"content":"        workoutList.createAndAddWorkout(\"burpee /reps 20\");","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"Musfirahe0556596"},"content":"        workoutList.createAndAddWorkout(\"burpee /reps 50\");","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"Musfirahe0556596"},"content":"        workoutList.createAndAddWorkout(\"pull up /reps 10\");","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"TianaiYan"},"content":"    void listAllPlan_expectNoPlanPrints() {","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"Musfirahe0556596"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"Musfirahe0556596"},"content":"                \"Oops! You have not created any plans yet!\"","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \"\\nTo create a new plan, enter \u0027plan /new \u003cplan name\u003e /workouts \"","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \"\\n\u003cworkout number(s) to add, separated by comma\u003e\u0027.\"","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \"\\nAlternatively, enter \u0027help\u0027 for more information.\";","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"Musfirahe0556596"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"Musfirahe0556596"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"Musfirahe0556596"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"Musfirahe0556596"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"Musfirahe0556596"},"content":"        planList.listAllPlan();","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.flush();","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"Musfirahe0556596"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"Musfirahe0556596"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"Musfirahe0556596"},"content":"    void listAllPlan_expectThreePrints() throws InvalidPlanException {","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"Musfirahe0556596"},"content":"        planList.createAndAddPlan(\"Plan 1 /workouts 1,2,3\");","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"Musfirahe0556596"},"content":"        planList.createAndAddPlan(\"Plan 2 /workouts 1\");","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"Musfirahe0556596"},"content":"        planList.createAndAddPlan(\"Plan 3 /workouts 1,5,4,3\");","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"Musfirahe0556596"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"Musfirahe0556596"},"content":"                \"Here are all your plan(s).\\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"                        + \"To view each plan in detail, enter\\n\u0027plan /details \u003cplan number in list\u003e\u0027.\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \"1. Plan 1\\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \"2. Plan 2\\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"Musfirahe0556596"},"content":"                        + \"3. Plan 3\\n\";","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"Musfirahe0556596"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"Musfirahe0556596"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"Musfirahe0556596"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"Musfirahe0556596"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"Musfirahe0556596"},"content":"        planList.listAllPlan();","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"Musfirahe0556596"},"content":"        System.out.flush();","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"Musfirahe0556596"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"Musfirahe0556596"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"Musfirahe0556596"},"content":"    void createAndAddPlan_validPlansAdded_expectValidPlans() throws InvalidPlanException {","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"Musfirahe0556596"},"content":"        planList.createAndAddPlan(\"Plan 1 /workouts 1,5,4,3\");","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"Musfirahe0556596"},"content":"        planList.createAndAddPlan(\"Plan 2 /workouts 1,5,4,3,1,1,1\");","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"Musfirahe0556596"},"content":"        planList.createAndAddPlan(\"Plan 3 /workouts 1, 3, 4\");","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"Musfirahe0556596"},"content":"        planList.createAndAddPlan(\"Plan 4 /workouts 1,1, 5,2\");","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"Musfirahe0556596"},"content":"        for (int i \u003d 0; i \u003c planList.getPlansDisplayList().size(); i +\u003d 1) {","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"Musfirahe0556596"},"content":"            assertEquals(\"Plan \" + (i + 1), planList.getPlansDisplayList().get(i).toString());","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"Musfirahe0556596"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":96,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":97,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":98,"author":{"gitId":"Musfirahe0556596"},"content":"    void createAndAddPlan_invalidPlanName_expectInvalidPlanException() throws InvalidPlanException {","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"Musfirahe0556596"},"content":"        planList.createAndAddPlan(\"Plan 1 /workouts 1,2,3\");","lastModifiedDate":"2022-03-20"},{"lineNumber":100,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidPlanException.class,","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"Musfirahe0556596"},"content":"            () -\u003e planList.createAndAddPlan(\"Plan 1 /workouts 2,2,2\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":102,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidPlanException.class,","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"Musfirahe0556596"},"content":"            () -\u003e planList.createAndAddPlan(\"rest day /workouts 3,2,3\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidPlanException.class,","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"Musfirahe0556596"},"content":"            () -\u003e planList.createAndAddPlan(\"REST DAY       /workouts 3,2,3,1\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidPlanException.class,","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"Musfirahe0556596"},"content":"            () -\u003e planList.createAndAddPlan(\"        /workouts 3,2,3,1,1\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidPlanException.class,","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"Musfirahe0556596"},"content":"            () -\u003e planList.createAndAddPlan(\"Exceed the 30 characters limit yes /workouts 1,2,1\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":112,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"Musfirahe0556596"},"content":"    void createAndAddPlan_minMaxWorkoutsToAdd_expectException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":114,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidPlanException.class,","lastModifiedDate":"2022-03-20"},{"lineNumber":115,"author":{"gitId":"Musfirahe0556596"},"content":"            () -\u003e planList.createAndAddPlan(\"Exceed 10 Plan /workouts 1,1,1,1,1,2,2,2,2,2,3\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":116,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(ArrayIndexOutOfBoundsException.class,","lastModifiedDate":"2022-03-20"},{"lineNumber":117,"author":{"gitId":"Musfirahe0556596"},"content":"            () -\u003e planList.createAndAddPlan(\"Min 1 Plan /workouts\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":118,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":119,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":120,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":121,"author":{"gitId":"Musfirahe0556596"},"content":"    void createAndAddPlan_workoutIndexOutOfRange_expectInvalidPlanException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":122,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidPlanException.class,","lastModifiedDate":"2022-03-20"},{"lineNumber":123,"author":{"gitId":"Musfirahe0556596"},"content":"            () -\u003e planList.createAndAddPlan(\"Plan 1 /workouts 1,2,3,9\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":124,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidPlanException.class,","lastModifiedDate":"2022-03-20"},{"lineNumber":125,"author":{"gitId":"Musfirahe0556596"},"content":"            () -\u003e planList.createAndAddPlan(\"Plan 2 /workouts 9\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":126,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":127,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":128,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"Musfirahe0556596"},"content":"    void createAndAddPlan_workoutWithSameSequence_expectInvalidPlanException() throws InvalidPlanException {","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"Musfirahe0556596"},"content":"        planList.createAndAddPlan(\"Plan 1 /workouts 1,2,3\");","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidPlanException.class,","lastModifiedDate":"2022-03-28"},{"lineNumber":132,"author":{"gitId":"Musfirahe0556596"},"content":"            () -\u003e planList.createAndAddPlan(\"Duplicate Sequence /workouts 1,2,3\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":133,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":134,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"TianaiYan"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"TianaiYan"},"content":"    void listPlanDetails_validPlanNumber_expectThreeWorkouts() throws InvalidPlanException {","lastModifiedDate":"2022-03-29"},{"lineNumber":137,"author":{"gitId":"TianaiYan"},"content":"        planList.createAndAddPlan(\"Plan 1 /workouts 1,2,3\");","lastModifiedDate":"2022-03-29"},{"lineNumber":138,"author":{"gitId":"TianaiYan"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"TianaiYan"},"content":"                \"Here are the 3 workouts in [\" + ui.getColorText(TextColor.COLOR_YELLOW, \"Plan 1\")","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"TianaiYan"},"content":"                        + \"].\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":141,"author":{"gitId":"TianaiYan"},"content":"                        + \"1. push up (10 reps)\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":142,"author":{"gitId":"TianaiYan"},"content":"                        + \"2. sit up (15 reps)\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":143,"author":{"gitId":"TianaiYan"},"content":"                        + \"3. burpee (20 reps)\\n\";","lastModifiedDate":"2022-03-29"},{"lineNumber":144,"author":{"gitId":"TianaiYan"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":145,"author":{"gitId":"TianaiYan"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-03-29"},{"lineNumber":146,"author":{"gitId":"TianaiYan"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-03-29"},{"lineNumber":147,"author":{"gitId":"TianaiYan"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-03-29"},{"lineNumber":148,"author":{"gitId":"TianaiYan"},"content":"        planList.listPlanDetails(\"1\", ui);","lastModifiedDate":"2022-03-29"},{"lineNumber":149,"author":{"gitId":"TianaiYan"},"content":"        System.out.flush();","lastModifiedDate":"2022-03-29"},{"lineNumber":150,"author":{"gitId":"TianaiYan"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":151,"author":{"gitId":"TianaiYan"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-03-29"},{"lineNumber":152,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":153,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":154,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":155,"author":{"gitId":"TianaiYan"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":156,"author":{"gitId":"TianaiYan"},"content":"    void listPlanDetails_planNumberOutOfRange_expectInvalidPlanException() throws InvalidPlanException {","lastModifiedDate":"2022-03-29"},{"lineNumber":157,"author":{"gitId":"TianaiYan"},"content":"        planList.createAndAddPlan(\"Plan 1 /workouts 1,5,4,3\");","lastModifiedDate":"2022-03-29"},{"lineNumber":158,"author":{"gitId":"TianaiYan"},"content":"        planList.createAndAddPlan(\"Plan 2 /workouts 1,5,4,3,1,1,1\");","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"TianaiYan"},"content":"        planList.createAndAddPlan(\"Plan 3 /workouts 1, 3, 4\");","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"TianaiYan"},"content":"        String planNumber \u003d \"5\";","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"TianaiYan"},"content":"        assertThrows(InvalidPlanException.class,","lastModifiedDate":"2022-03-29"},{"lineNumber":163,"author":{"gitId":"TianaiYan"},"content":"            () -\u003e planList.listPlanDetails(planNumber, ui));","lastModifiedDate":"2022-03-29"},{"lineNumber":164,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":165,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":166,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":167,"author":{"gitId":"TianaiYan"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":168,"author":{"gitId":"TianaiYan"},"content":"    void listPlanDetails_inputArgumentIsNotANumber_expectNumberFormatException() throws InvalidPlanException {","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"TianaiYan"},"content":"        planList.createAndAddPlan(\"Plan 1 /workouts 1,5,4,3\");","lastModifiedDate":"2022-03-29"},{"lineNumber":170,"author":{"gitId":"TianaiYan"},"content":"        planList.createAndAddPlan(\"Plan 2 /workouts 1,5,4,3,1,1,1\");","lastModifiedDate":"2022-03-29"},{"lineNumber":171,"author":{"gitId":"TianaiYan"},"content":"        planList.createAndAddPlan(\"Plan 3 /workouts 1, 3, 4\");","lastModifiedDate":"2022-03-29"},{"lineNumber":172,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":173,"author":{"gitId":"TianaiYan"},"content":"        String invalidArgument \u003d \"3a\";","lastModifiedDate":"2022-03-29"},{"lineNumber":174,"author":{"gitId":"TianaiYan"},"content":"        assertThrows(NumberFormatException.class,","lastModifiedDate":"2022-03-29"},{"lineNumber":175,"author":{"gitId":"TianaiYan"},"content":"            () -\u003e planList.listPlanDetails(invalidArgument, ui));","lastModifiedDate":"2022-03-29"},{"lineNumber":176,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":177,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":178,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":179,"author":{"gitId":"TianaiYan"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":180,"author":{"gitId":"TianaiYan"},"content":"    void deletePlan_validIndexToDelete_expectDeletePlanMessage() throws InvalidPlanException {","lastModifiedDate":"2022-03-29"},{"lineNumber":181,"author":{"gitId":"TianaiYan"},"content":"        planList.createAndAddPlan(\"Plan 1 /workouts 1,5,4,3\");","lastModifiedDate":"2022-03-29"},{"lineNumber":182,"author":{"gitId":"TianaiYan"},"content":"        planList.createAndAddPlan(\"Plan 2 /workouts 1,5,4,3,1,1,1\");","lastModifiedDate":"2022-03-29"},{"lineNumber":183,"author":{"gitId":"TianaiYan"},"content":"        planList.createAndAddPlan(\"Plan 3 /workouts 1, 3, 4\");","lastModifiedDate":"2022-03-29"},{"lineNumber":184,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":185,"author":{"gitId":"TianaiYan"},"content":"        int planNumberToDelete \u003d 2;","lastModifiedDate":"2022-03-29"},{"lineNumber":186,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":187,"author":{"gitId":"TianaiYan"},"content":"        assertEquals(\"Plan 2\", planList.getPlansDisplayList().get(planNumberToDelete - 1).toString());","lastModifiedDate":"2022-03-29"},{"lineNumber":188,"author":{"gitId":"TianaiYan"},"content":"        planList.deletePlan(Integer.toString(planNumberToDelete));","lastModifiedDate":"2022-03-29"},{"lineNumber":189,"author":{"gitId":"TianaiYan"},"content":"        assertEquals(\"Plan 3\", planList.getPlansDisplayList().get(planNumberToDelete - 1).toString());","lastModifiedDate":"2022-03-29"},{"lineNumber":190,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":191,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":192,"author":{"gitId":"TianaiYan"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":193,"author":{"gitId":"TianaiYan"},"content":"    void deletePlan_indexOutOfRange_expectInvalidPlanException() throws InvalidPlanException {","lastModifiedDate":"2022-03-29"},{"lineNumber":194,"author":{"gitId":"TianaiYan"},"content":"        planList.createAndAddPlan(\"Plan 1 /workouts 1,5,4,3\");","lastModifiedDate":"2022-03-29"},{"lineNumber":195,"author":{"gitId":"TianaiYan"},"content":"        planList.createAndAddPlan(\"Plan 2 /workouts 1,5,4,3,1,1,1\");","lastModifiedDate":"2022-03-29"},{"lineNumber":196,"author":{"gitId":"TianaiYan"},"content":"        planList.createAndAddPlan(\"Plan 3 /workouts 1, 3, 4\");","lastModifiedDate":"2022-03-29"},{"lineNumber":197,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":198,"author":{"gitId":"TianaiYan"},"content":"        String planNumberToDelete \u003d \"5\";","lastModifiedDate":"2022-03-29"},{"lineNumber":199,"author":{"gitId":"TianaiYan"},"content":"        assertThrows(InvalidPlanException.class,","lastModifiedDate":"2022-03-29"},{"lineNumber":200,"author":{"gitId":"TianaiYan"},"content":"            () -\u003e planList.deletePlan(planNumberToDelete));","lastModifiedDate":"2022-03-29"},{"lineNumber":201,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":202,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":203,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":204,"author":{"gitId":"TianaiYan"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":205,"author":{"gitId":"TianaiYan"},"content":"    void deleteWorkout_inputArgumentIsNotANumber_expectNumberFormatException() throws InvalidPlanException {","lastModifiedDate":"2022-03-29"},{"lineNumber":206,"author":{"gitId":"TianaiYan"},"content":"        planList.createAndAddPlan(\"Plan 1 /workouts 1,5,4,3\");","lastModifiedDate":"2022-03-29"},{"lineNumber":207,"author":{"gitId":"TianaiYan"},"content":"        planList.createAndAddPlan(\"Plan 2 /workouts 1,5,4,3,1,1,1\");","lastModifiedDate":"2022-03-29"},{"lineNumber":208,"author":{"gitId":"TianaiYan"},"content":"        planList.createAndAddPlan(\"Plan 3 /workouts 1, 3, 4\");","lastModifiedDate":"2022-03-29"},{"lineNumber":209,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":210,"author":{"gitId":"TianaiYan"},"content":"        String invalidArgument \u003d \"3a\";","lastModifiedDate":"2022-03-29"},{"lineNumber":211,"author":{"gitId":"TianaiYan"},"content":"        assertThrows(NumberFormatException.class,","lastModifiedDate":"2022-03-29"},{"lineNumber":212,"author":{"gitId":"TianaiYan"},"content":"            () -\u003e planList.deletePlan(invalidArgument));","lastModifiedDate":"2022-03-29"},{"lineNumber":213,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":214,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":215,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":216,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"Musfirahe0556596":128,"alanlowzies":1,"TianaiYan":87}},{"path":"src/test/java/data/workouts/WorkoutListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"package data.workouts;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"emilysim00"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"emilysim00"},"content":"import data.exercises.InvalidExerciseException;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"TianaiYan"},"content":"import data.plans.InvalidPlanException;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"TianaiYan"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"emilysim00"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"emilysim00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"TianaiYan"},"content":"import werkit.UI;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"emilysim00"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"emilysim00"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"emilysim00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"emilysim00"},"content":"class WorkoutListTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"    ExerciseList exerciseList;","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"    WorkoutList wl;","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"emilysim00"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"emilysim00"},"content":"    void setUp() {","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"        LogHandler.startLogHandler();","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"        exerciseList \u003d new ExerciseList();","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"        wl \u003d new WorkoutList(exerciseList);","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"emilysim00"},"content":"        exerciseList.addExerciseToList(\"push up\");","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"        exerciseList.addExerciseToList(\"pull up\");","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"emilysim00"},"content":"        exerciseList.addExerciseToList(\"sit up\");","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"emilysim00"},"content":"        exerciseList.addExerciseToList(\"hip thrust\");","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"emilysim00"},"content":"        exerciseList.addExerciseToList(\"burpee\");","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"emilysim00"},"content":"        exerciseList.addExerciseToList(\"lunge\");","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"emilysim00"},"content":"        exerciseList.addExerciseToList(\"crunch\");","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"emilysim00"},"content":"        exerciseList.addExerciseToList(\"russian twist\");","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"emilysim00"},"content":"        exerciseList.addExerciseToList(\"jumping jack\");","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"    void createAndAddWorkout_normalCreation_expectSuccess() throws InvalidExerciseException,","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"            InvalidWorkoutException {","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"        String newWorkout1 \u003d \"russian twist /reps 1000\";","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"        Workout outputWorkout1 \u003d wl.createAndAddWorkout(newWorkout1);","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"        assertEquals(outputWorkout1.getExerciseName(), \"russian twist\");","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"        assertEquals(outputWorkout1.getRepetitions(), 1000);","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(wl.checkForExistingWorkout(\"russian twist\", 1000));","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"        String newWorkout2 \u003d \"crunch /reps 2359\";","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"        Workout outputWorkout2 \u003d wl.createAndAddWorkout(newWorkout2);","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"alanlowzies"},"content":"        assertEquals(outputWorkout2.getExerciseName(), \"crunch\");","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"alanlowzies"},"content":"        assertEquals(outputWorkout2.getRepetitions(), 2359);","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(wl.checkForExistingWorkout(\"crunch\", 2359));","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"alanlowzies"},"content":"    void createAndAddWorkout_invalidExerciseName_expectInvalidExcerciseException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"alanlowzies"},"content":"        String invalidWorkout \u003d \"weeeeeee /reps 500\";","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"        assertThrows(InvalidExerciseException.class, () -\u003e wl.createAndAddWorkout(invalidWorkout));","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"    void createAndAddWorkout_invalidRepCount_expectInvalidWorkoutException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"        String invalidWorkout1 \u003d \"push up /reps -12345\";","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"        assertThrows(InvalidWorkoutException.class, () -\u003e wl.createAndAddWorkout(invalidWorkout1));","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"        String invalidWorkout2 \u003d \"sit up /reps 0\";","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"        assertThrows(InvalidWorkoutException.class, () -\u003e wl.createAndAddWorkout(invalidWorkout2));","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"    void createAndAddWorkout_addExistingWorkout_expectInvalidWorkoutException() throws InvalidExerciseException,","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"            InvalidWorkoutException {","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"        String workout \u003d \"burpee /reps 100\";","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"        wl.createAndAddWorkout(workout);","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"alanlowzies"},"content":"        assertThrows(InvalidWorkoutException.class, () -\u003e wl.createAndAddWorkout(workout));","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"emilysim00"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"emilysim00"},"content":"    void listWorkout_expectNoPrints() {","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"emilysim00"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"emilysim00"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"emilysim00"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"emilysim00"},"content":"        wl.listAllWorkout();","lastModifiedDate":"2022-04-01"},{"lineNumber":87,"author":{"gitId":"emilysim00"},"content":"        System.out.flush();","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"emilysim00"},"content":"        String expectedOutput \u003d \"The workout list is empty\";","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"emilysim00"},"content":"        assertEquals(expectedOutput, consoleOutput.toString().trim());","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"emilysim00"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"emilysim00"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"emilysim00"},"content":"    void listWorkout_expectThreePrints() throws InvalidWorkoutException, InvalidExerciseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"emilysim00"},"content":"        wl.createAndAddWorkout(\"push up /reps 11\");","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"emilysim00"},"content":"        wl.createAndAddWorkout(\"sit up /reps 15\");","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"emilysim00"},"content":"        wl.createAndAddWorkout(\"lunge /reps 10\");","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"emilysim00"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"emilysim00"},"content":"                \"Showing workouts 1-3 of 3:\\n\"","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"emilysim00"},"content":"                        + \"1. push up (11 reps)\\n\"","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"emilysim00"},"content":"                        + \"2. sit up (15 reps)\\n\"","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"emilysim00"},"content":"                        + \"3. lunge (10 reps)\\n\"","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"emilysim00"},"content":"                        + \"Showed all workouts in list\\n\";","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"emilysim00"},"content":"        expectedOutput \u003d expectedOutput.replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"emilysim00"},"content":"        ByteArrayOutputStream consoleOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"emilysim00"},"content":"        PrintStream ps \u003d new PrintStream(consoleOutput);","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"emilysim00"},"content":"        System.setOut(ps);","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"emilysim00"},"content":"        wl.listAllWorkout();","lastModifiedDate":"2022-04-01"},{"lineNumber":108,"author":{"gitId":"emilysim00"},"content":"        System.out.flush();","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"emilysim00"},"content":"        String consoleOutputs \u003d consoleOutput.toString().replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\");","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"emilysim00"},"content":"        assertEquals(expectedOutput, consoleOutputs);","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"emilysim00"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"Musfirahe0556596"},"content":"    void deleteWorkout_validIndexToDelete_expectDeleteWorkout() throws","lastModifiedDate":"2022-03-11"},{"lineNumber":115,"author":{"gitId":"TianaiYan"},"content":"            InvalidWorkoutException, InvalidExerciseException, InvalidPlanException {","lastModifiedDate":"2022-03-31"},{"lineNumber":116,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"Musfirahe0556596"},"content":"        wl.createAndAddWorkout(\"push up /reps 11\");","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"Musfirahe0556596"},"content":"        wl.createAndAddWorkout(\"sit up /reps 15\");","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"Musfirahe0556596"},"content":"        wl.createAndAddWorkout(\"lunge /reps 10\");","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"TianaiYan"},"content":"        PlanList planList \u003d new PlanList(wl);","lastModifiedDate":"2022-03-31"},{"lineNumber":121,"author":{"gitId":"TianaiYan"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2022-03-31"},{"lineNumber":122,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"Musfirahe0556596"},"content":"        int workoutNumberToDeleteInList \u003d 2;","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"alanlowzies"},"content":"        assertEquals(\"sit up (15 reps)\", wl.getWorkoutsDisplayList().get(workoutNumberToDeleteInList - 1).toString());","lastModifiedDate":"2022-03-17"},{"lineNumber":126,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":127,"author":{"gitId":"TianaiYan"},"content":"        wl.deleteWorkout(Integer.toString(workoutNumberToDeleteInList), planList, ui);","lastModifiedDate":"2022-03-31"},{"lineNumber":128,"author":{"gitId":"alanlowzies"},"content":"        assertEquals(\"lunge (10 reps)\", wl.getWorkoutsDisplayList().get(workoutNumberToDeleteInList - 1).toString());","lastModifiedDate":"2022-03-17"},{"lineNumber":129,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":130,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":131,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":132,"author":{"gitId":"TianaiYan"},"content":"    void deleteWorkout_indexOutOfRange_expectInvalidWorkoutException() throws InvalidWorkoutException,","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"Musfirahe0556596"},"content":"            InvalidExerciseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":134,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":135,"author":{"gitId":"Musfirahe0556596"},"content":"        wl.createAndAddWorkout(\"push up /reps 11\");","lastModifiedDate":"2022-03-11"},{"lineNumber":136,"author":{"gitId":"Musfirahe0556596"},"content":"        wl.createAndAddWorkout(\"sit up /reps 15\");","lastModifiedDate":"2022-03-11"},{"lineNumber":137,"author":{"gitId":"Musfirahe0556596"},"content":"        wl.createAndAddWorkout(\"lunge /reps 10\");","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":139,"author":{"gitId":"TianaiYan"},"content":"        PlanList planList \u003d new PlanList(wl);","lastModifiedDate":"2022-03-31"},{"lineNumber":140,"author":{"gitId":"TianaiYan"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2022-03-31"},{"lineNumber":141,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":142,"author":{"gitId":"Musfirahe0556596"},"content":"        int workoutNumberToDeleteInList \u003d 5;","lastModifiedDate":"2022-03-11"},{"lineNumber":143,"author":{"gitId":"TianaiYan"},"content":"        assertThrows(InvalidWorkoutException.class,","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"TianaiYan"},"content":"            () -\u003e wl.deleteWorkout(Integer.toString(workoutNumberToDeleteInList), planList, ui));","lastModifiedDate":"2022-03-31"},{"lineNumber":145,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":146,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":147,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":148,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":149,"author":{"gitId":"Musfirahe0556596"},"content":"    void deleteWorkout_invalidParseArgumentInput_expectNumberFormatException() throws InvalidWorkoutException,","lastModifiedDate":"2022-03-11"},{"lineNumber":150,"author":{"gitId":"Musfirahe0556596"},"content":"            InvalidExerciseException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2022-03-13"},{"lineNumber":151,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":152,"author":{"gitId":"Musfirahe0556596"},"content":"        wl.createAndAddWorkout(\"push up /reps 11\");","lastModifiedDate":"2022-03-11"},{"lineNumber":153,"author":{"gitId":"Musfirahe0556596"},"content":"        wl.createAndAddWorkout(\"sit up /reps 15\");","lastModifiedDate":"2022-03-11"},{"lineNumber":154,"author":{"gitId":"Musfirahe0556596"},"content":"        wl.createAndAddWorkout(\"lunge /reps 10\");","lastModifiedDate":"2022-03-11"},{"lineNumber":155,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":156,"author":{"gitId":"TianaiYan"},"content":"        PlanList planList \u003d new PlanList(wl);","lastModifiedDate":"2022-03-31"},{"lineNumber":157,"author":{"gitId":"TianaiYan"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2022-03-31"},{"lineNumber":158,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":159,"author":{"gitId":"Musfirahe0556596"},"content":"        String invalidArgumentSupplied \u003d \"t5\";","lastModifiedDate":"2022-03-11"},{"lineNumber":160,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(NumberFormatException.class,","lastModifiedDate":"2022-03-11"},{"lineNumber":161,"author":{"gitId":"TianaiYan"},"content":"            () -\u003e wl.deleteWorkout(invalidArgumentSupplied, planList, ui));","lastModifiedDate":"2022-03-31"},{"lineNumber":162,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":163,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":164,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":165,"author":{"gitId":"TianaiYan"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":166,"author":{"gitId":"TianaiYan"},"content":"    void updateWorkout_validInputArgument_expectSuccessUpdate() throws InvalidWorkoutException,","lastModifiedDate":"2022-03-14"},{"lineNumber":167,"author":{"gitId":"TianaiYan"},"content":"            InvalidExerciseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":168,"author":{"gitId":"TianaiYan"},"content":"        wl.createAndAddWorkout(\"push up /reps 11\");","lastModifiedDate":"2022-03-14"},{"lineNumber":169,"author":{"gitId":"TianaiYan"},"content":"        wl.createAndAddWorkout(\"sit up /reps 15\");","lastModifiedDate":"2022-03-14"},{"lineNumber":170,"author":{"gitId":"TianaiYan"},"content":"        wl.createAndAddWorkout(\"lunge /reps 10\");","lastModifiedDate":"2022-03-14"},{"lineNumber":171,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":172,"author":{"gitId":"TianaiYan"},"content":"        int indexToUpdate \u003d 3;","lastModifiedDate":"2022-03-14"},{"lineNumber":173,"author":{"gitId":"TianaiYan"},"content":"        int newReps \u003d 15;","lastModifiedDate":"2022-03-14"},{"lineNumber":174,"author":{"gitId":"TianaiYan"},"content":"        String updateArgument \u003d Integer.toString(indexToUpdate) + \" \" + Integer.toString(newReps);","lastModifiedDate":"2022-03-14"},{"lineNumber":175,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":176,"author":{"gitId":"alanlowzies"},"content":"        String workoutDetails \u003d wl.getWorkoutsDisplayList().get(indexToUpdate - 1).toString();","lastModifiedDate":"2022-03-17"},{"lineNumber":177,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":178,"author":{"gitId":"TianaiYan"},"content":"        assertEquals(\"lunge (10 reps)\", workoutDetails);","lastModifiedDate":"2022-03-14"},{"lineNumber":179,"author":{"gitId":"TianaiYan"},"content":"        wl.updateWorkout(updateArgument);","lastModifiedDate":"2022-03-14"},{"lineNumber":180,"author":{"gitId":"alanlowzies"},"content":"        workoutDetails \u003d wl.getWorkoutsDisplayList().get(indexToUpdate - 1).toString();","lastModifiedDate":"2022-03-17"},{"lineNumber":181,"author":{"gitId":"TianaiYan"},"content":"        assertEquals(\"lunge (15 reps)\", workoutDetails);","lastModifiedDate":"2022-03-14"},{"lineNumber":182,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":183,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":184,"author":{"gitId":"TianaiYan"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":185,"author":{"gitId":"TianaiYan"},"content":"    void updateWorkout_InvalidNumberFormat_expectNumberFormatException() throws InvalidWorkoutException,","lastModifiedDate":"2022-03-14"},{"lineNumber":186,"author":{"gitId":"TianaiYan"},"content":"            InvalidExerciseException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2022-03-14"},{"lineNumber":187,"author":{"gitId":"TianaiYan"},"content":"        wl.createAndAddWorkout(\"push up /reps 11\");","lastModifiedDate":"2022-03-14"},{"lineNumber":188,"author":{"gitId":"TianaiYan"},"content":"        wl.createAndAddWorkout(\"sit up /reps 15\");","lastModifiedDate":"2022-03-14"},{"lineNumber":189,"author":{"gitId":"TianaiYan"},"content":"        wl.createAndAddWorkout(\"lunge /reps 10\");","lastModifiedDate":"2022-03-14"},{"lineNumber":190,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":191,"author":{"gitId":"TianaiYan"},"content":"        String indexToUpdate \u003d \"a\";","lastModifiedDate":"2022-03-14"},{"lineNumber":192,"author":{"gitId":"TianaiYan"},"content":"        int newReps \u003d 15;","lastModifiedDate":"2022-03-14"},{"lineNumber":193,"author":{"gitId":"TianaiYan"},"content":"        String updateArgument \u003d indexToUpdate + \" \" + Integer.toString(newReps);","lastModifiedDate":"2022-03-14"},{"lineNumber":194,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":195,"author":{"gitId":"TianaiYan"},"content":"        assertThrows(NumberFormatException.class,","lastModifiedDate":"2022-03-14"},{"lineNumber":196,"author":{"gitId":"TianaiYan"},"content":"            () -\u003e wl.updateWorkout(updateArgument));","lastModifiedDate":"2022-03-14"},{"lineNumber":197,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":198,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":199,"author":{"gitId":"TianaiYan"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":200,"author":{"gitId":"TianaiYan"},"content":"    void updateWorkout_workoutIndexOutOfRange_expectInvalidWorkoutException() throws InvalidWorkoutException,","lastModifiedDate":"2022-03-26"},{"lineNumber":201,"author":{"gitId":"TianaiYan"},"content":"            InvalidExerciseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":202,"author":{"gitId":"TianaiYan"},"content":"        wl.createAndAddWorkout(\"push up /reps 11\");","lastModifiedDate":"2022-03-14"},{"lineNumber":203,"author":{"gitId":"TianaiYan"},"content":"        wl.createAndAddWorkout(\"sit up /reps 15\");","lastModifiedDate":"2022-03-14"},{"lineNumber":204,"author":{"gitId":"TianaiYan"},"content":"        wl.createAndAddWorkout(\"lunge /reps 10\");","lastModifiedDate":"2022-03-14"},{"lineNumber":205,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":206,"author":{"gitId":"TianaiYan"},"content":"        String indexToUpdate \u003d \"4\";","lastModifiedDate":"2022-03-14"},{"lineNumber":207,"author":{"gitId":"TianaiYan"},"content":"        int newReps \u003d 15;","lastModifiedDate":"2022-03-14"},{"lineNumber":208,"author":{"gitId":"TianaiYan"},"content":"        String updateArgument \u003d indexToUpdate + \" \" + Integer.toString(newReps);","lastModifiedDate":"2022-03-14"},{"lineNumber":209,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":210,"author":{"gitId":"TianaiYan"},"content":"        assertThrows(InvalidWorkoutException.class,","lastModifiedDate":"2022-03-26"},{"lineNumber":211,"author":{"gitId":"TianaiYan"},"content":"            () -\u003e wl.updateWorkout(updateArgument));","lastModifiedDate":"2022-03-14"},{"lineNumber":212,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":213,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":214,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":215,"author":{"gitId":"TianaiYan"},"content":"    void updateWorkout_workoutToUpdateHasExisted_expectInvalidWorkoutException() throws InvalidWorkoutException,","lastModifiedDate":"2022-03-15"},{"lineNumber":216,"author":{"gitId":"TianaiYan"},"content":"            InvalidExerciseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":217,"author":{"gitId":"TianaiYan"},"content":"        wl.createAndAddWorkout(\"pull up /reps 15\");","lastModifiedDate":"2022-03-15"},{"lineNumber":218,"author":{"gitId":"TianaiYan"},"content":"        wl.createAndAddWorkout(\"sit up /reps 15\");","lastModifiedDate":"2022-03-15"},{"lineNumber":219,"author":{"gitId":"TianaiYan"},"content":"        wl.createAndAddWorkout(\"pull up /reps 10\");","lastModifiedDate":"2022-03-15"},{"lineNumber":220,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":221,"author":{"gitId":"TianaiYan"},"content":"        String indexToUpdate \u003d \"3\";","lastModifiedDate":"2022-03-15"},{"lineNumber":222,"author":{"gitId":"TianaiYan"},"content":"        int newReps \u003d 15;","lastModifiedDate":"2022-03-15"},{"lineNumber":223,"author":{"gitId":"TianaiYan"},"content":"        String updateArgument \u003d indexToUpdate + \" \" + Integer.toString(newReps);","lastModifiedDate":"2022-03-15"},{"lineNumber":224,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":225,"author":{"gitId":"TianaiYan"},"content":"        assertThrows(InvalidWorkoutException.class,","lastModifiedDate":"2022-03-15"},{"lineNumber":226,"author":{"gitId":"TianaiYan"},"content":"            () -\u003e wl.updateWorkout(updateArgument));","lastModifiedDate":"2022-03-15"},{"lineNumber":227,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":228,"author":{"gitId":"TianaiYan"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":229,"author":{"gitId":"TianaiYan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":230,"author":{"gitId":"TianaiYan"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":231,"author":{"gitId":"alanlowzies"},"content":"    void checkForExistingWorkout_uniqueNewWorkout_expectFalse() throws InvalidWorkoutException,","lastModifiedDate":"2022-03-14"},{"lineNumber":232,"author":{"gitId":"alanlowzies"},"content":"            InvalidExerciseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":233,"author":{"gitId":"alanlowzies"},"content":"        wl.createAndAddWorkout(\"russian twist /reps 1000\");","lastModifiedDate":"2022-03-14"},{"lineNumber":234,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":235,"author":{"gitId":"alanlowzies"},"content":"        String newWorkoutExerciseName1 \u003d \"running\";","lastModifiedDate":"2022-03-14"},{"lineNumber":236,"author":{"gitId":"alanlowzies"},"content":"        int newWorkoutRepsCount1 \u003d 1000;","lastModifiedDate":"2022-03-14"},{"lineNumber":237,"author":{"gitId":"alanlowzies"},"content":"        String newWorkoutExerciseName2 \u003d \"russian twist\";","lastModifiedDate":"2022-03-14"},{"lineNumber":238,"author":{"gitId":"alanlowzies"},"content":"        int newWorkoutRepsCount2 \u003d 999;","lastModifiedDate":"2022-03-14"},{"lineNumber":239,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":240,"author":{"gitId":"alanlowzies"},"content":"        assertEquals(false, wl.checkForExistingWorkout(newWorkoutExerciseName1, newWorkoutRepsCount1));","lastModifiedDate":"2022-03-14"},{"lineNumber":241,"author":{"gitId":"alanlowzies"},"content":"        assertEquals(false, wl.checkForExistingWorkout(newWorkoutExerciseName2, newWorkoutRepsCount2));","lastModifiedDate":"2022-03-14"},{"lineNumber":242,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":243,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":244,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":245,"author":{"gitId":"alanlowzies"},"content":"    void checkForExistingWorkout_nonUniqueNewWorkout_expectTrue()","lastModifiedDate":"2022-03-14"},{"lineNumber":246,"author":{"gitId":"alanlowzies"},"content":"            throws InvalidWorkoutException, InvalidExerciseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":247,"author":{"gitId":"alanlowzies"},"content":"        wl.createAndAddWorkout(\"russian twist /reps 1000\");","lastModifiedDate":"2022-03-14"},{"lineNumber":248,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":249,"author":{"gitId":"alanlowzies"},"content":"        String newWorkoutExerciseName \u003d \"russian twist\";","lastModifiedDate":"2022-03-14"},{"lineNumber":250,"author":{"gitId":"alanlowzies"},"content":"        int newWorkoutRepsCount \u003d 1000;","lastModifiedDate":"2022-03-14"},{"lineNumber":251,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":252,"author":{"gitId":"alanlowzies"},"content":"        assertEquals(true, wl.checkForExistingWorkout(newWorkoutExerciseName, newWorkoutRepsCount));","lastModifiedDate":"2022-03-14"},{"lineNumber":253,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":254,"author":{"gitId":"emilysim00"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"emilysim00":60,"Musfirahe0556596":36,"alanlowzies":77,"TianaiYan":81}},{"path":"src/test/java/storage/FileManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alanlowzies"},"content":"package storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"alanlowzies"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"import data.workouts.Workout;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"import data.plans.Plan;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"import data.workouts.WorkoutList;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"a1021492980"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"alanlowzies"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"public class FileManagerTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"    ExerciseList el;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"    WorkoutList wl;","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"    PlanList pl;","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"alanlowzies"},"content":"        LogHandler.startLogHandler();","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"        el \u003d new ExerciseList();","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"        wl \u003d new WorkoutList(el);","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"        pl \u003d new PlanList(wl);","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"    public void convertWorkoutToFileDataFormat_normalWorkoutInput_conversionSuccess() {","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"a1021492980"},"content":"        Workout testWorkoutSample1 \u003d new Workout(\"push up\", 1);","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"a1021492980"},"content":"        Workout testWorkoutSample2 \u003d new Workout(\"russian twist\", 1000);","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"a1021492980"},"content":"        Workout testWorkoutSample3 \u003d new Workout(\"swimming\", 20);","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"        String expectedOutput1 \u003d \"push up | 1\";","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"        String expectedOutput2 \u003d \"russian twist | 1000\";","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"        String expectedOutput3 \u003d \"swimming | 20\";","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"        FileManager fm \u003d new FileManager(pl);","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"a1021492980"},"content":"        assertEquals(expectedOutput1, fm.convertWorkoutToFileDataFormat(testWorkoutSample1));","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"a1021492980"},"content":"        assertEquals(expectedOutput2, fm.convertWorkoutToFileDataFormat(testWorkoutSample2));","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"a1021492980"},"content":"        assertEquals(expectedOutput3, fm.convertWorkoutToFileDataFormat(testWorkoutSample3));","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"a1021492980"},"content":"    public void convertPlanToFileDataFormat_normalPlanInput_conversionSuccess() {","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"a1021492980"},"content":"        Workout testWorkoutSample1 \u003d new Workout(\"push up\", 1);","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"a1021492980"},"content":"        Workout testWorkoutSample2 \u003d new Workout(\"russian twist\", 1000);","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"a1021492980"},"content":"        Workout testWorkoutSample3 \u003d new Workout(\"swimming\", 20);","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"a1021492980"},"content":"        var listOfWorkouts1 \u003d new ArrayList\u003cWorkout\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"a1021492980"},"content":"        listOfWorkouts1.add(testWorkoutSample1);","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"a1021492980"},"content":"        listOfWorkouts1.add(testWorkoutSample2);","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"a1021492980"},"content":"        listOfWorkouts1.add(testWorkoutSample3);","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"a1021492980"},"content":"        var listOfWorkouts2 \u003d new ArrayList\u003cWorkout\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"a1021492980"},"content":"        listOfWorkouts2.add(testWorkoutSample1);","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"a1021492980"},"content":"        listOfWorkouts2.add(testWorkoutSample3);","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"a1021492980"},"content":"        Plan testPlanSample1 \u003d new Plan(\"coolMan\", listOfWorkouts1);","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"a1021492980"},"content":"        Plan testPlanSample2 \u003d new Plan(\"hotMan\", listOfWorkouts2);","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"a1021492980"},"content":"        String expectedOutput1 \u003d \"coolMan | push up | 1,russian twist | 1000,swimming | 20\";","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"a1021492980"},"content":"        String expectedOutput2 \u003d \"hotMan | push up | 1,swimming | 20\";","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"        FileManager fm \u003d new FileManager(pl);","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"a1021492980"},"content":"        assertEquals(expectedOutput1, fm.convertPlanToFileDataFormat(testPlanSample1));","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"a1021492980"},"content":"        assertEquals(expectedOutput2, fm.convertPlanToFileDataFormat(testPlanSample2));","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"    public void convertWorkoutToFileDataFormat_nullWorkoutInput_exceptionThrown() {","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"a1021492980"},"content":"        Workout testWorkoutSample1 \u003d null;","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"        FileManager fm \u003d new FileManager(pl);","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"a1021492980"},"content":"        assertThrows(NullPointerException.class,","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"a1021492980"},"content":"            () -\u003e fm.convertWorkoutToFileDataFormat(testWorkoutSample1));","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"a1021492980"},"content":"    public void convertPlanToFileDataFormat_nullPlanInput_exceptionThrown() {","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"a1021492980"},"content":"        Plan testPlanSample1 \u003d null;","lastModifiedDate":"2022-03-21"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"        FileManager fm \u003d new FileManager(pl);","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"        assertThrows(NullPointerException.class,","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"a1021492980"},"content":"            () -\u003e fm.convertPlanToFileDataFormat(testPlanSample1));","lastModifiedDate":"2022-03-21"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"alanlowzies":46,"a1021492980":41}},{"path":"src/test/java/werkit/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Musfirahe0556596"},"content":"package werkit;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"a1021492980"},"content":"import commands.InvalidCommandException;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"a1021492980"},"content":"import commands.WorkoutCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"a1021492980"},"content":"import commands.SearchCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"a1021492980"},"content":"import commands.ExitCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"a1021492980"},"content":"import commands.HelpCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"a1021492980"},"content":"import commands.ExerciseCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"a1021492980"},"content":"import commands.PlanCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"import commands.ScheduleCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"Musfirahe0556596"},"content":"import data.exercises.ExerciseList;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"Musfirahe0556596"},"content":"import data.plans.PlanList;","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"emilysim00"},"content":"import data.schedule.DayList;","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"Musfirahe0556596"},"content":"import data.workouts.WorkoutList;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"Musfirahe0556596"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"Musfirahe0556596"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"Musfirahe0556596"},"content":"import storage.FileManager;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"Musfirahe0556596"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"Musfirahe0556596"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"Musfirahe0556596"},"content":"class ParserTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"Musfirahe0556596"},"content":"    private UI ui;","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"Musfirahe0556596"},"content":"    private ExerciseList exerciseList;","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"Musfirahe0556596"},"content":"    private WorkoutList workoutList;","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"Musfirahe0556596"},"content":"    private FileManager fileManager;","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"Musfirahe0556596"},"content":"    private Parser parser;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"Musfirahe0556596"},"content":"    private PlanList planList;","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"emilysim00"},"content":"    private DayList dayList;","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"Musfirahe0556596"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"Musfirahe0556596"},"content":"    void setUp() {","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"        LogHandler.startLogHandler();","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"emilysim00"},"content":"        this.parser \u003d new Parser(ui, exerciseList, workoutList, fileManager, planList, dayList);","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"    void parseUserInput_validWorkoutCommand_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"        String workoutCommand1 \u003d \"workout /new russian twist /reps 1000\";","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"        String workoutCommand2 \u003d \"workout /list\";","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"        String workoutCommand3 \u003d \"workout /delete 1\";","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(workoutCommand1) instanceof WorkoutCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(workoutCommand2) instanceof WorkoutCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(workoutCommand3) instanceof WorkoutCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"alanlowzies"},"content":"    void parseUserInput_validHelpCommand_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"Musfirahe0556596"},"content":"        assertTrue(parser.parseUserInput(\"help\") instanceof HelpCommand);","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"alanlowzies"},"content":"    void parseUserInput_validExitCommand_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"Musfirahe0556596"},"content":"        assertTrue(parser.parseUserInput(\"exit\") instanceof ExitCommand);","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"alanlowzies"},"content":"    void parseUserInput_validExerciseCommand_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"alanlowzies"},"content":"        String exerciseCommand \u003d \"exercise /list\";","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(exerciseCommand) instanceof ExerciseCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"alanlowzies"},"content":"    void parseUserInput_validSearchCommand_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"alanlowzies"},"content":"        String searchCommand1 \u003d \"search /exercise up\";","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(searchCommand1) instanceof SearchCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"alanlowzies"},"content":"        String searchCommand2 \u003d \"search /workout 1000\";","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(searchCommand2) instanceof SearchCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"alanlowzies"},"content":"        String searchCommand3 \u003d \"search /plan biceps\";","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(searchCommand3) instanceof SearchCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"alanlowzies"},"content":"        String searchCommand4 \u003d \"search /all weeee\";","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(searchCommand4) instanceof SearchCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"alanlowzies"},"content":"    void parseUserInput_validPlanCommand_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"alanlowzies"},"content":"        String planCommand1 \u003d \"plan /new plan 1 /workouts 1, 2, 3, 4\";","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(planCommand1) instanceof PlanCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"alanlowzies"},"content":"        String planCommand2 \u003d \"plan /list\";","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(planCommand2) instanceof PlanCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"alanlowzies"},"content":"        String planCommand3 \u003d \"plan /details 1\";","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(planCommand3) instanceof PlanCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"alanlowzies"},"content":"        String planCommand4 \u003d \"plan /delete 1\";","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(planCommand4) instanceof PlanCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"alanlowzies"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"alanlowzies"},"content":"    void parseUserInput_validScheduleCommand_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"alanlowzies"},"content":"        String scheduleCommand1 \u003d \"schedule /update 1 2\";","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(scheduleCommand1) instanceof ScheduleCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"alanlowzies"},"content":"        String scheduleCommand2 \u003d \"schedule /list\";","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(scheduleCommand2) instanceof ScheduleCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"alanlowzies"},"content":"        String scheduleCommand3 \u003d \"schedule /clear 1\";","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(scheduleCommand3) instanceof ScheduleCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"alanlowzies"},"content":"        String scheduleCommand4 \u003d \"schedule /clearall\";","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"alanlowzies"},"content":"        assertTrue(parser.parseUserInput(scheduleCommand4) instanceof ScheduleCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"Musfirahe0556596"},"content":"    void parseUserInput_invalidGeneralCommand_exceptionThrown() {","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.parseUserInput(\"exitt\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.parseUserInput(\"helpp\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.parseUserInput(\"\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.parseUserInput(\"|\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.parseUserInput(\"workout /new | push up /reps 20\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"Musfirahe0556596"},"content":"    //Workout tests","lastModifiedDate":"2022-03-20"},{"lineNumber":122,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"alanlowzies"},"content":"    void createWorkoutCommand_validWorkoutCommand_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"Musfirahe0556596"},"content":"        assertTrue(parser.createWorkoutCommand(\"workout /new push up /reps 20\") instanceof WorkoutCommand);","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"Musfirahe0556596"},"content":"        assertTrue(parser.createWorkoutCommand(\"workout /update 1 15\") instanceof WorkoutCommand);","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"Musfirahe0556596"},"content":"        assertTrue(parser.createWorkoutCommand(\"workout /delete 1\") instanceof WorkoutCommand);","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"Musfirahe0556596"},"content":"        assertTrue(parser.createWorkoutCommand(\"workout /list\") instanceof WorkoutCommand);","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"Musfirahe0556596"},"content":"    void createWorkoutCommand_invalidWorkoutCommand_exceptionThrown() {","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createWorkoutCommand(\"workout /new\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createWorkoutCommand(\"workout /list extra\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":134,"author":{"gitId":"alanlowzies"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createWorkoutCommand(\"workout /listall hmm?\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createWorkoutCommand(\"workout /delete\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createWorkoutCommand(\"workout /update\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createWorkoutCommand(\"workout /test\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(ArrayIndexOutOfBoundsException.class, () -\u003e parser.createWorkoutCommand(\"workout\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":140,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":141,"author":{"gitId":"a1021492980"},"content":"    //Search tests","lastModifiedDate":"2022-03-21"},{"lineNumber":142,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":143,"author":{"gitId":"alanlowzies"},"content":"    void createSearchCommand_validSearchCommand_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":144,"author":{"gitId":"a1021492980"},"content":"        assertTrue(parser.createSearchCommand(\"search /exercise up\") instanceof SearchCommand);","lastModifiedDate":"2022-03-21"},{"lineNumber":145,"author":{"gitId":"a1021492980"},"content":"        assertTrue(parser.createSearchCommand(\"search /exercise asdaskd\") instanceof SearchCommand);","lastModifiedDate":"2022-03-21"},{"lineNumber":146,"author":{"gitId":"a1021492980"},"content":"        assertTrue(parser.createSearchCommand(\"search /plan cool\") instanceof SearchCommand);","lastModifiedDate":"2022-03-21"},{"lineNumber":147,"author":{"gitId":"a1021492980"},"content":"        assertTrue(parser.createSearchCommand(\"search /plan asldasld\") instanceof SearchCommand);","lastModifiedDate":"2022-03-21"},{"lineNumber":148,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":149,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":150,"author":{"gitId":"a1021492980"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":151,"author":{"gitId":"a1021492980"},"content":"    void createSearchCommand_invalidSearchCommand_exceptionThrown() {","lastModifiedDate":"2022-03-21"},{"lineNumber":152,"author":{"gitId":"a1021492980"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createSearchCommand(\"search /new\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":153,"author":{"gitId":"a1021492980"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createSearchCommand(\"search /list extra\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":154,"author":{"gitId":"a1021492980"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createSearchCommand(\"search /delete\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":155,"author":{"gitId":"a1021492980"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createSearchCommand(\"search /update\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":156,"author":{"gitId":"a1021492980"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createSearchCommand(\"search /test\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":157,"author":{"gitId":"a1021492980"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createSearchCommand(\"search /exercise\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":158,"author":{"gitId":"a1021492980"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createSearchCommand(\"search /plan\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":159,"author":{"gitId":"a1021492980"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createSearchCommand(\"search fasdjaks\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":160,"author":{"gitId":"a1021492980"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createSearchCommand(\"search -1\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":161,"author":{"gitId":"a1021492980"},"content":"        assertThrows(ArrayIndexOutOfBoundsException.class, () -\u003e parser.createSearchCommand(\"search\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":162,"author":{"gitId":"a1021492980"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":163,"author":{"gitId":"a1021492980"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":164,"author":{"gitId":"Musfirahe0556596"},"content":"    //Exercise tests","lastModifiedDate":"2022-03-20"},{"lineNumber":165,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":166,"author":{"gitId":"Musfirahe0556596"},"content":"    void createExerciseCommand_validExerciseCommand_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-03-14"},{"lineNumber":167,"author":{"gitId":"Musfirahe0556596"},"content":"        assertTrue(parser.createExerciseCommand(\"exercise /list\") instanceof ExerciseCommand);","lastModifiedDate":"2022-03-14"},{"lineNumber":168,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":169,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":170,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":171,"author":{"gitId":"Musfirahe0556596"},"content":"    void createExerciseCommand_invalidExerciseCommand_exceptionThrown() {","lastModifiedDate":"2022-03-14"},{"lineNumber":172,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(ArrayIndexOutOfBoundsException.class, () -\u003e parser.createExerciseCommand(\"exercise\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":173,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createExerciseCommand(\"exercise /test\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":174,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createExerciseCommand(\"exercise /list extra\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":175,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":176,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":177,"author":{"gitId":"Musfirahe0556596"},"content":"    //Plan tests","lastModifiedDate":"2022-03-20"},{"lineNumber":178,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":179,"author":{"gitId":"Musfirahe0556596"},"content":"    void createPlanCommand_validPlanCommand_expectSuccess() throws InvalidCommandException {","lastModifiedDate":"2022-03-20"},{"lineNumber":180,"author":{"gitId":"Musfirahe0556596"},"content":"        assertTrue(parser.createPlanCommand(\"plan /new Random /workouts 1,2,3\") instanceof PlanCommand);","lastModifiedDate":"2022-03-20"},{"lineNumber":181,"author":{"gitId":"Musfirahe0556596"},"content":"        assertTrue(parser.createPlanCommand(\"plan /new Random /workouts 1,1,1,1,1,1,1,1,1,1\") instanceof PlanCommand);","lastModifiedDate":"2022-03-20"},{"lineNumber":182,"author":{"gitId":"Musfirahe0556596"},"content":"        assertTrue(parser.createPlanCommand(\"plan /new Random /workouts 1, 3, 2\") instanceof PlanCommand);","lastModifiedDate":"2022-03-23"},{"lineNumber":183,"author":{"gitId":"Musfirahe0556596"},"content":"        assertTrue(parser.createPlanCommand(\"plan /new Random /workouts 2\") instanceof PlanCommand);","lastModifiedDate":"2022-03-20"},{"lineNumber":184,"author":{"gitId":"Musfirahe0556596"},"content":"        assertTrue(parser.createPlanCommand(\"plan /list\") instanceof PlanCommand);","lastModifiedDate":"2022-03-20"},{"lineNumber":185,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":186,"author":{"gitId":"Musfirahe0556596"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":187,"author":{"gitId":"Musfirahe0556596"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":188,"author":{"gitId":"Musfirahe0556596"},"content":"    void createPlanCommand_invalidPlanCommand_exceptionThrown() {","lastModifiedDate":"2022-03-20"},{"lineNumber":189,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createPlanCommand(\"plan /new\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":190,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(ArrayIndexOutOfBoundsException.class, () -\u003e parser.createPlanCommand(\"plan\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":191,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createWorkoutCommand(\"plan /test\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":192,"author":{"gitId":"Musfirahe0556596"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.createWorkoutCommand(\"plan /list extra\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":193,"author":{"gitId":"Musfirahe0556596"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":194,"author":{"gitId":"Musfirahe0556596"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"emilysim00":3,"Musfirahe0556596":90,"alanlowzies":71,"a1021492980":30}},{"path":"src/test/java/werkit/WerkItTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emilysim00"},"content":"package werkit;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"alanlowzies"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"alanlowzies"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"alanlowzies"},"content":"import storage.LogHandler;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"alanlowzies"},"content":"import java.io.InputStream;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"alanlowzies"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"alanlowzies"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"alanlowzies"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"alanlowzies"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"alanlowzies"},"content":"class WerkItTest {","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"alanlowzies"},"content":"    private static final InputStream DEFAULT_STDIN \u003d System.in;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"alanlowzies"},"content":"    @AfterEach","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"alanlowzies"},"content":"    void rollbackStdIn() {","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"alanlowzies"},"content":"        System.setIn(DEFAULT_STDIN);","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"alanlowzies"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"alanlowzies"},"content":"    void startContinuousUserPrompt_simpleExit_expectSuccess() throws IOException {","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"alanlowzies"},"content":"        String testCommand \u003d \"exit\" + System.lineSeparator();","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"alanlowzies"},"content":"        ByteArrayInputStream testByteData \u003d new ByteArrayInputStream(testCommand.getBytes());","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"alanlowzies"},"content":"        System.setIn(testByteData);","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"alanlowzies"},"content":"        LogHandler.startLogHandler();","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"alanlowzies"},"content":"        WerkIt werkIt \u003d new WerkIt();","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"alanlowzies"},"content":"        String expectedOutput \u003d \"----------------------------------------------------------------------\"","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"alanlowzies"},"content":"                + System.lineSeparator()","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"alanlowzies"},"content":"                + \"Now then, what can I do for you today?\"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"alanlowzies"},"content":"                + System.lineSeparator()","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"alanlowzies"},"content":"                + \"(Need help? Type \u0027help\u0027 for a guide!)\"","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"alanlowzies"},"content":"                + System.lineSeparator()","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"alanlowzies"},"content":"                + \"----------------------------------------------------------------------\"","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"alanlowzies"},"content":"                + System.lineSeparator()","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"alanlowzies"},"content":"                + \"\u003e ----------------------------------------------------------------------\"","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"alanlowzies"},"content":"                + System.lineSeparator()","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"alanlowzies"},"content":"                + \"Thank you for using WerkIt! See you again soon...\"","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"alanlowzies"},"content":"                + System.lineSeparator()","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"alanlowzies"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\"","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"alanlowzies"},"content":"                + System.lineSeparator();","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"alanlowzies"},"content":"        ByteArrayOutputStream actualOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"alanlowzies"},"content":"        System.setOut(new PrintStream(actualOutput));","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"alanlowzies"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"alanlowzies"},"content":"        werkIt.startContinuousUserPrompt();","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"alanlowzies"},"content":"        assertEquals(expectedOutput, actualOutput.toString());","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"emilysim00":1,"alanlowzies":44,"-":7}}]
