[{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | John Doe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Joe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ron John | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"BotBw"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wang Haoxuan | [Github](https://github.com/BotBw) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"BotBw":1,"-":8}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"darylhjd"},"content":"import seedu.duke.controllers.MainController;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"darylhjd"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"darylhjd"},"content":"     * Main entry-point for application.","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"darylhjd"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"darylhjd"},"content":"        MainController main \u003d new MainController(scanner);","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"darylhjd"},"content":"        main.takeControl();","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"darylhjd":6,"-":10}},{"path":"src/main/java/seedu/duke/controllers/Controller.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darylhjd"},"content":"package seedu.duke.controllers;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"darylhjd"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"darylhjd"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"darylhjd"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"darylhjd"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"darylhjd"},"content":" * Controller is an abstract class that should be extended by all Controllers.","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"darylhjd"},"content":" *","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"darylhjd"},"content":" * \u003cp\u003eProvides base functionality for printing choices and control implementation.","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"darylhjd"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"darylhjd"},"content":"public abstract class Controller {","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"darylhjd"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"darylhjd"},"content":"     * This character tells the current command to terminate.","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"darylhjd"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"darylhjd"},"content":"    protected static final String TERMINATOR \u003d \"-\";","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"darylhjd"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"darylhjd"},"content":"     * Options provided by the controller. They can be selected by index.","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"darylhjd"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"darylhjd"},"content":"     * \u003cp\u003eAll controllers should place the exit option as the top-level choice.","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"darylhjd"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"darylhjd"},"content":"    protected final String[] choices;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"darylhjd"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"darylhjd"},"content":"     * The global scanner object that should be used by all Controllers in the application.","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"darylhjd"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"darylhjd"},"content":"    protected final Scanner scanner;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"darylhjd"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"darylhjd"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"darylhjd"},"content":"     * Creates a Controller with a list of choices.","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"darylhjd"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"darylhjd"},"content":"     * \u003cp\u003eSupply the controller with a Scanner object. You should not create a new Scanner(System.in)","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"darylhjd"},"content":"     * object and pass it to the constructor. Instead, create one single global scanner","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"darylhjd"},"content":"     * and pass that single scanner to multiple controllers.","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"darylhjd"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"darylhjd"},"content":"     * @param choices Array of strings listing the choices available to the user.","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"darylhjd"},"content":"     * @param scanner Scanner for System.in.","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"darylhjd"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"darylhjd"},"content":"    public Controller(String[] choices, Scanner scanner) {","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"darylhjd"},"content":"        this.choices \u003d choices;","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"darylhjd"},"content":"        this.scanner \u003d scanner;","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"darylhjd"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"darylhjd"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"darylhjd"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"darylhjd"},"content":"     * Function that switches between options provided by the current controller.","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"darylhjd"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"darylhjd"},"content":"     * \u003cp\u003eThis function MUST be overridden for all controllers.","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"darylhjd"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"darylhjd"},"content":"     * @param choice Option choice.","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"darylhjd"},"content":"     * @return Whether to relinquish control or not.","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"darylhjd"},"content":"     * @throws IllegalArgumentException When option methods throw the same error. This will","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"darylhjd"},"content":"     *                                  be caught by the `takeControl` method.","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"darylhjd"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"darylhjd"},"content":"    protected abstract boolean optionSwitcher(int choice) throws IllegalArgumentException;","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"darylhjd"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"darylhjd"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"darylhjd"},"content":"     * Provides a base control implementation for all controllers.","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"darylhjd"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"darylhjd"},"content":"     * \u003cp\u003eThe extended controller MUST override the `optionSwitcher` method for this method to work properly.","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"darylhjd"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"darylhjd"},"content":"     * \u003cp\u003eControllers may choose to override this method to perform extra operations (such as printing statements)","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"darylhjd"},"content":"     * before entering the input loop.","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"darylhjd"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"darylhjd"},"content":"    public void takeControl() {","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"darylhjd"},"content":"        // Print the options provided.","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"darylhjd"},"content":"        System.out.println(this);","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"darylhjd"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"darylhjd"},"content":"        int choice;","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"darylhjd"},"content":"        while (true) {","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"darylhjd"},"content":"            System.out.println(\"*\".repeat(30));","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"darylhjd"},"content":"            // Get input from user.","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"darylhjd"},"content":"            // try-catch block for getting choice.","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"darylhjd"},"content":"            try {","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"darylhjd"},"content":"                choice \u003d this.getChoice();","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"darylhjd"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"darylhjd"},"content":"                // If user enters terminating character, then we set choice to 0, effectively breaking the user","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"darylhjd"},"content":"                // out of the input loop for this controller.","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"darylhjd"},"content":"                choice \u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"darylhjd"},"content":"            }","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"darylhjd"},"content":"            // try-catch block for inner functions.","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"darylhjd"},"content":"            try {","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"darylhjd"},"content":"                if (this.optionSwitcher(choice)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"darylhjd"},"content":"                    break;","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"darylhjd"},"content":"                }","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"darylhjd"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"darylhjd"},"content":"                System.out.println(\"Terminating operation!\");","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"darylhjd"},"content":"            }","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"darylhjd"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"darylhjd"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"darylhjd"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"darylhjd"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"darylhjd"},"content":"     * Helper method to get a valid choice.","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"darylhjd"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"darylhjd"},"content":"     * @return Returns a valid choice.","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"darylhjd"},"content":"     * @throws IllegalArgumentException When user inputs terminator.","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"darylhjd"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"darylhjd"},"content":"    protected int getChoice() throws IllegalArgumentException {","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"darylhjd"},"content":"        while (true) {","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"darylhjd"},"content":"            try {","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"darylhjd"},"content":"                String line \u003d this.getString(\"Enter choice: \").toLowerCase();","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"darylhjd"},"content":"                int choice \u003d Integer.parseInt(line);","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"darylhjd"},"content":"                if (choice \u003c 0 || choice \u003e choices.length - 1) {","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"darylhjd"},"content":"                    throw new NumberFormatException(\"Invalid range!\");","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"darylhjd"},"content":"                }","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"darylhjd"},"content":"                return choice;","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"darylhjd"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"darylhjd"},"content":"                System.out.printf(\"Error parsing index - %s\\n\", e.getMessage());","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"darylhjd"},"content":"            }","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"darylhjd"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"darylhjd"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"darylhjd"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"darylhjd"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"darylhjd"},"content":"     * Helper method to get a valid string.","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"darylhjd"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"darylhjd"},"content":"     * @param msg Message to show user when getting input.","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"darylhjd"},"content":"     * @return Returns a valid string.","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"darylhjd"},"content":"     * @throws IllegalArgumentException When user inputs terminator.","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"darylhjd"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"darylhjd"},"content":"    protected String getString(String msg) throws IllegalArgumentException {","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"darylhjd"},"content":"        System.out.print(msg);","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"darylhjd"},"content":"        String line \u003d scanner.nextLine();","lastModifiedDate":"2022-03-09"},{"lineNumber":119,"author":{"gitId":"darylhjd"},"content":"        if (line.equals(TERMINATOR)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":120,"author":{"gitId":"darylhjd"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2022-03-09"},{"lineNumber":121,"author":{"gitId":"darylhjd"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"darylhjd"},"content":"        return line;","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"darylhjd"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"darylhjd"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":125,"author":{"gitId":"darylhjd"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"darylhjd"},"content":"     * Returns a string representing the choices available to the current user in the controller.","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"darylhjd"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"darylhjd"},"content":"     * @return Representative string of the controller.","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"darylhjd"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"darylhjd"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"darylhjd"},"content":"    public String toString() {","lastModifiedDate":"2022-03-09"},{"lineNumber":132,"author":{"gitId":"darylhjd"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-09"},{"lineNumber":133,"author":{"gitId":"darylhjd"},"content":"        for (int index \u003d 0; index \u003c choices.length; index++) {","lastModifiedDate":"2022-03-09"},{"lineNumber":134,"author":{"gitId":"darylhjd"},"content":"            builder.append(String.format(\"(%d) %s\\n\", index, choices[index]));","lastModifiedDate":"2022-03-09"},{"lineNumber":135,"author":{"gitId":"darylhjd"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":136,"author":{"gitId":"darylhjd"},"content":"        builder.deleteCharAt(builder.length() - 1);","lastModifiedDate":"2022-03-09"},{"lineNumber":137,"author":{"gitId":"darylhjd"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-09"},{"lineNumber":138,"author":{"gitId":"darylhjd"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":139,"author":{"gitId":"darylhjd"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"darylhjd":139}},{"path":"src/main/java/seedu/duke/controllers/DishController.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BotBw"},"content":"package seedu.duke.controllers;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"BotBw"},"content":"import seedu.duke.entities.Dish;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"BotBw"},"content":"import seedu.duke.manager.DishManager;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"BotBw"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"BotBw"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"BotBw"},"content":" * DishController (or MenuController if you like).","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"BotBw"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"BotBw"},"content":"public class DishController extends Controller {","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"BotBw"},"content":"    private static final String[] CHOICES \u003d {\"Exit Menu\", \"Add Dish\", \"Delete Dish\",","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"BotBw"},"content":"        \"Change the price of a dish\", \"Change the name of a dish\"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"BotBw"},"content":"    };","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"BotBw"},"content":"    private final DishManager dishManager;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"BotBw"},"content":"    public DishController(Scanner scanner) {","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"BotBw"},"content":"        super(CHOICES, scanner);","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"BotBw"},"content":"        dishManager \u003d new DishManager();","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"BotBw"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"BotBw"},"content":"    protected boolean optionSwitcher(int choice) throws IllegalArgumentException {","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"BotBw"},"content":"        switch (choice) {","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"BotBw"},"content":"        case 1:","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"BotBw"},"content":"            addDish();","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"BotBw"},"content":"            break;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"BotBw"},"content":"        case 2:","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"BotBw"},"content":"            deleteDish();","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"BotBw"},"content":"            break;","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"BotBw"},"content":"        case 3:","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"BotBw"},"content":"            changePrice();","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"BotBw"},"content":"            break;","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"BotBw"},"content":"        case 4:","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"BotBw"},"content":"            changeName();","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"BotBw"},"content":"            break;","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"BotBw"},"content":"        case 0:","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"BotBw"},"content":"            // Relinquish control. This will return to the programme main function.","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"BotBw"},"content":"            System.out.println(\"Exiting application...\");","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"BotBw"},"content":"            return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"BotBw"},"content":"        default:","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"BotBw"},"content":"            // This should not happen, since the choice argument for this method is always parsed from the","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"BotBw"},"content":"            // getChoice() method, which also checks for the range of index input.","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"BotBw"},"content":"            System.out.println(\"Unknown choice!\");","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"BotBw"},"content":"        System.out.println(\"Now in Main Menu.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"BotBw"},"content":"        System.out.println(this);","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"BotBw"},"content":"        return false;","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"BotBw"},"content":"    private void changeName() throws IllegalArgumentException {","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"BotBw"},"content":"        System.out.println(\"Changing name\");","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"BotBw"},"content":"        System.out.print(\"The index of dish\");","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"BotBw"},"content":"        int index \u003d scanner.nextInt();","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"BotBw"},"content":"        System.out.print(\"The new name of dish\");","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"BotBw"},"content":"        String name \u003d scanner.nextLine();","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"BotBw"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"BotBw"},"content":"            dishManager.setName(index, name);","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"BotBw"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"BotBw"},"content":"            throw new IllegalArgumentException(e.getMessage());","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"BotBw"},"content":"    private void changePrice() throws IllegalArgumentException {","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"BotBw"},"content":"        System.out.println(\"Changing price\");","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"BotBw"},"content":"        System.out.print(\"The index of dish: \");","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"BotBw"},"content":"        int index \u003d scanner.nextInt();","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"BotBw"},"content":"        System.out.print(\"The new price of dish: \");","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"BotBw"},"content":"        double newPrice \u003d scanner.nextDouble();","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"BotBw"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"BotBw"},"content":"            dishManager.setPrice(index, newPrice);","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"BotBw"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"BotBw"},"content":"            throw new IllegalArgumentException(e.getMessage());","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"BotBw"},"content":"    private void deleteDish() throws IllegalArgumentException {","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"BotBw"},"content":"        System.out.println(\"Deleting dish\");","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"BotBw"},"content":"        System.out.print(\"The index of dish : \");","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"BotBw"},"content":"        int index \u003d scanner.nextInt();","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"BotBw"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"BotBw"},"content":"            dishManager.deleteDish(index);","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"BotBw"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"BotBw"},"content":"            throw new IllegalArgumentException(e.getMessage());","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"BotBw"},"content":"    private void addDish() {","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"BotBw"},"content":"        System.out.println(\"Adding new dish\");","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"BotBw"},"content":"        System.out.print(\"The name of dish: \");","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"BotBw"},"content":"        String name \u003d scanner.nextLine();","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"BotBw"},"content":"        System.out.print(\"The price of dish: \");","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"BotBw"},"content":"        double price \u003d scanner.nextDouble();","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"BotBw"},"content":"        dishManager.addDish(new Dish(name, price));","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"BotBw"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"BotBw"},"content":"    public void takeControl() {","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"BotBw"},"content":"        System.out.println(\"You are using Menu function\");","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"BotBw"},"content":"        super.takeControl();","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"BotBw"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"BotBw":102}},{"path":"src/main/java/seedu/duke/controllers/MainController.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darylhjd"},"content":"package seedu.duke.controllers;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"darylhjd"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"darylhjd"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"darylhjd"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"darylhjd"},"content":"public class MainController extends Controller {","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"darylhjd"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"darylhjd"},"content":"     * Creates the MainController.","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"darylhjd"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"darylhjd"},"content":"     * @param scanner Scanner for System.in.","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"darylhjd"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"darylhjd"},"content":"    public MainController(Scanner scanner) {","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"darylhjd"},"content":"        super(new String[]{\"Exit Application\"}, scanner);","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"darylhjd"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"darylhjd"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"darylhjd"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"darylhjd"},"content":"    protected boolean optionSwitcher(int choice) throws IllegalArgumentException {","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"darylhjd"},"content":"        switch (choice) {","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"darylhjd"},"content":"        case 0:","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"darylhjd"},"content":"            // Relinquish control. This will return to the programme main function.","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"darylhjd"},"content":"            System.out.println(\"Exiting application...\");","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"darylhjd"},"content":"            return true;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"darylhjd"},"content":"        default:","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"darylhjd"},"content":"            // This should not happen, since the choice argument for this method is always parsed from the","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"darylhjd"},"content":"            // getChoice() method, which also checks for the range of index input.","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"darylhjd"},"content":"            System.out.println(\"Unknown choice!\");","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"darylhjd"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"darylhjd"},"content":"        System.out.println(\"Now in Main Menu.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"darylhjd"},"content":"        System.out.println(this);","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"darylhjd"},"content":"        return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"darylhjd"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"darylhjd"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"darylhjd"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"darylhjd"},"content":"     * Override takeControl to print welcome message.","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"darylhjd"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"darylhjd"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"darylhjd"},"content":"    public void takeControl() {","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"darylhjd"},"content":"        System.out.println(\"Welcome to Restaurant Information Programme!\");","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"darylhjd"},"content":"        super.takeControl();","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"darylhjd"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"darylhjd"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"darylhjd":40}},{"path":"src/main/java/seedu/duke/entities/Dish.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BotBw"},"content":"package seedu.duke.entities;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"BotBw"},"content":"public class Dish {","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"BotBw"},"content":"    private String name;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"BotBw"},"content":"    private double price;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"BotBw"},"content":"    public String getName() {","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"BotBw"},"content":"        return name;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"BotBw"},"content":"    public double getPrice() {","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"BotBw"},"content":"        return price;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"BotBw"},"content":"    public Dish(String name, double price) throws IllegalArgumentException {","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"BotBw"},"content":"        if (!isValidName(name)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"BotBw"},"content":"            throw new IllegalArgumentException(\"New name cannot be null.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"BotBw"},"content":"        if (price \u003c 0) {","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"BotBw"},"content":"            throw new IllegalArgumentException(\"New price cannot be negative\");","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"BotBw"},"content":"        this.name \u003d toTitleCase(name);","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"BotBw"},"content":"        this.price \u003d price;","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"BotBw"},"content":"    private static String toTitleCase(String givenString) {","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"BotBw"},"content":"        String[] arr \u003d givenString.split(\" \");","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"BotBw"},"content":"        StringBuffer sb \u003d new StringBuffer();","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"BotBw"},"content":"        for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"BotBw"},"content":"            sb.append(Character.toUpperCase(arr[i].charAt(0)))","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"BotBw"},"content":"                    .append(arr[i].substring(1)).append(\" \");","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"BotBw"},"content":"        return sb.toString().trim();","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"BotBw"},"content":"    private static boolean isValidName(String name) {","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"BotBw"},"content":"        return !(name \u003d\u003d null || name \u003d\u003d \"\");","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"BotBw"},"content":"    public void setPrice(double newPrice) throws IllegalArgumentException {","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"BotBw"},"content":"        if (newPrice \u003c 0) {","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"BotBw"},"content":"            throw new IllegalArgumentException(\"New price cannot be negative\");","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"BotBw"},"content":"        this.price \u003d newPrice;","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"BotBw"},"content":"    public void setName(String newName) throws IllegalArgumentException {","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"BotBw"},"content":"        if (!isValidName(newName)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"BotBw"},"content":"            throw new IllegalArgumentException(\"New name cannot be null.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"BotBw"},"content":"        this.name \u003d newName;","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"BotBw"},"content":"    public String toString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"BotBw"},"content":"        return name + \" ---- \" + (price \u003d\u003d 0 ? \"free\" : (\"$ \" + price));","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"BotBw"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"BotBw":57}},{"path":"src/main/java/seedu/duke/manager/DishManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BotBw"},"content":"package seedu.duke.manager;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"BotBw"},"content":"import seedu.duke.entities.Dish;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"BotBw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"BotBw"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"BotBw"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"BotBw"},"content":" * DishManager.","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"BotBw"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"BotBw"},"content":"public class DishManager {","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"BotBw"},"content":"    private final List\u003cDish\u003e dishes;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"BotBw"},"content":"    public DishManager() {","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"BotBw"},"content":"        dishes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"BotBw"},"content":"     * Print all the dishes/menu.","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"BotBw"},"content":"    public void printDishes() {","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"BotBw"},"content":"        for (int i \u003d 0; i \u003c dishes.size(); i++) {","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"BotBw"},"content":"            System.out.println((i + 1) + \". \" + dishes.get(i));","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"BotBw"},"content":"     * Return the number of dishes.","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"BotBw"},"content":"     * @return the number of current dishes","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"BotBw"},"content":"    public int getNumOfDishes() {","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"BotBw"},"content":"        return dishes.size();","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"BotBw"},"content":"     * Add one dish to menu.","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"BotBw"},"content":"     * @param dish the dish to add","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"BotBw"},"content":"    public void addDish(Dish dish) {","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"BotBw"},"content":"        dishes.add(dish);","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"BotBw"},"content":"     * Try to delete dish in menu.","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"BotBw"},"content":"     * @param menuIndex the index of dish to delete in menu","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"BotBw"},"content":"     * @throws IndexOutOfBoundsException if menuIndex is not valid","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"BotBw"},"content":"    public void deleteDish(int menuIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"BotBw"},"content":"        int listIndex \u003d menuIndex - 1;","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"BotBw"},"content":"        throwIfIndexNotValid(listIndex);","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"BotBw"},"content":"        dishes.remove(listIndex);","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"BotBw"},"content":"     * Try to set the price of one dish.","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"BotBw"},"content":"     * @param menuIndex the index of dish to set price in menu","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"BotBw"},"content":"     * @param newPrice  the new price of the dish","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"BotBw"},"content":"     * @throws IndexOutOfBoundsException if menuIndex is not valid","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"BotBw"},"content":"     * @throws IllegalArgumentException  if new price is negative","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"BotBw"},"content":"    public void setPrice(int menuIndex, double newPrice) throws IndexOutOfBoundsException, IllegalArgumentException {","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"BotBw"},"content":"        int listIndex \u003d menuIndex - 1;","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"BotBw"},"content":"        throwIfIndexNotValid(listIndex);","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"BotBw"},"content":"        dishes.get(listIndex).setPrice(newPrice);","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"BotBw"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"BotBw"},"content":"     * Try to set the name of one dish.","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"BotBw"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"BotBw"},"content":"     * @param menuIndex the index of dish to set price in menu","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"BotBw"},"content":"     * @param newName   the new name of the dish","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"BotBw"},"content":"     * @throws IndexOutOfBoundsException if menuIndex is not valid","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"BotBw"},"content":"     * @throws IllegalArgumentException  if newName is null","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"BotBw"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"BotBw"},"content":"    public void setName(int menuIndex, String newName) throws IndexOutOfBoundsException, IllegalArgumentException {","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"BotBw"},"content":"        int listIndex \u003d menuIndex - 1;","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"BotBw"},"content":"        throwIfIndexNotValid(listIndex);","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"BotBw"},"content":"        dishes.get(listIndex).setName(newName);","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"BotBw"},"content":"    private void throwIfIndexNotValid(int listIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"BotBw"},"content":"        if (listIndex \u003c 0 || listIndex \u003e\u003d dishes.size()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"BotBw"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"BotBw"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"BotBw"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"BotBw":89}},{"path":"src/test/java/seedu/duke/DukeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"darylhjd"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"darylhjd"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"class DukeTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"darylhjd":2,"-":10}},{"path":"src/test/java/seedu/duke/entities/DishTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BotBw"},"content":"package seedu.duke.entities;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"BotBw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"BotBw"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"BotBw"},"content":"class DishTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"BotBw"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"BotBw"},"content":"    void dish_InvalidInput_ThrowIllegalArgumentException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"BotBw"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Dish(null, 10));","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"BotBw"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Dish(\"Fake dish\", -1));","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"BotBw"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Dish(null, -1));","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"BotBw"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"BotBw":14}},{"path":"src/test/java/seedu/duke/manager/DishManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BotBw"},"content":"package seedu.duke.manager;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"BotBw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"BotBw"},"content":"import seedu.duke.entities.Dish;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"BotBw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"BotBw"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"BotBw"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"BotBw"},"content":"class DishManagerTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"BotBw"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"BotBw"},"content":"    void deleteDish_IndexNotValid_ThrowIllegalArgumentException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"BotBw"},"content":"        DishManager dishManager \u003d new DishManager();","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"BotBw"},"content":"        dishManager.addDish(new Dish(\"A\", 1));","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"BotBw"},"content":"        dishManager.addDish(new Dish(\"B\", 0));","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"BotBw"},"content":"        dishManager.addDish(new Dish(\"C\", 30));","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"BotBw"},"content":"        dishManager.addDish(new Dish(\"D\", 2));","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"BotBw"},"content":"        dishManager.addDish(new Dish(\"E\", 7));","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"BotBw"},"content":"        assertDoesNotThrow(() -\u003e dishManager.deleteDish(1));","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"BotBw"},"content":"        assertDoesNotThrow(() -\u003e dishManager.deleteDish(2));","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"BotBw"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e dishManager.deleteDish(-1));","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"BotBw"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e dishManager.deleteDish(0));","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"BotBw"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e dishManager.deleteDish(4));","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"BotBw"},"content":"        assertDoesNotThrow(() -\u003e dishManager.deleteDish(3));","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"BotBw"},"content":"        assertDoesNotThrow(() -\u003e dishManager.deleteDish(1));","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"BotBw"},"content":"        assertDoesNotThrow(() -\u003e dishManager.deleteDish(1));","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"BotBw"},"content":"        assertEquals(0, dishManager.getNumOfDishes());","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"BotBw"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"BotBw"},"content":"    void setPrice_IndexNotValidOrPriceNotValid_Throw() {","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"BotBw"},"content":"        DishManager dishManager \u003d new DishManager();","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"BotBw"},"content":"        dishManager.addDish(new Dish(\"A\", 1));","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"BotBw"},"content":"        dishManager.addDish(new Dish(\"B\", 0));","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"BotBw"},"content":"        dishManager.addDish(new Dish(\"C\", 30));","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"BotBw"},"content":"        dishManager.addDish(new Dish(\"D\", 2));","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"BotBw"},"content":"        dishManager.addDish(new Dish(\"E\", 7));","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"BotBw"},"content":"        assertDoesNotThrow(() -\u003e dishManager.setPrice(1, 10));","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"BotBw"},"content":"        assertDoesNotThrow(() -\u003e dishManager.setPrice(2, 20));","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"BotBw"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e dishManager.setPrice(1, -1));","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"BotBw"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e dishManager.setPrice(0, -1));","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"BotBw"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e dishManager.setPrice(-1, 10));","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"BotBw"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e dishManager.setPrice(6, 100));","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"BotBw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"BotBw"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"BotBw"},"content":"    void setName_IndexNotValidOrNameNotValid_Throw() {","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"BotBw"},"content":"        DishManager dishManager \u003d new DishManager();","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"BotBw"},"content":"        dishManager.addDish(new Dish(\"A\", 1));","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"BotBw"},"content":"        dishManager.addDish(new Dish(\"B\", 0));","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"BotBw"},"content":"        dishManager.addDish(new Dish(\"C\", 30));","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"BotBw"},"content":"        dishManager.addDish(new Dish(\"D\", 2));","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"BotBw"},"content":"        dishManager.addDish(new Dish(\"E\", 7));","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"BotBw"},"content":"        assertDoesNotThrow(() -\u003e dishManager.setName(1, \"AAAAA\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"BotBw"},"content":"        assertDoesNotThrow(() -\u003e dishManager.setName(2, \"BBBBB\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"BotBw"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e dishManager.setName(1, \"\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"BotBw"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e dishManager.setName(1, null));","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"BotBw"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e dishManager.setName(0, \"CCCCC\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"BotBw"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e dishManager.setName(-1, \"DDDDD\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"BotBw"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e dishManager.setName(6, \"EEEEE\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"BotBw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"BotBw"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"BotBw":64}}]
