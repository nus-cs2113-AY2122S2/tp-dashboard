[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"tanweili"},"content":"    implementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"shxr3f"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanweili":1,"-":46,"shxr3f":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |      Name       |              Github Profile               | Portfolio","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"Anvitha-r"},"content":"--------|:---------------:|:-----------------------------------------:|:---------:","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Mohamed Sharif  |    [Github](https://github.com/shxr3f)    | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |     Wei Li      |   [Github](https://github.com/tanweili)   | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"Anvitha-r"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |       Tai       |  [Github](https://github.com/kktai1512)   | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"wraineflores"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Wraine Flores  | [Github](https://github.com/wraineflores) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"Anvitha-r"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Anvitha Rajaram |  [Github](https://github.com/Anvitha-r)   | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"tanweili":1,"wraineflores":1,"Anvitha-r":3,"-":3,"shxr3f":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"# Contents","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"* [Acknowledgements](#acknowledgements)","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"* [Getting Started For Beginners](#getting-started-for-beginners)","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"* [Design](#design)","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"  * [Architecture](#architecture)","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"  * [UI Component](#ui-component)","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"  * [Manager Component](#manager-component)","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"  * [Helper Classes](#helper-classes)","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"    * [Command Component](#command)","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"    * [Parser Component](#parser)","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"    * [Storage Component](#storage)","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"kktai1512"},"content":"    * [Validator Component](#validator)","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"  * [Asset Classes](#asset-classes)","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"* [Implementation](#implementation)","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"  * [Design Considerations](#design-considerations)","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"* [Product Scope](#product-scope)","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"  * [Target User](#target-user-profile)","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"  * [Value Proposition](#value-proposition)","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"  * [User Stories](#user-stories)","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"  * [Use Cases](#use-cases)","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"  * [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"* [Glossary](#glossary)","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"* [Appendix](#appendix)","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"## **Acknowledgements**","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"shxr3f"},"content":"* Design and Structure of Developer Guide referenced from the","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"shxr3f"},"content":"[AB3-Developer Guide](http://se-education.org/addressbook-level3/DeveloperGuide.html).","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"shxr3f"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"shxr3f"},"content":"## **Getting Started for Beginners**","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"shxr3f"},"content":"Refer to the [_User Guide_](UserGuide.md).","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"shxr3f"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"shxr3f"},"content":"## **Design**","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"shxr3f"},"content":"### Architecture","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"shxr3f"},"content":"![Architecture Diagram](diagrams/OverallArch.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"shxr3f"},"content":"The ***Architecture Diagram*** given above explains the high-level design ***HalpMi***.","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"shxr3f"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"shxr3f"},"content":"#### **Main components of the architecture**","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"shxr3f"},"content":"**`Duke`** has single method called `main` which is called upon launch. This initialises a new instance of a `Manager` class, and calls the `runLoop()`","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"shxr3f"},"content":"method belonging to the Manager object.","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"shxr3f"},"content":"[**`Assets`**](#asset-classes): Refers to a collection of classes that hold all the necessary data given by the User in","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"shxr3f"},"content":"current and past usages.","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"shxr3f"},"content":"The rest of the App consists of these components.","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"shxr3f"},"content":"* [**`Manager`**](#manager-component): The Brain.","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"shxr3f"},"content":"* [**`Helper`**](#helper-classes): A collection of core classes that aid with the Logical Operations performed by HalpMi.","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"shxr3f"},"content":"    * [**`Command`**](#command): Contains the changes or updates to be made.","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"shxr3f"},"content":"    * [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"shxr3f"},"content":"    * [**`Parser`**](#parser): Breaks down user input into parameters accepted by the app and creates a Command Object.","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"shxr3f"},"content":"    * [**`Validator`**](): Checks if the input provided by the User is Valid.","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"shxr3f"},"content":"    * [**`Storage`**](#storage): Reads data from data files and writes data to data files, also stores in app memory.","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"shxr3f"},"content":"The Sequence Diagram below showcases the general Logic and Flow of the program from Launch till Exit.","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"shxr3f"},"content":"![Sequence Diagram](diagrams/SequenceDiagram.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"shxr3f"},"content":"### UI component","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":75,"author":{"gitId":"shxr3f"},"content":"![UIClassUML](diagrams/UIClassUML.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"wraineflores"},"content":"How the UI class works:","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"shxr3f"},"content":"* Based on the architecture sequence diagram, `Manager` class calls readCommand method in `UI` class and returns the UserInput.","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"shxr3f"},"content":"* Afterwards, the `Manager` class calls readParameters method in `UI` class and returns another UserInput.","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"shxr3f"},"content":"* Finally, the `Manager` class calls print method in `UI` class which in turn calls `Status` enum and returns the constant.","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"wraineflores"},"content":"### Manager component","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"wraineflores"},"content":"![ManagerUML](diagrams/ManagerClass.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"wraineflores"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"wraineflores"},"content":"How the Manager class works:","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"shxr3f"},"content":"* When `Duke` class instantiates a `Manager` object and calls runLoop method, the program will execute a while loop.","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"shxr3f"},"content":"* In the while loop, there is a switch condition.","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"shxr3f"},"content":"* Based on the parameter provided to the switch, it will call the respective methods in UI, Parser \u0026 Command classes.","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"shxr3f"},"content":"* The while loop only halts when isTerminated boolean becomes true. Then, the programme exits.","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"shxr3f"},"content":"### Helper Classes","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"shxr3f"},"content":"#### `Command`","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"shxr3f"},"content":"![CommandUML](diagrams/CommandClassUML.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"wraineflores"},"content":"How the Command class works:","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"shxr3f"},"content":"* Based on the architecture sequence diagram, the `Parser` class calls the `Validator` class to check if the inputs are valid.","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"shxr3f"},"content":"* If it is valid, the `Command` subclass executes its method.","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"shxr3f"},"content":"* The subclass is based on whether the user wants to access either the `Doctor`, `Patient`, `Medicine` or `Appointment` asset list class.","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"shxr3f"},"content":"* The input parameters determine which of the `Command` subclass is used.","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"kktai1512"},"content":"#### `Validator`","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"shxr3f"},"content":"![ValidatorClassUML](diagrams/ValidatorClassUML.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"kktai1512"},"content":"The validator has a series of methods to ensure that the parameters entered are correct.  It throws a `HalpmiException` if the parameters","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"kktai1512"},"content":"entered are invalid.","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"kktai1512"},"content":"For example, validateAddPatient validates the parameter of `add patient` command, ensuring each parameter is in correct","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"kktai1512"},"content":"format. Please refer to the below sequence diagram for a clearer understanding.","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"shxr3f"},"content":"![ValidatorUML](diagrams/ValidatorUML.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"kktai1512"},"content":"#### `Parser`","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"shxr3f"},"content":"![ParserClassUML](diagrams/ParserClassUML.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"kktai1512"},"content":"The parser parses the description of the command. It first checks the number of parameters entered is correct and","lastModifiedDate":"2022-03-28"},{"lineNumber":121,"author":{"gitId":"kktai1512"},"content":"calls the validator class to validate the parameters, and then returns a command if the validation is successful.","lastModifiedDate":"2022-03-28"},{"lineNumber":122,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"shxr3f"},"content":"![ParserUML](diagrams/ParserUML.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"shxr3f"},"content":"#### `Storage`","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"shxr3f"},"content":"![StorageClassUML](diagrams/StorageClassUML.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"shxr3f"},"content":"The Storage class holds 4 different Lists found in the Assets collection as seen in the Class Diagram shown above. Any edits made","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"shxr3f"},"content":"to these Lists must be made by accessing them from the Storage object. The Storage class also has 4 load functions for each type of Asset,","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"shxr3f"},"content":"namely Patient, Doctor, Medicine and Appointment. These methods read in the respective text files to load existing information","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"shxr3f"},"content":"into their respective lists. The Storage class has 4 save methods that save the information found in the 4 Lists into text files","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"shxr3f"},"content":"in the CSV format. The Directory of these text files is found in the DIR String variable, the PATH for each of the 4 text files","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"shxr3f"},"content":"can be found in the PATH_MED, PATH_PAT, PATH_DOC, PATH_APP String variables respectively.","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"shxr3f"},"content":"### Asset classes","lastModifiedDate":"2022-03-23"},{"lineNumber":137,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":138,"author":{"gitId":"tanweili"},"content":"#### `Appointment`","lastModifiedDate":"2022-03-30"},{"lineNumber":139,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"tanweili"},"content":"![AppointmentUML](diagrams/AppointmentUML.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":141,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":142,"author":{"gitId":"tanweili"},"content":"The Appointment class holds several attributes that are exposed via getter methods. To instantiate the class, all the","lastModifiedDate":"2022-03-30"},{"lineNumber":143,"author":{"gitId":"tanweili"},"content":"attributes must be given to the constructor method.","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":145,"author":{"gitId":"tanweili"},"content":"#### `Appointment List`","lastModifiedDate":"2022-03-30"},{"lineNumber":146,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"tanweili"},"content":"![AppointmentListUML](diagrams/AppointmentListUML.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":148,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":149,"author":{"gitId":"tanweili"},"content":"The AppointmentList class contains a private list of Appointments and another list for searching.  It has several","lastModifiedDate":"2022-03-30"},{"lineNumber":150,"author":{"gitId":"tanweili"},"content":"public methods that allows the user to get information regarding the list, view the list as well as search for specific","lastModifiedDate":"2022-03-30"},{"lineNumber":151,"author":{"gitId":"tanweili"},"content":"Appointment by selected criteria.","lastModifiedDate":"2022-03-30"},{"lineNumber":152,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":153,"author":{"gitId":"tanweili"},"content":"#### `Medicine`","lastModifiedDate":"2022-03-30"},{"lineNumber":154,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":155,"author":{"gitId":"tanweili"},"content":"![MedicineUML](diagrams/MedicineUML.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":156,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":157,"author":{"gitId":"tanweili"},"content":"The Medicine class holds several attributes that are exposed via getter methods. To instantiate the class, all the","lastModifiedDate":"2022-03-30"},{"lineNumber":158,"author":{"gitId":"tanweili"},"content":"attributes must be given to the constructor method. There is a method to edit the attribute data that can be called","lastModifiedDate":"2022-03-30"},{"lineNumber":159,"author":{"gitId":"tanweili"},"content":"whenever user types in the correct command.","lastModifiedDate":"2022-03-30"},{"lineNumber":160,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"tanweili"},"content":"#### `Medicine List`","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"tanweili"},"content":"![MedicineListUML](diagrams/MedicineListUML.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":164,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":165,"author":{"gitId":"tanweili"},"content":"The MedicineList class contains private lists of Medicine, expired Medicine and one list for searching. It has several","lastModifiedDate":"2022-03-30"},{"lineNumber":166,"author":{"gitId":"tanweili"},"content":"public methods that allows the user to get information regarding the list, view the list as well as search for specific","lastModifiedDate":"2022-03-30"},{"lineNumber":167,"author":{"gitId":"tanweili"},"content":"Medicine by selected criteria.","lastModifiedDate":"2022-03-30"},{"lineNumber":168,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":169,"author":{"gitId":"shxr3f"},"content":"##### `Patient`","lastModifiedDate":"2022-03-30"},{"lineNumber":170,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":171,"author":{"gitId":"wraineflores"},"content":"![PatientUML](diagrams/Patient.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":172,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":173,"author":{"gitId":"Anvitha-r"},"content":"The Patient class holds several attributes that are exposed via getter methods. To instantiate the class, all the","lastModifiedDate":"2022-03-30"},{"lineNumber":174,"author":{"gitId":"Anvitha-r"},"content":"attributes must be given to the constructor method. There is a method to edit the attribute data that can be called","lastModifiedDate":"2022-03-30"},{"lineNumber":175,"author":{"gitId":"Anvitha-r"},"content":"whenever user types in the correct command.","lastModifiedDate":"2022-03-30"},{"lineNumber":176,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":177,"author":{"gitId":"Anvitha-r"},"content":"#### `Patient List`","lastModifiedDate":"2022-03-30"},{"lineNumber":178,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":179,"author":{"gitId":"wraineflores"},"content":"![PatientListUML](diagrams/PatientList.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":180,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":181,"author":{"gitId":"Anvitha-r"},"content":"The PatientList class contains private lists of Patients and one list for searching. It has several","lastModifiedDate":"2022-03-30"},{"lineNumber":182,"author":{"gitId":"Anvitha-r"},"content":"public methods that allows the user to get information regarding the list, view the list as well as search for specific","lastModifiedDate":"2022-03-30"},{"lineNumber":183,"author":{"gitId":"Anvitha-r"},"content":"Patients by selected criteria.","lastModifiedDate":"2022-03-30"},{"lineNumber":184,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":185,"author":{"gitId":"Anvitha-r"},"content":"#### `Doctor`","lastModifiedDate":"2022-03-30"},{"lineNumber":186,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":187,"author":{"gitId":"wraineflores"},"content":"![DoctorUML](diagrams/Doctor.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":188,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":189,"author":{"gitId":"Anvitha-r"},"content":"The Doctor class holds several attributes that are exposed via getter methods. To instantiate the class, all the","lastModifiedDate":"2022-03-30"},{"lineNumber":190,"author":{"gitId":"Anvitha-r"},"content":"attributes must be given to the constructor method. There is a method to edit the attribute data that can be called","lastModifiedDate":"2022-03-30"},{"lineNumber":191,"author":{"gitId":"Anvitha-r"},"content":"whenever user types in the correct command.","lastModifiedDate":"2022-03-30"},{"lineNumber":192,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":193,"author":{"gitId":"Anvitha-r"},"content":"#### `Doctor List`","lastModifiedDate":"2022-03-30"},{"lineNumber":194,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":195,"author":{"gitId":"wraineflores"},"content":"![DoctorListUML](diagrams/DoctorList.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":196,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":197,"author":{"gitId":"Anvitha-r"},"content":"The DoctorList class contains private lists of Doctors and one list for searching. It has several","lastModifiedDate":"2022-03-30"},{"lineNumber":198,"author":{"gitId":"Anvitha-r"},"content":"public methods that allows the user to get information regarding the list, view the list as well as search for specific","lastModifiedDate":"2022-03-30"},{"lineNumber":199,"author":{"gitId":"Anvitha-r"},"content":"Doctors by selected criteria.","lastModifiedDate":"2022-03-30"},{"lineNumber":200,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":201,"author":{"gitId":"Anvitha-r"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-30"},{"lineNumber":202,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":203,"author":{"gitId":"shxr3f"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":204,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":205,"author":{"gitId":"shxr3f"},"content":"## **Implementation**","lastModifiedDate":"2022-03-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":207,"author":{"gitId":"shxr3f"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2022-03-23"},{"lineNumber":208,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":209,"author":{"gitId":"tanweili"},"content":"### View appointments with selected criteria","lastModifiedDate":"2022-03-27"},{"lineNumber":210,"author":{"gitId":"tanweili"},"content":"This feature is a method within `AppointmentList`. `AppointmentList` contains an arraylist","lastModifiedDate":"2022-03-23"},{"lineNumber":211,"author":{"gitId":"tanweili"},"content":"of `Appointment` as a private element. `AppointmentList` methods invoked interacts with this","lastModifiedDate":"2022-03-23"},{"lineNumber":212,"author":{"gitId":"tanweili"},"content":"list, possibly making changes in the process.","lastModifiedDate":"2022-03-23"},{"lineNumber":213,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":214,"author":{"gitId":"tanweili"},"content":"Currently, `AppointmentList` has the following methods:","lastModifiedDate":"2022-03-23"},{"lineNumber":215,"author":{"gitId":"tanweili"},"content":"* `AppointmentList#add` -- Appends a new `Appointment` to the list.","lastModifiedDate":"2022-03-23"},{"lineNumber":216,"author":{"gitId":"tanweili"},"content":"* `AppointmentList#remove` -- Removes an entry from the list by appointment id.","lastModifiedDate":"2022-03-27"},{"lineNumber":217,"author":{"gitId":"tanweili"},"content":"* `AppointmentList#edit` -- Edits a existing entry from the list by.","lastModifiedDate":"2022-03-27"},{"lineNumber":218,"author":{"gitId":"tanweili"},"content":"* `AppointmentList#view` -- Text display of all or selected appointments in the list.","lastModifiedDate":"2022-03-27"},{"lineNumber":219,"author":{"gitId":"tanweili"},"content":"* `AppointmentList#find` -- Find selected appointments using the criteria given.","lastModifiedDate":"2022-03-23"},{"lineNumber":220,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":221,"author":{"gitId":"tanweili"},"content":"The methods are exposed in the `Manager#runLoop` method where user input is parsed. A `ViewAppointmentCommand` will","lastModifiedDate":"2022-03-27"},{"lineNumber":222,"author":{"gitId":"tanweili"},"content":"be returned if the user input passes the validation by `Validator`. Else, a `HalpmiException` will be thrown","lastModifiedDate":"2022-03-27"},{"lineNumber":223,"author":{"gitId":"tanweili"},"content":"indicating missing parameters.","lastModifiedDate":"2022-03-27"},{"lineNumber":224,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":225,"author":{"gitId":"tanweili"},"content":"Below is an example describing the behaviour of the `find` feature.","lastModifiedDate":"2022-03-23"},{"lineNumber":226,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":227,"author":{"gitId":"shxr3f"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-23"},{"lineNumber":228,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":229,"author":{"gitId":"shxr3f"},"content":"---------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":232,"author":{"gitId":"shxr3f"},"content":"### Target user profile:","lastModifiedDate":"2022-03-23"},{"lineNumber":233,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":234,"author":{"gitId":"tanweili"},"content":"* administrator in clinic(s)","lastModifiedDate":"2022-03-27"},{"lineNumber":235,"author":{"gitId":"shxr3f"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2022-03-23"},{"lineNumber":236,"author":{"gitId":"shxr3f"},"content":"* can type fast","lastModifiedDate":"2022-03-23"},{"lineNumber":237,"author":{"gitId":"shxr3f"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2022-03-23"},{"lineNumber":238,"author":{"gitId":"shxr3f"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2022-03-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":240,"author":{"gitId":"shxr3f"},"content":"### Value proposition:","lastModifiedDate":"2022-03-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":242,"author":{"gitId":"tanweili"},"content":"Manage core clinic related data faster than using mouse or GUI.","lastModifiedDate":"2022-03-27"},{"lineNumber":243,"author":{"gitId":"tanweili"},"content":"Ensure each data type conforms to certain standards with in-built validations.","lastModifiedDate":"2022-03-27"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":245,"author":{"gitId":"shxr3f"},"content":"### User stories","lastModifiedDate":"2022-03-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":247,"author":{"gitId":"shxr3f"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2022-03-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":249,"author":{"gitId":"Anvitha-r"},"content":"| Version | Priority | As a ...                                   | I want to ...                                | So that I can ...                                                      |","lastModifiedDate":"2022-03-25"},{"lineNumber":250,"author":{"gitId":"shxr3f"},"content":"|---------|----------|--------------------------------------------|----------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2022-04-09"},{"lineNumber":251,"author":{"gitId":"Anvitha-r"},"content":"|         | `* * *`  | new user                                   | see usage instructions                       | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2022-03-25"},{"lineNumber":252,"author":{"gitId":"Anvitha-r"},"content":"|         | `* * *`  | new user                                   | import or export data                        | share with others when needed and make backup copies                   |","lastModifiedDate":"2022-03-25"},{"lineNumber":253,"author":{"gitId":"Anvitha-r"},"content":"|         | `* *`    | user                                       | find appointments based on selected criteria | filter out the appointments that I want to know about                  |","lastModifiedDate":"2022-03-25"},{"lineNumber":254,"author":{"gitId":"Anvitha-r"},"content":"|         | `* * *`  | user                                       | find a person by name                        | locate details of persons without having to go through the entire list |","lastModifiedDate":"2022-03-25"},{"lineNumber":255,"author":{"gitId":"Anvitha-r"},"content":"|         | `* *`    | user                                       | hide private contact details                 | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2022-03-25"},{"lineNumber":256,"author":{"gitId":"Anvitha-r"},"content":"|         | `*`      | user with many persons in the address book | sort persons by name                         | locate a person easily                                                 |","lastModifiedDate":"2022-03-25"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":258,"author":{"gitId":"shxr3f"},"content":"### Use cases","lastModifiedDate":"2022-03-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":261,"author":{"gitId":"shxr3f"},"content":"### Non-Functional Requirements","lastModifiedDate":"2022-03-23"},{"lineNumber":262,"author":{"gitId":"Anvitha-r"},"content":"Device Environment:","lastModifiedDate":"2022-03-25"},{"lineNumber":263,"author":{"gitId":"Anvitha-r"},"content":"* Must have Java 11 or higher installed in OS","lastModifiedDate":"2022-03-25"},{"lineNumber":264,"author":{"gitId":"Anvitha-r"},"content":"* 32-bit or 64-bit environment","lastModifiedDate":"2022-03-25"},{"lineNumber":265,"author":{"gitId":"Anvitha-r"},"content":"* Command Line Interface supported","lastModifiedDate":"2022-03-25"},{"lineNumber":266,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":267,"author":{"gitId":"Anvitha-r"},"content":"  Performance of app:","lastModifiedDate":"2022-03-25"},{"lineNumber":268,"author":{"gitId":"Anvitha-r"},"content":"* Function offline, without the need for internet access","lastModifiedDate":"2022-03-25"},{"lineNumber":269,"author":{"gitId":"Anvitha-r"},"content":"* Quick to launch and use","lastModifiedDate":"2022-03-25"},{"lineNumber":270,"author":{"gitId":"Anvitha-r"},"content":"* No noticeable lag or delay in performance when running","lastModifiedDate":"2022-03-25"},{"lineNumber":271,"author":{"gitId":"Anvitha-r"},"content":"* Intuitive and seamless for new users.","lastModifiedDate":"2022-03-25"},{"lineNumber":272,"author":{"gitId":"Anvitha-r"},"content":"* Ability to export the data into a txt file to load on another OS","lastModifiedDate":"2022-03-25"},{"lineNumber":273,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":274,"author":{"gitId":"Anvitha-r"},"content":"  Reliability of app:","lastModifiedDate":"2022-03-25"},{"lineNumber":275,"author":{"gitId":"Anvitha-r"},"content":"* Data files should be updated constantly and accurately, with no data loss","lastModifiedDate":"2022-03-25"},{"lineNumber":276,"author":{"gitId":"Anvitha-r"},"content":"* Data records should be retrievable and readable","lastModifiedDate":"2022-03-25"},{"lineNumber":277,"author":{"gitId":"Anvitha-r"},"content":"* Text inputs should produce similar results if utilised multiple times.","lastModifiedDate":"2022-03-25"},{"lineNumber":278,"author":{"gitId":"Anvitha-r"},"content":"* Program should run without any forced-close error due to bugs","lastModifiedDate":"2022-03-25"},{"lineNumber":279,"author":{"gitId":"shxr3f"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":281,"author":{"gitId":"Anvitha-r"},"content":"* *FUllNAME* - Standard form for fullname of patients and doctors is a String value with no spaces","lastModifiedDate":"2022-03-25"},{"lineNumber":282,"author":{"gitId":"Anvitha-r"},"content":"* *NRIC* - Standard form for nric of patients and doctors is a String value with no spaces","lastModifiedDate":"2022-03-25"},{"lineNumber":283,"author":{"gitId":"Anvitha-r"},"content":"* *AGE* - Standard form for age is an int value more than 0","lastModifiedDate":"2022-03-25"},{"lineNumber":284,"author":{"gitId":"Anvitha-r"},"content":"* *GENDER* - Standard form for gender of patients and doctors is a char value of \"M\" or \"F\"","lastModifiedDate":"2022-03-25"},{"lineNumber":285,"author":{"gitId":"Anvitha-r"},"content":"* *ADDRESS* - Standard form for address is a String value with no spaces","lastModifiedDate":"2022-03-25"},{"lineNumber":286,"author":{"gitId":"Anvitha-r"},"content":"* *DOB* - Standard form for date-of-birth is a String value with no spaces","lastModifiedDate":"2022-03-25"},{"lineNumber":287,"author":{"gitId":"Anvitha-r"},"content":"* *SPECIALIZATION* - Standard form for specialization of doctors is String value with no spaces","lastModifiedDate":"2022-03-25"},{"lineNumber":288,"author":{"gitId":"Anvitha-r"},"content":"* *MEDICINEID* - Standard form for medicine id is a String value with no spaces","lastModifiedDate":"2022-03-25"},{"lineNumber":289,"author":{"gitId":"Anvitha-r"},"content":"* *MEDICINENAME* - Standard form for medicine name is a String value with no spaces","lastModifiedDate":"2022-03-25"},{"lineNumber":290,"author":{"gitId":"Anvitha-r"},"content":"* *DOSAGE* - Standard form for dosage of medicine is an int value, standard unit milligrams","lastModifiedDate":"2022-03-25"},{"lineNumber":291,"author":{"gitId":"Anvitha-r"},"content":"* *EXPIRY* - Standard form for expiry of medicine is a String value with no spaces","lastModifiedDate":"2022-03-25"},{"lineNumber":292,"author":{"gitId":"Anvitha-r"},"content":"* *SIDEEFFECTS* - Standard form for side effects of medicine is a String value with no spaces","lastModifiedDate":"2022-03-25"},{"lineNumber":293,"author":{"gitId":"Anvitha-r"},"content":"* *QUANTITY* - Standard form for quantity of medicine is an int value","lastModifiedDate":"2022-03-25"},{"lineNumber":294,"author":{"gitId":"tanweili"},"content":"* *APPOINTMENTID* - Standard form for appointment id is a String value with no spaces","lastModifiedDate":"2022-03-27"},{"lineNumber":295,"author":{"gitId":"tanweili"},"content":"* *APPOINTMENTDETAILS* - Standard form for appointment details is a String value","lastModifiedDate":"2022-03-27"},{"lineNumber":296,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":298,"author":{"gitId":"shxr3f"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":300,"author":{"gitId":"shxr3f"},"content":"## **Appendix**","lastModifiedDate":"2022-03-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":302,"author":{"gitId":"Anvitha-r"},"content":"For manual testing, developers can follow the instructions listed out in the [UserGuide](UserGuide.md)","lastModifiedDate":"2022-03-25"},{"lineNumber":303,"author":{"gitId":"Anvitha-r"},"content":"* Detailed input and output examples are displayed for cross checking.","lastModifiedDate":"2022-03-25"},{"lineNumber":304,"author":{"gitId":"Anvitha-r"},"content":"  Alternatively, they can also follow the following steps to test out the respective commands,","lastModifiedDate":"2022-03-25"},{"lineNumber":305,"author":{"gitId":"Anvitha-r"},"content":"  upon downloading the jar file, while adhering to the specified restrictions in Glossary:","lastModifiedDate":"2022-03-25"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":307,"author":{"gitId":"Anvitha-r"},"content":"1. `add doctor /info [nric],[name],[age],[gender],[address],[DOB],[Specialisation]`","lastModifiedDate":"2022-03-25"},{"lineNumber":308,"author":{"gitId":"Anvitha-r"},"content":"  * Adds a new doctor with the specified parameters into the system","lastModifiedDate":"2022-03-25"},{"lineNumber":309,"author":{"gitId":"Anvitha-r"},"content":"2. `add patient /info [nric],[name],[age],[gender],[address],[DOB]`","lastModifiedDate":"2022-03-25"},{"lineNumber":310,"author":{"gitId":"Anvitha-r"},"content":"  * Adds a new patient with the specified parameters into the system","lastModifiedDate":"2022-03-25"},{"lineNumber":311,"author":{"gitId":"Anvitha-r"},"content":"3. `add medicine /info [name],[dosage],[expiry date],[side effects],[quantity]`","lastModifiedDate":"2022-03-25"},{"lineNumber":312,"author":{"gitId":"Anvitha-r"},"content":"  * Adds a new medicine with the specified parameters into the system","lastModifiedDate":"2022-03-25"},{"lineNumber":313,"author":{"gitId":"tanweili"},"content":"4. `view doctor` or `view doctor /info [criteria],[input]`","lastModifiedDate":"2022-04-06"},{"lineNumber":314,"author":{"gitId":"tanweili"},"content":"  * View records of all doctors or specific doctors fulfilling the criteria.","lastModifiedDate":"2022-04-07"},{"lineNumber":315,"author":{"gitId":"tanweili"},"content":"5. `view patient` or `view patient /info [criteria],[input]`","lastModifiedDate":"2022-04-07"},{"lineNumber":316,"author":{"gitId":"tanweili"},"content":"  * View records of all patients or specific patients fulfilling the criteria.","lastModifiedDate":"2022-04-07"},{"lineNumber":317,"author":{"gitId":"tanweili"},"content":"6. `view medicine` or `view medicine /info [criteria],[input]`","lastModifiedDate":"2022-04-07"},{"lineNumber":318,"author":{"gitId":"tanweili"},"content":"  * View records of all medicines or specific medicines fulfilling the criteria.","lastModifiedDate":"2022-04-07"},{"lineNumber":319,"author":{"gitId":"Anvitha-r"},"content":"7. `delete doctor /info [nric]`","lastModifiedDate":"2022-03-25"},{"lineNumber":320,"author":{"gitId":"Anvitha-r"},"content":"  * deletes the record of the doctor with the specified nric","lastModifiedDate":"2022-03-25"},{"lineNumber":321,"author":{"gitId":"Anvitha-r"},"content":"8. `delete patient /info [nric]`","lastModifiedDate":"2022-03-25"},{"lineNumber":322,"author":{"gitId":"Anvitha-r"},"content":"  * deletes the record of the patient with the specified nric","lastModifiedDate":"2022-03-25"},{"lineNumber":323,"author":{"gitId":"Anvitha-r"},"content":"9. `delete medicine /info [Batch ID]`","lastModifiedDate":"2022-03-25"},{"lineNumber":324,"author":{"gitId":"Anvitha-r"},"content":"  * deletes the record of the medicine with the specified id","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"tanweili":55,"wraineflores":16,"Anvitha-r":79,"-":25,"shxr3f":138,"kktai1512":11}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"# HALPMI","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"## Introduction","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"HALPMI is a Command Line Interface (CLI) Application that allows administrators in clinics to manage the clinic\u0027s day-to-day","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"administrative tasks. More specifically, using HALPMI the user is able to insert new information regarding Doctors, Patients","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"and Medication. Users can also schedule appointment for Patients with Doctors. Users are also able to track stocks of medications.","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"## Links","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"You can use the links listed below to view the relevant documentations for this Application and Project.","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"shxr3f":7,"-":3}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"-----------------------------------------------","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"## Contents","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"* [Introduction](#introduction)","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"    * [Purpose](#purpose)","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"    * [How to read the Guide](#how-to-read-the-guide)","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"  * [Setting up Java](#setting-up-java)","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"  * [Starting up HALPMI](#starting-up-halpmi)","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"* [Features](#features)","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"  * [Adding](#adding-add)","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"  * [Viewing](#viewing-view)","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"  * [Deleting](#deleting-delete)","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"  * [Editing](#editing-edit)","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"  * [Finding](#findingfind)","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"  * [Additional Features]()","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"  * [Saving](#saving)","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"    * [Saved Data](#saving)","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"    * [Corrupt Files](#corrupt-files)","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"* [Future Versions](#future-versions)","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"* [Errors](#errors)","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"* [FAQ](#faq)","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"-----------------------------------------------","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"shxr3f"},"content":"HALPMI is a Command Line Interface (CLI) Application that allows administrators in clinics to manage the clinic\u0027s day-to-day","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"shxr3f"},"content":"administrative tasks. More specifically, using HALPMI the user is able to insert new information regarding Doctors, Patients","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"shxr3f"},"content":"and Medication. Users can also schedule appointment for Patients with Doctors. Users are also able to track stocks of medications.","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"shxr3f"},"content":"### Purpose","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"shxr3f"},"content":"The purpose of this User Guide is to get new users of HALPMI to get started with the application and learn the features","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"shxr3f"},"content":"that it entails. This User Guide can also be referred to as and when needed when unclear about certain features and commands.","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"shxr3f"},"content":"Persons with greater technical knowledge can refer to the [Developer Guide](DeveloperGuide.md) for in-depth explanations on the","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"shxr3f"},"content":"workings behind HALPMI.","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"shxr3f"},"content":"### How to read the Guide?","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"shxr3f"},"content":"The User Guide is structured in a way that it is straight-forward and has a logical flow. Hence it should be easy for any User","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"shxr3f"},"content":"like you to get started with HALPMI immediately.","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"shxr3f"},"content":"Before reading, it is noteworthy to understand some formats and keywords used in this Guide for better clarity.","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"shxr3f"},"content":"* Command - Command refers to the text input that you will be providing on the CLI as and when prompted by HALPMI.","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"shxr3f"},"content":"* `Word` - Certain words or sentences in this Guide are often found in this format. These refer to commands that you as a User","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"shxr3f"},"content":"can use in the CLI application.","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"shxr3f"},"content":"* `[Word]` - Certain words that are found inside brackets refer to compulsory parameters you have to include following the","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"shxr3f"},"content":"command.","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"shxr3f"},"content":"-----------------------------------------------","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"shxr3f"},"content":"### Setting Up Java","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"wraineflores"},"content":"Firstly, you need to have Java 11 or above installed in your computer. If you are not sure on how to check if you have","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"shxr3f"},"content":"Java 11 installed on your computer, you can refer to [Check Java](https://www.howtogeek.com/717330/how-to-check-your-java-version-on-windows-10/).","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"shxr3f"},"content":"If you do not have Java already installed...","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"shxr3f"},"content":"1. You can either download the Java Runtime Environment (JRE) from [Java](https://www.java.com/en/download/manual.jsp).","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"shxr3f"},"content":"2. Or you can download the Java Development Kit (JDK) from [Oracle](https://www.oracle.com/java/technologies/downloads/).","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":66,"author":{"gitId":"shxr3f"},"content":"Once you are sure that you have Java installed, you can download the latest version of HALPMI from the releases.","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":68,"author":{"gitId":"shxr3f"},"content":"### Starting up HALPMI","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"shxr3f"},"content":"You can launch HALPMI directly from your Command Prompt/Terminal. Change directory to the location where you have saved the","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"shxr3f"},"content":"JAR file you have downloaded from our releases. Following which you can type in `java -jar Halpmi.jar` in the command prompt to launch HALPMI.","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"shxr3f"},"content":"To learn more about [Command Prompt](https://www.makeuseof.com/tag/a-beginners-guide-to-the-windows-command-line/)","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"shxr3f"},"content":", [Linux Terminal](https://ubuntu.com/tutorials/command-line-for-beginners#1-overview) and [Mac Terminal](https://macpaw.com/how-to/use-terminal-on-mac)","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"shxr3f"},"content":"please head to the respective help links.","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"shxr3f"},"content":"If you are not ready to handle the intricacies of the Command Prompt, you can use the `.bat` file located in our repository","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"shxr3f"},"content":"to launch HALPMI as well. However do note that you will have to change the PATH name included on the bat file to the PATH name","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"shxr3f"},"content":"at which Halpmi.jar is located.","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"shxr3f"},"content":"-----------------------------------------------","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"shxr3f"},"content":"## Features","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":83,"author":{"gitId":"shxr3f"},"content":"### Adding: `add`","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"shxr3f"},"content":"Adds a new entry into the app. This entry can be either a doctor, patient or medicine.","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"shxr3f"},"content":"#### ADD DOCTOR","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"shxr3f"},"content":"To add a new doctor into your application you can use the `add doctor` command when prompted by HALPMI for your input.","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"shxr3f"},"content":"To add a doctor there are some parameters that you would have to provide:","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"shxr3f"},"content":"1. NRIC","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"shxr3f"},"content":"2. Name","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"shxr3f"},"content":"3. Age","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"shxr3f"},"content":"4. Gender","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"shxr3f"},"content":"5. Address","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"shxr3f"},"content":"6. Date Of Birth (DOB)","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"shxr3f"},"content":"7. Specialisation","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"shxr3f"},"content":"You will have to follow the formatting given below when calling the command.","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"shxr3f"},"content":"Format: `add doctor /info [nric], [name], [age], [gender], [address], [DOB], [Specialisation]`","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"wraineflores"},"content":"Example: `add doctor /info S7654321A, John Doe, 23, M, 10 Baker Street, 1999-12-31, Urinology`","lastModifiedDate":"2022-04-09"},{"lineNumber":103,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"shxr3f"},"content":"#### ADD PATIENT","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"shxr3f"},"content":"To add a new patient into your application you can use the `add patient` command when prompted by HALPMI for your input.","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"shxr3f"},"content":"To add a patient there are some parameters that you would have to provide:","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"shxr3f"},"content":"1. NRIC","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"shxr3f"},"content":"2. Name","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"shxr3f"},"content":"3. Age","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"shxr3f"},"content":"4. Gender","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"shxr3f"},"content":"5. Address","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"shxr3f"},"content":"6. Date Of Birth (DOB)","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"shxr3f"},"content":"7. Date Of Admission (DOA)","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"shxr3f"},"content":"You will have to follow the formatting given below when calling the command.","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"shxr3f"},"content":"Format: `add patient /info [nric], [name], [age], [gender], [address], [DOB], [DOA]`","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"shxr3f"},"content":"Example: `add patient /info S1234567A, John Doe, 23, M, 10 Baker Street, 1999-12-31, 2021-02-15`","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"shxr3f"},"content":"#### ADD MEDICINE","lastModifiedDate":"2022-03-28"},{"lineNumber":123,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"shxr3f"},"content":"To add a new medicine into your application you can use the `add medicine` command when prompted by HALPMI for your input.","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"shxr3f"},"content":"To add a medicine there are some parameters that you would have to provide:","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"tanweili"},"content":"1. Medicine ID","lastModifiedDate":"2022-04-07"},{"lineNumber":127,"author":{"gitId":"shxr3f"},"content":"1. Medicine Name","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"shxr3f"},"content":"2. Dosage","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"shxr3f"},"content":"3. Expiry Date","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"shxr3f"},"content":"4. Side Effects","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"shxr3f"},"content":"5. Quantity","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"shxr3f"},"content":"You will have to follow the formatting given below when calling the command.","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"tanweili"},"content":"Format: `add medicine /info [batch id], [name], [dosage], [expiry date], [side effects], [quantity]`","lastModifiedDate":"2022-03-27"},{"lineNumber":136,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"Anvitha-r"},"content":"Example: `add medicine /info A123, Paracetamol, 500, 2023-06-11, drowsy, 10`","lastModifiedDate":"2022-04-07"},{"lineNumber":138,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"shxr3f"},"content":"#### ADD APPOINTMENT","lastModifiedDate":"2022-03-28"},{"lineNumber":140,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":141,"author":{"gitId":"tanweili"},"content":"To add a new appointment into your application you can use the `add appointment` command when prompted by HALPMI for your input.","lastModifiedDate":"2022-03-27"},{"lineNumber":142,"author":{"gitId":"tanweili"},"content":"To add an appointment there are some parameters that you would have to provide:","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"tanweili"},"content":"1. Patient NRIC","lastModifiedDate":"2022-04-06"},{"lineNumber":144,"author":{"gitId":"tanweili"},"content":"2. Doctor NRIC","lastModifiedDate":"2022-04-06"},{"lineNumber":145,"author":{"gitId":"tanweili"},"content":"3. Appointment Date","lastModifiedDate":"2022-04-06"},{"lineNumber":146,"author":{"gitId":"tanweili"},"content":"4. Appointment Details","lastModifiedDate":"2022-04-06"},{"lineNumber":147,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"tanweili"},"content":"You will have to follow the formatting given below when calling the command.","lastModifiedDate":"2022-03-27"},{"lineNumber":149,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":150,"author":{"gitId":"tanweili"},"content":"Format: `add appointment /info [patient nric], [doctor nric], [appointment date], [appointment details]`","lastModifiedDate":"2022-04-09"},{"lineNumber":151,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"tanweili"},"content":"Example: `add appointment /info S1234567A, S7654321A, 2022-10-15, Regular knee checkup`","lastModifiedDate":"2022-04-09"},{"lineNumber":153,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"shxr3f"},"content":"### Viewing: `view`","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"shxr3f"},"content":"Allows user to view existing records of doctors, patients and medicine.","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"shxr3f"},"content":"#### VIEW DOCTOR","lastModifiedDate":"2022-03-28"},{"lineNumber":158,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":159,"author":{"gitId":"shxr3f"},"content":"To view the records of all doctors in the application, you can simply call `view doctor` without any additional","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"wraineflores"},"content":"parameters.","lastModifiedDate":"2022-04-08"},{"lineNumber":161,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":162,"author":{"gitId":"wraineflores"},"content":"Format: `view doctor`","lastModifiedDate":"2022-04-08"},{"lineNumber":163,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"wraineflores"},"content":"Examples: `view doctor`","lastModifiedDate":"2022-04-08"},{"lineNumber":165,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"shxr3f"},"content":"#### VIEW PATIENT","lastModifiedDate":"2022-03-28"},{"lineNumber":167,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":168,"author":{"gitId":"shxr3f"},"content":"To view the records of all patients in the application, you can simply call `view patient` without any additional","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"wraineflores"},"content":"parameters.","lastModifiedDate":"2022-04-08"},{"lineNumber":170,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"wraineflores"},"content":"Format: `view patient`","lastModifiedDate":"2022-04-08"},{"lineNumber":172,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"wraineflores"},"content":"Example: `view patient`","lastModifiedDate":"2022-04-08"},{"lineNumber":174,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"shxr3f"},"content":"#### VIEW MEDICINE","lastModifiedDate":"2022-03-28"},{"lineNumber":176,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":177,"author":{"gitId":"shxr3f"},"content":"To view the records of all medicines in the application, you can simply call `view medicine` without any additional","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"wraineflores"},"content":"parameters.","lastModifiedDate":"2022-04-08"},{"lineNumber":179,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":180,"author":{"gitId":"wraineflores"},"content":"Format: `view medicine`","lastModifiedDate":"2022-04-08"},{"lineNumber":181,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"wraineflores"},"content":"Example: `view medicine`","lastModifiedDate":"2022-04-08"},{"lineNumber":183,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"shxr3f"},"content":"#### VIEW APPOINTMENT","lastModifiedDate":"2022-03-28"},{"lineNumber":185,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":186,"author":{"gitId":"tanweili"},"content":"To view the records of all appointments in the application, you can simply call `view appointment` without any","lastModifiedDate":"2022-03-27"},{"lineNumber":187,"author":{"gitId":"tanweili"},"content":"additional parameters. You could also give a specific criteria as listed below and the input if you want to","lastModifiedDate":"2022-04-06"},{"lineNumber":188,"author":{"gitId":"tanweili"},"content":"search and view by a specific criteria.","lastModifiedDate":"2022-03-27"},{"lineNumber":189,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":190,"author":{"gitId":"tanweili"},"content":"Format: `view appointment` or `view appointment /info [criteria], [input value]`","lastModifiedDate":"2022-03-27"},{"lineNumber":191,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":192,"author":{"gitId":"Anvitha-r"},"content":"Accepted Criteria: `appointment id`,`patient nric`,`patient name`,`doctor nric`,`doctor name`,`date`","lastModifiedDate":"2022-04-07"},{"lineNumber":193,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":194,"author":{"gitId":"Anvitha-r"},"content":"Example 1: `view appointment /info id,A123` \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":195,"author":{"gitId":"Anvitha-r"},"content":"Example 2: `view appointment /info patient nric, S1234567A` \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":196,"author":{"gitId":"Anvitha-r"},"content":"Example 2: `view appointment /info patient name, Don` \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":197,"author":{"gitId":"Anvitha-r"},"content":"Example 2: `view appointment /info doctor nric, S7654321A` \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":198,"author":{"gitId":"Anvitha-r"},"content":"Example 3: `view appointment /info doctor name, John` \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":199,"author":{"gitId":"Anvitha-r"},"content":"Example 4:`view appointment /info date, 2023-01-01`","lastModifiedDate":"2022-04-07"},{"lineNumber":200,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":201,"author":{"gitId":"shxr3f"},"content":"### Deleting: `delete`","lastModifiedDate":"2022-03-22"},{"lineNumber":202,"author":{"gitId":"shxr3f"},"content":"Allows user to delete existing records of doctors, patients and medicine.","lastModifiedDate":"2022-03-22"},{"lineNumber":203,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":204,"author":{"gitId":"shxr3f"},"content":"#### DELETE DOCTOR","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"shxr3f"},"content":"To delete an existing doctor in the application, you can use the `delete doctor` command. This command requires an","lastModifiedDate":"2022-03-22"},{"lineNumber":207,"author":{"gitId":"shxr3f"},"content":"additional parameter which is the NRIC of the doctor.","lastModifiedDate":"2022-03-22"},{"lineNumber":208,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":209,"author":{"gitId":"shxr3f"},"content":"Format: `delete doctor /info [nric]`","lastModifiedDate":"2022-03-22"},{"lineNumber":210,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":211,"author":{"gitId":"shxr3f"},"content":"Example: `delete doctor /info S1234567A`","lastModifiedDate":"2022-03-22"},{"lineNumber":212,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":213,"author":{"gitId":"shxr3f"},"content":"#### DELETE PATIENT","lastModifiedDate":"2022-03-28"},{"lineNumber":214,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":215,"author":{"gitId":"shxr3f"},"content":"To delete an existing patient in the application, you can use the `delete patient` command. This command requires an","lastModifiedDate":"2022-03-22"},{"lineNumber":216,"author":{"gitId":"shxr3f"},"content":"additional parameter which is the NRIC of the patient.","lastModifiedDate":"2022-03-22"},{"lineNumber":217,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":218,"author":{"gitId":"shxr3f"},"content":"Format: `delete patient /info [nric]`","lastModifiedDate":"2022-03-22"},{"lineNumber":219,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":220,"author":{"gitId":"wraineflores"},"content":"Example: `delete patient /info S1234567A`","lastModifiedDate":"2022-03-23"},{"lineNumber":221,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":222,"author":{"gitId":"shxr3f"},"content":"#### DELETE MEDICINE","lastModifiedDate":"2022-03-28"},{"lineNumber":223,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":224,"author":{"gitId":"shxr3f"},"content":"To delete an existing medicine in the application, you can use the `delete medicine` command. This command requires an","lastModifiedDate":"2022-03-22"},{"lineNumber":225,"author":{"gitId":"tanweili"},"content":"additional parameter which is the batch id of the medicine.","lastModifiedDate":"2022-03-27"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":227,"author":{"gitId":"tanweili"},"content":"Format: `delete medicine /info [batch id]`","lastModifiedDate":"2022-03-27"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":229,"author":{"gitId":"tanweili"},"content":"Example: `delete medicine /info S234`","lastModifiedDate":"2022-03-27"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":231,"author":{"gitId":"shxr3f"},"content":"#### DELETE APPOINTMENT","lastModifiedDate":"2022-03-28"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":233,"author":{"gitId":"tanweili"},"content":"To delete an existing appointment in the application, you can use the `delete appointment` command.","lastModifiedDate":"2022-03-27"},{"lineNumber":234,"author":{"gitId":"tanweili"},"content":"This command requires an additional parameter which is the appointment id of the medicine.","lastModifiedDate":"2022-03-27"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":236,"author":{"gitId":"tanweili"},"content":"Format: `delete appointment /info [appointment id]`","lastModifiedDate":"2022-03-27"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":238,"author":{"gitId":"wraineflores"},"content":"Example: `delete appointment /info S234`","lastModifiedDate":"2022-04-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":240,"author":{"gitId":"shxr3f"},"content":"### Editing: `edit`","lastModifiedDate":"2022-03-27"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":242,"author":{"gitId":"shxr3f"},"content":"#### EDIT DOCTOR","lastModifiedDate":"2022-03-28"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":244,"author":{"gitId":"shxr3f"},"content":"To edit an existing doctor in your application you can use the `edit doctor` command when prompted by HALPMI for your input.","lastModifiedDate":"2022-03-28"},{"lineNumber":245,"author":{"gitId":"shxr3f"},"content":"To edit a doctor there are some parameters that you would have to provide:","lastModifiedDate":"2022-03-28"},{"lineNumber":246,"author":{"gitId":"shxr3f"},"content":"1. NRIC (Must be already in the list)","lastModifiedDate":"2022-03-28"},{"lineNumber":247,"author":{"gitId":"shxr3f"},"content":"2. Name","lastModifiedDate":"2022-03-28"},{"lineNumber":248,"author":{"gitId":"shxr3f"},"content":"3. Age","lastModifiedDate":"2022-03-28"},{"lineNumber":249,"author":{"gitId":"shxr3f"},"content":"4. Gender","lastModifiedDate":"2022-03-28"},{"lineNumber":250,"author":{"gitId":"shxr3f"},"content":"5. Address","lastModifiedDate":"2022-03-28"},{"lineNumber":251,"author":{"gitId":"shxr3f"},"content":"6. Date Of Birth (DOB)","lastModifiedDate":"2022-03-28"},{"lineNumber":252,"author":{"gitId":"shxr3f"},"content":"7. Specialisation","lastModifiedDate":"2022-03-28"},{"lineNumber":253,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":254,"author":{"gitId":"shxr3f"},"content":"You will have to follow the formatting given below when calling the command.","lastModifiedDate":"2022-03-28"},{"lineNumber":255,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":256,"author":{"gitId":"shxr3f"},"content":"Format: `edit doctor /info [nric], [name], [age], [gender], [address], [DOB], [Specialisation]`","lastModifiedDate":"2022-03-28"},{"lineNumber":257,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":258,"author":{"gitId":"shxr3f"},"content":"Example: `edit doctor /info S1234567A, John Doe, 23, M, 10 Baker Street, 1999-12-31, Urinology`","lastModifiedDate":"2022-03-28"},{"lineNumber":259,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":260,"author":{"gitId":"shxr3f"},"content":"#### EDIT PATIENT","lastModifiedDate":"2022-03-28"},{"lineNumber":261,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":262,"author":{"gitId":"shxr3f"},"content":"To edit an existing patient in your application you can use the `edit patient` command when prompted by HALPMI for your input.","lastModifiedDate":"2022-03-28"},{"lineNumber":263,"author":{"gitId":"shxr3f"},"content":"To edit a patient there are some parameters that you would have to provide:","lastModifiedDate":"2022-03-28"},{"lineNumber":264,"author":{"gitId":"shxr3f"},"content":"1. NRIC (Must be already in the list)","lastModifiedDate":"2022-03-28"},{"lineNumber":265,"author":{"gitId":"shxr3f"},"content":"2. Name","lastModifiedDate":"2022-03-28"},{"lineNumber":266,"author":{"gitId":"shxr3f"},"content":"3. Age","lastModifiedDate":"2022-03-28"},{"lineNumber":267,"author":{"gitId":"shxr3f"},"content":"4. Gender","lastModifiedDate":"2022-03-28"},{"lineNumber":268,"author":{"gitId":"shxr3f"},"content":"5. Address","lastModifiedDate":"2022-03-28"},{"lineNumber":269,"author":{"gitId":"shxr3f"},"content":"6. Date Of Birth (DOB)","lastModifiedDate":"2022-03-28"},{"lineNumber":270,"author":{"gitId":"shxr3f"},"content":"7. Date Of Admission (DOA)","lastModifiedDate":"2022-03-28"},{"lineNumber":271,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":272,"author":{"gitId":"shxr3f"},"content":"You will have to follow the formatting given below when calling the command.","lastModifiedDate":"2022-03-28"},{"lineNumber":273,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":274,"author":{"gitId":"shxr3f"},"content":"Format: `edit patient /info [nric], [name], [age], [gender], [address], [DOB], [DOA]`","lastModifiedDate":"2022-03-28"},{"lineNumber":275,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":276,"author":{"gitId":"shxr3f"},"content":"Example: `edit patient /info S1234567A, John Doe, 23, M, 10 Baker Street, 1999-12-31, 2021-02-15`","lastModifiedDate":"2022-03-28"},{"lineNumber":277,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":278,"author":{"gitId":"shxr3f"},"content":"#### EDIT MEDICINE","lastModifiedDate":"2022-03-28"},{"lineNumber":279,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":280,"author":{"gitId":"shxr3f"},"content":"To edit an existing medicine in your application you can use the `edit medicine` command when prompted by HALPMI for your input.","lastModifiedDate":"2022-03-28"},{"lineNumber":281,"author":{"gitId":"shxr3f"},"content":"To edit a medicine there are some parameters that you would have to provide:","lastModifiedDate":"2022-03-28"},{"lineNumber":282,"author":{"gitId":"shxr3f"},"content":"1. Batch ID (Must be already on the list)","lastModifiedDate":"2022-03-28"},{"lineNumber":283,"author":{"gitId":"shxr3f"},"content":"1. Medicine Name","lastModifiedDate":"2022-03-28"},{"lineNumber":284,"author":{"gitId":"shxr3f"},"content":"2. Dosage","lastModifiedDate":"2022-03-28"},{"lineNumber":285,"author":{"gitId":"shxr3f"},"content":"3. Expiry Date","lastModifiedDate":"2022-03-28"},{"lineNumber":286,"author":{"gitId":"shxr3f"},"content":"4. Side Effects","lastModifiedDate":"2022-03-28"},{"lineNumber":287,"author":{"gitId":"shxr3f"},"content":"5. Quantity","lastModifiedDate":"2022-03-28"},{"lineNumber":288,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":289,"author":{"gitId":"shxr3f"},"content":"You will have to follow the formatting given below when calling the command.","lastModifiedDate":"2022-03-28"},{"lineNumber":290,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":291,"author":{"gitId":"shxr3f"},"content":"Format: `edit medicine /info [batch id], [name], [dosage], [expiry date], [side effects], [quantity]`","lastModifiedDate":"2022-03-28"},{"lineNumber":292,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":293,"author":{"gitId":"Anvitha-r"},"content":"Example: `edit medicine /info A123, Paracetamol, 500, 2023-06-11, drowsy, 10`","lastModifiedDate":"2022-04-07"},{"lineNumber":294,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":295,"author":{"gitId":"shxr3f"},"content":"#### EDIT APPOINTMENT","lastModifiedDate":"2022-03-28"},{"lineNumber":296,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":297,"author":{"gitId":"shxr3f"},"content":"To edit an existing appointment in your application you can use the `add appointment` command when prompted by HALPMI for your input.","lastModifiedDate":"2022-03-28"},{"lineNumber":298,"author":{"gitId":"shxr3f"},"content":"To edit an appointment there are some parameters that you would have to provide:","lastModifiedDate":"2022-03-28"},{"lineNumber":299,"author":{"gitId":"shxr3f"},"content":"1. Appointment ID (Must be already on the list)","lastModifiedDate":"2022-03-28"},{"lineNumber":300,"author":{"gitId":"shxr3f"},"content":"2. Patient name","lastModifiedDate":"2022-03-28"},{"lineNumber":301,"author":{"gitId":"shxr3f"},"content":"3. Patient NRIC","lastModifiedDate":"2022-03-28"},{"lineNumber":302,"author":{"gitId":"shxr3f"},"content":"4. Doctor name","lastModifiedDate":"2022-03-28"},{"lineNumber":303,"author":{"gitId":"shxr3f"},"content":"5. Doctor NRIC","lastModifiedDate":"2022-03-28"},{"lineNumber":304,"author":{"gitId":"shxr3f"},"content":"6. Appointment Date","lastModifiedDate":"2022-03-28"},{"lineNumber":305,"author":{"gitId":"shxr3f"},"content":"7. Appointment Details","lastModifiedDate":"2022-03-28"},{"lineNumber":306,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":307,"author":{"gitId":"shxr3f"},"content":"You will have to follow the formatting given below when calling the command.","lastModifiedDate":"2022-03-28"},{"lineNumber":308,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":309,"author":{"gitId":"shxr3f"},"content":"Format: `edit appointment /info [appointment id], [patient nric], [patient name], [doctor nric], [doctor name],","lastModifiedDate":"2022-03-28"},{"lineNumber":310,"author":{"gitId":"shxr3f"},"content":"[appointment date], [appointment details]`","lastModifiedDate":"2022-03-28"},{"lineNumber":311,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":312,"author":{"gitId":"shxr3f"},"content":"Example: `edit appointment /info A123, S1234567A, Don, S7654321A, John, 2022-10-15, Regular knee checkup`","lastModifiedDate":"2022-03-28"},{"lineNumber":313,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":314,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":315,"author":{"gitId":"shxr3f"},"content":"### Finding: `find`","lastModifiedDate":"2022-03-27"},{"lineNumber":316,"author":{"gitId":"shxr3f"},"content":"Allows user to find existing records of doctors, patients and medicine.","lastModifiedDate":"2022-03-28"},{"lineNumber":317,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":318,"author":{"gitId":"shxr3f"},"content":"#### FIND DOCTOR","lastModifiedDate":"2022-03-28"},{"lineNumber":319,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":320,"author":{"gitId":"shxr3f"},"content":"To find an existing doctor in the application, you can use the `find doctor` command. This command requires an","lastModifiedDate":"2022-03-28"},{"lineNumber":321,"author":{"gitId":"shxr3f"},"content":"additional parameter which can be any of the parameters of doctor.","lastModifiedDate":"2022-03-28"},{"lineNumber":322,"author":{"gitId":"shxr3f"},"content":"To find a doctor you would have to provide one of these parameters:","lastModifiedDate":"2022-03-28"},{"lineNumber":323,"author":{"gitId":"shxr3f"},"content":"1. NRIC: `nric`","lastModifiedDate":"2022-03-28"},{"lineNumber":324,"author":{"gitId":"shxr3f"},"content":"2. Name: `name`","lastModifiedDate":"2022-03-28"},{"lineNumber":325,"author":{"gitId":"shxr3f"},"content":"3. Age: `age`","lastModifiedDate":"2022-03-28"},{"lineNumber":326,"author":{"gitId":"shxr3f"},"content":"4. Gender: `gender`","lastModifiedDate":"2022-03-28"},{"lineNumber":327,"author":{"gitId":"shxr3f"},"content":"5. Address: `address`","lastModifiedDate":"2022-03-28"},{"lineNumber":328,"author":{"gitId":"shxr3f"},"content":"6. Date Of Birth (DOB): `dob`","lastModifiedDate":"2022-03-28"},{"lineNumber":329,"author":{"gitId":"shxr3f"},"content":"7. Specialisation: `specialization`","lastModifiedDate":"2022-03-28"},{"lineNumber":330,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":331,"author":{"gitId":"wraineflores"},"content":"Format: `find doctor /info [parameter], [keyword to find]`","lastModifiedDate":"2022-03-29"},{"lineNumber":332,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":333,"author":{"gitId":"Anvitha-r"},"content":"Example 1: `find doctor /info name, Jimmy` \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":334,"author":{"gitId":"Anvitha-r"},"content":"Example 2: `find doctor /info nric, S1234567X` \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":335,"author":{"gitId":"Anvitha-r"},"content":"Example 3: `find doctor /info age, 23` \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":336,"author":{"gitId":"Anvitha-r"},"content":"Example 4: `find doctor /info gender, M` \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":337,"author":{"gitId":"Anvitha-r"},"content":"Example 5: `find doctor /info address, 15 King\u0027s Avenue` \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":338,"author":{"gitId":"Anvitha-r"},"content":"Example 6: `find doctor /info dob, 1999-12-31` \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":339,"author":{"gitId":"wraineflores"},"content":"Example 7: `find doctor /info specialization, Dermatology`","lastModifiedDate":"2022-03-29"},{"lineNumber":340,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":341,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":342,"author":{"gitId":"shxr3f"},"content":"#### FIND PATIENT","lastModifiedDate":"2022-03-28"},{"lineNumber":343,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":344,"author":{"gitId":"shxr3f"},"content":"To find an existing patient in the application, you can use the `find patient` command. This command requires an","lastModifiedDate":"2022-03-28"},{"lineNumber":345,"author":{"gitId":"shxr3f"},"content":"additional parameter which can be any of the parameters of patient.","lastModifiedDate":"2022-03-28"},{"lineNumber":346,"author":{"gitId":"shxr3f"},"content":"To find a patient you would have to provide one of these parameters using the given keywords:","lastModifiedDate":"2022-03-28"},{"lineNumber":347,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":348,"author":{"gitId":"shxr3f"},"content":"1. NRIC: `nric`","lastModifiedDate":"2022-03-28"},{"lineNumber":349,"author":{"gitId":"shxr3f"},"content":"2. Name: `name`","lastModifiedDate":"2022-03-28"},{"lineNumber":350,"author":{"gitId":"shxr3f"},"content":"3. Age: `age`","lastModifiedDate":"2022-03-28"},{"lineNumber":351,"author":{"gitId":"shxr3f"},"content":"4. Gender: `gender`","lastModifiedDate":"2022-03-28"},{"lineNumber":352,"author":{"gitId":"shxr3f"},"content":"5. Address: `address`","lastModifiedDate":"2022-03-28"},{"lineNumber":353,"author":{"gitId":"shxr3f"},"content":"6. Date Of Birth (DOB): `dob`","lastModifiedDate":"2022-03-28"},{"lineNumber":354,"author":{"gitId":"shxr3f"},"content":"7. Date Of Admission (DOA): `admissiondate`","lastModifiedDate":"2022-03-28"},{"lineNumber":355,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":356,"author":{"gitId":"wraineflores"},"content":"Format: `find patient /info [parameter], [keyword to find]`","lastModifiedDate":"2022-03-29"},{"lineNumber":357,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":358,"author":{"gitId":"Anvitha-r"},"content":"Example 1: `find patient /info name, Steven Oz` \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":359,"author":{"gitId":"Anvitha-r"},"content":"Example 2: `find patient /info nric, S1234567X` \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":360,"author":{"gitId":"Anvitha-r"},"content":"Example 3: `find patient /info age, 54` \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":361,"author":{"gitId":"Anvitha-r"},"content":"Example 4: `find patient /info gender, M` \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":362,"author":{"gitId":"Anvitha-r"},"content":"Example 5: `find patient /info address, 15 King\u0027s Avenue` \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":363,"author":{"gitId":"Anvitha-r"},"content":"Example 6: `find patient /info dob, 1999-12-31` \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":364,"author":{"gitId":"Anvitha-r"},"content":"Example 7: `find patient /info admissiondate, 2022-03-11` \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":365,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":366,"author":{"gitId":"shxr3f"},"content":"#### FIND MEDICINE","lastModifiedDate":"2022-03-28"},{"lineNumber":367,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":368,"author":{"gitId":"shxr3f"},"content":"To find an existing medicine in the application, you can use the `find medicine` command. This command requires an","lastModifiedDate":"2022-03-28"},{"lineNumber":369,"author":{"gitId":"shxr3f"},"content":"additional parameter which can be any of the parameters of medicine.","lastModifiedDate":"2022-03-28"},{"lineNumber":370,"author":{"gitId":"shxr3f"},"content":"To find a medicine you would have to provide one of these parameters using the given keywords:","lastModifiedDate":"2022-03-28"},{"lineNumber":371,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":372,"author":{"gitId":"shxr3f"},"content":"1. Medicine Name: `name`","lastModifiedDate":"2022-03-28"},{"lineNumber":373,"author":{"gitId":"shxr3f"},"content":"2. Dosage: `dosage`","lastModifiedDate":"2022-03-28"},{"lineNumber":374,"author":{"gitId":"shxr3f"},"content":"3. Expiry Date: `expiry`","lastModifiedDate":"2022-03-28"},{"lineNumber":375,"author":{"gitId":"shxr3f"},"content":"4. Side Effects: `sideeffects`","lastModifiedDate":"2022-03-28"},{"lineNumber":376,"author":{"gitId":"shxr3f"},"content":"5. Quantity: `quantity`","lastModifiedDate":"2022-03-28"},{"lineNumber":377,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":378,"author":{"gitId":"wraineflores"},"content":"Format: `find medicine /info [parameter], [keyword to find]`","lastModifiedDate":"2022-03-29"},{"lineNumber":379,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":380,"author":{"gitId":"Anvitha-r"},"content":"Example 1: `find medicine /info name, Paracetamol` \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":381,"author":{"gitId":"Anvitha-r"},"content":"Example 2: `find medicine /info id, S125` \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":382,"author":{"gitId":"Anvitha-r"},"content":"Example 3: `find medicine /info dosage, 500` \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":383,"author":{"gitId":"Anvitha-r"},"content":"Example 4: `find medicine /info expiry, 2022-06-30` \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":384,"author":{"gitId":"Anvitha-r"},"content":"Example 5: `find medicine /info sideeffects, Headache` \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":385,"author":{"gitId":"wraineflores"},"content":"Example 6: `find medicine /info quantity, 10`","lastModifiedDate":"2022-03-29"},{"lineNumber":386,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":387,"author":{"gitId":"Anvitha-r"},"content":"#### FIND APPOINTMENT","lastModifiedDate":"2022-04-07"},{"lineNumber":388,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":389,"author":{"gitId":"Anvitha-r"},"content":"To find an existing appointment in the application, you can use the `find appointment` command. This command requires an","lastModifiedDate":"2022-04-07"},{"lineNumber":390,"author":{"gitId":"Anvitha-r"},"content":"additional parameter which can be any of the parameters of appointment.","lastModifiedDate":"2022-04-07"},{"lineNumber":391,"author":{"gitId":"Anvitha-r"},"content":"To find an appointment you would have to provide one of these parameters using the given keywords:","lastModifiedDate":"2022-04-07"},{"lineNumber":392,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":393,"author":{"gitId":"Anvitha-r"},"content":"1. Appointment Id: `id`","lastModifiedDate":"2022-04-07"},{"lineNumber":394,"author":{"gitId":"Anvitha-r"},"content":"2. Patient nric: `patient nric`","lastModifiedDate":"2022-04-07"},{"lineNumber":395,"author":{"gitId":"Anvitha-r"},"content":"3. Patient name: `patient name`","lastModifiedDate":"2022-04-07"},{"lineNumber":396,"author":{"gitId":"Anvitha-r"},"content":"4. Doctor nric: `doctor nric`","lastModifiedDate":"2022-04-07"},{"lineNumber":397,"author":{"gitId":"Anvitha-r"},"content":"5. Doctor name: `doctor name`","lastModifiedDate":"2022-04-07"},{"lineNumber":398,"author":{"gitId":"Anvitha-r"},"content":"6. Appointment Date: `date`","lastModifiedDate":"2022-04-07"},{"lineNumber":399,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":400,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":401,"author":{"gitId":"Anvitha-r"},"content":"Format: `find appointment /info [parameter], [keyword to find]`","lastModifiedDate":"2022-04-07"},{"lineNumber":402,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":403,"author":{"gitId":"Anvitha-r"},"content":"Example 1: `find appointment /info id, A123` \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":404,"author":{"gitId":"Anvitha-r"},"content":"Example 2: `find appointment /info patient nric, S1234567A` \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":405,"author":{"gitId":"Anvitha-r"},"content":"Example 3: `find appointment /info patient name, Don` \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":406,"author":{"gitId":"Anvitha-r"},"content":"Example 4: `find appointment /info doctor nric, S7654321A` \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":407,"author":{"gitId":"Anvitha-r"},"content":"Example 5: `find appointment /info doctor name, John` \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":408,"author":{"gitId":"Anvitha-r"},"content":"Example 6: `find appointment /info date, 2022-10-15`","lastModifiedDate":"2022-04-07"},{"lineNumber":409,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":410,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":411,"author":{"gitId":"shxr3f"},"content":"### Additional Features","lastModifiedDate":"2022-03-30"},{"lineNumber":412,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":413,"author":{"gitId":"shxr3f"},"content":"#### Retrieving List of Expired Medicine in the inventory","lastModifiedDate":"2022-03-30"},{"lineNumber":414,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":415,"author":{"gitId":"shxr3f"},"content":"To retrieve list of expired medicine in your inventory, you can simply call the `update medicines` command. This command","lastModifiedDate":"2022-03-30"},{"lineNumber":416,"author":{"gitId":"shxr3f"},"content":"requires no additional parameter. **{DO NOTE THAT THIS LIST WILL BE CLEARED AND THE INFORMATION WITHIN WILL BE DESTROYED","lastModifiedDate":"2022-03-30"},{"lineNumber":417,"author":{"gitId":"shxr3f"},"content":"UPON EXIT OF THE APP}**","lastModifiedDate":"2022-03-30"},{"lineNumber":418,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":419,"author":{"gitId":"shxr3f"},"content":"Format: `update medicines`","lastModifiedDate":"2022-03-30"},{"lineNumber":420,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":421,"author":{"gitId":"shxr3f"},"content":"Example: `update medicines`","lastModifiedDate":"2022-03-30"},{"lineNumber":422,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":423,"author":{"gitId":"shxr3f"},"content":"##### Clearing List of Expired Medicine","lastModifiedDate":"2022-03-30"},{"lineNumber":424,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":425,"author":{"gitId":"shxr3f"},"content":"If you choose to clear the list of expired medicine manually you can use the `clear old medicines` command. This commmand","lastModifiedDate":"2022-03-30"},{"lineNumber":426,"author":{"gitId":"shxr3f"},"content":"requires no additional parameter.","lastModifiedDate":"2022-03-30"},{"lineNumber":427,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":428,"author":{"gitId":"shxr3f"},"content":"Format: `clear old medicines`","lastModifiedDate":"2022-03-30"},{"lineNumber":429,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":430,"author":{"gitId":"shxr3f"},"content":"Example: `clear old medicines`","lastModifiedDate":"2022-03-30"},{"lineNumber":431,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":432,"author":{"gitId":"shxr3f"},"content":"### Saving","lastModifiedDate":"2022-03-27"},{"lineNumber":433,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":434,"author":{"gitId":"shxr3f"},"content":"#### Saved Data","lastModifiedDate":"2022-03-27"},{"lineNumber":435,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":436,"author":{"gitId":"shxr3f"},"content":"When you start HalpMi for the first time, the following directory and files would be created:","lastModifiedDate":"2022-03-28"},{"lineNumber":437,"author":{"gitId":"shxr3f"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":438,"author":{"gitId":"shxr3f"},"content":"data/        // Primary resource directory for HalpMi","lastModifiedDate":"2022-03-28"},{"lineNumber":439,"author":{"gitId":"shxr3f"},"content":"    ├── doctor.txt   // Text file containing doctor list","lastModifiedDate":"2022-03-28"},{"lineNumber":440,"author":{"gitId":"shxr3f"},"content":"    ├── patient.txt    // Text file containing patient list","lastModifiedDate":"2022-03-28"},{"lineNumber":441,"author":{"gitId":"shxr3f"},"content":"    ├── medicine.txt       // Text file containing medcine list","lastModifiedDate":"2022-03-28"},{"lineNumber":442,"author":{"gitId":"shxr3f"},"content":"    └── appointment.txt    // Text file containing appointment list","lastModifiedDate":"2022-03-28"},{"lineNumber":443,"author":{"gitId":"shxr3f"},"content":"```","lastModifiedDate":"2022-03-28"},{"lineNumber":444,"author":{"gitId":"shxr3f"},"content":"Do note that the directory (and by extension, the files) will be created in your terminal\u0027s","lastModifiedDate":"2022-03-28"},{"lineNumber":445,"author":{"gitId":"shxr3f"},"content":"**current working directory**. Thus, it is highly recommended for you to create a new directory","lastModifiedDate":"2022-03-28"},{"lineNumber":446,"author":{"gitId":"shxr3f"},"content":"with the HalpMi JAR file inside it, and run the application from the directory.","lastModifiedDate":"2022-03-28"},{"lineNumber":447,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":448,"author":{"gitId":"shxr3f"},"content":"When you launch HalpMi in subsequent sessions, please ensure that you run it from the same directory","lastModifiedDate":"2022-03-28"},{"lineNumber":449,"author":{"gitId":"shxr3f"},"content":"that you did when starting HalpMi for the first time.","lastModifiedDate":"2022-03-28"},{"lineNumber":450,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":451,"author":{"gitId":"shxr3f"},"content":"#### Corrupt Files","lastModifiedDate":"2022-03-27"},{"lineNumber":452,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":453,"author":{"gitId":"shxr3f"},"content":"TO BE UPDATED","lastModifiedDate":"2022-03-28"},{"lineNumber":454,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":455,"author":{"gitId":"shxr3f"},"content":"-----------------------------------------------","lastModifiedDate":"2022-03-27"},{"lineNumber":456,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":457,"author":{"gitId":"shxr3f"},"content":"## Future Versions","lastModifiedDate":"2022-03-27"},{"lineNumber":458,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":459,"author":{"gitId":"shxr3f"},"content":"TO BE UPDATED","lastModifiedDate":"2022-03-28"},{"lineNumber":460,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":461,"author":{"gitId":"shxr3f"},"content":"-----------------------------------------------","lastModifiedDate":"2022-03-27"},{"lineNumber":462,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":463,"author":{"gitId":"shxr3f"},"content":"## Errors","lastModifiedDate":"2022-03-27"},{"lineNumber":464,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":465,"author":{"gitId":"shxr3f"},"content":"TO BE UPDATED","lastModifiedDate":"2022-03-28"},{"lineNumber":466,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":467,"author":{"gitId":"shxr3f"},"content":"-----------------------------------------------","lastModifiedDate":"2022-03-27"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":469,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":471,"author":{"gitId":"wraineflores"},"content":"**Question**: How do I transfer my data to another computer?","lastModifiedDate":"2022-03-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":473,"author":{"gitId":"wraineflores"},"content":"**Answer**: {your answer here}","lastModifiedDate":"2022-03-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":475,"author":{"gitId":"shxr3f"},"content":"-----------------------------------------------","lastModifiedDate":"2022-03-27"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":477,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":479,"author":{"gitId":"wraineflores"},"content":"| Action               | Format, Examples                                                                                                                                                                                                                                            |","lastModifiedDate":"2022-03-23"},{"lineNumber":480,"author":{"gitId":"Anvitha-r"},"content":"|----------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-07"},{"lineNumber":481,"author":{"gitId":"wraineflores"},"content":"| `add doctor`         | `add doctor /info [nric],[name],[age],[gender],[address],[DOB],[Specialisation]`\u003cbr /\u003ee.g. `add doctor /info S1234567A, John Doe, 23, M, 10 Baker Street, 1999-12-31, Urinology`                                                                            |","lastModifiedDate":"2022-03-23"},{"lineNumber":482,"author":{"gitId":"wraineflores"},"content":"| `add patient`        | `add patient /info [nric],[name],[age],[gender],[address],[DOB],[DOA]`\u003cbr /\u003ee.g. `add patient /info S1234567A, John Doe, 23, M, 10 Baker Street, 1999-12-31, 2021-02-15`                                                                                    |","lastModifiedDate":"2022-03-23"},{"lineNumber":483,"author":{"gitId":"tanweili"},"content":"| `add medicine`       | `add medicine /info [batch id], [name], [dosage], [expiry date], [side effects], [quantity]`\u003cbr /\u003ee.g. `add medicine /info A123, Paracetamol, 500, 2023-06-11, drowsy, 10`                                                                                                        |","lastModifiedDate":"2022-04-09"},{"lineNumber":484,"author":{"gitId":"tanweili"},"content":"| `add appointment`    | `add appointment /info [patient nric], [doctor nric], [appointment date], [appointment details]`\u003cbr /\u003ee.g. `add appointment /info S1234567A, S7654321A, 2022-10-15, Regular knee checkup` |","lastModifiedDate":"2022-04-09"},{"lineNumber":485,"author":{"gitId":"Anvitha-r"},"content":"| `view doctor`        | `view doctor` or `view doctor /info [criteria], [input value]`\u003cbr /\u003ee.g. `view doctor /info name, Jimmy`                                                                                                                                                    |","lastModifiedDate":"2022-04-07"},{"lineNumber":486,"author":{"gitId":"Anvitha-r"},"content":"| `view patient`       | `view patient` or `view patient /info [criteria], [input value]`\u003cbr /\u003ee.g. `view patient /info name, Steven`                                                                                                                                                |","lastModifiedDate":"2022-04-07"},{"lineNumber":487,"author":{"gitId":"Anvitha-r"},"content":"| `view medicine`      | `view medicine` or `view medicine /info info [criteria], [input value]`\u003cbr /\u003ee.g. `view medicine /info name, Paracetamol`                                                                                                                                   |","lastModifiedDate":"2022-04-07"},{"lineNumber":488,"author":{"gitId":"tanweili"},"content":"| `view appointment`   | `view appointment` or `view appointment /info [criteria], [input value]`\u003cbr /\u003ee.g. `view appointment /info id, 12356701017647`                                                                                                                                        |","lastModifiedDate":"2022-04-09"},{"lineNumber":489,"author":{"gitId":"wraineflores"},"content":"| `delete doctor`      | `delete doctor /info [nric]`\u003cbr /\u003ee.g. `delete doctor /info S1234567A`                                                                                                                                                                                      |","lastModifiedDate":"2022-03-23"},{"lineNumber":490,"author":{"gitId":"wraineflores"},"content":"| `delete patient`     | `delete patient /info [nric]`\u003cbr /\u003ee.g. `delete patient /info S1234567A`                                                                                                                                                                                    |","lastModifiedDate":"2022-03-23"},{"lineNumber":491,"author":{"gitId":"tanweili"},"content":"| `delete medicine`    | `delete medicine /info [batch id]`\u003cbr /\u003ee.g. `delete medicine /info S234`                                                                                                                                                                                   |","lastModifiedDate":"2022-03-27"},{"lineNumber":492,"author":{"gitId":"tanweili"},"content":"| `delete appointment` | `delete appointment /info [appointment id]`\u003cbr /\u003ee.g. `delete appointment /info 12356701017647`                                                                                                                                                                       |","lastModifiedDate":"2022-04-09"},{"lineNumber":493,"author":{"gitId":"wraineflores"},"content":"| `find doctor`        | `find doctor /info [parameter], [keyword to find]`\u003cbr /\u003ee.g.`find doctor /info name, Jimmy`\u003cbr /\u003eparameter must be one of the seven (name, nric, age, gender, address, dob or specialization)                                                               |","lastModifiedDate":"2022-03-29"},{"lineNumber":494,"author":{"gitId":"wraineflores"},"content":"| `find patient`       | `find patient /info [parameter], [keyword to find]`\u003cbr /\u003ee.g.`find patient /info name, Steven Oz`\u003cbr /\u003eparameter must be one of the seven (name, nric, age, gender, address, dob or admissiondate)                                                          |","lastModifiedDate":"2022-03-29"},{"lineNumber":495,"author":{"gitId":"wraineflores"},"content":"| `find medicine`      | `find medicine /info [parameter], [keyword to find]`\u003cbr /\u003ee.g.`find medicine /info name, Paracetamol`\u003cbr /\u003ee.g.parameter must be one of the six (name, id, dosage, expiry, sideeffects, quantity)                                                           |","lastModifiedDate":"2022-03-29"},{"lineNumber":496,"author":{"gitId":"tanweili"},"content":"| `find appointment`   | `find appointment /info [parameter], [keyword to find]`\u003cbr /\u003ee.g.`find appointment /info id, 12356701017647` \u003cbr /\u003ee.g.parameter must be one of the six (appointment id, patient nric, patient name, doctor nric, doctor name, appointment date)                      |","lastModifiedDate":"2022-04-09"},{"lineNumber":497,"author":{"gitId":"Anvitha-r"},"content":"| `edit doctor`        | `edit doctor /info [nric],[name],[age],[gender],[address],[DOB],[Specialisation]`\u003cbr /\u003ee.g.`edit doctor /info S1234567A, John Doe, 23, M, 10 Baker Street, 1999-12-31, Urinology`                                                                           |","lastModifiedDate":"2022-04-07"},{"lineNumber":498,"author":{"gitId":"Anvitha-r"},"content":"| `edit patient`       | `edit patient /info [nric],[name],[age],[gender],[address],[DOB],[DOA]`\u003cbr /\u003ee.g.`edit patient /info S1234567A, John Doe, 23, M, 10 Baker Street, 1999-12-31, 2021-02-15`                                                                                   |","lastModifiedDate":"2022-04-07"},{"lineNumber":499,"author":{"gitId":"Anvitha-r"},"content":"| `edit medicine`      | `edit medicine /info [batch id],[name],[dosage],[expiry date],[side effects],[quantity]`\u003cbr /\u003ee.g.`edit medicine /info A123,Paracetamol, 500, 2023-06-11, drowsy, 10`                                                                                       |","lastModifiedDate":"2022-04-07"},{"lineNumber":500,"author":{"gitId":"Anvitha-r"},"content":"| `help`               | view the help function for all the commands required                                                                                                                                                                                                        |","lastModifiedDate":"2022-04-07"},{"lineNumber":501,"author":{"gitId":"Anvitha-r"},"content":"| `bye`                | exit the programme                                                                                                                                                                                                                                          |","lastModifiedDate":"2022-04-07"},{"lineNumber":502,"author":{"gitId":"wraineflores"},"content":"| `to be updated`      | `to be updated`                                                                                                                                                                                                                                             |","lastModifiedDate":"2022-03-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"tanweili":35,"wraineflores":32,"Anvitha-r":61,"-":31,"shxr3f":344}},{"path":"docs/diagrams/AppointmentListUML.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"@startuml","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"hide circle","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"class AppointmentList {","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"-appointments : Arraylist\u003cappointment\u003e \u003d null","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"-returnedFinderArray : Arraylist\u003cappointment\u003e \u003d null","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"-referencePatientList : PatientList \u003d null","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":"-referenceDoctorList : DoctorList \u003d null","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":"+AppointmentList(PatientList, DoctorList) : void","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"+getAppointment(String) : Appointment","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":"+getList() : Arraylist\u003cappointment\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":"+add(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"tanweili"},"content":"+remove(String) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":"+edit(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":"+view() : void","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"+view(String) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":"+findById(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":"+findByPatientName(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"tanweili"},"content":"+findByPatientNric(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"tanweili"},"content":"+findByDoctorName(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"tanweili"},"content":"+findByDoctorNric(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"tanweili"},"content":"+findByAppointmentDate(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"tanweili"},"content":"+createArrayOfFoundAppointments() : void","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"tanweili"},"content":"@enduml","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"tanweili":26}},{"path":"docs/diagrams/AppointmentUML.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"@startuml","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"hide circle","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"class Appointment {","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"#appointmentId : String","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"#patientNric : String","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"#patientName : String","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":"#doctorNric : String","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":"#doctorName : String","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"#appointmentDate : String","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":"#appointmentDetails : String","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":"+Appointment(appointmentId, patientNric, patientName, doctorNric,","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"tanweili"},"content":"doctorName, appointmentDate, appointmentDetails) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":"+toString() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":"+getAppointmentId() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"+getPatientNric() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":"+getPatientName() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":"+getDoctorNric() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"tanweili"},"content":"+getDoctorName() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"tanweili"},"content":"+getAppointmentDate() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"tanweili"},"content":"+getAppointmentDetails() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"tanweili"},"content":"@enduml","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"tanweili":24}},{"path":"docs/diagrams/CommandClassUML.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"hide circle","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":"abstract class Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"wraineflores"},"content":"    +parameterArray: String[]","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":"    +Command(parameterArray: String[])","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"    +{abstract} execute(list: List) : Status","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"wraineflores"},"content":"Command \u003c|-- AppointmentCommand","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"wraineflores"},"content":"class AppointmentCommand {","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"wraineflores"},"content":"    +parameterArray: String[]","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"wraineflores"},"content":"    +AppointmentCommand(parameterArray: String[])","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"wraineflores"},"content":"    +execute(appointmentList: List) : Status","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"wraineflores"},"content":"Command \u003c|--- DoctorCommand","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"wraineflores"},"content":"class DoctorCommand {","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"wraineflores"},"content":"    +parameterArray: String[]","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"wraineflores"},"content":"    +DoctorCommand(parameterArray: String[])","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"wraineflores"},"content":"    +execute(doctorList: List) : Status","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"wraineflores"},"content":"Command \u003c|--- PatientCommand","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"wraineflores"},"content":"class PatientCommand {","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"wraineflores"},"content":"    +parameterArray: String[]","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"wraineflores"},"content":"    +PatientCommand(parameterArray: String[])","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"wraineflores"},"content":"    +execute(patientList: List) : Status","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"wraineflores"},"content":"Command \u003c|-- MedicineCommand","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"wraineflores"},"content":"class MedicineCommand {","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"wraineflores"},"content":"    +parameterArray: String[]","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"wraineflores"},"content":"    +MedicineCommand(parameterArray: String[])","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"wraineflores"},"content":"    +execute(medicineList: List) : Status","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"wraineflores"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"wraineflores":41}},{"path":"docs/diagrams/CommandUML.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"alt add patient","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"    Manager -\u003e Command: addPatient","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":"    Command -\u003e PatientList: add","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":"else delete patient","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"wraineflores"},"content":"    Manager -\u003e Command: deletePatient","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":"    Command -\u003e PatientList: removePatient","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"else view patient","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"    Manager -\u003e Command: viewPatient","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"wraineflores"},"content":"    Command -\u003e PatientList: viewPatient","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"wraineflores"},"content":"else add doctor","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"wraineflores"},"content":"    Manager -\u003e Command: addDoctor","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"wraineflores"},"content":"    Command -\u003e DoctorList: add","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"wraineflores"},"content":"else delete doctor","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"wraineflores"},"content":"    Manager -\u003e Command: deleteDoctor","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"wraineflores"},"content":"    Command -\u003e DoctorList: removeDoctor","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"wraineflores"},"content":"else view doctor","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"wraineflores"},"content":"    Manager -\u003e Command: viewDoctor","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"wraineflores"},"content":"    Command -\u003e DoctorList: viewDoctor","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"wraineflores"},"content":"else add medicine","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"wraineflores"},"content":"    Manager -\u003e Command: addMedicine","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"wraineflores"},"content":"    Command -\u003e MedicineList: add","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"wraineflores"},"content":"else delete medicine","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"wraineflores"},"content":"    Manager -\u003e Command: deleteMedicine","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"wraineflores"},"content":"    Command -\u003e MedicineList: delete","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"wraineflores"},"content":"else view medicine","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"wraineflores"},"content":"    Manager -\u003e Command: viewMedicine","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"wraineflores"},"content":"    Command -\u003e MedicineList: viewMedicine","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"wraineflores"},"content":"end","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"wraineflores"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"wraineflores":32}},{"path":"docs/diagrams/Doctor.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Anvitha-r"},"content":"@startuml","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"hide circle","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"Anvitha-r"},"content":"class Doctor {","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"Anvitha-r"},"content":"-specialization : String","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"Anvitha-r"},"content":"+Doctor(nric,  fullName,age,  gender,  address, dob, specialization) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"Anvitha-r"},"content":"+getSpecialization() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"Anvitha-r"},"content":"+edit(fullName, age, address, gender, dob, specialization) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"Anvitha-r"},"content":"+saveString() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"Anvitha-r"},"content":"+toString() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"Anvitha-r"},"content":"}","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"Anvitha-r"},"content":"@enduml","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"tanweili":2,"Anvitha-r":11}},{"path":"docs/diagrams/DoctorList.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Anvitha-r"},"content":"@startuml","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"Anvitha-r"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"hide circle","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"Anvitha-r"},"content":"class DoctorList {","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"Anvitha-r"},"content":"-doctors : Arraylist\u003cDoctor\u003e \u003d null","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"Anvitha-r"},"content":"-returnedFinderArray : Arraylist\u003cDoctor\u003e \u003d null","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"Anvitha-r"},"content":"+getDoctor(String) : Doctor","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"Anvitha-r"},"content":"+search()(String) : Doctor","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"Anvitha-r"},"content":"+add(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"Anvitha-r"},"content":"+view() : void","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"Anvitha-r"},"content":"+view(String) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"Anvitha-r"},"content":"+edit(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"Anvitha-r"},"content":"+getSize() : int","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"Anvitha-r"},"content":"+remove(String) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"Anvitha-r"},"content":"+toString() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"Anvitha-r"},"content":"+getList() : Arraylist\u003cdoctor\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"Anvitha-r"},"content":"+findByNric(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"Anvitha-r"},"content":"+findByName(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"Anvitha-r"},"content":"+findByAge(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"Anvitha-r"},"content":"+findByGender(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"Anvitha-r"},"content":"+findByAddress(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"Anvitha-r"},"content":"+findByDob(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"Anvitha-r"},"content":"+findBySpecialization(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"Anvitha-r"},"content":"+createArrayOfFoundDoctors() : void","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"Anvitha-r"},"content":"}","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"Anvitha-r"},"content":"@enduml","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"tanweili":2,"Anvitha-r":26}},{"path":"docs/diagrams/ExceptionClass.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"@startuml","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"hide circle","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"class HalpmiException {","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"    +HalpmiException(String)","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"    +toString() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"}","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"class DuplicateEntryException {","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"    +DuplicateEntryException(String)","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"    +toString() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"kktai1512"},"content":" }","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"kktai1512"},"content":"class NotFoundException {","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"kktai1512"},"content":"    +DuplicateEntryException(String)","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"kktai1512"},"content":"    +toString() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"kktai1512"},"content":"}","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"kktai1512"},"content":"DuplicateEntryException --|\u003e Exception","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"kktai1512"},"content":"HalpmiException --|\u003e Exception","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"kktai1512"},"content":"NotFoundException --|\u003e Exception","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"kktai1512"},"content":"@enduml","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"tanweili":2,"kktai1512":19}},{"path":"docs/diagrams/ManagerClass.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"@startuml","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"hide circle","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"class Manager {","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":"+ ui: UI \u003d new UI","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":"- isTerminated: boolean \u003d false","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"wraineflores"},"content":"- storage: Storage \u003d new Storage","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":"+ runLoop() : void","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"- executeCommand(commandWord: String, parameters: String) : Status","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"wraineflores"},"content":"@enduml","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"tanweili":2,"wraineflores":12}},{"path":"docs/diagrams/ManagerUML.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"Duke -\u003e Manager: runLoop","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"loop Not isTerminated","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":"    alt add patient","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":"        Manager -\u003e Command: addPatient","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"wraineflores"},"content":"    else delete patient","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":"        Manager -\u003e Command: deletePatient","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"    else view patient","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"            Manager -\u003e Command: viewPatient","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"wraineflores"},"content":"    else add doctor","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"wraineflores"},"content":"            Manager -\u003e Command: addDoctor","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"wraineflores"},"content":"    else delete doctor","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"wraineflores"},"content":"            Manager -\u003e Command: deleteDoctor","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"wraineflores"},"content":"    else view doctor","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"wraineflores"},"content":"        Manager -\u003e Command: viewDoctor","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"wraineflores"},"content":"    else add medicine","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"wraineflores"},"content":"        Manager -\u003e Command: addMedicine","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"wraineflores"},"content":"    else delete medicine","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"wraineflores"},"content":"        Manager -\u003e Command: deleteMedicine","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"wraineflores"},"content":"    else view medicine","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"wraineflores"},"content":"        Manager -\u003e Command: viewMedicine","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"wraineflores"},"content":"    else help","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"wraineflores"},"content":"        Manager -\u003e UI: printHelp","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"wraineflores"},"content":"    else bye","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"wraineflores"},"content":"        Manager -\u003e UI: printBye","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"wraineflores"},"content":"    else DEFAULT","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"wraineflores"},"content":"        Manager -\u003e UI: readCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"wraineflores"},"content":"    end","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"wraineflores"},"content":"end","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"wraineflores"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"wraineflores":32}},{"path":"docs/diagrams/MedicineListUML.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"@startuml","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"hide circle","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"class MedicineList {","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"-medicines : Arraylist\u003cMedicine\u003e \u003d null","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"-expiredMedicines : Arraylist\u003cMedicine\u003e \u003d null","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"-returnedFinderArray : Arraylist\u003cMedicine\u003e \u003d null","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":"+getSize() : int","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":"+getMedicine(String) : Medicine","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"+search(String) : Medicine","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":"+add(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":"+find(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"tanweili"},"content":"+getMedicineInfo(Medicine) : String","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":"+view(String) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":"+view() : void","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"+remove(String) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":"+edit(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":"+viewExpired() : void","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"tanweili"},"content":"+updateStock() : void","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"tanweili"},"content":"+clearStock() : void","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"tanweili"},"content":"+findById(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"tanweili"},"content":"+findByDosage(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"tanweili"},"content":"+findByExpiry(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"tanweili"},"content":"+findBySideEffects(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"tanweili"},"content":"+findByQuantity(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"tanweili"},"content":"+findByName(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"tanweili"},"content":"+createArrayOfFoundMedicines() : void","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"tanweili"},"content":"@enduml","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"tanweili":30}},{"path":"docs/diagrams/MedicineUML.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"@startuml","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"hide circle","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"class Medicine {","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"-medicineId : String","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"-medicineName : String","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"-dosage : int","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":"-expiry : String","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":"-sideEffects : String","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"-quantity : int","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":"+Medicine(medicineId, medicineName, dosage, expiry,sideEffects, quantity) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":"+edit(medicineName, dosage, expiry, sideEffects, quantity) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"tanweili"},"content":"+saveString() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":"+getMedicineId() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":"+getMedicineName() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"+getDosage() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":"+getExpiry() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":"+getSideEffects() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"tanweili"},"content":"+getQuantiy() : int","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"tanweili"},"content":"@enduml","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"tanweili":22}},{"path":"docs/diagrams/ParserClassUML.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"@startuml","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"hide circle","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"class Parser {","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"-isNull (String): boolean","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"-minParameterCheck(String, int): String []","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"+commandParser(String): String[]","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"+parseAddAppointment(String): Command","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"+parseAddDoctor(String): Command","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"+parseAddMedicine (String): Command","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"kktai1512"},"content":"+parseAddPatient (String): Command","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"+parseClearExpiredMedicine(String): Command","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"kktai1512"},"content":"+parseDeleteAppointment(String): Command","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"kktai1512"},"content":"+parseDeleteDoctor (String): Command","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"kktai1512"},"content":"+parseDeleteMedicine (String): Command","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"kktai1512"},"content":"+parseDeletePatient(String): Command","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"kktai1512"},"content":"+parseEditAppointment(String): Command","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"kktai1512"},"content":"+parseEditDoctor (String): Command","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"kktai1512"},"content":"+parseEditMedicine (String): Command","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"kktai1512"},"content":"+parseEditPatient (String): Command","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"kktai1512"},"content":"+parseFindAppointment(String): Command","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"kktai1512"},"content":"+parseFindDoctor (String): Command","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"kktai1512"},"content":"+parseFindMedicine (String): Command","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"kktai1512"},"content":"+parseFindPatient (String): Command","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"kktai1512"},"content":"+parseUpdateMedicineStock(String): Command","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"kktai1512"},"content":"+parseViewAppointment(String): Command","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"kktai1512"},"content":"+parseViewDoctor (String): Command","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"kktai1512"},"content":"+parseViewMedicine(String): Command","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"kktai1512"},"content":"+parseViewPatient(String): Command","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"kktai1512"},"content":"}","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"kktai1512"},"content":"@enduml","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"tanweili":2,"kktai1512":30}},{"path":"docs/diagrams/ParserUML.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"@startuml","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"!include style.puml","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"autonumber","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"box   LOGIC_COLOR_T1","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"participant \":Parser\" as Parser LOGIC_COLOR_T2","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"participant \":Validator\" as Validator LOGIC_COLOR_T2","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"participant \":Command\" as Command LOGIC_COLOR_T2","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"Parser -\u003e Parser: minCheckParameters","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"kktai1512"},"content":"Parser -\u003e Validator: validate[CommandName]","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"alt LOGIC_COLOR_T2","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"kktai1512"},"content":"Validator -\u003e Parser","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"kktai1512"},"content":"else LOGIC_COLOR_T2","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"kktai1512"},"content":"Validator -\u003e Parser : HalpmiException","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"kktai1512"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"kktai1512"},"content":"Parser -\u003e Command: Command()","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"kktai1512"},"content":"end box","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"kktai1512"},"content":"@enduml","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"kktai1512":22}},{"path":"docs/diagrams/Patient.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Anvitha-r"},"content":"@startuml","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"hide circle","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"Anvitha-r"},"content":"class Patient {","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"Anvitha-r"},"content":"-dateAdmission : String","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"Anvitha-r"},"content":"+Patient(nric, fullName, age, gender, address, dob, dateAdmission) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"Anvitha-r"},"content":"+getDateAdmission() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"Anvitha-r"},"content":"+edit(fullName, age, address, gender, dob, dateAdmission) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"Anvitha-r"},"content":"+getPatientNric() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"Anvitha-r"},"content":"+getPatientName() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"Anvitha-r"},"content":"+getPatientAge() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"Anvitha-r"},"content":"+getPatientGender() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"Anvitha-r"},"content":"+getPatientAddress() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"Anvitha-r"},"content":"+getPatientDob() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"Anvitha-r"},"content":"+getDateOfAdmission() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"Anvitha-r"},"content":"+saveString() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"Anvitha-r"},"content":"}","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"Anvitha-r"},"content":"@enduml","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"tanweili":2,"Anvitha-r":17}},{"path":"docs/diagrams/PatientList.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Anvitha-r"},"content":"@startuml","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"hide circle","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"Anvitha-r"},"content":"class PatientList {","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"Anvitha-r"},"content":"-patients : Arraylist\u003cPatient\u003e \u003d null","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"Anvitha-r"},"content":"-returnedFinderArray : Arraylist\u003cPatient\u003e \u003d null","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"Anvitha-r"},"content":"+getPatient(String) : Patient","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"Anvitha-r"},"content":"+search()(String) : Patient","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"Anvitha-r"},"content":"+add(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"+getPatientInfo(Patient) : String","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"Anvitha-r"},"content":"+getSize() : int","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"Anvitha-r"},"content":"+view() : void","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"Anvitha-r"},"content":"+view(String) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"Anvitha-r"},"content":"+edit(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"Anvitha-r"},"content":"+remove(String) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"Anvitha-r"},"content":"+getList() : Arraylist\u003cdoctor\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"Anvitha-r"},"content":"+toString() : String","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"Anvitha-r"},"content":"+findByNric(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"Anvitha-r"},"content":"+findByName(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"Anvitha-r"},"content":"+findByAge(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"Anvitha-r"},"content":"+findByGender(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"Anvitha-r"},"content":"+findByAddress(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"Anvitha-r"},"content":"+findByDob(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"Anvitha-r"},"content":"+findByDateAdmission(String[]) : void","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"Anvitha-r"},"content":"+createArrayOfFoundPatients() : void","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"Anvitha-r"},"content":"}","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"Anvitha-r"},"content":"@enduml","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"tanweili":3,"Anvitha-r":25}},{"path":"docs/diagrams/SequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"@startuml","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"actor User as User","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"User -\u003e Duke : Launches App","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"activate Duke","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"Duke -\u003e Manager : Manager()","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"activate Manager","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"Manager -\u003e UI: UI()","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"activate UI","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"UI --\u003e Manager","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"deactivate UI","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"Manager -\u003e Storage : Storage()","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"activate Storage","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"collections Assets as Assets","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"Storage -\u003e Assets: Initialise Asset Objects","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"activate Assets","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"Assets --\u003e Storage","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"deactivate Assets","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"Storage -\u003e Storage : loadData()","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"activate Storage","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"Storage -\u003e Assets: add()","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"activate Assets","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"Assets --\u003e Storage","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"deactivate Assets","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"shxr3f"},"content":"Storage --\u003e Storage:","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"shxr3f"},"content":"deactivate Storage","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"shxr3f"},"content":"Storage --\u003e Manager:","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"shxr3f"},"content":"deactivate Storage","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"shxr3f"},"content":"deactivate Manager","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"shxr3f"},"content":"Duke -\u003e Manager: runLoop()","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"shxr3f"},"content":"activate Manager","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"shxr3f"},"content":"loop until bye command","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"shxr3f"},"content":"    Manager -\u003e UI: readCommand()","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"shxr3f"},"content":"    activate UI","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"shxr3f"},"content":"    UI -\u003e User: Reads User Input","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"shxr3f"},"content":"    UI --\u003e Manager: UserInput","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"shxr3f"},"content":"    deactivate UI","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"shxr3f"},"content":"    Manager -\u003e UI: readParameters()","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"shxr3f"},"content":"    activate UI","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"shxr3f"},"content":"    UI -\u003e User: Reads User Input","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"shxr3f"},"content":"    UI --\u003e Manager: UserInput","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"shxr3f"},"content":"    deactivate UI","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"shxr3f"},"content":"    Manager -\u003e Parser: parseCommand()","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"shxr3f"},"content":"    activate Parser","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"shxr3f"},"content":"    Parser -\u003e Validator: validateParameters()","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"shxr3f"},"content":"    activate Validator","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"shxr3f"},"content":"    Validator --\u003e Parser","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"shxr3f"},"content":"    deactivate Validator","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"shxr3f"},"content":"    opt Parameters are Valid","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"shxr3f"},"content":"        Parser -\u003e Command: command()","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"shxr3f"},"content":"        activate Command","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"shxr3f"},"content":"        Command --\u003e Parser","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"shxr3f"},"content":"        deactivate Command","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"shxr3f"},"content":"        Parser --\u003e Manager: :Command","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"shxr3f"},"content":"    end","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"shxr3f"},"content":"    deactivate Parser","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"shxr3f"},"content":"    Manager -\u003e Command: execute()","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"shxr3f"},"content":"    activate Command","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"shxr3f"},"content":"    Command -\u003e Storage: Access Assets","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"shxr3f"},"content":"    activate Storage","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"shxr3f"},"content":"    Storage -\u003e Assets : edit Assets","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"shxr3f"},"content":"    activate Assets","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"shxr3f"},"content":"    Assets --\u003e Storage","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"shxr3f"},"content":"    deactivate Assets","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"shxr3f"},"content":"    Storage --\u003e Command","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"shxr3f"},"content":"    deactivate Storage","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"shxr3f"},"content":"    Command -\u003e Status: Status()","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"shxr3f"},"content":"    activate Status","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"shxr3f"},"content":"    Status --\u003e Command","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"shxr3f"},"content":"    deactivate Status","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"shxr3f"},"content":"    Command --\u003e Manager: :Status","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"shxr3f"},"content":"    deactivate Command","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"shxr3f"},"content":"    Manager -\u003e UI: print(:Status)","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"shxr3f"},"content":"    activate UI","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"shxr3f"},"content":"    UI -\u003e Status : Get the Status","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"shxr3f"},"content":"    activate Status","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"shxr3f"},"content":"    Status --\u003e UI","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"shxr3f"},"content":"    deactivate Status","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"shxr3f"},"content":"    UI --\u003e Manager","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"shxr3f"},"content":"    deactivate UI","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"shxr3f"},"content":"    destroy Status","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"shxr3f"},"content":"    destroy Command","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"shxr3f"},"content":"    Manager -\u003e Storage: saveData()","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"shxr3f"},"content":"    activate Storage","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"shxr3f"},"content":"    Storage -\u003e Assets: Retrieve Data from Asset Objects","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"shxr3f"},"content":"    activate Assets","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"shxr3f"},"content":"    Assets --\u003e Storage: Data in CSV format","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"shxr3f"},"content":"    deactivate Assets","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"shxr3f"},"content":"    Storage --\u003e Manager","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"shxr3f"},"content":"    deactivate Storage","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"shxr3f"},"content":"end","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"shxr3f"},"content":"Manager --\u003e Duke","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"shxr3f"},"content":"deactivate Manager","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"shxr3f"},"content":"destroy Assets","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"shxr3f"},"content":"destroy Storage","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"shxr3f"},"content":"destroy UI","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"shxr3f"},"content":"destroy Parser","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"shxr3f"},"content":"destroy Validator","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"shxr3f"},"content":"destroy Manager","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"shxr3f"},"content":"deactivate Duke","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"shxr3f"},"content":"destroy Duke","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"shxr3f"},"content":"@enduml","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"shxr3f":111}},{"path":"docs/diagrams/StorageClassUML.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"@startuml","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"hide circle","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"abstract List","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"class PatientList","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"class DoctorList","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"class MedicineList","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"class AppointmentList","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"List \u003c|-- PatientList","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"List \u003c|-- DoctorList","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"List \u003c|-- MedicineList","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"List \u003c|-- AppointmentList","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"class Storage {","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"    String DIR","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"    String PATH_DOC","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"    String PATH_PAT","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"    String PATH_MED","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"    String PATH_APP","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"    + Storage()","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"    + saveData()","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"    + loadData()","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"    - loadMedicineData()","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"    - loadPatientData()","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"    - loadDoctorData()","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"    - saveMedicineData()","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"    - savePatientData()","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"    - saveDoctorData()","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"    - saveAppointmentData()","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"shxr3f"},"content":"Storage --\u003e \"1\" PatientList","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"shxr3f"},"content":"Storage --\u003e \"1\" AppointmentList","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"shxr3f"},"content":"Storage --\u003e \"1\" DoctorList","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"shxr3f"},"content":"Storage --\u003e \"1\" MedicineList","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"shxr3f"},"content":"@enduml","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"tanweili":2,"shxr3f":36}},{"path":"docs/diagrams/Style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":"!define LOGIC_COLOR_T1 #7777DB","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":"!define LOGIC_COLOR_T2 #5252CE","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"wraineflores":5}},{"path":"docs/diagrams/UIClass.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"@startuml","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"hide circle","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"class UI {","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"-userInput: String","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":"-patients: ArrayList\u003cPatients\u003e \u003d new ArrayList\u003c\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":"-reader: Scanner \u003d new Scanner","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"wraineflores"},"content":"-parser: Parser \u003d new Parser","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":"-readInput() : void","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"+readCommand() : String","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"+readParameters() : String","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"wraineflores"},"content":"+printStatus(status: Status) : void","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"wraineflores"},"content":"@enduml","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"tanweili":2,"wraineflores":13}},{"path":"docs/diagrams/ValidatorClassUML.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"@startuml","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"hide circle","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"class Validator {","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"+validateAddAppointment(String[]): void","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"+validateEditAppointment(String[]): void","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"+validateFindAppointment(String[]): void","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"+validateFindDoctor(String[]): void","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"+validateFindMedicine(String[]): void","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"+validateFindPatient (String[]): void","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"+validateMedicine (String[]): void","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"kktai1512"},"content":"+validateNric (String): void","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"+validateAddDoctor (String[]): void","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"kktai1512"},"content":"+validateAddPatient(String[]): void","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"kktai1512"},"content":"-validateAddPerson(String[]): void","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"kktai1512"},"content":"-validateAddress (String): void","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"kktai1512"},"content":"-validateAdmissionDate(String): void","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"kktai1512"},"content":"-validateAge (String): void","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"kktai1512"},"content":"-validateAppointmentDetails(String): void","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"kktai1512"},"content":"-validateDate (String): boolean","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"kktai1512"},"content":"-validateDate (String, String): void","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"kktai1512"},"content":"-validateDob (String): void","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"kktai1512"},"content":"-validateDosage(String): boolean","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"kktai1512"},"content":"-validateExpiry(String): boolean","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"kktai1512"},"content":"-validateFullName(String): void","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"kktai1512"},"content":"-validateGender (String): void","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"kktai1512"},"content":"-validateMedicineld (String): void","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"kktai1512"},"content":"-validateMedicineName(String): boolean","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"kktai1512"},"content":"-validateMedicineSideEffects(String): void","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"kktai1512"},"content":"-validateQuantity(String): boolean","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"kktai1512"},"content":"-validateSpecialization(String): void","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"kktai1512"},"content":"}","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"kktai1512"},"content":"@enduml","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"tanweili":2,"kktai1512":31}},{"path":"docs/diagrams/ValidatorUML.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"@startuml","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"!include style.puml","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"box   LOGIC_COLOR_T1","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"participant \":Validator\" as Validator LOGIC_COLOR_T2","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"end box","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"[-\u003e Validator : validateAddPatient(parameters)","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"activate Validator","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"Validator -\u003e Validator : validateNric(parameters[0])","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"kktai1512"},"content":"Validator -\u003e Validator : validateFullName(parameters[1]);","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"Validator -\u003e Validator : validateAge(parameters[2]);","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"kktai1512"},"content":"Validator -\u003e Validator : validateGender(parameters[3]);","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"kktai1512"},"content":"Validator -\u003e Validator : validateAddress(parameters[4]);","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"kktai1512"},"content":"Validator -\u003e Validator : validateDob(parameters[5]);","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"kktai1512"},"content":"Validator -\u003e Validator : validateDoa((parameters[6]);","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"kktai1512"},"content":"alt LOGIC_COLOR_T2","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"kktai1512"},"content":"\u003c- Validator : void","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"kktai1512"},"content":"else","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"kktai1512"},"content":"\u003c- Validator: HalpmiException","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"kktai1512"},"content":"end","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"kktai1512"},"content":"deactivate Validator","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"kktai1512"},"content":"@enduml","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"kktai1512":28}},{"path":"docs/team/Anvitha-r.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"# Anvitha R - Project Portfolio Page (PPP)","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":"## Overview","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"HALPMI is a Command Line Interface (CLI) Application that allows administrators in clinics to manage the clinic\u0027s day-to-day","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"administrative tasks. More specifically, using HALPMI the user is able to insert new information regarding Doctors, Patients","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":"and Medication. Users can also schedule appointment for Patients with Doctors and keep track of medication stocks.","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":"## Summary of Contributions","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":"**Code contributed:** [RepoSense link](https://nus-cs2113-ay2122s2.github.io/tp-dashboard/?search\u003dAnvitha\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18)","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"**Enhancement implemented:**","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"wraineflores"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"wraineflores"},"content":"**UG contributions:**","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"wraineflores"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"wraineflores"},"content":"**DG contributions:**","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"wraineflores"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"wraineflores"},"content":"**Team-based tasks contributions:**","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"wraineflores":17}},{"path":"docs/team/kktai1512.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"# Mohamed Sharif - Project Portfolio Page (PPP)","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":"## Overview","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"HALPMI is a Command Line Interface (CLI) Application that allows administrators in clinics to manage the clinic\u0027s day-to-day","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"administrative tasks. More specifically, using HALPMI the user is able to insert new information regarding Doctors, Patients","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":"and Medication. Users can also schedule appointment for Patients with Doctors and keep track of medication stocks.","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":"## Summary of Contributions","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":"**Code contributed:** [RepoSense link](https://nus-cs2113-ay2122s2.github.io/tp-dashboard/?search\u003dkktai1512\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18)","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"**Enhancement implemented:**","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"wraineflores"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"wraineflores"},"content":"**UG contributions:**","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"wraineflores"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"wraineflores"},"content":"**DG contributions:**","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"wraineflores"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"wraineflores"},"content":"**Team-based tasks contributions:**","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"wraineflores":17}},{"path":"docs/team/shxr3f.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"# Project Portfolio Page - Mohamed Sharif","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"____________________________________________________________","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"## Code Contributions","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"| Contribution                            | Description                                                                                                                                                                                                                                                 |","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"|-----------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"| Add Medicine                            | Feature that allows user to add medicines into the application.                                                                                                                                                                                             |","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"| View Medicine                           | Feature that allows user to view all medicines in the list.                                                                                                                                                                                                 |","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"| Edit Medicine                           | Feature that allows user to edit existing medicines                                                                                                                                                                                                         |","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"| Update Medicine                         | Feature that allows user to update medicine inventory to check for expired medicines as well as medicine that have run out.                                                                                                                                 |","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"| Assign Medicine                         | Feature that allows user to assign medications to patients who have appointments on that day. The user can request for certain medicines to be dispensed to the patient. HalpMi will show the list of medicines to dispense with the batch id and quantity. |","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"| Storage Class                           | Implemented storage class that holds all data (Patient, Doctor, Medicines, Appointments). Holds methods that load data from and save data to CSV files.                                                                                                     |","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"| Refactoring Command Class               | Initially our command class had static methods and was not showing good implementation of OOP principles. Hence I refactored the code to include abstract command class and various children classes for different commands available.                      |","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"| Other code corrections and improvements | Along the way there were various bugs and issues found with code that I have helped to correct as well.                                                                                                                                                     |","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"| JUnit Code                              | Contributed significantly to JUnit code for many methods that I was involved in creating.                                                                                                                                                                   |","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"For detailed look at code contribution: [TP Code Dashboard](https://nus-cs2113-ay2122s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dshxr3f\u0026tabRepo\u003dAY2122S2-CS2113T-T09-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"____________________________________________________________","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"## Other Contributions","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"### **User Guide**","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"Contributed to User Guide by setting up clear formatting in the initial iteration of drafting the UG. In the following","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"iterations, contributed by adding in the details of the various features implemented in HalpMi.","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"### **Developer Guide**","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"Contributed to Dev Guide by setting up the format in the early iterations of the Developer Guide.","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"Created the overall Sequence Diagram to show overall flow of logic. Also created a high-level design model of HalpMi.","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"shxr3f"},"content":"Explained the usage and logic of the Storage Class and its methods with reference to Class Diagrams and Sequence Diagrams.","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"shxr3f"},"content":"Explained on the implementation of features such as \"Update Medicine\" and \"Assign Medicine\" in the guide as well.","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"shxr3f"},"content":"____________________________________________________________","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"shxr3f"},"content":"## Learning Outcomes","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"shxr3f"},"content":"Through this project I was better able to appreciate the various tools such as IDEs, Gradle and Git that are available to","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"shxr3f"},"content":"Software Engineers. The module gave insights on how these tools can help makes one\u0027s life easier especially when working on","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"shxr3f"},"content":"a single product as a team. The project has also allowed me to learn key OOP principles and how good usage of OOP can lead","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"shxr3f"},"content":"to a cohesive and less coupled app. This would make the code a joy to read for other developers and oneself alike.","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"shxr3f"},"content":"In conclusion, this module has been an eye-opener into the world of software engineering and through this project and my","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"shxr3f"},"content":"contributions I was able to gain much knowledge that would really come handy in the workforce!","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"shxr3f":43}},{"path":"docs/team/tanweili.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"# Tan Wei Li - Project Portfolio Page","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"## Overview","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"HALPMI is a Command Line Interface (CLI) Application that allows administrators in clinics to manage the clinic\u0027s day-to-day","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"administrative tasks. More specifically, using HALPMI the user is able to insert new information regarding Doctors, Patients","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"and Medication. Users can also schedule appointment for Patients with Doctors and keep track of medication stocks.","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"## Summary of Contributions","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":"**Code contributed:** [RepoSense link](https://nus-cs2113-ay2122s2.github.io/tp-dashboard/?search\u003dtanweili\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse)","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":"**Enhancements implemented:**","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"tanweili"},"content":"**UG contributions:**","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":"**DG contributions:**","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":"**Team-based tasks contributions:**","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"tanweili":17}},{"path":"docs/team/wraineflores.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"# Wraine Flores - Project Portfolio Page (PPP)","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":"## Overview","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"HALPMI is a Command Line Interface (CLI) Application that allows administrators in clinics to manage the clinic\u0027s day-to-day","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"administrative tasks. More specifically, using HALPMI the user is able to insert new information regarding Doctors, Patients","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":"and Medication. Users can also schedule appointment for Patients with Doctors and keep track of medication stocks.","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":"## Summary of Contributions","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":"**Code contributed:** [RepoSense link](https://nus-cs2113-ay2122s2.github.io/tp-dashboard/?search\u003dwraineflores\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18)","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"**Enhancement implemented:**","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"wraineflores"},"content":"* Finding features of HalpMi","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"wraineflores"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"wraineflores"},"content":"**UG contributions:**","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"wraineflores"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"wraineflores"},"content":"**DG contributions:**","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"wraineflores"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"wraineflores"},"content":"**Team-based tasks contributions:**","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"wraineflores":18}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":"        assert true : \"dummy assertion set to pass\";","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"        Manager manager \u003d new Manager();","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"        manager.runLoop();","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"wraineflores":1,"Anvitha-r":1,"-":9,"shxr3f":2,"kktai1512":1}},{"path":"src/main/java/seedu/duke/Manager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Anvitha-r"},"content":"package seedu.duke;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.DuplicateEntryException;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.exception.HalpmiException;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.exception.UserInputErrorException;","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.NotFoundException;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.helper.Parser;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.helper.Storage;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.helper.UI;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"import seedu.duke.helper.command.Command;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":" * Manager class contains the main loop that runs until application is terminated.","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"Anvitha-r"},"content":"public class Manager {","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"    UI ui \u003d new UI();","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"    private boolean isTerminated \u003d false;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"Anvitha-r"},"content":"    private final Storage storage \u003d new Storage();","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"     * Main application loop that holds switch case statement.","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"    public void runLoop() {","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"Anvitha-r"},"content":"        ui.printLogo();","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"        ui.printGreeting();","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"        while (!isTerminated) {","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"Anvitha-r"},"content":"            UI.printPrompt();","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"wraineflores"},"content":"            String commandWord \u003d ui.readCommand();","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"tanweili"},"content":"            String parameters \u003d ui.readParameters();","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"shxr3f"},"content":"            Status status \u003d null;","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"shxr3f"},"content":"            try {","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"shxr3f"},"content":"                status \u003d executeCommand(commandWord, parameters);","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"shxr3f"},"content":"                ui.print(status);","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"kktai1512"},"content":"            } catch (HalpmiException e) {","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"Anvitha-r"},"content":"                UI.printParagraph(e.toString());","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"shxr3f"},"content":"            storage.saveData();","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"shxr3f"},"content":"     * Method that initialises the relevant Command object and executes the execute method.","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"shxr3f"},"content":"     * Upon execution, returns either a success message or throws exception.","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"shxr3f"},"content":"     * @ param commandWord a String that holds the initial command given by User","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"shxr3f"},"content":"     * @ param parameters a String that holds all the additional parameters given following the Command","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"shxr3f"},"content":"     * @ return Status object - enum that holds various success messages","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"shxr3f"},"content":"     * @ throws HalpmiException when the commandWord or parameters is not following correct formatting","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"shxr3f"},"content":"     * @ throws DuplicateEntryException when duplicate entries are being added through the Command","lastModifiedDate":"2022-04-09"},{"lineNumber":51,"author":{"gitId":"shxr3f"},"content":"     * @ throws NotFoundException when certain data was not found","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":53,"author":{"gitId":"shxr3f"},"content":"    private Status executeCommand(String commandWord, String parameters) throws HalpmiException, NotFoundException,","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"shxr3f"},"content":"            DuplicateEntryException {","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":56,"author":{"gitId":"shxr3f"},"content":"        Command command;","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"shxr3f"},"content":"        Status status \u003d null;","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"shxr3f"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"tanweili"},"content":"        case \"add patient\":","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"shxr3f"},"content":"            command \u003d Parser.parseAddPatient(parameters);","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"shxr3f"},"content":"            status \u003d command.execute(storage.patients);","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"tanweili"},"content":"            break;","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"tanweili"},"content":"        case \"delete patient\":","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"shxr3f"},"content":"            command \u003d Parser.parseDeletePatient(parameters);","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"shxr3f"},"content":"            status \u003d command.execute(storage.patients);","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"tanweili"},"content":"            break;","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"tanweili"},"content":"        case \"view patient\":","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"shxr3f"},"content":"            command \u003d Parser.parseViewPatient(parameters);","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"shxr3f"},"content":"            status \u003d command.execute(storage.patients);","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"tanweili"},"content":"            break;","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"Anvitha-r"},"content":"        case \"edit patient\":","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"Anvitha-r"},"content":"            command \u003d Parser.parseEditPatient(parameters);","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"Anvitha-r"},"content":"            status \u003d command.execute(storage.patients);","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"Anvitha-r"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"tanweili"},"content":"        case \"add doctor\":","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"shxr3f"},"content":"            command \u003d Parser.parseAddDoctor(parameters);","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"shxr3f"},"content":"            status \u003d command.execute(storage.doctors);","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"tanweili"},"content":"            break;","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"tanweili"},"content":"        case \"delete doctor\":","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"shxr3f"},"content":"            command \u003d Parser.parseDeleteDoctor(parameters);","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"shxr3f"},"content":"            status \u003d command.execute(storage.doctors);","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"tanweili"},"content":"            break;","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"tanweili"},"content":"        case \"view doctor\":","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"shxr3f"},"content":"            command \u003d Parser.parseViewDoctor(parameters);","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"shxr3f"},"content":"            status \u003d command.execute(storage.doctors);","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"tanweili"},"content":"            break;","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"Anvitha-r"},"content":"        case \"edit doctor\":","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"Anvitha-r"},"content":"            command \u003d Parser.parseEditDoctor(parameters);","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"Anvitha-r"},"content":"            status \u003d command.execute(storage.doctors);","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"Anvitha-r"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"tanweili"},"content":"        case \"add medicine\":","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"shxr3f"},"content":"            command \u003d Parser.parseAddMedicine(parameters);","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"shxr3f"},"content":"            status \u003d command.execute(storage.medicines);","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"tanweili"},"content":"            break;","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"tanweili"},"content":"        case \"delete medicine\":","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"shxr3f"},"content":"            command \u003d Parser.parseDeleteMedicine(parameters);","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"shxr3f"},"content":"            status \u003d command.execute(storage.medicines);","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"tanweili"},"content":"            break;","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"tanweili"},"content":"        case \"view medicine\":","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"shxr3f"},"content":"            command \u003d Parser.parseViewMedicine(parameters);","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"shxr3f"},"content":"            status \u003d command.execute(storage.medicines);","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"tanweili"},"content":"            break;","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"shxr3f"},"content":"        case \"edit medicine\":","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"shxr3f"},"content":"            command \u003d Parser.parseEditMedicine(parameters);","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"shxr3f"},"content":"            status \u003d command.execute(storage.medicines);","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"shxr3f"},"content":"            break;","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"shxr3f"},"content":"        case \"update medicines\":","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"shxr3f"},"content":"            command \u003d Parser.parseUpdateMedicineStock(parameters);","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"shxr3f"},"content":"            status \u003d command.execute(storage.medicines);","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"shxr3f"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"shxr3f"},"content":"        case \"clear old medicines\":","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"shxr3f"},"content":"            command \u003d Parser.parseClearExpiredMedicine(parameters);","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"shxr3f"},"content":"            status \u003d command.execute(storage.medicines);","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"shxr3f"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"tanweili"},"content":"        case \"add appointment\":","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"tanweili"},"content":"            Command checkIfPatientExists \u003d Parser.checkIfPatientExists(parameters);","lastModifiedDate":"2022-04-05"},{"lineNumber":117,"author":{"gitId":"tanweili"},"content":"            checkIfPatientExists.execute(storage.patients);","lastModifiedDate":"2022-04-05"},{"lineNumber":118,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":119,"author":{"gitId":"tanweili"},"content":"            Command checkIfDoctorExists \u003d Parser.checkIfDoctorExists(parameters);","lastModifiedDate":"2022-04-05"},{"lineNumber":120,"author":{"gitId":"tanweili"},"content":"            checkIfDoctorExists.execute(storage.doctors);","lastModifiedDate":"2022-04-05"},{"lineNumber":121,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":122,"author":{"gitId":"tanweili"},"content":"            command \u003d Parser.parseAddAppointment(parameters);","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"tanweili"},"content":"            status \u003d command.execute(storage.appointments);","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"tanweili"},"content":"            break;","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"tanweili"},"content":"        case \"view appointment\":","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"tanweili"},"content":"            command \u003d Parser.parseViewAppointment(parameters);","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"tanweili"},"content":"            status \u003d command.execute(storage.appointments);","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"tanweili"},"content":"            break;","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"tanweili"},"content":"        case \"find appointment\":","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"tanweili"},"content":"            command \u003d Parser.parseFindAppointment(parameters);","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"tanweili"},"content":"            status \u003d command.execute(storage.appointments);","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"tanweili"},"content":"            break;","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"tanweili"},"content":"        case \"delete appointment\":","lastModifiedDate":"2022-03-27"},{"lineNumber":134,"author":{"gitId":"tanweili"},"content":"            command \u003d Parser.parseDeleteAppointment(parameters);","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"tanweili"},"content":"            status \u003d command.execute(storage.appointments);","lastModifiedDate":"2022-03-27"},{"lineNumber":136,"author":{"gitId":"tanweili"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"shxr3f"},"content":"        case \"edit appointment\":","lastModifiedDate":"2022-03-28"},{"lineNumber":138,"author":{"gitId":"shxr3f"},"content":"            command \u003d Parser.parseEditAppointment(parameters);","lastModifiedDate":"2022-03-28"},{"lineNumber":139,"author":{"gitId":"shxr3f"},"content":"            status \u003d command.execute(storage.appointments);","lastModifiedDate":"2022-03-28"},{"lineNumber":140,"author":{"gitId":"shxr3f"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":141,"author":{"gitId":"wraineflores"},"content":"        case \"find doctor\":","lastModifiedDate":"2022-03-27"},{"lineNumber":142,"author":{"gitId":"wraineflores"},"content":"            command \u003d Parser.parseFindDoctor(parameters);","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"wraineflores"},"content":"            status \u003d command.execute(storage.doctors);","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"wraineflores"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"wraineflores"},"content":"        case \"find patient\":","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"wraineflores"},"content":"            command \u003d Parser.parseFindPatient(parameters);","lastModifiedDate":"2022-03-27"},{"lineNumber":147,"author":{"gitId":"wraineflores"},"content":"            status \u003d command.execute(storage.patients);","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"wraineflores"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":149,"author":{"gitId":"wraineflores"},"content":"        case \"find medicine\":","lastModifiedDate":"2022-03-27"},{"lineNumber":150,"author":{"gitId":"wraineflores"},"content":"            command \u003d Parser.parseFindMedicine(parameters);","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"wraineflores"},"content":"            status \u003d command.execute(storage.medicines);","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"wraineflores"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"shxr3f"},"content":"        case \"dispense medicine\":","lastModifiedDate":"2022-04-07"},{"lineNumber":154,"author":{"gitId":"shxr3f"},"content":"            command \u003d Parser.parseDispenseMedicine(parameters);","lastModifiedDate":"2022-04-07"},{"lineNumber":155,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":156,"author":{"gitId":"shxr3f"},"content":"            Command helperCommand \u003d Parser.parseCheckForPatientAppointment(parameters);","lastModifiedDate":"2022-04-07"},{"lineNumber":157,"author":{"gitId":"shxr3f"},"content":"            helperCommand.execute(storage.appointments);","lastModifiedDate":"2022-04-07"},{"lineNumber":158,"author":{"gitId":"shxr3f"},"content":"            helperCommand \u003d Parser.parseCheckMedicineStock(parameters);","lastModifiedDate":"2022-04-07"},{"lineNumber":159,"author":{"gitId":"shxr3f"},"content":"            helperCommand.execute(storage.medicines);","lastModifiedDate":"2022-04-07"},{"lineNumber":160,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":161,"author":{"gitId":"shxr3f"},"content":"            command.execute(storage.appointments);","lastModifiedDate":"2022-04-07"},{"lineNumber":162,"author":{"gitId":"shxr3f"},"content":"            status \u003d command.execute(storage.medicines);","lastModifiedDate":"2022-04-07"},{"lineNumber":163,"author":{"gitId":"shxr3f"},"content":"            break;","lastModifiedDate":"2022-04-07"},{"lineNumber":164,"author":{"gitId":"tanweili"},"content":"        case \"help\":","lastModifiedDate":"2022-03-10"},{"lineNumber":165,"author":{"gitId":"shxr3f"},"content":"            status \u003d Status.PRINT_HELP;","lastModifiedDate":"2022-03-24"},{"lineNumber":166,"author":{"gitId":"tanweili"},"content":"            break;","lastModifiedDate":"2022-03-10"},{"lineNumber":167,"author":{"gitId":"shxr3f"},"content":"        case \"bye\":","lastModifiedDate":"2022-03-09"},{"lineNumber":168,"author":{"gitId":"shxr3f"},"content":"            status \u003d Status.END_APP;","lastModifiedDate":"2022-03-24"},{"lineNumber":169,"author":{"gitId":"shxr3f"},"content":"            System.out.println(\"Terminated\");","lastModifiedDate":"2022-03-26"},{"lineNumber":170,"author":{"gitId":"shxr3f"},"content":"            isTerminated \u003d true;","lastModifiedDate":"2022-03-09"},{"lineNumber":171,"author":{"gitId":"shxr3f"},"content":"            break;","lastModifiedDate":"2022-03-09"},{"lineNumber":172,"author":{"gitId":"shxr3f"},"content":"        default:","lastModifiedDate":"2022-03-09"},{"lineNumber":173,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Invalid Command given!\");","lastModifiedDate":"2022-04-09"},{"lineNumber":174,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":175,"author":{"gitId":"shxr3f"},"content":"        return status;","lastModifiedDate":"2022-03-24"},{"lineNumber":176,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":177,"author":{"gitId":"Anvitha-r"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"tanweili":44,"wraineflores":14,"Anvitha-r":17,"shxr3f":98,"kktai1512":4}},{"path":"src/main/java/seedu/duke/assets/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package seedu.duke.assets;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"public class Appointment {","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"    protected String appointmentId;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"    protected String patientNric;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":"    protected String patientName;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":"    protected String doctorNric;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"    protected String doctorName;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":"    protected String appointmentDate;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":"    protected String appointmentDetails;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"    protected ArrayList\u003cString\u003e dispensedMedicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":"    public Appointment(String appointmentId, String patientNric, String patientName, String doctorNric,","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"                       String doctorName, String appointmentDate, String appointmentDetails) {","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":"        this.appointmentId \u003d appointmentId;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":"        this.patientName \u003d patientName;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"tanweili"},"content":"        this.patientNric \u003d patientNric;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"tanweili"},"content":"        this.doctorName \u003d doctorName;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"tanweili"},"content":"        this.doctorNric \u003d doctorNric;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"tanweili"},"content":"        this.appointmentDate \u003d appointmentDate;","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"tanweili"},"content":"        this.appointmentDetails \u003d appointmentDetails;","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"    public void addMedicine(String medicineName, String quantity) {","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"        dispensedMedicines.add(medicineName + \",\" + quantity);","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"tanweili"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"tanweili"},"content":"    public String toString() {","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"tanweili"},"content":"        return \"Patient: \" + patientName + \" (\" + patientNric + \")\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"tanweili"},"content":"                + \"Doctor: \" + doctorName + \" (\" + doctorNric + \")\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"tanweili"},"content":"                + \"Appointment date: \" + appointmentDate + \"\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"tanweili"},"content":"                + \"Appointment details: \" + appointmentDetails + \"\\n\";","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"tanweili"},"content":"    public String getAppointmentId() {","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"tanweili"},"content":"        return appointmentId;","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"tanweili"},"content":"    public String getPatientNric() {","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"tanweili"},"content":"        return patientNric;","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"tanweili"},"content":"    public String getPatientName() {","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"tanweili"},"content":"        return patientName;","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"tanweili"},"content":"    public String getDoctorNric() {","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"tanweili"},"content":"        return doctorNric;","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"tanweili"},"content":"    public String getDoctorName() {","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"tanweili"},"content":"        return doctorName;","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"tanweili"},"content":"    public String getAppointmentDate() {","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"tanweili"},"content":"        return appointmentDate;","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"tanweili"},"content":"    public String getAppointmentDetails() {","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"tanweili"},"content":"        return appointmentDetails;","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"tanweili"},"content":"    public String saveString() {","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"tanweili"},"content":"        return patientNric + \",\" + doctorNric + \",\" + appointmentDate + \",\" + appointmentDetails;","lastModifiedDate":"2022-04-05"},{"lineNumber":68,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"shxr3f"},"content":"    public String saveMedicineString() {","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"shxr3f"},"content":"        String returnString \u003d \"\";","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"shxr3f"},"content":"        for (int i \u003d 0; i \u003c dispensedMedicines.size(); i++) {","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"shxr3f"},"content":"            if (i !\u003d 0) {","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"shxr3f"},"content":"                returnString +\u003d \",\" + dispensedMedicines.get(i);","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"shxr3f"},"content":"            } else {","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"shxr3f"},"content":"                returnString +\u003d appointmentId + \",\" + dispensedMedicines.get(i);","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"shxr3f"},"content":"        return returnString;","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"tanweili":62,"wraineflores":1,"shxr3f":18}},{"path":"src/main/java/seedu/duke/assets/AppointmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package seedu.duke.assets;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"import seedu.duke.exception.DuplicateEntryException;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.exception.UserInputErrorException;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"import seedu.duke.exception.NotFoundException;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"Anvitha-r"},"content":"import seedu.duke.helper.CommandLineTable;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.IdGenerator;","lastModifiedDate":"2022-04-05"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.UI;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.finder.AppointmentFinder;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.finder.DoctorFinder;","lastModifiedDate":"2022-04-05"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.finder.PatientFinder;","lastModifiedDate":"2022-04-05"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"public class AppointmentList extends List {","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"    protected ArrayList\u003cAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":"    private ArrayList\u003cAppointment\u003e returnedFinderArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"tanweili"},"content":"    private PatientList referencePatientList;","lastModifiedDate":"2022-04-05"},{"lineNumber":20,"author":{"gitId":"tanweili"},"content":"    private DoctorList referenceDoctorList;","lastModifiedDate":"2022-04-05"},{"lineNumber":21,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":22,"author":{"gitId":"tanweili"},"content":"    public AppointmentList(PatientList patientList, DoctorList doctorList) {","lastModifiedDate":"2022-04-05"},{"lineNumber":23,"author":{"gitId":"tanweili"},"content":"        this.referencePatientList \u003d patientList;","lastModifiedDate":"2022-04-05"},{"lineNumber":24,"author":{"gitId":"tanweili"},"content":"        this.referenceDoctorList \u003d doctorList;","lastModifiedDate":"2022-04-05"},{"lineNumber":25,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":26,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"tanweili"},"content":"    public Appointment getAppointment(String appointmentId) {","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"tanweili"},"content":"        for (Appointment appointment : appointments) {","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"tanweili"},"content":"            if (appointment.getAppointmentId().equals(appointmentId)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"tanweili"},"content":"                return appointment;","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"tanweili"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"tanweili"},"content":"        return null;","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"tanweili"},"content":"    public ArrayList\u003cAppointment\u003e getList() {","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"tanweili"},"content":"        return appointments;","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"tanweili"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"tanweili"},"content":"    public void add(String[] addAppointmentParameters) throws DuplicateEntryException {","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"tanweili"},"content":"        final int numberOfAppointmentsBefore \u003d appointments.size();","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"tanweili"},"content":"        String patientNric \u003d addAppointmentParameters[0];","lastModifiedDate":"2022-04-05"},{"lineNumber":44,"author":{"gitId":"tanweili"},"content":"        PatientFinder patientFinder \u003d new PatientFinder();","lastModifiedDate":"2022-04-05"},{"lineNumber":45,"author":{"gitId":"tanweili"},"content":"        ArrayList\u003cPatient\u003e foundPatient \u003d patientFinder.findPatientByNric(referencePatientList.getList(), patientNric);","lastModifiedDate":"2022-04-05"},{"lineNumber":46,"author":{"gitId":"tanweili"},"content":"        if (foundPatient \u003d\u003d null) {","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"tanweili"},"content":"            throw new DuplicateEntryException(\"Patient NRIC corrupted\");","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"tanweili"},"content":"        String patientName \u003d foundPatient.get(0).getPatientName();","lastModifiedDate":"2022-04-05"},{"lineNumber":50,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":51,"author":{"gitId":"tanweili"},"content":"        String doctorNric \u003d addAppointmentParameters[1];","lastModifiedDate":"2022-04-05"},{"lineNumber":52,"author":{"gitId":"tanweili"},"content":"        DoctorFinder doctorFinder \u003d new DoctorFinder();","lastModifiedDate":"2022-04-05"},{"lineNumber":53,"author":{"gitId":"tanweili"},"content":"        ArrayList\u003cDoctor\u003e foundDoctor \u003d doctorFinder.findDoctorByNric(referenceDoctorList.getList(), doctorNric);","lastModifiedDate":"2022-04-05"},{"lineNumber":54,"author":{"gitId":"tanweili"},"content":"        if (foundDoctor \u003d\u003d null) {","lastModifiedDate":"2022-04-09"},{"lineNumber":55,"author":{"gitId":"tanweili"},"content":"            throw new DuplicateEntryException(\"Doctor NRIC corrupted\");","lastModifiedDate":"2022-04-09"},{"lineNumber":56,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":57,"author":{"gitId":"tanweili"},"content":"        String doctorName \u003d foundDoctor.get(0).getFullName();","lastModifiedDate":"2022-04-05"},{"lineNumber":58,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":59,"author":{"gitId":"tanweili"},"content":"        String appointmentDate \u003d addAppointmentParameters[2];","lastModifiedDate":"2022-04-05"},{"lineNumber":60,"author":{"gitId":"tanweili"},"content":"        String appointmentDetails \u003d addAppointmentParameters[3];","lastModifiedDate":"2022-04-05"},{"lineNumber":61,"author":{"gitId":"tanweili"},"content":"        String id \u003d IdGenerator.createAppointmentId(patientNric, doctorNric, appointmentDate);","lastModifiedDate":"2022-04-05"},{"lineNumber":62,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":63,"author":{"gitId":"tanweili"},"content":"        for (Appointment appointment : appointments) {","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"tanweili"},"content":"            if (appointment.getAppointmentId().equals(id)) {","lastModifiedDate":"2022-04-05"},{"lineNumber":65,"author":{"gitId":"tanweili"},"content":"                throw new DuplicateEntryException(\"There is already an appointment between this doctor and patient \"","lastModifiedDate":"2022-04-05"},{"lineNumber":66,"author":{"gitId":"tanweili"},"content":"                        + \"on the given date!\");","lastModifiedDate":"2022-04-05"},{"lineNumber":67,"author":{"gitId":"tanweili"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":70,"author":{"gitId":"tanweili"},"content":"        Appointment newAppointment \u003d new Appointment(id, patientNric, patientName, doctorNric, doctorName,","lastModifiedDate":"2022-04-05"},{"lineNumber":71,"author":{"gitId":"tanweili"},"content":"                appointmentDate, appointmentDetails);","lastModifiedDate":"2022-04-05"},{"lineNumber":72,"author":{"gitId":"tanweili"},"content":"        appointments.add(newAppointment);","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"tanweili"},"content":"        assert appointments.size() \u003d\u003d numberOfAppointmentsBefore + 1;","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"tanweili"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"tanweili"},"content":"    public void remove(String appointmentId) throws NotFoundException {","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"tanweili"},"content":"        int numberOfAppointmentsBefore \u003d appointments.size();","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"tanweili"},"content":"        for (int i \u003d 0; i \u003c appointments.size(); i++) {","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"tanweili"},"content":"            if (appointments.get(i).getAppointmentId().equals(appointmentId)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"tanweili"},"content":"                appointments.remove(i);","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"tanweili"},"content":"                assert appointments.size() \u003d\u003d numberOfAppointmentsBefore - 1;","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"tanweili"},"content":"                return;","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"tanweili"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"tanweili"},"content":"        throw new NotFoundException(\"There is no appointment with the given appointment id.\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"tanweili"},"content":"                + \"Please search by patient\u0027s nric or doctor\u0027s nric to find out the correct id if needed.\");","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"tanweili"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"tanweili"},"content":"    public void edit(String[] parameters) throws NotFoundException {","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"shxr3f"},"content":"        for (int i \u003d 0; i \u003c appointments.size(); i++) {","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"shxr3f"},"content":"            if (appointments.get(i).getAppointmentId().equals(parameters[0])) {","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"shxr3f"},"content":"                appointments.remove(i);","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"shxr3f"},"content":"                Appointment editAppointment \u003d new Appointment(parameters[0], parameters[1],","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"shxr3f"},"content":"                        parameters[2], parameters[3], parameters[4],","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"shxr3f"},"content":"                        parameters[5], parameters[6]);","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"shxr3f"},"content":"                appointments.add(editAppointment);","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"shxr3f"},"content":"                return;","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"shxr3f"},"content":"        throw new NotFoundException(\"There is no appointment with the given appointment id.\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"shxr3f"},"content":"                + \"Please search by patient\u0027s nric or doctor\u0027s nric to find out the correct id if needed.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"tanweili"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"kktai1512"},"content":"    public void view() throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":108,"author":{"gitId":"tanweili"},"content":"        CommandLineTable appointmentTable \u003d new CommandLineTable();","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"tanweili"},"content":"        appointmentTable.setShowVerticalLines(true);","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"tanweili"},"content":"        appointmentTable.setHeaders(\"Appointment Id\", \"Patient Name\", \"Patient NRIC\", \"Doctor Name\", \"Doctor NRIC\",","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"tanweili"},"content":"                \"Appointment Date\", \"Appointment Details\");","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"Anvitha-r"},"content":"        if (appointments.size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Appointment list is empty, please add appointment\");","lastModifiedDate":"2022-04-09"},{"lineNumber":114,"author":{"gitId":"Anvitha-r"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"tanweili"},"content":"        for (Appointment appointment : appointments) {","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"tanweili"},"content":"            appointmentTable.addRow(appointment.getAppointmentId(), appointment.getPatientName(),","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"tanweili"},"content":"                    appointment.getPatientNric(), appointment.getDoctorName(), appointment.getDoctorNric(),","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"tanweili"},"content":"                    appointment.getAppointmentDate(), appointment.getAppointmentDetails());","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"tanweili"},"content":"        appointmentTable.print();","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"tanweili"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"kktai1512"},"content":"    public void view(String appointmentId) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":125,"author":{"gitId":"tanweili"},"content":"        Appointment foundAppointment \u003d getAppointment(appointmentId);","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"tanweili"},"content":"        if (foundAppointment \u003d\u003d null) {","lastModifiedDate":"2022-03-29"},{"lineNumber":127,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Appointment doesn\u0027t exist please try again!\");","lastModifiedDate":"2022-04-09"},{"lineNumber":128,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"tanweili"},"content":"        CommandLineTable appointmentTable \u003d new CommandLineTable();","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"tanweili"},"content":"        appointmentTable.setShowVerticalLines(true);","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"tanweili"},"content":"        appointmentTable.setHeaders(\"Appointment Id\", \"Patient Name\", \"Patient NRIC\", \"Doctor Name\", \"Doctor NRIC\",","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"tanweili"},"content":"                \"Appointment Date\", \"Appointment Details\");","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"tanweili"},"content":"        appointmentTable.addRow(foundAppointment.getAppointmentId(), foundAppointment.getPatientName(),","lastModifiedDate":"2022-03-29"},{"lineNumber":134,"author":{"gitId":"tanweili"},"content":"                foundAppointment.getPatientNric(), foundAppointment.getDoctorName(), foundAppointment.getDoctorNric(),","lastModifiedDate":"2022-03-29"},{"lineNumber":135,"author":{"gitId":"tanweili"},"content":"                foundAppointment.getAppointmentDate(), foundAppointment.getAppointmentDetails());","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"tanweili"},"content":"        appointmentTable.print();","lastModifiedDate":"2022-03-29"},{"lineNumber":137,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":138,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"tanweili"},"content":"    public void findById(String[] parameters) {","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"tanweili"},"content":"        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":141,"author":{"gitId":"tanweili"},"content":"            this.returnedFinderArray \u003d AppointmentFinder.findAppointmentById(appointments, parameters[1]);","lastModifiedDate":"2022-03-29"},{"lineNumber":142,"author":{"gitId":"tanweili"},"content":"            createArrayOfFoundAppointments();","lastModifiedDate":"2022-03-29"},{"lineNumber":143,"author":{"gitId":"tanweili"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-29"},{"lineNumber":144,"author":{"gitId":"tanweili"},"content":"            UI.printParagraph(\"Appointment with given ID doesn\u0027t exist. Please try again!\");","lastModifiedDate":"2022-03-29"},{"lineNumber":145,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":148,"author":{"gitId":"tanweili"},"content":"    public void findByPatientName(String[] parameters) {","lastModifiedDate":"2022-03-29"},{"lineNumber":149,"author":{"gitId":"tanweili"},"content":"        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":150,"author":{"gitId":"tanweili"},"content":"            this.returnedFinderArray \u003d AppointmentFinder.findAppointmentByPatientName(appointments, parameters[1]);","lastModifiedDate":"2022-03-29"},{"lineNumber":151,"author":{"gitId":"tanweili"},"content":"            createArrayOfFoundAppointments();","lastModifiedDate":"2022-03-29"},{"lineNumber":152,"author":{"gitId":"tanweili"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-29"},{"lineNumber":153,"author":{"gitId":"tanweili"},"content":"            UI.printParagraph(\"Appointment with given patient name doesn\u0027t exist. Please try again!\");","lastModifiedDate":"2022-03-29"},{"lineNumber":154,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":157,"author":{"gitId":"tanweili"},"content":"    public void findByPatientNric(String[] parameters) {","lastModifiedDate":"2022-03-29"},{"lineNumber":158,"author":{"gitId":"tanweili"},"content":"        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"tanweili"},"content":"            this.returnedFinderArray \u003d AppointmentFinder.findAppointmentByPatientNric(appointments, (parameters[1]));","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"tanweili"},"content":"            createArrayOfFoundAppointments();","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"tanweili"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"tanweili"},"content":"            UI.printParagraph(\"Appointment with given patient nric doesn\u0027t exist. Please try again!\");","lastModifiedDate":"2022-03-29"},{"lineNumber":163,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":166,"author":{"gitId":"tanweili"},"content":"    public void findByDoctorName(String[] parameters) {","lastModifiedDate":"2022-03-29"},{"lineNumber":167,"author":{"gitId":"tanweili"},"content":"        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":168,"author":{"gitId":"tanweili"},"content":"            this.returnedFinderArray \u003d AppointmentFinder.findAppointmentByDoctorName(appointments, parameters[1]);","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"tanweili"},"content":"            createArrayOfFoundAppointments();","lastModifiedDate":"2022-03-29"},{"lineNumber":170,"author":{"gitId":"tanweili"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-29"},{"lineNumber":171,"author":{"gitId":"tanweili"},"content":"            UI.printParagraph(\"Appointment with given doctor name doesn\u0027t exist. Please try again!\");","lastModifiedDate":"2022-03-29"},{"lineNumber":172,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":175,"author":{"gitId":"tanweili"},"content":"    public void findByDoctorNric(String[] parameters) {","lastModifiedDate":"2022-03-29"},{"lineNumber":176,"author":{"gitId":"tanweili"},"content":"        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":177,"author":{"gitId":"tanweili"},"content":"            this.returnedFinderArray \u003d AppointmentFinder.findAppointmentByDoctorNric(appointments, parameters[1]);","lastModifiedDate":"2022-03-29"},{"lineNumber":178,"author":{"gitId":"tanweili"},"content":"            createArrayOfFoundAppointments();","lastModifiedDate":"2022-03-29"},{"lineNumber":179,"author":{"gitId":"tanweili"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-29"},{"lineNumber":180,"author":{"gitId":"tanweili"},"content":"            UI.printParagraph(\"Appointment with given doctor nric doesn\u0027t exist. Please try again!\");","lastModifiedDate":"2022-03-29"},{"lineNumber":181,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":182,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":183,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":184,"author":{"gitId":"tanweili"},"content":"    public void findByAppointmentDate(String[] parameters) {","lastModifiedDate":"2022-03-29"},{"lineNumber":185,"author":{"gitId":"tanweili"},"content":"        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":186,"author":{"gitId":"tanweili"},"content":"            this.returnedFinderArray \u003d AppointmentFinder.findAppointmentByDate(appointments, parameters[1]);","lastModifiedDate":"2022-03-29"},{"lineNumber":187,"author":{"gitId":"tanweili"},"content":"            createArrayOfFoundAppointments();","lastModifiedDate":"2022-03-29"},{"lineNumber":188,"author":{"gitId":"tanweili"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-29"},{"lineNumber":189,"author":{"gitId":"tanweili"},"content":"            UI.printParagraph(\"Appointment with given date doesn\u0027t exist. Please try again!\");","lastModifiedDate":"2022-03-29"},{"lineNumber":190,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":191,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":192,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":193,"author":{"gitId":"tanweili"},"content":"    private void createArrayOfFoundAppointments() {","lastModifiedDate":"2022-03-29"},{"lineNumber":194,"author":{"gitId":"tanweili"},"content":"        if (returnedFinderArray.isEmpty()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":195,"author":{"gitId":"tanweili"},"content":"            UI.printParagraph(\"Appointment doesn\u0027t exist please try again!\");","lastModifiedDate":"2022-03-29"},{"lineNumber":196,"author":{"gitId":"tanweili"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":197,"author":{"gitId":"tanweili"},"content":"            CommandLineTable findAppointmentTable \u003d new CommandLineTable();","lastModifiedDate":"2022-03-29"},{"lineNumber":198,"author":{"gitId":"tanweili"},"content":"            findAppointmentTable.setShowVerticalLines(true);","lastModifiedDate":"2022-03-29"},{"lineNumber":199,"author":{"gitId":"tanweili"},"content":"            findAppointmentTable.setHeaders(\"Appointment Id\", \"Patient Nric\", \"Patient Name\", \"Doctor Nric\",","lastModifiedDate":"2022-03-29"},{"lineNumber":200,"author":{"gitId":"tanweili"},"content":"                    \"Doctor Name\", \"Appointment Date\", \"Appointment Details\");","lastModifiedDate":"2022-03-29"},{"lineNumber":201,"author":{"gitId":"tanweili"},"content":"            for (int i \u003d 0; i \u003c returnedFinderArray.size(); i++) {","lastModifiedDate":"2022-03-29"},{"lineNumber":202,"author":{"gitId":"tanweili"},"content":"                findAppointmentTable.addRow(returnedFinderArray.get(i).getAppointmentId(),","lastModifiedDate":"2022-03-29"},{"lineNumber":203,"author":{"gitId":"tanweili"},"content":"                        returnedFinderArray.get(i).getPatientNric(),","lastModifiedDate":"2022-03-29"},{"lineNumber":204,"author":{"gitId":"tanweili"},"content":"                        returnedFinderArray.get(i).getPatientName(),","lastModifiedDate":"2022-03-29"},{"lineNumber":205,"author":{"gitId":"tanweili"},"content":"                        returnedFinderArray.get(i).getDoctorNric(),","lastModifiedDate":"2022-03-29"},{"lineNumber":206,"author":{"gitId":"tanweili"},"content":"                        returnedFinderArray.get(i).getDoctorName(),","lastModifiedDate":"2022-03-29"},{"lineNumber":207,"author":{"gitId":"tanweili"},"content":"                        returnedFinderArray.get(i).getAppointmentDate(),","lastModifiedDate":"2022-03-29"},{"lineNumber":208,"author":{"gitId":"tanweili"},"content":"                        returnedFinderArray.get(i).getAppointmentDetails());","lastModifiedDate":"2022-03-29"},{"lineNumber":209,"author":{"gitId":"tanweili"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":210,"author":{"gitId":"tanweili"},"content":"            findAppointmentTable.print();","lastModifiedDate":"2022-03-29"},{"lineNumber":211,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":212,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":213,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":214,"author":{"gitId":"kktai1512"},"content":"    public boolean hasAppointmentToday(String type, String nric) throws NotFoundException, UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":215,"author":{"gitId":"shxr3f"},"content":"        ArrayList\u003cAppointment\u003e foundAppointments;","lastModifiedDate":"2022-04-07"},{"lineNumber":216,"author":{"gitId":"shxr3f"},"content":"        switch (type) {","lastModifiedDate":"2022-04-07"},{"lineNumber":217,"author":{"gitId":"shxr3f"},"content":"        case \"P\":","lastModifiedDate":"2022-04-07"},{"lineNumber":218,"author":{"gitId":"shxr3f"},"content":"            foundAppointments \u003d AppointmentFinder.findAppointmentByPatientNric(appointments,nric);","lastModifiedDate":"2022-04-07"},{"lineNumber":219,"author":{"gitId":"shxr3f"},"content":"            for (Appointment a : foundAppointments) {","lastModifiedDate":"2022-04-07"},{"lineNumber":220,"author":{"gitId":"shxr3f"},"content":"                LocalDate appointmentDate \u003d LocalDate.parse(a.appointmentDate);","lastModifiedDate":"2022-04-07"},{"lineNumber":221,"author":{"gitId":"shxr3f"},"content":"                if (appointmentDate.equals(LocalDate.now())) {","lastModifiedDate":"2022-04-07"},{"lineNumber":222,"author":{"gitId":"shxr3f"},"content":"                    return true;","lastModifiedDate":"2022-04-07"},{"lineNumber":223,"author":{"gitId":"shxr3f"},"content":"                }","lastModifiedDate":"2022-04-07"},{"lineNumber":224,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-04-07"},{"lineNumber":225,"author":{"gitId":"shxr3f"},"content":"            throw new NotFoundException(\"Patient does not have an appointment today!\");","lastModifiedDate":"2022-04-07"},{"lineNumber":226,"author":{"gitId":"shxr3f"},"content":"        case \"D\":","lastModifiedDate":"2022-04-07"},{"lineNumber":227,"author":{"gitId":"shxr3f"},"content":"            foundAppointments \u003d AppointmentFinder.findAppointmentByDoctorNric(appointments, nric);","lastModifiedDate":"2022-04-07"},{"lineNumber":228,"author":{"gitId":"shxr3f"},"content":"            for (Appointment a : foundAppointments) {","lastModifiedDate":"2022-04-07"},{"lineNumber":229,"author":{"gitId":"shxr3f"},"content":"                LocalDate appointmentDate \u003d LocalDate.parse(a.appointmentDate);","lastModifiedDate":"2022-04-07"},{"lineNumber":230,"author":{"gitId":"shxr3f"},"content":"                if (appointmentDate.equals(LocalDate.now())) {","lastModifiedDate":"2022-04-07"},{"lineNumber":231,"author":{"gitId":"shxr3f"},"content":"                    return true;","lastModifiedDate":"2022-04-07"},{"lineNumber":232,"author":{"gitId":"shxr3f"},"content":"                }","lastModifiedDate":"2022-04-07"},{"lineNumber":233,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-04-07"},{"lineNumber":234,"author":{"gitId":"shxr3f"},"content":"            throw new NotFoundException(\"Doctor does not have an appointment today!\");","lastModifiedDate":"2022-04-07"},{"lineNumber":235,"author":{"gitId":"shxr3f"},"content":"        default:","lastModifiedDate":"2022-04-07"},{"lineNumber":236,"author":{"gitId":"shxr3f"},"content":"            assert false;","lastModifiedDate":"2022-04-07"},{"lineNumber":237,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Error with code, approach developer!\");","lastModifiedDate":"2022-04-09"},{"lineNumber":238,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":239,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":240,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":241,"author":{"gitId":"shxr3f"},"content":"    public void dispenseMedicine(String patientNric, String[] medicines) {","lastModifiedDate":"2022-04-07"},{"lineNumber":242,"author":{"gitId":"shxr3f"},"content":"        for (Appointment a : appointments) {","lastModifiedDate":"2022-04-07"},{"lineNumber":243,"author":{"gitId":"shxr3f"},"content":"            LocalDate appointmentDate \u003d LocalDate.parse(a.appointmentDate);","lastModifiedDate":"2022-04-07"},{"lineNumber":244,"author":{"gitId":"shxr3f"},"content":"            if (appointmentDate.equals(LocalDate.now()) \u0026\u0026 a.patientNric.equals(patientNric)) {","lastModifiedDate":"2022-04-07"},{"lineNumber":245,"author":{"gitId":"shxr3f"},"content":"                for (int i \u003d 0; i \u003c medicines.length; i +\u003d 2) {","lastModifiedDate":"2022-04-07"},{"lineNumber":246,"author":{"gitId":"shxr3f"},"content":"                    a.addMedicine(medicines[i], medicines[i + 1]);","lastModifiedDate":"2022-04-07"},{"lineNumber":247,"author":{"gitId":"shxr3f"},"content":"                }","lastModifiedDate":"2022-04-07"},{"lineNumber":248,"author":{"gitId":"shxr3f"},"content":"                break;","lastModifiedDate":"2022-04-07"},{"lineNumber":249,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-04-07"},{"lineNumber":250,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":251,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":252,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":253,"author":{"gitId":"shxr3f"},"content":"    public void loadMedicine(String[] parameters) {","lastModifiedDate":"2022-04-07"},{"lineNumber":254,"author":{"gitId":"shxr3f"},"content":"        String appointmentId \u003d parameters[0];","lastModifiedDate":"2022-04-07"},{"lineNumber":255,"author":{"gitId":"shxr3f"},"content":"        for (Appointment a : appointments) {","lastModifiedDate":"2022-04-07"},{"lineNumber":256,"author":{"gitId":"shxr3f"},"content":"            if (a.appointmentId.equals(appointmentId)) {","lastModifiedDate":"2022-04-07"},{"lineNumber":257,"author":{"gitId":"shxr3f"},"content":"                for (int i \u003d 1; i \u003c parameters.length; i +\u003d 2) {","lastModifiedDate":"2022-04-07"},{"lineNumber":258,"author":{"gitId":"shxr3f"},"content":"                    a.addMedicine(parameters[i], parameters[i + 1]);","lastModifiedDate":"2022-04-07"},{"lineNumber":259,"author":{"gitId":"shxr3f"},"content":"                }","lastModifiedDate":"2022-04-07"},{"lineNumber":260,"author":{"gitId":"shxr3f"},"content":"                break;","lastModifiedDate":"2022-04-07"},{"lineNumber":261,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-04-07"},{"lineNumber":262,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":263,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":264,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":265,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":266,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"tanweili":191,"Anvitha-r":5,"shxr3f":63,"kktai1512":7}},{"path":"src/main/java/seedu/duke/assets/Doctor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Anvitha-r"},"content":"package seedu.duke.assets;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":"public class Doctor extends Person {","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"Anvitha-r"},"content":"    private String specialization;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"    public Doctor(String nric, String fullName, int age, char gender, String address,","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":"                  String dob, String specialization) {","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"        super(nric, fullName, age, gender, address, dob);","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"        this.specialization \u003d specialization;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"wraineflores"},"content":"    public String getSpecialization() {","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"wraineflores"},"content":"        return specialization;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"wraineflores"},"content":"    // @override toString()","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"Anvitha-r"},"content":"    public void edit(String fullName, int age, String address, char gender, String dob,","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"Anvitha-r"},"content":"                     String specialization) {","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"Anvitha-r"},"content":"        //this.nric \u003d nric;","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"Anvitha-r"},"content":"        this.fullName \u003d fullName;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"Anvitha-r"},"content":"        this.age \u003d age;","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"Anvitha-r"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"Anvitha-r"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"Anvitha-r"},"content":"        this.dob \u003d dob;","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"Anvitha-r"},"content":"        this.specialization \u003d specialization;","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"    public String saveString() {","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"        return nric + \",\" + fullName + \",\" + age + \",\" + gender + \",\" + address","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"Anvitha-r"},"content":"                + \",\" + dob + \",\" + specialization;","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"Anvitha-r"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"Anvitha-r"},"content":"    public String toString() {","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"shxr3f"},"content":"        return \"Nric\u003d\u0027\" + getNric() + \u0027\\\u0027\u0027","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"Anvitha-r"},"content":"                + \", Full Name\u003d\u0027\" + getFullName() + \u0027\\\u0027\u0027","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"Anvitha-r"},"content":"                + \", Age\u003d\" + getAge()","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"Anvitha-r"},"content":"                + \", Address\u003d\u0027\" + getAddress()","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"Anvitha-r"},"content":"                + \", Gender\u003d\" + getGender()","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"Anvitha-r"},"content":"                + \u0027\\\u0027\u0027 + \", DOB\u003d\u0027\" + getDob() + \u0027\\\u0027\u0027","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"shxr3f"},"content":"                + \", Specialization\u003d\u0027\" + getSpecialization() + \u0027\\\u0027\u0027;","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"Anvitha-r"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"wraineflores":9,"Anvitha-r":24,"shxr3f":9,"kktai1512":3}},{"path":"src/main/java/seedu/duke/assets/DoctorList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"package seedu.duke.assets;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.DuplicateEntryException;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.exception.UserInputErrorException;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.NotFoundException;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"Anvitha-r"},"content":"import seedu.duke.helper.CommandLineTable;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":"import seedu.duke.helper.UI;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"wraineflores"},"content":"import seedu.duke.helper.finder.DoctorFinder;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"public class DoctorList extends List {","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"Anvitha-r"},"content":"    private ArrayList\u003cDoctor\u003e doctors \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"wraineflores"},"content":"    private ArrayList\u003cDoctor\u003e returnedFinderArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"Anvitha-r"},"content":"    public Doctor getDoctor(String nric) {","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"Anvitha-r"},"content":"        for (Doctor doctor : doctors) {","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"Anvitha-r"},"content":"            if (doctor.getNric().equals(nric)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"Anvitha-r"},"content":"                return doctor;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"Anvitha-r"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"Anvitha-r"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"Anvitha-r"},"content":"        return null;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"Anvitha-r"},"content":"    public Doctor search(String nric) {","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"Anvitha-r"},"content":"        for (Doctor doctor : doctors) {","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"Anvitha-r"},"content":"            if (doctor.getNric().equals(nric)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"Anvitha-r"},"content":"                return doctor;","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"Anvitha-r"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"Anvitha-r"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"Anvitha-r"},"content":"        return null;","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"Anvitha-r"},"content":"    public void find(String[] command) {","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"shxr3f"},"content":"    public void add(String[] addDoctorParameters) throws DuplicateEntryException {","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"shxr3f"},"content":"        if (getDoctor(addDoctorParameters[0]) !\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"shxr3f"},"content":"            throw new DuplicateEntryException(\"Doctor with given NRIC already exists!\");","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"kktai1512"},"content":"        Doctor newDoctor \u003d new Doctor(addDoctorParameters[0], addDoctorParameters[1],","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"Anvitha-r"},"content":"                Integer.parseInt(addDoctorParameters[2]),","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"shxr3f"},"content":"                addDoctorParameters[3].charAt(0), addDoctorParameters[4], addDoctorParameters[5],","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"Anvitha-r"},"content":"                addDoctorParameters[6]);","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"kktai1512"},"content":"        doctors.add(newDoctor);","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"kktai1512"},"content":"    //view particular doctor","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"kktai1512"},"content":"    public void view(String nric) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"tanweili"},"content":"        Doctor doctor \u003d getDoctor(nric);","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"tanweili"},"content":"        if (doctor \u003d\u003d null) {","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Doctor doesn\u0027t exist please try again!\");","lastModifiedDate":"2022-04-09"},{"lineNumber":55,"author":{"gitId":"Anvitha-r"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"Anvitha-r"},"content":"        CommandLineTable doctorTable \u003d new CommandLineTable();","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"Anvitha-r"},"content":"        doctorTable.setShowVerticalLines(true);","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"Anvitha-r"},"content":"        doctorTable.setHeaders(\"Nric\", \"FullName\", \"Age\", \"Address\", \"Gender\", \"Dob\",","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"Anvitha-r"},"content":"                \"Specialization\");","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"Anvitha-r"},"content":"        doctorTable.addRow(doctor.getNric(), doctor.getFullName(), String.valueOf(doctor.getAge()),","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"Anvitha-r"},"content":"                doctor.getAddress(), String.valueOf(doctor.getGender()), doctor.getDob(),","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"Anvitha-r"},"content":"                doctor.getSpecialization());","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"Anvitha-r"},"content":"        doctorTable.print();","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"shxr3f"},"content":"    //view all doctor","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"kktai1512"},"content":"    public void view() throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":68,"author":{"gitId":"Anvitha-r"},"content":"        CommandLineTable doctorTable \u003d new CommandLineTable();","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"Anvitha-r"},"content":"        //st.setRightAlign(true);//if true then cell text is right aligned","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"Anvitha-r"},"content":"        doctorTable.setShowVerticalLines(true);//if false (default) then no vertical lines are shown","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"Anvitha-r"},"content":"        doctorTable.setHeaders(\"Nric\", \"FullName\", \"Age\", \"Address\", \"Gender\", \"Dob\",","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"Anvitha-r"},"content":"                \"Specialization\");","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"Anvitha-r"},"content":"        if (doctors.size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Doctor list is empty, please add doctor\");","lastModifiedDate":"2022-04-09"},{"lineNumber":75,"author":{"gitId":"Anvitha-r"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"Anvitha-r"},"content":"        for (Doctor doctor : doctors) {","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"Anvitha-r"},"content":"            doctorTable.addRow(doctor.getNric(), doctor.getFullName(), String.valueOf(doctor.getAge()),","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"Anvitha-r"},"content":"                    doctor.getAddress(), String.valueOf(doctor.getGender()), doctor.getDob(),","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"Anvitha-r"},"content":"                    doctor.getSpecialization());","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"Anvitha-r"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"Anvitha-r"},"content":"        doctorTable.print();","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"Anvitha-r"},"content":"    public void edit(String[] parameterArray) throws NotFoundException {","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"Anvitha-r"},"content":"        if (search(parameterArray[0]) !\u003d null) {","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"Anvitha-r"},"content":"            Doctor doctor \u003d search(parameterArray[0]);","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"Anvitha-r"},"content":"            doctor.edit(parameterArray[1], Integer.parseInt(parameterArray[2]), parameterArray[3],","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"Anvitha-r"},"content":"                    (parameterArray[4].charAt(0)), parameterArray[5], parameterArray[6]);","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"Anvitha-r"},"content":"            return;","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"Anvitha-r"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"Anvitha-r"},"content":"        throw new NotFoundException(\"There are no patients with given NRIC!\");","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"Anvitha-r"},"content":"    //get the number of doctors","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"shxr3f"},"content":"    public int getSize() {","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"Anvitha-r"},"content":"        return doctors.size();","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"Anvitha-r"},"content":"    //remove the specific doctor","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"shxr3f"},"content":"    public void remove(String nric) throws NotFoundException {","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"shxr3f"},"content":"        for (int i \u003d 0; i \u003c getSize(); i++) {","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"shxr3f"},"content":"            if (doctors.get(i).getNric().equals(nric)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"shxr3f"},"content":"                doctors.remove(i);","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"shxr3f"},"content":"                return;","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"shxr3f"},"content":"        throw new NotFoundException(\"There are no doctors with given NRIC!\");","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"Anvitha-r"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"Anvitha-r"},"content":"    public String toString() {","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"shxr3f"},"content":"        if (getSize() \u003d\u003d 0) {","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"tanweili"},"content":"            return \"There are no doctors.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"Anvitha-r"},"content":"        String doctorName \u003d \"\";","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"Anvitha-r"},"content":"        int index \u003d 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"Anvitha-r"},"content":"        for (Doctor doctor : this.doctors) {","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"Anvitha-r"},"content":"            doctorName +\u003d String.format(\"%d. %s\", index, doctor.toString());","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"shxr3f"},"content":"            if (index !\u003d this.getSize()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":121,"author":{"gitId":"Anvitha-r"},"content":"                doctorName +\u003d \"\\n\";","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"Anvitha-r"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"Anvitha-r"},"content":"            index++;","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"Anvitha-r"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"Anvitha-r"},"content":"        return doctorName;","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"shxr3f"},"content":"    public ArrayList\u003cDoctor\u003e getList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"shxr3f"},"content":"        return doctors;","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"wraineflores"},"content":"    public void findByNric(String[] parameterArray) {","lastModifiedDate":"2022-03-27"},{"lineNumber":133,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":134,"author":{"gitId":"wraineflores"},"content":"            this.returnedFinderArray \u003d DoctorFinder.findDoctorByNric(doctors, parameterArray[1]);","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"wraineflores"},"content":"            displayFoundDoctorList();","lastModifiedDate":"2022-04-07"},{"lineNumber":136,"author":{"gitId":"wraineflores"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"wraineflores"},"content":"            UI.printParagraph(\"Doctor with given NRIC doesn\u0027t exist. Please try again!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":138,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"wraineflores"},"content":"    public void findByName(String[] parameterArray) {","lastModifiedDate":"2022-03-27"},{"lineNumber":142,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"wraineflores"},"content":"            this.returnedFinderArray \u003d DoctorFinder.findDoctorByName(doctors, parameterArray[1]);","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"wraineflores"},"content":"            displayFoundDoctorList();","lastModifiedDate":"2022-04-07"},{"lineNumber":145,"author":{"gitId":"wraineflores"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"wraineflores"},"content":"            UI.printParagraph(\"Doctor with given name doesn\u0027t exist. Please try again!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":147,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":149,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":150,"author":{"gitId":"wraineflores"},"content":"    public void findByAge(String[] parameterArray) {","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"wraineflores"},"content":"            this.returnedFinderArray \u003d DoctorFinder.findDoctorByAge(doctors, Integer.parseInt(parameterArray[1]));","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"wraineflores"},"content":"            displayFoundDoctorList();","lastModifiedDate":"2022-04-07"},{"lineNumber":154,"author":{"gitId":"wraineflores"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"wraineflores"},"content":"            UI.printParagraph(\"Doctor with given age doesn\u0027t exist. Please try again!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":159,"author":{"gitId":"wraineflores"},"content":"    public void findByGender(String[] parameterArray) {","lastModifiedDate":"2022-03-27"},{"lineNumber":160,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":161,"author":{"gitId":"wraineflores"},"content":"            this.returnedFinderArray \u003d DoctorFinder.findDoctorByGender(doctors, parameterArray[1].charAt(0));","lastModifiedDate":"2022-03-27"},{"lineNumber":162,"author":{"gitId":"wraineflores"},"content":"            displayFoundDoctorList();","lastModifiedDate":"2022-04-07"},{"lineNumber":163,"author":{"gitId":"wraineflores"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":164,"author":{"gitId":"wraineflores"},"content":"            UI.printParagraph(\"Doctor with given gender doesn\u0027t exist. Please try again!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":166,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":167,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":168,"author":{"gitId":"wraineflores"},"content":"    public void findByAddress(String[] parameterArray) {","lastModifiedDate":"2022-03-27"},{"lineNumber":169,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":170,"author":{"gitId":"wraineflores"},"content":"            this.returnedFinderArray \u003d DoctorFinder.findDoctorByAddress(doctors, parameterArray[1]);","lastModifiedDate":"2022-03-27"},{"lineNumber":171,"author":{"gitId":"wraineflores"},"content":"            displayFoundDoctorList();","lastModifiedDate":"2022-04-07"},{"lineNumber":172,"author":{"gitId":"wraineflores"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":173,"author":{"gitId":"wraineflores"},"content":"            UI.printParagraph(\"Doctor with given address doesn\u0027t exist. Please try again!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":175,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":176,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":177,"author":{"gitId":"wraineflores"},"content":"    public void findByDob(String[] parameterArray) {","lastModifiedDate":"2022-03-27"},{"lineNumber":178,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":179,"author":{"gitId":"wraineflores"},"content":"            this.returnedFinderArray \u003d DoctorFinder.findDoctorByDob(doctors, parameterArray[1]);","lastModifiedDate":"2022-03-27"},{"lineNumber":180,"author":{"gitId":"wraineflores"},"content":"            displayFoundDoctorList();","lastModifiedDate":"2022-04-07"},{"lineNumber":181,"author":{"gitId":"wraineflores"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":182,"author":{"gitId":"wraineflores"},"content":"            UI.printParagraph(\"Doctor doesn\u0027t exist please try again!\");","lastModifiedDate":"2022-03-27"},{"lineNumber":183,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":184,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":185,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":186,"author":{"gitId":"wraineflores"},"content":"    public void findBySpecialization(String[] parameterArray) {","lastModifiedDate":"2022-03-27"},{"lineNumber":187,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":188,"author":{"gitId":"wraineflores"},"content":"            this.returnedFinderArray \u003d DoctorFinder.findDoctorBySpecialization(doctors, parameterArray[1]);","lastModifiedDate":"2022-03-27"},{"lineNumber":189,"author":{"gitId":"wraineflores"},"content":"            displayFoundDoctorList();","lastModifiedDate":"2022-04-07"},{"lineNumber":190,"author":{"gitId":"wraineflores"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":191,"author":{"gitId":"wraineflores"},"content":"            UI.printParagraph(\"Doctor with given specialization doesn\u0027t exist. Please try again!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":192,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":193,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":194,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":195,"author":{"gitId":"wraineflores"},"content":"    private void displayFoundDoctorList() {","lastModifiedDate":"2022-04-07"},{"lineNumber":196,"author":{"gitId":"wraineflores"},"content":"        if (returnedFinderArray.isEmpty()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":197,"author":{"gitId":"wraineflores"},"content":"            UI.printParagraph(\"Doctor doesn\u0027t exist please try again!\");","lastModifiedDate":"2022-03-27"},{"lineNumber":198,"author":{"gitId":"wraineflores"},"content":"        } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":199,"author":{"gitId":"Anvitha-r"},"content":"            CommandLineTable findPatientTable \u003d new CommandLineTable();","lastModifiedDate":"2022-03-27"},{"lineNumber":200,"author":{"gitId":"Anvitha-r"},"content":"            for (int i \u003d 0; i \u003c returnedFinderArray.size(); i++) {","lastModifiedDate":"2022-03-27"},{"lineNumber":201,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":202,"author":{"gitId":"Anvitha-r"},"content":"                findPatientTable.setShowVerticalLines(true);","lastModifiedDate":"2022-03-27"},{"lineNumber":203,"author":{"gitId":"Anvitha-r"},"content":"                findPatientTable.setHeaders(\"Nric\", \"Full Name\", \"Age\", \"Address\", \"Gender\", \"Dob\",","lastModifiedDate":"2022-03-27"},{"lineNumber":204,"author":{"gitId":"tanweili"},"content":"                        \"Specialization\");","lastModifiedDate":"2022-04-06"},{"lineNumber":205,"author":{"gitId":"Anvitha-r"},"content":"                findPatientTable.addRow(returnedFinderArray.get(i).getNric(),","lastModifiedDate":"2022-03-27"},{"lineNumber":206,"author":{"gitId":"Anvitha-r"},"content":"                        returnedFinderArray.get(i).getFullName(),","lastModifiedDate":"2022-03-27"},{"lineNumber":207,"author":{"gitId":"Anvitha-r"},"content":"                        String.valueOf(returnedFinderArray.get(i).getAge()),","lastModifiedDate":"2022-03-27"},{"lineNumber":208,"author":{"gitId":"Anvitha-r"},"content":"                        returnedFinderArray.get(i).getAddress(),","lastModifiedDate":"2022-03-27"},{"lineNumber":209,"author":{"gitId":"Anvitha-r"},"content":"                        String.valueOf(returnedFinderArray.get(i).getGender()),","lastModifiedDate":"2022-03-27"},{"lineNumber":210,"author":{"gitId":"Anvitha-r"},"content":"                        returnedFinderArray.get(i).getDob(),","lastModifiedDate":"2022-03-27"},{"lineNumber":211,"author":{"gitId":"Anvitha-r"},"content":"                        returnedFinderArray.get(i).getSpecialization());","lastModifiedDate":"2022-03-27"},{"lineNumber":212,"author":{"gitId":"kktai1512"},"content":"            }","lastModifiedDate":"2022-03-09"},{"lineNumber":213,"author":{"gitId":"Anvitha-r"},"content":"            findPatientTable.print();","lastModifiedDate":"2022-03-27"},{"lineNumber":214,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":215,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":216,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":217,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-03-27"},{"lineNumber":218,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"tanweili":5,"wraineflores":76,"Anvitha-r":87,"shxr3f":29,"kktai1512":21}},{"path":"src/main/java/seedu/duke/assets/ExpiryComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.assets;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"class ExpiryComparator implements Comparator\u003cMedicine\u003e {","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"    // override the compare() method","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"    public int compare(Medicine m1, Medicine m2) {","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"        return m1.getExpiry().compareTo(m2.getExpiry());","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"shxr3f":12}},{"path":"src/main/java/seedu/duke/assets/List.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.assets;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.DuplicateEntryException;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.NotFoundException;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"import seedu.duke.exception.UserInputErrorException;","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"public abstract class List {","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"    public abstract void add(String[] parameters) throws DuplicateEntryException;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"    public abstract void remove(String parameters) throws NotFoundException;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"    public abstract void view() throws UserInputErrorException;","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"kktai1512"},"content":"    public abstract void view(String parameter) throws UserInputErrorException;","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"    public abstract void edit(String[] parameters) throws NotFoundException;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tanweili":1,"wraineflores":1,"shxr3f":15,"kktai1512":2}},{"path":"src/main/java/seedu/duke/assets/Medicine.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Anvitha-r"},"content":"package seedu.duke.assets;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"Anvitha-r"},"content":"public class Medicine {","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"    private String medicineId;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"    private String medicineName;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"    private int dosage; //in milligrams","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"    private String expiry;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"    private String sideEffects;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"    protected int quantity;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"    public Medicine(String medicineId, String medicineName, int dosage, String expiry,","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"            String sideEffects, int quantity) {","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"        this.medicineId \u003d medicineId;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"        this.medicineName \u003d medicineName;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"        this.dosage \u003d dosage;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"        this.expiry \u003d expiry;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"        this.sideEffects \u003d sideEffects;","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"    public void edit(String medicineName, int dosage, String expiry,","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"                     String sideEffects, int quantity) {","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"        this.medicineName \u003d medicineName;","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"        this.dosage \u003d dosage;","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"        this.expiry \u003d expiry;","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"        this.sideEffects \u003d sideEffects;","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"    public String saveString() {","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"shxr3f"},"content":"        return medicineId + \",\" + medicineName + \",\" + dosage + \",\" + expiry","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"shxr3f"},"content":"                + \",\" + sideEffects + \",\" + quantity;","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"shxr3f"},"content":"    public String getMedicineId() {","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"wraineflores"},"content":"        return medicineId;","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"wraineflores"},"content":"    public String getMedicineName() {","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"wraineflores"},"content":"        return medicineName;","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"wraineflores"},"content":"    public int getDosage() {","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"wraineflores"},"content":"        return dosage;","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"wraineflores"},"content":"    public String getExpiry() {","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"wraineflores"},"content":"        return expiry;","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"wraineflores"},"content":"    public String getSideEffects() {","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"wraineflores"},"content":"        return sideEffects;","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"wraineflores"},"content":"    public int getQuantity() {","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"wraineflores"},"content":"        return quantity;","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"Anvitha-r"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"wraineflores":22,"Anvitha-r":5,"shxr3f":31}},{"path":"src/main/java/seedu/duke/assets/MedicineList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.assets;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.DuplicateEntryException;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.exception.UserInputErrorException;","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.NotFoundException;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.helper.UI;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"Anvitha-r"},"content":"import seedu.duke.helper.CommandLineTable;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":"import seedu.duke.helper.finder.MedicineFinder;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"public class MedicineList extends List {","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"    private ArrayList\u003cMedicine\u003e medicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"    private ArrayList\u003cMedicine\u003e expiredMedicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"wraineflores"},"content":"    private ArrayList\u003cMedicine\u003e returnedFinderArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"kktai1512"},"content":"    public int getSize() {","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"        return medicines.size();","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"Anvitha-r"},"content":"    public Medicine getMedicine(String medicineId) {","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"Anvitha-r"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"Anvitha-r"},"content":"            if (medicine.getMedicineId().equals(medicineId)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"Anvitha-r"},"content":"                return medicine;","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"Anvitha-r"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"Anvitha-r"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"Anvitha-r"},"content":"        return null;","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"shxr3f"},"content":"    public Medicine search(String medicineId) {","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"shxr3f"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"shxr3f"},"content":"            if (medicine.getMedicineId().equals(medicineId)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"shxr3f"},"content":"                return medicine;","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"shxr3f"},"content":"        return null;","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"shxr3f"},"content":"    public void add(String[] parameterArray) throws DuplicateEntryException {","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"shxr3f"},"content":"        if (search(parameterArray[0]) !\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"shxr3f"},"content":"            throw new DuplicateEntryException(\"Medicine with given Batch ID already exists!\");","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"shxr3f"},"content":"        Medicine newMedicine \u003d new Medicine(parameterArray[0], parameterArray[1],","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"shxr3f"},"content":"                Integer.parseInt(parameterArray[2]), parameterArray[3], parameterArray[4],","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"shxr3f"},"content":"                Integer.parseInt(parameterArray[5]));","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"shxr3f"},"content":"        medicines.add(newMedicine);","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"Anvitha-r"},"content":"    public void find(String[] command) {","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"shxr3f"},"content":"    public String getMedicineInfo(Medicine medicine) {","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"shxr3f"},"content":"        return (medicine.getMedicineId() + \": \"","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"wraineflores"},"content":"                + medicine.getMedicineName() + \", \"","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"wraineflores"},"content":"                + Integer.toString(medicine.getDosage()) + \", \" + medicine.getExpiry() + \", \"","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"wraineflores"},"content":"                + medicine.getSideEffects() + \", \" + Integer.toString(medicine.getQuantity()));","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"Anvitha-r"},"content":"    //view particular medicine","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"kktai1512"},"content":"    public void view(String medicineId) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":65,"author":{"gitId":"Anvitha-r"},"content":"        Medicine medicine \u003d getMedicine(medicineId);","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"Anvitha-r"},"content":"        if (medicine \u003d\u003d null) {","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Medicine doesn\u0027t exist please try again!\");","lastModifiedDate":"2022-04-09"},{"lineNumber":68,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"Anvitha-r"},"content":"        CommandLineTable medicineTable \u003d new CommandLineTable();","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"Anvitha-r"},"content":"        medicineTable.setShowVerticalLines(true);","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"Anvitha-r"},"content":"        medicineTable.setHeaders(\"MedicineId\", \"MedicineName\", \"Dosage\", \"Expiry\", \"SideEffects\", \"Quantity\");","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"Anvitha-r"},"content":"        medicineTable.addRow(medicine.getMedicineId(), medicine.getMedicineName(),","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"Anvitha-r"},"content":"                String.valueOf(medicine.getDosage()),","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"Anvitha-r"},"content":"                medicine.getExpiry(), medicine.getSideEffects(), String.valueOf(medicine.getQuantity()));","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"Anvitha-r"},"content":"        medicineTable.print();","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"kktai1512"},"content":"    public void view() throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":79,"author":{"gitId":"Anvitha-r"},"content":"        CommandLineTable medicineTable \u003d new CommandLineTable();","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"Anvitha-r"},"content":"        //st.setRightAlign(true);//if true then cell text is right aligned","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"Anvitha-r"},"content":"        medicineTable.setShowVerticalLines(true);","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"Anvitha-r"},"content":"        medicineTable.setHeaders(\"MedicineId\", \"MedicineName\", \"Dosage\", \"Expiry\", \"SideEffects\", \"Quantity\");","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"Anvitha-r"},"content":"        if (medicines.size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Medicine list is empty, please add medicine\");","lastModifiedDate":"2022-04-09"},{"lineNumber":86,"author":{"gitId":"Anvitha-r"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"wraineflores"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"Anvitha-r"},"content":"            medicineTable.addRow(medicine.getMedicineId(), medicine.getMedicineName(),","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"Anvitha-r"},"content":"                    String.valueOf(medicine.getDosage()),","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"Anvitha-r"},"content":"                    medicine.getExpiry(), medicine.getSideEffects(),","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"Anvitha-r"},"content":"                    String.valueOf(medicine.getQuantity()));","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"Anvitha-r"},"content":"        medicineTable.print();","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"shxr3f"},"content":"    public void remove(String medicineId) throws NotFoundException {","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"shxr3f"},"content":"        for (int i \u003d 0; i \u003c getSize(); i++) {","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"shxr3f"},"content":"            if (medicines.get(i).getMedicineId().equals(medicineId)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"shxr3f"},"content":"                medicines.remove(i);","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"shxr3f"},"content":"                return;","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"shxr3f"},"content":"        throw new NotFoundException(\"There are no medicines with given Batch ID!\");","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"shxr3f"},"content":"    public void edit(String[] parameterArray) throws NotFoundException {","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"shxr3f"},"content":"        if (search(parameterArray[0]) !\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"shxr3f"},"content":"            Medicine medicine \u003d search(parameterArray[0]);","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"shxr3f"},"content":"            medicine.edit(parameterArray[1], Integer.parseInt(parameterArray[2]), parameterArray[3], parameterArray[4],","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"shxr3f"},"content":"                    Integer.parseInt(parameterArray[5]));","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"shxr3f"},"content":"            return;","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"shxr3f"},"content":"        throw new NotFoundException(\"There are no medicines with given Batch ID!\");","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"kktai1512"},"content":"    public void viewExpired() throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":118,"author":{"gitId":"shxr3f"},"content":"        CommandLineTable medicineTable \u003d new CommandLineTable();","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"shxr3f"},"content":"        //st.setRightAlign(true);//if true then cell text is right aligned","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"shxr3f"},"content":"        medicineTable.setShowVerticalLines(true);","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"shxr3f"},"content":"        medicineTable.setHeaders(\"MedicineId\", \"MedicineName\", \"Dosage\", \"Expiry\", \"SideEffects\", \"Quantity\");","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"tanweili"},"content":"        if (expiredMedicines.size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"There are no expired medicines.\");","lastModifiedDate":"2022-04-09"},{"lineNumber":124,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"shxr3f"},"content":"        for (Medicine medicine : expiredMedicines) {","lastModifiedDate":"2022-03-26"},{"lineNumber":126,"author":{"gitId":"shxr3f"},"content":"            medicineTable.addRow(medicine.getMedicineId(), medicine.getMedicineName(),","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"shxr3f"},"content":"                    String.valueOf(medicine.getDosage()),","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"shxr3f"},"content":"                    medicine.getExpiry(), medicine.getSideEffects(),","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"shxr3f"},"content":"                    String.valueOf(medicine.getQuantity()));","lastModifiedDate":"2022-03-27"},{"lineNumber":130,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":131,"author":{"gitId":"shxr3f"},"content":"        medicineTable.print();","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"kktai1512"},"content":"    public void updateStock() throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":135,"author":{"gitId":"shxr3f"},"content":"        for (int i \u003d 0; i \u003c medicines.size(); i++) {","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"shxr3f"},"content":"            LocalDate date \u003d LocalDate.parse(medicines.get(i).getExpiry());","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"shxr3f"},"content":"            int quantity \u003d medicines.get(i).getQuantity();","lastModifiedDate":"2022-04-07"},{"lineNumber":138,"author":{"gitId":"shxr3f"},"content":"            LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"shxr3f"},"content":"            if (date.isBefore(today) || quantity \u003d\u003d 0) {","lastModifiedDate":"2022-04-07"},{"lineNumber":140,"author":{"gitId":"shxr3f"},"content":"                expiredMedicines.add(medicines.get(i));","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"shxr3f"},"content":"                medicines.remove(i);","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":143,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"shxr3f"},"content":"        viewExpired();","lastModifiedDate":"2022-03-26"},{"lineNumber":145,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":146,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":147,"author":{"gitId":"shxr3f"},"content":"    public void updateStockBackend() {","lastModifiedDate":"2022-04-07"},{"lineNumber":148,"author":{"gitId":"shxr3f"},"content":"        for (int i \u003d 0; i \u003c medicines.size(); i++) {","lastModifiedDate":"2022-04-07"},{"lineNumber":149,"author":{"gitId":"shxr3f"},"content":"            LocalDate date \u003d LocalDate.parse(medicines.get(i).getExpiry());","lastModifiedDate":"2022-04-07"},{"lineNumber":150,"author":{"gitId":"shxr3f"},"content":"            int quantity \u003d medicines.get(i).getQuantity();","lastModifiedDate":"2022-04-07"},{"lineNumber":151,"author":{"gitId":"shxr3f"},"content":"            LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2022-04-07"},{"lineNumber":152,"author":{"gitId":"shxr3f"},"content":"            if (date.isBefore(today) || quantity \u003d\u003d 0) {","lastModifiedDate":"2022-04-07"},{"lineNumber":153,"author":{"gitId":"shxr3f"},"content":"                expiredMedicines.add(medicines.get(i));","lastModifiedDate":"2022-04-07"},{"lineNumber":154,"author":{"gitId":"shxr3f"},"content":"                medicines.remove(i);","lastModifiedDate":"2022-04-07"},{"lineNumber":155,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-04-07"},{"lineNumber":156,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":157,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":158,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":159,"author":{"gitId":"shxr3f"},"content":"    public void clearStock() {","lastModifiedDate":"2022-03-26"},{"lineNumber":160,"author":{"gitId":"shxr3f"},"content":"        if (expiredMedicines.size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-26"},{"lineNumber":161,"author":{"gitId":"shxr3f"},"content":"            UI.printParagraph(\"There are no expired medicines in the expired list!\");","lastModifiedDate":"2022-03-26"},{"lineNumber":162,"author":{"gitId":"shxr3f"},"content":"            return;","lastModifiedDate":"2022-03-26"},{"lineNumber":163,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":164,"author":{"gitId":"shxr3f"},"content":"        expiredMedicines.clear();","lastModifiedDate":"2022-03-26"},{"lineNumber":165,"author":{"gitId":"shxr3f"},"content":"        UI.printParagraph(\"Expired medicines in the expired list has been cleared!\");","lastModifiedDate":"2022-03-26"},{"lineNumber":166,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":167,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":168,"author":{"gitId":"kktai1512"},"content":"    public void checkStock(String [] medicines) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":169,"author":{"gitId":"shxr3f"},"content":"        updateStockBackend();","lastModifiedDate":"2022-04-07"},{"lineNumber":170,"author":{"gitId":"shxr3f"},"content":"        CommandLineTable medicineTable \u003d new CommandLineTable();","lastModifiedDate":"2022-04-07"},{"lineNumber":171,"author":{"gitId":"shxr3f"},"content":"        medicineTable.setShowVerticalLines(true);","lastModifiedDate":"2022-04-07"},{"lineNumber":172,"author":{"gitId":"shxr3f"},"content":"        medicineTable.setHeaders(\"MedicineName\", \"Quantity\");","lastModifiedDate":"2022-04-07"},{"lineNumber":173,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":174,"author":{"gitId":"shxr3f"},"content":"        boolean hasShortage \u003d false;","lastModifiedDate":"2022-04-07"},{"lineNumber":175,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":176,"author":{"gitId":"shxr3f"},"content":"        for (int i \u003d 0; i \u003c medicines.length; i +\u003d 2) {","lastModifiedDate":"2022-04-07"},{"lineNumber":177,"author":{"gitId":"shxr3f"},"content":"            String medicineName \u003d medicines[i];","lastModifiedDate":"2022-04-07"},{"lineNumber":178,"author":{"gitId":"shxr3f"},"content":"            int quantity \u003d Integer.parseInt(medicines[i + 1]);","lastModifiedDate":"2022-04-07"},{"lineNumber":179,"author":{"gitId":"shxr3f"},"content":"            for (Medicine a : this.medicines) {","lastModifiedDate":"2022-04-07"},{"lineNumber":180,"author":{"gitId":"shxr3f"},"content":"                if (a.getMedicineName().equals(medicineName)) {","lastModifiedDate":"2022-04-07"},{"lineNumber":181,"author":{"gitId":"shxr3f"},"content":"                    quantity -\u003d a.getQuantity();","lastModifiedDate":"2022-04-07"},{"lineNumber":182,"author":{"gitId":"shxr3f"},"content":"                    if (quantity \u003c\u003d 0) {","lastModifiedDate":"2022-04-07"},{"lineNumber":183,"author":{"gitId":"shxr3f"},"content":"                        break;","lastModifiedDate":"2022-04-07"},{"lineNumber":184,"author":{"gitId":"shxr3f"},"content":"                    }","lastModifiedDate":"2022-04-07"},{"lineNumber":185,"author":{"gitId":"shxr3f"},"content":"                }","lastModifiedDate":"2022-04-07"},{"lineNumber":186,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-04-07"},{"lineNumber":187,"author":{"gitId":"shxr3f"},"content":"            if (quantity \u003e 0) {","lastModifiedDate":"2022-04-07"},{"lineNumber":188,"author":{"gitId":"shxr3f"},"content":"                medicineTable.addRow(medicineName,medicines[i + 1]);","lastModifiedDate":"2022-04-07"},{"lineNumber":189,"author":{"gitId":"shxr3f"},"content":"                hasShortage \u003d true;","lastModifiedDate":"2022-04-07"},{"lineNumber":190,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-04-07"},{"lineNumber":191,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":192,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":193,"author":{"gitId":"shxr3f"},"content":"        if (hasShortage) {","lastModifiedDate":"2022-04-07"},{"lineNumber":194,"author":{"gitId":"shxr3f"},"content":"            medicineTable.print();","lastModifiedDate":"2022-04-07"},{"lineNumber":195,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"The medicines mentioned on the table\"","lastModifiedDate":"2022-04-09"},{"lineNumber":196,"author":{"gitId":"shxr3f"},"content":"                    + \"above do not have enough stock to dispense!\");","lastModifiedDate":"2022-04-07"},{"lineNumber":197,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":198,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":199,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":200,"author":{"gitId":"shxr3f"},"content":"    public ArrayList\u003cMedicine\u003e getList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":201,"author":{"gitId":"shxr3f"},"content":"        return medicines;","lastModifiedDate":"2022-03-16"},{"lineNumber":202,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":203,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":204,"author":{"gitId":"wraineflores"},"content":"    public void findById(String[] parameters) {","lastModifiedDate":"2022-03-27"},{"lineNumber":205,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":206,"author":{"gitId":"wraineflores"},"content":"            this.returnedFinderArray \u003d MedicineFinder.findMedicineById(medicines, parameters[1]);","lastModifiedDate":"2022-03-27"},{"lineNumber":207,"author":{"gitId":"Anvitha-r"},"content":"            createArrayOfFoundMedicines();","lastModifiedDate":"2022-03-27"},{"lineNumber":208,"author":{"gitId":"wraineflores"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":209,"author":{"gitId":"wraineflores"},"content":"            UI.printParagraph(\"Medicine with given id doesn\u0027t exist. Please try again!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":210,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":211,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":212,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":213,"author":{"gitId":"wraineflores"},"content":"    public void findByDosage(String[] parameters) {","lastModifiedDate":"2022-03-27"},{"lineNumber":214,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":215,"author":{"gitId":"wraineflores"},"content":"            this.returnedFinderArray \u003d MedicineFinder.findMedicineByDosage(medicines, Integer.parseInt(parameters[1]));","lastModifiedDate":"2022-03-27"},{"lineNumber":216,"author":{"gitId":"Anvitha-r"},"content":"            createArrayOfFoundMedicines();","lastModifiedDate":"2022-03-27"},{"lineNumber":217,"author":{"gitId":"wraineflores"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":218,"author":{"gitId":"wraineflores"},"content":"            UI.printParagraph(\"Medicine with given dosage doesn\u0027t exist. Please try again!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":219,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":220,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":221,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":222,"author":{"gitId":"wraineflores"},"content":"    public void findByExpiry(String[] parameters) {","lastModifiedDate":"2022-03-27"},{"lineNumber":223,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":224,"author":{"gitId":"wraineflores"},"content":"            this.returnedFinderArray \u003d MedicineFinder.findMedicineByExpiry(medicines, parameters[1]);","lastModifiedDate":"2022-03-27"},{"lineNumber":225,"author":{"gitId":"Anvitha-r"},"content":"            createArrayOfFoundMedicines();","lastModifiedDate":"2022-03-27"},{"lineNumber":226,"author":{"gitId":"wraineflores"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":227,"author":{"gitId":"wraineflores"},"content":"            UI.printParagraph(\"Medicine with given expiry doesn\u0027t exist. Please try again!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":228,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":229,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":230,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":231,"author":{"gitId":"wraineflores"},"content":"    public void findBySideEffects(String[] parameters) {","lastModifiedDate":"2022-03-27"},{"lineNumber":232,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":233,"author":{"gitId":"wraineflores"},"content":"            this.returnedFinderArray \u003d MedicineFinder.findMedicineBySideEffects(medicines, parameters[1]);","lastModifiedDate":"2022-03-27"},{"lineNumber":234,"author":{"gitId":"Anvitha-r"},"content":"            createArrayOfFoundMedicines();","lastModifiedDate":"2022-03-27"},{"lineNumber":235,"author":{"gitId":"wraineflores"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":236,"author":{"gitId":"wraineflores"},"content":"            UI.printParagraph(\"Medicine with given side effects doesn\u0027t exist. Please try again!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":237,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":238,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":239,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":240,"author":{"gitId":"wraineflores"},"content":"    public void findByQuantity(String[] parameters) {","lastModifiedDate":"2022-03-27"},{"lineNumber":241,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":242,"author":{"gitId":"wraineflores"},"content":"            this.returnedFinderArray \u003d MedicineFinder.findMedicineByQuantity(medicines,","lastModifiedDate":"2022-03-27"},{"lineNumber":243,"author":{"gitId":"wraineflores"},"content":"                    Integer.parseInt(parameters[1]));","lastModifiedDate":"2022-03-27"},{"lineNumber":244,"author":{"gitId":"Anvitha-r"},"content":"            createArrayOfFoundMedicines();","lastModifiedDate":"2022-03-27"},{"lineNumber":245,"author":{"gitId":"wraineflores"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":246,"author":{"gitId":"wraineflores"},"content":"            UI.printParagraph(\"Medicine with given quantity doesn\u0027t exist. Please try again!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":247,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":248,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":249,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":250,"author":{"gitId":"wraineflores"},"content":"    public void findByName(String[] parameters) {","lastModifiedDate":"2022-03-27"},{"lineNumber":251,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":252,"author":{"gitId":"wraineflores"},"content":"            this.returnedFinderArray \u003d MedicineFinder.findMedicineByName(medicines, parameters[1]);","lastModifiedDate":"2022-03-27"},{"lineNumber":253,"author":{"gitId":"Anvitha-r"},"content":"            createArrayOfFoundMedicines();","lastModifiedDate":"2022-03-27"},{"lineNumber":254,"author":{"gitId":"wraineflores"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":255,"author":{"gitId":"wraineflores"},"content":"            UI.printParagraph(\"Medicine with given name doesn\u0027t exist. Please try again!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":256,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":257,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":258,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":259,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":260,"author":{"gitId":"Anvitha-r"},"content":"    private void createArrayOfFoundMedicines() {","lastModifiedDate":"2022-03-27"},{"lineNumber":261,"author":{"gitId":"Anvitha-r"},"content":"        if (returnedFinderArray.isEmpty()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":262,"author":{"gitId":"Anvitha-r"},"content":"            UI.printParagraph(\"Medicine doesn\u0027t exist please try again!\");","lastModifiedDate":"2022-03-27"},{"lineNumber":263,"author":{"gitId":"Anvitha-r"},"content":"        } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":264,"author":{"gitId":"Anvitha-r"},"content":"            CommandLineTable findMedicineTable \u003d new CommandLineTable();","lastModifiedDate":"2022-03-27"},{"lineNumber":265,"author":{"gitId":"Anvitha-r"},"content":"            for (int i \u003d 0; i \u003c returnedFinderArray.size(); i++) {","lastModifiedDate":"2022-03-27"},{"lineNumber":266,"author":{"gitId":"Anvitha-r"},"content":"                findMedicineTable.setShowVerticalLines(true);","lastModifiedDate":"2022-03-27"},{"lineNumber":267,"author":{"gitId":"Anvitha-r"},"content":"                findMedicineTable.setHeaders(\"MedicineId\", \"MedicineName\", \"Dosage\", \"Expiry\",","lastModifiedDate":"2022-03-27"},{"lineNumber":268,"author":{"gitId":"Anvitha-r"},"content":"                        \"SideEffects\", \"Quantity\");","lastModifiedDate":"2022-03-27"},{"lineNumber":269,"author":{"gitId":"Anvitha-r"},"content":"                findMedicineTable.addRow(returnedFinderArray.get(i).getMedicineId(),","lastModifiedDate":"2022-03-27"},{"lineNumber":270,"author":{"gitId":"Anvitha-r"},"content":"                        returnedFinderArray.get(i).getMedicineName(),","lastModifiedDate":"2022-03-27"},{"lineNumber":271,"author":{"gitId":"Anvitha-r"},"content":"                        String.valueOf(returnedFinderArray.get(i).getDosage()),","lastModifiedDate":"2022-03-27"},{"lineNumber":272,"author":{"gitId":"Anvitha-r"},"content":"                        returnedFinderArray.get(i).getExpiry(), returnedFinderArray.get(i).getSideEffects(),","lastModifiedDate":"2022-03-27"},{"lineNumber":273,"author":{"gitId":"Anvitha-r"},"content":"                        String.valueOf(returnedFinderArray.get(i).getQuantity()));","lastModifiedDate":"2022-03-27"},{"lineNumber":274,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":275,"author":{"gitId":"Anvitha-r"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":276,"author":{"gitId":"Anvitha-r"},"content":"            findMedicineTable.print();","lastModifiedDate":"2022-03-27"},{"lineNumber":277,"author":{"gitId":"Anvitha-r"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":278,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":279,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":280,"author":{"gitId":"shxr3f"},"content":"    public void dispenseMedicine(String[] medicineArray) {","lastModifiedDate":"2022-04-07"},{"lineNumber":281,"author":{"gitId":"shxr3f"},"content":"        CommandLineTable medicineTable \u003d new CommandLineTable();","lastModifiedDate":"2022-04-07"},{"lineNumber":282,"author":{"gitId":"shxr3f"},"content":"        medicineTable.setShowVerticalLines(true);","lastModifiedDate":"2022-04-07"},{"lineNumber":283,"author":{"gitId":"shxr3f"},"content":"        medicineTable.setHeaders(\"MedicineId\", \"MedicineName\", \"Expiry\", \"Quantity\");","lastModifiedDate":"2022-04-07"},{"lineNumber":284,"author":{"gitId":"shxr3f"},"content":"        medicines.sort(new ExpiryComparator());","lastModifiedDate":"2022-04-07"},{"lineNumber":285,"author":{"gitId":"shxr3f"},"content":"        for (int i \u003d 0; i \u003c medicineArray.length; i +\u003d 2) {","lastModifiedDate":"2022-04-07"},{"lineNumber":286,"author":{"gitId":"shxr3f"},"content":"            String medicineName \u003d medicineArray[i];","lastModifiedDate":"2022-04-07"},{"lineNumber":287,"author":{"gitId":"shxr3f"},"content":"            int quantity \u003d Integer.parseInt(medicineArray[i + 1]);","lastModifiedDate":"2022-04-07"},{"lineNumber":288,"author":{"gitId":"shxr3f"},"content":"            for (Medicine a : this.medicines) {","lastModifiedDate":"2022-04-07"},{"lineNumber":289,"author":{"gitId":"shxr3f"},"content":"                if (a.getMedicineName().equals(medicineName)) {","lastModifiedDate":"2022-04-07"},{"lineNumber":290,"author":{"gitId":"shxr3f"},"content":"                    int quantityTaken \u003d (quantity \u003e a.getQuantity()) ? a.getQuantity() : quantity;","lastModifiedDate":"2022-04-07"},{"lineNumber":291,"author":{"gitId":"shxr3f"},"content":"                    quantity \u003d (quantity \u003e quantityTaken) ? quantity - quantityTaken : 0;","lastModifiedDate":"2022-04-07"},{"lineNumber":292,"author":{"gitId":"shxr3f"},"content":"                    a.quantity \u003d (a.getQuantity() \u003e quantityTaken) ? a.getQuantity() - quantityTaken : 0;","lastModifiedDate":"2022-04-07"},{"lineNumber":293,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":294,"author":{"gitId":"shxr3f"},"content":"                    medicineTable.addRow(a.getMedicineId(), a.getMedicineName(), a.getExpiry(),","lastModifiedDate":"2022-04-07"},{"lineNumber":295,"author":{"gitId":"shxr3f"},"content":"                            String.valueOf(quantityTaken));","lastModifiedDate":"2022-04-07"},{"lineNumber":296,"author":{"gitId":"shxr3f"},"content":"                }","lastModifiedDate":"2022-04-07"},{"lineNumber":297,"author":{"gitId":"shxr3f"},"content":"                if (quantity \u003d\u003d 0) {","lastModifiedDate":"2022-04-07"},{"lineNumber":298,"author":{"gitId":"shxr3f"},"content":"                    break;","lastModifiedDate":"2022-04-07"},{"lineNumber":299,"author":{"gitId":"shxr3f"},"content":"                }","lastModifiedDate":"2022-04-07"},{"lineNumber":300,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-04-07"},{"lineNumber":301,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":302,"author":{"gitId":"tanweili"},"content":"        medicineTable.print();","lastModifiedDate":"2022-04-09"},{"lineNumber":303,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":304,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-04-07"},{"lineNumber":305,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"tanweili":4,"wraineflores":64,"Anvitha-r":64,"shxr3f":162,"kktai1512":11}},{"path":"src/main/java/seedu/duke/assets/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Anvitha-r"},"content":"package seedu.duke.assets;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":"public class Patient extends Person {","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"Anvitha-r"},"content":"    String dateAdmission;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"    public Patient(String nric, String fullName, int age, char gender, String address, String dob,","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"                   String dateAdmission) {","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"        super(nric, fullName, age, gender, address, dob);","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"        this.dateAdmission \u003d dateAdmission;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"kktai1512"},"content":"    public String getDateAdmission() {","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"        return dateAdmission;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"Anvitha-r"},"content":"    public void edit(String fullName, int age, String address, char gender, String dob,","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"Anvitha-r"},"content":"                     String dateAdmission) {","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"Anvitha-r"},"content":"        //this.nric \u003d nric;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"Anvitha-r"},"content":"        this.fullName \u003d fullName;","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"Anvitha-r"},"content":"        this.age \u003d age;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"Anvitha-r"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"Anvitha-r"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"Anvitha-r"},"content":"        this.dob \u003d dob;","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"Anvitha-r"},"content":"        this.dateAdmission \u003d dateAdmission;","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"Anvitha-r"},"content":"    public String getPatientNric() {","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"Anvitha-r"},"content":"        return nric;","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"Anvitha-r"},"content":"    public String getPatientName() {","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"Anvitha-r"},"content":"        return fullName;","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"Anvitha-r"},"content":"    public int getPatientAge() {","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"Anvitha-r"},"content":"        return age;","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"Anvitha-r"},"content":"    public char getPatientGender() {","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"Anvitha-r"},"content":"        return gender;","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"Anvitha-r"},"content":"    public String getPatientAddress() {","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"Anvitha-r"},"content":"        return address;","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"Anvitha-r"},"content":"    public String getPatientDob() {","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"Anvitha-r"},"content":"        return dob;","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"Anvitha-r"},"content":"    public String getDateOfAdmission() {","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"Anvitha-r"},"content":"        return dateAdmission;","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"shxr3f"},"content":"    public String saveString() {","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"shxr3f"},"content":"        return nric + \",\" + fullName + \",\" + age + \",\" + gender + \",\" + address","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"Anvitha-r"},"content":"                + \",\" +  dob + \",\" + dateAdmission;","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"Anvitha-r"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"wraineflores":1,"Anvitha-r":47,"shxr3f":5,"kktai1512":7}},{"path":"src/main/java/seedu/duke/assets/PatientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"package seedu.duke.assets;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.DuplicateEntryException;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.exception.UserInputErrorException;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.NotFoundException;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"Anvitha-r"},"content":"import seedu.duke.helper.CommandLineTable;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":"import seedu.duke.helper.UI;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"wraineflores"},"content":"import seedu.duke.helper.finder.PatientFinder;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"public class PatientList extends List {","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":"    private ArrayList\u003cPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"wraineflores"},"content":"    private ArrayList\u003cPatient\u003e returnedFinderArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"kktai1512"},"content":"    public Patient getPatient(String nric) {","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"tanweili"},"content":"        for (Patient patient : patients) {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"kktai1512"},"content":"            if (patient.getNric().equals(nric)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"kktai1512"},"content":"                return patient;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"kktai1512"},"content":"            }","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"kktai1512"},"content":"        return null;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"Anvitha-r"},"content":"    public Patient search(String nric) {","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"Anvitha-r"},"content":"        for (Patient patient : patients) {","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"Anvitha-r"},"content":"            if (patient.getPatientNric().equals(nric)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"Anvitha-r"},"content":"                return patient;","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"Anvitha-r"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"Anvitha-r"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"Anvitha-r"},"content":"        return null;","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"shxr3f"},"content":"    public void add(String[] addPatientParameters) throws DuplicateEntryException {","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"Anvitha-r"},"content":"        final int numberOfPatientsBefore \u003d patients.size();","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"shxr3f"},"content":"        if (getPatient(addPatientParameters[0]) !\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"shxr3f"},"content":"            throw new DuplicateEntryException(\"Patient with given NRIC already exists!\");","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"tanweili"},"content":"        Patient newPatient \u003d new Patient(addPatientParameters[0], addPatientParameters[1],","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"Anvitha-r"},"content":"                Integer.parseInt(addPatientParameters[2]),","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"shxr3f"},"content":"                addPatientParameters[3].charAt(0), addPatientParameters[4], addPatientParameters[5],","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"Anvitha-r"},"content":"                addPatientParameters[6]);","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"tanweili"},"content":"        patients.add(newPatient);","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"tanweili"},"content":"        assert patients.size() \u003d\u003d numberOfPatientsBefore + 1;","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"Anvitha-r"},"content":"    public String getPatientInfo(Patient patient) {","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"Anvitha-r"},"content":"        return (patient.getPatientNric() + \": \"","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"Anvitha-r"},"content":"                + patient.getPatientName() + \", \"","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"Anvitha-r"},"content":"                + Integer.toString(patient.getPatientAge()) + \", \" + patient.getPatientAddress()","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"Anvitha-r"},"content":"                + \", \" + patient.getPatientGender() + \", \" + patient.getPatientDob()","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"Anvitha-r"},"content":"                + \", \" + patient.getDateOfAdmission());","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"tanweili"},"content":"    public int getSize() {","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"tanweili"},"content":"        return patients.size();","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"Anvitha-r"},"content":"    //view particular patient","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"kktai1512"},"content":"    public void view(String nric) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":64,"author":{"gitId":"Anvitha-r"},"content":"        Patient patient \u003d getPatient(nric);","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"Anvitha-r"},"content":"        if (patient \u003d\u003d null) {","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Patient doesn\u0027t exist please try again!\");","lastModifiedDate":"2022-04-09"},{"lineNumber":67,"author":{"gitId":"Anvitha-r"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"Anvitha-r"},"content":"        CommandLineTable patientTable \u003d new CommandLineTable();","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"Anvitha-r"},"content":"        patientTable.setShowVerticalLines(true);//if false (default) then no vertical lines are shown","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"Anvitha-r"},"content":"        patientTable.setHeaders(\"Nric\", \"FullName\", \"Age\", \"Address\", \"Gender\", \"Dob\",","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"tanweili"},"content":"                \"DateRegistration\");","lastModifiedDate":"2022-04-09"},{"lineNumber":72,"author":{"gitId":"Anvitha-r"},"content":"        patientTable.addRow(patient.getPatientNric(), patient.getPatientName(),","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"Anvitha-r"},"content":"                String.valueOf(patient.getPatientAge()),","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"Anvitha-r"},"content":"                patient.getPatientAddress(), String.valueOf(patient.getPatientGender()),","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"Anvitha-r"},"content":"                patient.getPatientDob(),","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"Anvitha-r"},"content":"                patient.getDateOfAdmission());","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"Anvitha-r"},"content":"        patientTable.print();","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"Anvitha-r"},"content":"    //view all patients","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"kktai1512"},"content":"    public void view() throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":83,"author":{"gitId":"Anvitha-r"},"content":"        CommandLineTable patientTable \u003d new CommandLineTable();","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"Anvitha-r"},"content":"        //st.setRightAlign(true);//if true then cell text is right aligned","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"Anvitha-r"},"content":"        patientTable.setShowVerticalLines(true);//if false (default) then no vertical lines are shown","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"Anvitha-r"},"content":"        patientTable.setHeaders(\"Nric\", \"FullName\", \"Age\", \"Address\", \"Gender\", \"Dob\",","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"tanweili"},"content":"                \"DateRegistration\");","lastModifiedDate":"2022-04-09"},{"lineNumber":88,"author":{"gitId":"Anvitha-r"},"content":"        if (patients.size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Patient list is empty, please add patient\");","lastModifiedDate":"2022-04-09"},{"lineNumber":90,"author":{"gitId":"Anvitha-r"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"Anvitha-r"},"content":"        for (Patient patient : patients) {","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"Anvitha-r"},"content":"            patientTable.addRow(patient.getPatientNric(), patient.getPatientName(),","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"Anvitha-r"},"content":"                    String.valueOf(patient.getPatientAge()),","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"Anvitha-r"},"content":"                    patient.getPatientAddress(), String.valueOf(patient.getPatientGender()),","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"Anvitha-r"},"content":"                    patient.getPatientDob(),","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"Anvitha-r"},"content":"                    patient.getDateOfAdmission());","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"Anvitha-r"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"Anvitha-r"},"content":"        patientTable.print();","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"shxr3f"},"content":"    public void remove(String nric) throws NotFoundException {","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"tanweili"},"content":"        int numberOfPatientsBefore \u003d patients.size();","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"shxr3f"},"content":"        for (int i \u003d 0; i \u003c getSize(); i++) {","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"shxr3f"},"content":"            if (patients.get(i).getNric().equals(nric)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"shxr3f"},"content":"                patients.remove(i);","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"tanweili"},"content":"                assert patients.size() \u003d\u003d numberOfPatientsBefore - 1;","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"shxr3f"},"content":"                return;","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"shxr3f"},"content":"        throw new NotFoundException(\"There are no patients with given NRIC!\");","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"Anvitha-r"},"content":"    public void edit(String[] parameterArray) throws NotFoundException {","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"Anvitha-r"},"content":"        if (search(parameterArray[0]) !\u003d null) {","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"Anvitha-r"},"content":"            Patient patient \u003d search(parameterArray[0]);","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"Anvitha-r"},"content":"            patient.edit(parameterArray[1], Integer.parseInt(parameterArray[2]), parameterArray[3],","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"Anvitha-r"},"content":"                    (parameterArray[4].charAt(0)), parameterArray[5], parameterArray[6]);","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"Anvitha-r"},"content":"            return;","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"Anvitha-r"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"Anvitha-r"},"content":"        throw new NotFoundException(\"There are no patients with given NRIC!\");","lastModifiedDate":"2022-03-26"},{"lineNumber":121,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":122,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":123,"author":{"gitId":"shxr3f"},"content":"    public ArrayList\u003cPatient\u003e getList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"shxr3f"},"content":"        return patients;","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"tanweili"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"tanweili"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"tanweili"},"content":"        if (getSize() \u003d\u003d 0) {","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"tanweili"},"content":"            return \"There are no patients currently.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"kktai1512"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"kktai1512"},"content":"        int number \u003d 1;","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"kktai1512"},"content":"        for (Patient patient : this.patients) {","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"kktai1512"},"content":"            output +\u003d String.format(\"%d. %s\", number, patient.toString());","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"kktai1512"},"content":"            if (number !\u003d this.getSize()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"kktai1512"},"content":"                output +\u003d \"\\n\";","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"kktai1512"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":139,"author":{"gitId":"kktai1512"},"content":"            number++;","lastModifiedDate":"2022-03-15"},{"lineNumber":140,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":141,"author":{"gitId":"tanweili"},"content":"        assert !output.isEmpty();","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"kktai1512"},"content":"        return output;","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"wraineflores"},"content":"    public void findByNric(String[] parameters) {","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":147,"author":{"gitId":"wraineflores"},"content":"            this.returnedFinderArray \u003d PatientFinder.findPatientByNric(patients, parameters[1]);","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"wraineflores"},"content":"            displayFoundPatientList();","lastModifiedDate":"2022-04-07"},{"lineNumber":149,"author":{"gitId":"wraineflores"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"wraineflores"},"content":"            UI.printParagraph(\"Patient with given NRIC doesn\u0027t exist. Please try again!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":151,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":152,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"wraineflores"},"content":"    public void findByName(String[] parameters) {","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":156,"author":{"gitId":"wraineflores"},"content":"            this.returnedFinderArray \u003d PatientFinder.findPatientByName(patients, parameters[1]);","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"wraineflores"},"content":"            displayFoundPatientList();","lastModifiedDate":"2022-04-07"},{"lineNumber":158,"author":{"gitId":"wraineflores"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":159,"author":{"gitId":"wraineflores"},"content":"            UI.printParagraph(\"Patient with given name doesn\u0027t exist. Please try again!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":161,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":162,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"wraineflores"},"content":"    public void findByAge(String[] parameters) {","lastModifiedDate":"2022-03-27"},{"lineNumber":164,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":165,"author":{"gitId":"wraineflores"},"content":"            this.returnedFinderArray \u003d PatientFinder.findPatientByAge(patients, Integer.parseInt(parameters[1]));","lastModifiedDate":"2022-03-27"},{"lineNumber":166,"author":{"gitId":"wraineflores"},"content":"            displayFoundPatientList();","lastModifiedDate":"2022-04-07"},{"lineNumber":167,"author":{"gitId":"wraineflores"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":168,"author":{"gitId":"wraineflores"},"content":"            UI.printParagraph(\"Patient with given age doesn\u0027t exist. Please try again!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":169,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":170,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":171,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":172,"author":{"gitId":"wraineflores"},"content":"    public void findByGender(String[] parameters) {","lastModifiedDate":"2022-03-27"},{"lineNumber":173,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":174,"author":{"gitId":"wraineflores"},"content":"            this.returnedFinderArray \u003d PatientFinder.findPatientByGender(patients, parameters[1].charAt(0));","lastModifiedDate":"2022-03-27"},{"lineNumber":175,"author":{"gitId":"wraineflores"},"content":"            displayFoundPatientList();","lastModifiedDate":"2022-04-07"},{"lineNumber":176,"author":{"gitId":"wraineflores"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":177,"author":{"gitId":"wraineflores"},"content":"            UI.printParagraph(\"Patient with given gender doesn\u0027t exist. Please try again!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":178,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":179,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":180,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":181,"author":{"gitId":"wraineflores"},"content":"    public void findByAddress(String[] parameters) {","lastModifiedDate":"2022-03-27"},{"lineNumber":182,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":183,"author":{"gitId":"wraineflores"},"content":"            this.returnedFinderArray \u003d PatientFinder.findPatientByAddress(patients, parameters[1]);","lastModifiedDate":"2022-03-27"},{"lineNumber":184,"author":{"gitId":"wraineflores"},"content":"            displayFoundPatientList();","lastModifiedDate":"2022-04-07"},{"lineNumber":185,"author":{"gitId":"wraineflores"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":186,"author":{"gitId":"wraineflores"},"content":"            UI.printParagraph(\"Patient with given address doesn\u0027t exist. Please try again!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":187,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":188,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":189,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":190,"author":{"gitId":"wraineflores"},"content":"    public void findByDob(String[] parameters) {","lastModifiedDate":"2022-03-27"},{"lineNumber":191,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":192,"author":{"gitId":"wraineflores"},"content":"            this.returnedFinderArray \u003d PatientFinder.findPatientByDob(patients, parameters[1]);","lastModifiedDate":"2022-03-27"},{"lineNumber":193,"author":{"gitId":"wraineflores"},"content":"            displayFoundPatientList();","lastModifiedDate":"2022-04-07"},{"lineNumber":194,"author":{"gitId":"wraineflores"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":195,"author":{"gitId":"wraineflores"},"content":"            UI.printParagraph(\"Patient with given DOB doesn\u0027t exist. Please try again!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":197,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":198,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":199,"author":{"gitId":"wraineflores"},"content":"    public void findByDateAdmission(String[] parameters) {","lastModifiedDate":"2022-03-27"},{"lineNumber":200,"author":{"gitId":"wraineflores"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":201,"author":{"gitId":"wraineflores"},"content":"            this.returnedFinderArray \u003d PatientFinder.findPatientByDateAdmission(patients, parameters[1]);","lastModifiedDate":"2022-03-27"},{"lineNumber":202,"author":{"gitId":"wraineflores"},"content":"            displayFoundPatientList();","lastModifiedDate":"2022-04-07"},{"lineNumber":203,"author":{"gitId":"wraineflores"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":204,"author":{"gitId":"tanweili"},"content":"            UI.printParagraph(\"Patient with given registration date doesn\u0027t exist. Please try again!\");","lastModifiedDate":"2022-04-09"},{"lineNumber":205,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":206,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":207,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":208,"author":{"gitId":"wraineflores"},"content":"    private void displayFoundPatientList() {","lastModifiedDate":"2022-04-07"},{"lineNumber":209,"author":{"gitId":"wraineflores"},"content":"        if (returnedFinderArray.isEmpty()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":210,"author":{"gitId":"wraineflores"},"content":"            UI.printParagraph(\"Patient doesn\u0027t exist please try again!\");","lastModifiedDate":"2022-03-27"},{"lineNumber":211,"author":{"gitId":"wraineflores"},"content":"        } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":212,"author":{"gitId":"Anvitha-r"},"content":"            CommandLineTable findPatientTable \u003d new CommandLineTable();","lastModifiedDate":"2022-03-27"},{"lineNumber":213,"author":{"gitId":"Anvitha-r"},"content":"            for (int i \u003d 0; i \u003c returnedFinderArray.size(); i++) {","lastModifiedDate":"2022-03-27"},{"lineNumber":214,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":215,"author":{"gitId":"Anvitha-r"},"content":"                findPatientTable.setShowVerticalLines(true);","lastModifiedDate":"2022-03-27"},{"lineNumber":216,"author":{"gitId":"Anvitha-r"},"content":"                findPatientTable.setHeaders(\"Nric\", \"Full Name\", \"Age\", \"Address\", \"Gender\", \"Dob\",","lastModifiedDate":"2022-03-27"},{"lineNumber":217,"author":{"gitId":"tanweili"},"content":"                        \"Registration Date\");","lastModifiedDate":"2022-04-09"},{"lineNumber":218,"author":{"gitId":"Anvitha-r"},"content":"                findPatientTable.addRow(returnedFinderArray.get(i).getNric(),","lastModifiedDate":"2022-03-27"},{"lineNumber":219,"author":{"gitId":"Anvitha-r"},"content":"                        returnedFinderArray.get(i).getFullName(),","lastModifiedDate":"2022-03-27"},{"lineNumber":220,"author":{"gitId":"Anvitha-r"},"content":"                        String.valueOf(returnedFinderArray.get(i).getAge()),","lastModifiedDate":"2022-03-27"},{"lineNumber":221,"author":{"gitId":"Anvitha-r"},"content":"                        returnedFinderArray.get(i).getAddress(),","lastModifiedDate":"2022-03-27"},{"lineNumber":222,"author":{"gitId":"Anvitha-r"},"content":"                        String.valueOf(returnedFinderArray.get(i).getGender()),","lastModifiedDate":"2022-03-27"},{"lineNumber":223,"author":{"gitId":"Anvitha-r"},"content":"                        returnedFinderArray.get(i).getDob(),","lastModifiedDate":"2022-03-27"},{"lineNumber":224,"author":{"gitId":"Anvitha-r"},"content":"                        returnedFinderArray.get(i).getDateAdmission());","lastModifiedDate":"2022-03-27"},{"lineNumber":225,"author":{"gitId":"kktai1512"},"content":"            }","lastModifiedDate":"2022-03-09"},{"lineNumber":226,"author":{"gitId":"Anvitha-r"},"content":"            findPatientTable.print();","lastModifiedDate":"2022-03-27"},{"lineNumber":227,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":228,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":229,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":230,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-03-27"},{"lineNumber":231,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"tanweili":25,"wraineflores":75,"Anvitha-r":76,"shxr3f":24,"kktai1512":31}},{"path":"src/main/java/seedu/duke/assets/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"package seedu.duke.assets;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"public abstract class Person {","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"    protected String nric;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"    protected String fullName;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"    protected int age;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"    protected String address;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"Anvitha-r"},"content":"    protected char gender;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"    protected String dob;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"    public Person(String nric, String fullName, int age, char gender, String address, String dob) {","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"wraineflores"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"wraineflores"},"content":"        this.fullName \u003d fullName;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"wraineflores"},"content":"        this.age \u003d age;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"wraineflores"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"Anvitha-r"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"wraineflores"},"content":"        this.dob \u003d dob;","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"wraineflores"},"content":"    public String getNric() {","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"wraineflores"},"content":"        return nric;","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"wraineflores"},"content":"    public String getFullName() {","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"wraineflores"},"content":"        return fullName;","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"wraineflores"},"content":"    public int getAge() {","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"wraineflores"},"content":"        return age;","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"wraineflores"},"content":"    public char getGender() {","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"wraineflores"},"content":"        return gender;","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"wraineflores"},"content":"    public String getAddress() {","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"wraineflores"},"content":"        return address;","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"wraineflores"},"content":"    public String getDob() {","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"wraineflores"},"content":"        return dob;","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"wraineflores":34,"Anvitha-r":2,"shxr3f":7}},{"path":"src/main/java/seedu/duke/exception/DuplicateEntryException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.exception;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"public class DuplicateEntryException extends HalpmiException {","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"    public DuplicateEntryException(String message) {","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"        super(message);","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"shxr3f":8,"kktai1512":1}},{"path":"src/main/java/seedu/duke/exception/HalpmiException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"package seedu.duke.exception;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"public class HalpmiException extends Exception {","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"    public HalpmiException(String message) {","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"        super(message);","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"    public String toString() {","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"        return getMessage();","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"kktai1512"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"kktai1512":13}},{"path":"src/main/java/seedu/duke/exception/NotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.exception;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"public class NotFoundException extends HalpmiException {","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"    public NotFoundException(String message) {","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"        super(message);","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"shxr3f":8,"kktai1512":2}},{"path":"src/main/java/seedu/duke/exception/UserInputErrorException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"package seedu.duke.exception;","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"public class UserInputErrorException extends HalpmiException {","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"    public UserInputErrorException(String message) {","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"        super(message);","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"}","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"kktai1512":8}},{"path":"src/main/java/seedu/duke/helper/CommandLineTable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Anvitha-r"},"content":"package seedu.duke.helper;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"Anvitha-r"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"Anvitha-r"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"Anvitha-r"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"Anvitha-r"},"content":"import java.util.List;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"Anvitha-r"},"content":"public class CommandLineTable {","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"Anvitha-r"},"content":"    private static final String HORIZONTAL_SEP \u003d \"-\";","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"Anvitha-r"},"content":"    private String verticalSep;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"Anvitha-r"},"content":"    private String joinSep;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"Anvitha-r"},"content":"    private String[] headers;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"Anvitha-r"},"content":"    private List\u003cString[]\u003e rows \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"Anvitha-r"},"content":"    private boolean rightAlign;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"Anvitha-r"},"content":"    public CommandLineTable() {","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"Anvitha-r"},"content":"        setShowVerticalLines(false);","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"Anvitha-r"},"content":"    public void setRightAlign(boolean rightAlign) {","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"Anvitha-r"},"content":"        this.rightAlign \u003d rightAlign;","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"Anvitha-r"},"content":"    public void setShowVerticalLines(boolean showVerticalLines) {","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"Anvitha-r"},"content":"        verticalSep \u003d showVerticalLines ? \"|\" : \"\";","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"Anvitha-r"},"content":"        joinSep \u003d showVerticalLines ? \"+\" : \" \";","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"Anvitha-r"},"content":"    public void setHeaders(String... headers) {","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"Anvitha-r"},"content":"        this.headers \u003d headers;","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"Anvitha-r"},"content":"    public void addRow(String... cells) {","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"Anvitha-r"},"content":"        rows.add(cells);","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"Anvitha-r"},"content":"    public void print() {","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"Anvitha-r"},"content":"        int[] maxWidths \u003d headers !\u003d null","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"Anvitha-r"},"content":"                ? Arrays.stream(headers).mapToInt(String::length).toArray() : null;","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"Anvitha-r"},"content":"        for (String[] cells : rows) {","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"Anvitha-r"},"content":"            if (maxWidths \u003d\u003d null) {","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"Anvitha-r"},"content":"                maxWidths \u003d new int[cells.length];","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"Anvitha-r"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"Anvitha-r"},"content":"            if (cells.length !\u003d maxWidths.length) {","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"Anvitha-r"},"content":"                throw new IllegalArgumentException(\"Number of row-cells and headers should be consistent\");","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"Anvitha-r"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"Anvitha-r"},"content":"            for (int i \u003d 0; i \u003c cells.length; i++) {","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"Anvitha-r"},"content":"                maxWidths[i] \u003d Math.max(maxWidths[i], cells[i].length());","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"Anvitha-r"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"Anvitha-r"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"Anvitha-r"},"content":"        if (headers !\u003d null) {","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"Anvitha-r"},"content":"            printLine(maxWidths);","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"Anvitha-r"},"content":"            printRow(headers, maxWidths);","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"Anvitha-r"},"content":"            printLine(maxWidths);","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"Anvitha-r"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"Anvitha-r"},"content":"        for (String[] cells : rows) {","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"Anvitha-r"},"content":"            printRow(cells, maxWidths);","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"Anvitha-r"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"Anvitha-r"},"content":"        if (headers !\u003d null) {","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"Anvitha-r"},"content":"            printLine(maxWidths);","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"Anvitha-r"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"Anvitha-r"},"content":"    private void printLine(int[] columnWidths) {","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"Anvitha-r"},"content":"        for (int i \u003d 0; i \u003c columnWidths.length; i++) {","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"Anvitha-r"},"content":"            String line \u003d String.join(\"\", Collections.nCopies(columnWidths[i]","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"Anvitha-r"},"content":"                    + verticalSep.length() + 1, HORIZONTAL_SEP));","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"Anvitha-r"},"content":"            System.out.print(joinSep + line + (i \u003d\u003d columnWidths.length - 1 ? joinSep : \"\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"Anvitha-r"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"Anvitha-r"},"content":"        System.out.println();","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"Anvitha-r"},"content":"    private void printRow(String[] cells, int[] maxWidths) {","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"Anvitha-r"},"content":"        for (int i \u003d 0; i \u003c cells.length; i++) {","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"Anvitha-r"},"content":"            String s \u003d cells[i];","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"Anvitha-r"},"content":"            String verStrTemp \u003d i \u003d\u003d cells.length - 1 ? verticalSep : \"\";","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"Anvitha-r"},"content":"            if (rightAlign) {","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"Anvitha-r"},"content":"                System.out.printf(\"%s %\" + maxWidths[i] + \"s %s\", verticalSep, s, verStrTemp);","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"Anvitha-r"},"content":"            } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"Anvitha-r"},"content":"                System.out.printf(\"%s %-\" + maxWidths[i] + \"s %s\", verticalSep, s, verStrTemp);","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"Anvitha-r"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"Anvitha-r"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"Anvitha-r"},"content":"        System.out.println();","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"Anvitha-r"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"Anvitha-r":87}},{"path":"src/main/java/seedu/duke/helper/IdGenerator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package seedu.duke.helper;","lastModifiedDate":"2022-04-05"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"public class IdGenerator {","lastModifiedDate":"2022-04-05"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"    public static String createAppointmentId(String patientNric, String doctorNric, String appointmentDate) {","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"        String patientNricCode \u003d patientNric.substring(1,4) + patientNric.substring(5,8);","lastModifiedDate":"2022-04-05"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"        String doctorNricCode \u003d doctorNric.substring(2,6);","lastModifiedDate":"2022-04-05"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"        String appointmentDateCode \u003d appointmentDate.replace(\"-\",\"\").substring(4,8);","lastModifiedDate":"2022-04-05"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":"        return patientNricCode + appointmentDateCode + doctorNricCode;","lastModifiedDate":"2022-04-05"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-04-05"}],"authorContributionMap":{"tanweili":10}},{"path":"src/main/java/seedu/duke/helper/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Anvitha-r"},"content":"package seedu.duke.helper;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.exception.UserInputErrorException;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.command.AddAppointmentCommand;","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.command.AddDoctorCommand;","lastModifiedDate":"2022-04-05"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.command.AddMedicineCommand;","lastModifiedDate":"2022-04-05"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.command.AddPatientCommand;","lastModifiedDate":"2022-04-05"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.helper.command.CheckIfAppointmentTodayCommand;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.command.CheckIfDoctorExistsCommand;","lastModifiedDate":"2022-04-05"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.command.CheckIfPatientExistsCommand;","lastModifiedDate":"2022-04-05"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.command.ClearExpiredMedicineCommand;","lastModifiedDate":"2022-04-05"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.command.Command;","lastModifiedDate":"2022-04-05"},{"lineNumber":13,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.command.DeleteAppointmentCommand;","lastModifiedDate":"2022-04-05"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.command.DeleteDoctorCommand;","lastModifiedDate":"2022-04-05"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.command.DeleteMedicineCommand;","lastModifiedDate":"2022-04-05"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.command.DeletePatientCommand;","lastModifiedDate":"2022-04-05"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.helper.command.DispenseMedicineCommand;","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.command.EditAppointmentCommand;","lastModifiedDate":"2022-04-05"},{"lineNumber":19,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.command.EditDoctorCommand;","lastModifiedDate":"2022-04-05"},{"lineNumber":20,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.command.EditMedicineCommand;","lastModifiedDate":"2022-04-05"},{"lineNumber":21,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.command.EditPatientCommand;","lastModifiedDate":"2022-04-05"},{"lineNumber":22,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.command.FindAppointmentCommand;","lastModifiedDate":"2022-04-05"},{"lineNumber":23,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.command.FindDoctorCommand;","lastModifiedDate":"2022-04-05"},{"lineNumber":24,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.command.FindMedicineCommand;","lastModifiedDate":"2022-04-05"},{"lineNumber":25,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.command.FindPatientCommand;","lastModifiedDate":"2022-04-05"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.helper.command.CheckForMedicineStockCommand;","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.command.UpdateMedicineInventoryCommand;","lastModifiedDate":"2022-04-05"},{"lineNumber":28,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.command.ViewAppointmentCommand;","lastModifiedDate":"2022-04-05"},{"lineNumber":29,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.command.ViewDoctorCommand;","lastModifiedDate":"2022-04-05"},{"lineNumber":30,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.command.ViewMedicineCommand;","lastModifiedDate":"2022-04-05"},{"lineNumber":31,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.command.ViewPatientCommand;","lastModifiedDate":"2022-04-05"},{"lineNumber":32,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"Anvitha-r"},"content":"public class Parser {","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"kktai1512"},"content":"    public static String[] commandParser(String userInput) {","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"shxr3f"},"content":"        return userInput.trim().split(\"/info\");","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"kktai1512"},"content":"    private static String[] stringSplitter(String parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"kktai1512"},"content":"        try {","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"kktai1512"},"content":"            String[] parametersArray \u003d parameters.split(\",\");","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"kktai1512"},"content":"            for (int i \u003d 0; i \u003c parametersArray.length; i++) {","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"kktai1512"},"content":"                parametersArray[i] \u003d parametersArray[i].trim();","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"tanweili"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"kktai1512"},"content":"            return parametersArray;","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"kktai1512"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"There is one or more parameters missing\");","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"shxr3f"},"content":"    private static boolean isNull(String string) {","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"shxr3f"},"content":"        return string \u003d\u003d null;","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"kktai1512"},"content":"    public static Command parseAddPatient(String parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":56,"author":{"gitId":"kktai1512"},"content":"        String[] addPatientParameters \u003d stringSplitter(parameters);","lastModifiedDate":"2022-04-09"},{"lineNumber":57,"author":{"gitId":"kktai1512"},"content":"        Validator.validateAddPatient(addPatientParameters);","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"shxr3f"},"content":"        return new AddPatientCommand(addPatientParameters);","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"kktai1512"},"content":"    public static Command parseDeletePatient(String parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":62,"author":{"gitId":"kktai1512"},"content":"        String[] deletePatientParameters \u003d stringSplitter(parameters);","lastModifiedDate":"2022-04-09"},{"lineNumber":63,"author":{"gitId":"tanweili"},"content":"        Validator.validateNric(parameters);","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"shxr3f"},"content":"        return new DeletePatientCommand(deletePatientParameters);","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"kktai1512"},"content":"    public static Command parseViewPatient(String parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":68,"author":{"gitId":"shxr3f"},"content":"        if (isNull(parameters)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"shxr3f"},"content":"            return new ViewPatientCommand(null);","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"Anvitha-r"},"content":"        return parseFindPatient(parameters);","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"kktai1512"},"content":"    public static Command parseEditPatient(String parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":75,"author":{"gitId":"kktai1512"},"content":"        String[] patientParameters \u003d stringSplitter(parameters);","lastModifiedDate":"2022-04-09"},{"lineNumber":76,"author":{"gitId":"Anvitha-r"},"content":"        Validator.validateAddPatient(patientParameters);","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"Anvitha-r"},"content":"        return new EditPatientCommand(patientParameters);","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"kktai1512"},"content":"    public static Command parseAddDoctor(String parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":81,"author":{"gitId":"kktai1512"},"content":"        String[] addDoctorParameters \u003d stringSplitter(parameters);","lastModifiedDate":"2022-04-09"},{"lineNumber":82,"author":{"gitId":"kktai1512"},"content":"        Validator.validateAddDoctor(addDoctorParameters);","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"shxr3f"},"content":"        return new AddDoctorCommand(addDoctorParameters);","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"kktai1512"},"content":"    public static Command parseDeleteDoctor(String parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":87,"author":{"gitId":"kktai1512"},"content":"        String[] deleteDoctorParameters \u003d stringSplitter(parameters);","lastModifiedDate":"2022-04-09"},{"lineNumber":88,"author":{"gitId":"tanweili"},"content":"        Validator.validateNric(parameters);","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"shxr3f"},"content":"        return new DeleteDoctorCommand(deleteDoctorParameters);","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"kktai1512"},"content":"    public static Command parseViewDoctor(String parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":93,"author":{"gitId":"shxr3f"},"content":"        if (isNull(parameters)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"shxr3f"},"content":"            return new ViewDoctorCommand(null);","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"Anvitha-r"},"content":"        return parseFindDoctor(parameters);","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"kktai1512"},"content":"    public static Command parseEditDoctor(String parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":100,"author":{"gitId":"kktai1512"},"content":"        String[] doctorParameters \u003d stringSplitter(parameters);","lastModifiedDate":"2022-04-09"},{"lineNumber":101,"author":{"gitId":"Anvitha-r"},"content":"        Validator.validateAddDoctor(doctorParameters);","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"Anvitha-r"},"content":"        return new EditDoctorCommand(doctorParameters);","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"kktai1512"},"content":"    public static Command parseAddMedicine(String parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":107,"author":{"gitId":"kktai1512"},"content":"        String[] medicineParameters \u003d stringSplitter(parameters);","lastModifiedDate":"2022-04-09"},{"lineNumber":108,"author":{"gitId":"kktai1512"},"content":"        Validator.validateMedicine(medicineParameters);","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"shxr3f"},"content":"        return new AddMedicineCommand(medicineParameters);","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"kktai1512"},"content":"    public static Command parseDeleteMedicine(String parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":113,"author":{"gitId":"kktai1512"},"content":"        String[] deleteMedicineParameters \u003d stringSplitter(parameters);","lastModifiedDate":"2022-04-09"},{"lineNumber":114,"author":{"gitId":"tanweili"},"content":"        if (deleteMedicineParameters.length !\u003d 1) {","lastModifiedDate":"2022-04-09"},{"lineNumber":115,"author":{"gitId":"tanweili"},"content":"            throw new UserInputErrorException(\"Delete medicine only takes in one parameter\");","lastModifiedDate":"2022-04-09"},{"lineNumber":116,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":117,"author":{"gitId":"shxr3f"},"content":"        return new DeleteMedicineCommand(deleteMedicineParameters);","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":119,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":120,"author":{"gitId":"kktai1512"},"content":"    public static Command parseViewMedicine(String parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":121,"author":{"gitId":"shxr3f"},"content":"        if (isNull(parameters)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":122,"author":{"gitId":"shxr3f"},"content":"            return new ViewMedicineCommand(null);","lastModifiedDate":"2022-03-24"},{"lineNumber":123,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":124,"author":{"gitId":"Anvitha-r"},"content":"        return parseFindMedicine(parameters);","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":126,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":127,"author":{"gitId":"kktai1512"},"content":"    public static Command parseEditMedicine(String parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":128,"author":{"gitId":"kktai1512"},"content":"        String[] medicineParameters \u003d stringSplitter(parameters);","lastModifiedDate":"2022-04-09"},{"lineNumber":129,"author":{"gitId":"shxr3f"},"content":"        Validator.validateMedicine(medicineParameters);","lastModifiedDate":"2022-03-24"},{"lineNumber":130,"author":{"gitId":"shxr3f"},"content":"        return new EditMedicineCommand(medicineParameters);","lastModifiedDate":"2022-03-24"},{"lineNumber":131,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":132,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":133,"author":{"gitId":"kktai1512"},"content":"    public static Command parseUpdateMedicineStock(String parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":134,"author":{"gitId":"shxr3f"},"content":"        if (!isNull(parameters)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"The update medicines command does not take in any parameters!\");","lastModifiedDate":"2022-04-09"},{"lineNumber":136,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"shxr3f"},"content":"        return new UpdateMedicineInventoryCommand();","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":140,"author":{"gitId":"kktai1512"},"content":"    public static Command parseClearExpiredMedicine(String parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":141,"author":{"gitId":"shxr3f"},"content":"        if (!isNull(parameters)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"The clear old medicines command does not take in any parameters!\");","lastModifiedDate":"2022-04-09"},{"lineNumber":143,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"shxr3f"},"content":"        return new ClearExpiredMedicineCommand();","lastModifiedDate":"2022-03-26"},{"lineNumber":145,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":146,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":147,"author":{"gitId":"kktai1512"},"content":"    public static Command parseDispenseMedicine(String parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":148,"author":{"gitId":"kktai1512"},"content":"        String[] dispenseMedicineParameters \u003d stringSplitter(parameters);","lastModifiedDate":"2022-04-09"},{"lineNumber":149,"author":{"gitId":"shxr3f"},"content":"        Validator.validateDispenseMedicine(dispenseMedicineParameters);","lastModifiedDate":"2022-04-07"},{"lineNumber":150,"author":{"gitId":"shxr3f"},"content":"        return new DispenseMedicineCommand(dispenseMedicineParameters);","lastModifiedDate":"2022-04-07"},{"lineNumber":151,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":152,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":153,"author":{"gitId":"kktai1512"},"content":"    public static Command parseCheckMedicineStock(String parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":154,"author":{"gitId":"kktai1512"},"content":"        String[] retrieveMedicineParameters \u003d stringSplitter(parameters);","lastModifiedDate":"2022-04-09"},{"lineNumber":155,"author":{"gitId":"shxr3f"},"content":"        return new CheckForMedicineStockCommand(retrieveMedicineParameters);","lastModifiedDate":"2022-04-07"},{"lineNumber":156,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":157,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":158,"author":{"gitId":"kktai1512"},"content":"    public static Command parseCheckForPatientAppointment(String parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":159,"author":{"gitId":"kktai1512"},"content":"        String[] checkForPatientAppointmentParameters \u003d stringSplitter(parameters);","lastModifiedDate":"2022-04-09"},{"lineNumber":160,"author":{"gitId":"shxr3f"},"content":"        return new CheckIfAppointmentTodayCommand(checkForPatientAppointmentParameters);","lastModifiedDate":"2022-04-07"},{"lineNumber":161,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":162,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":163,"author":{"gitId":"kktai1512"},"content":"    public static Command parseAddAppointment(String parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":164,"author":{"gitId":"kktai1512"},"content":"        String[] addAppointmentParameters \u003d stringSplitter(parameters);","lastModifiedDate":"2022-04-09"},{"lineNumber":165,"author":{"gitId":"kktai1512"},"content":"        Validator.validateAddAppointment(addAppointmentParameters);","lastModifiedDate":"2022-03-23"},{"lineNumber":166,"author":{"gitId":"tanweili"},"content":"        return new AddAppointmentCommand(addAppointmentParameters);","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"kktai1512"},"content":"    public static Command checkIfPatientExists(String parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":170,"author":{"gitId":"kktai1512"},"content":"        String[] checkIfPatientExistsParameters \u003d stringSplitter(parameters);","lastModifiedDate":"2022-04-09"},{"lineNumber":171,"author":{"gitId":"tanweili"},"content":"        Validator.validateAddAppointment(checkIfPatientExistsParameters);","lastModifiedDate":"2022-04-05"},{"lineNumber":172,"author":{"gitId":"tanweili"},"content":"        return new CheckIfPatientExistsCommand(checkIfPatientExistsParameters);","lastModifiedDate":"2022-04-05"},{"lineNumber":173,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":174,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":175,"author":{"gitId":"kktai1512"},"content":"    public static Command checkIfDoctorExists(String parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":176,"author":{"gitId":"kktai1512"},"content":"        String[] checkIfDoctorExistsParameters \u003d stringSplitter(parameters);","lastModifiedDate":"2022-04-09"},{"lineNumber":177,"author":{"gitId":"tanweili"},"content":"        Validator.validateAddAppointment(checkIfDoctorExistsParameters);","lastModifiedDate":"2022-04-05"},{"lineNumber":178,"author":{"gitId":"tanweili"},"content":"        return new CheckIfDoctorExistsCommand(checkIfDoctorExistsParameters);","lastModifiedDate":"2022-04-05"},{"lineNumber":179,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":180,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":181,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":182,"author":{"gitId":"kktai1512"},"content":"    public static Command parseViewAppointment(String parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":183,"author":{"gitId":"tanweili"},"content":"        if (isNull(parameters)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":184,"author":{"gitId":"tanweili"},"content":"            return new ViewAppointmentCommand(null);","lastModifiedDate":"2022-03-29"},{"lineNumber":185,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":186,"author":{"gitId":"tanweili"},"content":"        return parseFindAppointment(parameters);","lastModifiedDate":"2022-03-29"},{"lineNumber":187,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":188,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":189,"author":{"gitId":"kktai1512"},"content":"    public static Command parseFindAppointment(String parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":190,"author":{"gitId":"kktai1512"},"content":"        String[] findAppointmentParameters \u003d stringSplitter(parameters);","lastModifiedDate":"2022-04-09"},{"lineNumber":191,"author":{"gitId":"tanweili"},"content":"        Validator.validateFindAppointment(findAppointmentParameters);","lastModifiedDate":"2022-03-29"},{"lineNumber":192,"author":{"gitId":"tanweili"},"content":"        return new FindAppointmentCommand(findAppointmentParameters);","lastModifiedDate":"2022-03-29"},{"lineNumber":193,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":194,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":195,"author":{"gitId":"kktai1512"},"content":"    public static Command parseEditAppointment(String parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":196,"author":{"gitId":"kktai1512"},"content":"        String[] editAppointmentParameters \u003d stringSplitter(parameters);","lastModifiedDate":"2022-04-09"},{"lineNumber":197,"author":{"gitId":"shxr3f"},"content":"        Validator.validateEditAppointment(editAppointmentParameters);","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"shxr3f"},"content":"        return new EditAppointmentCommand(editAppointmentParameters);","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"kktai1512"},"content":"    public static Command parseFindDoctor(String parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":202,"author":{"gitId":"kktai1512"},"content":"        String[] findDoctorParameters \u003d stringSplitter(parameters);","lastModifiedDate":"2022-04-09"},{"lineNumber":203,"author":{"gitId":"wraineflores"},"content":"        Validator.validateFindDoctor(findDoctorParameters);","lastModifiedDate":"2022-03-27"},{"lineNumber":204,"author":{"gitId":"wraineflores"},"content":"        return new FindDoctorCommand(findDoctorParameters);","lastModifiedDate":"2022-03-27"},{"lineNumber":205,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":206,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":207,"author":{"gitId":"kktai1512"},"content":"    public static Command parseFindPatient(String parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":208,"author":{"gitId":"kktai1512"},"content":"        String[] findPatientParameters \u003d stringSplitter(parameters);","lastModifiedDate":"2022-04-09"},{"lineNumber":209,"author":{"gitId":"wraineflores"},"content":"        Validator.validateFindPatient(findPatientParameters);","lastModifiedDate":"2022-03-27"},{"lineNumber":210,"author":{"gitId":"wraineflores"},"content":"        return new FindPatientCommand(findPatientParameters);","lastModifiedDate":"2022-03-27"},{"lineNumber":211,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":212,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":213,"author":{"gitId":"kktai1512"},"content":"    public static Command parseFindMedicine(String parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":214,"author":{"gitId":"kktai1512"},"content":"        String[] findMedicineParameters \u003d stringSplitter(parameters);","lastModifiedDate":"2022-04-09"},{"lineNumber":215,"author":{"gitId":"wraineflores"},"content":"        Validator.validateFindMedicine(findMedicineParameters);","lastModifiedDate":"2022-03-27"},{"lineNumber":216,"author":{"gitId":"wraineflores"},"content":"        return new FindMedicineCommand(findMedicineParameters);","lastModifiedDate":"2022-03-27"},{"lineNumber":217,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":218,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":219,"author":{"gitId":"kktai1512"},"content":"    public static Command parseDeleteAppointment(String parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":220,"author":{"gitId":"kktai1512"},"content":"        String[] deleteAppointmentParameters \u003d stringSplitter(parameters);","lastModifiedDate":"2022-04-09"},{"lineNumber":221,"author":{"gitId":"tanweili"},"content":"        return new DeleteAppointmentCommand(deleteAppointmentParameters);","lastModifiedDate":"2022-03-27"},{"lineNumber":222,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":223,"author":{"gitId":"Anvitha-r"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"tanweili":57,"wraineflores":12,"Anvitha-r":11,"shxr3f":72,"kktai1512":71}},{"path":"src/main/java/seedu/duke/helper/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.helper;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.assets.Appointment;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.assets.AppointmentList;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.assets.Doctor;","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.assets.DoctorList;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.assets.Medicine;","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.assets.MedicineList;","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.assets.Patient;","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.assets.PatientList;","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.exception.DuplicateEntryException;","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.exception.UserInputErrorException;","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"import java.io.File;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"kktai1512"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"kktai1512"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"public class Storage {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"    static final String DIR \u003d \"data\";","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"    static final String PATH_DOC \u003d \"data/doctor.txt\";","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"    static final String PATH_PAT \u003d \"data/patient.txt\";","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"    static final String PATH_MED \u003d \"data/medicine.txt\";","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"tanweili"},"content":"    static final String PATH_APT \u003d \"data/appointment.txt\";","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"    static final String PATH_APT_MEDS \u003d \"data/appointment_meds.txt\";","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"    public DoctorList doctors \u003d new DoctorList();","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"shxr3f"},"content":"    public PatientList patients \u003d new PatientList();","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"shxr3f"},"content":"    public MedicineList medicines \u003d new MedicineList();","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"tanweili"},"content":"    public AppointmentList appointments \u003d new AppointmentList(patients, doctors);","lastModifiedDate":"2022-04-05"},{"lineNumber":34,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"shxr3f"},"content":"    public Storage() {","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"shxr3f"},"content":"        loadData();","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"kktai1512"},"content":"    ArrayList\u003cString\u003e corruptedLines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"kktai1512"},"content":"    private void loadGenericData(String filePath, List listType) throws FileNotFoundException {","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"kktai1512"},"content":"        File data \u003d new File(filePath);","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"shxr3f"},"content":"        Scanner reader \u003d new Scanner(data);","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"kktai1512"},"content":"        String outputFilePathCorrupted \u003d \"nope\";","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"shxr3f"},"content":"        while (reader.hasNext()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"shxr3f"},"content":"            String line \u003d reader.nextLine();","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"shxr3f"},"content":"            String[] parameters \u003d line.split(\",\");","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"shxr3f"},"content":"            try {","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"kktai1512"},"content":"                if (filePath.equals(PATH_APT_MEDS)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"kktai1512"},"content":"                    outputFilePathCorrupted \u003d \"data/appointment_meds_corrupted.txt\";","lastModifiedDate":"2022-04-09"},{"lineNumber":51,"author":{"gitId":"kktai1512"},"content":"                    appointments.loadMedicine(parameters);","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"kktai1512"},"content":"                } else {","lastModifiedDate":"2022-04-09"},{"lineNumber":53,"author":{"gitId":"kktai1512"},"content":"                    if (filePath.equals(PATH_DOC)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":54,"author":{"gitId":"kktai1512"},"content":"                        outputFilePathCorrupted \u003d \"data/doctor_corrupted.txt\";","lastModifiedDate":"2022-04-09"},{"lineNumber":55,"author":{"gitId":"kktai1512"},"content":"                        Validator.validateAddDoctor(parameters);","lastModifiedDate":"2022-04-09"},{"lineNumber":56,"author":{"gitId":"kktai1512"},"content":"                    }","lastModifiedDate":"2022-04-09"},{"lineNumber":57,"author":{"gitId":"kktai1512"},"content":"                    if (filePath.equals(PATH_PAT)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"kktai1512"},"content":"                        outputFilePathCorrupted \u003d \"data/patient_corrupted.txt\";","lastModifiedDate":"2022-04-09"},{"lineNumber":59,"author":{"gitId":"kktai1512"},"content":"                        Validator.validateAddPatient(parameters);","lastModifiedDate":"2022-04-09"},{"lineNumber":60,"author":{"gitId":"kktai1512"},"content":"                    }","lastModifiedDate":"2022-04-09"},{"lineNumber":61,"author":{"gitId":"kktai1512"},"content":"                    if (filePath.equals(PATH_MED)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":62,"author":{"gitId":"kktai1512"},"content":"                        outputFilePathCorrupted \u003d \"data/medicine_corrupted.txt\";","lastModifiedDate":"2022-04-09"},{"lineNumber":63,"author":{"gitId":"kktai1512"},"content":"                        Validator.validateMedicine(parameters);","lastModifiedDate":"2022-04-09"},{"lineNumber":64,"author":{"gitId":"kktai1512"},"content":"                    }","lastModifiedDate":"2022-04-09"},{"lineNumber":65,"author":{"gitId":"kktai1512"},"content":"                    if (filePath.equals(PATH_APT)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":66,"author":{"gitId":"kktai1512"},"content":"                        outputFilePathCorrupted \u003d \"data/appointment_corrupted.txt\";","lastModifiedDate":"2022-04-09"},{"lineNumber":67,"author":{"gitId":"kktai1512"},"content":"                        Validator.validateAddAppointment(parameters);","lastModifiedDate":"2022-04-09"},{"lineNumber":68,"author":{"gitId":"kktai1512"},"content":"                    }","lastModifiedDate":"2022-04-09"},{"lineNumber":69,"author":{"gitId":"kktai1512"},"content":"                    listType.add(parameters);","lastModifiedDate":"2022-04-09"},{"lineNumber":70,"author":{"gitId":"kktai1512"},"content":"                }","lastModifiedDate":"2022-04-09"},{"lineNumber":71,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":72,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":73,"author":{"gitId":"kktai1512"},"content":"            } catch (UserInputErrorException | DuplicateEntryException e) {","lastModifiedDate":"2022-04-09"},{"lineNumber":74,"author":{"gitId":"kktai1512"},"content":"                corruptedLines.add(e + \"\\nLine: \" + line);","lastModifiedDate":"2022-04-09"},{"lineNumber":75,"author":{"gitId":"kktai1512"},"content":"            }","lastModifiedDate":"2022-04-09"},{"lineNumber":76,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":77,"author":{"gitId":"kktai1512"},"content":"        if (corruptedLines.size() !\u003d 0 \u0026\u0026 !outputFilePathCorrupted.equals(\"nope\")) {","lastModifiedDate":"2022-04-09"},{"lineNumber":78,"author":{"gitId":"kktai1512"},"content":"            saveCorruptedData(outputFilePathCorrupted, corruptedLines);","lastModifiedDate":"2022-04-09"},{"lineNumber":79,"author":{"gitId":"kktai1512"},"content":"            UI.printParagraph(\"There are some corrupted lines in your input files. \"","lastModifiedDate":"2022-04-09"},{"lineNumber":80,"author":{"gitId":"kktai1512"},"content":"                    + \"It has been moved to another file named \"","lastModifiedDate":"2022-04-09"},{"lineNumber":81,"author":{"gitId":"kktai1512"},"content":"                    + outputFilePathCorrupted);","lastModifiedDate":"2022-04-09"},{"lineNumber":82,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":85,"author":{"gitId":"kktai1512"},"content":"    private void saveCorruptedData(String filePath, ArrayList\u003cString\u003e stringArray) {","lastModifiedDate":"2022-04-09"},{"lineNumber":86,"author":{"gitId":"kktai1512"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-04-09"},{"lineNumber":87,"author":{"gitId":"kktai1512"},"content":"        if (!file.exists()) {","lastModifiedDate":"2022-04-09"},{"lineNumber":88,"author":{"gitId":"kktai1512"},"content":"            try {","lastModifiedDate":"2022-04-09"},{"lineNumber":89,"author":{"gitId":"kktai1512"},"content":"                file.createNewFile();","lastModifiedDate":"2022-04-09"},{"lineNumber":90,"author":{"gitId":"kktai1512"},"content":"                UI.printParagraph(\"file has been created\");","lastModifiedDate":"2022-04-09"},{"lineNumber":91,"author":{"gitId":"kktai1512"},"content":"            } catch (IOException ioException) {","lastModifiedDate":"2022-04-09"},{"lineNumber":92,"author":{"gitId":"kktai1512"},"content":"                UI.printParagraph(\"file cannot be created\" + filePath);","lastModifiedDate":"2022-04-09"},{"lineNumber":93,"author":{"gitId":"kktai1512"},"content":"                return;","lastModifiedDate":"2022-04-09"},{"lineNumber":94,"author":{"gitId":"tanweili"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":96,"author":{"gitId":"kktai1512"},"content":"        try {","lastModifiedDate":"2022-04-09"},{"lineNumber":97,"author":{"gitId":"kktai1512"},"content":"            FileWriter dataWrite \u003d new FileWriter(filePath,true);","lastModifiedDate":"2022-04-09"},{"lineNumber":98,"author":{"gitId":"kktai1512"},"content":"            dataWrite.write(\"Session: \" + LocalDateTime.now().toString() + \"\\n\");","lastModifiedDate":"2022-04-09"},{"lineNumber":99,"author":{"gitId":"kktai1512"},"content":"            for (String s : stringArray) {","lastModifiedDate":"2022-04-09"},{"lineNumber":100,"author":{"gitId":"kktai1512"},"content":"                dataWrite.write(s + \"\\n\");","lastModifiedDate":"2022-04-09"},{"lineNumber":101,"author":{"gitId":"kktai1512"},"content":"            }","lastModifiedDate":"2022-04-09"},{"lineNumber":102,"author":{"gitId":"kktai1512"},"content":"            dataWrite.write(\"----------------------------------------------------------\\n\");","lastModifiedDate":"2022-04-09"},{"lineNumber":103,"author":{"gitId":"kktai1512"},"content":"            dataWrite.close();","lastModifiedDate":"2022-04-09"},{"lineNumber":104,"author":{"gitId":"kktai1512"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-04-09"},{"lineNumber":105,"author":{"gitId":"kktai1512"},"content":"            UI.printParagraph(\"Unable to save data...\");","lastModifiedDate":"2022-04-09"},{"lineNumber":106,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":107,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":108,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":109,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":110,"author":{"gitId":"shxr3f"},"content":"    public void loadData() {","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"kktai1512"},"content":"            loadGenericData(PATH_DOC, doctors);","lastModifiedDate":"2022-04-09"},{"lineNumber":113,"author":{"gitId":"kktai1512"},"content":"            loadGenericData(PATH_PAT, patients);","lastModifiedDate":"2022-04-09"},{"lineNumber":114,"author":{"gitId":"kktai1512"},"content":"            loadGenericData(PATH_MED, medicines);","lastModifiedDate":"2022-04-09"},{"lineNumber":115,"author":{"gitId":"kktai1512"},"content":"            loadGenericData(PATH_APT, appointments);","lastModifiedDate":"2022-04-09"},{"lineNumber":116,"author":{"gitId":"kktai1512"},"content":"            loadGenericData(PATH_APT_MEDS, appointments);","lastModifiedDate":"2022-04-09"},{"lineNumber":117,"author":{"gitId":"shxr3f"},"content":"        } catch (FileNotFoundException f) {","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"shxr3f"},"content":"            UI.printParagraph(\"No saved data found!\");","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":123,"author":{"gitId":"kktai1512"},"content":"    //todo : clean up save file","lastModifiedDate":"2022-04-09"},{"lineNumber":124,"author":{"gitId":"shxr3f"},"content":"    private void saveMedicineData() {","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"shxr3f"},"content":"        File medicineFile \u003d new File(PATH_MED);","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"shxr3f"},"content":"        if (!medicineFile.exists()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"shxr3f"},"content":"            try {","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"shxr3f"},"content":"                medicineFile.createNewFile();","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"shxr3f"},"content":"            } catch (IOException ioException) {","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"shxr3f"},"content":"                UI.printParagraph(\"medicine.txt cannot be created\");","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"shxr3f"},"content":"                return;","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"shxr3f"},"content":"            FileWriter dataWrite \u003d new FileWriter(PATH_MED,false);","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"shxr3f"},"content":"            for (Medicine m : medicines.getList()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"shxr3f"},"content":"                dataWrite.write(m.saveString() + \"\\n\");","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"shxr3f"},"content":"            dataWrite.close();","lastModifiedDate":"2022-03-16"},{"lineNumber":140,"author":{"gitId":"shxr3f"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"shxr3f"},"content":"            UI.printParagraph(\"Unable to save data...\");","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"shxr3f"},"content":"    private void savePatientData() {","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"shxr3f"},"content":"        File patientFile \u003d new File(PATH_PAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"shxr3f"},"content":"        if (!patientFile.exists()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"shxr3f"},"content":"            try {","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"shxr3f"},"content":"                patientFile.createNewFile();","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"shxr3f"},"content":"            } catch (IOException ioException) {","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"shxr3f"},"content":"                UI.printParagraph(\"patient.txt cannot be created\");","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"shxr3f"},"content":"                return;","lastModifiedDate":"2022-03-16"},{"lineNumber":153,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":154,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":156,"author":{"gitId":"shxr3f"},"content":"            FileWriter dataWrite \u003d new FileWriter(PATH_PAT,false);","lastModifiedDate":"2022-03-16"},{"lineNumber":157,"author":{"gitId":"shxr3f"},"content":"            for (Patient p : patients.getList()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"shxr3f"},"content":"                dataWrite.write(p.saveString() + \"\\n\");","lastModifiedDate":"2022-03-16"},{"lineNumber":159,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":160,"author":{"gitId":"shxr3f"},"content":"            dataWrite.close();","lastModifiedDate":"2022-03-16"},{"lineNumber":161,"author":{"gitId":"shxr3f"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":162,"author":{"gitId":"shxr3f"},"content":"            UI.printParagraph(\"Unable to save data...\");","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":166,"author":{"gitId":"tanweili"},"content":"    private void saveAppointmentData() {","lastModifiedDate":"2022-03-22"},{"lineNumber":167,"author":{"gitId":"tanweili"},"content":"        File appointmentFile \u003d new File(PATH_APT);","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"tanweili"},"content":"        if (!appointmentFile.exists()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"tanweili"},"content":"            try {","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"tanweili"},"content":"                appointmentFile.createNewFile();","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"tanweili"},"content":"            } catch (IOException ioException) {","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"tanweili"},"content":"                UI.printParagraph(\"appointment.txt cannot be created\");","lastModifiedDate":"2022-03-23"},{"lineNumber":173,"author":{"gitId":"tanweili"},"content":"                return;","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"tanweili"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"tanweili"},"content":"        try {","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"tanweili"},"content":"            FileWriter dataWrite \u003d new FileWriter(PATH_APT,false);","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"tanweili"},"content":"            for (Appointment appointment : appointments.getList()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":179,"author":{"gitId":"tanweili"},"content":"                dataWrite.write(appointment.saveString() + \"\\n\");","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"tanweili"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"tanweili"},"content":"            dataWrite.close();","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"tanweili"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"tanweili"},"content":"            UI.printParagraph(\"Unable to save data...\");","lastModifiedDate":"2022-03-23"},{"lineNumber":184,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"shxr3f"},"content":"    private void saveAppointmentMedData() {","lastModifiedDate":"2022-04-07"},{"lineNumber":188,"author":{"gitId":"shxr3f"},"content":"        File appointmentMedFile \u003d new File(PATH_APT_MEDS);","lastModifiedDate":"2022-04-07"},{"lineNumber":189,"author":{"gitId":"shxr3f"},"content":"        if (!appointmentMedFile.exists()) {","lastModifiedDate":"2022-04-07"},{"lineNumber":190,"author":{"gitId":"shxr3f"},"content":"            try {","lastModifiedDate":"2022-04-07"},{"lineNumber":191,"author":{"gitId":"shxr3f"},"content":"                appointmentMedFile.createNewFile();","lastModifiedDate":"2022-04-07"},{"lineNumber":192,"author":{"gitId":"shxr3f"},"content":"            } catch (IOException ioException) {","lastModifiedDate":"2022-04-07"},{"lineNumber":193,"author":{"gitId":"shxr3f"},"content":"                UI.printParagraph(\"appointment_meds.txt cannot be created\");","lastModifiedDate":"2022-04-07"},{"lineNumber":194,"author":{"gitId":"shxr3f"},"content":"                return;","lastModifiedDate":"2022-04-07"},{"lineNumber":195,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-04-07"},{"lineNumber":196,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":197,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-04-07"},{"lineNumber":198,"author":{"gitId":"shxr3f"},"content":"            FileWriter dataWrite \u003d new FileWriter(PATH_APT_MEDS,false);","lastModifiedDate":"2022-04-07"},{"lineNumber":199,"author":{"gitId":"shxr3f"},"content":"            for (Appointment appointment : appointments.getList()) {","lastModifiedDate":"2022-04-07"},{"lineNumber":200,"author":{"gitId":"shxr3f"},"content":"                dataWrite.write(appointment.saveMedicineString() + \"\\n\");","lastModifiedDate":"2022-04-07"},{"lineNumber":201,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-04-07"},{"lineNumber":202,"author":{"gitId":"shxr3f"},"content":"            dataWrite.close();","lastModifiedDate":"2022-04-07"},{"lineNumber":203,"author":{"gitId":"shxr3f"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-04-07"},{"lineNumber":204,"author":{"gitId":"shxr3f"},"content":"            UI.printParagraph(\"Unable to save data...\");","lastModifiedDate":"2022-04-07"},{"lineNumber":205,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":206,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":207,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":208,"author":{"gitId":"shxr3f"},"content":"    private void saveDoctorData() {","lastModifiedDate":"2022-03-16"},{"lineNumber":209,"author":{"gitId":"shxr3f"},"content":"        File doctorFile \u003d new File(PATH_DOC);","lastModifiedDate":"2022-03-16"},{"lineNumber":210,"author":{"gitId":"shxr3f"},"content":"        if (!doctorFile.exists()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":211,"author":{"gitId":"shxr3f"},"content":"            try {","lastModifiedDate":"2022-03-16"},{"lineNumber":212,"author":{"gitId":"shxr3f"},"content":"                doctorFile.createNewFile();","lastModifiedDate":"2022-03-16"},{"lineNumber":213,"author":{"gitId":"shxr3f"},"content":"            } catch (IOException ioException) {","lastModifiedDate":"2022-03-16"},{"lineNumber":214,"author":{"gitId":"shxr3f"},"content":"                UI.printParagraph(\"doctor.txt cannot be created\");","lastModifiedDate":"2022-03-22"},{"lineNumber":215,"author":{"gitId":"shxr3f"},"content":"                return;","lastModifiedDate":"2022-03-16"},{"lineNumber":216,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":217,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":218,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":219,"author":{"gitId":"shxr3f"},"content":"            FileWriter dataWrite \u003d new FileWriter(PATH_DOC,false);","lastModifiedDate":"2022-03-16"},{"lineNumber":220,"author":{"gitId":"shxr3f"},"content":"            for (Doctor d : doctors.getList()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":221,"author":{"gitId":"shxr3f"},"content":"                dataWrite.write(d.saveString() + \"\\n\");","lastModifiedDate":"2022-03-16"},{"lineNumber":222,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":223,"author":{"gitId":"shxr3f"},"content":"            dataWrite.close();","lastModifiedDate":"2022-03-16"},{"lineNumber":224,"author":{"gitId":"shxr3f"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":225,"author":{"gitId":"shxr3f"},"content":"            UI.printParagraph(\"Unable to save data...\");","lastModifiedDate":"2022-03-22"},{"lineNumber":226,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":227,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":228,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":229,"author":{"gitId":"shxr3f"},"content":"    public void saveData() {","lastModifiedDate":"2022-03-16"},{"lineNumber":230,"author":{"gitId":"shxr3f"},"content":"        File dir \u003d new File(DIR);","lastModifiedDate":"2022-03-16"},{"lineNumber":231,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":232,"author":{"gitId":"shxr3f"},"content":"            dir.mkdir();","lastModifiedDate":"2022-03-16"},{"lineNumber":233,"author":{"gitId":"shxr3f"},"content":"        } catch (SecurityException s) {","lastModifiedDate":"2022-03-16"},{"lineNumber":234,"author":{"gitId":"shxr3f"},"content":"            UI.printParagraph(\"Cannot Create Dir\");","lastModifiedDate":"2022-03-22"},{"lineNumber":235,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":236,"author":{"gitId":"shxr3f"},"content":"        saveDoctorData();","lastModifiedDate":"2022-03-16"},{"lineNumber":237,"author":{"gitId":"shxr3f"},"content":"        savePatientData();","lastModifiedDate":"2022-03-16"},{"lineNumber":238,"author":{"gitId":"shxr3f"},"content":"        saveMedicineData();","lastModifiedDate":"2022-03-16"},{"lineNumber":239,"author":{"gitId":"tanweili"},"content":"        saveAppointmentData();","lastModifiedDate":"2022-03-22"},{"lineNumber":240,"author":{"gitId":"shxr3f"},"content":"        saveAppointmentMedData();","lastModifiedDate":"2022-04-07"},{"lineNumber":241,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":242,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"tanweili":27,"shxr3f":133,"kktai1512":82}},{"path":"src/main/java/seedu/duke/helper/UI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Anvitha-r"},"content":"package seedu.duke.helper;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"Anvitha-r"},"content":"import seedu.duke.assets.DoctorList;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.assets.MedicineList;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"Anvitha-r"},"content":"import seedu.duke.assets.Patient;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"import seedu.duke.assets.PatientList;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"Anvitha-r"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"Anvitha-r"},"content":"public class UI {","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"    private String userInput;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"Anvitha-r"},"content":"    private ArrayList\u003cPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"    private Scanner reader \u003d new Scanner(System.in);","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"    private void readInput() {","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"        this.userInput \u003d reader.nextLine();","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"    public String readCommand() {","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"        readInput();","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"tanweili"},"content":"        return parser.commandParser(userInput)[0].trim();","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"    public String readParameters() {","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"        String[] userInputArray \u003d parser.commandParser(userInput);","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"        if (userInputArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"shxr3f"},"content":"            return null;","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"tanweili"},"content":"        return parser.commandParser(userInput)[1].trim().toUpperCase();","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"tanweili"},"content":"    public static void printNewLineSeparator() {","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"-------------------------\");","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"wraineflores"},"content":"    public void printGreeting() {","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"wraineflores"},"content":"        printNewLineSeparator();","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"shxr3f"},"content":"        printParagraph(\"Welcome! This is the Hospital Management System.\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"shxr3f"},"content":"                + \"Please type in your input\");","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"Anvitha-r"},"content":"    public void printLogo() {","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"Anvitha-r"},"content":"        String logo \u003d \"------------------------------\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"shxr3f"},"content":"                + \"HALPMI\";","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"Anvitha-r"},"content":"        System.out.println(logo);","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"Anvitha-r"},"content":"    public static void printHelp() {","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"wraineflores"},"content":"        printAddDoctorMessage();","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"wraineflores"},"content":"        printAddPatientMessage();","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"wraineflores"},"content":"        printAddMedicineMessage();","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"wraineflores"},"content":"        printAddAppointmentMessage();","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"wraineflores"},"content":"        printViewDoctorMessage();","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"wraineflores"},"content":"        printViewPatientMessage();","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"wraineflores"},"content":"        printViewMedicineMessage();","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"wraineflores"},"content":"        printViewAppointmentMessage();","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"wraineflores"},"content":"        printDeleteDoctorMessage();","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"wraineflores"},"content":"        printDeletePatientMessage();","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"wraineflores"},"content":"        printDeleteMedicineMessage();","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"wraineflores"},"content":"        printDeleteAppointmentMessage();","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"wraineflores"},"content":"        printEditDoctorMessage();","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"wraineflores"},"content":"        printEditPatientMessage();","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"wraineflores"},"content":"        printEditMedicineMessage();","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"wraineflores"},"content":"        printEditAppointmentMessage();","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"wraineflores"},"content":"        printFindDoctorMessage();","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"wraineflores"},"content":"        printFindPatientMessage();","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"wraineflores"},"content":"        printFindMedicineMessage();","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"wraineflores"},"content":"        printUpdateMedicineMessage();","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"wraineflores"},"content":"        printClearMedicineMessage();","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"wraineflores"},"content":"        printByeMessage();","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"wraineflores"},"content":"        printNewLineSeparator();","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"wraineflores"},"content":"    public static void printAddDoctorMessage() {","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"wraineflores"},"content":"        printNewLineSeparator();","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Feature: ADD DOCTOR\");","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"wraineflores"},"content":"        System.out.print(\"Format: add doctor /info [nric],[name],[age],[gender], \");","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"[address],[DOB],[Specialisation]\");","lastModifiedDate":"2022-04-07"},{"lineNumber":84,"author":{"gitId":"wraineflores"},"content":"        System.out.print(\"Example: add doctor /info S1234567A, John Doe, \");","lastModifiedDate":"2022-04-07"},{"lineNumber":85,"author":{"gitId":"kktai1512"},"content":"        System.out.println(\"22, M, 10 Baker Street, 1999-12-31, Urinology\");","lastModifiedDate":"2022-04-09"},{"lineNumber":86,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"wraineflores"},"content":"    public static void printAddPatientMessage() {","lastModifiedDate":"2022-04-07"},{"lineNumber":89,"author":{"gitId":"wraineflores"},"content":"        printNewLineSeparator();","lastModifiedDate":"2022-04-07"},{"lineNumber":90,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Feature: ADD PATIENT\");","lastModifiedDate":"2022-04-07"},{"lineNumber":91,"author":{"gitId":"wraineflores"},"content":"        System.out.print(\"Format: add patient /info [nric], [name], [age], [gender], \");","lastModifiedDate":"2022-04-07"},{"lineNumber":92,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"[address], [DOB], [Date of Admission]\");","lastModifiedDate":"2022-04-07"},{"lineNumber":93,"author":{"gitId":"kktai1512"},"content":"        System.out.print(\"Example: add patient /info S1234567A, John Doe, 22, \");","lastModifiedDate":"2022-04-09"},{"lineNumber":94,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"M, 10 Baker Street, 1999-12-31, 2021-02-15\");","lastModifiedDate":"2022-04-07"},{"lineNumber":95,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":96,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":97,"author":{"gitId":"wraineflores"},"content":"    public static void printAddMedicineMessage() {","lastModifiedDate":"2022-04-07"},{"lineNumber":98,"author":{"gitId":"wraineflores"},"content":"        printNewLineSeparator();","lastModifiedDate":"2022-04-07"},{"lineNumber":99,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Feature: ADD MEDICINE\");","lastModifiedDate":"2022-04-07"},{"lineNumber":100,"author":{"gitId":"wraineflores"},"content":"        System.out.print(\"Format: add medicine /info [batch id], [name], [dosage], \");","lastModifiedDate":"2022-04-07"},{"lineNumber":101,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"[expiry date],[side effects],[quantity]\");","lastModifiedDate":"2022-04-07"},{"lineNumber":102,"author":{"gitId":"wraineflores"},"content":"        System.out.print(\"Example: add medicine /info A123, Paracetamol, \");","lastModifiedDate":"2022-04-07"},{"lineNumber":103,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"500, 2023-06-11, Drowsiness, 10\");","lastModifiedDate":"2022-04-07"},{"lineNumber":104,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":105,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":106,"author":{"gitId":"wraineflores"},"content":"    public static void printAddAppointmentMessage() {","lastModifiedDate":"2022-04-07"},{"lineNumber":107,"author":{"gitId":"wraineflores"},"content":"        printNewLineSeparator();","lastModifiedDate":"2022-04-07"},{"lineNumber":108,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Feature: ADD APPOINTMENT\");","lastModifiedDate":"2022-04-07"},{"lineNumber":109,"author":{"gitId":"wraineflores"},"content":"        System.out.print(\"Format: add appointment /info [patient nric], [doctor nric], \");","lastModifiedDate":"2022-04-09"},{"lineNumber":110,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"[appointment date], [appointment details]\");","lastModifiedDate":"2022-04-09"},{"lineNumber":111,"author":{"gitId":"wraineflores"},"content":"        System.out.print(\"Example: add appointment /info S1234567A, S7654321A, \");","lastModifiedDate":"2022-04-09"},{"lineNumber":112,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"2022-10-15, Regular knee checkup\");","lastModifiedDate":"2022-04-09"},{"lineNumber":113,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":114,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":115,"author":{"gitId":"wraineflores"},"content":"    public static void printViewDoctorMessage() {","lastModifiedDate":"2022-04-07"},{"lineNumber":116,"author":{"gitId":"wraineflores"},"content":"        printNewLineSeparator();","lastModifiedDate":"2022-04-07"},{"lineNumber":117,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Feature: VIEW DOCTOR\");","lastModifiedDate":"2022-04-07"},{"lineNumber":118,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Format: view doctor\");","lastModifiedDate":"2022-04-07"},{"lineNumber":119,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example: view doctor\");","lastModifiedDate":"2022-04-07"},{"lineNumber":120,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":121,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":122,"author":{"gitId":"wraineflores"},"content":"    public static void printViewPatientMessage() {","lastModifiedDate":"2022-04-07"},{"lineNumber":123,"author":{"gitId":"wraineflores"},"content":"        printNewLineSeparator();","lastModifiedDate":"2022-04-07"},{"lineNumber":124,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Feature: VIEW PATIENT\");","lastModifiedDate":"2022-04-07"},{"lineNumber":125,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Format: view patient\");","lastModifiedDate":"2022-04-07"},{"lineNumber":126,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example: view patient\");","lastModifiedDate":"2022-04-07"},{"lineNumber":127,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":128,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":129,"author":{"gitId":"wraineflores"},"content":"    public static void printViewMedicineMessage() {","lastModifiedDate":"2022-04-07"},{"lineNumber":130,"author":{"gitId":"wraineflores"},"content":"        printNewLineSeparator();","lastModifiedDate":"2022-04-07"},{"lineNumber":131,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Feature: VIEW MEDICINE\");","lastModifiedDate":"2022-04-07"},{"lineNumber":132,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Format: view medicine\");","lastModifiedDate":"2022-04-07"},{"lineNumber":133,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example: view medicine\");","lastModifiedDate":"2022-04-07"},{"lineNumber":134,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":135,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":136,"author":{"gitId":"wraineflores"},"content":"    public static void printViewAppointmentMessage() {","lastModifiedDate":"2022-04-07"},{"lineNumber":137,"author":{"gitId":"wraineflores"},"content":"        printNewLineSeparator();","lastModifiedDate":"2022-04-07"},{"lineNumber":138,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Feature: VIEW APPOINTMENT\");","lastModifiedDate":"2022-04-07"},{"lineNumber":139,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Format: view appointment or view appointment /info [criteria],[input value]\");","lastModifiedDate":"2022-04-07"},{"lineNumber":140,"author":{"gitId":"wraineflores"},"content":"        System.out.print(\"Accepted Criteria: appointment id, patient nric, \");","lastModifiedDate":"2022-04-07"},{"lineNumber":141,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"patient name, doctor name, doctor nric, date\");","lastModifiedDate":"2022-04-07"},{"lineNumber":142,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example 1: view appointment /info appointment id, 12356701017647\");","lastModifiedDate":"2022-04-09"},{"lineNumber":143,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example 2: view appointment /info patient nric, S1234567A\");","lastModifiedDate":"2022-04-07"},{"lineNumber":144,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example 3: view appointment /info doctor name, John\");","lastModifiedDate":"2022-04-07"},{"lineNumber":145,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example 4: view appointment /info patient date, 2023-01-01\");","lastModifiedDate":"2022-04-07"},{"lineNumber":146,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":147,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":148,"author":{"gitId":"wraineflores"},"content":"    public static void printDeleteDoctorMessage() {","lastModifiedDate":"2022-04-07"},{"lineNumber":149,"author":{"gitId":"wraineflores"},"content":"        printNewLineSeparator();","lastModifiedDate":"2022-04-07"},{"lineNumber":150,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Feature: DELETE DOCTOR\");","lastModifiedDate":"2022-04-07"},{"lineNumber":151,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Format: delete doctor /info [nric]\");","lastModifiedDate":"2022-04-07"},{"lineNumber":152,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example: delete doctor /info S1234567A\");","lastModifiedDate":"2022-04-07"},{"lineNumber":153,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":154,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":155,"author":{"gitId":"wraineflores"},"content":"    public static void printDeletePatientMessage() {","lastModifiedDate":"2022-04-07"},{"lineNumber":156,"author":{"gitId":"wraineflores"},"content":"        printNewLineSeparator();","lastModifiedDate":"2022-04-07"},{"lineNumber":157,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Feature: DELETE PATIENT\");","lastModifiedDate":"2022-04-07"},{"lineNumber":158,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Format: delete patient /info [nric]\");","lastModifiedDate":"2022-04-07"},{"lineNumber":159,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example: delete patient /info S1234567A\");","lastModifiedDate":"2022-04-07"},{"lineNumber":160,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":161,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":162,"author":{"gitId":"wraineflores"},"content":"    public static void printDeleteMedicineMessage() {","lastModifiedDate":"2022-04-07"},{"lineNumber":163,"author":{"gitId":"wraineflores"},"content":"        printNewLineSeparator();","lastModifiedDate":"2022-04-07"},{"lineNumber":164,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Feature: DELETE MEDICINE\");","lastModifiedDate":"2022-04-07"},{"lineNumber":165,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Format: delete medicine /info [batch id]\");","lastModifiedDate":"2022-04-07"},{"lineNumber":166,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example: delete medicine /info S234\");","lastModifiedDate":"2022-04-07"},{"lineNumber":167,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":168,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":169,"author":{"gitId":"wraineflores"},"content":"    public static void printDeleteAppointmentMessage() {","lastModifiedDate":"2022-04-07"},{"lineNumber":170,"author":{"gitId":"wraineflores"},"content":"        printNewLineSeparator();","lastModifiedDate":"2022-04-07"},{"lineNumber":171,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Feature: DELETE APPOINTMENT\");","lastModifiedDate":"2022-04-07"},{"lineNumber":172,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Format: delete appointment /info [appointment id]\");","lastModifiedDate":"2022-04-07"},{"lineNumber":173,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example: delete appointment /info 12356701017647\");","lastModifiedDate":"2022-04-09"},{"lineNumber":174,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":175,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":176,"author":{"gitId":"wraineflores"},"content":"    public static void printEditDoctorMessage() {","lastModifiedDate":"2022-04-07"},{"lineNumber":177,"author":{"gitId":"wraineflores"},"content":"        printNewLineSeparator();","lastModifiedDate":"2022-04-07"},{"lineNumber":178,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Feature: EDIT DOCTOR\");","lastModifiedDate":"2022-04-07"},{"lineNumber":179,"author":{"gitId":"wraineflores"},"content":"        System.out.print(\"Format: edit doctor /info [nric],[name],[age],[gender], \");","lastModifiedDate":"2022-04-07"},{"lineNumber":180,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"[address],[DOB],[Specialisation]\");","lastModifiedDate":"2022-04-07"},{"lineNumber":181,"author":{"gitId":"wraineflores"},"content":"        System.out.print(\"Example: edit doctor /info S1234567A, John Cena, \");","lastModifiedDate":"2022-04-07"},{"lineNumber":182,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"23, M, 10 Baker Street, 1999-12-31, Urinology\");","lastModifiedDate":"2022-04-07"},{"lineNumber":183,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":184,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":185,"author":{"gitId":"wraineflores"},"content":"    public static void printEditPatientMessage() {","lastModifiedDate":"2022-04-07"},{"lineNumber":186,"author":{"gitId":"wraineflores"},"content":"        printNewLineSeparator();","lastModifiedDate":"2022-04-07"},{"lineNumber":187,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Feature: Edit PATIENT\");","lastModifiedDate":"2022-04-07"},{"lineNumber":188,"author":{"gitId":"wraineflores"},"content":"        System.out.print(\"Format: edit patient /info [nric], [name], [age], [gender], \");","lastModifiedDate":"2022-04-07"},{"lineNumber":189,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"[address], [DOB], [Date of Admission]\");","lastModifiedDate":"2022-04-07"},{"lineNumber":190,"author":{"gitId":"wraineflores"},"content":"        System.out.print(\"Example: edit patient /info S1234567A, John Cena, 23, \");","lastModifiedDate":"2022-04-07"},{"lineNumber":191,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"M, 10 Baker Street, 1999-12-31, 2021-02-15\");","lastModifiedDate":"2022-04-07"},{"lineNumber":192,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":193,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":194,"author":{"gitId":"wraineflores"},"content":"    public static void printEditMedicineMessage() {","lastModifiedDate":"2022-04-07"},{"lineNumber":195,"author":{"gitId":"wraineflores"},"content":"        printNewLineSeparator();","lastModifiedDate":"2022-04-07"},{"lineNumber":196,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Feature: EDIT MEDICINE\");","lastModifiedDate":"2022-04-07"},{"lineNumber":197,"author":{"gitId":"wraineflores"},"content":"        System.out.print(\"Format: edit medicine /info [batch id], [name], [dosage], \");","lastModifiedDate":"2022-04-07"},{"lineNumber":198,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"[expiry date],[side effects],[quantity]\");","lastModifiedDate":"2022-04-07"},{"lineNumber":199,"author":{"gitId":"wraineflores"},"content":"        System.out.print(\"Example: edit medicine /info A123, Paracetamol, \");","lastModifiedDate":"2022-04-07"},{"lineNumber":200,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"500, 2023-06-11, Drowsiness, 10\");","lastModifiedDate":"2022-04-07"},{"lineNumber":201,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":202,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":203,"author":{"gitId":"wraineflores"},"content":"    public static void printEditAppointmentMessage() {","lastModifiedDate":"2022-04-07"},{"lineNumber":204,"author":{"gitId":"wraineflores"},"content":"        printNewLineSeparator();","lastModifiedDate":"2022-04-07"},{"lineNumber":205,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Feature: EDIT APPOINTMENT\");","lastModifiedDate":"2022-04-07"},{"lineNumber":206,"author":{"gitId":"wraineflores"},"content":"        System.out.print(\"Format: edit appointment /info [appointment id],[patient nric],\");","lastModifiedDate":"2022-04-07"},{"lineNumber":207,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"[patient name],[doctor nric],[doctor name],[appointment date],[appointment details]\");","lastModifiedDate":"2022-04-07"},{"lineNumber":208,"author":{"gitId":"wraineflores"},"content":"        System.out.print(\"Example: edit appointment /info A123,S1234567A,Don,\");","lastModifiedDate":"2022-04-07"},{"lineNumber":209,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"S1234567A,John,2022-10-15,Regular knee checkup\");","lastModifiedDate":"2022-04-07"},{"lineNumber":210,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":211,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":212,"author":{"gitId":"wraineflores"},"content":"    public static void printFindDoctorMessage() {","lastModifiedDate":"2022-04-07"},{"lineNumber":213,"author":{"gitId":"wraineflores"},"content":"        printNewLineSeparator();","lastModifiedDate":"2022-04-07"},{"lineNumber":214,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Feature: FIND DOCTOR\");","lastModifiedDate":"2022-04-07"},{"lineNumber":215,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Format: find doctor /info [parameter], [keyword to find]\");","lastModifiedDate":"2022-04-07"},{"lineNumber":216,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example 1: find doctor /info name, Bruce Lee\");","lastModifiedDate":"2022-04-07"},{"lineNumber":217,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example 2: find doctor /info nric, S1234567X\");","lastModifiedDate":"2022-04-07"},{"lineNumber":218,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example 3: find doctor /info age, 23\");","lastModifiedDate":"2022-04-07"},{"lineNumber":219,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example 4: find doctor /info gender, M\");","lastModifiedDate":"2022-04-07"},{"lineNumber":220,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example 5: find doctor /info address, 15 King\u0027s Avenue\");","lastModifiedDate":"2022-04-07"},{"lineNumber":221,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example 6: find doctor /info dob, 1999-12-31\");","lastModifiedDate":"2022-04-07"},{"lineNumber":222,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example 7: find doctor /info specialization, Dermatology\");","lastModifiedDate":"2022-04-07"},{"lineNumber":223,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":224,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":225,"author":{"gitId":"wraineflores"},"content":"    public static void printFindPatientMessage() {","lastModifiedDate":"2022-04-07"},{"lineNumber":226,"author":{"gitId":"wraineflores"},"content":"        printNewLineSeparator();","lastModifiedDate":"2022-04-07"},{"lineNumber":227,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Feature: FIND PATIENT\");","lastModifiedDate":"2022-04-07"},{"lineNumber":228,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Format: find patient /info [parameter], [keyword to find]\");","lastModifiedDate":"2022-04-07"},{"lineNumber":229,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example 1: find patient /info name, Bruce Lee\");","lastModifiedDate":"2022-04-07"},{"lineNumber":230,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example 2: find patient /info nric, S1234567X\");","lastModifiedDate":"2022-04-07"},{"lineNumber":231,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example 3: find patient /info age, 23\");","lastModifiedDate":"2022-04-07"},{"lineNumber":232,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example 4: find patient /info gender, M\");","lastModifiedDate":"2022-04-07"},{"lineNumber":233,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example 5: find patient /info address, 15 King\u0027s Avenue\");","lastModifiedDate":"2022-04-07"},{"lineNumber":234,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example 6: find patient /info dob, 1999-12-31\");","lastModifiedDate":"2022-04-07"},{"lineNumber":235,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example 7: find patient /info admissiondate, 2021-02-15\");","lastModifiedDate":"2022-04-07"},{"lineNumber":236,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":237,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":238,"author":{"gitId":"wraineflores"},"content":"    public static void printFindMedicineMessage() {","lastModifiedDate":"2022-04-07"},{"lineNumber":239,"author":{"gitId":"wraineflores"},"content":"        printNewLineSeparator();","lastModifiedDate":"2022-04-07"},{"lineNumber":240,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Feature: FIND MEDICINE\");","lastModifiedDate":"2022-04-07"},{"lineNumber":241,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Format: find medicine /info [parameter], [keyword to find]\");","lastModifiedDate":"2022-04-07"},{"lineNumber":242,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example 1: find medicine /info id, 12356701017647\");","lastModifiedDate":"2022-04-09"},{"lineNumber":243,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example 2: find medicine /info name, Paracetamol\");","lastModifiedDate":"2022-04-07"},{"lineNumber":244,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example 3: find medicine /info dosage, 500\");","lastModifiedDate":"2022-04-07"},{"lineNumber":245,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example 4: find medicine /info expiry, 2023-06-11\");","lastModifiedDate":"2022-04-07"},{"lineNumber":246,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example 5: find medicine /info sideeffects, headache\");","lastModifiedDate":"2022-04-07"},{"lineNumber":247,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example 6: find medicine /info quantity, 10\");","lastModifiedDate":"2022-04-07"},{"lineNumber":248,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":249,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":250,"author":{"gitId":"wraineflores"},"content":"    public static void printUpdateMedicineMessage() {","lastModifiedDate":"2022-04-07"},{"lineNumber":251,"author":{"gitId":"wraineflores"},"content":"        printNewLineSeparator();","lastModifiedDate":"2022-04-07"},{"lineNumber":252,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Additional feature: UPDATE MEDICINE\");","lastModifiedDate":"2022-04-07"},{"lineNumber":253,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Format: update medicines\");","lastModifiedDate":"2022-04-07"},{"lineNumber":254,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example: update medicines\");","lastModifiedDate":"2022-04-07"},{"lineNumber":255,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":256,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":257,"author":{"gitId":"wraineflores"},"content":"    public static void printClearMedicineMessage() {","lastModifiedDate":"2022-04-07"},{"lineNumber":258,"author":{"gitId":"wraineflores"},"content":"        printNewLineSeparator();","lastModifiedDate":"2022-04-07"},{"lineNumber":259,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Additional feature: CLEAR MEDICINE\");","lastModifiedDate":"2022-04-07"},{"lineNumber":260,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Format: clear medicines\");","lastModifiedDate":"2022-04-07"},{"lineNumber":261,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example: clear medicines\");","lastModifiedDate":"2022-04-07"},{"lineNumber":262,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":263,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":264,"author":{"gitId":"wraineflores"},"content":"    public static void printByeMessage() {","lastModifiedDate":"2022-04-07"},{"lineNumber":265,"author":{"gitId":"wraineflores"},"content":"        printNewLineSeparator();","lastModifiedDate":"2022-04-07"},{"lineNumber":266,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Feature: BYE (to exit \u0026 save the programme)\");","lastModifiedDate":"2022-04-07"},{"lineNumber":267,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Format: bye\");","lastModifiedDate":"2022-04-07"},{"lineNumber":268,"author":{"gitId":"wraineflores"},"content":"        System.out.println(\"Example: bye\");","lastModifiedDate":"2022-04-07"},{"lineNumber":269,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":270,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":271,"author":{"gitId":"Anvitha-r"},"content":"    public int getSize() {","lastModifiedDate":"2022-03-26"},{"lineNumber":272,"author":{"gitId":"Anvitha-r"},"content":"        return patients.size();","lastModifiedDate":"2022-03-26"},{"lineNumber":273,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":274,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":275,"author":{"gitId":"wraineflores"},"content":"    public void printWrongInput() {","lastModifiedDate":"2022-03-09"},{"lineNumber":276,"author":{"gitId":"wraineflores"},"content":"        printNewLineSeparator();","lastModifiedDate":"2022-03-09"},{"lineNumber":277,"author":{"gitId":"shxr3f"},"content":"        printParagraph(\"Sorry. Input was invalid.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":278,"author":{"gitId":"wraineflores"},"content":"        printHelp();","lastModifiedDate":"2022-03-09"},{"lineNumber":279,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":280,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":281,"author":{"gitId":"wraineflores"},"content":"    public void printBye() {","lastModifiedDate":"2022-03-09"},{"lineNumber":282,"author":{"gitId":"wraineflores"},"content":"        printNewLineSeparator();","lastModifiedDate":"2022-03-09"},{"lineNumber":283,"author":{"gitId":"shxr3f"},"content":"        printParagraph(\"Goodbye! Exiting the programme.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":284,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":285,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":286,"author":{"gitId":"tanweili"},"content":"    public void printAddPatientExampleMessage() {","lastModifiedDate":"2022-03-15"},{"lineNumber":287,"author":{"gitId":"shxr3f"},"content":"        printParagraph(\"Please note the error(s) mentioned above and try again!\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":288,"author":{"gitId":"shxr3f"},"content":"                + \"Here are two examples. Please follow the input order:\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":289,"author":{"gitId":"shxr3f"},"content":"                + \"add patient /info S1234567A, John Doe, 23, M, 10 Baker Street, 1999-12-31, 2021-02-15\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":290,"author":{"gitId":"shxr3f"},"content":"                + \"add patient /info T4867591Z, Mary Douglas Owen, 25, F, 15 King\u0027s Avenue, 1997-08-26, 2020-03-30\");","lastModifiedDate":"2022-03-22"},{"lineNumber":291,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":292,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":293,"author":{"gitId":"kktai1512"},"content":"    public void printAddDoctorExampleMessage() {","lastModifiedDate":"2022-03-16"},{"lineNumber":294,"author":{"gitId":"shxr3f"},"content":"        printParagraph(\"Please note the error(s) mentioned above and try again!\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":295,"author":{"gitId":"shxr3f"},"content":"                + \"Here are two examples. Please follow the input order:\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":296,"author":{"gitId":"shxr3f"},"content":"                + \"add doctor /info S1234567A, John Doe, 23, M, 10 Baker Street, 1999-12-31, Urinology\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":297,"author":{"gitId":"shxr3f"},"content":"                + \"add doctor /info T4867591Z, Mary Douglas Owen, 25, F, 15 King\u0027s Avenue, 1997-08-26, Optometry\");","lastModifiedDate":"2022-03-22"},{"lineNumber":298,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":299,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":300,"author":{"gitId":"tanweili"},"content":"    public void printDeletePatientExampleMessage(PatientList patientList) {","lastModifiedDate":"2022-03-15"},{"lineNumber":301,"author":{"gitId":"shxr3f"},"content":"        printParagraph(\"Please input a positive number up to \" + patientList.getSize() + \" only.\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":302,"author":{"gitId":"shxr3f"},"content":"                + \"Here is an example:\\ndelete patient /info 1\");","lastModifiedDate":"2022-03-22"},{"lineNumber":303,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":304,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":305,"author":{"gitId":"Anvitha-r"},"content":"    public void printDeleteDoctorErrorMessage(DoctorList doctorList) {","lastModifiedDate":"2022-03-16"},{"lineNumber":306,"author":{"gitId":"shxr3f"},"content":"        printParagraph(\"Please input a positive number up to \" + doctorList.getSize() + \" only.\\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":307,"author":{"gitId":"shxr3f"},"content":"                + \"Here is an example:\\ndelete doctor /info 1\");","lastModifiedDate":"2022-03-22"},{"lineNumber":308,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":309,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":310,"author":{"gitId":"tanweili"},"content":"    public void printAddAppointmentExampleMessage() {","lastModifiedDate":"2022-03-22"},{"lineNumber":311,"author":{"gitId":"tanweili"},"content":"        printParagraph(\"Please note the error(s) mentioned above and try again!\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":312,"author":{"gitId":"tanweili"},"content":"                + \"Here is an example. Please follow the input order:\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":313,"author":{"gitId":"tanweili"},"content":"                + \"add appointment /info S1234567A, Thomas, S1234567A, Ben, 2023-01-01, Knee checkup\");","lastModifiedDate":"2022-03-23"},{"lineNumber":314,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":315,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":316,"author":{"gitId":"tanweili"},"content":"    public void printNullParametersMessage() {","lastModifiedDate":"2022-03-15"},{"lineNumber":317,"author":{"gitId":"tanweili"},"content":"        UI.printParagraph(\"Parameters missing or not detected. Please use /info for parameters.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":318,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":319,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":320,"author":{"gitId":"kktai1512"},"content":"    public void printAddMedicineExampleMessage() {","lastModifiedDate":"2022-03-23"},{"lineNumber":321,"author":{"gitId":"kktai1512"},"content":"        printParagraph(\"Invalid format. Please follow the below example and try again.\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":322,"author":{"gitId":"shxr3f"},"content":"                + \"add medicine /info s231, Paracetamol,500,2023-12-12,Headaches,10\");","lastModifiedDate":"2022-03-23"},{"lineNumber":323,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":324,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":325,"author":{"gitId":"shxr3f"},"content":"    public void printEditMedicineExampleMessage() {","lastModifiedDate":"2022-03-23"},{"lineNumber":326,"author":{"gitId":"shxr3f"},"content":"        printParagraph(\"Invalid format. Please follow the below example and try again.\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":327,"author":{"gitId":"shxr3f"},"content":"                + \"edit medicine /info s231, Paracetamol,500,2023-12-12,Headaches,10\");","lastModifiedDate":"2022-03-23"},{"lineNumber":328,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":329,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":330,"author":{"gitId":"wraineflores"},"content":"    public void printFindDoctorExampleMessage() {","lastModifiedDate":"2022-03-27"},{"lineNumber":331,"author":{"gitId":"wraineflores"},"content":"        printParagraph(\"find doctor /info name, Bruce Lee\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":332,"author":{"gitId":"wraineflores"},"content":"                + \"find doctor /info nric, S1234567X\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":333,"author":{"gitId":"wraineflores"},"content":"                + \"find doctor /info age, 23\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":334,"author":{"gitId":"wraineflores"},"content":"                + \"find doctor /info gender, M\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":335,"author":{"gitId":"wraineflores"},"content":"                + \"find doctor /info address, 15 King\u0027s Avenue\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":336,"author":{"gitId":"wraineflores"},"content":"                + \"find doctor /info dob, 1999-12-31\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":337,"author":{"gitId":"wraineflores"},"content":"                + \"find doctor /info specialization, Dermatology\\n\");","lastModifiedDate":"2022-03-27"},{"lineNumber":338,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":339,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":340,"author":{"gitId":"wraineflores"},"content":"    public void printFindPatientExampleMessage() {","lastModifiedDate":"2022-03-27"},{"lineNumber":341,"author":{"gitId":"wraineflores"},"content":"        printParagraph(\"find patient /info name, Bruce Lee\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":342,"author":{"gitId":"wraineflores"},"content":"                + \"find patient /info nric, S1234567X\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":343,"author":{"gitId":"wraineflores"},"content":"                + \"find patient /info age, 23\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":344,"author":{"gitId":"wraineflores"},"content":"                + \"find patient /info gender, M\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":345,"author":{"gitId":"wraineflores"},"content":"                + \"find patient /info address, 15 King\u0027s Avenue\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":346,"author":{"gitId":"wraineflores"},"content":"                + \"find patient /info dob, 1999-12-31\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":347,"author":{"gitId":"wraineflores"},"content":"                + \"find patient /info admissiondate, 2021-02-15\\n\");","lastModifiedDate":"2022-03-27"},{"lineNumber":348,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":349,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":350,"author":{"gitId":"wraineflores"},"content":"    public void printFindMedicinetExampleMessage() {","lastModifiedDate":"2022-03-27"},{"lineNumber":351,"author":{"gitId":"wraineflores"},"content":"        printParagraph(\"find medicine /info id, S123\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":352,"author":{"gitId":"wraineflores"},"content":"                + \"find medicine /info name, Paracetamol\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":353,"author":{"gitId":"wraineflores"},"content":"                + \"find medicine /info dosage, 500\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":354,"author":{"gitId":"wraineflores"},"content":"                + \"find medicine /info expiry, 2023-06-11\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":355,"author":{"gitId":"wraineflores"},"content":"                + \"find medicine /info sideeffects, headache\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":356,"author":{"gitId":"wraineflores"},"content":"                + \"find medicine /info quantity, 10\\n\");","lastModifiedDate":"2022-03-27"},{"lineNumber":357,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":358,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":359,"author":{"gitId":"shxr3f"},"content":"    public static void printPrompt() {","lastModifiedDate":"2022-03-22"},{"lineNumber":360,"author":{"gitId":"shxr3f"},"content":"        System.out.print(\"You: \");","lastModifiedDate":"2022-03-16"},{"lineNumber":361,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":362,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":363,"author":{"gitId":"shxr3f"},"content":"    public static void printParagraph(String paragraph) {","lastModifiedDate":"2022-03-22"},{"lineNumber":364,"author":{"gitId":"shxr3f"},"content":"        String[] arrayOfSentences \u003d paragraph.split(\"\\n\");","lastModifiedDate":"2022-03-16"},{"lineNumber":365,"author":{"gitId":"shxr3f"},"content":"        System.out.println(\"HalpMi: \" + arrayOfSentences[0]);","lastModifiedDate":"2022-03-22"},{"lineNumber":366,"author":{"gitId":"shxr3f"},"content":"        for (int i \u003d 1; i \u003c arrayOfSentences.length; i++) {","lastModifiedDate":"2022-03-22"},{"lineNumber":367,"author":{"gitId":"shxr3f"},"content":"            System.out.print(\"        \");","lastModifiedDate":"2022-03-16"},{"lineNumber":368,"author":{"gitId":"shxr3f"},"content":"            System.out.println(arrayOfSentences[i]);","lastModifiedDate":"2022-03-22"},{"lineNumber":369,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":370,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":371,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":372,"author":{"gitId":"shxr3f"},"content":"    public static void printCont(String sentence) {","lastModifiedDate":"2022-03-22"},{"lineNumber":373,"author":{"gitId":"shxr3f"},"content":"        System.out.print(\"        \");","lastModifiedDate":"2022-03-16"},{"lineNumber":374,"author":{"gitId":"shxr3f"},"content":"        System.out.println(sentence);","lastModifiedDate":"2022-03-16"},{"lineNumber":375,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":376,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":377,"author":{"gitId":"kktai1512"},"content":"    public void printDeleteMedicineExampleMessage(MedicineList medicineList) {","lastModifiedDate":"2022-03-23"},{"lineNumber":378,"author":{"gitId":"kktai1512"},"content":"        printParagraph(\"Please input a positive number up to \" + medicineList.getSize() + \" only.\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":379,"author":{"gitId":"kktai1512"},"content":"                + \"Here is an example:\\ndelete patient /info 1\");","lastModifiedDate":"2022-03-23"},{"lineNumber":380,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":381,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":382,"author":{"gitId":"shxr3f"},"content":"    public void print(Status status) {","lastModifiedDate":"2022-03-28"},{"lineNumber":383,"author":{"gitId":"shxr3f"},"content":"        switch (status) {","lastModifiedDate":"2022-03-28"},{"lineNumber":384,"author":{"gitId":"shxr3f"},"content":"        case ADD_PATIENT_SUCCESS:","lastModifiedDate":"2022-03-28"},{"lineNumber":385,"author":{"gitId":"shxr3f"},"content":"            printParagraph(\"Patient has been added successfully!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":386,"author":{"gitId":"shxr3f"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":387,"author":{"gitId":"shxr3f"},"content":"        case ADD_DOCTOR_SUCCESS:","lastModifiedDate":"2022-03-28"},{"lineNumber":388,"author":{"gitId":"shxr3f"},"content":"            printParagraph(\"Doctor has been added successfully!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":389,"author":{"gitId":"shxr3f"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":390,"author":{"gitId":"shxr3f"},"content":"        case ADD_MEDICINE_SUCCESS:","lastModifiedDate":"2022-03-28"},{"lineNumber":391,"author":{"gitId":"shxr3f"},"content":"            printParagraph(\"Medicine has been added successfully!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":392,"author":{"gitId":"shxr3f"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":393,"author":{"gitId":"shxr3f"},"content":"        case ADD_APPOINTMENT_SUCCESS:","lastModifiedDate":"2022-03-28"},{"lineNumber":394,"author":{"gitId":"shxr3f"},"content":"            printParagraph(\"Appointment has been added successfully!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":395,"author":{"gitId":"shxr3f"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":396,"author":{"gitId":"shxr3f"},"content":"        case DELETE_PATIENT_SUCCESS:","lastModifiedDate":"2022-03-28"},{"lineNumber":397,"author":{"gitId":"shxr3f"},"content":"            printParagraph(\"Patient has been deleted successfully!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":398,"author":{"gitId":"shxr3f"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":399,"author":{"gitId":"shxr3f"},"content":"        case DELETE_DOCTOR_SUCCESS:","lastModifiedDate":"2022-03-28"},{"lineNumber":400,"author":{"gitId":"shxr3f"},"content":"            printParagraph(\"Doctor has been deleted successfully!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":401,"author":{"gitId":"shxr3f"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":402,"author":{"gitId":"shxr3f"},"content":"        case DELETE_MEDICINE_SUCCESS:","lastModifiedDate":"2022-03-28"},{"lineNumber":403,"author":{"gitId":"shxr3f"},"content":"            printParagraph(\"Medicine has been deleted successfully!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":404,"author":{"gitId":"shxr3f"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":405,"author":{"gitId":"shxr3f"},"content":"        case DELETE_APPOINTMENT_SUCCESS:","lastModifiedDate":"2022-03-28"},{"lineNumber":406,"author":{"gitId":"shxr3f"},"content":"            printParagraph(\"Appointment has been deleted successfully!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":407,"author":{"gitId":"shxr3f"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":408,"author":{"gitId":"shxr3f"},"content":"        case EDIT_DOCTOR_SUCCESS:","lastModifiedDate":"2022-03-28"},{"lineNumber":409,"author":{"gitId":"shxr3f"},"content":"            printParagraph(\"Doctor has been edited successfully!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":410,"author":{"gitId":"shxr3f"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":411,"author":{"gitId":"shxr3f"},"content":"        case EDIT_PATIENT_SUCCESS:","lastModifiedDate":"2022-03-28"},{"lineNumber":412,"author":{"gitId":"shxr3f"},"content":"            printParagraph(\"Patient has been edited successfully!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":413,"author":{"gitId":"shxr3f"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":414,"author":{"gitId":"shxr3f"},"content":"        case EDIT_MEDICINE_SUCCESS:","lastModifiedDate":"2022-03-28"},{"lineNumber":415,"author":{"gitId":"shxr3f"},"content":"            printParagraph(\"Medicine has been edited successfully!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":416,"author":{"gitId":"shxr3f"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":417,"author":{"gitId":"shxr3f"},"content":"        case EDIT_APPOINTMENT_SUCCESS:","lastModifiedDate":"2022-03-28"},{"lineNumber":418,"author":{"gitId":"shxr3f"},"content":"            printParagraph(\"Appointment has been edited successfully!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":419,"author":{"gitId":"shxr3f"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":420,"author":{"gitId":"Anvitha-r"},"content":"        case PRINT_HELP:","lastModifiedDate":"2022-03-28"},{"lineNumber":421,"author":{"gitId":"Anvitha-r"},"content":"            UI.printHelp();","lastModifiedDate":"2022-03-28"},{"lineNumber":422,"author":{"gitId":"Anvitha-r"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":423,"author":{"gitId":"shxr3f"},"content":"        default:","lastModifiedDate":"2022-03-28"},{"lineNumber":424,"author":{"gitId":"shxr3f"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":425,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":426,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":427,"author":{"gitId":"Anvitha-r"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"tanweili":21,"wraineflores":260,"Anvitha-r":26,"shxr3f":105,"kktai1512":15}},{"path":"src/main/java/seedu/duke/helper/Validator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kktai1512"},"content":"package seedu.duke.helper;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.exception.UserInputErrorException;","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"Anvitha-r"},"content":"import java.time.Period;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"kktai1512"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"kktai1512"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"kktai1512"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"kktai1512"},"content":"public class Validator {","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"kktai1512"},"content":"    /* Validating person attributes */","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"kktai1512"},"content":"    public static void minParameterCheck(String[] parametersArray, int length) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"kktai1512"},"content":"        if (parametersArray.length !\u003d length) {","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"There is one or more parameters missing\");","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"kktai1512"},"content":"    public static void validateNric(String nric) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"kktai1512"},"content":"        Pattern nricPattern \u003d Pattern.compile(\"[A-Z][0-9]{7}[A-Z]\");","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"kktai1512"},"content":"        Matcher nricMatcher \u003d nricPattern.matcher(nric);","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"kktai1512"},"content":"        if (!nricMatcher.matches()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"NRIC must start with a capital letter, \"","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"kktai1512"},"content":"                    + \"followed by 7 digits and end with a capital letter.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"kktai1512"},"content":"    private static void validateFullName(String fullName) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"kktai1512"},"content":"        Pattern fullNamePattern \u003d Pattern.compile(\"[a-zA-Z ]*\");","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"kktai1512"},"content":"        Matcher fullNameMatcher \u003d fullNamePattern.matcher(fullName);","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"kktai1512"},"content":"        if (!fullNameMatcher.matches()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Full name must contain only alphabets, \"","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"kktai1512"},"content":"                    + \"no special characters or numbers.\");","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"kktai1512"},"content":"    private static void validateAge(String ageString) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"kktai1512"},"content":"        int age;","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"kktai1512"},"content":"        try {","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"kktai1512"},"content":"            age \u003d Integer.parseInt(ageString);","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"kktai1512"},"content":"        } catch (NumberFormatException numberFormatException) {","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Age must be a positive number!\");","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"kktai1512"},"content":"        //age must be within 1 and 120","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"kktai1512"},"content":"        if (!(1 \u003c\u003d age \u0026\u0026 age \u003c\u003d 120)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Age must be between 1 and 120 inclusive.\");","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"kktai1512"},"content":"    private static void validateGender(String gender) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":53,"author":{"gitId":"kktai1512"},"content":"        Pattern genderPattern \u003d Pattern.compile(\"M|F\");","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"kktai1512"},"content":"        Matcher genderMatcher \u003d genderPattern.matcher(gender);","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"kktai1512"},"content":"        if (!genderMatcher.matches()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Gender must be a single character: M or F.\");","lastModifiedDate":"2022-04-09"},{"lineNumber":57,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"kktai1512"},"content":"    private static void validateAddress(String address) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":61,"author":{"gitId":"kktai1512"},"content":"        Pattern addressPattern \u003d Pattern.compile(\"[\\\\w\\\\-\\\\s\u0027()#]*\");","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"kktai1512"},"content":"        Matcher addressMatcher \u003d addressPattern.matcher(address);","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"kktai1512"},"content":"        if (!addressMatcher.matches()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Address must be alphanumeric. \"","lastModifiedDate":"2022-04-09"},{"lineNumber":65,"author":{"gitId":"kktai1512"},"content":"                    + \"Only these specific special characters are allowed: \u0027 ( ) #\");","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"kktai1512"},"content":"    private static void validateDob(String dobString) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":70,"author":{"gitId":"kktai1512"},"content":"        LocalDate dob;","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"kktai1512"},"content":"        try {","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"kktai1512"},"content":"            dob \u003d LocalDate.parse(dobString);","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"kktai1512"},"content":"        } catch (DateTimeParseException dateTimeParseException) {","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Date of birth must be in YYYY-MM-DD format. \"","lastModifiedDate":"2022-04-09"},{"lineNumber":75,"author":{"gitId":"kktai1512"},"content":"                    + \"It cannot be before 1900-01-01 or be today and after.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"kktai1512"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"kktai1512"},"content":"        LocalDate dobLimit \u003d LocalDate.parse(\"1900-01-01\");","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"kktai1512"},"content":"        // dob is within the range of 1900 - today","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"kktai1512"},"content":"        if (!(dob.isAfter(dobLimit) \u0026\u0026 dob.isBefore(today))) {","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Date of birth must be in YYYY-MM-DD format. \"","lastModifiedDate":"2022-04-09"},{"lineNumber":82,"author":{"gitId":"kktai1512"},"content":"                    + \"It cannot be before 1900-01-01 or be today and after.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"kktai1512"},"content":"    // todo : admission date logic (w respect to dob)","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"kktai1512"},"content":"    private static void validateAdmissionDate(String admissionDateString) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":88,"author":{"gitId":"kktai1512"},"content":"        LocalDate admissionDate;","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"kktai1512"},"content":"        try {","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"kktai1512"},"content":"            admissionDate \u003d LocalDate.parse(admissionDateString);","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"kktai1512"},"content":"        } catch (DateTimeParseException dateTimeParseException) {","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Date of birth must be in YYYY-MM-DD format. \"","lastModifiedDate":"2022-04-09"},{"lineNumber":93,"author":{"gitId":"kktai1512"},"content":"                    + \"It cannot be before 1900-01-01 or be today and after.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"kktai1512"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"kktai1512"},"content":"        LocalDate admissionDateLimit \u003d LocalDate.parse(\"1980-01-01\");","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"kktai1512"},"content":"        // admission date is after 1980 and before today","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"kktai1512"},"content":"        if (!(admissionDate.isAfter(admissionDateLimit) \u0026\u0026 admissionDate.isBefore(today))) {","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Date of birth must be in YYYY-MM-DD format. \"","lastModifiedDate":"2022-04-09"},{"lineNumber":101,"author":{"gitId":"kktai1512"},"content":"                    + \"It cannot be before 1900-01-01 or be today and after.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"kktai1512"},"content":"    private static void validatedobandage(String age, String dob) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":106,"author":{"gitId":"Anvitha-r"},"content":"        validateDob(dob);","lastModifiedDate":"2022-04-07"},{"lineNumber":107,"author":{"gitId":"Anvitha-r"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2022-04-07"},{"lineNumber":108,"author":{"gitId":"Anvitha-r"},"content":"        LocalDate birthday \u003d LocalDate.parse(dob);","lastModifiedDate":"2022-04-07"},{"lineNumber":109,"author":{"gitId":"Anvitha-r"},"content":"        Period period \u003d Period.between(birthday, today);","lastModifiedDate":"2022-04-07"},{"lineNumber":110,"author":{"gitId":"Anvitha-r"},"content":"        int calculatedAge \u003d period.getYears();","lastModifiedDate":"2022-04-07"},{"lineNumber":111,"author":{"gitId":"wraineflores"},"content":"        int parsedAge \u003d Integer.parseInt(age);","lastModifiedDate":"2022-04-08"},{"lineNumber":112,"author":{"gitId":"wraineflores"},"content":"        if (!(parsedAge \u003d\u003d calculatedAge)) {","lastModifiedDate":"2022-04-08"},{"lineNumber":113,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Please ensure that the date of birth matches the age provided\");","lastModifiedDate":"2022-04-09"},{"lineNumber":114,"author":{"gitId":"Anvitha-r"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":115,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":116,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":117,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":118,"author":{"gitId":"kktai1512"},"content":"    /* Validating person */","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"kktai1512"},"content":"    private static void validateAddPerson(String[] parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":120,"author":{"gitId":"kktai1512"},"content":"        validateNric(parameters[0]);","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"kktai1512"},"content":"        validateFullName(parameters[1]);","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"kktai1512"},"content":"        validateAge(parameters[2]);","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"kktai1512"},"content":"        validateGender(parameters[3]);","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"kktai1512"},"content":"        validateAddress(parameters[4]);","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"kktai1512"},"content":"        validateDob(parameters[5]);","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"Anvitha-r"},"content":"        validatedobandage(parameters[2], parameters[5]);","lastModifiedDate":"2022-04-07"},{"lineNumber":127,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"kktai1512"},"content":"    private static void validateSpecialization(String specialization) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":130,"author":{"gitId":"kktai1512"},"content":"        Pattern fullNamePattern \u003d Pattern.compile(\"[a-zA-Z ]*\");","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"Anvitha-r"},"content":"        Matcher fullNameMatcher \u003d fullNamePattern.matcher(specialization);","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"kktai1512"},"content":"        if (!fullNameMatcher.matches()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":133,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Specialization must contain only alphabets and no special characters.\");","lastModifiedDate":"2022-04-09"},{"lineNumber":134,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":135,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":136,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":137,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":138,"author":{"gitId":"kktai1512"},"content":"    static void validateAddDoctor(String[] parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":139,"author":{"gitId":"kktai1512"},"content":"        minParameterCheck(parameters, 7);","lastModifiedDate":"2022-04-09"},{"lineNumber":140,"author":{"gitId":"kktai1512"},"content":"        validateAddPerson(Arrays.copyOfRange(parameters, 0, 6));","lastModifiedDate":"2022-03-23"},{"lineNumber":141,"author":{"gitId":"kktai1512"},"content":"        validateSpecialization(parameters[6]);","lastModifiedDate":"2022-03-23"},{"lineNumber":142,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":143,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":144,"author":{"gitId":"kktai1512"},"content":"    static void validateAddPatient(String[] parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":145,"author":{"gitId":"kktai1512"},"content":"        minParameterCheck(parameters, 7);","lastModifiedDate":"2022-04-09"},{"lineNumber":146,"author":{"gitId":"kktai1512"},"content":"        validateAddPerson(Arrays.copyOfRange(parameters, 0, 6));","lastModifiedDate":"2022-03-23"},{"lineNumber":147,"author":{"gitId":"kktai1512"},"content":"        validateAdmissionDate(parameters[6]);","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":149,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":150,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"kktai1512"},"content":"    /* Validate medicine attributes */","lastModifiedDate":"2022-03-23"},{"lineNumber":152,"author":{"gitId":"kktai1512"},"content":"    private static boolean validateMedicineName(String medicineName) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":153,"author":{"gitId":"Anvitha-r"},"content":"        boolean isValid \u003d medicineName.matches(\"[a-zA-z ]+\");","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"Anvitha-r"},"content":"        if (!isValid) {","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Invalid Medicine name\");","lastModifiedDate":"2022-04-09"},{"lineNumber":156,"author":{"gitId":"Anvitha-r"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"Anvitha-r"},"content":"        return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":159,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":160,"author":{"gitId":"kktai1512"},"content":"    private static boolean validateDosage(String dosage) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":161,"author":{"gitId":"kktai1512"},"content":"        try {","lastModifiedDate":"2022-03-23"},{"lineNumber":162,"author":{"gitId":"kktai1512"},"content":"            int dosageInt \u003d Integer.parseInt(dosage);","lastModifiedDate":"2022-03-23"},{"lineNumber":163,"author":{"gitId":"kktai1512"},"content":"            return dosageInt \u003e 0;","lastModifiedDate":"2022-03-23"},{"lineNumber":164,"author":{"gitId":"kktai1512"},"content":"        } catch (NumberFormatException numberFormatException) {","lastModifiedDate":"2022-03-23"},{"lineNumber":165,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Invalid Medicine dosage\");","lastModifiedDate":"2022-04-09"},{"lineNumber":166,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":167,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":168,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":169,"author":{"gitId":"kktai1512"},"content":"    private static boolean validateExpiry(String expiry) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":170,"author":{"gitId":"kktai1512"},"content":"        try {","lastModifiedDate":"2022-03-23"},{"lineNumber":171,"author":{"gitId":"kktai1512"},"content":"            LocalDate expiryDate \u003d LocalDate.parse(expiry);","lastModifiedDate":"2022-03-23"},{"lineNumber":172,"author":{"gitId":"shxr3f"},"content":"            LocalDate minimumDate \u003d LocalDate.now();","lastModifiedDate":"2022-03-26"},{"lineNumber":173,"author":{"gitId":"kktai1512"},"content":"            if (expiryDate.isBefore(minimumDate)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":174,"author":{"gitId":"kktai1512"},"content":"                throw new UserInputErrorException(\"Medicine expiry date is before today\");","lastModifiedDate":"2022-04-09"},{"lineNumber":175,"author":{"gitId":"kktai1512"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":176,"author":{"gitId":"kktai1512"},"content":"            return true;","lastModifiedDate":"2022-03-23"},{"lineNumber":177,"author":{"gitId":"kktai1512"},"content":"        } catch (DateTimeParseException dateTimeParseException) {","lastModifiedDate":"2022-03-23"},{"lineNumber":178,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Invalid Medicine Expiry\");","lastModifiedDate":"2022-04-09"},{"lineNumber":179,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":180,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":181,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":182,"author":{"gitId":"kktai1512"},"content":"    private static boolean validateQuantity(String quantity) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":183,"author":{"gitId":"kktai1512"},"content":"        try {","lastModifiedDate":"2022-03-23"},{"lineNumber":184,"author":{"gitId":"kktai1512"},"content":"            int quantityInt \u003d Integer.parseInt(quantity);","lastModifiedDate":"2022-03-23"},{"lineNumber":185,"author":{"gitId":"kktai1512"},"content":"            return quantityInt \u003e 0;","lastModifiedDate":"2022-03-23"},{"lineNumber":186,"author":{"gitId":"kktai1512"},"content":"        } catch (NumberFormatException numberFormatException) {","lastModifiedDate":"2022-03-23"},{"lineNumber":187,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Invalid Medicine Quantity\");","lastModifiedDate":"2022-04-09"},{"lineNumber":188,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":189,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":190,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":191,"author":{"gitId":"kktai1512"},"content":"    private static void validateMedicineId(String medicineId) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":192,"author":{"gitId":"Anvitha-r"},"content":"        Pattern fullNamePattern \u003d Pattern.compile(\"[A-Z][0-9][3}]\");","lastModifiedDate":"2022-03-27"},{"lineNumber":193,"author":{"gitId":"Anvitha-r"},"content":"        Matcher fullNameMatcher \u003d fullNamePattern.matcher(medicineId);","lastModifiedDate":"2022-03-27"},{"lineNumber":194,"author":{"gitId":"Anvitha-r"},"content":"        if (!fullNameMatcher.matches()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":195,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Medicine must contain only alphabets and Numbers.\");","lastModifiedDate":"2022-04-09"},{"lineNumber":196,"author":{"gitId":"Anvitha-r"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":197,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":198,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":199,"author":{"gitId":"kktai1512"},"content":"    private static void validateMedicineSideEffects(String sideEffects) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":200,"author":{"gitId":"Anvitha-r"},"content":"        Pattern fullNamePattern \u003d Pattern.compile(\"[a-zA-Z ]*\");","lastModifiedDate":"2022-03-27"},{"lineNumber":201,"author":{"gitId":"Anvitha-r"},"content":"        Matcher fullNameMatcher \u003d fullNamePattern.matcher(sideEffects);","lastModifiedDate":"2022-03-27"},{"lineNumber":202,"author":{"gitId":"Anvitha-r"},"content":"        if (!fullNameMatcher.matches()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":203,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Specialization must contain only alphabets and no special characters.\");","lastModifiedDate":"2022-04-09"},{"lineNumber":204,"author":{"gitId":"Anvitha-r"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":205,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":206,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":207,"author":{"gitId":"kktai1512"},"content":"    /* Validate medicine */","lastModifiedDate":"2022-03-23"},{"lineNumber":208,"author":{"gitId":"kktai1512"},"content":"    public static void validateMedicine(String[] parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":209,"author":{"gitId":"kktai1512"},"content":"        minParameterCheck(parameters, 6);","lastModifiedDate":"2022-04-09"},{"lineNumber":210,"author":{"gitId":"shxr3f"},"content":"        assert parameters.length \u003d\u003d 6 : \"Validate failed to check parameter length\";","lastModifiedDate":"2022-03-23"},{"lineNumber":211,"author":{"gitId":"kktai1512"},"content":"        boolean check \u003d true;","lastModifiedDate":"2022-03-23"},{"lineNumber":212,"author":{"gitId":"kktai1512"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2022-03-23"},{"lineNumber":213,"author":{"gitId":"kktai1512"},"content":"            switch (i) {","lastModifiedDate":"2022-03-23"},{"lineNumber":214,"author":{"gitId":"shxr3f"},"content":"            case 1:","lastModifiedDate":"2022-03-23"},{"lineNumber":215,"author":{"gitId":"kktai1512"},"content":"                check \u003d validateMedicineName(parameters[i]);","lastModifiedDate":"2022-03-23"},{"lineNumber":216,"author":{"gitId":"kktai1512"},"content":"                break;","lastModifiedDate":"2022-03-23"},{"lineNumber":217,"author":{"gitId":"shxr3f"},"content":"            case 2:","lastModifiedDate":"2022-03-23"},{"lineNumber":218,"author":{"gitId":"kktai1512"},"content":"                check \u003d check \u0026\u0026 validateDosage(parameters[i]);","lastModifiedDate":"2022-03-23"},{"lineNumber":219,"author":{"gitId":"kktai1512"},"content":"                break;","lastModifiedDate":"2022-03-23"},{"lineNumber":220,"author":{"gitId":"shxr3f"},"content":"            case 3:","lastModifiedDate":"2022-03-23"},{"lineNumber":221,"author":{"gitId":"kktai1512"},"content":"                check \u003d check \u0026\u0026 validateExpiry(parameters[i]);","lastModifiedDate":"2022-03-23"},{"lineNumber":222,"author":{"gitId":"kktai1512"},"content":"                break;","lastModifiedDate":"2022-03-23"},{"lineNumber":223,"author":{"gitId":"shxr3f"},"content":"            case 5:","lastModifiedDate":"2022-03-23"},{"lineNumber":224,"author":{"gitId":"kktai1512"},"content":"                check \u003d check \u0026\u0026 validateQuantity(parameters[i]);","lastModifiedDate":"2022-03-23"},{"lineNumber":225,"author":{"gitId":"kktai1512"},"content":"                break;","lastModifiedDate":"2022-03-23"},{"lineNumber":226,"author":{"gitId":"kktai1512"},"content":"            default:","lastModifiedDate":"2022-03-23"},{"lineNumber":227,"author":{"gitId":"kktai1512"},"content":"                break;","lastModifiedDate":"2022-03-23"},{"lineNumber":228,"author":{"gitId":"kktai1512"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":229,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":230,"author":{"gitId":"shxr3f"},"content":"        if (!check) {","lastModifiedDate":"2022-03-24"},{"lineNumber":231,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Some Parameters are invalid!\");","lastModifiedDate":"2022-04-09"},{"lineNumber":232,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":233,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":234,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":235,"author":{"gitId":"kktai1512"},"content":"    /* Validate appointment */","lastModifiedDate":"2022-03-23"},{"lineNumber":236,"author":{"gitId":"kktai1512"},"content":"    private static void validateAppointmentDetails(String appointmentDetails) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":237,"author":{"gitId":"kktai1512"},"content":"        if (appointmentDetails.isBlank() || appointmentDetails.isEmpty()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":238,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Appointment details cannot be empty. Please indicate some details.\");","lastModifiedDate":"2022-04-09"},{"lineNumber":239,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":240,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":241,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":242,"author":{"gitId":"kktai1512"},"content":"    private static void validateDate(String inputDate, String type) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":243,"author":{"gitId":"kktai1512"},"content":"        LocalDate newDate;","lastModifiedDate":"2022-03-23"},{"lineNumber":244,"author":{"gitId":"kktai1512"},"content":"        try {","lastModifiedDate":"2022-03-23"},{"lineNumber":245,"author":{"gitId":"kktai1512"},"content":"            newDate \u003d LocalDate.parse(inputDate);","lastModifiedDate":"2022-03-23"},{"lineNumber":246,"author":{"gitId":"kktai1512"},"content":"        } catch (DateTimeParseException dateTimeParseException) {","lastModifiedDate":"2022-03-23"},{"lineNumber":247,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Date must be in YYYY-MM-DD format. \");","lastModifiedDate":"2022-04-09"},{"lineNumber":248,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":249,"author":{"gitId":"kktai1512"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2022-03-23"},{"lineNumber":250,"author":{"gitId":"kktai1512"},"content":"        LocalDate admissionDateLimit \u003d LocalDate.parse(\"1980-01-01\");","lastModifiedDate":"2022-03-23"},{"lineNumber":251,"author":{"gitId":"tanweili"},"content":"        if (type.equals(\"appointment\") \u0026\u0026 newDate.isBefore(today)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":252,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Date must be in YYYY-MM-DD format. \"","lastModifiedDate":"2022-04-09"},{"lineNumber":253,"author":{"gitId":"tanweili"},"content":"                    + \"New appointment dates must be today and after.\");","lastModifiedDate":"2022-04-05"},{"lineNumber":254,"author":{"gitId":"tanweili"},"content":"        } else if (type.equals(\"patient\") \u0026\u0026 newDate.isAfter(admissionDateLimit)","lastModifiedDate":"2022-03-27"},{"lineNumber":255,"author":{"gitId":"tanweili"},"content":"                \u0026\u0026 newDate.isBefore(today)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":256,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Date must be in YYYY-MM-DD format. \"","lastModifiedDate":"2022-04-09"},{"lineNumber":257,"author":{"gitId":"tanweili"},"content":"                    + \"Patient admission date must be after 1980-01-01 and today or before.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":258,"author":{"gitId":"kktai1512"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":259,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":260,"author":{"gitId":"kktai1512"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":261,"author":{"gitId":"kktai1512"},"content":"    private static boolean validateDate(String expiry) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":262,"author":{"gitId":"Anvitha-r"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":263,"author":{"gitId":"Anvitha-r"},"content":"            LocalDate expiryDate \u003d LocalDate.parse(expiry);","lastModifiedDate":"2022-03-27"},{"lineNumber":264,"author":{"gitId":"Anvitha-r"},"content":"            return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":265,"author":{"gitId":"Anvitha-r"},"content":"        } catch (DateTimeParseException dateTimeParseException) {","lastModifiedDate":"2022-03-27"},{"lineNumber":266,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Invalid Medicine Expiry\");","lastModifiedDate":"2022-04-09"},{"lineNumber":267,"author":{"gitId":"Anvitha-r"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":268,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":269,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":270,"author":{"gitId":"kktai1512"},"content":"    public static void validateAddAppointment(String[] parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":271,"author":{"gitId":"tanweili"},"content":"        minParameterCheck(parameters, 4);","lastModifiedDate":"2022-04-09"},{"lineNumber":272,"author":{"gitId":"tanweili"},"content":"        validateNric(parameters[0]);","lastModifiedDate":"2022-04-05"},{"lineNumber":273,"author":{"gitId":"tanweili"},"content":"        validateNric(parameters[1]);","lastModifiedDate":"2022-03-25"},{"lineNumber":274,"author":{"gitId":"tanweili"},"content":"        validateDate(parameters[2], \"appointment\");","lastModifiedDate":"2022-04-05"},{"lineNumber":275,"author":{"gitId":"kktai1512"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":276,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":277,"author":{"gitId":"kktai1512"},"content":"    public static void validateEditAppointment(String[] parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":278,"author":{"gitId":"kktai1512"},"content":"        minParameterCheck(parameters, 7);","lastModifiedDate":"2022-04-09"},{"lineNumber":279,"author":{"gitId":"shxr3f"},"content":"        validateNric(parameters[1]);","lastModifiedDate":"2022-03-28"},{"lineNumber":280,"author":{"gitId":"shxr3f"},"content":"        validateFullName(parameters[2]);","lastModifiedDate":"2022-03-28"},{"lineNumber":281,"author":{"gitId":"shxr3f"},"content":"        validateNric(parameters[3]);","lastModifiedDate":"2022-03-28"},{"lineNumber":282,"author":{"gitId":"shxr3f"},"content":"        validateFullName(parameters[4]);","lastModifiedDate":"2022-03-28"},{"lineNumber":283,"author":{"gitId":"shxr3f"},"content":"        validateDate(parameters[5], \"appointment\");","lastModifiedDate":"2022-03-28"},{"lineNumber":284,"author":{"gitId":"shxr3f"},"content":"        validateAppointmentDetails(parameters[6]);","lastModifiedDate":"2022-03-28"},{"lineNumber":285,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":286,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":287,"author":{"gitId":"kktai1512"},"content":"    public static void validateFindDoctor(String[] parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":288,"author":{"gitId":"kktai1512"},"content":"        minParameterCheck(parameters, 2);","lastModifiedDate":"2022-04-09"},{"lineNumber":289,"author":{"gitId":"wraineflores"},"content":"        switch (parameters[0]) {","lastModifiedDate":"2022-03-27"},{"lineNumber":290,"author":{"gitId":"wraineflores"},"content":"        case \"nric\":","lastModifiedDate":"2022-03-27"},{"lineNumber":291,"author":{"gitId":"wraineflores"},"content":"            validateNric(parameters[1]);","lastModifiedDate":"2022-03-27"},{"lineNumber":292,"author":{"gitId":"wraineflores"},"content":"            break;","lastModifiedDate":"2022-04-07"},{"lineNumber":293,"author":{"gitId":"wraineflores"},"content":"        case \"name\":","lastModifiedDate":"2022-03-27"},{"lineNumber":294,"author":{"gitId":"wraineflores"},"content":"            validateFullName(parameters[1]);","lastModifiedDate":"2022-03-27"},{"lineNumber":295,"author":{"gitId":"wraineflores"},"content":"            break;","lastModifiedDate":"2022-04-07"},{"lineNumber":296,"author":{"gitId":"wraineflores"},"content":"        case \"age\":","lastModifiedDate":"2022-03-27"},{"lineNumber":297,"author":{"gitId":"wraineflores"},"content":"            validateAge(parameters[1]);","lastModifiedDate":"2022-03-27"},{"lineNumber":298,"author":{"gitId":"wraineflores"},"content":"            break;","lastModifiedDate":"2022-04-07"},{"lineNumber":299,"author":{"gitId":"wraineflores"},"content":"        case \"gender\":","lastModifiedDate":"2022-03-27"},{"lineNumber":300,"author":{"gitId":"wraineflores"},"content":"            validateGender(parameters[1]);","lastModifiedDate":"2022-03-27"},{"lineNumber":301,"author":{"gitId":"wraineflores"},"content":"            break;","lastModifiedDate":"2022-04-07"},{"lineNumber":302,"author":{"gitId":"wraineflores"},"content":"        case \"address\":","lastModifiedDate":"2022-03-27"},{"lineNumber":303,"author":{"gitId":"wraineflores"},"content":"            validateAddress(parameters[1]);","lastModifiedDate":"2022-03-27"},{"lineNumber":304,"author":{"gitId":"wraineflores"},"content":"            break;","lastModifiedDate":"2022-04-07"},{"lineNumber":305,"author":{"gitId":"wraineflores"},"content":"        case \"dob\":","lastModifiedDate":"2022-03-27"},{"lineNumber":306,"author":{"gitId":"wraineflores"},"content":"            validateDob(parameters[1]);","lastModifiedDate":"2022-03-27"},{"lineNumber":307,"author":{"gitId":"wraineflores"},"content":"            break;","lastModifiedDate":"2022-04-07"},{"lineNumber":308,"author":{"gitId":"wraineflores"},"content":"        case \"specialization\":","lastModifiedDate":"2022-04-07"},{"lineNumber":309,"author":{"gitId":"wraineflores"},"content":"            validateSpecialization(parameters[1]);","lastModifiedDate":"2022-04-07"},{"lineNumber":310,"author":{"gitId":"wraineflores"},"content":"            break;","lastModifiedDate":"2022-04-07"},{"lineNumber":311,"author":{"gitId":"wraineflores"},"content":"        default:","lastModifiedDate":"2022-04-07"},{"lineNumber":312,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Input must be an attribute of Doctor\");","lastModifiedDate":"2022-04-09"},{"lineNumber":313,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":314,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":315,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":316,"author":{"gitId":"kktai1512"},"content":"    public static void validateFindAppointment(String[] parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":317,"author":{"gitId":"kktai1512"},"content":"        minParameterCheck(parameters, 2);","lastModifiedDate":"2022-04-09"},{"lineNumber":318,"author":{"gitId":"tanweili"},"content":"        switch (parameters[0]) {","lastModifiedDate":"2022-03-29"},{"lineNumber":319,"author":{"gitId":"tanweili"},"content":"        case \"id\":","lastModifiedDate":"2022-03-29"},{"lineNumber":320,"author":{"gitId":"tanweili"},"content":"            break;","lastModifiedDate":"2022-03-29"},{"lineNumber":321,"author":{"gitId":"tanweili"},"content":"        case \"patient name\":","lastModifiedDate":"2022-03-29"},{"lineNumber":322,"author":{"gitId":"tanweili"},"content":"        case \"doctor name\":","lastModifiedDate":"2022-03-29"},{"lineNumber":323,"author":{"gitId":"tanweili"},"content":"            validateFullName(parameters[1]);","lastModifiedDate":"2022-03-29"},{"lineNumber":324,"author":{"gitId":"tanweili"},"content":"            break;","lastModifiedDate":"2022-03-29"},{"lineNumber":325,"author":{"gitId":"tanweili"},"content":"        case \"patient nric\":","lastModifiedDate":"2022-03-29"},{"lineNumber":326,"author":{"gitId":"tanweili"},"content":"        case \"doctor nric\":","lastModifiedDate":"2022-03-29"},{"lineNumber":327,"author":{"gitId":"tanweili"},"content":"            validateNric(parameters[1]);","lastModifiedDate":"2022-03-29"},{"lineNumber":328,"author":{"gitId":"tanweili"},"content":"            break;","lastModifiedDate":"2022-03-29"},{"lineNumber":329,"author":{"gitId":"tanweili"},"content":"        case \"date\":","lastModifiedDate":"2022-03-29"},{"lineNumber":330,"author":{"gitId":"tanweili"},"content":"            validateDate(parameters[1], \"find appointment\");","lastModifiedDate":"2022-03-29"},{"lineNumber":331,"author":{"gitId":"tanweili"},"content":"            break;","lastModifiedDate":"2022-03-29"},{"lineNumber":332,"author":{"gitId":"tanweili"},"content":"        default:","lastModifiedDate":"2022-03-29"},{"lineNumber":333,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Input must be an attribute of Appointment\");","lastModifiedDate":"2022-04-09"},{"lineNumber":334,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":335,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":336,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":337,"author":{"gitId":"kktai1512"},"content":"    public static void validateFindMedicine(String[] parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":338,"author":{"gitId":"kktai1512"},"content":"        minParameterCheck(parameters, 2);","lastModifiedDate":"2022-04-09"},{"lineNumber":339,"author":{"gitId":"Anvitha-r"},"content":"        boolean check \u003d true;","lastModifiedDate":"2022-03-27"},{"lineNumber":340,"author":{"gitId":"wraineflores"},"content":"        switch (parameters[0]) {","lastModifiedDate":"2022-03-27"},{"lineNumber":341,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":342,"author":{"gitId":"wraineflores"},"content":"        case \"name\":","lastModifiedDate":"2022-03-27"},{"lineNumber":343,"author":{"gitId":"Anvitha-r"},"content":"            check \u003d validateMedicineName(parameters[1]);","lastModifiedDate":"2022-03-27"},{"lineNumber":344,"author":{"gitId":"wraineflores"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":345,"author":{"gitId":"wraineflores"},"content":"        case \"dosage\":","lastModifiedDate":"2022-03-27"},{"lineNumber":346,"author":{"gitId":"Anvitha-r"},"content":"            check \u003d check \u0026\u0026 validateDosage(parameters[1]);","lastModifiedDate":"2022-03-27"},{"lineNumber":347,"author":{"gitId":"wraineflores"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":348,"author":{"gitId":"wraineflores"},"content":"        case \"expiry\":","lastModifiedDate":"2022-03-27"},{"lineNumber":349,"author":{"gitId":"Anvitha-r"},"content":"            check \u003d check \u0026\u0026 validateDate(parameters[1]);","lastModifiedDate":"2022-03-27"},{"lineNumber":350,"author":{"gitId":"wraineflores"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":351,"author":{"gitId":"wraineflores"},"content":"        case \"quantity\":","lastModifiedDate":"2022-03-27"},{"lineNumber":352,"author":{"gitId":"Anvitha-r"},"content":"            check \u003d check \u0026\u0026 validateQuantity(parameters[1]);","lastModifiedDate":"2022-03-27"},{"lineNumber":353,"author":{"gitId":"wraineflores"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":354,"author":{"gitId":"Anvitha-r"},"content":"        case \"id\":","lastModifiedDate":"2022-03-27"},{"lineNumber":355,"author":{"gitId":"Anvitha-r"},"content":"        case \"side effects\":","lastModifiedDate":"2022-03-27"},{"lineNumber":356,"author":{"gitId":"wraineflores"},"content":"        default:","lastModifiedDate":"2022-03-27"},{"lineNumber":357,"author":{"gitId":"Anvitha-r"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":358,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":359,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":360,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":361,"author":{"gitId":"tanweili"},"content":"    public static void validateFindPatient(String[] parameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":362,"author":{"gitId":"wraineflores"},"content":"        switch (parameters[0]) {","lastModifiedDate":"2022-04-08"},{"lineNumber":363,"author":{"gitId":"wraineflores"},"content":"        case \"nric\":","lastModifiedDate":"2022-04-08"},{"lineNumber":364,"author":{"gitId":"wraineflores"},"content":"            validateNric(parameters[1]);","lastModifiedDate":"2022-04-08"},{"lineNumber":365,"author":{"gitId":"wraineflores"},"content":"            break;","lastModifiedDate":"2022-04-08"},{"lineNumber":366,"author":{"gitId":"wraineflores"},"content":"        case \"name\":","lastModifiedDate":"2022-04-08"},{"lineNumber":367,"author":{"gitId":"wraineflores"},"content":"            validateFullName(parameters[1]);","lastModifiedDate":"2022-04-08"},{"lineNumber":368,"author":{"gitId":"wraineflores"},"content":"            break;","lastModifiedDate":"2022-04-08"},{"lineNumber":369,"author":{"gitId":"wraineflores"},"content":"        case \"age\":","lastModifiedDate":"2022-04-08"},{"lineNumber":370,"author":{"gitId":"wraineflores"},"content":"            validateAge(parameters[1]);","lastModifiedDate":"2022-04-08"},{"lineNumber":371,"author":{"gitId":"wraineflores"},"content":"            break;","lastModifiedDate":"2022-04-08"},{"lineNumber":372,"author":{"gitId":"wraineflores"},"content":"        case \"gender\":","lastModifiedDate":"2022-04-08"},{"lineNumber":373,"author":{"gitId":"wraineflores"},"content":"            validateGender(parameters[1]);","lastModifiedDate":"2022-04-08"},{"lineNumber":374,"author":{"gitId":"wraineflores"},"content":"            break;","lastModifiedDate":"2022-04-08"},{"lineNumber":375,"author":{"gitId":"wraineflores"},"content":"        case \"address\":","lastModifiedDate":"2022-04-08"},{"lineNumber":376,"author":{"gitId":"wraineflores"},"content":"            validateAddress(parameters[1]);","lastModifiedDate":"2022-04-08"},{"lineNumber":377,"author":{"gitId":"wraineflores"},"content":"            break;","lastModifiedDate":"2022-04-08"},{"lineNumber":378,"author":{"gitId":"wraineflores"},"content":"        case \"dob\":","lastModifiedDate":"2022-04-08"},{"lineNumber":379,"author":{"gitId":"wraineflores"},"content":"            validateDob(parameters[1]);","lastModifiedDate":"2022-04-08"},{"lineNumber":380,"author":{"gitId":"wraineflores"},"content":"            break;","lastModifiedDate":"2022-04-08"},{"lineNumber":381,"author":{"gitId":"wraineflores"},"content":"        case \"admissiondate\":","lastModifiedDate":"2022-04-08"},{"lineNumber":382,"author":{"gitId":"wraineflores"},"content":"            validateAdmissionDate(parameters[1]);","lastModifiedDate":"2022-04-08"},{"lineNumber":383,"author":{"gitId":"wraineflores"},"content":"            break;","lastModifiedDate":"2022-04-08"},{"lineNumber":384,"author":{"gitId":"wraineflores"},"content":"        default:","lastModifiedDate":"2022-04-08"},{"lineNumber":385,"author":{"gitId":"tanweili"},"content":"            throw new UserInputErrorException(\"Input must be an attribute of Patient\");","lastModifiedDate":"2022-04-09"},{"lineNumber":386,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-04-08"},{"lineNumber":387,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":388,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":389,"author":{"gitId":"kktai1512"},"content":"    public static void validateDispenseMedicine(String[] dispenseMedicineParameters) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":390,"author":{"gitId":"shxr3f"},"content":"        validateNric(dispenseMedicineParameters[0]);","lastModifiedDate":"2022-04-07"},{"lineNumber":391,"author":{"gitId":"shxr3f"},"content":"        if (dispenseMedicineParameters.length \u003c 3 || dispenseMedicineParameters.length % 2 !\u003d 1) {","lastModifiedDate":"2022-04-07"},{"lineNumber":392,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"Not all medicines in list have both \"","lastModifiedDate":"2022-04-09"},{"lineNumber":393,"author":{"gitId":"kktai1512"},"content":"                    + \"the name of the medicine and the quantity to prescribe!\");","lastModifiedDate":"2022-04-09"},{"lineNumber":394,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":395,"author":{"gitId":"shxr3f"},"content":"        for (int i \u003d 1; i \u003c dispenseMedicineParameters.length; i +\u003d 2) {","lastModifiedDate":"2022-04-07"},{"lineNumber":396,"author":{"gitId":"shxr3f"},"content":"            String medicineName \u003d dispenseMedicineParameters[i];","lastModifiedDate":"2022-04-07"},{"lineNumber":397,"author":{"gitId":"shxr3f"},"content":"            String medicineQuantity \u003d dispenseMedicineParameters[i + 1];","lastModifiedDate":"2022-04-07"},{"lineNumber":398,"author":{"gitId":"shxr3f"},"content":"            validateMedicineName(medicineName);","lastModifiedDate":"2022-04-07"},{"lineNumber":399,"author":{"gitId":"shxr3f"},"content":"            validateQuantity(medicineQuantity);","lastModifiedDate":"2022-04-07"},{"lineNumber":400,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":401,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":402,"author":{"gitId":"kktai1512"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"tanweili":30,"wraineflores":66,"Anvitha-r":46,"shxr3f":27,"kktai1512":233}},{"path":"src/main/java/seedu/duke/helper/command/AddAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"import seedu.duke.exception.DuplicateEntryException;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"import seedu.duke.exception.UserInputErrorException;","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"/*","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":" * Class that extends Abstract Command Class.","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":"public class AddAppointmentCommand extends Command {","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"     * Constructor method that calls constructor of super class","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"     * @ param parameterArray an array of Strings - additional parameters given by user","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":"    public AddAppointmentCommand(String[] parameterArray) {","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":"        super(parameterArray);","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"     * Method that takes in an AppointmentList that needs to be acted on.","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"     * Uses parameterArray as inputs to add a new Appointment to the List.","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"     * @ param list a List object - should be an instance of AppointmentList","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"     * @ return Status.ADD_APPOINTMENT_SUCCESS if changes made to list was successful","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"     * @ throws DuplicateEntryException if similar entry already exist.","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"tanweili"},"content":"    @Override","lastModifiedDate":"2022-04-05"},{"lineNumber":29,"author":{"gitId":"tanweili"},"content":"    public Status execute(List appointmentList) throws DuplicateEntryException, UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"tanweili"},"content":"        appointmentList.add(parameterArray);","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"tanweili"},"content":"        return Status.ADD_APPOINTMENT_SUCCESS;","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"tanweili":18,"shxr3f":15}},{"path":"src/main/java/seedu/duke/helper/command/AddDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.DuplicateEntryException;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"/*","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":" * Class that extends Abstract Command Class.","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"public class AddDoctorCommand extends Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"     * Constructor method that calls constructor of super class","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"     * @ param parameterArray an array of Strings - additional parameters given by user","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"    public AddDoctorCommand(String[] parameterArray) {","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"        super(parameterArray);","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"     * Method that takes in a DoctorList that needs to be acted on.","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"     * Uses parameterArray as inputs to add a new Doctor to the List.","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"     * @ param list a List object - should be an instance of DoctorList","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"     * @ return Status.ADD_DOCTOR_SUCCESS if changes made to list was successful","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"     * @ throws DuplicateEntryException if similar entry already exist.","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"    public Status execute(List doctorList) throws DuplicateEntryException {","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"        doctorList.add(parameterArray);","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"        return Status.ADD_DOCTOR_SUCCESS;","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"shxr3f":32}},{"path":"src/main/java/seedu/duke/helper/command/AddMedicineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.DuplicateEntryException;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"/*","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":" * Class that extends Abstract Command Class.","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"public class AddMedicineCommand extends Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"     * Constructor method that calls constructor of super class","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"     * @ param parameterArray an array of Strings - additional parameters given by user","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"    public AddMedicineCommand(String[] parameterArray) {","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"        super(parameterArray);","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"     * Method that takes in a MedicineList that needs to be acted on.","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"     * Uses parameterArray as inputs to add a new Medicine to the List.","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"     * @ param list a List object - should be an instance of MedicineList","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"     * @ return Status.ADD_MEDICINE_SUCCESS if changes made to list was successful","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"     * @ throws DuplicateEntryException if similar entry already exist.","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"    public Status execute(List medicineList) throws DuplicateEntryException {","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"        medicineList.add(parameterArray);","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"        return Status.ADD_MEDICINE_SUCCESS;","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"shxr3f":31}},{"path":"src/main/java/seedu/duke/helper/command/AddPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.DuplicateEntryException;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"/*","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":" * Class that extends Abstract Command Class.","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"public class AddPatientCommand extends Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"     * Constructor method that calls constructor of super class","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"     * @ param parameterArray an array of Strings - additional parameters given by user","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"    public AddPatientCommand(String[] parameterArray) {","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"        super(parameterArray);","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"     * Method that takes in a PatientList that needs to be acted on.","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"     * Uses parameterArray as inputs to add a new Patient to the List.","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"     * @ param list a List object - should be an instance of PatientList","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"     * @ return Status.ADD_PATIENT_SUCCESS; if changes made to list was successful","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"     * @ throws DuplicateEntryException if similar entry already exist.","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"    public Status execute(List patientList) throws DuplicateEntryException {","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"        patientList.add(this.parameterArray);","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"        return Status.ADD_PATIENT_SUCCESS;","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"shxr3f":31}},{"path":"src/main/java/seedu/duke/helper/command/CheckForMedicineStockCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.MedicineList;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.DuplicateEntryException;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.exception.UserInputErrorException;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.NotFoundException;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"/*","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":" * Class that extends Abstract Command Class.","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"public class CheckForMedicineStockCommand extends Command {","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"     * Constructor method that calls constructor of super class","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"     * @ param parameterArray an array of Strings - additional parameters given by user","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"    public CheckForMedicineStockCommand(String[] parameterArray) {","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"        super(parameterArray);","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"     * Method that takes in  MedicineList that needs to be acted on.","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"     * Uses parameterArray as inputs to find if required medicines exit in List.","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"     * @ param list a List object - should be an instance of MedicineList","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"     * @ return Status.MEDICINE_STOCK_FOUND_SUCCESS if changes made to list was successful","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"     * @ throws HalpMiException if some medicines cannot be found.","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"shxr3f"},"content":"     * If exception thrown, a table of missing medicines printed.","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"shxr3f"},"content":"    @Override","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"kktai1512"},"content":"    public Status execute(List medicineList) throws DuplicateEntryException, NotFoundException,","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"kktai1512"},"content":"            UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"shxr3f"},"content":"        String[] medicineArray \u003d Arrays.copyOfRange(parameterArray,1,parameterArray.length);","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"shxr3f"},"content":"        if (medicineList instanceof MedicineList) {","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"shxr3f"},"content":"            ((MedicineList) medicineList).checkStock(medicineArray);","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"shxr3f"},"content":"            return Status.MEDICINE_STOCK_FOUND_SUCCESS;","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"shxr3f"},"content":"        assert false;","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"kktai1512"},"content":"        throw new UserInputErrorException(\"Error with code! Approach Developer.\");","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"shxr3f":40,"kktai1512":4}},{"path":"src/main/java/seedu/duke/helper/command/CheckIfAppointmentTodayCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.AppointmentList;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.DuplicateEntryException;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.exception.UserInputErrorException;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.NotFoundException;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"/*","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":" * Class that extends Abstract Command Class.","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"public class CheckIfAppointmentTodayCommand extends Command {","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"     * Constructor method that calls constructor of super class","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"     * @ param parameterArray an array of Strings - additional parameters given by user","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"    public CheckIfAppointmentTodayCommand(String[] parameterArray) {","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"        super(parameterArray);","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"     * Method that takes in  AppointmentList that needs to be acted on.","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"     * Uses parameterArray as inputs to find if Patient has appointment today.","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"     * @ param list a List object - should be an instance of AppointmentList","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"     * @ return Status.APPOINTMENT_FOUND_SUCCESS if patient has appointment today.","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"     * @ throws HalpMiException if patient does not exist or patient does not have appointment today.","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"    @Override","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"kktai1512"},"content":"    public Status execute(List appointmentList) throws DuplicateEntryException, NotFoundException,","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"kktai1512"},"content":"            UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"shxr3f"},"content":"        if (appointmentList instanceof AppointmentList) {","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"shxr3f"},"content":"            ((AppointmentList) appointmentList).hasAppointmentToday(\"P\",parameterArray[0]);","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"shxr3f"},"content":"        return Status.APPOINTMENT_FOUND_SUCCESS;","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"shxr3f":35,"kktai1512":3}},{"path":"src/main/java/seedu/duke/helper/command/CheckIfDoctorExistsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-04-05"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"import seedu.duke.assets.Doctor;","lastModifiedDate":"2022-04-05"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"import seedu.duke.assets.DoctorList;","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-04-05"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"import seedu.duke.exception.NotFoundException;","lastModifiedDate":"2022-04-05"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.finder.DoctorFinder;","lastModifiedDate":"2022-04-05"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-04-05"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-05"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":"public class CheckIfDoctorExistsCommand extends Command {","lastModifiedDate":"2022-04-05"},{"lineNumber":13,"author":{"gitId":"tanweili"},"content":"    public CheckIfDoctorExistsCommand(String[] parameterArray) {","lastModifiedDate":"2022-04-05"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":"        super(parameterArray);","lastModifiedDate":"2022-04-05"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":"    @Override","lastModifiedDate":"2022-04-05"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":"    public Status execute(List doctorList) throws NotFoundException {","lastModifiedDate":"2022-04-05"},{"lineNumber":19,"author":{"gitId":"tanweili"},"content":"        String inputDoctorNric \u003d parameterArray[1];","lastModifiedDate":"2022-04-05"},{"lineNumber":20,"author":{"gitId":"tanweili"},"content":"        DoctorFinder doctorFinder \u003d new DoctorFinder();","lastModifiedDate":"2022-04-05"},{"lineNumber":21,"author":{"gitId":"tanweili"},"content":"        ArrayList\u003cDoctor\u003e foundDoctor \u003d doctorFinder.findDoctorByNric(((DoctorList)doctorList).getList(),","lastModifiedDate":"2022-04-05"},{"lineNumber":22,"author":{"gitId":"tanweili"},"content":"                inputDoctorNric);","lastModifiedDate":"2022-04-05"},{"lineNumber":23,"author":{"gitId":"tanweili"},"content":"        if (foundDoctor \u003d\u003d null) {","lastModifiedDate":"2022-04-05"},{"lineNumber":24,"author":{"gitId":"tanweili"},"content":"            throw new NotFoundException(\"There is no doctor with the NRIC given. Please try again.\");","lastModifiedDate":"2022-04-05"},{"lineNumber":25,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":26,"author":{"gitId":"tanweili"},"content":"        return Status.FIND_DOCTOR_SUCCESS;","lastModifiedDate":"2022-04-05"},{"lineNumber":27,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":28,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-04-05"}],"authorContributionMap":{"tanweili":28}},{"path":"src/main/java/seedu/duke/helper/command/CheckIfPatientExistsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-04-05"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-04-05"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"import seedu.duke.assets.Patient;","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"import seedu.duke.assets.PatientList;","lastModifiedDate":"2022-04-05"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"import seedu.duke.exception.NotFoundException;","lastModifiedDate":"2022-04-05"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"import seedu.duke.helper.finder.PatientFinder;","lastModifiedDate":"2022-04-05"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-04-05"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-05"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":"public class CheckIfPatientExistsCommand extends Command {","lastModifiedDate":"2022-04-05"},{"lineNumber":13,"author":{"gitId":"tanweili"},"content":"    public CheckIfPatientExistsCommand(String[] parameterArray) {","lastModifiedDate":"2022-04-05"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":"        super(parameterArray);","lastModifiedDate":"2022-04-05"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":"    @Override","lastModifiedDate":"2022-04-05"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":"    public Status execute(List patientList) throws NotFoundException {","lastModifiedDate":"2022-04-05"},{"lineNumber":19,"author":{"gitId":"tanweili"},"content":"        String inputPatientNric \u003d parameterArray[0];","lastModifiedDate":"2022-04-05"},{"lineNumber":20,"author":{"gitId":"tanweili"},"content":"        PatientFinder patientFinder \u003d new PatientFinder();","lastModifiedDate":"2022-04-05"},{"lineNumber":21,"author":{"gitId":"tanweili"},"content":"        ArrayList\u003cPatient\u003e foundPatient \u003d patientFinder.findPatientByNric(((PatientList)patientList).getList(),","lastModifiedDate":"2022-04-05"},{"lineNumber":22,"author":{"gitId":"tanweili"},"content":"                inputPatientNric);","lastModifiedDate":"2022-04-05"},{"lineNumber":23,"author":{"gitId":"tanweili"},"content":"        if (foundPatient \u003d\u003d null) {","lastModifiedDate":"2022-04-05"},{"lineNumber":24,"author":{"gitId":"tanweili"},"content":"            throw new NotFoundException(\"There is no patient with the NRIC given. Please try again.\");","lastModifiedDate":"2022-04-05"},{"lineNumber":25,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":26,"author":{"gitId":"tanweili"},"content":"        return Status.FIND_PATIENT_SUCCESS;","lastModifiedDate":"2022-04-05"},{"lineNumber":27,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":28,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-04-05"}],"authorContributionMap":{"tanweili":28}},{"path":"src/main/java/seedu/duke/helper/command/ClearExpiredMedicineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.MedicineList;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.DuplicateEntryException;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.NotFoundException;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"public class ClearExpiredMedicineCommand extends Command {","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"    public ClearExpiredMedicineCommand() {","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"        super(null);","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"    public Status execute(List medicineList) throws DuplicateEntryException, NotFoundException {","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"        if (medicineList instanceof MedicineList) {","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"            ((MedicineList) medicineList).clearStock();","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"            return Status.CLEAR_EXPIRED_MEDICINE_SUCCESS;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"        assert false;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"        throw new NotFoundException(\"Error in code, approach developer!\");","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"shxr3f":23}},{"path":"src/main/java/seedu/duke/helper/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.DuplicateEntryException;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.exception.UserInputErrorException;","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.NotFoundException;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"/*","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":" * Abstract class that is parent to various other specific command classes.","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":" * Holds an array of Strings named parameterArray.","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"public abstract class Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"    public String[] parameterArray;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"     * Constructor method that assigns value to parameterArray","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"     * @ param parameterArray an array of Strings - additional parameters given by user","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"wraineflores"},"content":"    public Command(String[] parameterArray) {","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"        this.parameterArray \u003d parameterArray;","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"     * Abstract Method that takes in a list that needs to be acted on.","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"     * @ param list a List object","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"tanweili"},"content":"    public abstract Status execute(List list) throws DuplicateEntryException, NotFoundException,","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"kktai1512"},"content":"            UserInputErrorException;","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"Anvitha-r"},"content":"}","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"tanweili":1,"wraineflores":1,"Anvitha-r":5,"shxr3f":23,"kktai1512":2}},{"path":"src/main/java/seedu/duke/helper/command/DeleteAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"import seedu.duke.exception.NotFoundException;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"/*","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":" * Class that extends Abstract Command Class.","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"public class DeleteAppointmentCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"     * Constructor method that calls constructor of super class","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"     * @ param parameterArray an array of Strings - additional parameters given by user","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"    public DeleteAppointmentCommand(String[] parameterArray) {","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":"        super(parameterArray);","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"     * Method that takes in an AppointmentList that needs to be acted on.","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"     * Uses parameterArray as inputs to delete an existing Appointment in the List.","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"     * @ param list a List object - should be an instance of AppointmentList","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"     * @ return Status.DELETE_APPOINTMENT_SUCCESS if changes made to list was successful","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"     * @ throws NotFoundException if entry does not exist.","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"tanweili"},"content":"    public Status execute(List appointmentList) throws NotFoundException {","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"tanweili"},"content":"        appointmentList.remove(parameterArray[0]);","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"tanweili"},"content":"        return Status.DELETE_APPOINTMENT_SUCCESS;","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"tanweili":17,"shxr3f":14}},{"path":"src/main/java/seedu/duke/helper/command/DeleteDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.NotFoundException;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"/*","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":" * Class that extends Abstract Command Class.","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"public class DeleteDoctorCommand extends Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"     * Constructor method that calls constructor of super class","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"     * @ param parameterArray an array of Strings - additional parameters given by user","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"    public DeleteDoctorCommand(String[] parameterArray) {","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"        super(parameterArray);","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"     * Method that takes in a DoctorList that needs to be acted on.","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"     * Uses parameterArray as inputs to delete an existing Doctor in the List.","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"     * @ param list a List object - should be an instance of DoctorList","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"     * @ return Status.DELETE_DOCTOR_SUCCESS if changes made to list was successful","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"     * @ throws NotFoundException if entry does not exist.","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"    public Status execute(List doctorList) throws NotFoundException {","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"        doctorList.remove(parameterArray[0]);","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"        return Status.DELETE_DOCTOR_SUCCESS;","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"shxr3f":31}},{"path":"src/main/java/seedu/duke/helper/command/DeleteMedicineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.NotFoundException;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"/*","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":" * Class that extends Abstract Command Class.","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"public class DeleteMedicineCommand extends Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"     * Constructor method that calls constructor of super class","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"     * @ param parameterArray an array of Strings - additional parameters given by user","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"    public DeleteMedicineCommand(String[] parameterArray) {","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"        super(parameterArray);","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"     * Method that takes in a MedicineList that needs to be acted on.","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"     * Uses parameterArray as inputs to delete an existing Medicine in the List.","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"     * @ param list a List object - should be an instance of MedicineList","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"     * @ return Status.DELETE_MEDICINE_SUCCESS if changes made to list was successful","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"     * @ throws NotFoundException if entry does not exist.","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"    public Status execute(List medicineList) throws NotFoundException {","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"        medicineList.remove(parameterArray[0]);","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"        return Status.DELETE_MEDICINE_SUCCESS;","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"shxr3f":31}},{"path":"src/main/java/seedu/duke/helper/command/DeletePatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.NotFoundException;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"/*","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":" * Class that extends Abstract Command Class.","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"public class DeletePatientCommand extends Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"     * Constructor method that calls constructor of super class","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"     * @ param parameterArray an array of Strings - additional parameters given by user","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"    public DeletePatientCommand(String[] parameterArray) {","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"        super(parameterArray);","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"     * Method that takes in a PatientList that needs to be acted on.","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"     * Uses parameterArray as inputs to delete an existing Patient in the List.","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"     * @ param list a List object - should be an instance of PatientList","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"     * @ return Status.DELETE_PATIENT_SUCCESS if changes made to list was successful","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"     * @ throws NotFoundException if entry does not exist.","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"    public Status execute(List patientList) throws NotFoundException {","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"        patientList.remove(parameterArray[0]);","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"        return Status.DELETE_PATIENT_SUCCESS;","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"shxr3f":31}},{"path":"src/main/java/seedu/duke/helper/command/DispenseMedicineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.AppointmentList;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.MedicineList;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.DuplicateEntryException;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.exception.UserInputErrorException;","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.NotFoundException;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"/*","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":" * Class that extends Abstract Command Class.","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"public class DispenseMedicineCommand extends Command {","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"     * Constructor method that calls constructor of super class","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"     * @ param parameterArray an array of Strings - additional parameters given by user","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"    public DispenseMedicineCommand(String[] parameterArray) {","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"        super(parameterArray);","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"     * Method that takes in  MedicineList or AppointmentList that needs to be acted on.","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"     * Uses parameterArray as inputs to shift required medicines from medicine inventory to Appointment.","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"     * @ param list a List object - should be an instance of MedicineList/AppointmentList","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"     * @ return Status.DISPENSE_SUCCESS if changes made to list was successful","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"shxr3f"},"content":"     * Also prints out table of medicines to dispense.","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"shxr3f"},"content":"    @Override","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"kktai1512"},"content":"    public Status execute(List list) throws DuplicateEntryException, NotFoundException, UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"shxr3f"},"content":"        String patientNric \u003d parameterArray[0];","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"shxr3f"},"content":"        String[] medicineArray \u003d Arrays.copyOfRange(parameterArray, 1, parameterArray.length);","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"shxr3f"},"content":"        if (list instanceof AppointmentList) {","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"shxr3f"},"content":"            ((AppointmentList) list).dispenseMedicine(patientNric,medicineArray);","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"shxr3f"},"content":"            return Status.DISPENSE_SUCCESS;","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"shxr3f"},"content":"        if (list instanceof MedicineList) {","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"shxr3f"},"content":"            ((MedicineList) list).dispenseMedicine(medicineArray);","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"shxr3f"},"content":"            return Status.DISPENSE_SUCCESS;","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"shxr3f"},"content":"        assert false;","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"shxr3f"},"content":"        throw new NotFoundException(\"Error in code, approach developer!\");","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"shxr3f":46,"kktai1512":2}},{"path":"src/main/java/seedu/duke/helper/command/EditAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.NotFoundException;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"/*","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":" * Class that extends Abstract Command Class.","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"public class EditAppointmentCommand extends Command {","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"     * Constructor method that calls constructor of super class","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"     * @ param parameterArray an array of Strings - additional parameters given by user","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"    public EditAppointmentCommand(String[] parameterArray) {","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"        super(parameterArray);","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"     * Method that takes in an AppointmentList that needs to be acted on.","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"     * Uses parameterArray as inputs to edit an existing Appointment in the List.","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"     * @ param list a List object - should be an instance of AppointmentList","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"     * @ return Status.EDIT_APPOINTMENT_SUCCESS if changes made to list was successful","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"     * @ throws NotFoundException if entry does not exist.","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"    public Status execute(List appointmentList) throws NotFoundException {","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"        appointmentList.edit(parameterArray);","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"        return Status.EDIT_APPOINTMENT_SUCCESS;","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"shxr3f":32}},{"path":"src/main/java/seedu/duke/helper/command/EditDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Anvitha-r"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"Anvitha-r"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"Anvitha-r"},"content":"import seedu.duke.exception.NotFoundException;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"Anvitha-r"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"Anvitha-r"},"content":"public class EditDoctorCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"     * Constructor method that calls constructor of super class","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"     * @ param parameterArray an array of Strings - additional parameters given by user","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"Anvitha-r"},"content":"    public EditDoctorCommand(String[] parameterArray) {","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"Anvitha-r"},"content":"        super(parameterArray);","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"     * Method that takes in a DoctorList that needs to be acted on.","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"     * Uses parameterArray as inputs to edit an existing Doctor in the List.","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"     * @ param list a List object - should be an instance of DoctorList","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"     * @ return Status.EDIT_DOCTOR_SUCCESS if changes made to list was successful","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"     * @ throws NotFoundException if entry does not exist.","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"Anvitha-r"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"Anvitha-r"},"content":"    public Status execute(List doctorList) throws NotFoundException {","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"Anvitha-r"},"content":"        doctorList.edit(parameterArray);","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"Anvitha-r"},"content":"        return Status.EDIT_DOCTOR_SUCCESS;","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"Anvitha-r"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"Anvitha-r":17,"shxr3f":12}},{"path":"src/main/java/seedu/duke/helper/command/EditMedicineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.NotFoundException;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"/*","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":" * Class that extends Abstract Command Class.","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"public class EditMedicineCommand extends Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"     * Constructor method that calls constructor of super class","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"     * @ param parameterArray an array of Strings - additional parameters given by user","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"    public EditMedicineCommand(String[] parameterArray) {","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"        super(parameterArray);","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"     * Method that takes in an MedicineList that needs to be acted on.","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"     * Uses parameterArray as inputs to edit an existing Medicine in the List.","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"     * @ param list a List object - should be an instance of MedicineList","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"     * @ return Status.EDIT_MEDICINE_SUCCESS if changes made to list was successful","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"     * @ throws NotFoundException if entry does not exist.","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"    public Status execute(List medicineList) throws NotFoundException {","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"        medicineList.edit(parameterArray);","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"        return Status.EDIT_MEDICINE_SUCCESS;","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"shxr3f":32}},{"path":"src/main/java/seedu/duke/helper/command/EditPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Anvitha-r"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"Anvitha-r"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"Anvitha-r"},"content":"import seedu.duke.exception.NotFoundException;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"Anvitha-r"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"/*","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":" * Class that extends Abstract Command Class.","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"Anvitha-r"},"content":"public class EditPatientCommand extends Command {","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"     * Constructor method that calls constructor of super class","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"     * @ param parameterArray an array of Strings - additional parameters given by user","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"Anvitha-r"},"content":"    public EditPatientCommand(String[] parameterArray) {","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"Anvitha-r"},"content":"        super(parameterArray);","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"     * Method that takes in an PatientList that needs to be acted on.","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"     * Uses parameterArray as inputs to edit an existing Patient in the List.","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"     * @ param list a List object - should be an instance of PatientList","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"     * @ return Status.EDIT_PATIENT_SUCCESS if changes made to list was successful","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"     * @ throws NotFoundException if entry does not exist.","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"Anvitha-r"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"Anvitha-r"},"content":"    public Status execute(List patientList) throws NotFoundException {","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"Anvitha-r"},"content":"        patientList.edit(parameterArray);","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"Anvitha-r"},"content":"        return Status.EDIT_PATIENT_SUCCESS;","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"Anvitha-r"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"Anvitha-r"},"content":"}","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"Anvitha-r"},"content":"","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"Anvitha-r":18,"shxr3f":15}},{"path":"src/main/java/seedu/duke/helper/command/FindAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"import seedu.duke.assets.AppointmentList;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"/*","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":" * Class that extends Abstract Command Class.","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"public class FindAppointmentCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"     * Constructor method that calls constructor of super class","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"     * @ param parameterArray an array of Strings - additional parameters given by user","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"    public FindAppointmentCommand(String[] parameterArray) {","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":"        super(parameterArray);","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"tanweili"},"content":"    public Status execute(List appointmentList) {","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"tanweili"},"content":"        if (appointmentList instanceof AppointmentList) {","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"tanweili"},"content":"            switch (parameterArray[0]) {","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"tanweili"},"content":"            case \"id\":","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"tanweili"},"content":"                ((AppointmentList) appointmentList).findById(parameterArray);","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"tanweili"},"content":"                break;","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"tanweili"},"content":"            case \"patient nric\":","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"tanweili"},"content":"                ((AppointmentList) appointmentList).findByPatientNric(parameterArray);","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"tanweili"},"content":"                break;","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"tanweili"},"content":"            case \"patient name\":","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"tanweili"},"content":"                ((AppointmentList) appointmentList).findByPatientName(parameterArray);","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"tanweili"},"content":"                break;","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"tanweili"},"content":"            case \"doctor nric\":","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"tanweili"},"content":"                ((AppointmentList) appointmentList).findByDoctorNric(parameterArray);","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"tanweili"},"content":"                break;","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"tanweili"},"content":"            case \"doctor name\":","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"tanweili"},"content":"                ((AppointmentList) appointmentList).findByDoctorName(parameterArray);","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"tanweili"},"content":"                break;","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"tanweili"},"content":"            case \"date\":","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"tanweili"},"content":"                ((AppointmentList) appointmentList).findByAppointmentDate(parameterArray);","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"tanweili"},"content":"                break;","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"tanweili"},"content":"            default:","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"tanweili"},"content":"                break;","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"tanweili"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"tanweili"},"content":"        return Status.FIND_MEDICINE_SUCCESS;","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"tanweili":39,"shxr3f":8}},{"path":"src/main/java/seedu/duke/helper/command/FindDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":"import seedu.duke.assets.DoctorList;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"/*","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":" * Class that extends Abstract Command Class.","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"public class FindDoctorCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"     * Constructor method that calls constructor of super class","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"     * @ param parameterArray an array of Strings - additional parameters given by user","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"wraineflores"},"content":"    public FindDoctorCommand(String[] parameterArray) {","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"wraineflores"},"content":"        super(parameterArray);","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"Anvitha-r"},"content":"    public Status execute(List doctorList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"wraineflores"},"content":"        if (doctorList instanceof DoctorList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"wraineflores"},"content":"            switch (parameterArray[0]) {","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"wraineflores"},"content":"            case \"nric\":","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"wraineflores"},"content":"                ((DoctorList) doctorList).findByNric(parameterArray);","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"wraineflores"},"content":"                break;","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"wraineflores"},"content":"            case \"name\":","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"wraineflores"},"content":"                ((DoctorList) doctorList).findByName(parameterArray);","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"wraineflores"},"content":"                break;","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"wraineflores"},"content":"            case \"age\":","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"wraineflores"},"content":"                ((DoctorList) doctorList).findByAge(parameterArray);","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"wraineflores"},"content":"                break;","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"wraineflores"},"content":"            case \"gender\":","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"wraineflores"},"content":"                ((DoctorList) doctorList).findByGender(parameterArray);","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"wraineflores"},"content":"                break;","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"wraineflores"},"content":"            case \"address\":","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"wraineflores"},"content":"                ((DoctorList) doctorList).findByAddress(parameterArray);","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"wraineflores"},"content":"                break;","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"wraineflores"},"content":"            case \"dob\":","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"wraineflores"},"content":"                ((DoctorList) doctorList).findByDob(parameterArray);","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"wraineflores"},"content":"                break;","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"wraineflores"},"content":"            case \"specialization\":","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"wraineflores"},"content":"                ((DoctorList) doctorList).findBySpecialization(parameterArray);","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"wraineflores"},"content":"                break;","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"wraineflores"},"content":"            default:","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"Anvitha-r"},"content":"                break;","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"wraineflores"},"content":"        return Status.FIND_DOCTOR_SUCCESS;","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"wraineflores":41,"Anvitha-r":2,"shxr3f":8}},{"path":"src/main/java/seedu/duke/helper/command/FindMedicineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"import seedu.duke.assets.MedicineList;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"/*","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":" * Class that extends Abstract Command Class.","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"public class FindMedicineCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"     * Constructor method that calls constructor of super class","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"     * @ param parameterArray an array of Strings - additional parameters given by user","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"wraineflores"},"content":"    public FindMedicineCommand(String[] parameterArray) {","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"wraineflores"},"content":"        super(parameterArray);","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"Anvitha-r"},"content":"    public Status execute(List medicineList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"wraineflores"},"content":"        if (medicineList instanceof MedicineList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"wraineflores"},"content":"            switch (parameterArray[0]) {","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"wraineflores"},"content":"            case \"id\":","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"wraineflores"},"content":"                ((MedicineList) medicineList).findById(parameterArray);","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"wraineflores"},"content":"                break;","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"wraineflores"},"content":"            case \"name\":","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"wraineflores"},"content":"                ((MedicineList) medicineList).findByName(parameterArray);","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"wraineflores"},"content":"                break;","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"wraineflores"},"content":"            case \"dosage\":","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"wraineflores"},"content":"                ((MedicineList) medicineList).findByDosage(parameterArray);","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"wraineflores"},"content":"                break;","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"wraineflores"},"content":"            case \"expiry\":","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"wraineflores"},"content":"                ((MedicineList) medicineList).findByExpiry(parameterArray);","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"wraineflores"},"content":"                break;","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"wraineflores"},"content":"            case \"sideeffects\":","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"wraineflores"},"content":"                ((MedicineList) medicineList).findBySideEffects(parameterArray);","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"wraineflores"},"content":"                break;","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"wraineflores"},"content":"            case \"quantity\":","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"wraineflores"},"content":"                ((MedicineList) medicineList).findByQuantity(parameterArray);","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"wraineflores"},"content":"                break;","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"wraineflores"},"content":"            default:","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"Anvitha-r"},"content":"                break;","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"wraineflores"},"content":"        return Status.FIND_MEDICINE_SUCCESS;","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"wraineflores":38,"Anvitha-r":2,"shxr3f":7}},{"path":"src/main/java/seedu/duke/helper/command/FindPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"import seedu.duke.assets.PatientList;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"/*","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":" * Class that extends Abstract Command Class.","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"public class FindPatientCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"     * Constructor method that calls constructor of super class","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"     * @ param parameterArray an array of Strings - additional parameters given by user","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"wraineflores"},"content":"    public FindPatientCommand(String[] parameterArray) {","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"wraineflores"},"content":"        super(parameterArray);","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"Anvitha-r"},"content":"    public Status execute(List patientList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"wraineflores"},"content":"        if (patientList instanceof PatientList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"wraineflores"},"content":"            switch (parameterArray[0]) {","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"wraineflores"},"content":"            case \"nric\":","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"wraineflores"},"content":"                ((PatientList) patientList).findByNric(parameterArray);","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"wraineflores"},"content":"                break;","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"wraineflores"},"content":"            case \"name\":","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"wraineflores"},"content":"                ((PatientList) patientList).findByName(parameterArray);","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"wraineflores"},"content":"                break;","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"wraineflores"},"content":"            case \"age\":","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"wraineflores"},"content":"                ((PatientList) patientList).findByAge(parameterArray);","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"wraineflores"},"content":"                break;","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"wraineflores"},"content":"            case \"gender\":","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"wraineflores"},"content":"                ((PatientList) patientList).findByGender(parameterArray);","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"wraineflores"},"content":"                break;","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"wraineflores"},"content":"            case \"address\":","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"wraineflores"},"content":"                ((PatientList) patientList).findByAddress(parameterArray);","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"wraineflores"},"content":"                break;","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"wraineflores"},"content":"            case \"dob\":","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"wraineflores"},"content":"                ((PatientList) patientList).findByDob(parameterArray);","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"wraineflores"},"content":"                break;","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"wraineflores"},"content":"            case \"admissiondate\":","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"wraineflores"},"content":"                ((PatientList) patientList).findByDateAdmission(parameterArray);","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"wraineflores"},"content":"                break;","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"wraineflores"},"content":"            default:","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"Anvitha-r"},"content":"                break;","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"wraineflores"},"content":"        return Status.FIND_PATIENT_SUCCESS;","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"wraineflores":41,"Anvitha-r":2,"shxr3f":7}},{"path":"src/main/java/seedu/duke/helper/command/UpdateMedicineInventoryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.MedicineList;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.DuplicateEntryException;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.exception.UserInputErrorException;","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.NotFoundException;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"/*","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":" * Class that extends Abstract Command Class.","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"public class UpdateMedicineInventoryCommand extends Command {","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"     * Constructor method that calls constructor of super class","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"     * @ param parameterArray an array of Strings - additional parameters given by user","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"    public UpdateMedicineInventoryCommand() {","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"        super(null);","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"     * Method that takes in  MedicineList that needs to be acted on.","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"     * Uses parameterArray as inputs to find expired and run out Medicines in the List.","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"     * @ param list a List object - should be an instance of MedicineList","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"     * @ return Status.UPDATE_MEDICINE_INVENTORY_SUCCESS if changes made to list was successful","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"     * @ throws HalpMiException if none of the existing medicines have run out or expired.","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"kktai1512"},"content":"    public Status execute(List medicineList) throws DuplicateEntryException, NotFoundException,","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"kktai1512"},"content":"            UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"shxr3f"},"content":"        if (medicineList instanceof MedicineList) {","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"shxr3f"},"content":"            ((MedicineList) medicineList).updateStock();","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"shxr3f"},"content":"            return Status.UPDATE_MEDICINE_INVENTORY_SUCCESS;","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"shxr3f"},"content":"        assert false;","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"shxr3f"},"content":"        throw new NotFoundException(\"Error in code, approach developer!\");","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"shxr3f":37,"kktai1512":3}},{"path":"src/main/java/seedu/duke/helper/command/ViewAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.exception.UserInputErrorException;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"/*","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":" * Class that extends Abstract Command Class.","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"public class ViewAppointmentCommand extends Command {","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"     * Constructor method that calls constructor of super class","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"     * @ param parameterArray an array of Strings - additional parameters given by user","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"    public ViewAppointmentCommand(String[] parameterArray) {","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":"        super(parameterArray);","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"     * Method that takes in an AppointmentList that needs to be acted on.","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"     * parameterArray should be NULL. Prints list of existing Appointments.","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"     * @ param list a List object - should be an instance of AppointmentList","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"     * @ return Status.VIEW_SUCCESS if list was printed.","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"     * @ throws HalpmiException if issues with parameterArray.","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"kktai1512"},"content":"    public Status execute(List appointmentList) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"tanweili"},"content":"        if (parameterArray \u003d\u003d null) {","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"tanweili"},"content":"            appointmentList.view();","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"tanweili"},"content":"        } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"kktai1512"},"content":"            throw new UserInputErrorException(\"View Appointment Command only accepts null parameters!\");","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"tanweili"},"content":"        return Status.VIEW_SUCCESS;","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"tanweili":17,"shxr3f":15,"kktai1512":3}},{"path":"src/main/java/seedu/duke/helper/command/ViewDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.exception.UserInputErrorException;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"/*","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":" * Class that extends Abstract Command Class.","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"public class ViewDoctorCommand extends Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"     * Constructor method that calls constructor of super class","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"     * @ param parameterArray an array of Strings - additional parameters given by user","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"    public ViewDoctorCommand(String[] parameterArray) {","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"        super(parameterArray);","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"     * Method that takes in a DoctorList that needs to be acted on.","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"     * parameterArray should be NULL. Prints list of existing Doctors.","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"     * @ param list a List object - should be an instance of DoctorList","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"     * @ return Status.VIEW_SUCCESS if list was printed.","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"     * @ throws HalpmiException if issues with parameterArray.","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"kktai1512"},"content":"    public Status execute(List doctorList) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"        if (parameterArray \u003d\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"            doctorList.view();","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"        } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"tanweili"},"content":"            throw new UserInputErrorException(\"View Doctor Command only accepts null parameters!\");","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"shxr3f"},"content":"        return Status.VIEW_SUCCESS;","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tanweili":1,"shxr3f":32,"kktai1512":2}},{"path":"src/main/java/seedu/duke/helper/command/ViewMedicineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.exception.UserInputErrorException;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"/*","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":" * Class that extends Abstract Command Class.","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"public class ViewMedicineCommand extends Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"     * Constructor method that calls constructor of super class","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"     * @ param parameterArray an array of Strings - additional parameters given by user","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"    public ViewMedicineCommand(String[] parameterArray) {","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"        super(parameterArray);","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"     * Method that takes in an MedicineList that needs to be acted on.","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"     * parameterArray should be NULL. Prints list of existing Medicines.","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"     * @ param list a List object - should be an instance of MedicineList","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"     * @ return Status.VIEW_SUCCESS if list was printed.","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"     * @ throws HalpmiException if issues with parameterArray.","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"kktai1512"},"content":"    public Status execute(List medicineList) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"        if (parameterArray \u003d\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"            medicineList.view();","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"        } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"tanweili"},"content":"            throw new UserInputErrorException(\"View Medicine Command only accepts null parameters!\");","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"shxr3f"},"content":"        return Status.VIEW_SUCCESS;","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tanweili":1,"shxr3f":32,"kktai1512":2}},{"path":"src/main/java/seedu/duke/helper/command/ViewPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.List;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.exception.UserInputErrorException;","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.status.Status;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"/*","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":" * Class that extends Abstract Command Class.","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"public class ViewPatientCommand extends Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"     * Constructor method that calls constructor of super class","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"     * @ param parameterArray an array of Strings - additional parameters given by user","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"    public ViewPatientCommand(String[] parameterArray) {","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"        super(parameterArray);","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"     * Method that takes in an PatientList that needs to be acted on.","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"     * parameterArray should be NULL. Prints list of existing Patients.","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"     * @ param list a List object - should be an instance of PatientList","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"     * @ return Status.VIEW_SUCCESS if list was printed.","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"     * @ throws HalpmiException if issues with parameterArray.","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"kktai1512"},"content":"    public Status execute(List patientList) throws UserInputErrorException {","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"        if (parameterArray \u003d\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"            patientList.view();","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"        } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"tanweili"},"content":"            throw new UserInputErrorException(\"View Patient Command only accepts null parameters!\");","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"shxr3f"},"content":"        return Status.VIEW_SUCCESS;","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tanweili":1,"shxr3f":32,"kktai1512":2}},{"path":"src/main/java/seedu/duke/helper/finder/AppointmentFinder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package seedu.duke.helper.finder;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"import seedu.duke.assets.Appointment;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"public class AppointmentFinder {","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":"    public static ArrayList\u003cAppointment\u003e findAppointmentById(ArrayList\u003cAppointment\u003e appointments,","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":"                                                             String appointmentId) {","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"        ArrayList\u003cAppointment\u003e appointmentArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":"        for (Appointment appointment : appointments) {","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":"            if (appointment.getAppointmentId().equals(appointmentId)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"tanweili"},"content":"                appointmentArrayList.add(appointment);","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"        return getAppointments(appointmentArrayList);","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"tanweili"},"content":"    public static ArrayList\u003cAppointment\u003e findAppointmentByPatientName(ArrayList\u003cAppointment\u003e appointments,","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"tanweili"},"content":"                                                                      String patientName) {","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"tanweili"},"content":"        ArrayList\u003cAppointment\u003e appointmentArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"tanweili"},"content":"        for (Appointment appointment : appointments) {","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"tanweili"},"content":"            if (appointment.getPatientName().contains(patientName)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"tanweili"},"content":"                appointmentArrayList.add(appointment);","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"tanweili"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"tanweili"},"content":"        return getAppointments(appointmentArrayList);","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"tanweili"},"content":"    public static ArrayList\u003cAppointment\u003e findAppointmentByPatientNric(ArrayList\u003cAppointment\u003e appointments,","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"tanweili"},"content":"                                                                      String patientNric) {","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"tanweili"},"content":"        ArrayList\u003cAppointment\u003e appointmentArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"tanweili"},"content":"        for (Appointment appointment : appointments) {","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"tanweili"},"content":"            if (appointment.getPatientNric().equals(patientNric)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"tanweili"},"content":"                appointmentArrayList.add(appointment);","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"tanweili"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"tanweili"},"content":"        return getAppointments(appointmentArrayList);","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"tanweili"},"content":"    public static ArrayList\u003cAppointment\u003e findAppointmentByDoctorName(ArrayList\u003cAppointment\u003e appointments,","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"tanweili"},"content":"                                                                     String doctorName) {","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"tanweili"},"content":"        ArrayList\u003cAppointment\u003e appointmentArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"tanweili"},"content":"        for (Appointment appointment : appointments) {","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"tanweili"},"content":"            if (appointment.getDoctorName().equals(doctorName)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"tanweili"},"content":"                appointmentArrayList.add(appointment);","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"tanweili"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"tanweili"},"content":"        return getAppointments(appointmentArrayList);","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"tanweili"},"content":"    public static ArrayList\u003cAppointment\u003e findAppointmentByDoctorNric(ArrayList\u003cAppointment\u003e appointments,","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"tanweili"},"content":"                                                                     String doctorNric) {","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"tanweili"},"content":"        ArrayList\u003cAppointment\u003e appointmentArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"tanweili"},"content":"        for (Appointment appointment : appointments) {","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"tanweili"},"content":"            if (appointment.getDoctorNric().equals(doctorNric)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"tanweili"},"content":"                appointmentArrayList.add(appointment);","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"tanweili"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"tanweili"},"content":"        return getAppointments(appointmentArrayList);","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"tanweili"},"content":"    public static ArrayList\u003cAppointment\u003e findAppointmentByDate(ArrayList\u003cAppointment\u003e appointments,","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"tanweili"},"content":"                                                               String date) {","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"tanweili"},"content":"        ArrayList\u003cAppointment\u003e appointmentArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"tanweili"},"content":"        for (Appointment appointment : appointments) {","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"tanweili"},"content":"            if (appointment.getAppointmentDate().equals(date)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"tanweili"},"content":"                appointmentArrayList.add(appointment);","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"tanweili"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"tanweili"},"content":"        return getAppointments(appointmentArrayList);","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"tanweili"},"content":"    private static ArrayList\u003cAppointment\u003e getAppointments(ArrayList\u003cAppointment\u003e appointmentArrayList) {","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"tanweili"},"content":"        if (appointmentArrayList.isEmpty()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"tanweili"},"content":"            return null;","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"tanweili"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"tanweili"},"content":"            return appointmentArrayList;","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"tanweili":81}},{"path":"src/main/java/seedu/duke/helper/finder/DoctorFinder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"package seedu.duke.helper.finder;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":"import seedu.duke.assets.Doctor;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":"public class DoctorFinder {","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":"    public static ArrayList\u003cDoctor\u003e findDoctorByNric(ArrayList\u003cDoctor\u003e doctors, String requiredNric) {","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"        ArrayList\u003cDoctor\u003e doctorArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"        for (Doctor doctor : doctors) {","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"wraineflores"},"content":"            if (doctor.getNric().equals(requiredNric)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"wraineflores"},"content":"                doctorArrayList.add(doctor);","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"wraineflores"},"content":"        return getDoctors(doctorArrayList);","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"wraineflores"},"content":"    public static ArrayList\u003cDoctor\u003e findDoctorByName(ArrayList\u003cDoctor\u003e doctors, String requiredName) {","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"wraineflores"},"content":"        ArrayList\u003cDoctor\u003e doctorArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"wraineflores"},"content":"        for (Doctor doctor : doctors) {","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"wraineflores"},"content":"            if (doctor.getFullName().contains(requiredName)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"wraineflores"},"content":"                doctorArrayList.add(doctor);","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"wraineflores"},"content":"        return getDoctors(doctorArrayList);","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"wraineflores"},"content":"    public static ArrayList\u003cDoctor\u003e findDoctorByAge(ArrayList\u003cDoctor\u003e doctors, int requiredAge) {","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"wraineflores"},"content":"        ArrayList\u003cDoctor\u003e doctorArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"wraineflores"},"content":"        for (Doctor doctor : doctors) {","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"wraineflores"},"content":"            if (doctor.getAge() \u003d\u003d requiredAge) {","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"wraineflores"},"content":"                doctorArrayList.add(doctor);","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"wraineflores"},"content":"        return getDoctors(doctorArrayList);","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"wraineflores"},"content":"    public static ArrayList\u003cDoctor\u003e findDoctorByGender(ArrayList\u003cDoctor\u003e doctors, char requiredGender) {","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"wraineflores"},"content":"        ArrayList\u003cDoctor\u003e doctorArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"wraineflores"},"content":"        for (Doctor doctor : doctors) {","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"wraineflores"},"content":"            if (doctor.getGender() \u003d\u003d requiredGender) {","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"wraineflores"},"content":"                doctorArrayList.add(doctor);","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"wraineflores"},"content":"        return getDoctors(doctorArrayList);","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"wraineflores"},"content":"    public static ArrayList\u003cDoctor\u003e findDoctorByAddress(ArrayList\u003cDoctor\u003e doctors, String requiredAddress) {","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"wraineflores"},"content":"        ArrayList\u003cDoctor\u003e doctorArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"wraineflores"},"content":"        for (Doctor doctor : doctors) {","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"wraineflores"},"content":"            if (doctor.getAddress().contains(requiredAddress)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"wraineflores"},"content":"                doctorArrayList.add(doctor);","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"wraineflores"},"content":"        return getDoctors(doctorArrayList);","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"wraineflores"},"content":"    public static ArrayList\u003cDoctor\u003e findDoctorByDob(ArrayList\u003cDoctor\u003e doctors, String requiredDob) {","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"wraineflores"},"content":"        ArrayList\u003cDoctor\u003e doctorArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"wraineflores"},"content":"        for (Doctor doctor : doctors) {","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"wraineflores"},"content":"            if (doctor.getDob().contains(requiredDob)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"wraineflores"},"content":"                doctorArrayList.add(doctor);","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"wraineflores"},"content":"        return getDoctors(doctorArrayList);","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"wraineflores"},"content":"    public static ArrayList\u003cDoctor\u003e findDoctorBySpecialization(ArrayList\u003cDoctor\u003e doctors,","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"wraineflores"},"content":"                                                               String requiredSpecialization) {","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"wraineflores"},"content":"        ArrayList\u003cDoctor\u003e doctorArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"wraineflores"},"content":"        for (Doctor doctor : doctors) {","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"wraineflores"},"content":"            if (doctor.getSpecialization().contains(requiredSpecialization)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"wraineflores"},"content":"                doctorArrayList.add(doctor);","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"wraineflores"},"content":"        return getDoctors(doctorArrayList);","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"wraineflores"},"content":"    private static ArrayList\u003cDoctor\u003e getDoctors(ArrayList\u003cDoctor\u003e doctorArrayList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"wraineflores"},"content":"        if (doctorArrayList.isEmpty()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"wraineflores"},"content":"            return null;","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"wraineflores"},"content":"        } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"wraineflores"},"content":"            return doctorArrayList;","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"wraineflores":90}},{"path":"src/main/java/seedu/duke/helper/finder/MedicineFinder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"package seedu.duke.helper.finder;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":"import seedu.duke.assets.Medicine;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":"public class MedicineFinder {","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":"    public static ArrayList\u003cMedicine\u003e findMedicineById(ArrayList\u003cMedicine\u003e medicines, String requiredId) {","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"        ArrayList\u003cMedicine\u003e medicineArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"wraineflores"},"content":"            if (medicine.getMedicineId().equals(requiredId)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"wraineflores"},"content":"                medicineArrayList.add(medicine);","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"wraineflores"},"content":"        return getMedicines(medicineArrayList);","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"wraineflores"},"content":"    public static ArrayList\u003cMedicine\u003e findMedicineByName(ArrayList\u003cMedicine\u003e medicines, String requiredName) {","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"wraineflores"},"content":"        ArrayList\u003cMedicine\u003e medicineArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"wraineflores"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"wraineflores"},"content":"            if (medicine.getMedicineName().contains(requiredName)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"wraineflores"},"content":"                medicineArrayList.add(medicine);","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"wraineflores"},"content":"        return getMedicines(medicineArrayList);","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"wraineflores"},"content":"    public static ArrayList\u003cMedicine\u003e findMedicineByDosage(ArrayList\u003cMedicine\u003e medicines, int requiredDosage) {","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"wraineflores"},"content":"        ArrayList\u003cMedicine\u003e medicineArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"wraineflores"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"wraineflores"},"content":"            if (medicine.getDosage() \u003d\u003d requiredDosage) {","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"wraineflores"},"content":"                medicineArrayList.add(medicine);","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"wraineflores"},"content":"        return getMedicines(medicineArrayList);","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"wraineflores"},"content":"    public static ArrayList\u003cMedicine\u003e findMedicineByExpiry(ArrayList\u003cMedicine\u003e medicines, String requiredExpiry) {","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"wraineflores"},"content":"        ArrayList\u003cMedicine\u003e medicineArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"wraineflores"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"wraineflores"},"content":"            if (medicine.getExpiry().equals(requiredExpiry)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"wraineflores"},"content":"                medicineArrayList.add(medicine);","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"wraineflores"},"content":"        return getMedicines(medicineArrayList);","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"wraineflores"},"content":"    public static ArrayList\u003cMedicine\u003e findMedicineBySideEffects(ArrayList\u003cMedicine\u003e medicines,","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"wraineflores"},"content":"                                                                String requiredSideEffects) {","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"wraineflores"},"content":"        ArrayList\u003cMedicine\u003e medicineArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"wraineflores"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"wraineflores"},"content":"            if (medicine.getSideEffects().equals(requiredSideEffects)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"wraineflores"},"content":"                medicineArrayList.add(medicine);","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"wraineflores"},"content":"        return getMedicines(medicineArrayList);","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"wraineflores"},"content":"    public static ArrayList\u003cMedicine\u003e findMedicineByQuantity(ArrayList\u003cMedicine\u003e medicines, int requiredQuantity) {","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"wraineflores"},"content":"        ArrayList\u003cMedicine\u003e medicineArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"wraineflores"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"wraineflores"},"content":"            if (medicine.getQuantity() \u003d\u003d requiredQuantity) {","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"wraineflores"},"content":"                medicineArrayList.add(medicine);","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"wraineflores"},"content":"        return getMedicines(medicineArrayList);","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"wraineflores"},"content":"    private static ArrayList\u003cMedicine\u003e getMedicines(ArrayList\u003cMedicine\u003e medicineArrayList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"wraineflores"},"content":"        if (medicineArrayList.isEmpty()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"wraineflores"},"content":"            return null;","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"wraineflores"},"content":"        } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"wraineflores"},"content":"            return medicineArrayList;","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"wraineflores":80}},{"path":"src/main/java/seedu/duke/helper/finder/PatientFinder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"package seedu.duke.helper.finder;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":"import seedu.duke.assets.Patient;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":"public class PatientFinder {","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":"    public static ArrayList\u003cPatient\u003e findPatientByNric(ArrayList\u003cPatient\u003e patients, String requiredNric) {","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"        ArrayList\u003cPatient\u003e patientArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"        for (Patient patient : patients) {","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"wraineflores"},"content":"            if (patient.getNric().equals(requiredNric)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"wraineflores"},"content":"                patientArrayList.add(patient);","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"wraineflores"},"content":"        return getPatients(patientArrayList);","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"wraineflores"},"content":"    public static ArrayList\u003cPatient\u003e findPatientByName(ArrayList\u003cPatient\u003e patients, String requiredName) {","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"wraineflores"},"content":"        ArrayList\u003cPatient\u003e patientArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"wraineflores"},"content":"        for (Patient patient : patients) {","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"wraineflores"},"content":"            if (patient.getFullName().contains(requiredName)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"wraineflores"},"content":"                patientArrayList.add(patient);","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"wraineflores"},"content":"        return getPatients(patientArrayList);","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"wraineflores"},"content":"    public static ArrayList\u003cPatient\u003e findPatientByAge(ArrayList\u003cPatient\u003e patients, int requiredAge) {","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"wraineflores"},"content":"        ArrayList\u003cPatient\u003e patientArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"wraineflores"},"content":"        for (Patient patient : patients) {","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"wraineflores"},"content":"            if (patient.getAge() \u003d\u003d requiredAge) {","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"wraineflores"},"content":"                patientArrayList.add(patient);","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"wraineflores"},"content":"        return getPatients(patientArrayList);","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"wraineflores"},"content":"    public static ArrayList\u003cPatient\u003e findPatientByGender(ArrayList\u003cPatient\u003e patients, char requiredGender) {","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"wraineflores"},"content":"        ArrayList\u003cPatient\u003e patientArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"wraineflores"},"content":"        for (Patient patient : patients) {","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"wraineflores"},"content":"            if (patient.getGender() \u003d\u003d requiredGender) {","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"wraineflores"},"content":"                patientArrayList.add(patient);","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"wraineflores"},"content":"        return getPatients(patientArrayList);","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"wraineflores"},"content":"    public static ArrayList\u003cPatient\u003e findPatientByAddress(ArrayList\u003cPatient\u003e patients, String requiredAddress) {","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"wraineflores"},"content":"        ArrayList\u003cPatient\u003e patientArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"wraineflores"},"content":"        for (Patient patient : patients) {","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"wraineflores"},"content":"            if (patient.getAddress().contains(requiredAddress)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"wraineflores"},"content":"                patientArrayList.add(patient);","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"wraineflores"},"content":"        return getPatients(patientArrayList);","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"wraineflores"},"content":"    public static ArrayList\u003cPatient\u003e findPatientByDob(ArrayList\u003cPatient\u003e patients, String requiredDob) {","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"wraineflores"},"content":"        ArrayList\u003cPatient\u003e patientArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"wraineflores"},"content":"        for (Patient patient : patients) {","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"wraineflores"},"content":"            if (patient.getDob().contains(requiredDob)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"wraineflores"},"content":"                patientArrayList.add(patient);","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"wraineflores"},"content":"        return getPatients(patientArrayList);","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"wraineflores"},"content":"    public static ArrayList\u003cPatient\u003e findPatientByDateAdmission(ArrayList\u003cPatient\u003e patients, String requiredDob) {","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"wraineflores"},"content":"        ArrayList\u003cPatient\u003e patientArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"wraineflores"},"content":"        for (Patient patient : patients) {","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"wraineflores"},"content":"            if (patient.getDateAdmission().contains(requiredDob)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"wraineflores"},"content":"                patientArrayList.add(patient);","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"wraineflores"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"wraineflores"},"content":"        return getPatients(patientArrayList);","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"wraineflores"},"content":"    private static ArrayList\u003cPatient\u003e getPatients(ArrayList\u003cPatient\u003e patientArrayList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"wraineflores"},"content":"        if (patientArrayList.isEmpty()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"wraineflores"},"content":"            return null;","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"wraineflores"},"content":"        } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"wraineflores"},"content":"            return patientArrayList;","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"wraineflores"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"wraineflores":89}},{"path":"src/main/java/seedu/duke/status/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.status;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"/*","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":" * Holds SUCCESS messages","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":" */","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"public enum Status {","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"    ADD_PATIENT_SUCCESS,","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"    ADD_DOCTOR_SUCCESS,","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"    ADD_MEDICINE_SUCCESS,","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"    ADD_APPOINTMENT_SUCCESS,","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"    DELETE_PATIENT_SUCCESS,","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"    DELETE_DOCTOR_SUCCESS,","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"    DELETE_MEDICINE_SUCCESS,","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":"    DELETE_APPOINTMENT_SUCCESS,","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"    EDIT_PATIENT_SUCCESS,","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"    EDIT_DOCTOR_SUCCESS,","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"    EDIT_MEDICINE_SUCCESS,","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":"    EDIT_APPOINTMENT_SUCCESS,","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"    UPDATE_MEDICINE_INVENTORY_SUCCESS,","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"    CLEAR_EXPIRED_MEDICINE_SUCCESS,","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"    VIEW_SUCCESS,","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"    PRINT_HELP,","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"wraineflores"},"content":"    END_APP,","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"wraineflores"},"content":"    FIND_DOCTOR_SUCCESS,","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"wraineflores"},"content":"    FIND_MEDICINE_SUCCESS,","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"    FIND_PATIENT_SUCCESS,","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"    APPOINTMENT_FOUND_SUCCESS,","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"    MEDICINE_STOCK_FOUND_SUCCESS,","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"    DISPENSE_SUCCESS","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tanweili":3,"wraineflores":3,"shxr3f":24}},{"path":"src/test/java/seedu/duke/DukeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"class DukeTest {","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"wraineflores":2,"-":10}},{"path":"src/test/java/seedu/duke/assets/MedicineListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"package seedu.duke.assets;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"wraineflores"},"content":"class MedicineListTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"    void checkSize_arrayOfMedicines_expectedNumber() {","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"        MedicineList medicineList \u003d new MedicineList();","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"wraineflores"},"content":"        int currentNumber \u003d 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"kktai1512"},"content":"        assertEquals(currentNumber, medicineList.getSize());","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"wraineflores"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"wraineflores"},"content":"    void demoTestMethod() {","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"wraineflores"},"content":"        assertTrue(true);","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"wraineflores":19,"kktai1512":1}},{"path":"src/test/java/seedu/duke/assets/PatientListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanweili"},"content":"package seedu.duke.assets;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"tanweili"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.DuplicateEntryException;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"tanweili"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"tanweili"},"content":"public class PatientListTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"tanweili"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"tanweili"},"content":"    void checkSize_onePatientInList_expectOne() {","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"tanweili"},"content":"        PatientList testPatientList \u003d new PatientList();","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"tanweili"},"content":"        int currentNumber \u003d 0;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"tanweili"},"content":"        assertEquals(currentNumber, testPatientList.getSize());","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"tanweili"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"tanweili"},"content":"    void checkGetPatient_correctNricGiven_patientFound() throws DuplicateEntryException {","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"tanweili"},"content":"        String testNric \u003d \"S1234567A\";","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"tanweili"},"content":"        String testFullName \u003d \"Tan Wei Li\";","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"tanweili"},"content":"        String testAge \u003d \"20\";","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"tanweili"},"content":"        String testGender \u003d \"M\";","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"tanweili"},"content":"        String testAddress \u003d \"14 Baker Street\";","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"tanweili"},"content":"        String testDob \u003d \"1999-03-11\";","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"tanweili"},"content":"        String testDateAdmission \u003d \"2022-01-01\";","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"tanweili"},"content":"        String[] testAddPatientParameters \u003d {testNric, testFullName,testAge, testGender, testAddress, testDob,","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"tanweili"},"content":"            testDateAdmission};","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"tanweili"},"content":"        Patient testPatient \u003d new Patient(testNric, testFullName,Integer.parseInt(testAge), testGender.charAt(0),","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"tanweili"},"content":"                testAddress, testDob, testDateAdmission);","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"tanweili"},"content":"        PatientList testPatientList \u003d new PatientList();","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"tanweili"},"content":"        testPatientList.add(testAddPatientParameters);","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"tanweili"},"content":"        assertEquals(testPatientList.getPatient(testNric).getNric(), testPatient.getNric());","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"tanweili"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"tanweili":32,"shxr3f":1}},{"path":"src/test/java/seedu/duke/helper/CommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.helper;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"import org.junit.jupiter.api.TestInfo;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"class CommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"    static final Logger logger \u003d Logger.getLogger(\"CommmandTest\");","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"    void printDetails(TestInfo testInfo) {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"        logger.info(\"Now testing -\u003e\" + testInfo.getDisplayName());","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"shxr3f":22}},{"path":"src/test/java/seedu/duke/helper/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.helper;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"kktai1512"},"content":"import seedu.duke.exception.UserInputErrorException;","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"class ParserTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"    void parseAddPatientTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"        String parameter \u003d \"S1234567A,JOHN,23,M,SINGAPORE,1999-01-01,2022-01-01\";","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"        String[] parameterArray \u003d {\"S1234567A\",\"JOHN\",\"23\",\"M\",\"SINGAPORE\",\"1999-01-01\",\"2022-01-01\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"            assertArrayEquals(parameterArray,Parser.parseAddPatient(parameter).parameterArray);","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"kktai1512"},"content":"        } catch (UserInputErrorException e) {","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"            fail(\"Should not be throwing exception!\");","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"    void parseAddPatientInvalidParamTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"        String[] parameters \u003d {\"S1234567,JOHN,23,M,SINGAPORE,1999-01-01,2022-01-01\",","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"            \"S1234567A,JOHN1,23,M,SINGAPORE,1999-01-01,2022-01-01\",","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"            \"S1234567A,JOHN,2B,M,SINGAPORE,1999-01-01,2022-01-01\",","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"            \"S1234567A,JOHN,23,T,SINGAPORE,1999-01-01,2022-01-01\",","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"            \"S1234567A,JOHN,23,M,SINGAPORE,1999,2022-01-01\",","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"shxr3f"},"content":"            \"S1234567A,JOHN,23,M,SINGAPORE,1999-01-01,2022-100-01\",","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"shxr3f"},"content":"            \"S1234567A,JOHN,23,M,SINGAPORE,1999-01-01,2022-01-01,123\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"shxr3f"},"content":"        for (String s : parameters) {","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"shxr3f"},"content":"            try {","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"shxr3f"},"content":"                Parser.parseAddPatient(s);","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"shxr3f"},"content":"                fail(\"Should be throwing exception! Failed for: \" + s);","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"kktai1512"},"content":"            } catch (UserInputErrorException e) {","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"shxr3f"},"content":"                assert true;","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"shxr3f"},"content":"    void parseAddDoctorTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"shxr3f"},"content":"        String parameter \u003d \"S1234567A,JOHN,23,M,SINGAPORE,1999-01-01,Paediatrics\";","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"shxr3f"},"content":"        String[] parameterArray \u003d {\"S1234567A\",\"JOHN\",\"23\",\"M\",\"SINGAPORE\",\"1999-01-01\",\"Paediatrics\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"shxr3f"},"content":"            assertArrayEquals(parameterArray,Parser.parseAddDoctor(parameter).parameterArray);","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"kktai1512"},"content":"        } catch (UserInputErrorException e) {","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"shxr3f"},"content":"            fail(\"Should not be throwing exception!\");","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"shxr3f"},"content":"    void parseAddDoctorInvalidParamTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"shxr3f"},"content":"        String[] parameters \u003d {\"S1234567,JOHN,23,M,SINGAPORE,1999-01-01,Paediatrics\",","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"shxr3f"},"content":"            \"S1234567A,JOHN1,23,M,SINGAPORE,1999-01-01,Paediatrics\",","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"shxr3f"},"content":"            \"S1234567A,JOHN,2B,M,SINGAPORE,1999-01-01,Paediatrics\",","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"shxr3f"},"content":"            \"S1234567A,JOHN,23,T,SINGAPORE,1999-01-01,Paediatrics\",","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"shxr3f"},"content":"            \"S1234567A,JOHN,23,M,SINGAPORE,1999,Paediatrics\",","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"shxr3f"},"content":"            \"S1234567A,JOHN,23,M,SINGAPORE,1999-01-01,Paediatrics1\",","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"shxr3f"},"content":"            \"S1234567A,JOHN,23,M,SINGAPORE,1999-01-01\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"shxr3f"},"content":"        for (String s : parameters) {","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"shxr3f"},"content":"            try {","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"shxr3f"},"content":"                Parser.parseAddDoctor(s);","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"shxr3f"},"content":"                fail(\"Should be throwing exception! Failed for: \" + s);","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"kktai1512"},"content":"            } catch (UserInputErrorException e) {","lastModifiedDate":"2022-04-09"},{"lineNumber":68,"author":{"gitId":"shxr3f"},"content":"                assert true;","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"shxr3f"},"content":"    void parseAddMedicineTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"shxr3f"},"content":"        String parameter \u003d \"S123,Paracetamol,500,2025-02-02,Headaches,100\";","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"shxr3f"},"content":"        String[] parameterArray \u003d { \"S123\",\"Paracetamol\",\"500\",\"2025-02-02\",\"Headaches\",\"100\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"shxr3f"},"content":"            assertArrayEquals(parameterArray,Parser.parseAddMedicine(parameter).parameterArray);","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"kktai1512"},"content":"        } catch (UserInputErrorException e) {","lastModifiedDate":"2022-04-09"},{"lineNumber":80,"author":{"gitId":"shxr3f"},"content":"            fail(\"Should not be throwing exception\");","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"shxr3f"},"content":"    void parseAddMedicineInvalidParamTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"shxr3f"},"content":"        String[] parameters \u003d {\"S123,Paracetamol1,500,2025-02-02,Headaches,100\",","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"shxr3f"},"content":"            \"S123,Paracetamol,-1,2025-02-02,Headaches,100\",","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"shxr3f"},"content":"            \"S123,Paracetamol,50b,2025-02-02,Headaches,100\",","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"shxr3f"},"content":"            \"S123,Paracetamol,500,2025-24-02,Headaches,100\",","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"shxr3f"},"content":"            \"S123,Paracetamol,500,2025-02-02,Headaches\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"shxr3f"},"content":"        for (String s : parameters) {","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"shxr3f"},"content":"            try {","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"shxr3f"},"content":"                Parser.parseAddMedicine(s);","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"shxr3f"},"content":"                fail(\"Should be throwing exception! Failed for: \" + s);","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"kktai1512"},"content":"            } catch (UserInputErrorException e) {","lastModifiedDate":"2022-04-09"},{"lineNumber":97,"author":{"gitId":"shxr3f"},"content":"                assert true;","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"shxr3f"},"content":"    void parseDeletePatientTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"shxr3f"},"content":"        String parameter \u003d \"S1234567A\";","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"shxr3f"},"content":"        String[] parameterArray \u003d {\"S1234567A\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"shxr3f"},"content":"            assertArrayEquals(parameterArray,Parser.parseDeletePatient(parameter).parameterArray);","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"kktai1512"},"content":"        } catch (UserInputErrorException e) {","lastModifiedDate":"2022-04-09"},{"lineNumber":109,"author":{"gitId":"shxr3f"},"content":"            fail(\"Should not be throwing exception!\");","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"shxr3f"},"content":"    void parseDeletePatientInvalidParamTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"shxr3f"},"content":"        String[] parameters \u003d {\"S1234567\",\"S1234567A,S1235467A\", \"\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"shxr3f"},"content":"        for (String s : parameters) {","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"shxr3f"},"content":"            try {","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"shxr3f"},"content":"                Parser.parseDeletePatient(s);","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"shxr3f"},"content":"                fail(\"Should be throwing exception! Failed for: \" + s);","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"kktai1512"},"content":"            } catch (UserInputErrorException h) {","lastModifiedDate":"2022-04-09"},{"lineNumber":121,"author":{"gitId":"shxr3f"},"content":"                assert true;","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"shxr3f"},"content":"    void parseDeleteDoctorTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"shxr3f"},"content":"        String parameter \u003d \"S1234567A\";","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"shxr3f"},"content":"        String[] parameterArray \u003d {\"S1234567A\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":130,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":131,"author":{"gitId":"shxr3f"},"content":"            assertArrayEquals(parameterArray,Parser.parseDeleteDoctor(parameter).parameterArray);","lastModifiedDate":"2022-03-25"},{"lineNumber":132,"author":{"gitId":"kktai1512"},"content":"        } catch (UserInputErrorException e) {","lastModifiedDate":"2022-04-09"},{"lineNumber":133,"author":{"gitId":"shxr3f"},"content":"            fail(\"Should not be throwing exception!\");","lastModifiedDate":"2022-03-25"},{"lineNumber":134,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":135,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":136,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":137,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":138,"author":{"gitId":"shxr3f"},"content":"    void parseDeleteDoctorInvalidParamTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":139,"author":{"gitId":"shxr3f"},"content":"        String[] parameters \u003d {\"S1234567\",\"S1234567A,S1235467A\", \"\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":140,"author":{"gitId":"shxr3f"},"content":"        for (String s : parameters) {","lastModifiedDate":"2022-03-25"},{"lineNumber":141,"author":{"gitId":"shxr3f"},"content":"            try {","lastModifiedDate":"2022-03-25"},{"lineNumber":142,"author":{"gitId":"shxr3f"},"content":"                Parser.parseDeleteDoctor(s);","lastModifiedDate":"2022-03-25"},{"lineNumber":143,"author":{"gitId":"shxr3f"},"content":"                fail(\"Should be throwing exception! Failed for: \" + s);","lastModifiedDate":"2022-03-25"},{"lineNumber":144,"author":{"gitId":"kktai1512"},"content":"            } catch (UserInputErrorException h) {","lastModifiedDate":"2022-04-09"},{"lineNumber":145,"author":{"gitId":"shxr3f"},"content":"                assert true;","lastModifiedDate":"2022-03-25"},{"lineNumber":146,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":147,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":148,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":149,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":150,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":151,"author":{"gitId":"shxr3f"},"content":"    void parseDeleteMedicineTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"shxr3f"},"content":"        String parameter \u003d \"S123\";","lastModifiedDate":"2022-03-25"},{"lineNumber":153,"author":{"gitId":"shxr3f"},"content":"        String[] parameterArray \u003d {\"S123\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":154,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":155,"author":{"gitId":"shxr3f"},"content":"            assertArrayEquals(parameterArray,Parser.parseDeleteMedicine(parameter).parameterArray);","lastModifiedDate":"2022-03-25"},{"lineNumber":156,"author":{"gitId":"kktai1512"},"content":"        } catch (UserInputErrorException e) {","lastModifiedDate":"2022-04-09"},{"lineNumber":157,"author":{"gitId":"shxr3f"},"content":"            fail(\"Should not be throwing exception!\");","lastModifiedDate":"2022-03-25"},{"lineNumber":158,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":160,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":161,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":162,"author":{"gitId":"shxr3f"},"content":"    void parseDeleteMedicineInvalidParamTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":163,"author":{"gitId":"shxr3f"},"content":"        String[] parameters \u003d {\"S1234567A,S1235467A\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":164,"author":{"gitId":"shxr3f"},"content":"        for (String s : parameters) {","lastModifiedDate":"2022-03-25"},{"lineNumber":165,"author":{"gitId":"shxr3f"},"content":"            try {","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"shxr3f"},"content":"                Parser.parseDeleteMedicine(s);","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"shxr3f"},"content":"                fail(\"Should be throwing exception! Failed for: \" + s);","lastModifiedDate":"2022-03-25"},{"lineNumber":168,"author":{"gitId":"kktai1512"},"content":"            } catch (UserInputErrorException h) {","lastModifiedDate":"2022-04-09"},{"lineNumber":169,"author":{"gitId":"shxr3f"},"content":"                assert true;","lastModifiedDate":"2022-03-25"},{"lineNumber":170,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":171,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":172,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":173,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":174,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":175,"author":{"gitId":"shxr3f"},"content":"    void parseViewDoctorWithParamTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":176,"author":{"gitId":"Anvitha-r"},"content":"        String parameter \u003d \"nric, S1234567A\";","lastModifiedDate":"2022-03-28"},{"lineNumber":177,"author":{"gitId":"Anvitha-r"},"content":"        String[] parameterArray \u003d {\"nric\", \"S1234567A\"};","lastModifiedDate":"2022-03-28"},{"lineNumber":178,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":179,"author":{"gitId":"shxr3f"},"content":"            assertArrayEquals(parameterArray,Parser.parseViewDoctor(parameter).parameterArray);","lastModifiedDate":"2022-03-25"},{"lineNumber":180,"author":{"gitId":"kktai1512"},"content":"        } catch (UserInputErrorException e) {","lastModifiedDate":"2022-04-09"},{"lineNumber":181,"author":{"gitId":"shxr3f"},"content":"            fail(\"Should not be throwing exception!\");","lastModifiedDate":"2022-03-25"},{"lineNumber":182,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":183,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":184,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":185,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":186,"author":{"gitId":"shxr3f"},"content":"    void parseViewDoctorWithoutParamTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":187,"author":{"gitId":"shxr3f"},"content":"        String parameter \u003d null;","lastModifiedDate":"2022-03-25"},{"lineNumber":188,"author":{"gitId":"shxr3f"},"content":"        String[] parameterArray \u003d null;","lastModifiedDate":"2022-03-25"},{"lineNumber":189,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":190,"author":{"gitId":"shxr3f"},"content":"            assertArrayEquals(parameterArray,Parser.parseViewDoctor(parameter).parameterArray);","lastModifiedDate":"2022-03-25"},{"lineNumber":191,"author":{"gitId":"kktai1512"},"content":"        } catch (UserInputErrorException e) {","lastModifiedDate":"2022-04-09"},{"lineNumber":192,"author":{"gitId":"shxr3f"},"content":"            fail(\"Should not be throwing exception!\");","lastModifiedDate":"2022-03-25"},{"lineNumber":193,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":194,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":195,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":196,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":197,"author":{"gitId":"shxr3f"},"content":"    void parseViewDoctorInvalidParamTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":198,"author":{"gitId":"shxr3f"},"content":"        String[] parameters \u003d {\"S1234567\",\"S1234567A,S1235467A\", \"\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":199,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":200,"author":{"gitId":"shxr3f"},"content":"        for (String s : parameters) {","lastModifiedDate":"2022-03-25"},{"lineNumber":201,"author":{"gitId":"shxr3f"},"content":"            try {","lastModifiedDate":"2022-03-25"},{"lineNumber":202,"author":{"gitId":"shxr3f"},"content":"                Parser.parseViewDoctor(s);","lastModifiedDate":"2022-03-25"},{"lineNumber":203,"author":{"gitId":"shxr3f"},"content":"                fail(\"Should be throwing exception! Failed for: \" + s);","lastModifiedDate":"2022-03-25"},{"lineNumber":204,"author":{"gitId":"kktai1512"},"content":"            } catch (UserInputErrorException e) {","lastModifiedDate":"2022-04-09"},{"lineNumber":205,"author":{"gitId":"shxr3f"},"content":"                assert true;","lastModifiedDate":"2022-03-25"},{"lineNumber":206,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":207,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":208,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":209,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":210,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":211,"author":{"gitId":"shxr3f"},"content":"    void parseViewPatientWithParamTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":212,"author":{"gitId":"Anvitha-r"},"content":"        String parameter \u003d \"nric, S1234567A\";","lastModifiedDate":"2022-03-28"},{"lineNumber":213,"author":{"gitId":"Anvitha-r"},"content":"        String[] parameterArray \u003d {\"nric\", \"S1234567A\"};","lastModifiedDate":"2022-03-28"},{"lineNumber":214,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":215,"author":{"gitId":"shxr3f"},"content":"            assertArrayEquals(parameterArray,Parser.parseViewPatient(parameter).parameterArray);","lastModifiedDate":"2022-03-25"},{"lineNumber":216,"author":{"gitId":"kktai1512"},"content":"        } catch (UserInputErrorException e) {","lastModifiedDate":"2022-04-09"},{"lineNumber":217,"author":{"gitId":"shxr3f"},"content":"            fail(\"Should not be throwing exception!\");","lastModifiedDate":"2022-03-25"},{"lineNumber":218,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":219,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":220,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":221,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":222,"author":{"gitId":"shxr3f"},"content":"    void parseViewPatientWithoutParamTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":223,"author":{"gitId":"shxr3f"},"content":"        String parameter \u003d null;","lastModifiedDate":"2022-03-25"},{"lineNumber":224,"author":{"gitId":"shxr3f"},"content":"        String[] parameterArray \u003d null;","lastModifiedDate":"2022-03-25"},{"lineNumber":225,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":226,"author":{"gitId":"shxr3f"},"content":"            assertArrayEquals(parameterArray,Parser.parseViewPatient(parameter).parameterArray);","lastModifiedDate":"2022-03-25"},{"lineNumber":227,"author":{"gitId":"kktai1512"},"content":"        } catch (UserInputErrorException e) {","lastModifiedDate":"2022-04-09"},{"lineNumber":228,"author":{"gitId":"shxr3f"},"content":"            fail(\"Should not be throwing exception!\");","lastModifiedDate":"2022-03-25"},{"lineNumber":229,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":230,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":231,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":232,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":233,"author":{"gitId":"shxr3f"},"content":"    void parseViewPatientInvalidParamTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":234,"author":{"gitId":"shxr3f"},"content":"        String[] parameters \u003d {\"S1234567\",\"S1234567A,S1235467A\", \"\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":235,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":236,"author":{"gitId":"shxr3f"},"content":"        for (String s : parameters) {","lastModifiedDate":"2022-03-25"},{"lineNumber":237,"author":{"gitId":"shxr3f"},"content":"            try {","lastModifiedDate":"2022-03-25"},{"lineNumber":238,"author":{"gitId":"shxr3f"},"content":"                Parser.parseViewPatient(s);","lastModifiedDate":"2022-03-25"},{"lineNumber":239,"author":{"gitId":"shxr3f"},"content":"                fail(\"Should be throwing exception! Failed for: \" + s);","lastModifiedDate":"2022-03-25"},{"lineNumber":240,"author":{"gitId":"kktai1512"},"content":"            } catch (UserInputErrorException e) {","lastModifiedDate":"2022-04-09"},{"lineNumber":241,"author":{"gitId":"shxr3f"},"content":"                assert true;","lastModifiedDate":"2022-03-25"},{"lineNumber":242,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":243,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":244,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":245,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":246,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":247,"author":{"gitId":"shxr3f"},"content":"    void parseViewMedicineWithParamTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":248,"author":{"gitId":"Anvitha-r"},"content":"        String parameter \u003d \"id, S1234\";","lastModifiedDate":"2022-03-28"},{"lineNumber":249,"author":{"gitId":"Anvitha-r"},"content":"        String[] parameterArray \u003d {\"id\",\"S1234\"};","lastModifiedDate":"2022-03-28"},{"lineNumber":250,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":251,"author":{"gitId":"shxr3f"},"content":"            assertArrayEquals(parameterArray,Parser.parseViewMedicine(parameter).parameterArray);","lastModifiedDate":"2022-03-25"},{"lineNumber":252,"author":{"gitId":"kktai1512"},"content":"        } catch (UserInputErrorException e) {","lastModifiedDate":"2022-04-09"},{"lineNumber":253,"author":{"gitId":"shxr3f"},"content":"            fail(\"Should not be throwing exception!\");","lastModifiedDate":"2022-03-25"},{"lineNumber":254,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":255,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":256,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":257,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":258,"author":{"gitId":"shxr3f"},"content":"    void parseViewMedicineWithoutParamTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":259,"author":{"gitId":"shxr3f"},"content":"        String parameter \u003d null;","lastModifiedDate":"2022-03-25"},{"lineNumber":260,"author":{"gitId":"shxr3f"},"content":"        String[] parameterArray \u003d null;","lastModifiedDate":"2022-03-25"},{"lineNumber":261,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":262,"author":{"gitId":"shxr3f"},"content":"            assertArrayEquals(parameterArray,Parser.parseViewMedicine(parameter).parameterArray);","lastModifiedDate":"2022-03-25"},{"lineNumber":263,"author":{"gitId":"kktai1512"},"content":"        } catch (UserInputErrorException e) {","lastModifiedDate":"2022-04-09"},{"lineNumber":264,"author":{"gitId":"shxr3f"},"content":"            fail(\"Should not be throwing exception!\");","lastModifiedDate":"2022-03-25"},{"lineNumber":265,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":266,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":267,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":268,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":269,"author":{"gitId":"shxr3f"},"content":"    void parseViewMedicineInvalidParamTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":270,"author":{"gitId":"Anvitha-r"},"content":"        String[] parameters \u003d {\"S1234567A\"};","lastModifiedDate":"2022-03-28"},{"lineNumber":271,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":272,"author":{"gitId":"shxr3f"},"content":"        for (String s : parameters) {","lastModifiedDate":"2022-03-25"},{"lineNumber":273,"author":{"gitId":"shxr3f"},"content":"            try {","lastModifiedDate":"2022-03-25"},{"lineNumber":274,"author":{"gitId":"shxr3f"},"content":"                Parser.parseViewMedicine(s);","lastModifiedDate":"2022-03-25"},{"lineNumber":275,"author":{"gitId":"shxr3f"},"content":"                fail(\"Should be throwing exception! Failed for: \" + s);","lastModifiedDate":"2022-03-25"},{"lineNumber":276,"author":{"gitId":"kktai1512"},"content":"            } catch (UserInputErrorException e) {","lastModifiedDate":"2022-04-09"},{"lineNumber":277,"author":{"gitId":"shxr3f"},"content":"                assert true;","lastModifiedDate":"2022-03-25"},{"lineNumber":278,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":279,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":280,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":281,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":282,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":283,"author":{"gitId":"shxr3f"},"content":"    void parseEditMedicineTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":284,"author":{"gitId":"shxr3f"},"content":"        String parameter \u003d \"S123,Paracetamol,500,2025-02-02,Headaches,100\";","lastModifiedDate":"2022-03-25"},{"lineNumber":285,"author":{"gitId":"shxr3f"},"content":"        String[] parameterArray \u003d { \"S123\",\"Paracetamol\",\"500\",\"2025-02-02\",\"Headaches\",\"100\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":286,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":287,"author":{"gitId":"shxr3f"},"content":"            assertArrayEquals(parameterArray,Parser.parseEditMedicine(parameter).parameterArray);","lastModifiedDate":"2022-03-25"},{"lineNumber":288,"author":{"gitId":"kktai1512"},"content":"        } catch (UserInputErrorException e) {","lastModifiedDate":"2022-04-09"},{"lineNumber":289,"author":{"gitId":"shxr3f"},"content":"            fail(\"Should not be throwing exception\");","lastModifiedDate":"2022-03-25"},{"lineNumber":290,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":291,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":292,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":293,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":294,"author":{"gitId":"shxr3f"},"content":"    void parseEditMedicineInvalidParamTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":295,"author":{"gitId":"shxr3f"},"content":"        String[] parameters \u003d {\"S123,Paracetamol1,500,2025-02-02,Headaches,100\",","lastModifiedDate":"2022-03-25"},{"lineNumber":296,"author":{"gitId":"shxr3f"},"content":"            \"S123,Paracetamol,-1,2025-02-02,Headaches,100\",","lastModifiedDate":"2022-03-25"},{"lineNumber":297,"author":{"gitId":"shxr3f"},"content":"            \"S123,Paracetamol,50b,2025-02-02,Headaches,100\",","lastModifiedDate":"2022-03-25"},{"lineNumber":298,"author":{"gitId":"shxr3f"},"content":"            \"S123,Paracetamol,500,2025-24-02,Headaches,100\",","lastModifiedDate":"2022-03-25"},{"lineNumber":299,"author":{"gitId":"shxr3f"},"content":"            \"S123,Paracetamol,500,2025-02-02,Headaches\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":300,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":301,"author":{"gitId":"shxr3f"},"content":"        for (String s : parameters) {","lastModifiedDate":"2022-03-25"},{"lineNumber":302,"author":{"gitId":"shxr3f"},"content":"            try {","lastModifiedDate":"2022-03-25"},{"lineNumber":303,"author":{"gitId":"shxr3f"},"content":"                Parser.parseAddMedicine(s);","lastModifiedDate":"2022-03-25"},{"lineNumber":304,"author":{"gitId":"shxr3f"},"content":"                fail(\"Should be throwing exception! Failed for: \" + s);","lastModifiedDate":"2022-03-25"},{"lineNumber":305,"author":{"gitId":"kktai1512"},"content":"            } catch (UserInputErrorException e) {","lastModifiedDate":"2022-04-09"},{"lineNumber":306,"author":{"gitId":"shxr3f"},"content":"                assert true;","lastModifiedDate":"2022-03-25"},{"lineNumber":307,"author":{"gitId":"shxr3f"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":308,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":309,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":310,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":311,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":312,"author":{"gitId":"shxr3f"},"content":"    void parseUpdateMedicineStockTest() {","lastModifiedDate":"2022-03-26"},{"lineNumber":313,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":314,"author":{"gitId":"shxr3f"},"content":"            Parser.parseUpdateMedicineStock(null);","lastModifiedDate":"2022-03-26"},{"lineNumber":315,"author":{"gitId":"shxr3f"},"content":"            assert true;","lastModifiedDate":"2022-03-26"},{"lineNumber":316,"author":{"gitId":"kktai1512"},"content":"        } catch (UserInputErrorException e) {","lastModifiedDate":"2022-04-09"},{"lineNumber":317,"author":{"gitId":"shxr3f"},"content":"            fail(\"Should not be throwing exception!\");","lastModifiedDate":"2022-03-26"},{"lineNumber":318,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":319,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":320,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":321,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":322,"author":{"gitId":"shxr3f"},"content":"    void parseUpdateMedicineStockInvalidParamTest() {","lastModifiedDate":"2022-03-26"},{"lineNumber":323,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":324,"author":{"gitId":"shxr3f"},"content":"            Parser.parseUpdateMedicineStock(\"\");","lastModifiedDate":"2022-03-26"},{"lineNumber":325,"author":{"gitId":"shxr3f"},"content":"            fail(\"Should be throwing exception!\");","lastModifiedDate":"2022-03-26"},{"lineNumber":326,"author":{"gitId":"kktai1512"},"content":"        } catch (UserInputErrorException e) {","lastModifiedDate":"2022-04-09"},{"lineNumber":327,"author":{"gitId":"shxr3f"},"content":"            assert true;","lastModifiedDate":"2022-03-26"},{"lineNumber":328,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":329,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":330,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":331,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":332,"author":{"gitId":"shxr3f"},"content":"    void parseClearExpiredMedicineTest() {","lastModifiedDate":"2022-03-26"},{"lineNumber":333,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":334,"author":{"gitId":"shxr3f"},"content":"            Parser.parseClearExpiredMedicine(null);","lastModifiedDate":"2022-03-26"},{"lineNumber":335,"author":{"gitId":"shxr3f"},"content":"            assert true;","lastModifiedDate":"2022-03-26"},{"lineNumber":336,"author":{"gitId":"kktai1512"},"content":"        } catch (UserInputErrorException e) {","lastModifiedDate":"2022-04-09"},{"lineNumber":337,"author":{"gitId":"shxr3f"},"content":"            fail(\"Should not be throwing exception!\");","lastModifiedDate":"2022-03-26"},{"lineNumber":338,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":339,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":340,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":341,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":342,"author":{"gitId":"shxr3f"},"content":"    void parseClearExpiredMedicineInvalidParamTest() {","lastModifiedDate":"2022-03-26"},{"lineNumber":343,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":344,"author":{"gitId":"shxr3f"},"content":"            Parser.parseClearExpiredMedicine(\"\");","lastModifiedDate":"2022-03-26"},{"lineNumber":345,"author":{"gitId":"shxr3f"},"content":"            fail(\"Should be throwing exception!\");","lastModifiedDate":"2022-03-26"},{"lineNumber":346,"author":{"gitId":"kktai1512"},"content":"        } catch (UserInputErrorException e) {","lastModifiedDate":"2022-04-09"},{"lineNumber":347,"author":{"gitId":"shxr3f"},"content":"            assert true;","lastModifiedDate":"2022-03-26"},{"lineNumber":348,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":349,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":350,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":351,"author":{"gitId":"shxr3f"},"content":"    /*","lastModifiedDate":"2022-03-27"},{"lineNumber":352,"author":{"gitId":"tanweili"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":353,"author":{"gitId":"tanweili"},"content":"    void parseAddAppointmentTest_CorrectFormatInput_returnCommand() {","lastModifiedDate":"2022-03-26"},{"lineNumber":354,"author":{"gitId":"tanweili"},"content":"        String parameters \u003d \"ID1,S1234567A,Thomas,S7654321A,Anderson,2023-01-01,Headache\";","lastModifiedDate":"2022-03-26"},{"lineNumber":355,"author":{"gitId":"tanweili"},"content":"        Command testCommand \u003d null;","lastModifiedDate":"2022-03-26"},{"lineNumber":356,"author":{"gitId":"tanweili"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":357,"author":{"gitId":"tanweili"},"content":"            testCommand \u003d Parser.parseAddAppointment(parameters);","lastModifiedDate":"2022-03-26"},{"lineNumber":358,"author":{"gitId":"tanweili"},"content":"        } catch (HalpmiException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":359,"author":{"gitId":"tanweili"},"content":"            e.toString();","lastModifiedDate":"2022-03-26"},{"lineNumber":360,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":361,"author":{"gitId":"tanweili"},"content":"        assertTrue(testCommand instanceof AddAppointmentCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":362,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":363,"author":{"gitId":"tanweili"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":364,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":365,"author":{"gitId":"tanweili"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":366,"author":{"gitId":"tanweili"},"content":"    void parseViewAppointmentTest_CorrectFormatInput_returnCommand() {","lastModifiedDate":"2022-03-26"},{"lineNumber":367,"author":{"gitId":"tanweili"},"content":"        String viewParameters \u003d \"nric,S1234567A\";","lastModifiedDate":"2022-03-26"},{"lineNumber":368,"author":{"gitId":"tanweili"},"content":"        Command testCommand \u003d null;","lastModifiedDate":"2022-03-26"},{"lineNumber":369,"author":{"gitId":"tanweili"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":370,"author":{"gitId":"tanweili"},"content":"            testCommand \u003d Parser.parseViewAppointment(viewParameters);","lastModifiedDate":"2022-03-26"},{"lineNumber":371,"author":{"gitId":"tanweili"},"content":"        } catch (HalpmiException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":372,"author":{"gitId":"tanweili"},"content":"            e.toString();","lastModifiedDate":"2022-03-26"},{"lineNumber":373,"author":{"gitId":"tanweili"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":374,"author":{"gitId":"tanweili"},"content":"        assertTrue(testCommand instanceof ViewAppointmentCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":375,"author":{"gitId":"tanweili"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":376,"author":{"gitId":"Anvitha-r"},"content":"    */","lastModifiedDate":"2022-03-27"},{"lineNumber":377,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":378,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"tanweili":23,"wraineflores":2,"Anvitha-r":8,"shxr3f":317,"kktai1512":28}},{"path":"src/test/java/seedu/duke/helper/UiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"package seedu.duke.helper;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"import org.junit.jupiter.api.TestInfo;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"wraineflores"},"content":"public class UiTest {","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"wraineflores"},"content":"    static final Logger logger \u003d Logger.getLogger(\"UiTest\");","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"wraineflores"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"wraineflores"},"content":"    void printDetails(TestInfo testInfo) {","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"wraineflores"},"content":"        logger.info(\"Now testing:\");","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"wraineflores"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"wraineflores":15}},{"path":"src/test/java/seedu/duke/helper/command/AddDoctorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.DoctorList;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.DuplicateEntryException;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"import static seedu.duke.status.Status.ADD_DOCTOR_SUCCESS;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"class AddDoctorCommandTest {","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"    void executeTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"        String[] parameterArray \u003d {\"S1234567A\",\"John\",\"23\",\"M\",\"Singapore\",\"1999-01-01\",\"Endocrinology\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"        DoctorList doctors \u003d new DoctorList();","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"        AddDoctorCommand command \u003d new AddDoctorCommand(parameterArray);","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"            assertEquals(ADD_DOCTOR_SUCCESS,command.execute(doctors));","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"        } catch (DuplicateEntryException e) {","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"            fail(\"Should give success status, not throw exception\");","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"    void executeTestDuplicate() {","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"        String[] parameterArray \u003d {\"S1234567A\",\"John\",\"23\",\"M\",\"Singapore\",\"1999-01-01\",\"Endocrinology\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"        DoctorList doctors \u003d new DoctorList();","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"        AddDoctorCommand command \u003d new AddDoctorCommand(parameterArray);","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"shxr3f"},"content":"            command.execute(doctors);","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"shxr3f"},"content":"            command.execute(doctors);","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"shxr3f"},"content":"            fail(\"Should throw Duplicate Entry exception\");","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"shxr3f"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"shxr3f"},"content":"            assert true;","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"shxr3f":38}},{"path":"src/test/java/seedu/duke/helper/command/AddMedicineCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.DoctorList;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.MedicineList;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.DuplicateEntryException;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"import static seedu.duke.status.Status.ADD_DOCTOR_SUCCESS;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"import static seedu.duke.status.Status.ADD_MEDICINE_SUCCESS;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"class AddMedicineCommandTest {","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"    void executeTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"        String[] parameterArray \u003d {\"S123\",\"Paracetamol\",\"500\",\"2024-01-01\",\"Headaches\",\"10\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"        MedicineList medicines \u003d new MedicineList();","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"        AddMedicineCommand command \u003d new AddMedicineCommand(parameterArray);","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"            assertEquals(ADD_MEDICINE_SUCCESS,command.execute(medicines));","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"        } catch (DuplicateEntryException e) {","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"            fail(\"Should give success status, not throw exception\");","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"    void executeTestDuplicate() {","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"        String[] parameterArray \u003d {\"S123\",\"Paracetamol\",\"500\",\"2024-01-01\",\"Headaches\",\"10\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"        MedicineList medicines \u003d new MedicineList();","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"shxr3f"},"content":"        AddMedicineCommand command \u003d new AddMedicineCommand(parameterArray);","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"shxr3f"},"content":"            command.execute(medicines);","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"shxr3f"},"content":"            command.execute(medicines);","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"shxr3f"},"content":"            fail(\"Should be throwing Duplicate Entry Exception\");","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"shxr3f"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"shxr3f"},"content":"            assert true;","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"shxr3f":41}},{"path":"src/test/java/seedu/duke/helper/command/AddPatientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.MedicineList;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.PatientList;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.DuplicateEntryException;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"import static seedu.duke.status.Status.ADD_MEDICINE_SUCCESS;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"import static seedu.duke.status.Status.ADD_PATIENT_SUCCESS;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"class AddPatientCommandTest {","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"    void executeTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"        String[] parameterArray \u003d {\"S1234567A\",\"John\",\"23\",\"M\",\"Singapore\",\"1999-01-01\",\"2022-02-02\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"        PatientList patients \u003d new PatientList();","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"        AddPatientCommand command \u003d new AddPatientCommand(parameterArray);","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"            assertEquals(ADD_PATIENT_SUCCESS,command.execute(patients));","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"        } catch (DuplicateEntryException e) {","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"            fail(\"Should give success status, not throw exception\");","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"    void executeTestDuplicate() {","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"        String[] parameterArray \u003d {\"S1234567A\",\"John\",\"23\",\"M\",\"Singapore\",\"1999-01-01\",\"2022-02-02\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"        PatientList patients \u003d new PatientList();","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"shxr3f"},"content":"        AddPatientCommand command \u003d new AddPatientCommand(parameterArray);","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"shxr3f"},"content":"            command.execute(patients);","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"shxr3f"},"content":"            command.execute(patients);","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"shxr3f"},"content":"            fail(\"Should be throwing Duplicate Entry Exception\");","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"shxr3f"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"shxr3f"},"content":"            assert true;","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"shxr3f":40}},{"path":"src/test/java/seedu/duke/helper/command/DeleteDoctorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.DoctorList;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.DuplicateEntryException;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.NotFoundException;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"class DeleteDoctorCommandTest {","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"    void executeTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"        String[] parameterArray \u003d {\"S1234567A\",\"John\",\"23\",\"M\",\"Singapore\",\"1999-01-01\",\"Endocrinology\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"        String[] parameterArray2 \u003d {\"S1234567A\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"        DoctorList doctors \u003d new DoctorList();","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"        AddDoctorCommand command \u003d new AddDoctorCommand(parameterArray);","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"        DeleteDoctorCommand commandInTest \u003d new DeleteDoctorCommand(parameterArray2);","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"            command.execute(doctors);","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"            commandInTest.execute(doctors);","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"            assert true;","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"        } catch (DuplicateEntryException e) {","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"            fail(\"AddDoctorCommand is not working correctly!\");","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"        } catch (NotFoundException n) {","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"            fail(\"Shouldn\u0027t be throwing NotFoundException as doctor exists!\");","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"shxr3f"},"content":"    void executeTestNotFound() {","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"shxr3f"},"content":"        String[] parameterArray2 \u003d {\"S1234567A\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"shxr3f"},"content":"        DoctorList doctors \u003d new DoctorList();","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"shxr3f"},"content":"        DeleteDoctorCommand commandInTest \u003d new DeleteDoctorCommand(parameterArray2);","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"shxr3f"},"content":"            commandInTest.execute(doctors);","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"shxr3f"},"content":"            fail(\"Should be throwing NotFoundException!\");","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"shxr3f"},"content":"        } catch (NotFoundException n) {","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"shxr3f"},"content":"            assert true;","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"shxr3f":44}},{"path":"src/test/java/seedu/duke/helper/command/DeleteMedicineCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.DoctorList;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.MedicineList;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.DuplicateEntryException;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.NotFoundException;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"class DeleteMedicineCommandTest {","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"    void executeTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"        String[] parameterArray \u003d {\"S123\",\"Paracetamol\",\"500\",\"2024-01-01\",\"Headaches\",\"10\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"        String[] parameterArray2 \u003d {\"S123\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"        MedicineList medicines \u003d new MedicineList();","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"        AddMedicineCommand command \u003d new AddMedicineCommand(parameterArray);","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"        DeleteMedicineCommand commandInTest \u003d new DeleteMedicineCommand(parameterArray2);","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"            command.execute(medicines);","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"            commandInTest.execute(medicines);","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"            assert true;","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"        } catch (DuplicateEntryException e) {","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"            fail(\"AddMedicineCommand is not working correctly!\");","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"        } catch (NotFoundException n) {","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"            fail(\"Shouldn\u0027t be throwing NotFoundException as medicine exists!\");","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"shxr3f"},"content":"    void executeTestNotFound() {","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"shxr3f"},"content":"        String[] parameterArray2 \u003d {\"S123\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"shxr3f"},"content":"        MedicineList medicines \u003d new MedicineList();","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"shxr3f"},"content":"        DeleteMedicineCommand commandInTest \u003d new DeleteMedicineCommand(parameterArray2);","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"shxr3f"},"content":"            commandInTest.execute(medicines);","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"shxr3f"},"content":"            fail(\"Should be throwing NotFoundException!\");","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"shxr3f"},"content":"        } catch (NotFoundException n) {","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"shxr3f"},"content":"            assert true;","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"shxr3f":44}},{"path":"src/test/java/seedu/duke/helper/command/DeletePatientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.DoctorList;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.MedicineList;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.PatientList;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.DuplicateEntryException;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.NotFoundException;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"class DeletePatientCommandTest {","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"    void executeTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"        String[] parameterArray \u003d {\"S1234567A\",\"John\",\"23\",\"M\",\"Singapore\",\"1999-01-01\",\"2020-01-01\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"        String[] parameterArray2 \u003d {\"S1234567A\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"        PatientList patients \u003d new PatientList();","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"        AddPatientCommand command \u003d new AddPatientCommand(parameterArray);","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"        DeletePatientCommand commandInTest \u003d new DeletePatientCommand(parameterArray2);","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"            command.execute(patients);","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"            commandInTest.execute(patients);","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"            assert true;","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"        } catch (DuplicateEntryException e) {","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"            fail(\"AddPatientCommand is not working correctly!\");","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"        } catch (NotFoundException n) {","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"            fail(\"Shouldn\u0027t be throwing NotFoundException as patient exists!\");","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"shxr3f"},"content":"    void executeTestNotFound() {","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"shxr3f"},"content":"        String[] parameterArray2 \u003d {\"S1234567A\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"shxr3f"},"content":"        PatientList patients \u003d new PatientList();","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"shxr3f"},"content":"        DeletePatientCommand commandInTest \u003d new DeletePatientCommand(parameterArray2);","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"shxr3f"},"content":"            commandInTest.execute(patients);","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"shxr3f"},"content":"            fail(\"Should be throwing NotFoundException!\");","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"shxr3f"},"content":"        } catch (NotFoundException n) {","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"shxr3f"},"content":"            assert true;","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"shxr3f":45}},{"path":"src/test/java/seedu/duke/helper/command/EditMedicineCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shxr3f"},"content":"package seedu.duke.helper.command;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"shxr3f"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.assets.MedicineList;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.DuplicateEntryException;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"shxr3f"},"content":"import seedu.duke.exception.NotFoundException;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"shxr3f"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"shxr3f"},"content":"class EditMedicineCommandTest {","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"shxr3f"},"content":"    void executeTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"shxr3f"},"content":"        String[] parameterArray \u003d {\"S123\",\"Paracetamol\",\"500\",\"2024-01-01\",\"Headaches\",\"10\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"shxr3f"},"content":"        String[] parameterArray2 \u003d {\"S123\",\"Aspirin\",\"500\",\"2024-01-01\",\"Headaches\",\"10\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"shxr3f"},"content":"        MedicineList medicines \u003d new MedicineList();","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"shxr3f"},"content":"        AddMedicineCommand command \u003d new AddMedicineCommand(parameterArray);","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"shxr3f"},"content":"        EditMedicineCommand commandInTest \u003d new EditMedicineCommand(parameterArray2);","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"shxr3f"},"content":"            command.execute(medicines);","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"shxr3f"},"content":"            commandInTest.execute(medicines);","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"shxr3f"},"content":"            assert true;","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"shxr3f"},"content":"        } catch (DuplicateEntryException d) {","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"shxr3f"},"content":"            fail(\"AddMedicineCommand is not working properly!\");","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"shxr3f"},"content":"        } catch (NotFoundException n) {","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"shxr3f"},"content":"            fail(\"There exists a Medicine with the stated Batch ID. Should not be throwing exception!\");","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"shxr3f"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"shxr3f"},"content":"    void executeTestNotFound() {","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"shxr3f"},"content":"        String[] parameterArray2 \u003d {\"S123\",\"Aspirin\",\"500\",\"2024-01-01\",\"Headaches\",\"10\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"shxr3f"},"content":"        MedicineList medicines \u003d new MedicineList();","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"shxr3f"},"content":"        EditMedicineCommand commandInTest \u003d new EditMedicineCommand(parameterArray2);","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"shxr3f"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"shxr3f"},"content":"            commandInTest.execute(medicines);","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"shxr3f"},"content":"            fail(\"Should be throwing Not Found Exception\");","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"shxr3f"},"content":"        } catch (NotFoundException n) {","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"shxr3f"},"content":"            assert true;","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"shxr3f"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"shxr3f"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"shxr3f"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"shxr3f"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"shxr3f":44}},{"path":"src/test/java/seedu/duke/helper/finder/DoctorFinderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wraineflores"},"content":"package seedu.duke.helper.finder;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"wraineflores"},"content":"class DoctorFinderTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"wraineflores"},"content":"}","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"wraineflores"},"content":"","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"wraineflores":6}}]
