[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"froststein"},"content":"    mainClassName \u003d \"seedu.splitlah.SplitLah\"","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"froststein"},"content":"    archiveBaseName \u003d \"splitlah\"","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":44,"froststein":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |   Name   |               Github Profile                | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"ivanaitzliddat"},"content":"--------|:--------:|:-------------------------------------------:|:---------:","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"ivanaitzliddat"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Ivan   | [Github](https://github.com/ivanaitzliddat) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"lelerer"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ren Tianle  |  [Github](https://github.com/lelerer)    | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"matheril"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Saurav  |    [Github](https://github.com/matheril)    | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"froststein"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Roy Tang |        [Github](https://github.com/froststein)        | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"warrencxw"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Warren Chong Xu Wei |   [Github](https://github.com/warrencxw)    | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"ivanaitzliddat":2,"lelerer":1,"warrencxw":1,"-":3,"froststein":1,"matheril":1}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{Give a product intro}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{Give steps to get started quickly}","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Down the latest version of `Duke` from [here](http://link.to/duke).","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"{Give detailed description of each feature}","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"froststein"},"content":"### Creating a session: `session /create`","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"froststein"},"content":"\u003eCreates a new session to be managed by SplitLah. \u003cbr\u003e ","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"froststein"},"content":"\u003eSessions are a way for the user to manage their gatherings that happen across the day.","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"froststein"},"content":"Format: `session /create /n [SESSION_NAME] /d [SESSION_DATE] /pl [NAME1 NAME2 ...]`","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"froststein"},"content":"* `[SESSION_NAME]` refers to the name of the session.","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"froststein"},"content":"  * The session name is **case-insensitive**.","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"froststein"},"content":"* `[SESSION_DATE]` refers to the date of the session.","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"froststein"},"content":"  * The format of the date should follow `YYYY-MM-DD`","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"froststein"},"content":"* `[NAME1 NAME2 ...]` refers to a list of persons involved in the session.","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"froststein"},"content":"  * The names are **case-insensitive**.","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"froststein"},"content":"Notes:","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"froststein"},"content":"- The `[SESSION_NAME]` should be unique across sessions.","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"froststein"},"content":"- Each name in `[NAME1 NAME2 ...]` for the session should be unique.","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"froststein"},"content":"1. Adds a new session named Class Outing with Alice and Bob involved on 2022-03-15.","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"froststein"},"content":"   1. `session /create /n Class Outing /d 2022-03-15 /pl Alice Bob`","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"froststein"},"content":"\u003cbr\u003e[INSERT SCREEN SHOT]","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**A**: {your answer here}","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"{Give a \u0027cheat sheet\u0027 of commands here}","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Add todo `todo n/TODO_NAME d/DEADLINE`","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"-":36,"froststein":16}},{"path":"src/main/java/seedu/splitlah/SplitLah.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package seedu.splitlah;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.command.Command;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.data.Manager;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.parser.Parser;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"froststein"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"froststein"},"content":" * Entry point of the SplitLah application.","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"froststein"},"content":" * Initializes SplitLah and starts interacting with the user.","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"froststein"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"froststein"},"content":"public class SplitLah {","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"froststein"},"content":"    Manager manager;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"froststein"},"content":"        new SplitLah().run();","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"froststein"},"content":"    /** Sets up the required objects for application.  */","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"froststein"},"content":"    public SplitLah() {","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"froststein"},"content":"        manager \u003d new Manager();","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"froststein"},"content":"    /** Runs the program until it terminates.  */","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"froststein"},"content":"    private void run() {","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"froststein"},"content":"        showWelcomeMessage();","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"froststein"},"content":"        runProcessLoop();","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"froststein"},"content":"        exitApplication();","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"froststein"},"content":"    /** Prints welcome message.  */","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"froststein"},"content":"    private void showWelcomeMessage() {","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"froststein"},"content":"        manager.getUi().printWelcome();","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"froststein"},"content":"    /** Exits the program.  */","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"froststein"},"content":"    private void exitApplication() {","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"froststein"},"content":"        System.exit(0);","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"froststein"},"content":"    /** Reads the user input until the user enters the exit command.  */","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"froststein"},"content":"    private void runProcessLoop() {","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"froststein"},"content":"        Command command;","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"froststein"},"content":"        do {","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"froststein"},"content":"            String userInput \u003d manager.getUi().readNextLine();","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"froststein"},"content":"            command \u003d Parser.getCommand(userInput);","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"froststein"},"content":"            command.run(manager);","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"froststein"},"content":"        } while (!Command.isExitCommand(command));","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"froststein":44,"-":5}},{"path":"src/main/java/seedu/splitlah/command/ActivityCreateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package seedu.splitlah.command;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"ivanaitzliddat"},"content":"import seedu.splitlah.data.Activity;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.data.Manager;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"ivanaitzliddat"},"content":"import seedu.splitlah.data.Person;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"warrencxw"},"content":"import seedu.splitlah.data.Profile;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"ivanaitzliddat"},"content":"import seedu.splitlah.data.Session;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"ivanaitzliddat"},"content":"import seedu.splitlah.exceptions.InvalidDataException;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"ivanaitzliddat"},"content":"import seedu.splitlah.exceptions.InvalidFormatException;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"ivanaitzliddat"},"content":"import seedu.splitlah.parser.Parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"ivanaitzliddat"},"content":"import seedu.splitlah.ui.Message;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"ivanaitzliddat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"ivanaitzliddat"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"ivanaitzliddat"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"warrencxw"},"content":" * Represents a command that creates an Activity object from user input and stores it in the Session object.","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"ivanaitzliddat"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"ivanaitzliddat"},"content":"public class ActivityCreateCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"ivanaitzliddat"},"content":"    public static final String COMMAND_TEXT \u003d \"activity /create\";","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"ivanaitzliddat"},"content":"    private static final String COMMAND_FORMAT \u003d \"Syntax:\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"ivanaitzliddat"},"content":"            + \"activity /create /sid \u003cSESSIONID\u003e /n \u003cACTIVITYNAME\u003e /p \u003cPAYER\u003e /i \u003cNAME1 NAME2…\u003e /c \u003cOVERALLCOST\u003e \"","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"ivanaitzliddat"},"content":"            + \"[\u003cOPTIONAL ARGS\u003e]\\n\"","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"ivanaitzliddat"},"content":"            + \"activity /create /sid \u003cSESSIONID\u003e /n \u003cACTIVITYNAME\u003e /p \u003cPAYER\u003e /i \u003cNAME1 NAME2…\u003e /c \u003cCOST1 COST2…\u003e \"","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"ivanaitzliddat"},"content":"            + \"[\u003cOPTIONAL ARGS\u003e]\\n\"","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"ivanaitzliddat"},"content":"            + \"activity /create /sid \u003cSESSIONID\u003e /n \u003cACTIVITYNAME\u003e /p \u003cPAYER\u003e /c \u003cOVERALLCOST\u003e [\u003cOPTIONAL ARGS\u003e]\";","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"ivanaitzliddat"},"content":"    private static final double ZERO_COST_PAID \u003d 0;","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"ivanaitzliddat"},"content":"    public static final int NO_COST \u003d 0;","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"ivanaitzliddat"},"content":"    private int sessionId;","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"ivanaitzliddat"},"content":"    private String activityName;","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"ivanaitzliddat"},"content":"    private double totalCost;","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"ivanaitzliddat"},"content":"    private String payer;","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"ivanaitzliddat"},"content":"    private String[] involvedList;","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"ivanaitzliddat"},"content":"    private double[] costList;","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"ivanaitzliddat"},"content":"    private int gst;","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"ivanaitzliddat"},"content":"    private int serviceCharge;","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"ivanaitzliddat"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"ivanaitzliddat"},"content":"     * Constructor to create a ActivityCreateCommand object.","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"ivanaitzliddat"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"warrencxw"},"content":"     * @param sessionId     An integer that uniquely identifies a session.","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"warrencxw"},"content":"     * @param activityName  A String object that represents the Activity object\u0027s name.","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"warrencxw"},"content":"     * @param totalCost     A double that represents total cost of the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param payer         The name of the person who paid for the activity.","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param involvedList  The names of the persons who are involved in the activity.","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param costList      The respective costs of each person involved in the activity.","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param gst           The gst to be included for the cost of the activity.","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param serviceCharge The service charge to be included for the cost of the activity.","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"ivanaitzliddat"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"ivanaitzliddat"},"content":"    public ActivityCreateCommand(int sessionId, String activityName, double totalCost, String payer,","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"ivanaitzliddat"},"content":"                                 String[] involvedList, double[] costList, int gst, int serviceCharge) {","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"ivanaitzliddat"},"content":"        this.sessionId \u003d sessionId;","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"ivanaitzliddat"},"content":"        this.activityName \u003d activityName;","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"ivanaitzliddat"},"content":"        this.totalCost \u003d totalCost;","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"ivanaitzliddat"},"content":"        this.payer \u003d payer;","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"ivanaitzliddat"},"content":"        this.involvedList \u003d involvedList;","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"ivanaitzliddat"},"content":"        this.costList \u003d costList;","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"ivanaitzliddat"},"content":"        this.gst \u003d gst;","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"ivanaitzliddat"},"content":"        this.serviceCharge \u003d serviceCharge;","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"ivanaitzliddat"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"ivanaitzliddat"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"ivanaitzliddat"},"content":"     * Prepares user arguments for activity create command.","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"ivanaitzliddat"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param commandArgs The user\u0027s arguments.","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"ivanaitzliddat"},"content":"     * @return An ActivityCreateCommand object if necessary parameters were found in user arguments,","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"ivanaitzliddat"},"content":"     *         an InvalidCommand object otherwise.","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"ivanaitzliddat"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"ivanaitzliddat"},"content":"    public static Command prepare(String commandArgs) {","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"ivanaitzliddat"},"content":"        boolean isMissingCost \u003d false;","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"ivanaitzliddat"},"content":"        boolean isMissingCostList \u003d false;","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"ivanaitzliddat"},"content":"        double totalCost \u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"ivanaitzliddat"},"content":"        double[] costList \u003d null;","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"ivanaitzliddat"},"content":"        try {","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"ivanaitzliddat"},"content":"            totalCost \u003d Parser.parseTotalCost(commandArgs);","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"ivanaitzliddat"},"content":"        } catch (InvalidFormatException e) {","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"ivanaitzliddat"},"content":"            isMissingCost \u003d true;","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"ivanaitzliddat"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"ivanaitzliddat"},"content":"        try {","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"ivanaitzliddat"},"content":"            costList \u003d Parser.parseCostList(commandArgs);","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"ivanaitzliddat"},"content":"        } catch (InvalidFormatException e) {","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"ivanaitzliddat"},"content":"            isMissingCostList \u003d true;","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"ivanaitzliddat"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"ivanaitzliddat"},"content":"        boolean hasMissingCostAndMissingCostList \u003d isMissingCostList \u0026\u0026 isMissingCost;","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"ivanaitzliddat"},"content":"        if (hasMissingCostAndMissingCostList) {","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"ivanaitzliddat"},"content":"            return new InvalidCommand(Message.ERROR_ACTIVITYCREATE_MISSING_COST_AND_COST_LIST","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"ivanaitzliddat"},"content":"                    + COMMAND_FORMAT);","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"ivanaitzliddat"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"ivanaitzliddat"},"content":"        boolean hasBothCostAndCostList \u003d !isMissingCostList \u0026\u0026 !isMissingCost;","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"ivanaitzliddat"},"content":"        if (hasBothCostAndCostList) {","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"ivanaitzliddat"},"content":"            return new InvalidCommand(Message.ERROR_ACTIVITYCREATE_HAS_BOTH_COST_AND_COST_LIST","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"ivanaitzliddat"},"content":"                    + COMMAND_FORMAT);","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"ivanaitzliddat"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"ivanaitzliddat"},"content":"        try {","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"ivanaitzliddat"},"content":"            int sessionId \u003d Parser.parseSessionId(commandArgs);","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"ivanaitzliddat"},"content":"            String activityName \u003d Parser.parseName(commandArgs);","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"ivanaitzliddat"},"content":"            String payer \u003d Parser.parsePayer(commandArgs);","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"ivanaitzliddat"},"content":"            String[] involvedList \u003d Parser.parseInvolved(commandArgs);","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"ivanaitzliddat"},"content":"            int gst \u003d Parser.parseGst(commandArgs);","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"ivanaitzliddat"},"content":"            int serviceCharge \u003d Parser.parseServiceCharge(commandArgs);","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"warrencxw"},"content":"            boolean hasDifferentLength \u003d involvedList.length !\u003d costList.length;","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"warrencxw"},"content":"            ;","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"ivanaitzliddat"},"content":"            if (hasDifferentLength) {","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"ivanaitzliddat"},"content":"                return new InvalidCommand(Message.ERROR_ACTIVITYCREATE_INVOLVED_AND_COST_DIFFERENT_LENGTH","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"ivanaitzliddat"},"content":"                        + COMMAND_FORMAT);","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"ivanaitzliddat"},"content":"            }","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"ivanaitzliddat"},"content":"            return new ActivityCreateCommand(sessionId, activityName, totalCost, payer, involvedList, costList, gst,","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"ivanaitzliddat"},"content":"                    serviceCharge);","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"ivanaitzliddat"},"content":"        } catch (InvalidFormatException e) {","lastModifiedDate":"2022-03-09"},{"lineNumber":119,"author":{"gitId":"ivanaitzliddat"},"content":"            return new InvalidCommand(e.getMessage() + COMMAND_FORMAT);","lastModifiedDate":"2022-03-09"},{"lineNumber":120,"author":{"gitId":"ivanaitzliddat"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":121,"author":{"gitId":"ivanaitzliddat"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"ivanaitzliddat"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"ivanaitzliddat"},"content":"     * Runs the command to create an activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":125,"author":{"gitId":"ivanaitzliddat"},"content":"     * Gets relevant parameters to create an Activity object.","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"ivanaitzliddat"},"content":"     * If no errors getting parameters, an Activity object is created and added to the session.","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"ivanaitzliddat"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param manager A Manager object that manages the TextUI and Profile object.","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"ivanaitzliddat"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"ivanaitzliddat"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":131,"author":{"gitId":"froststein"},"content":"    public void run(Manager manager) {","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"ivanaitzliddat"},"content":"        try {","lastModifiedDate":"2022-03-08"},{"lineNumber":133,"author":{"gitId":"ivanaitzliddat"},"content":"            int activityId \u003d manager.getProfile().getNewActivityId();","lastModifiedDate":"2022-03-08"},{"lineNumber":134,"author":{"gitId":"ivanaitzliddat"},"content":"            updateCostAndCostList();","lastModifiedDate":"2022-03-08"},{"lineNumber":135,"author":{"gitId":"ivanaitzliddat"},"content":"            Session session \u003d manager.getProfile().getSession(sessionId);","lastModifiedDate":"2022-03-08"},{"lineNumber":136,"author":{"gitId":"ivanaitzliddat"},"content":"            Person personPaid \u003d session.getPersonByName(payer);","lastModifiedDate":"2022-03-08"},{"lineNumber":137,"author":{"gitId":"ivanaitzliddat"},"content":"            ArrayList\u003cPerson\u003e involvedPersonList \u003d session.getPersonListByName(involvedList);","lastModifiedDate":"2022-03-08"},{"lineNumber":138,"author":{"gitId":"ivanaitzliddat"},"content":"            addAllActivityCost(involvedPersonList, personPaid, totalCost, costList, activityId);","lastModifiedDate":"2022-03-09"},{"lineNumber":139,"author":{"gitId":"ivanaitzliddat"},"content":"            Activity activity \u003d new Activity(activityId, activityName, totalCost, personPaid, involvedPersonList);","lastModifiedDate":"2022-03-09"},{"lineNumber":140,"author":{"gitId":"ivanaitzliddat"},"content":"            session.addActivity(activity);","lastModifiedDate":"2022-03-08"},{"lineNumber":141,"author":{"gitId":"ivanaitzliddat"},"content":"        } catch (InvalidDataException e) {","lastModifiedDate":"2022-03-08"},{"lineNumber":142,"author":{"gitId":"ivanaitzliddat"},"content":"            manager.getUi().printlnMessage(e.getMessage());","lastModifiedDate":"2022-03-08"},{"lineNumber":143,"author":{"gitId":"ivanaitzliddat"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":144,"author":{"gitId":"ivanaitzliddat"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":145,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":146,"author":{"gitId":"ivanaitzliddat"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":147,"author":{"gitId":"ivanaitzliddat"},"content":"     * Adds all relevant activity costs to each involved person\u0027s list of activity costs.","lastModifiedDate":"2022-03-09"},{"lineNumber":148,"author":{"gitId":"ivanaitzliddat"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":149,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param involvedPersonList The list of persons involved in the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":150,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param personPaid         The person who paid for the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":151,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param totalCost          The total cost of the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":152,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param costList           The costs owed by each person involved in the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":153,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param activityId         The id of the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":154,"author":{"gitId":"ivanaitzliddat"},"content":"     * @throws InvalidDataException If the activityCost cannot be created from the given parameters.","lastModifiedDate":"2022-03-09"},{"lineNumber":155,"author":{"gitId":"ivanaitzliddat"},"content":"     * @see InvalidDataException","lastModifiedDate":"2022-03-09"},{"lineNumber":156,"author":{"gitId":"ivanaitzliddat"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":157,"author":{"gitId":"ivanaitzliddat"},"content":"    private static void addAllActivityCost(ArrayList\u003cPerson\u003e involvedPersonList, Person personPaid, double totalCost,","lastModifiedDate":"2022-03-09"},{"lineNumber":158,"author":{"gitId":"ivanaitzliddat"},"content":"                                           double[] costList, int activityId) throws InvalidDataException {","lastModifiedDate":"2022-03-08"},{"lineNumber":159,"author":{"gitId":"ivanaitzliddat"},"content":"        for (int i \u003d 0; i \u003c involvedPersonList.size(); i++) {","lastModifiedDate":"2022-03-08"},{"lineNumber":160,"author":{"gitId":"ivanaitzliddat"},"content":"            Person person \u003d involvedPersonList.get(i);","lastModifiedDate":"2022-03-08"},{"lineNumber":161,"author":{"gitId":"ivanaitzliddat"},"content":"            addCostOwedAndCostPaid(personPaid, totalCost, costList, activityId, i, person);","lastModifiedDate":"2022-03-09"},{"lineNumber":162,"author":{"gitId":"ivanaitzliddat"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":163,"author":{"gitId":"ivanaitzliddat"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":164,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":165,"author":{"gitId":"ivanaitzliddat"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":166,"author":{"gitId":"ivanaitzliddat"},"content":"     * Adds cost owed and cost paid to each individual\u0027s list of activity costs.","lastModifiedDate":"2022-03-09"},{"lineNumber":167,"author":{"gitId":"ivanaitzliddat"},"content":"     * Checks if the current person is the person who paid for the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":168,"author":{"gitId":"ivanaitzliddat"},"content":"     * If it is, the cost paid is set to the total cost of the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":169,"author":{"gitId":"ivanaitzliddat"},"content":"     * Else, the cost paid is set to 0.","lastModifiedDate":"2022-03-09"},{"lineNumber":170,"author":{"gitId":"ivanaitzliddat"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":171,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param personPaid      The person who paid for the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":172,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param totalCost       The total cost of the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":173,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param costList        The costs owed by each person involved in the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":174,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param activityId      The id of the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":175,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param indexOfCostOwed The index of the cost owed in the list of costs.","lastModifiedDate":"2022-03-09"},{"lineNumber":176,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param person          The current person whose costs are added to the list of activity costs.","lastModifiedDate":"2022-03-09"},{"lineNumber":177,"author":{"gitId":"ivanaitzliddat"},"content":"     * @throws InvalidDataException If the activityCost cannot be created from the given parameters.","lastModifiedDate":"2022-03-09"},{"lineNumber":178,"author":{"gitId":"ivanaitzliddat"},"content":"     * @see InvalidDataException","lastModifiedDate":"2022-03-09"},{"lineNumber":179,"author":{"gitId":"ivanaitzliddat"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":180,"author":{"gitId":"ivanaitzliddat"},"content":"    private static void addCostOwedAndCostPaid(Person personPaid, double totalCost, double[] costList, int activityId,","lastModifiedDate":"2022-03-09"},{"lineNumber":181,"author":{"gitId":"ivanaitzliddat"},"content":"                                               int indexOfCostOwed, Person person) throws InvalidDataException {","lastModifiedDate":"2022-03-09"},{"lineNumber":182,"author":{"gitId":"ivanaitzliddat"},"content":"        if (person \u003d\u003d personPaid) {","lastModifiedDate":"2022-03-08"},{"lineNumber":183,"author":{"gitId":"ivanaitzliddat"},"content":"            person.addActivityCost(activityId, totalCost, costList[indexOfCostOwed]);","lastModifiedDate":"2022-03-09"},{"lineNumber":184,"author":{"gitId":"ivanaitzliddat"},"content":"        } else {","lastModifiedDate":"2022-03-08"},{"lineNumber":185,"author":{"gitId":"ivanaitzliddat"},"content":"            person.addActivityCost(activityId, ZERO_COST_PAID, costList[indexOfCostOwed]);","lastModifiedDate":"2022-03-09"},{"lineNumber":186,"author":{"gitId":"ivanaitzliddat"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":187,"author":{"gitId":"ivanaitzliddat"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":188,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":189,"author":{"gitId":"ivanaitzliddat"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":190,"author":{"gitId":"ivanaitzliddat"},"content":"     * Updates cost and list of costs by adding the extra charges and","lastModifiedDate":"2022-03-09"},{"lineNumber":191,"author":{"gitId":"ivanaitzliddat"},"content":"     * checks if cost list or cost was provided by the user.","lastModifiedDate":"2022-03-09"},{"lineNumber":192,"author":{"gitId":"ivanaitzliddat"},"content":"     * If cost was not provided by the user, the list of costs is summed up to get the total cost of the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":193,"author":{"gitId":"ivanaitzliddat"},"content":"     * Else, the total cost is distributed evenly.","lastModifiedDate":"2022-03-09"},{"lineNumber":194,"author":{"gitId":"ivanaitzliddat"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":195,"author":{"gitId":"ivanaitzliddat"},"content":"    private void updateCostAndCostList() {","lastModifiedDate":"2022-03-08"},{"lineNumber":196,"author":{"gitId":"ivanaitzliddat"},"content":"        boolean isZeroCost \u003d totalCost \u003d\u003d NO_COST;","lastModifiedDate":"2022-03-09"},{"lineNumber":197,"author":{"gitId":"ivanaitzliddat"},"content":"        if (isZeroCost) {","lastModifiedDate":"2022-03-08"},{"lineNumber":198,"author":{"gitId":"ivanaitzliddat"},"content":"            updateCostListWithExtraCharges(costList, gst, serviceCharge);","lastModifiedDate":"2022-03-08"},{"lineNumber":199,"author":{"gitId":"ivanaitzliddat"},"content":"            totalCost \u003d calculateTotalCost(costList);","lastModifiedDate":"2022-03-09"},{"lineNumber":200,"author":{"gitId":"ivanaitzliddat"},"content":"        } else {","lastModifiedDate":"2022-03-08"},{"lineNumber":201,"author":{"gitId":"ivanaitzliddat"},"content":"            totalCost \u003d updateCostWithExtraCharges(totalCost, gst, serviceCharge);","lastModifiedDate":"2022-03-09"},{"lineNumber":202,"author":{"gitId":"ivanaitzliddat"},"content":"            int numberOfPeopleInvolved \u003d involvedList.length;","lastModifiedDate":"2022-03-08"},{"lineNumber":203,"author":{"gitId":"ivanaitzliddat"},"content":"            costList \u003d distributeCostEvenly(totalCost, numberOfPeopleInvolved);","lastModifiedDate":"2022-03-09"},{"lineNumber":204,"author":{"gitId":"ivanaitzliddat"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":205,"author":{"gitId":"ivanaitzliddat"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":206,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":207,"author":{"gitId":"ivanaitzliddat"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":208,"author":{"gitId":"ivanaitzliddat"},"content":"     * Updates cost list by including the extra charges.","lastModifiedDate":"2022-03-09"},{"lineNumber":209,"author":{"gitId":"ivanaitzliddat"},"content":"     * Extra charges may include gst and service charge.","lastModifiedDate":"2022-03-09"},{"lineNumber":210,"author":{"gitId":"ivanaitzliddat"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":211,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param costList      The costs owed by each person involved in the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":212,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param gst           The gst to be added to the costs for the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":213,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param serviceCharge The service charge to be added to the costs for the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":214,"author":{"gitId":"ivanaitzliddat"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":215,"author":{"gitId":"ivanaitzliddat"},"content":"    private static void updateCostListWithExtraCharges(double[] costList, int gst, int serviceCharge) {","lastModifiedDate":"2022-03-08"},{"lineNumber":216,"author":{"gitId":"ivanaitzliddat"},"content":"        double extraCharges \u003d getExtraCharges(gst, serviceCharge);","lastModifiedDate":"2022-03-08"},{"lineNumber":217,"author":{"gitId":"ivanaitzliddat"},"content":"        for (int i \u003d 0; i \u003c costList.length; i++) {","lastModifiedDate":"2022-03-08"},{"lineNumber":218,"author":{"gitId":"ivanaitzliddat"},"content":"            costList[i] *\u003d extraCharges;","lastModifiedDate":"2022-03-08"},{"lineNumber":219,"author":{"gitId":"ivanaitzliddat"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":220,"author":{"gitId":"ivanaitzliddat"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":221,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":222,"author":{"gitId":"ivanaitzliddat"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":223,"author":{"gitId":"ivanaitzliddat"},"content":"     * Returns a double representing the total cost of the activity","lastModifiedDate":"2022-03-09"},{"lineNumber":224,"author":{"gitId":"ivanaitzliddat"},"content":"     * by summing up the costs owed by each person involved in the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":225,"author":{"gitId":"ivanaitzliddat"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":226,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param costList The costs owed by each person involved in the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":227,"author":{"gitId":"ivanaitzliddat"},"content":"     * @return A double representing the total cost of the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":228,"author":{"gitId":"ivanaitzliddat"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":229,"author":{"gitId":"ivanaitzliddat"},"content":"    private static double calculateTotalCost(double[] costList) {","lastModifiedDate":"2022-03-09"},{"lineNumber":230,"author":{"gitId":"ivanaitzliddat"},"content":"        double totalCost \u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":231,"author":{"gitId":"ivanaitzliddat"},"content":"        for (int i \u003d 0; i \u003c costList.length; i++) {","lastModifiedDate":"2022-03-08"},{"lineNumber":232,"author":{"gitId":"ivanaitzliddat"},"content":"            totalCost +\u003d costList[i];","lastModifiedDate":"2022-03-09"},{"lineNumber":233,"author":{"gitId":"ivanaitzliddat"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":234,"author":{"gitId":"ivanaitzliddat"},"content":"        return totalCost;","lastModifiedDate":"2022-03-09"},{"lineNumber":235,"author":{"gitId":"ivanaitzliddat"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":236,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":237,"author":{"gitId":"ivanaitzliddat"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":238,"author":{"gitId":"ivanaitzliddat"},"content":"     * Returns a double representing the total cost by including the extra charges.","lastModifiedDate":"2022-03-09"},{"lineNumber":239,"author":{"gitId":"ivanaitzliddat"},"content":"     * Extra charges may include gst and service charge.","lastModifiedDate":"2022-03-09"},{"lineNumber":240,"author":{"gitId":"ivanaitzliddat"},"content":"     * Assumption: gst and service charge are non-negative integers.","lastModifiedDate":"2022-03-09"},{"lineNumber":241,"author":{"gitId":"ivanaitzliddat"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":242,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param totalCost     The total cost of the activity excluding extra charges.","lastModifiedDate":"2022-03-09"},{"lineNumber":243,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param gst           The gst to be included in the total cost of the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":244,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param serviceCharge The service charge to be included in the total cost of the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":245,"author":{"gitId":"ivanaitzliddat"},"content":"     * @return A double representing the total cost of the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":246,"author":{"gitId":"ivanaitzliddat"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":247,"author":{"gitId":"ivanaitzliddat"},"content":"    private static double updateCostWithExtraCharges(double totalCost, int gst, int serviceCharge) {","lastModifiedDate":"2022-03-09"},{"lineNumber":248,"author":{"gitId":"ivanaitzliddat"},"content":"        double extraCharges \u003d getExtraCharges(gst, serviceCharge);","lastModifiedDate":"2022-03-08"},{"lineNumber":249,"author":{"gitId":"ivanaitzliddat"},"content":"        return totalCost * extraCharges;","lastModifiedDate":"2022-03-09"},{"lineNumber":250,"author":{"gitId":"ivanaitzliddat"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":251,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":252,"author":{"gitId":"ivanaitzliddat"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":253,"author":{"gitId":"ivanaitzliddat"},"content":"     * Returns a double representing the extra charges that is to be included in costs of the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":254,"author":{"gitId":"ivanaitzliddat"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":255,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param gst           The gst to be included in the costs of the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":256,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param serviceCharge The service charge to be included in the costs of the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":257,"author":{"gitId":"ivanaitzliddat"},"content":"     * @return A double representing the extra charges.","lastModifiedDate":"2022-03-09"},{"lineNumber":258,"author":{"gitId":"ivanaitzliddat"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":259,"author":{"gitId":"ivanaitzliddat"},"content":"    private static double getExtraCharges(int gst, int serviceCharge) {","lastModifiedDate":"2022-03-08"},{"lineNumber":260,"author":{"gitId":"ivanaitzliddat"},"content":"        double gstMultiplier \u003d 1 + (double) gst / 100;","lastModifiedDate":"2022-03-08"},{"lineNumber":261,"author":{"gitId":"ivanaitzliddat"},"content":"        double serviceChargeMultiplier \u003d 1 + (double) serviceCharge / 100;","lastModifiedDate":"2022-03-08"},{"lineNumber":262,"author":{"gitId":"ivanaitzliddat"},"content":"        return gstMultiplier * serviceChargeMultiplier;","lastModifiedDate":"2022-03-08"},{"lineNumber":263,"author":{"gitId":"ivanaitzliddat"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":264,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":265,"author":{"gitId":"ivanaitzliddat"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":266,"author":{"gitId":"ivanaitzliddat"},"content":"     * Returns an array of doubles of the costs that has been distributed evenly","lastModifiedDate":"2022-03-09"},{"lineNumber":267,"author":{"gitId":"ivanaitzliddat"},"content":"     * among the persons involved in the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":268,"author":{"gitId":"ivanaitzliddat"},"content":"     * Divides the total cost by the number of people involved in the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":269,"author":{"gitId":"ivanaitzliddat"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":270,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param totalCost              The total cost of the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":271,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param numberOfPeopleInvolved The number of people involved in the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":272,"author":{"gitId":"ivanaitzliddat"},"content":"     * @return An array of doubles representing the costs of each person involved in the activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":273,"author":{"gitId":"ivanaitzliddat"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":274,"author":{"gitId":"ivanaitzliddat"},"content":"    private static double[] distributeCostEvenly(double totalCost, int numberOfPeopleInvolved) {","lastModifiedDate":"2022-03-09"},{"lineNumber":275,"author":{"gitId":"ivanaitzliddat"},"content":"        double dividedCost \u003d totalCost / numberOfPeopleInvolved;","lastModifiedDate":"2022-03-09"},{"lineNumber":276,"author":{"gitId":"ivanaitzliddat"},"content":"        double[] costList \u003d new double[numberOfPeopleInvolved];","lastModifiedDate":"2022-03-08"},{"lineNumber":277,"author":{"gitId":"ivanaitzliddat"},"content":"        Arrays.fill(costList, dividedCost);","lastModifiedDate":"2022-03-08"},{"lineNumber":278,"author":{"gitId":"ivanaitzliddat"},"content":"        return costList;","lastModifiedDate":"2022-03-08"},{"lineNumber":279,"author":{"gitId":"ivanaitzliddat"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":280,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":281,"author":{"gitId":"ivanaitzliddat"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"ivanaitzliddat":269,"warrencxw":9,"froststein":3}},{"path":"src/main/java/seedu/splitlah/command/ActivityDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package seedu.splitlah.command;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.data.Manager;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"ivanaitzliddat"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"warrencxw"},"content":" * Represents a command which deletes an Activity object from a Session object.","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"ivanaitzliddat"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"ivanaitzliddat"},"content":"public class ActivityDeleteCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"ivanaitzliddat"},"content":"    public static final String COMMAND_TEXT \u003d \"activity /delete\";","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"ivanaitzliddat"},"content":"    private static final String COMMAND_FORMAT \u003d \"Syntax: activity /delete /sid \u003cSESSIONID\u003e /aid \u003cACTIVITYID\u003e\";","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"ivanaitzliddat"},"content":"    private int sessionId;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"ivanaitzliddat"},"content":"    private int activityId;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"ivanaitzliddat"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"ivanaitzliddat"},"content":"     * Constructs an ActivityDeleteCommand object.","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"ivanaitzliddat"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param sessionId  The id of the session.","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param activityId The id of the activity.","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"ivanaitzliddat"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"ivanaitzliddat"},"content":"    public ActivityDeleteCommand(int sessionId, int activityId) {","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"ivanaitzliddat"},"content":"        this.sessionId \u003d sessionId;","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"ivanaitzliddat"},"content":"        this.activityId \u003d activityId;","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"ivanaitzliddat"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"ivanaitzliddat"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"ivanaitzliddat"},"content":"    public void run(Manager manager) {","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"ivanaitzliddat"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"ivanaitzliddat"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"ivanaitzliddat":28,"warrencxw":1,"froststein":2}},{"path":"src/main/java/seedu/splitlah/command/ActivityListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package seedu.splitlah.command;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"lelerer"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.data.Manager;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"lelerer"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"lelerer"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"warrencxw"},"content":" * Represents a command which displays the details of each Activity object within a Session object.","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"lelerer"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"lelerer"},"content":"public class ActivityListCommand extends Command {","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"lelerer"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"lelerer"},"content":"    public static final String COMMAND_TEXT \u003d \"activity /list\";","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"lelerer"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"lelerer"},"content":"    private static final String COMMAND_FORMAT \u003d \"Syntax: activity /list /sid \u003cSESSION_ID\u003e\";","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"lelerer"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"lelerer"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"lelerer"},"content":"    private int sessionId;","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"lelerer"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"lelerer"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"lelerer"},"content":"    public ActivityListCommand(int sessionId) {","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"lelerer"},"content":"        this.sessionId \u003d sessionId;","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"lelerer"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"lelerer"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"lelerer"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"lelerer"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"lelerer"},"content":"     * Runs the command.","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"warrencxw"},"content":"     * ","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"froststein"},"content":"     * @param manager A Manager object that manages the TextUI and Profile object.","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"lelerer"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"lelerer"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"froststein"},"content":"    public void run(Manager manager) {","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"lelerer"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"lelerer"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"lelerer"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"lelerer":26,"warrencxw":2,"froststein":4}},{"path":"src/main/java/seedu/splitlah/command/ActivityViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package seedu.splitlah.command;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"lelerer"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.data.Manager;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"lelerer"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"lelerer"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"warrencxw"},"content":" * Represents a command which displays the details of an Activity object specified by user input in a Session object.","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"warrencxw"},"content":" * ","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"warrencxw"},"content":" * @author Tianle","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"lelerer"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"lelerer"},"content":"public class ActivityViewCommand extends Command {","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"lelerer"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"lelerer"},"content":"    public static final String COMMAND_TEXT \u003d \"activity /view\";","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"lelerer"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"lelerer"},"content":"    private static final String COMMAND_FORMAT \u003d \"Syntax: activity /view /sid \u003cSESSIONID\u003e /aid \u003cACTIVITYID\u003e\";","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"lelerer"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"lelerer"},"content":"    private int sessionId;","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"lelerer"},"content":"    private int activityId;","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"lelerer"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"lelerer"},"content":"    public ActivityViewCommand(int sessionId, int activityId) {","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"lelerer"},"content":"        this.sessionId \u003d sessionId;","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"lelerer"},"content":"        this.activityId \u003d activityId;","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"lelerer"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"lelerer"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"lelerer"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"lelerer"},"content":"     * Runs the command.","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"warrencxw"},"content":"     * ","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"froststein"},"content":"     * @param manager A Manager object that manages the TextUI and Profile object.","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"lelerer"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"lelerer"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"froststein"},"content":"    public void run(Manager manager) {","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"lelerer"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"lelerer"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"lelerer"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"lelerer":25,"warrencxw":4,"froststein":4}},{"path":"src/main/java/seedu/splitlah/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package seedu.splitlah.command;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.data.Manager;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"warrencxw"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"warrencxw"},"content":" * Represents a generic command that the user has entered into the application","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"warrencxw"},"content":" * that can be run to produce a change or outcome.","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"warrencxw"},"content":" * ","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"warrencxw"},"content":" * @author Warren","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"warrencxw"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"warrencxw"},"content":"public abstract class Command {","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"warrencxw"},"content":"     * Runs the command with the information parsed from the user input, using the specified","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"warrencxw"},"content":"     * Profile and TextUI objects.","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"froststein"},"content":"     * @param manager A Manager object that manages the TextUI and Profile object.","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"froststein"},"content":"    public abstract void run(Manager manager);","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"froststein"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"froststein"},"content":"     * Checks if command object is an instance of an ExitCommand.","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"froststein"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"froststein"},"content":"     * @param command A command object to be checked.","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"froststein"},"content":"     * @return True if it is an ExitCommand, else false.","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"froststein"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"froststein"},"content":"    public static boolean isExitCommand(Command command) {","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"froststein"},"content":"        return command instanceof ExitCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"warrencxw"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"warrencxw":14,"froststein":14}},{"path":"src/main/java/seedu/splitlah/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package seedu.splitlah.command;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.data.Manager;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"froststein"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"froststein"},"content":" * Represents a command that exits the application.","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"warrencxw"},"content":" * ","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"warrencxw"},"content":" * @author Roy","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"froststein"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"froststein"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"froststein"},"content":"    public static final String COMMAND_TEXT \u003d \"exit\";","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"froststein"},"content":"    private static final String COMMAND_FORMAT \u003d \"Syntax: exit\";","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"froststein"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"froststein"},"content":"     * Prints the farewell message.","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"froststein"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"froststein"},"content":"     * @param manager A manager object that gets the UI object to print output.","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"froststein"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"froststein"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"froststein"},"content":"    public void run(Manager manager) {","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"froststein"},"content":"        manager.getUi().printFarewell();","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"froststein"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"warrencxw":2,"froststein":23}},{"path":"src/main/java/seedu/splitlah/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package seedu.splitlah.command;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.data.Manager;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"warrencxw"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"warrencxw"},"content":" * Represents a command that prints a help menu to inform the user of all available commands.","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"warrencxw"},"content":" * ","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"warrencxw"},"content":" * @author Warren","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"warrencxw"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"warrencxw"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"warrencxw"},"content":"    public static final String COMMAND_TEXT \u003d \"help\";","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"warrencxw"},"content":"    private static final String COMMAND_FORMAT \u003d \"Syntax: help\";","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"warrencxw"},"content":"     * Prints a help message and displays all available commands.","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"warrencxw"},"content":"     * @param manager A Manager object that manages the TextUI and Profile object.","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"warrencxw"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"warrencxw"},"content":"    public void run(Manager manager) {","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"warrencxw"},"content":"        manager.getUi().printHelpMenu();","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"warrencxw"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"warrencxw":23,"froststein":2}},{"path":"src/main/java/seedu/splitlah/command/InvalidCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package seedu.splitlah.command;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.data.Manager;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"matheril"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"warrencxw"},"content":" * Represents a command that takes in an error message and prints \"Invalid command\" followed by the error message.","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"warrencxw"},"content":" * ","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"warrencxw"},"content":" * @author Saurav","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"matheril"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"matheril"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"matheril"},"content":"    private final String errorMessage;","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"matheril"},"content":"    public InvalidCommand(String errorMessage) {","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"matheril"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"matheril"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"froststein"},"content":"    public void run(Manager manager) {","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"froststein"},"content":"        manager.getUi().printlnMessage(\"Invalid command\");","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"froststein"},"content":"        manager.getUi().printlnMessage(errorMessage);","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"matheril"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"warrencxw":3,"froststein":5,"matheril":14}},{"path":"src/main/java/seedu/splitlah/command/SessionCreateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package seedu.splitlah.command;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.data.Manager;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.data.Person;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.data.Session;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.exceptions.InvalidFormatException;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.parser.Parser;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.ui.Message;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"froststein"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"froststein"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"froststein"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"froststein"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"froststein"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"warrencxw"},"content":" * Represents a command that creates a Session object from user input and stores it in the Profile object.","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"froststein"},"content":" *","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"froststein"},"content":" * @author Roy","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"froststein"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"froststein"},"content":"public class SessionCreateCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"froststein"},"content":"    public static final String COMMAND_TEXT \u003d \"session /create\";","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"froststein"},"content":"    private static final String COMMAND_FORMAT \u003d","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"froststein"},"content":"            \"Syntax: session /create /n [SESSION_NAME] /d [SESSION_DATE] /pl [NAME1 NAME2 …]\";","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"froststein"},"content":"    private static final String COMMAND_SUCCESS \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"froststein"},"content":"            \"The session was created successfully with session id of: \";","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"froststein"},"content":"    private String sessionName;","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"froststein"},"content":"    private String[] personNames;","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"froststein"},"content":"    private LocalDate sessionDate;","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"froststein"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"froststein"},"content":"     * Initializes a SessionCreateCommand.","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"froststein"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"froststein"},"content":"     * @param sessionName A String object that represents the session name.","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"froststein"},"content":"     * @param personNames A String object array that represents the involved persons for the session.","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"froststein"},"content":"     * @param date        A LocalDate object that represents the date of the session.","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"froststein"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"froststein"},"content":"    public SessionCreateCommand(String sessionName, String[] personNames, LocalDate date) {","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"froststein"},"content":"        this.sessionName \u003d sessionName;","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"froststein"},"content":"        this.personNames \u003d personNames;","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"froststein"},"content":"        this.sessionDate \u003d date;","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"froststein"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"froststein"},"content":"     * Converts a String object array of names to a list of Person objects.","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"froststein"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"froststein"},"content":"     * @param personArray An array of person names.","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"froststein"},"content":"     * @return An ArrayList of Person objects.","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"froststein"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"froststein"},"content":"    private static ArrayList\u003cPerson\u003e convertToListOfPerson(String[] personArray) {","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"froststein"},"content":"        ArrayList\u003cPerson\u003e personList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"froststein"},"content":"        for (String name : personArray) {","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"froststein"},"content":"            Person newPerson \u003d new Person(name);","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"froststein"},"content":"            personList.add(newPerson);","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"froststein"},"content":"        return personList;","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"froststein"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"froststein"},"content":"     * Checks if String object array of names has duplicated names.","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"froststein"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"froststein"},"content":"     * @return True if it contains duplicates, false otherwise.","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"froststein"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"froststein"},"content":"    private boolean hasNameDuplicates() {","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"froststein"},"content":"        Set\u003cString\u003e nameSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"froststein"},"content":"        for (String name : personNames) {","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"froststein"},"content":"            String nameToBeAdded \u003d name.toLowerCase();","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"froststein"},"content":"            if (!nameSet.add(nameToBeAdded)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"froststein"},"content":"                return true;","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"froststein"},"content":"            }","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"froststein"},"content":"        return false;","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"froststein"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"froststein"},"content":"     * Prepares user arguments for session create command.","lastModifiedDate":"2022-03-07"},{"lineNumber":80,"author":{"gitId":"froststein"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"froststein"},"content":"     * @param commandArgs A String object that represents the user\u0027s arguments.","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"froststein"},"content":"     * @return A SessionCreateCommand object if session name, session date and person list were found in user arguments,","lastModifiedDate":"2022-03-07"},{"lineNumber":83,"author":{"gitId":"froststein"},"content":"     *         an InvalidCommand object otherwise.","lastModifiedDate":"2022-03-07"},{"lineNumber":84,"author":{"gitId":"froststein"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"froststein"},"content":"    public static Command prepare(String commandArgs) {","lastModifiedDate":"2022-03-07"},{"lineNumber":86,"author":{"gitId":"froststein"},"content":"        try {","lastModifiedDate":"2022-03-07"},{"lineNumber":87,"author":{"gitId":"froststein"},"content":"            String parsedSessionName \u003d Parser.parseName(commandArgs);","lastModifiedDate":"2022-03-07"},{"lineNumber":88,"author":{"gitId":"froststein"},"content":"            String[] parsedNames \u003d Parser.parsePersonList(commandArgs);","lastModifiedDate":"2022-03-07"},{"lineNumber":89,"author":{"gitId":"froststein"},"content":"            LocalDate parsedSessionDate \u003d Parser.parseLocalDate(commandArgs);","lastModifiedDate":"2022-03-07"},{"lineNumber":90,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":91,"author":{"gitId":"froststein"},"content":"            return new SessionCreateCommand(parsedSessionName, parsedNames, parsedSessionDate);","lastModifiedDate":"2022-03-07"},{"lineNumber":92,"author":{"gitId":"froststein"},"content":"        } catch (InvalidFormatException formatException) {","lastModifiedDate":"2022-03-07"},{"lineNumber":93,"author":{"gitId":"froststein"},"content":"            String invalidCommandMessage \u003d formatException.getMessage() + \"\\n\" + COMMAND_FORMAT;","lastModifiedDate":"2022-03-07"},{"lineNumber":94,"author":{"gitId":"froststein"},"content":"            return new InvalidCommand(invalidCommandMessage);","lastModifiedDate":"2022-03-07"},{"lineNumber":95,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":96,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"froststein"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"froststein"},"content":"     * Runs the command to create a Session object to be stored in the list of sessions managed by the Profile Object.","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"froststein"},"content":"     * Checks if array of names has duplicates and if session name exists.","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"froststein"},"content":"     * If check fails, no session is created and prints error message.","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"froststein"},"content":"     * Else a session is created and prints success message.","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"froststein"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":104,"author":{"gitId":"froststein"},"content":"     * @param manager A Manager object that manages the TextUI and Profile object.","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"froststein"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":106,"author":{"gitId":"froststein"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":107,"author":{"gitId":"froststein"},"content":"    public void run(Manager manager) {","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"froststein"},"content":"        if (hasNameDuplicates()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"froststein"},"content":"            manager.getUi().printlnMessage(Message.ERROR_PROFILE_DUPLICATE_NAME);","lastModifiedDate":"2022-03-08"},{"lineNumber":110,"author":{"gitId":"froststein"},"content":"            return;","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"froststein"},"content":"        // TODO: Check if string[] names are actual names.","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"froststein"},"content":"        ArrayList\u003cPerson\u003e personList \u003d convertToListOfPerson(personNames);","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"froststein"},"content":"        boolean isSessionExists \u003d manager.getProfile().hasSessionName(sessionName);","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"froststein"},"content":"        if (isSessionExists) {","lastModifiedDate":"2022-03-08"},{"lineNumber":117,"author":{"gitId":"froststein"},"content":"            manager.getUi().printlnMessage(Message.ERROR_PROFILE_DUPLICATE_SESSION);","lastModifiedDate":"2022-03-08"},{"lineNumber":118,"author":{"gitId":"froststein"},"content":"            return;","lastModifiedDate":"2022-03-08"},{"lineNumber":119,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":120,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":121,"author":{"gitId":"froststein"},"content":"        int newSessionId \u003d manager.getProfile().getNewSessionId();","lastModifiedDate":"2022-03-08"},{"lineNumber":122,"author":{"gitId":"froststein"},"content":"        Session newSession \u003d new Session(sessionName, newSessionId, sessionDate, personList);","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"froststein"},"content":"        manager.getProfile().addSession(newSession);","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"froststein"},"content":"        manager.getUi().printlnMessage(COMMAND_SUCCESS + newSessionId);","lastModifiedDate":"2022-03-08"},{"lineNumber":125,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":126,"author":{"gitId":"froststein"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"warrencxw":1,"froststein":125}},{"path":"src/main/java/seedu/splitlah/command/SessionDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package seedu.splitlah.command;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.data.Manager;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.exceptions.InvalidDataException;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.exceptions.InvalidFormatException;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.parser.Parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.ui.Message;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"froststein"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"warrencxw"},"content":" * Represents a command that deletes a Session object indicated by the user input from a Profile object.","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"froststein"},"content":" *","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"froststein"},"content":" * @author Roy","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"froststein"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"froststein"},"content":"public class SessionDeleteCommand extends Command {","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"froststein"},"content":"    public static final String COMMAND_TEXT \u003d \"session /delete\";","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"froststein"},"content":"    private static final String COMMAND_FORMAT \u003d \"Syntax: session /delete /sid [SESSION_ID]\";","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"froststein"},"content":"    private static final String COMMAND_CONFIRMATION \u003d \"Are you sure you want to delete session id: \";","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"froststein"},"content":"    private static final String COMMAND_ABORT \u003d \"Okay! Session was not deleted.\";","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"froststein"},"content":"    private static final String COMMAND_SUCCESS \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"froststein"},"content":"            \"The session was deleted successfully.\";","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"froststein"},"content":"    private int sessionId;","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"froststein"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"froststein"},"content":"     * Initializes a SessionDeleteCommand.","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"froststein"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"froststein"},"content":"     * @param sessionId An integer that uniquely identifies a session.","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"froststein"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"froststein"},"content":"    public SessionDeleteCommand(int sessionId) {","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"froststein"},"content":"        this.sessionId \u003d sessionId;","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"froststein"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"froststein"},"content":"     * Prepares user arguments for session delete command.","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"froststein"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"froststein"},"content":"     * @param commandArgs A String object that represents the user\u0027s arguments.","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"froststein"},"content":"     * @return A SessionDeleteCommand object if session id was found in user arguments,","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"froststein"},"content":"     *         an InvalidCommand object otherwise.","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"froststein"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"froststein"},"content":"    public static Command prepare(String commandArgs) {","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"froststein"},"content":"        try {","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"froststein"},"content":"            int sessionId \u003d Parser.parseSessionId(commandArgs);","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"froststein"},"content":"            return new SessionDeleteCommand(sessionId);","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"froststein"},"content":"        } catch (InvalidFormatException formatException) {","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"froststein"},"content":"            String invalidCommandMessage \u003d formatException.getMessage() + \"\\n\" + COMMAND_FORMAT;","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"froststein"},"content":"            return new InvalidCommand(invalidCommandMessage);","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"froststein"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"froststein"},"content":"     * Runs the command to delete a Session object to from the list of sessions managed by the Profile Object.","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"froststein"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"froststein"},"content":"     * @param manager A Manager object that manages the TextUI and Profile object.","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"froststein"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"froststein"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"froststein"},"content":"    public void run(Manager manager) {","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"froststein"},"content":"        String confirmationPrompt \u003d COMMAND_CONFIRMATION + sessionId + \"?\";","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"froststein"},"content":"        boolean isSessionExists \u003d manager.getProfile().hasSessionId(sessionId);","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"froststein"},"content":"        if (!isSessionExists) {","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"froststein"},"content":"            manager.getUi().printlnMessage(Message.ERROR_PROFILE_SESSION_NOT_IN_LIST);","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"froststein"},"content":"            return;","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"froststein"},"content":"        try {","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"froststein"},"content":"            boolean isConfirmed \u003d manager.getUi().getUserConfirmation(confirmationPrompt);","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"froststein"},"content":"            if (isConfirmed) {","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"froststein"},"content":"                manager.getProfile().removeSession(sessionId);","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"froststein"},"content":"                manager.getUi().printlnMessage(COMMAND_SUCCESS);","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"froststein"},"content":"            } else {","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"froststein"},"content":"                manager.getUi().printlnMessage(COMMAND_ABORT);","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"froststein"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"froststein"},"content":"        } catch (InvalidDataException dataException) {","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"froststein"},"content":"            manager.getUi().printlnMessage(dataException.getMessage());","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"froststein"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"warrencxw":1,"froststein":79}},{"path":"src/main/java/seedu/splitlah/command/SessionListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package seedu.splitlah.command;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.data.Manager;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"froststein"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"warrencxw"},"content":" * Represents a command that displays the details of each Session object within a Profile object.","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"froststein"},"content":" *","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"froststein"},"content":" * @author Roy","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"froststein"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"froststein"},"content":"public class SessionListCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"froststein"},"content":"    public static final String COMMAND_TEXT \u003d \"session /list\";","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"froststein"},"content":"    private static final String COMMAND_FORMAT \u003d \"Syntax: session /list\";","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"froststein"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"froststein"},"content":"     * Prints the list of sessions previously created by the user.","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"froststein"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"froststein"},"content":"     * @param manager A manager object that gets the TextUI and Profile object to print the list of sessions.","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"froststein"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"froststein"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"froststein"},"content":"    public void run(Manager manager) {","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"froststein"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"warrencxw":1,"froststein":24}},{"path":"src/main/java/seedu/splitlah/command/SessionSummaryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package seedu.splitlah.command;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.data.Manager;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"warrencxw"},"content":"import seedu.splitlah.data.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"warrencxw"},"content":"import seedu.splitlah.data.Profile;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"warrencxw"},"content":"import seedu.splitlah.data.Session;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"warrencxw"},"content":"import seedu.splitlah.exceptions.InvalidDataException;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"warrencxw"},"content":"import seedu.splitlah.exceptions.InvalidFormatException;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"warrencxw"},"content":"import seedu.splitlah.parser.Parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"warrencxw"},"content":"import seedu.splitlah.ui.TextUI;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"warrencxw"},"content":"import seedu.splitlah.util.PersonCostPair;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"warrencxw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"warrencxw"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"warrencxw"},"content":" * Represents a command object that produces a summary of expenditure for a specified Session object.","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"warrencxw"},"content":" *","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"warrencxw"},"content":" * @author Warren","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"warrencxw"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"warrencxw"},"content":"public class SessionSummaryCommand extends Command {","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"warrencxw"},"content":"    public static final String COMMAND_TEXT \u003d \"session /summary\";","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"warrencxw"},"content":"    public static final String COMMAND_FORMAT \u003d \"Syntax: session /summary /sid \u003cSESSIONID\u003e\";","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"warrencxw"},"content":"    private int sessionId;","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"warrencxw"},"content":"    // MISC CONSTANTS","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"warrencxw"},"content":"    public static final String SUMMARY_HEADER \u003d \"Transactions --\";","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"warrencxw"},"content":"    public static final String TEMP_ERROR_INVALID_PERSONCOSTPAIR_LIST \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"warrencxw"},"content":"            \"Program has faced some issue : processAllTransactions, personCostPairList is invalid\";","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"warrencxw"},"content":"    public static final String TEMP_ERROR_PROCESSALLTRANSACTION_METHOD_LOGIC_INVALID \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"warrencxw"},"content":"            \"Program has faced some issue : processAllTransactions, payer, receiver logic is invalid\";","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"warrencxw"},"content":"    private static final int ZERO_INDEXING_OFFSET \u003d 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"warrencxw"},"content":"    private static final double SMALL_DIFFERENCE_LIMIT \u003d 0.0001;","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"warrencxw"},"content":"     * Default constructor, sets sessionId as specified by the provided value.","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"warrencxw"},"content":"     * @param sessionId The session identifier number that uniquely identifies a session.","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"warrencxw"},"content":"    public SessionSummaryCommand(int sessionId) {","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"warrencxw"},"content":"        this.sessionId \u003d sessionId;","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"warrencxw"},"content":"    public static Command prepare(String commandArgs) {","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"warrencxw"},"content":"        try {","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"warrencxw"},"content":"            int sessionId \u003d Parser.parseSessionId(commandArgs);","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"warrencxw"},"content":"            return new SessionSummaryCommand(sessionId);","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"warrencxw"},"content":"        } catch (InvalidFormatException exception) {","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"warrencxw"},"content":"            String invalidCommandMessage \u003d exception.getMessage() + \"\\n\" + COMMAND_FORMAT;","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"warrencxw"},"content":"            return new InvalidCommand(invalidCommandMessage);","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"warrencxw"},"content":"    private static boolean isDifferenceSmall(double cost1, double cost2) {","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"warrencxw"},"content":"        return Math.abs(cost1 - cost2) \u003c\u003d SMALL_DIFFERENCE_LIMIT;","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"warrencxw"},"content":"    private static boolean isValueSmall(double cost) {","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"warrencxw"},"content":"        return Math.abs(cost) \u003c\u003d SMALL_DIFFERENCE_LIMIT;","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"warrencxw"},"content":"    private static ArrayList\u003cPersonCostPair\u003e getPersonCostPairList(ArrayList\u003cPerson\u003e personList) {","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"warrencxw"},"content":"        ArrayList\u003cPersonCostPair\u003e personCostPairList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"warrencxw"},"content":"        for (Person person : personList) {","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"warrencxw"},"content":"            PersonCostPair newPair \u003d new PersonCostPair(person);","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"warrencxw"},"content":"            if (!isValueSmall(newPair.getCost())) {","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"warrencxw"},"content":"                personCostPairList.add(newPair);","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"warrencxw"},"content":"            }","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"warrencxw"},"content":"        return personCostPairList;","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"warrencxw"},"content":"    private static boolean isPersonCostPairListValid(ArrayList\u003cPersonCostPair\u003e personCostPairList) {","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"warrencxw"},"content":"        double total \u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"warrencxw"},"content":"        for (PersonCostPair personCostPair : personCostPairList) {","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"warrencxw"},"content":"            total +\u003d personCostPair.getCost();","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"warrencxw"},"content":"        return isValueSmall(total);","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"warrencxw"},"content":"    private String processTransaction(PersonCostPair payer, PersonCostPair receiver) {","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"warrencxw"},"content":"        double payerCost \u003d Math.abs(payer.getCost());","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"warrencxw"},"content":"        double receiverAmount \u003d Math.abs(receiver.getCost());","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"warrencxw"},"content":"        ","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"warrencxw"},"content":"        // Equal costs","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"warrencxw"},"content":"        if (isDifferenceSmall(payerCost, receiverAmount)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"warrencxw"},"content":"            payer.setProcessed(true);","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"warrencxw"},"content":"            receiver.setProcessed(true);","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"warrencxw"},"content":"            return payer.getPerson().getName() + \" has to pay \" + receiver.getPerson().getName()","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"warrencxw"},"content":"                    + \" $\" + String.format(\"%.2f\", payerCost);","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"warrencxw"},"content":"        ","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"warrencxw"},"content":"        // Payer has less debt than receiver has to collect","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"warrencxw"},"content":"        if (payerCost \u003c receiverAmount) {","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"warrencxw"},"content":"            payer.setProcessed(true);","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"warrencxw"},"content":"            receiver.setCost(receiverAmount - payerCost);","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"warrencxw"},"content":"            return payer.getPerson().getName() + \" has to pay \" + receiver.getPerson().getName()","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"warrencxw"},"content":"                    + \" $\" + String.format(\"%.2f\", payerCost);","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"warrencxw"},"content":"        ","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"warrencxw"},"content":"        // Payer has more debt than receiver has to collect","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"warrencxw"},"content":"        receiver.setProcessed(true);","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"warrencxw"},"content":"        payer.setCost(receiverAmount - payerCost);","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"warrencxw"},"content":"        return payer.getPerson().getName() + \" has to pay \" + receiver.getPerson().getName()","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"warrencxw"},"content":"                + \" $\" + String.format(\"%.2f\", receiverAmount);","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"warrencxw"},"content":"    private String processAllTransactions(ArrayList\u003cPersonCostPair\u003e personCostPairList) {","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"warrencxw"},"content":"        StringBuilder sb \u003d new StringBuilder(SUMMARY_HEADER);","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"warrencxw"},"content":"        personCostPairList.sort(PersonCostPair::compareTo);","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"warrencxw"},"content":"        int payerIndex \u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"warrencxw"},"content":"        int receiverIndex \u003d personCostPairList.size() - ZERO_INDEXING_OFFSET;","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"warrencxw"},"content":"        if (!isPersonCostPairListValid(personCostPairList)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"warrencxw"},"content":"            return TEMP_ERROR_INVALID_PERSONCOSTPAIR_LIST;","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":119,"author":{"gitId":"warrencxw"},"content":"        while (payerIndex \u003c receiverIndex) {","lastModifiedDate":"2022-03-09"},{"lineNumber":120,"author":{"gitId":"warrencxw"},"content":"            PersonCostPair payer \u003d personCostPairList.get(payerIndex);","lastModifiedDate":"2022-03-09"},{"lineNumber":121,"author":{"gitId":"warrencxw"},"content":"            PersonCostPair receiver \u003d personCostPairList.get(payerIndex);","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"warrencxw"},"content":"            if (payer.getCost() \u003e receiver.getCost()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"warrencxw"},"content":"                return TEMP_ERROR_PROCESSALLTRANSACTION_METHOD_LOGIC_INVALID;","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"warrencxw"},"content":"            }","lastModifiedDate":"2022-03-09"},{"lineNumber":125,"author":{"gitId":"warrencxw"},"content":"            String output \u003d processTransaction(payer, receiver);","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"warrencxw"},"content":"            sb.append(\u0027\\n\u0027).append(output);","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"warrencxw"},"content":"            ","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"warrencxw"},"content":"            if (payer.isProcessed()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"warrencxw"},"content":"                payerIndex +\u003d 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"warrencxw"},"content":"            }","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"warrencxw"},"content":"            if (receiver.isProcessed()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":132,"author":{"gitId":"warrencxw"},"content":"                receiverIndex -\u003d 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":133,"author":{"gitId":"warrencxw"},"content":"            }","lastModifiedDate":"2022-03-09"},{"lineNumber":134,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":135,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":136,"author":{"gitId":"warrencxw"},"content":"        return sb.toString();","lastModifiedDate":"2022-03-09"},{"lineNumber":137,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":138,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":139,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":140,"author":{"gitId":"warrencxw"},"content":"     * Runs the command with the session identifier as provided by the user input and prints a","lastModifiedDate":"2022-03-05"},{"lineNumber":141,"author":{"gitId":"warrencxw"},"content":"     * summary of expenditure for the session specified by the session identifier.","lastModifiedDate":"2022-03-05"},{"lineNumber":142,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":143,"author":{"gitId":"froststein"},"content":"     * @param manager A Manager object that manages the TextUI and Profile object.","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":145,"author":{"gitId":"warrencxw"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":146,"author":{"gitId":"froststein"},"content":"    public void run(Manager manager) {","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"warrencxw"},"content":"        Profile profile \u003d manager.getProfile();","lastModifiedDate":"2022-03-09"},{"lineNumber":148,"author":{"gitId":"warrencxw"},"content":"        TextUI ui \u003d manager.getUi();","lastModifiedDate":"2022-03-09"},{"lineNumber":149,"author":{"gitId":"warrencxw"},"content":"        Session session;","lastModifiedDate":"2022-03-09"},{"lineNumber":150,"author":{"gitId":"warrencxw"},"content":"        try {","lastModifiedDate":"2022-03-09"},{"lineNumber":151,"author":{"gitId":"warrencxw"},"content":"            session \u003d profile.getSession(sessionId);","lastModifiedDate":"2022-03-09"},{"lineNumber":152,"author":{"gitId":"warrencxw"},"content":"        } catch (InvalidDataException exception) {","lastModifiedDate":"2022-03-09"},{"lineNumber":153,"author":{"gitId":"warrencxw"},"content":"            ui.printlnMessage(exception.getMessage());","lastModifiedDate":"2022-03-09"},{"lineNumber":154,"author":{"gitId":"warrencxw"},"content":"            return;","lastModifiedDate":"2022-03-09"},{"lineNumber":155,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":156,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":157,"author":{"gitId":"warrencxw"},"content":"        ArrayList\u003cPerson\u003e personList \u003d session.getPersonList();","lastModifiedDate":"2022-03-09"},{"lineNumber":158,"author":{"gitId":"warrencxw"},"content":"        ArrayList\u003cPersonCostPair\u003e personCostPairList \u003d getPersonCostPairList(personList);","lastModifiedDate":"2022-03-09"},{"lineNumber":159,"author":{"gitId":"warrencxw"},"content":"        // check if NET 0","lastModifiedDate":"2022-03-09"},{"lineNumber":160,"author":{"gitId":"warrencxw"},"content":"        String output \u003d processAllTransactions(personCostPairList);","lastModifiedDate":"2022-03-09"},{"lineNumber":161,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":162,"author":{"gitId":"warrencxw"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"warrencxw":158,"froststein":4}},{"path":"src/main/java/seedu/splitlah/data/Activity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package seedu.splitlah.data;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"ivanaitzliddat"},"content":"import seedu.splitlah.exceptions.InvalidDataException;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"ivanaitzliddat"},"content":"import seedu.splitlah.ui.Message;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"ivanaitzliddat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"ivanaitzliddat"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"ivanaitzliddat"},"content":" * Represents an activity that was done during a group outing session.","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"ivanaitzliddat"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"ivanaitzliddat"},"content":"public class Activity {","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"ivanaitzliddat"},"content":"    private int activityId;","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"ivanaitzliddat"},"content":"    private String activityName;","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"ivanaitzliddat"},"content":"    private double totalCost;","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"ivanaitzliddat"},"content":"    private Person personPaid;","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"ivanaitzliddat"},"content":"    private ArrayList\u003cPerson\u003e involvedPersonList;","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"ivanaitzliddat"},"content":"    private static final String SUMMARY_STRING_SEPARATOR \u003d \" | \";","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"ivanaitzliddat"},"content":"    private static final int ZERO_INDEXING_OFFSET \u003d 1;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"ivanaitzliddat"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"ivanaitzliddat"},"content":"     * Constructs an Activity object that stores the relevant information required for an Activity.","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"ivanaitzliddat"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param activityId         An integer that uniquely identifies an activity.","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param activityName       A String object that represents the activity\u0027s name.","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param totalCost          A double that represents the total cost spent in the activity.","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param personPaid         A Person object representing the person who paid for the activity.","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param involvedPersonList An ArrayList object containing Person objects","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"ivanaitzliddat"},"content":"     *                           each representing a person involved in the activity.","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"ivanaitzliddat"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"ivanaitzliddat"},"content":"    public Activity(int activityId, String activityName, double totalCost, Person personPaid,","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"ivanaitzliddat"},"content":"                    ArrayList\u003cPerson\u003e involvedPersonList) {","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"ivanaitzliddat"},"content":"        this.activityId \u003d activityId;","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"ivanaitzliddat"},"content":"        this.activityName \u003d activityName;","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"ivanaitzliddat"},"content":"        this.totalCost \u003d totalCost;","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"ivanaitzliddat"},"content":"        this.personPaid \u003d personPaid;","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"ivanaitzliddat"},"content":"        this.involvedPersonList \u003d involvedPersonList;","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"ivanaitzliddat"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"ivanaitzliddat"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"ivanaitzliddat"},"content":"     * Returns an integer representing the activity\u0027s unique identifier.","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"ivanaitzliddat"},"content":"     * Assumption: The identifier number is unique across all activity identifiers in the Profile object.","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"ivanaitzliddat"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"ivanaitzliddat"},"content":"     * @return An integer representing the activity\u0027s identifier.","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"ivanaitzliddat"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"ivanaitzliddat"},"content":"    public int getActivityId() {","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"ivanaitzliddat"},"content":"        return activityId;","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"ivanaitzliddat"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"ivanaitzliddat"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"ivanaitzliddat"},"content":"     * Returns a String object representing the activity\u0027s name.","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"ivanaitzliddat"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":54,"author":{"gitId":"ivanaitzliddat"},"content":"     * @return A String object containing the name of the activity.","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"ivanaitzliddat"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"ivanaitzliddat"},"content":"    public String getActivityName() {","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"ivanaitzliddat"},"content":"        return activityName;","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"ivanaitzliddat"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"ivanaitzliddat"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"ivanaitzliddat"},"content":"     * Returns a double representing the activity\u0027s total cost.","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"ivanaitzliddat"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"ivanaitzliddat"},"content":"     * @return A double representing the total cost spent in the activity.","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"ivanaitzliddat"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":65,"author":{"gitId":"ivanaitzliddat"},"content":"    public double getTotalCost() {","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"ivanaitzliddat"},"content":"        return totalCost;","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"ivanaitzliddat"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"ivanaitzliddat"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":70,"author":{"gitId":"ivanaitzliddat"},"content":"     * Returns a Person object representing the activity\u0027s payer.","lastModifiedDate":"2022-03-07"},{"lineNumber":71,"author":{"gitId":"ivanaitzliddat"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":72,"author":{"gitId":"ivanaitzliddat"},"content":"     * @return A Person object representing the person who paid for the activity.","lastModifiedDate":"2022-03-07"},{"lineNumber":73,"author":{"gitId":"ivanaitzliddat"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":74,"author":{"gitId":"ivanaitzliddat"},"content":"    public Person getPersonPaid() {","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"ivanaitzliddat"},"content":"        return personPaid;","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"ivanaitzliddat"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"ivanaitzliddat"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":79,"author":{"gitId":"ivanaitzliddat"},"content":"     * Returns an ArrayList object of Person objects representing the persons involved in the activity.","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"ivanaitzliddat"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":81,"author":{"gitId":"ivanaitzliddat"},"content":"     * @return An ArrayList object containing Person objects each representing a person involved in the activity.","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"ivanaitzliddat"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":83,"author":{"gitId":"ivanaitzliddat"},"content":"    public ArrayList\u003cPerson\u003e getInvolvedPersonList() {","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"ivanaitzliddat"},"content":"        return involvedPersonList;","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"ivanaitzliddat"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"ivanaitzliddat"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":88,"author":{"gitId":"ivanaitzliddat"},"content":"     * Returns a String object which summarises the activity, including the activity\u0027s unique identifier,","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"ivanaitzliddat"},"content":"     * the name of the activity, the total cost spent in the activity","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"ivanaitzliddat"},"content":"     * and the name of the person who paid for the activity.","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"ivanaitzliddat"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":92,"author":{"gitId":"ivanaitzliddat"},"content":"     * @return A String object which summarises the activity.","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"ivanaitzliddat"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":94,"author":{"gitId":"ivanaitzliddat"},"content":"    public String getActivitySummaryString() {","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"ivanaitzliddat"},"content":"        String costInString \u003d \"$\" + String.format(\"%.2f\", totalCost);","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"ivanaitzliddat"},"content":"        String personName \u003d personPaid.getName();","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"ivanaitzliddat"},"content":"        return activityId + SUMMARY_STRING_SEPARATOR + activityName + SUMMARY_STRING_SEPARATOR + costInString","lastModifiedDate":"2022-03-07"},{"lineNumber":98,"author":{"gitId":"ivanaitzliddat"},"content":"                + SUMMARY_STRING_SEPARATOR + personName;","lastModifiedDate":"2022-03-07"},{"lineNumber":99,"author":{"gitId":"ivanaitzliddat"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"ivanaitzliddat"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":102,"author":{"gitId":"ivanaitzliddat"},"content":"     * Returns a String object of the persons involved in the activity and their respective costs for the activity,","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"ivanaitzliddat"},"content":"     * if the unique identifier of the activity exists and the persons involved indeed participated in the activity.","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"ivanaitzliddat"},"content":"     * Else, the method returns an error message.","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"ivanaitzliddat"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":106,"author":{"gitId":"ivanaitzliddat"},"content":"     * @return A String object representing persons involved and their respective costs.","lastModifiedDate":"2022-03-07"},{"lineNumber":107,"author":{"gitId":"ivanaitzliddat"},"content":"     * @throws InvalidDataException If there is no activity found or if the person in the involvedPersonsList","lastModifiedDate":"2022-03-07"},{"lineNumber":108,"author":{"gitId":"ivanaitzliddat"},"content":"     *                              did not participate in the activity.","lastModifiedDate":"2022-03-07"},{"lineNumber":109,"author":{"gitId":"ivanaitzliddat"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":110,"author":{"gitId":"ivanaitzliddat"},"content":"    private String getInvolvedListString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"ivanaitzliddat"},"content":"        String involvedListString;","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"ivanaitzliddat"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"ivanaitzliddat"},"content":"            involvedListString \u003d convertInvolvedListToString();","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"ivanaitzliddat"},"content":"        } catch (InvalidDataException e) {","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"ivanaitzliddat"},"content":"            return Message.ERROR_ACTIVITY_INACCURATE_INVOLVED_LIST;","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"ivanaitzliddat"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"ivanaitzliddat"},"content":"        return involvedListString;","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"ivanaitzliddat"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"ivanaitzliddat"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"ivanaitzliddat"},"content":"     * Returns a String object representing the name of the persons involved in the activity and the cost that each","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"ivanaitzliddat"},"content":"     * person owed for the activity in a proper format.","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"ivanaitzliddat"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"ivanaitzliddat"},"content":"     * @return a String object that representing the name and costs of each person involved in the activity.","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"ivanaitzliddat"},"content":"     * @throws InvalidDataException If there is no activity found or if the person in the involvedPersonsList","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"ivanaitzliddat"},"content":"     *                              did not participate in the activity.","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"ivanaitzliddat"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"ivanaitzliddat"},"content":"    private String convertInvolvedListToString() throws InvalidDataException {","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"ivanaitzliddat"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"ivanaitzliddat"},"content":"        for (int i \u003d 1; i \u003c\u003d involvedPersonList.size(); i++) {","lastModifiedDate":"2022-03-07"},{"lineNumber":131,"author":{"gitId":"ivanaitzliddat"},"content":"            Person person \u003d involvedPersonList.get(i - ZERO_INDEXING_OFFSET);","lastModifiedDate":"2022-03-07"},{"lineNumber":132,"author":{"gitId":"ivanaitzliddat"},"content":"            String personName \u003d person.getName();","lastModifiedDate":"2022-03-07"},{"lineNumber":133,"author":{"gitId":"ivanaitzliddat"},"content":"            Double costOwed \u003d person.getActivityCostOwed(activityId);","lastModifiedDate":"2022-03-07"},{"lineNumber":134,"author":{"gitId":"ivanaitzliddat"},"content":"            String nextLineToAppend \u003d formString(i, personName, costOwed);","lastModifiedDate":"2022-03-07"},{"lineNumber":135,"author":{"gitId":"ivanaitzliddat"},"content":"            sb.append(nextLineToAppend);","lastModifiedDate":"2022-03-07"},{"lineNumber":136,"author":{"gitId":"ivanaitzliddat"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":137,"author":{"gitId":"ivanaitzliddat"},"content":"        return sb.toString();","lastModifiedDate":"2022-03-07"},{"lineNumber":138,"author":{"gitId":"ivanaitzliddat"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":139,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":140,"author":{"gitId":"ivanaitzliddat"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":141,"author":{"gitId":"ivanaitzliddat"},"content":"     * Returns a String object with the correct format for the persons involved int the activity","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"ivanaitzliddat"},"content":"     * and their respective costs for the activity.","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"ivanaitzliddat"},"content":"     * Format: \u003c[INDEX]. [PERSON_NAME], $[COST_OWED]\u003e, e.g. \u003c1. Bob, $5.00\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":144,"author":{"gitId":"ivanaitzliddat"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":145,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param index      An integer representing index of the Person object involved in the activity.","lastModifiedDate":"2022-03-10"},{"lineNumber":146,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param personName A String object representing the name of the person involved in the activity.","lastModifiedDate":"2022-03-10"},{"lineNumber":147,"author":{"gitId":"ivanaitzliddat"},"content":"     * @param costOwed   A double representing the cost that is owed by the person involved in the activity.","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"ivanaitzliddat"},"content":"     * @return A String object with the correct format representing involved persons and costs.","lastModifiedDate":"2022-03-07"},{"lineNumber":149,"author":{"gitId":"ivanaitzliddat"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":150,"author":{"gitId":"ivanaitzliddat"},"content":"    private String formString(int index, String personName, Double costOwed) {","lastModifiedDate":"2022-03-07"},{"lineNumber":151,"author":{"gitId":"ivanaitzliddat"},"content":"        return \"\u003c\" + index + \". \" + personName + \", $\" + String.format(\"%.2f\", costOwed) + \"\u003e\\n\";","lastModifiedDate":"2022-03-07"},{"lineNumber":152,"author":{"gitId":"ivanaitzliddat"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":153,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":154,"author":{"gitId":"ivanaitzliddat"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"ivanaitzliddat"},"content":"     * Returns a String which provides the details of the activity, including the name of the activity,","lastModifiedDate":"2022-03-10"},{"lineNumber":156,"author":{"gitId":"ivanaitzliddat"},"content":"     * the activity\u0027s unique identifier, the name of the person who paid for the activity,","lastModifiedDate":"2022-03-10"},{"lineNumber":157,"author":{"gitId":"ivanaitzliddat"},"content":"     * the total cost of the activity, the persons involved in the activity","lastModifiedDate":"2022-03-10"},{"lineNumber":158,"author":{"gitId":"ivanaitzliddat"},"content":"     * and their respective costs for the activity.","lastModifiedDate":"2022-03-10"},{"lineNumber":159,"author":{"gitId":"ivanaitzliddat"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"ivanaitzliddat"},"content":"     * @return A String object representing the details of the activity.","lastModifiedDate":"2022-03-10"},{"lineNumber":161,"author":{"gitId":"ivanaitzliddat"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":162,"author":{"gitId":"ivanaitzliddat"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":163,"author":{"gitId":"ivanaitzliddat"},"content":"    public String toString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":164,"author":{"gitId":"ivanaitzliddat"},"content":"        return \"Activity --\"","lastModifiedDate":"2022-03-10"},{"lineNumber":165,"author":{"gitId":"ivanaitzliddat"},"content":"                + \"Name: \" + activityName + \u0027\\n\u0027","lastModifiedDate":"2022-03-10"},{"lineNumber":166,"author":{"gitId":"ivanaitzliddat"},"content":"                + \"Id:   \" + activityId + \u0027\\n\u0027","lastModifiedDate":"2022-03-10"},{"lineNumber":167,"author":{"gitId":"ivanaitzliddat"},"content":"                + \"Payer: \" + personPaid.getName() + \u0027\\n\u0027","lastModifiedDate":"2022-03-10"},{"lineNumber":168,"author":{"gitId":"ivanaitzliddat"},"content":"                + \"Cost: \" + totalCost + \u0027\\n\u0027","lastModifiedDate":"2022-03-10"},{"lineNumber":169,"author":{"gitId":"ivanaitzliddat"},"content":"                + \"Involved: \\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":170,"author":{"gitId":"ivanaitzliddat"},"content":"                + getInvolvedListString();","lastModifiedDate":"2022-03-10"},{"lineNumber":171,"author":{"gitId":"ivanaitzliddat"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":172,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":173,"author":{"gitId":"ivanaitzliddat"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"ivanaitzliddat":172,"froststein":1}},{"path":"src/main/java/seedu/splitlah/data/ActivityCost.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package seedu.splitlah.data;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"matheril"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"matheril"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"warrencxw"},"content":" * Represents the costs borne by a person for an activity.","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"matheril"},"content":" *","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"matheril"},"content":" * @author Saurav","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"matheril"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"matheril"},"content":"public class ActivityCost {","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"matheril"},"content":"    private int activityId;","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"matheril"},"content":"    private double costPaid;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"matheril"},"content":"    private double costOwed;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"matheril"},"content":"     * Constructs an ActivityCost object.","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"matheril"},"content":"     * Assumption: Every field is non-negative.","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"matheril"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"matheril"},"content":"     * @param activityId int representing the activityId.","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"matheril"},"content":"     * @param costPaid double representing cost paid.","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"matheril"},"content":"     * @param costOwed double representing cost owed.","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"matheril"},"content":"    public ActivityCost(int activityId, double costPaid, double costOwed) {","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"matheril"},"content":"        this.activityId \u003d activityId;","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"matheril"},"content":"        this.costPaid \u003d costPaid;","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"matheril"},"content":"        this.costOwed \u003d costOwed;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"matheril"},"content":"     * Constructs an ActivityCost object and sets cost to 0 if only activityId is supplied.","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"matheril"},"content":"     * Assumption: Every field is non-negative.","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"matheril"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"matheril"},"content":"     * @param activityId int representing the activityId.","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"matheril"},"content":"    public ActivityCost(int activityId) {","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"matheril"},"content":"        this(activityId, 0, 0);","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"matheril"},"content":"     * Default constructor, sets activityId to -1 to avoid conflict with other activityIds.","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"matheril"},"content":"    public ActivityCost() {","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"matheril"},"content":"        this.activityId \u003d -1;","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"matheril"},"content":"        this.costPaid \u003d 0;","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"matheril"},"content":"        this.costOwed \u003d 0;","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"matheril"},"content":"    public int getActivityId() {","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"matheril"},"content":"        return activityId;","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"matheril"},"content":"    public double getCostPaid() {","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"matheril"},"content":"        return costPaid;","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"matheril"},"content":"    public double getCostOwed() {","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"matheril"},"content":"        return costOwed;","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"matheril"},"content":"    public void setActivityId(int activityId) {","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"matheril"},"content":"        this.activityId \u003d activityId;","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"matheril"},"content":"    public void setCostPaid(int costPaid) {","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"matheril"},"content":"        this.costPaid \u003d costPaid;","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"matheril"},"content":"    public void setCostOwed(int costOwed) {","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"matheril"},"content":"        this.costOwed \u003d costOwed;","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":72,"author":{"gitId":"matheril"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"warrencxw":2,"froststein":1,"matheril":69}},{"path":"src/main/java/seedu/splitlah/data/Manager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package seedu.splitlah.data;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.ui.TextUI;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"froststein"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"froststein"},"content":" * Represents a manager that manages the UI and Profile objects of the application.","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"froststein"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"froststein"},"content":"public class Manager {","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"froststein"},"content":"    private TextUI ui;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"froststein"},"content":"    private Profile profile;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"froststein"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"froststein"},"content":"     * Constructor to create a Manager object.","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"froststein"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"froststein"},"content":"    public Manager() {","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"froststein"},"content":"        ui \u003d new TextUI();","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"froststein"},"content":"        profile \u003d new Profile();","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"froststein"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"froststein"},"content":"     * Returns a TextUI object for user inputs and outputs.","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"froststein"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"froststein"},"content":"     * @return A TextUI object.","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"froststein"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"froststein"},"content":"    public TextUI getUi() {","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"froststein"},"content":"        return ui;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"froststein"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"froststein"},"content":"     * Returns a Profile object that stores user created sessions.","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"froststein"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"froststein"},"content":"     * @return A Profile object.","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"froststein"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"froststein"},"content":"    public Profile getProfile() {","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"froststein"},"content":"        return profile;","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"froststein"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"warrencxw":1,"froststein":37}},{"path":"src/main/java/seedu/splitlah/data/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package seedu.splitlah.data;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.exceptions.InvalidDataException;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"matheril"},"content":"import seedu.splitlah.ui.Message;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"matheril"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"matheril"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"warrencxw"},"content":" * Represents a person participating in an activity during a group outing session.","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"warrencxw"},"content":" * ","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"matheril"},"content":" * @author Saurav","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"matheril"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"matheril"},"content":"public class Person {","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"matheril"},"content":"    private final String name;","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"matheril"},"content":"    private ArrayList\u003cActivityCost\u003e activityCostList;","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"matheril"},"content":"     * Constructs a Person object.","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"matheril"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"matheril"},"content":"     * @param name Name of the Person.","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"matheril"},"content":"    public Person(String name) {","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"matheril"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"matheril"},"content":"     * Constructs an ActivityCost object and adds it to the list of ActivityCosts.","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"matheril"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"matheril"},"content":"     * @param activityId the activityId.","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"matheril"},"content":"     * @param costPaid the cost of the activity paid by the payer.","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"matheril"},"content":"     * @param costOwed the money owed by an individual.","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"matheril"},"content":"     * @throws InvalidDataException if the activityCost cannot be created from the given parameters.","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"matheril"},"content":"    public void addActivityCost(int activityId, double costPaid, double costOwed) throws InvalidDataException {","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"matheril"},"content":"        ActivityCost activityCost \u003d new ActivityCost(activityId, costPaid, costOwed);","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"matheril"},"content":"        activityCostList.add(activityCost);","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"matheril"},"content":"     * Removes an ActivityCost object from the list of ActivityCosts.","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"matheril"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"matheril"},"content":"     * @param activityId the activityId of the ActivityCost to be removed.","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"matheril"},"content":"     * @throws InvalidDataException if the activityId is not found.","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"matheril"},"content":"    public void removeActivityCost(int activityId) throws InvalidDataException {","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"matheril"},"content":"        if (activityCostList.isEmpty()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"matheril"},"content":"            throw new InvalidDataException(Message.ERROR_PERSON_NO_ACTIVITIES);","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"matheril"},"content":"        boolean removed \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"matheril"},"content":"                activityCostList.removeIf(activityCost -\u003e activityCost.getActivityId() \u003d\u003d activityId);","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"matheril"},"content":"        if (!removed) {","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"matheril"},"content":"            throw new InvalidDataException(Message.ERROR_PERSON_ACTIVITY_NOT_FOUND);","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"matheril"},"content":"    public double getTotalCostPaid() {","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"matheril"},"content":"        double totalCostPaid \u003d 0;","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"matheril"},"content":"        for (ActivityCost i : activityCostList) {","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"matheril"},"content":"            totalCostPaid +\u003d i.getCostPaid();","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"matheril"},"content":"        return totalCostPaid;","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"matheril"},"content":"    public double getTotalCostOwed() {","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"matheril"},"content":"        double totalCostOwed \u003d 0;","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"matheril"},"content":"        for (ActivityCost i : activityCostList) {","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"matheril"},"content":"            totalCostOwed +\u003d i.getCostOwed();","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"matheril"},"content":"        return totalCostOwed;","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":72,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"matheril"},"content":"     * Calculates the amount of money other Persons owe to this Person.","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"matheril"},"content":"     * In other words, how much money this Person must receive in order to break even.","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"matheril"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"matheril"},"content":"     * @return Sum of all costPaids - sum of all costOweds in the list of ActivityCosts for this Person.","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"matheril"},"content":"    public double getTotalCost() {","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"matheril"},"content":"        double totalCostPaid \u003d 0;","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"matheril"},"content":"        double totalCostOwed \u003d 0;","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"matheril"},"content":"        for (ActivityCost i : activityCostList) {","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"matheril"},"content":"            totalCostPaid +\u003d i.getCostPaid();","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"matheril"},"content":"            totalCostOwed +\u003d i.getCostOwed();","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"matheril"},"content":"        return totalCostPaid - totalCostOwed;","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":89,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":90,"author":{"gitId":"matheril"},"content":"     * Returns the cost owed by this Person object for an Activity.","lastModifiedDate":"2022-03-07"},{"lineNumber":91,"author":{"gitId":"matheril"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":92,"author":{"gitId":"matheril"},"content":"     * @param activityId int representing activityId of the Activity.","lastModifiedDate":"2022-03-07"},{"lineNumber":93,"author":{"gitId":"matheril"},"content":"     * @return double representing cost owed by the Person for this Activity.","lastModifiedDate":"2022-03-07"},{"lineNumber":94,"author":{"gitId":"matheril"},"content":"     * @throws InvalidDataException if this Person is not participating in any Activities","lastModifiedDate":"2022-03-07"},{"lineNumber":95,"author":{"gitId":"matheril"},"content":"     *         or the activityId is not found.","lastModifiedDate":"2022-03-07"},{"lineNumber":96,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":97,"author":{"gitId":"matheril"},"content":"    public double getActivityCostOwed(int activityId) throws InvalidDataException {","lastModifiedDate":"2022-03-07"},{"lineNumber":98,"author":{"gitId":"matheril"},"content":"        if (activityCostList.isEmpty()) {","lastModifiedDate":"2022-03-07"},{"lineNumber":99,"author":{"gitId":"matheril"},"content":"            throw new InvalidDataException(Message.ERROR_PERSON_NO_ACTIVITIES);","lastModifiedDate":"2022-03-07"},{"lineNumber":100,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":101,"author":{"gitId":"matheril"},"content":"        for (ActivityCost activityCost : activityCostList) {","lastModifiedDate":"2022-03-07"},{"lineNumber":102,"author":{"gitId":"matheril"},"content":"            if (activityCost.getActivityId() \u003d\u003d activityId) {","lastModifiedDate":"2022-03-07"},{"lineNumber":103,"author":{"gitId":"matheril"},"content":"                return activityCost.getCostOwed();","lastModifiedDate":"2022-03-07"},{"lineNumber":104,"author":{"gitId":"matheril"},"content":"            }","lastModifiedDate":"2022-03-07"},{"lineNumber":105,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":106,"author":{"gitId":"matheril"},"content":"        throw new InvalidDataException(Message.ERROR_PERSON_ACTIVITY_NOT_FOUND);","lastModifiedDate":"2022-03-07"},{"lineNumber":107,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":108,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":109,"author":{"gitId":"matheril"},"content":"    public String getName() {","lastModifiedDate":"2022-03-04"},{"lineNumber":110,"author":{"gitId":"matheril"},"content":"        return name;","lastModifiedDate":"2022-03-04"},{"lineNumber":111,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":112,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":113,"author":{"gitId":"matheril"},"content":"    public ArrayList\u003cActivityCost\u003e getActivityCostList() {","lastModifiedDate":"2022-03-04"},{"lineNumber":114,"author":{"gitId":"matheril"},"content":"        return activityCostList;","lastModifiedDate":"2022-03-04"},{"lineNumber":115,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":116,"author":{"gitId":"matheril"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"warrencxw":3,"froststein":2,"matheril":111}},{"path":"src/main/java/seedu/splitlah/data/Profile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package seedu.splitlah.data;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.exceptions.InvalidDataException;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.ui.Message;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"froststein"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"froststein"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"warrencxw"},"content":" * Represents a profile that manages a list of sessions and keeps track of unique session and activity","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"warrencxw"},"content":" * identifiers for the SplitLah application.","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"warrencxw"},"content":" * ","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"warrencxw"},"content":" * @author Roy","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"froststein"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"froststein"},"content":"public class Profile {","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"froststein"},"content":"    private ArrayList\u003cSession\u003e sessionList;","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"froststein"},"content":"    private int sessionIdTracker;","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"froststein"},"content":"    private int activityIdTracker;","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"froststein"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"froststein"},"content":"     * Constructor to create a Profile object.","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"froststein"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"froststein"},"content":"    public Profile() {","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"froststein"},"content":"        this.sessionList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"froststein"},"content":"        this.sessionIdTracker \u003d 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"froststein"},"content":"        this.activityIdTracker \u003d 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"froststein"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"froststein"},"content":"     * Checks if there is a session that exists with the same name.","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"froststein"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"froststein"},"content":"     * @param sessionName A String object that represents the session name.","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"froststein"},"content":"     * @return True if a session exists with the same name, false otherwise.","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"froststein"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"froststein"},"content":"    public boolean hasSessionName(String sessionName) {","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"froststein"},"content":"        if (sessionList.isEmpty()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"froststein"},"content":"            return false;","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"froststein"},"content":"        for (Session session : sessionList) {","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"froststein"},"content":"            if (session.getSessionName().equalsIgnoreCase(sessionName)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"froststein"},"content":"                return true;","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"froststein"},"content":"            }","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"froststein"},"content":"        return false;","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"froststein"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"froststein"},"content":"     * Checks if there is a session that exists with the specified session unique identifier.","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"froststein"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"froststein"},"content":"     * @param sessionId An integer that uniquely identifies a session.","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"froststein"},"content":"     * @return True if a session exists with the specified session unique identifier, false otherwise.","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"froststein"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"froststein"},"content":"    public boolean hasSessionId(int sessionId) {","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"froststein"},"content":"        if (sessionList.isEmpty()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"froststein"},"content":"            return false;","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"froststein"},"content":"        for (Session session : sessionList) {","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"froststein"},"content":"            if (session.getSessionId() \u003d\u003d sessionId) {","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"froststein"},"content":"                return true;","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"froststein"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"froststein"},"content":"        return false;","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"froststein"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"froststein"},"content":"     * Returns the session object via the session unique identifier specified by the user.","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"froststein"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"froststein"},"content":"     * @param sessionId An integer that uniquely identifies a session.","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"froststein"},"content":"     * @return A Session object with the matching session id.","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"froststein"},"content":"     * @throws InvalidDataException If there are no sessions stored or","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"froststein"},"content":"     *                              if the session unique identifier specified was not found.","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"froststein"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"froststein"},"content":"    public Session getSession(int sessionId) throws InvalidDataException {","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"froststein"},"content":"        if (sessionList.isEmpty()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"froststein"},"content":"            throw new InvalidDataException(Message.ERROR_PROFILE_SESSION_LIST_EMPTY);","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"froststein"},"content":"        for (Session session : sessionList) {","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"froststein"},"content":"            if (session.getSessionId() \u003d\u003d sessionId) {","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"froststein"},"content":"                return session;","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"froststein"},"content":"            }","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"froststein"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"froststein"},"content":"        throw new InvalidDataException(Message.ERROR_PROFILE_SESSION_NOT_IN_LIST);","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"froststein"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"froststein"},"content":"     * Adds a Session object to the list of sessions.","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"froststein"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"froststein"},"content":"     * @param session A Session object that is to be added.","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"froststein"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"froststein"},"content":"    public void addSession(Session session) {","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"froststein"},"content":"        sessionList.add(session);","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"froststein"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"froststein"},"content":"     * Removes a Session object with the specified session unique identifier from the list of sessions.","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"froststein"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"froststein"},"content":"     * @param sessionId An integer that uniquely identifies a session.","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"froststein"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"froststein"},"content":"    public void removeSession(int sessionId) throws InvalidDataException {","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"froststein"},"content":"        Session sessionToBeRemoved \u003d getSession(sessionId);","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"froststein"},"content":"        sessionList.remove(sessionToBeRemoved);","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"froststein"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":105,"author":{"gitId":"froststein"},"content":"     * Returns the list of session stored in Profile object.","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"matheril"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":107,"author":{"gitId":"froststein"},"content":"     * @return An ArrayList of Session objects.","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"froststein"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":109,"author":{"gitId":"froststein"},"content":"    public ArrayList\u003cSession\u003e getSessionList() {","lastModifiedDate":"2022-03-03"},{"lineNumber":110,"author":{"gitId":"froststein"},"content":"        return sessionList;","lastModifiedDate":"2022-03-03"},{"lineNumber":111,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":112,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":113,"author":{"gitId":"froststein"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":114,"author":{"gitId":"froststein"},"content":"     * Returns a new session id for session object to be created.","lastModifiedDate":"2022-03-03"},{"lineNumber":115,"author":{"gitId":"froststein"},"content":"     * Assumption: Function is called when a new Session object is being created without errors.","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"matheril"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":117,"author":{"gitId":"froststein"},"content":"     * @return An integer that represents the new session unique identifier.","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"froststein"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":119,"author":{"gitId":"froststein"},"content":"    public int getNewSessionId() {","lastModifiedDate":"2022-03-03"},{"lineNumber":120,"author":{"gitId":"froststein"},"content":"        int newSessionId \u003d sessionIdTracker;","lastModifiedDate":"2022-03-03"},{"lineNumber":121,"author":{"gitId":"froststein"},"content":"        sessionIdTracker +\u003d 1;","lastModifiedDate":"2022-03-03"},{"lineNumber":122,"author":{"gitId":"froststein"},"content":"        return newSessionId;","lastModifiedDate":"2022-03-03"},{"lineNumber":123,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":124,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":125,"author":{"gitId":"froststein"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":126,"author":{"gitId":"froststein"},"content":"     * Returns a new activity id for activity object to be created.","lastModifiedDate":"2022-03-03"},{"lineNumber":127,"author":{"gitId":"froststein"},"content":"     * Assumption: Function is called when a new Activity object is being created without errors.","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"matheril"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":129,"author":{"gitId":"froststein"},"content":"     * @return An integer that represents the new activity unique identifier.","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"froststein"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":131,"author":{"gitId":"froststein"},"content":"    public int getNewActivityId() {","lastModifiedDate":"2022-03-03"},{"lineNumber":132,"author":{"gitId":"froststein"},"content":"        int newActivityId \u003d activityIdTracker;","lastModifiedDate":"2022-03-03"},{"lineNumber":133,"author":{"gitId":"froststein"},"content":"        activityIdTracker +\u003d 1;","lastModifiedDate":"2022-03-03"},{"lineNumber":134,"author":{"gitId":"froststein"},"content":"        return newActivityId;","lastModifiedDate":"2022-03-03"},{"lineNumber":135,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":136,"author":{"gitId":"froststein"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"warrencxw":5,"froststein":128,"matheril":3}},{"path":"src/main/java/seedu/splitlah/data/Session.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package seedu.splitlah.data;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.exceptions.InvalidDataException;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.ui.Message;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"warrencxw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"warrencxw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"warrencxw"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"warrencxw"},"content":" * Represents a group outing session which contains a list of activities and is participated by a group of participants.","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"warrencxw"},"content":" *","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"warrencxw"},"content":" * @author Warren","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"warrencxw"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"warrencxw"},"content":"public class Session {","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"warrencxw"},"content":"    private String sessionName;","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"warrencxw"},"content":"    private int sessionId;","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"warrencxw"},"content":"    private LocalDate dateCreated;","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"warrencxw"},"content":"    private ArrayList\u003cActivity\u003e activityList;","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"warrencxw"},"content":"    private ArrayList\u003cPerson\u003e personList;","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"warrencxw"},"content":"    // private Group group;","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"warrencxw"},"content":"    // CONSTANTS","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"warrencxw"},"content":"    private static final String ACTIVITY_LIST_HEADER \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"warrencxw"},"content":"            \"Id | Activity Name | Cost | Payee\";","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"warrencxw"},"content":"    private static final String PERSON_LIST_HEADER \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"warrencxw"},"content":"            \"Participants\";","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"warrencxw"},"content":"    private static final int ZERO_INDEXING_OFFSET \u003d 1;","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"warrencxw"},"content":"     * Returns the session\u0027s name.","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"warrencxw"},"content":"     * @return A String object containing the name of the session.","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"warrencxw"},"content":"    public String getSessionName() {","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"warrencxw"},"content":"        return sessionName;","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"warrencxw"},"content":"     * Returns the session\u0027s unique identifier.","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"warrencxw"},"content":"     * Assumption: The identifier number is unique across all session identifiers in the profile.","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"warrencxw"},"content":"     * @return An integer representing the session\u0027s identifier.","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"warrencxw"},"content":"    public int getSessionId() {","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"warrencxw"},"content":"        return sessionId;","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":49,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"warrencxw"},"content":"     * Returns the date of which the session is created.","lastModifiedDate":"2022-03-05"},{"lineNumber":51,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"warrencxw"},"content":"     * @return A LocalDate object containing the date of creation of the session.","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"warrencxw"},"content":"    public LocalDate getDateCreated() {","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"warrencxw"},"content":"        return dateCreated;","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":57,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":59,"author":{"gitId":"warrencxw"},"content":"     * Returns a String object containing a human-readable version of the date of creation of the session.","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"warrencxw"},"content":"     * Format: DD Month YYYY, e.g. 04 March 2022","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":62,"author":{"gitId":"warrencxw"},"content":"     * @return A String object containing a human-readable version of the date of creation.","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":64,"author":{"gitId":"warrencxw"},"content":"    public String getDateString() {","lastModifiedDate":"2022-03-05"},{"lineNumber":65,"author":{"gitId":"warrencxw"},"content":"        return dateCreated.getDayOfMonth() + \" \" + dateCreated.getMonth() + \" \" + dateCreated.getYear();","lastModifiedDate":"2022-03-05"},{"lineNumber":66,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":67,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":68,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"warrencxw"},"content":"     * Returns an Activity object specified by a numerical identifier that uniquely identifies the activity.","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"warrencxw"},"content":"     * @param activityId An integer that uniquely identifies an Activity object in the profile.","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"warrencxw"},"content":"     * @return An Activity object in the Session class specified by activityId","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"warrencxw"},"content":"     * @throws InvalidDataException if activityList is empty or activityList does not contain an Activity object","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"warrencxw"},"content":"     *                              with the specified activityId","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"warrencxw"},"content":"    public Activity getActivity(int activityId) throws InvalidDataException {","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"warrencxw"},"content":"        if (activityList.isEmpty()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"warrencxw"},"content":"            throw new InvalidDataException(Message.ERROR_SESSION_EMPTY_ACTIVITY_LIST);","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"warrencxw"},"content":"        for (Activity activity : activityList) {","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"warrencxw"},"content":"            if (activity.getActivityId() \u003d\u003d activityId) {","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"warrencxw"},"content":"                return activity;","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"warrencxw"},"content":"            }","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"warrencxw"},"content":"        throw new InvalidDataException(Message.ERROR_SESSION_ACTIVITY_ID_NOT_IN_LIST);","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"warrencxw"},"content":"     * Removes an Activity object specified by a numerical identifier that uniquely identifies the activity","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"warrencxw"},"content":"     * from the Session. Additionally, removes all ActivityCost objects with the same activityId from all Person","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"warrencxw"},"content":"     * objects involved in the activity.","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"warrencxw"},"content":"     * @param activityId An integer that uniquely identifies an Activity object in the profile.","lastModifiedDate":"2022-03-08"},{"lineNumber":95,"author":{"gitId":"warrencxw"},"content":"     * @throws InvalidDataException if activityList is empty or activityList does not contain an Activity object","lastModifiedDate":"2022-03-08"},{"lineNumber":96,"author":{"gitId":"warrencxw"},"content":"     *                              with the specified activityId","lastModifiedDate":"2022-03-08"},{"lineNumber":97,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"warrencxw"},"content":"    public void removeActivity(int activityId) throws InvalidDataException {","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"warrencxw"},"content":"        if (activityList.isEmpty()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":100,"author":{"gitId":"warrencxw"},"content":"            throw new InvalidDataException(Message.ERROR_SESSION_EMPTY_ACTIVITY_LIST);","lastModifiedDate":"2022-03-08"},{"lineNumber":101,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"warrencxw"},"content":"        Activity deleteTarget \u003d null;","lastModifiedDate":"2022-03-08"},{"lineNumber":104,"author":{"gitId":"warrencxw"},"content":"        for (Activity activity : activityList) {","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"warrencxw"},"content":"            if (activity.getActivityId() \u003d\u003d activityId) {","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"warrencxw"},"content":"                deleteTarget \u003d activity;","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"warrencxw"},"content":"                break;","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"warrencxw"},"content":"            }","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":110,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"warrencxw"},"content":"        if (deleteTarget \u003d\u003d null) {","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"warrencxw"},"content":"            throw new InvalidDataException(Message.ERROR_SESSION_ACTIVITY_ID_NOT_IN_LIST);","lastModifiedDate":"2022-03-08"},{"lineNumber":113,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"warrencxw"},"content":"        ArrayList\u003cPerson\u003e involvedPersonList \u003d deleteTarget.getInvolvedPersonList();","lastModifiedDate":"2022-03-08"},{"lineNumber":116,"author":{"gitId":"warrencxw"},"content":"        if (involvedPersonList !\u003d null) {","lastModifiedDate":"2022-03-08"},{"lineNumber":117,"author":{"gitId":"warrencxw"},"content":"            for (Person person : involvedPersonList) {","lastModifiedDate":"2022-03-08"},{"lineNumber":118,"author":{"gitId":"warrencxw"},"content":"                person.removeActivityCost(activityId);","lastModifiedDate":"2022-03-08"},{"lineNumber":119,"author":{"gitId":"warrencxw"},"content":"            }","lastModifiedDate":"2022-03-08"},{"lineNumber":120,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":121,"author":{"gitId":"warrencxw"},"content":"        activityList.remove(deleteTarget);","lastModifiedDate":"2022-03-08"},{"lineNumber":122,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":123,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":124,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":125,"author":{"gitId":"warrencxw"},"content":"     * Returns a list of Activity objects representing the activities that occurred in that session.","lastModifiedDate":"2022-03-07"},{"lineNumber":126,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":127,"author":{"gitId":"warrencxw"},"content":"     * @return An ArrayList object containing Activity objects that are part of the session.","lastModifiedDate":"2022-03-07"},{"lineNumber":128,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":129,"author":{"gitId":"warrencxw"},"content":"    public ArrayList\u003cActivity\u003e getActivityList() {","lastModifiedDate":"2022-03-07"},{"lineNumber":130,"author":{"gitId":"warrencxw"},"content":"        return activityList;","lastModifiedDate":"2022-03-07"},{"lineNumber":131,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":132,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":133,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":134,"author":{"gitId":"warrencxw"},"content":"     * Adds an Activity object to the session.","lastModifiedDate":"2022-03-07"},{"lineNumber":135,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":136,"author":{"gitId":"warrencxw"},"content":"     * @param activity An Activity object representing an activity that happened in the session.","lastModifiedDate":"2022-03-07"},{"lineNumber":137,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":138,"author":{"gitId":"warrencxw"},"content":"    public void addActivity(Activity activity) {","lastModifiedDate":"2022-03-07"},{"lineNumber":139,"author":{"gitId":"warrencxw"},"content":"        activityList.add(activity);","lastModifiedDate":"2022-03-07"},{"lineNumber":140,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":141,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":142,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":143,"author":{"gitId":"warrencxw"},"content":"     * Returns a Person object specified by a numerical index that identifies the Person.","lastModifiedDate":"2022-03-07"},{"lineNumber":144,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":145,"author":{"gitId":"warrencxw"},"content":"     * @param index A numerical index that identifies a Person object in the session.","lastModifiedDate":"2022-03-07"},{"lineNumber":146,"author":{"gitId":"warrencxw"},"content":"     * @return A Person object in the Session class specified by index.","lastModifiedDate":"2022-03-07"},{"lineNumber":147,"author":{"gitId":"warrencxw"},"content":"     * @throws InvalidDataException if personList is empty or index is not in [1, personList.size()].","lastModifiedDate":"2022-03-07"},{"lineNumber":148,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":149,"author":{"gitId":"warrencxw"},"content":"    public Person getPersonByIndex(int index) throws InvalidDataException {","lastModifiedDate":"2022-03-07"},{"lineNumber":150,"author":{"gitId":"warrencxw"},"content":"        if (personList.isEmpty()) {","lastModifiedDate":"2022-03-07"},{"lineNumber":151,"author":{"gitId":"warrencxw"},"content":"            throw new InvalidDataException(Message.ERROR_SESSION_EMPTY_PERSON_LIST);","lastModifiedDate":"2022-03-07"},{"lineNumber":152,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":153,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":154,"author":{"gitId":"warrencxw"},"content":"        try {","lastModifiedDate":"2022-03-07"},{"lineNumber":155,"author":{"gitId":"warrencxw"},"content":"            return personList.get(index - ZERO_INDEXING_OFFSET);","lastModifiedDate":"2022-03-07"},{"lineNumber":156,"author":{"gitId":"warrencxw"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2022-03-07"},{"lineNumber":157,"author":{"gitId":"warrencxw"},"content":"            throw new InvalidDataException(Message.ERROR_SESSION_INDEX_OUT_OF_RANGE_PERSON_LIST + personList.size());","lastModifiedDate":"2022-03-07"},{"lineNumber":158,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":159,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":160,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":161,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":162,"author":{"gitId":"warrencxw"},"content":"     * Returns a Person object with a name that matches the queried name.","lastModifiedDate":"2022-03-07"},{"lineNumber":163,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":164,"author":{"gitId":"warrencxw"},"content":"     * @param name A query name used to search for a Person object.","lastModifiedDate":"2022-03-07"},{"lineNumber":165,"author":{"gitId":"warrencxw"},"content":"     * @return A Person object in the Session class that has a matching name.","lastModifiedDate":"2022-03-07"},{"lineNumber":166,"author":{"gitId":"warrencxw"},"content":"     * @throws InvalidDataException If personList is empty or ","lastModifiedDate":"2022-03-09"},{"lineNumber":167,"author":{"gitId":"warrencxw"},"content":"     *                              if no Person object in personList matches queried name.","lastModifiedDate":"2022-03-09"},{"lineNumber":168,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":169,"author":{"gitId":"warrencxw"},"content":"    public Person getPersonByName(String name) throws InvalidDataException {","lastModifiedDate":"2022-03-07"},{"lineNumber":170,"author":{"gitId":"warrencxw"},"content":"        if (personList.isEmpty()) {","lastModifiedDate":"2022-03-07"},{"lineNumber":171,"author":{"gitId":"warrencxw"},"content":"            throw new InvalidDataException(Message.ERROR_SESSION_EMPTY_PERSON_LIST);","lastModifiedDate":"2022-03-07"},{"lineNumber":172,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":173,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":174,"author":{"gitId":"warrencxw"},"content":"        for (Person person : personList) {","lastModifiedDate":"2022-03-07"},{"lineNumber":175,"author":{"gitId":"warrencxw"},"content":"            if (person.getName().equalsIgnoreCase(name)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":176,"author":{"gitId":"warrencxw"},"content":"                return person;","lastModifiedDate":"2022-03-07"},{"lineNumber":177,"author":{"gitId":"warrencxw"},"content":"            }","lastModifiedDate":"2022-03-07"},{"lineNumber":178,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":179,"author":{"gitId":"warrencxw"},"content":"        throw new InvalidDataException(Message.ERROR_SESSION_PERSON_NOT_IN_LIST);","lastModifiedDate":"2022-03-07"},{"lineNumber":180,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":181,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":182,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":183,"author":{"gitId":"warrencxw"},"content":"     * Returns an ArrayList of Person objects with names that match the provided name list.","lastModifiedDate":"2022-03-08"},{"lineNumber":184,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":185,"author":{"gitId":"warrencxw"},"content":"     * @param nameList An array of String objects that represent names of people in the session.","lastModifiedDate":"2022-03-08"},{"lineNumber":186,"author":{"gitId":"warrencxw"},"content":"     * @return An ArrayList object containing Person objects with matching names.","lastModifiedDate":"2022-03-08"},{"lineNumber":187,"author":{"gitId":"warrencxw"},"content":"     * @throws InvalidDataException if personList is empty or","lastModifiedDate":"2022-03-08"},{"lineNumber":188,"author":{"gitId":"warrencxw"},"content":"     *                              if any name in nameList does not match a Person object in personList.","lastModifiedDate":"2022-03-08"},{"lineNumber":189,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":190,"author":{"gitId":"warrencxw"},"content":"    public ArrayList\u003cPerson\u003e getPersonListByName(String[] nameList) throws InvalidDataException {","lastModifiedDate":"2022-03-08"},{"lineNumber":191,"author":{"gitId":"warrencxw"},"content":"        ArrayList\u003cPerson\u003e personList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-08"},{"lineNumber":192,"author":{"gitId":"warrencxw"},"content":"        for (String name : nameList) {","lastModifiedDate":"2022-03-08"},{"lineNumber":193,"author":{"gitId":"warrencxw"},"content":"            Person newPerson \u003d getPersonByName(name);","lastModifiedDate":"2022-03-08"},{"lineNumber":194,"author":{"gitId":"warrencxw"},"content":"            personList.add(newPerson);","lastModifiedDate":"2022-03-08"},{"lineNumber":195,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":196,"author":{"gitId":"warrencxw"},"content":"        return personList;","lastModifiedDate":"2022-03-08"},{"lineNumber":197,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":198,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":199,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":200,"author":{"gitId":"warrencxw"},"content":"     * Returns a list of Person objects representing the participants in the session.","lastModifiedDate":"2022-03-07"},{"lineNumber":201,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":202,"author":{"gitId":"warrencxw"},"content":"     * @return An ArrayList object containing Person objects that are part of the session.","lastModifiedDate":"2022-03-07"},{"lineNumber":203,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":204,"author":{"gitId":"warrencxw"},"content":"    public ArrayList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2022-03-07"},{"lineNumber":205,"author":{"gitId":"warrencxw"},"content":"        return personList;","lastModifiedDate":"2022-03-07"},{"lineNumber":206,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":207,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":208,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":209,"author":{"gitId":"warrencxw"},"content":"     * Adds a Person object to the session.","lastModifiedDate":"2022-03-07"},{"lineNumber":210,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":211,"author":{"gitId":"warrencxw"},"content":"     * @param person A Person object representing a participant of the session.","lastModifiedDate":"2022-03-07"},{"lineNumber":212,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":213,"author":{"gitId":"warrencxw"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2022-03-07"},{"lineNumber":214,"author":{"gitId":"warrencxw"},"content":"        personList.add(person);","lastModifiedDate":"2022-03-07"},{"lineNumber":215,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":216,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":217,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":218,"author":{"gitId":"warrencxw"},"content":"     * Constructs a Session object with the specified information as a new session.","lastModifiedDate":"2022-03-08"},{"lineNumber":219,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":220,"author":{"gitId":"warrencxw"},"content":"     * @param sessionName The name of the session.","lastModifiedDate":"2022-03-08"},{"lineNumber":221,"author":{"gitId":"warrencxw"},"content":"     * @param sessionId   A unique identifier for the session.","lastModifiedDate":"2022-03-08"},{"lineNumber":222,"author":{"gitId":"warrencxw"},"content":"     * @param dateCreated A LocalDate object storing the date that the session occurs on.","lastModifiedDate":"2022-03-08"},{"lineNumber":223,"author":{"gitId":"warrencxw"},"content":"     * @param personList  A list of Person objects representing participants of the session.","lastModifiedDate":"2022-03-08"},{"lineNumber":224,"author":{"gitId":"warrencxw"},"content":"     * @see Profile#getNewSessionId() for issuing a unique sessionId","lastModifiedDate":"2022-03-09"},{"lineNumber":225,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":226,"author":{"gitId":"warrencxw"},"content":"    public Session(String sessionName, int sessionId, LocalDate dateCreated, ArrayList\u003cPerson\u003e personList) {","lastModifiedDate":"2022-03-08"},{"lineNumber":227,"author":{"gitId":"warrencxw"},"content":"        this.sessionName \u003d sessionName;","lastModifiedDate":"2022-03-08"},{"lineNumber":228,"author":{"gitId":"warrencxw"},"content":"        this.sessionId \u003d sessionId;","lastModifiedDate":"2022-03-08"},{"lineNumber":229,"author":{"gitId":"warrencxw"},"content":"        this.dateCreated \u003d dateCreated;","lastModifiedDate":"2022-03-08"},{"lineNumber":230,"author":{"gitId":"warrencxw"},"content":"        this.personList \u003d personList;","lastModifiedDate":"2022-03-08"},{"lineNumber":231,"author":{"gitId":"warrencxw"},"content":"        this.activityList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-08"},{"lineNumber":232,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":233,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":234,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":235,"author":{"gitId":"warrencxw"},"content":"     * Returns a String object containing a summary of the state of activityList.","lastModifiedDate":"2022-03-08"},{"lineNumber":236,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":237,"author":{"gitId":"warrencxw"},"content":"     * @return A String object containing a summary of all Activity objects in activityList,","lastModifiedDate":"2022-03-08"},{"lineNumber":238,"author":{"gitId":"warrencxw"},"content":"     *         or a message stating that the activityList is empty if there are no Activity objects within.","lastModifiedDate":"2022-03-08"},{"lineNumber":239,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":240,"author":{"gitId":"warrencxw"},"content":"    private String getActivityListSummaryString() {","lastModifiedDate":"2022-03-08"},{"lineNumber":241,"author":{"gitId":"warrencxw"},"content":"        if (activityList.isEmpty()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":242,"author":{"gitId":"warrencxw"},"content":"            return Message.ERROR_SESSION_EMPTY_ACTIVITY_LIST;","lastModifiedDate":"2022-03-08"},{"lineNumber":243,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":244,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":245,"author":{"gitId":"warrencxw"},"content":"        StringBuilder summaryString \u003d new StringBuilder(ACTIVITY_LIST_HEADER);","lastModifiedDate":"2022-03-08"},{"lineNumber":246,"author":{"gitId":"warrencxw"},"content":"        for (Activity activity : activityList) {","lastModifiedDate":"2022-03-08"},{"lineNumber":247,"author":{"gitId":"warrencxw"},"content":"            summaryString.append(\"\\n \u003e \").append(activity.getActivitySummaryString());","lastModifiedDate":"2022-03-08"},{"lineNumber":248,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":249,"author":{"gitId":"warrencxw"},"content":"        return summaryString.toString();","lastModifiedDate":"2022-03-08"},{"lineNumber":250,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":251,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":252,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":253,"author":{"gitId":"warrencxw"},"content":"     * Returns a String object containing a summary of the state of personList.","lastModifiedDate":"2022-03-08"},{"lineNumber":254,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":255,"author":{"gitId":"warrencxw"},"content":"     * @return A String object containing a summary of all Person objects in personList,","lastModifiedDate":"2022-03-08"},{"lineNumber":256,"author":{"gitId":"warrencxw"},"content":"     *         or a message stating that the personList is empty if there are no Person objects within.","lastModifiedDate":"2022-03-08"},{"lineNumber":257,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":258,"author":{"gitId":"warrencxw"},"content":"    private String getPersonListSummaryString() {","lastModifiedDate":"2022-03-08"},{"lineNumber":259,"author":{"gitId":"warrencxw"},"content":"        if (personList.isEmpty()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":260,"author":{"gitId":"warrencxw"},"content":"            return Message.ERROR_SESSION_EMPTY_PERSON_LIST;","lastModifiedDate":"2022-03-08"},{"lineNumber":261,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":262,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":263,"author":{"gitId":"warrencxw"},"content":"        StringBuilder summaryString \u003d new StringBuilder(PERSON_LIST_HEADER);","lastModifiedDate":"2022-03-08"},{"lineNumber":264,"author":{"gitId":"warrencxw"},"content":"        for (int i \u003d 0; i \u003c personList.size(); i++) {","lastModifiedDate":"2022-03-08"},{"lineNumber":265,"author":{"gitId":"warrencxw"},"content":"            String personName \u003d personList.get(i).getName();","lastModifiedDate":"2022-03-08"},{"lineNumber":266,"author":{"gitId":"warrencxw"},"content":"            summaryString.append(\"\\n \").append(i).append(\". \").append(personName);","lastModifiedDate":"2022-03-08"},{"lineNumber":267,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":268,"author":{"gitId":"warrencxw"},"content":"        return summaryString.toString();","lastModifiedDate":"2022-03-08"},{"lineNumber":269,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":270,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":271,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":272,"author":{"gitId":"warrencxw"},"content":"     * Returns a String object summarising the state of the Session object.","lastModifiedDate":"2022-03-08"},{"lineNumber":273,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":274,"author":{"gitId":"warrencxw"},"content":"     * @return A String object containing a summary of the Session object and its member attributes.","lastModifiedDate":"2022-03-08"},{"lineNumber":275,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":276,"author":{"gitId":"warrencxw"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":277,"author":{"gitId":"warrencxw"},"content":"    public String toString() {","lastModifiedDate":"2022-03-08"},{"lineNumber":278,"author":{"gitId":"warrencxw"},"content":"        return \"Session --\"","lastModifiedDate":"2022-03-08"},{"lineNumber":279,"author":{"gitId":"warrencxw"},"content":"                + \"Name: \" + sessionName + \u0027\\n\u0027","lastModifiedDate":"2022-03-08"},{"lineNumber":280,"author":{"gitId":"warrencxw"},"content":"                + \"Id:   \" + sessionId + \u0027\\n\u0027","lastModifiedDate":"2022-03-08"},{"lineNumber":281,"author":{"gitId":"warrencxw"},"content":"                + \"Date: \" + dateCreated + \u0027\\n\u0027","lastModifiedDate":"2022-03-08"},{"lineNumber":282,"author":{"gitId":"warrencxw"},"content":"                + getActivityListSummaryString() + \u0027\\n\u0027","lastModifiedDate":"2022-03-08"},{"lineNumber":283,"author":{"gitId":"warrencxw"},"content":"                + getPersonListSummaryString();","lastModifiedDate":"2022-03-08"},{"lineNumber":284,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":285,"author":{"gitId":"warrencxw"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"warrencxw":282,"froststein":3}},{"path":"src/main/java/seedu/splitlah/exceptions/InvalidDataException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package seedu.splitlah.exceptions;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"matheril"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"warrencxw"},"content":" * Represents an exception that is thrown when data-related errors (such as unexpected null objects) occur.","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"matheril"},"content":" *","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"matheril"},"content":" * @author Saurav","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"matheril"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"matheril"},"content":"public class InvalidDataException extends Exception {","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"matheril"},"content":"    private final String message;","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"matheril"},"content":"    private final Throwable cause;","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"matheril"},"content":"     * Constructor that includes a message and an exception.","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"matheril"},"content":"     * Use this to store another exception (such as a Java exception) inside this exception to access it later.","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"matheril"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"matheril"},"content":"     * @param message A descriptive message of the error as a string.","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"matheril"},"content":"     * @param cause   a Throwable to be stored in this exception.","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"matheril"},"content":"    public InvalidDataException(String message, Throwable cause) {","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"matheril"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"matheril"},"content":"        this.cause \u003d cause;","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"matheril"},"content":"     * Constructor that includes a message only.","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"matheril"},"content":"     * Use this when no exception needs to be stored inside this one.","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"matheril"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"matheril"},"content":"     * @param message a String with a descriptive message.","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"matheril"},"content":"    public InvalidDataException(String message) {","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"matheril"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"matheril"},"content":"        this.cause \u003d null;","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"matheril"},"content":"     * Default constructor. No message or exception will be stored.","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"matheril"},"content":"    public InvalidDataException() {","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"matheril"},"content":"        this.message \u003d null;","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"matheril"},"content":"        this.cause \u003d null;","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"matheril"},"content":"    public String getMessage() {","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"matheril"},"content":"        return message;","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"matheril"},"content":"    public Throwable getCause() {","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"matheril"},"content":"        return cause;","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"matheril"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"warrencxw":2,"froststein":1,"matheril":48}},{"path":"src/main/java/seedu/splitlah/exceptions/InvalidFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package seedu.splitlah.exceptions;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"matheril"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"warrencxw"},"content":" * Represents an exception that is thrown when format-related errors (such as invalid input) occur.","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"matheril"},"content":" *","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"matheril"},"content":" * @author Saurav","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"matheril"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"matheril"},"content":"public class InvalidFormatException extends Exception {","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"matheril"},"content":"    private final String message;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"matheril"},"content":"    private final Throwable cause;","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"matheril"},"content":"     * Constructor that includes a message and an exception.","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"matheril"},"content":"     * Use this to store another exception (such as a Java exception) inside this exception to access it later.","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"matheril"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"matheril"},"content":"     * @param message A descriptive message of the error as a string.","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"matheril"},"content":"     * @param cause a Throwable to be stored in this exception.","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"matheril"},"content":"    public InvalidFormatException(String message, Throwable cause) {","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"matheril"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"matheril"},"content":"        this.cause \u003d cause;","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"matheril"},"content":"     * Constructor that includes a message only.","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"matheril"},"content":"     * Use this when no exception needs to be stored inside this one.","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"matheril"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"matheril"},"content":"     * @param message a String with a descriptive message.","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"matheril"},"content":"    public InvalidFormatException(String message) {","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"matheril"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"matheril"},"content":"        this.cause \u003d null;","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"matheril"},"content":"     * Default constructor. No message or exception will be stored.","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"matheril"},"content":"    public InvalidFormatException() {","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"matheril"},"content":"        this.message \u003d null;","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"matheril"},"content":"        this.cause \u003d null;","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"matheril"},"content":"    public String getMessage() {","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"matheril"},"content":"        return message;","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"matheril"},"content":"    public Throwable getCause() {","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"matheril"},"content":"        return cause;","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"matheril"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"warrencxw":2,"froststein":1,"matheril":48}},{"path":"src/main/java/seedu/splitlah/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package seedu.splitlah.parser;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.command.Command;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.command.ActivityCreateCommand;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.command.ActivityListCommand;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.command.ActivityViewCommand;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.command.HelpCommand;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.command.SessionCreateCommand;","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.command.SessionDeleteCommand;","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.command.SessionListCommand;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.command.SessionSummaryCommand;","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.command.ExitCommand;","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.command.InvalidCommand;","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.exceptions.InvalidFormatException;","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.ui.Message;","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"warrencxw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"warrencxw"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"warrencxw"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"warrencxw"},"content":" * Represents a parser that interprets the user input into data that can be understood by the program.","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"warrencxw"},"content":" * ","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"warrencxw"},"content":" * @author Warren","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"warrencxw"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"warrencxw"},"content":"public class Parser {","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"warrencxw"},"content":"    // DELIMITERS","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"warrencxw"},"content":"    private static final String NAME_DELIMITER \u003d \"/n\";","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"warrencxw"},"content":"    private static final String PERSON_LIST_DELIMITER \u003d \"/pl\";","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"warrencxw"},"content":"    private static final String INVOLVED_DELIMITER \u003d \"/i\";","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"warrencxw"},"content":"    private static final String PAYER_DELIMITER \u003d \"/p\";","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"warrencxw"},"content":"    private static final String SESSION_ID_DELIMITER \u003d \"/sid\";","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"warrencxw"},"content":"    private static final String ACTIVITY_ID_DELIMITER \u003d \"/aid\";","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"warrencxw"},"content":"    private static final String GROUP_ID_DELIMITER \u003d \"/gid\";","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"warrencxw"},"content":"    private static final String DATE_DELIMITER \u003d \"/d\";","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"warrencxw"},"content":"    private static final String TOTAL_COST_DELIMITER \u003d \"/c\";","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"warrencxw"},"content":"    private static final String COST_LIST_DELIMITER \u003d \"/cl\";","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"warrencxw"},"content":"    private static final String GST_DELIMITER \u003d \"/gst\";","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"warrencxw"},"content":"    private static final String SERVICE_CHARGE_DELIMITER \u003d \"/sc\";","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"warrencxw"},"content":"    // MISC CONSTANTS","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"warrencxw"},"content":"    private static final String DELIMITER_INDICATOR \u003d \"/\";","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"warrencxw"},"content":"    private static final String NEXT_DELIMITER_INDICATOR \u003d \" /\";","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"warrencxw"},"content":"    private static final String REGEX_WHITESPACES_DELIMITER \u003d \"\\\\s+\";","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"warrencxw"},"content":"    private static final int INVALID_INDEX_INDICATOR \u003d -1;","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"warrencxw"},"content":"    private static final int COMMAND_WITH_ARGS_TOKEN_COUNT \u003d 3;","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"warrencxw"},"content":"    private static final int DELIMITERED_COMMAND_MIN_TOKEN_COUNT \u003d 2;","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"warrencxw"},"content":"    private static final int MINIMUM_SURCHARGE_PERCENT \u003d 0;","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"warrencxw"},"content":"    private static final int MAXIMUM_SURCHARGE_PERCENT \u003d 100;","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"warrencxw"},"content":"    // ERROR REPORTING FUNCTIONS","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"warrencxw"},"content":"    private static String getMissingDelimiterErrorMessage(String delimiter) {","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"warrencxw"},"content":"        return Message.ERROR_PARSER_DELIMITER_NOT_FOUND + delimiter;","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"warrencxw"},"content":"    private static String getMissingArgumentErrorMessage(String delimiter) {","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"warrencxw"},"content":"        return Message.ERROR_PARSER_MISSING_ARGUMENT + delimiter;","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"warrencxw"},"content":"    private static String getNonIntegerErrorMessage(String delimiter) {","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"warrencxw"},"content":"        return Message.ERROR_PARSER_NON_INTEGER_ARGUMENT + delimiter;","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"warrencxw"},"content":"    private static String getNonMonetaryErrorMessage(String delimiter) {","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"warrencxw"},"content":"        return Message.ERROR_PARSER_NON_MONETARY_VALUE_ARGUMENT + delimiter;","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-03-04"},{"lineNumber":68,"author":{"gitId":"warrencxw"},"content":"    private static String getInvalidGstErrorMessage() {","lastModifiedDate":"2022-03-05"},{"lineNumber":69,"author":{"gitId":"warrencxw"},"content":"        return Message.ERROR_PARSER_INVALID_GST_SURCHARGE + GST_DELIMITER;","lastModifiedDate":"2022-03-05"},{"lineNumber":70,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-03-04"},{"lineNumber":72,"author":{"gitId":"warrencxw"},"content":"    private static String getInvalidServiceChargeErrorMessage() {","lastModifiedDate":"2022-03-05"},{"lineNumber":73,"author":{"gitId":"warrencxw"},"content":"        return Message.ERROR_PARSER_INVALID_SERVICE_CHARGE + SERVICE_CHARGE_DELIMITER;","lastModifiedDate":"2022-03-05"},{"lineNumber":74,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"warrencxw"},"content":"    // SUPPORTING FUNCTIONS","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"warrencxw"},"content":"    private static String getArgumentFromDelimiter(String commandArgs, String delimiter) throws InvalidFormatException {","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"warrencxw"},"content":"        int delimiterIndex \u003d commandArgs.indexOf(delimiter);","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"warrencxw"},"content":"        if (delimiterIndex \u003d\u003d INVALID_INDEX_INDICATOR) {","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"warrencxw"},"content":"            throw new InvalidFormatException(getMissingDelimiterErrorMessage(delimiter));","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"warrencxw"},"content":"        int argumentIndex \u003d delimiterIndex + delimiter.length();","lastModifiedDate":"2022-03-04"},{"lineNumber":83,"author":{"gitId":"warrencxw"},"content":"        int endingIndex \u003d commandArgs.indexOf(NEXT_DELIMITER_INDICATOR, argumentIndex);","lastModifiedDate":"2022-03-04"},{"lineNumber":84,"author":{"gitId":"warrencxw"},"content":"        String output;","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"warrencxw"},"content":"        if (endingIndex \u003d\u003d INVALID_INDEX_INDICATOR) {","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"warrencxw"},"content":"            output \u003d commandArgs.substring(argumentIndex).trim();","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"warrencxw"},"content":"        } else {","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"warrencxw"},"content":"            output \u003d commandArgs.substring(argumentIndex, endingIndex).trim();","lastModifiedDate":"2022-03-04"},{"lineNumber":89,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":90,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"warrencxw"},"content":"        if (output.isEmpty()) {","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"warrencxw"},"content":"            throw new InvalidFormatException(getMissingArgumentErrorMessage(delimiter));","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"warrencxw"},"content":"        return output;","lastModifiedDate":"2022-03-04"},{"lineNumber":95,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"warrencxw"},"content":"    private static int parseIntFromString(String input, String delimiter) throws InvalidFormatException {","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"warrencxw"},"content":"        try {","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"warrencxw"},"content":"            return Integer.parseInt(input);","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"warrencxw"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"warrencxw"},"content":"            throw new InvalidFormatException(getNonIntegerErrorMessage(delimiter));","lastModifiedDate":"2022-03-04"},{"lineNumber":102,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":103,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":104,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":105,"author":{"gitId":"warrencxw"},"content":"    private static int parseIdFromString(String input, String delimiter) throws InvalidFormatException {","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"warrencxw"},"content":"        int idVal \u003d parseIntFromString(input, delimiter);","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"warrencxw"},"content":"        if (idVal \u003c\u003d 0) {","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"warrencxw"},"content":"            throw new InvalidFormatException(Message.ERROR_PARSER_ID_VALUE_NOT_POSITIVE);","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"warrencxw"},"content":"        return idVal;","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"warrencxw"},"content":"    private static double parseCostFromString(String input, String delimiter) throws InvalidFormatException {","lastModifiedDate":"2022-03-04"},{"lineNumber":114,"author":{"gitId":"warrencxw"},"content":"        try {","lastModifiedDate":"2022-03-04"},{"lineNumber":115,"author":{"gitId":"warrencxw"},"content":"            return Double.parseDouble(input);","lastModifiedDate":"2022-03-04"},{"lineNumber":116,"author":{"gitId":"warrencxw"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2022-03-04"},{"lineNumber":117,"author":{"gitId":"warrencxw"},"content":"            throw new InvalidFormatException(getNonMonetaryErrorMessage(delimiter));","lastModifiedDate":"2022-03-04"},{"lineNumber":118,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":119,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":120,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":121,"author":{"gitId":"warrencxw"},"content":"    private static boolean hasDelimiter(String commandArgs, String delimiter) {","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"warrencxw"},"content":"        int delimiterIndex \u003d commandArgs.indexOf(delimiter);","lastModifiedDate":"2022-03-05"},{"lineNumber":123,"author":{"gitId":"warrencxw"},"content":"        return delimiterIndex !\u003d INVALID_INDEX_INDICATOR;","lastModifiedDate":"2022-03-05"},{"lineNumber":124,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":125,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-03-05"},{"lineNumber":126,"author":{"gitId":"warrencxw"},"content":"    private static boolean isValidDelimiter(String token) {","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"warrencxw"},"content":"        if (token \u003d\u003d null) {","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"warrencxw"},"content":"            return false;","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"warrencxw"},"content":"        ","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"warrencxw"},"content":"        switch (token) {","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"warrencxw"},"content":"        case NAME_DELIMITER:","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"warrencxw"},"content":"            // Fallthrough","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"warrencxw"},"content":"        case PERSON_LIST_DELIMITER:","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"warrencxw"},"content":"            // Fallthrough","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"warrencxw"},"content":"        case INVOLVED_DELIMITER:","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"warrencxw"},"content":"            // Fallthrough","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"warrencxw"},"content":"        case PAYER_DELIMITER:","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"warrencxw"},"content":"            // Fallthrough","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"warrencxw"},"content":"        case SESSION_ID_DELIMITER:","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"warrencxw"},"content":"            // Fallthrough","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"warrencxw"},"content":"        case ACTIVITY_ID_DELIMITER:","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"warrencxw"},"content":"            // Fallthrough","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"warrencxw"},"content":"        case GROUP_ID_DELIMITER:","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"warrencxw"},"content":"            // Fallthrough","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"warrencxw"},"content":"        case DATE_DELIMITER:","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"warrencxw"},"content":"            // Fallthrough","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"warrencxw"},"content":"        case TOTAL_COST_DELIMITER:","lastModifiedDate":"2022-03-06"},{"lineNumber":149,"author":{"gitId":"warrencxw"},"content":"            // Fallthrough","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"warrencxw"},"content":"        case COST_LIST_DELIMITER:","lastModifiedDate":"2022-03-06"},{"lineNumber":151,"author":{"gitId":"warrencxw"},"content":"            // Fallthrough","lastModifiedDate":"2022-03-06"},{"lineNumber":152,"author":{"gitId":"warrencxw"},"content":"        case GST_DELIMITER:","lastModifiedDate":"2022-03-06"},{"lineNumber":153,"author":{"gitId":"warrencxw"},"content":"            // Fallthrough","lastModifiedDate":"2022-03-06"},{"lineNumber":154,"author":{"gitId":"warrencxw"},"content":"        case SERVICE_CHARGE_DELIMITER:","lastModifiedDate":"2022-03-06"},{"lineNumber":155,"author":{"gitId":"warrencxw"},"content":"            return true;","lastModifiedDate":"2022-03-06"},{"lineNumber":156,"author":{"gitId":"warrencxw"},"content":"        default:","lastModifiedDate":"2022-03-06"},{"lineNumber":157,"author":{"gitId":"warrencxw"},"content":"            return false;","lastModifiedDate":"2022-03-06"},{"lineNumber":158,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":159,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":160,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-03-06"},{"lineNumber":161,"author":{"gitId":"warrencxw"},"content":"    private static boolean containsInvalidDelimiters(String commandArgs) {","lastModifiedDate":"2022-03-06"},{"lineNumber":162,"author":{"gitId":"warrencxw"},"content":"        if (commandArgs \u003d\u003d null) {","lastModifiedDate":"2022-03-06"},{"lineNumber":163,"author":{"gitId":"warrencxw"},"content":"            return false;","lastModifiedDate":"2022-03-06"},{"lineNumber":164,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":165,"author":{"gitId":"warrencxw"},"content":"        ","lastModifiedDate":"2022-03-06"},{"lineNumber":166,"author":{"gitId":"warrencxw"},"content":"        String[] argumentTokens \u003d commandArgs.split(REGEX_WHITESPACES_DELIMITER);","lastModifiedDate":"2022-03-06"},{"lineNumber":167,"author":{"gitId":"warrencxw"},"content":"        for (String token : argumentTokens) {","lastModifiedDate":"2022-03-06"},{"lineNumber":168,"author":{"gitId":"warrencxw"},"content":"            if (token.contains(DELIMITER_INDICATOR) \u0026\u0026 !isValidDelimiter(token)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":169,"author":{"gitId":"warrencxw"},"content":"                return true;","lastModifiedDate":"2022-03-06"},{"lineNumber":170,"author":{"gitId":"warrencxw"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":171,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":172,"author":{"gitId":"warrencxw"},"content":"        return false;","lastModifiedDate":"2022-03-06"},{"lineNumber":173,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":174,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-03-06"},{"lineNumber":175,"author":{"gitId":"warrencxw"},"content":"    // MAIN PUBLIC PARSING FUNCTIONS","lastModifiedDate":"2022-03-05"},{"lineNumber":176,"author":{"gitId":"warrencxw"},"content":"    public static String parseName(String commandArgs) throws InvalidFormatException {","lastModifiedDate":"2022-03-05"},{"lineNumber":177,"author":{"gitId":"warrencxw"},"content":"        return getArgumentFromDelimiter(commandArgs, NAME_DELIMITER);","lastModifiedDate":"2022-03-05"},{"lineNumber":178,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":179,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":180,"author":{"gitId":"warrencxw"},"content":"    public static String[] parsePersonList(String commandArgs) throws InvalidFormatException {","lastModifiedDate":"2022-03-05"},{"lineNumber":181,"author":{"gitId":"warrencxw"},"content":"        String argument \u003d getArgumentFromDelimiter(commandArgs, PERSON_LIST_DELIMITER);","lastModifiedDate":"2022-03-05"},{"lineNumber":182,"author":{"gitId":"warrencxw"},"content":"        return argument.split(REGEX_WHITESPACES_DELIMITER);","lastModifiedDate":"2022-03-05"},{"lineNumber":183,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":184,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":185,"author":{"gitId":"warrencxw"},"content":"    public static String[] parseInvolved(String commandArgs) throws InvalidFormatException {","lastModifiedDate":"2022-03-05"},{"lineNumber":186,"author":{"gitId":"warrencxw"},"content":"        String argument \u003d getArgumentFromDelimiter(commandArgs, INVOLVED_DELIMITER);","lastModifiedDate":"2022-03-05"},{"lineNumber":187,"author":{"gitId":"warrencxw"},"content":"        return argument.split(REGEX_WHITESPACES_DELIMITER);","lastModifiedDate":"2022-03-05"},{"lineNumber":188,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":189,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":190,"author":{"gitId":"warrencxw"},"content":"    public static String parsePayer(String commandArgs) throws InvalidFormatException {","lastModifiedDate":"2022-03-05"},{"lineNumber":191,"author":{"gitId":"warrencxw"},"content":"        return getArgumentFromDelimiter(commandArgs, PAYER_DELIMITER);","lastModifiedDate":"2022-03-05"},{"lineNumber":192,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":193,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-03-05"},{"lineNumber":194,"author":{"gitId":"warrencxw"},"content":"    public static int parseSessionId(String commandArgs) throws InvalidFormatException {","lastModifiedDate":"2022-03-05"},{"lineNumber":195,"author":{"gitId":"warrencxw"},"content":"        String argument \u003d getArgumentFromDelimiter(commandArgs, SESSION_ID_DELIMITER);","lastModifiedDate":"2022-03-05"},{"lineNumber":196,"author":{"gitId":"warrencxw"},"content":"        return parseIdFromString(argument, SESSION_ID_DELIMITER);","lastModifiedDate":"2022-03-11"},{"lineNumber":197,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":198,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":199,"author":{"gitId":"warrencxw"},"content":"    public static int parseActivityId(String commandArgs) throws InvalidFormatException {","lastModifiedDate":"2022-03-05"},{"lineNumber":200,"author":{"gitId":"warrencxw"},"content":"        String argument \u003d getArgumentFromDelimiter(commandArgs, ACTIVITY_ID_DELIMITER);","lastModifiedDate":"2022-03-05"},{"lineNumber":201,"author":{"gitId":"warrencxw"},"content":"        return parseIdFromString(argument, ACTIVITY_ID_DELIMITER);","lastModifiedDate":"2022-03-11"},{"lineNumber":202,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":203,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":204,"author":{"gitId":"warrencxw"},"content":"    public static LocalDate parseLocalDate(String commandArgs) throws InvalidFormatException {","lastModifiedDate":"2022-03-05"},{"lineNumber":205,"author":{"gitId":"warrencxw"},"content":"        if (!hasDelimiter(commandArgs, DATE_DELIMITER)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":206,"author":{"gitId":"warrencxw"},"content":"            throw new InvalidFormatException(getMissingDelimiterErrorMessage(DATE_DELIMITER));","lastModifiedDate":"2022-03-05"},{"lineNumber":207,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":208,"author":{"gitId":"warrencxw"},"content":"        ","lastModifiedDate":"2022-03-05"},{"lineNumber":209,"author":{"gitId":"warrencxw"},"content":"        try {","lastModifiedDate":"2022-03-05"},{"lineNumber":210,"author":{"gitId":"warrencxw"},"content":"            String argument \u003d getArgumentFromDelimiter(commandArgs, DATE_DELIMITER);","lastModifiedDate":"2022-03-05"},{"lineNumber":211,"author":{"gitId":"warrencxw"},"content":"            return LocalDate.parse(argument);","lastModifiedDate":"2022-03-05"},{"lineNumber":212,"author":{"gitId":"warrencxw"},"content":"        } catch (InvalidFormatException | DateTimeParseException exception) {","lastModifiedDate":"2022-03-05"},{"lineNumber":213,"author":{"gitId":"warrencxw"},"content":"            return LocalDate.now();","lastModifiedDate":"2022-03-05"},{"lineNumber":214,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":215,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":216,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":217,"author":{"gitId":"warrencxw"},"content":"    public static double parseTotalCost(String commandArgs) throws InvalidFormatException {","lastModifiedDate":"2022-03-05"},{"lineNumber":218,"author":{"gitId":"warrencxw"},"content":"        String argument \u003d getArgumentFromDelimiter(commandArgs, TOTAL_COST_DELIMITER);","lastModifiedDate":"2022-03-05"},{"lineNumber":219,"author":{"gitId":"warrencxw"},"content":"        return parseCostFromString(argument, TOTAL_COST_DELIMITER);","lastModifiedDate":"2022-03-05"},{"lineNumber":220,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":221,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":222,"author":{"gitId":"warrencxw"},"content":"    public static double[] parseCostList(String commandArgs) throws InvalidFormatException {","lastModifiedDate":"2022-03-05"},{"lineNumber":223,"author":{"gitId":"warrencxw"},"content":"        String argument \u003d getArgumentFromDelimiter(commandArgs, COST_LIST_DELIMITER);","lastModifiedDate":"2022-03-05"},{"lineNumber":224,"author":{"gitId":"warrencxw"},"content":"        String[] costStrings \u003d argument.split(REGEX_WHITESPACES_DELIMITER);","lastModifiedDate":"2022-03-05"},{"lineNumber":225,"author":{"gitId":"warrencxw"},"content":"        double[] costs \u003d new double[costStrings.length];","lastModifiedDate":"2022-03-05"},{"lineNumber":226,"author":{"gitId":"warrencxw"},"content":"        for (int i \u003d 0; i \u003c costStrings.length; i++) {","lastModifiedDate":"2022-03-05"},{"lineNumber":227,"author":{"gitId":"warrencxw"},"content":"            costs[i] \u003d parseCostFromString(costStrings[i], COST_LIST_DELIMITER);","lastModifiedDate":"2022-03-05"},{"lineNumber":228,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":229,"author":{"gitId":"warrencxw"},"content":"        return costs;","lastModifiedDate":"2022-03-05"},{"lineNumber":230,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":231,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":232,"author":{"gitId":"warrencxw"},"content":"    public static int parseGst(String commandArgs) throws InvalidFormatException {","lastModifiedDate":"2022-03-05"},{"lineNumber":233,"author":{"gitId":"warrencxw"},"content":"        if (!hasDelimiter(commandArgs, GST_DELIMITER)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":234,"author":{"gitId":"warrencxw"},"content":"            return 0;","lastModifiedDate":"2022-03-05"},{"lineNumber":235,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":236,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":237,"author":{"gitId":"warrencxw"},"content":"        String argument \u003d getArgumentFromDelimiter(commandArgs, GST_DELIMITER);","lastModifiedDate":"2022-03-05"},{"lineNumber":238,"author":{"gitId":"warrencxw"},"content":"        int gst \u003d parseIntFromString(argument, GST_DELIMITER);","lastModifiedDate":"2022-03-05"},{"lineNumber":239,"author":{"gitId":"warrencxw"},"content":"        if (gst \u003c MINIMUM_SURCHARGE_PERCENT || gst \u003e MAXIMUM_SURCHARGE_PERCENT) {","lastModifiedDate":"2022-03-05"},{"lineNumber":240,"author":{"gitId":"warrencxw"},"content":"            throw new InvalidFormatException(getInvalidGstErrorMessage());","lastModifiedDate":"2022-03-05"},{"lineNumber":241,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":242,"author":{"gitId":"warrencxw"},"content":"        return gst;","lastModifiedDate":"2022-03-05"},{"lineNumber":243,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":244,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":245,"author":{"gitId":"warrencxw"},"content":"    public static int parseServiceCharge(String commandArgs) throws InvalidFormatException {","lastModifiedDate":"2022-03-05"},{"lineNumber":246,"author":{"gitId":"warrencxw"},"content":"        if (!hasDelimiter(commandArgs, SERVICE_CHARGE_DELIMITER)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":247,"author":{"gitId":"warrencxw"},"content":"            return 0;","lastModifiedDate":"2022-03-05"},{"lineNumber":248,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":249,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":250,"author":{"gitId":"warrencxw"},"content":"        String argument \u003d getArgumentFromDelimiter(commandArgs, SERVICE_CHARGE_DELIMITER);","lastModifiedDate":"2022-03-05"},{"lineNumber":251,"author":{"gitId":"warrencxw"},"content":"        int serviceCharge \u003d parseIntFromString(argument, SERVICE_CHARGE_DELIMITER);","lastModifiedDate":"2022-03-05"},{"lineNumber":252,"author":{"gitId":"warrencxw"},"content":"        if (serviceCharge \u003c MINIMUM_SURCHARGE_PERCENT || serviceCharge \u003e MAXIMUM_SURCHARGE_PERCENT) {","lastModifiedDate":"2022-03-05"},{"lineNumber":253,"author":{"gitId":"warrencxw"},"content":"            throw new InvalidFormatException(getInvalidServiceChargeErrorMessage());","lastModifiedDate":"2022-03-05"},{"lineNumber":254,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":255,"author":{"gitId":"warrencxw"},"content":"        return serviceCharge;","lastModifiedDate":"2022-03-05"},{"lineNumber":256,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":257,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-03-05"},{"lineNumber":258,"author":{"gitId":"warrencxw"},"content":"    // COMMAND PARSING METHODS","lastModifiedDate":"2022-03-05"},{"lineNumber":259,"author":{"gitId":"warrencxw"},"content":"    public static String getRemainingArgument(String commandArgs) {","lastModifiedDate":"2022-03-05"},{"lineNumber":260,"author":{"gitId":"warrencxw"},"content":"        String[] commandTokens \u003d commandArgs.trim().split(REGEX_WHITESPACES_DELIMITER, COMMAND_WITH_ARGS_TOKEN_COUNT);","lastModifiedDate":"2022-03-05"},{"lineNumber":261,"author":{"gitId":"warrencxw"},"content":"        if (commandTokens.length \u003c COMMAND_WITH_ARGS_TOKEN_COUNT) {","lastModifiedDate":"2022-03-05"},{"lineNumber":262,"author":{"gitId":"warrencxw"},"content":"            return \"\";","lastModifiedDate":"2022-03-09"},{"lineNumber":263,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":264,"author":{"gitId":"warrencxw"},"content":"        return commandTokens[2];","lastModifiedDate":"2022-03-05"},{"lineNumber":265,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":266,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":267,"author":{"gitId":"warrencxw"},"content":"    public static String getCommandType(String commandArgs) {","lastModifiedDate":"2022-03-05"},{"lineNumber":268,"author":{"gitId":"warrencxw"},"content":"        String[] commandTokens \u003d commandArgs.trim().split(REGEX_WHITESPACES_DELIMITER, COMMAND_WITH_ARGS_TOKEN_COUNT);","lastModifiedDate":"2022-03-05"},{"lineNumber":269,"author":{"gitId":"warrencxw"},"content":"        ","lastModifiedDate":"2022-03-06"},{"lineNumber":270,"author":{"gitId":"warrencxw"},"content":"        if (commandTokens.length \u003c DELIMITERED_COMMAND_MIN_TOKEN_COUNT) {","lastModifiedDate":"2022-03-06"},{"lineNumber":271,"author":{"gitId":"froststein"},"content":"            return commandTokens[0];","lastModifiedDate":"2022-03-05"},{"lineNumber":272,"author":{"gitId":"warrencxw"},"content":"        } else if (!commandTokens[1].startsWith(DELIMITER_INDICATOR)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":273,"author":{"gitId":"warrencxw"},"content":"            return null;","lastModifiedDate":"2022-03-05"},{"lineNumber":274,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":275,"author":{"gitId":"warrencxw"},"content":"        return commandTokens[0] + \" \" + commandTokens[1];","lastModifiedDate":"2022-03-05"},{"lineNumber":276,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":277,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":278,"author":{"gitId":"warrencxw"},"content":"    public static Command getCommand(String input) {","lastModifiedDate":"2022-03-05"},{"lineNumber":279,"author":{"gitId":"warrencxw"},"content":"        String commandType \u003d getCommandType(input);","lastModifiedDate":"2022-03-05"},{"lineNumber":280,"author":{"gitId":"warrencxw"},"content":"        String remainingArgs \u003d getRemainingArgument(input);","lastModifiedDate":"2022-03-05"},{"lineNumber":281,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":282,"author":{"gitId":"warrencxw"},"content":"        if (commandType \u003d\u003d null) {","lastModifiedDate":"2022-03-05"},{"lineNumber":283,"author":{"gitId":"warrencxw"},"content":"            return new InvalidCommand(Message.ERROR_PARSER_INVALID_COMMAND);","lastModifiedDate":"2022-03-06"},{"lineNumber":284,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":285,"author":{"gitId":"warrencxw"},"content":"        ","lastModifiedDate":"2022-03-06"},{"lineNumber":286,"author":{"gitId":"warrencxw"},"content":"        if (containsInvalidDelimiters(remainingArgs)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":287,"author":{"gitId":"warrencxw"},"content":"            return new InvalidCommand(Message.ERROR_PARSER_INVALID_DELIMITERS);","lastModifiedDate":"2022-03-06"},{"lineNumber":288,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":289,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":290,"author":{"gitId":"warrencxw"},"content":"        switch (commandType) {","lastModifiedDate":"2022-03-05"},{"lineNumber":291,"author":{"gitId":"warrencxw"},"content":"        case \"\":","lastModifiedDate":"2022-03-06"},{"lineNumber":292,"author":{"gitId":"warrencxw"},"content":"            return new InvalidCommand(Message.ERROR_PARSER_EMPTY_COMMAND);","lastModifiedDate":"2022-03-06"},{"lineNumber":293,"author":{"gitId":"warrencxw"},"content":"        // TEMPORARY FALLTHROUGH FOR ALL COMMANDS UNTIL COMMANDS ARE PROPERLY SET UP","lastModifiedDate":"2022-03-06"},{"lineNumber":294,"author":{"gitId":"warrencxw"},"content":"        case SessionCreateCommand.COMMAND_TEXT:","lastModifiedDate":"2022-03-05"},{"lineNumber":295,"author":{"gitId":"froststein"},"content":"            return SessionCreateCommand.prepare(remainingArgs);","lastModifiedDate":"2022-03-07"},{"lineNumber":296,"author":{"gitId":"warrencxw"},"content":"        case SessionSummaryCommand.COMMAND_TEXT:","lastModifiedDate":"2022-03-09"},{"lineNumber":297,"author":{"gitId":"warrencxw"},"content":"            return SessionSummaryCommand.prepare(remainingArgs);","lastModifiedDate":"2022-03-09"},{"lineNumber":298,"author":{"gitId":"warrencxw"},"content":"        case SessionDeleteCommand.COMMAND_TEXT:","lastModifiedDate":"2022-03-06"},{"lineNumber":299,"author":{"gitId":"froststein"},"content":"            return SessionDeleteCommand.prepare(remainingArgs);","lastModifiedDate":"2022-03-09"},{"lineNumber":300,"author":{"gitId":"froststein"},"content":"        case SessionListCommand.COMMAND_TEXT:","lastModifiedDate":"2022-03-06"},{"lineNumber":301,"author":{"gitId":"froststein"},"content":"            // FALLTHROUGH","lastModifiedDate":"2022-03-06"},{"lineNumber":302,"author":{"gitId":"warrencxw"},"content":"        case ActivityCreateCommand.COMMAND_TEXT:","lastModifiedDate":"2022-03-06"},{"lineNumber":303,"author":{"gitId":"warrencxw"},"content":"            // FALLTHROUGH","lastModifiedDate":"2022-03-06"},{"lineNumber":304,"author":{"gitId":"warrencxw"},"content":"        case ActivityListCommand.COMMAND_TEXT:","lastModifiedDate":"2022-03-06"},{"lineNumber":305,"author":{"gitId":"warrencxw"},"content":"            // FALLTHROUGH","lastModifiedDate":"2022-03-06"},{"lineNumber":306,"author":{"gitId":"warrencxw"},"content":"        case ActivityViewCommand.COMMAND_TEXT:","lastModifiedDate":"2022-03-06"},{"lineNumber":307,"author":{"gitId":"warrencxw"},"content":"            // return Relevant command.prepare(remainingArgs);","lastModifiedDate":"2022-03-05"},{"lineNumber":308,"author":{"gitId":"warrencxw"},"content":"            return new InvalidCommand(\"Command is currently not implemented, please try again later.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":309,"author":{"gitId":"warrencxw"},"content":"        case HelpCommand.COMMAND_TEXT:","lastModifiedDate":"2022-03-06"},{"lineNumber":310,"author":{"gitId":"warrencxw"},"content":"            return new HelpCommand();","lastModifiedDate":"2022-03-06"},{"lineNumber":311,"author":{"gitId":"froststein"},"content":"        case ExitCommand.COMMAND_TEXT:","lastModifiedDate":"2022-03-05"},{"lineNumber":312,"author":{"gitId":"froststein"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-03-05"},{"lineNumber":313,"author":{"gitId":"warrencxw"},"content":"        default:","lastModifiedDate":"2022-03-05"},{"lineNumber":314,"author":{"gitId":"warrencxw"},"content":"            return new InvalidCommand(Message.ERROR_PARSER_INVALID_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":315,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":316,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":317,"author":{"gitId":"warrencxw"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"warrencxw":296,"froststein":21}},{"path":"src/main/java/seedu/splitlah/ui/Message.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package seedu.splitlah.ui;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"matheril"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"warrencxw"},"content":" * Container of hardcoded messages.","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"warrencxw"},"content":" * Naming convention: [TYPE]_[CLASS]_[MESSAGE].","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"matheril"},"content":" *","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"matheril"},"content":" * @author Saurav","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"matheril"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"matheril"},"content":"public abstract class Message {","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"matheril"},"content":"    // TextUI","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"warrencxw"},"content":"    public static final String ASCII_TEXTUI_LOGO \u003d ","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"warrencxw"},"content":"            \" $$$$$$\\\\            $$\\\\ $$\\\\   $$\\\\     $$\\\\           $$\\\\\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"matheril"},"content":"            + \"$$  $$\\\\           $$ |\\\\|  $$ |    $$ |          $$ |\\n\"","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"matheril"},"content":"            + \"$$ /  \\\\__| $$$$$$\\\\  $$ |$$\\\\ $$$$$$\\\\   $$ | $$$$$$\\\\  $$$$$$$\\\\\\n\"","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"matheril"},"content":"            + \"\\\\$$$$$$\\\\  $$  $$\\\\ $$ |$$ |\\\\_$$  _|  $$ | \\\\____$$\\\\ $$  __$$\\\\\\n\"","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"matheril"},"content":"            + \" \\\\____$$\\\\ $$ /  $$ |$$ |$$ |  $$ |    $$ | $$$$$$$ |$$ |  $$ |\\n\"","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"matheril"},"content":"            + \"$$\\\\   $$ |$$ |  $$ |$$ |$$ |  $$ |$$\\\\ $$ |$$  __$$ |$$ |  $$ |\\n\"","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"matheril"},"content":"            + \"\\\\$$$$$$  |$$$$$$$  |$$ |$$ |  \\\\$$$$  |$$ |\\\\$$$$$$$ |$$ |  $$ |\\n\"","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"matheril"},"content":"            + \" \\\\______/ $$  ____/ \\\\|\\\\__|   \\\\____/ \\\\__| \\\\_______|\\\\__|  \\\\__|\\n\"","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"matheril"},"content":"            + \"          $$ |\\n\"","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"matheril"},"content":"            + \"          $$ |\\n\"","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"matheril"},"content":"            + \"          \\\\__|\";","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"warrencxw"},"content":"    public static final String MESSAGE_TEXTUI_HELP_MENU \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"warrencxw"},"content":"            \"HELP MENU\"; //TODO: Populate help menu","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"matheril"},"content":"    public static final String PROMPT_TEXTUI_REQUEST_CONFIRMATION \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"matheril"},"content":"            \"Please enter Y/y/yes to confirm, or N/n/no otherwise.\";","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"matheril"},"content":"    public static final String ERROR_TEXTUI_USER_DID_NOT_CONFIRM \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"matheril"},"content":"            \"User did not confirm.\";","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"matheril"},"content":"    public static final String ERROR_TEXTUI_REENTER_INPUT \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"matheril"},"content":"            \"Invalid input. Please re-enter.\";","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"warrencxw"},"content":"    public static final String PERSON_TEXTUI_NO_ACTIVITIES \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"warrencxw"},"content":"            \"No activities found.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"warrencxw"},"content":"    // Parser","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"warrencxw"},"content":"    public static final String ERROR_PARSER_DELIMITER_NOT_FOUND \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"warrencxw"},"content":"            \"Please include the following delimiter in your input: \";","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"warrencxw"},"content":"    public static final String ERROR_PARSER_MISSING_ARGUMENT \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"warrencxw"},"content":"            \"Please include an argument after the following delimiter: \";","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"warrencxw"},"content":"    public static final String ERROR_PARSER_NON_INTEGER_ARGUMENT \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"warrencxw"},"content":"            \"Please enter a valid integer after the following delimiter: \";","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"warrencxw"},"content":"    public static final String ERROR_PARSER_ID_VALUE_NOT_POSITIVE \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"warrencxw"},"content":"            \"Please enter a positive value for identifier numbers.\";","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"warrencxw"},"content":"    public static final String ERROR_PARSER_NON_MONETARY_VALUE_ARGUMENT \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"warrencxw"},"content":"            \"Please enter a valid monetary value(s) after the following delimiter: \";","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"warrencxw"},"content":"    public static final String ERROR_PARSER_INVALID_GST_SURCHARGE \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"warrencxw"},"content":"            \"Please enter a valid GST surcharge in % after the delimiter: \";","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"warrencxw"},"content":"    public static final String ERROR_PARSER_INVALID_SERVICE_CHARGE \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"warrencxw"},"content":"            \"Please enter a valid service charge in % after the delimiter: \";","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"warrencxw"},"content":"    public static final String ERROR_PARSER_EMPTY_COMMAND \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"warrencxw"},"content":"            \"Please enter a command.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"warrencxw"},"content":"    public static final String ERROR_PARSER_INVALID_COMMAND \u003d","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"warrencxw"},"content":"            \"Please enter a valid command.\";","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"warrencxw"},"content":"    public static final String ERROR_PARSER_INVALID_DELIMITERS \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"warrencxw"},"content":"            \"The command contains one or more invalid delimiters. Please rectify and try again.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"matheril"},"content":"    // Person","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"matheril"},"content":"    public static final String ERROR_PERSON_NO_ACTIVITIES \u003d","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"matheril"},"content":"            \"This person is not participating in any activities.\";","lastModifiedDate":"2022-03-07"},{"lineNumber":60,"author":{"gitId":"matheril"},"content":"    public static final String ERROR_PERSON_ACTIVITY_NOT_FOUND \u003d","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"matheril"},"content":"            \"Activity not found.\";","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"warrencxw"},"content":"    // Session","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"warrencxw"},"content":"    public static final String ERROR_SESSION_INDEX_OUT_OF_RANGE_PERSON_LIST \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"warrencxw"},"content":"            \"Please enter a number from 1 to \";","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"warrencxw"},"content":"    public static final String ERROR_SESSION_EMPTY_ACTIVITY_LIST \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"warrencxw"},"content":"            \"The list of activities in the session is currently empty.\";","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"warrencxw"},"content":"    public static final String ERROR_SESSION_ACTIVITY_ID_NOT_IN_LIST \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"warrencxw"},"content":"            \"The activity that you have specified was not found in this session.\";","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"warrencxw"},"content":"    public static final String ERROR_SESSION_EMPTY_PERSON_LIST \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"warrencxw"},"content":"            \"The list of participants in the session is currently empty.\";","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"warrencxw"},"content":"    public static final String ERROR_SESSION_PERSON_NOT_IN_LIST \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"warrencxw"},"content":"            \"The person that you have specified was not found in this session.\";","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"froststein"},"content":"    // Profile","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"froststein"},"content":"    public static final String ERROR_PROFILE_DUPLICATE_SESSION \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"froststein"},"content":"            \"There is another session with the same name, please try another name.\";","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"froststein"},"content":"    public static final String ERROR_PROFILE_DUPLICATE_NAME \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"froststein"},"content":"            \"There seems to be duplicates in the session you are trying to create, please try again.\";","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"froststein"},"content":"    public static final String ERROR_PROFILE_SESSION_LIST_EMPTY \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"froststein"},"content":"            \"There are no sessions currently stored.\";","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"froststein"},"content":"    public static final String ERROR_PROFILE_SESSION_NOT_IN_LIST \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"froststein"},"content":"            \"The session that you have specified was not found.\";","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"ivanaitzliddat"},"content":"    //Activity","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"ivanaitzliddat"},"content":"    public static final String ERROR_ACTIVITY_INACCURATE_INVOLVED_LIST \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"ivanaitzliddat"},"content":"            \"The list of involved persons list is inaccurate \"","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"ivanaitzliddat"},"content":"                    + \"as at least one person did not participate in the activity.\";","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"ivanaitzliddat"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"ivanaitzliddat"},"content":"    //Activity Create Command","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"ivanaitzliddat"},"content":"    public static final String ERROR_ACTIVITYCREATE_INVOLVED_AND_COST_DIFFERENT_LENGTH \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"ivanaitzliddat"},"content":"            \"There seems to be a discrepancy between number of people involved and the costs per person\";","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"ivanaitzliddat"},"content":"    public static final String ERROR_ACTIVITYCREATE_HAS_BOTH_COST_AND_COST_LIST \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"ivanaitzliddat"},"content":"            \"Please only include either a total cost or a list of costs\";","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"ivanaitzliddat"},"content":"    public static final String ERROR_ACTIVITYCREATE_MISSING_COST_AND_COST_LIST \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"ivanaitzliddat"},"content":"            \"Please include either a cost or a list of costs.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"matheril"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"ivanaitzliddat":13,"warrencxw":43,"froststein":10,"matheril":31}},{"path":"src/main/java/seedu/splitlah/ui/TextUI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package seedu.splitlah.ui;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"matheril"},"content":"import java.io.InputStream;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"matheril"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"matheril"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"matheril"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"warrencxw"},"content":" * Represents a user interface that reads from and writes to the command line.","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"matheril"},"content":" *","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"matheril"},"content":" * @author Saurav","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"matheril"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"matheril"},"content":"public class TextUI {","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"warrencxw"},"content":"    ","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"matheril"},"content":"    Scanner in;","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"matheril"},"content":"    PrintStream out;","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"matheril"},"content":"    public TextUI(InputStream in, PrintStream out) {","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"matheril"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"matheril"},"content":"        this.out \u003d out;","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"matheril"},"content":"    public TextUI() {","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"matheril"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"matheril"},"content":"        out \u003d new PrintStream(System.out);","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"matheril"},"content":"    public void printlnMessage(String message) {","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"matheril"},"content":"        out.println(message);","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"matheril"},"content":"    public String readNextLine() {","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"matheril"},"content":"        return in.nextLine();","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"matheril"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"matheril"},"content":"     * Requests confirmation from the user via the user interface.","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"matheril"},"content":"     * The user may confirm by inputting Y/y/yes to the interface.","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"matheril"},"content":"     * The user may reject by inputting N/n/no to the interface.","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"matheril"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"matheril"},"content":"     * @param message A message to be printed initially to the user interface.","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"matheril"},"content":"     * @return true if the user confirms","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"matheril"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"matheril"},"content":"    public boolean getUserConfirmation(String message) {","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"matheril"},"content":"        printDivider();","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"matheril"},"content":"        printlnMessage(message);","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"matheril"},"content":"        printlnMessage(Message.PROMPT_TEXTUI_REQUEST_CONFIRMATION);","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"matheril"},"content":"        String confirmation \u003d readNextLine().toLowerCase();","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"matheril"},"content":"        printDivider();","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"matheril"},"content":"        while (true) {","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"matheril"},"content":"            switch (confirmation) {","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"matheril"},"content":"            case (\"yes\"):","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"matheril"},"content":"                // fallthrough","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"matheril"},"content":"            case (\"y\"):","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"matheril"},"content":"                return true;","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"matheril"},"content":"            case (\"no\"):","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"matheril"},"content":"                // fallthrough","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"matheril"},"content":"            case (\"n\"):","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"matheril"},"content":"                printlnMessage(Message.ERROR_TEXTUI_USER_DID_NOT_CONFIRM);","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"matheril"},"content":"                return false;","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"matheril"},"content":"            default:","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"matheril"},"content":"                printlnMessage(Message.ERROR_TEXTUI_REENTER_INPUT);","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"matheril"},"content":"            }","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"matheril"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"matheril"},"content":"    public void printWelcome() {","lastModifiedDate":"2022-03-03"},{"lineNumber":67,"author":{"gitId":"matheril"},"content":"        printDivider();","lastModifiedDate":"2022-03-03"},{"lineNumber":68,"author":{"gitId":"warrencxw"},"content":"        out.println(Message.ASCII_TEXTUI_LOGO);","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"matheril"},"content":"        out.println(\"Welcome to Splitlah!\");","lastModifiedDate":"2022-03-03"},{"lineNumber":70,"author":{"gitId":"matheril"},"content":"        printDivider();","lastModifiedDate":"2022-03-03"},{"lineNumber":71,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":72,"author":{"gitId":"matheril"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":73,"author":{"gitId":"matheril"},"content":"    private void printDivider() {","lastModifiedDate":"2022-03-03"},{"lineNumber":74,"author":{"gitId":"matheril"},"content":"        out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-03"},{"lineNumber":75,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":76,"author":{"gitId":"matheril"},"content":"    ","lastModifiedDate":"2022-03-03"},{"lineNumber":77,"author":{"gitId":"warrencxw"},"content":"    public void printHelpMenu() {","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"warrencxw"},"content":"        out.println(Message.MESSAGE_TEXTUI_HELP_MENU);","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"matheril"},"content":"    public void printFarewell() {","lastModifiedDate":"2022-03-03"},{"lineNumber":82,"author":{"gitId":"matheril"},"content":"        printDivider();","lastModifiedDate":"2022-03-03"},{"lineNumber":83,"author":{"gitId":"warrencxw"},"content":"        out.println(Message.ASCII_TEXTUI_LOGO);","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"matheril"},"content":"        out.println(\"Goodbye!\");","lastModifiedDate":"2022-03-03"},{"lineNumber":85,"author":{"gitId":"matheril"},"content":"        printDivider();","lastModifiedDate":"2022-03-03"},{"lineNumber":86,"author":{"gitId":"matheril"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":87,"author":{"gitId":"matheril"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"warrencxw":8,"froststein":1,"matheril":78}},{"path":"src/main/java/seedu/splitlah/util/PersonCostPair.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"warrencxw"},"content":"package seedu.splitlah.util;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"warrencxw"},"content":"import seedu.splitlah.data.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"warrencxw"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"warrencxw"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"warrencxw"},"content":" * Represents a total cost that a person must pay or receive to settle the transactions for the session.","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"warrencxw"},"content":" * A negative value represents a debt to pay another person with a positive value.","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"warrencxw"},"content":" * ","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"warrencxw"},"content":" * @author Warren","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"warrencxw"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"warrencxw"},"content":"public class PersonCostPair implements Comparable\u003cPersonCostPair\u003e {","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"warrencxw"},"content":"    private Person person;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"warrencxw"},"content":"    private double cost;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"warrencxw"},"content":"    private boolean isProcessed;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"warrencxw"},"content":"    public Person getPerson() {","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"warrencxw"},"content":"        return person;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"warrencxw"},"content":"    public double getCost() {","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"warrencxw"},"content":"        return cost;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"warrencxw"},"content":"    public void setCost(double cost) {","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"warrencxw"},"content":"        this.cost \u003d cost;","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"warrencxw"},"content":"    public boolean isProcessed() {","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"warrencxw"},"content":"        return isProcessed;","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"warrencxw"},"content":"    public void setProcessed(boolean processed) {","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"warrencxw"},"content":"        isProcessed \u003d processed;","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"warrencxw"},"content":"     * Returns an integer to identify whether this PersonCostPair object should be ordered","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"warrencxw"},"content":"     * before or after another object.","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"warrencxw"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"warrencxw"},"content":"     * @param personCostPair The specified object that this object is comparing to.","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"warrencxw"},"content":"     * @return A value less than 0 if this object\u0027s cost is smaller than the specified object\u0027s cost, ","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"warrencxw"},"content":"     *         a value greater than 0 if this object\u0027s cost is larger,","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"warrencxw"},"content":"     *         and 0 if both objects\u0027 costs are numerically equal.","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"warrencxw"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"warrencxw"},"content":"    public int compareTo(PersonCostPair personCostPair) {","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"warrencxw"},"content":"        return Double.compare(cost, personCostPair.getCost());","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"warrencxw"},"content":"     * A Comparator that would sort two PersonCostPair objects in ascending order of their costs. ","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"warrencxw"},"content":"    public static Comparator\u003cPersonCostPair\u003e PersonCostPairComparator \u003d new Comparator\u003cPersonCostPair\u003e() {","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"warrencxw"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"warrencxw"},"content":"        public int compare(PersonCostPair personCostPair1, PersonCostPair personCostPair2) {","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"warrencxw"},"content":"            return personCostPair1.compareTo(personCostPair2);","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"warrencxw"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"warrencxw"},"content":"    };","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"warrencxw"},"content":"    public PersonCostPair(Person person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"warrencxw"},"content":"        this.person \u003d person;","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"warrencxw"},"content":"        this.cost \u003d person.getTotalCost();","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"warrencxw"},"content":"        this.isProcessed \u003d false;","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"warrencxw"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"warrencxw":68}},{"path":"src/test/java/seedu/splitlah/SplitLahTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package seedu.splitlah;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"froststein"},"content":"class SplitLahTest {","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"froststein":2,"-":10}},{"path":"src/test/java/seedu/splitlah/command/SessionCreateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"froststein"},"content":"package seedu.splitlah.command;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"froststein"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"froststein"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"froststein"},"content":"import seedu.splitlah.data.Manager;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"froststein"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"froststein"},"content":"class SessionCreateCommandTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"froststein"},"content":"    Manager manager \u003d new Manager();","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"froststein"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"froststein"},"content":"     * Creates 2 sessions that is stored and managed by the Manager object.","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"froststein"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"froststein"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"froststein"},"content":"    void setUp() {","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"froststein"},"content":"        String sessionOneArgs \u003d \"session /create /n Class outing /d 2022-02-15 /pl Alice Bob\";","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"froststein"},"content":"        String sessionTwoArgs \u003d \"session /create /n Family gathering /d 2022-02-20  /pl Eves Mallory\";","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"froststein"},"content":"        Command createSessionOne \u003d SessionCreateCommand.prepare(sessionOneArgs);","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"froststein"},"content":"        createSessionOne.run(manager);","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"froststein"},"content":"        Command createSessionTwo \u003d SessionCreateCommand.prepare(sessionTwoArgs);","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"froststein"},"content":"        createSessionTwo.run(manager);","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"froststein"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"froststein"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"froststein"},"content":"     * Checks if a session is created with duplicated person names.","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"froststein"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"froststein"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"froststein"},"content":"    public void run_hasOneNameDuplicate_sessionListSizeRemainsTwo() {","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"froststein"},"content":"        String userInput \u003d \"session /create /n Class outing /d 2022-02-23 /pl Alice Alice Bob\";","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"froststein"},"content":"        Command command \u003d SessionCreateCommand.prepare(userInput);","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"froststein"},"content":"        command.run(manager);","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"froststein"},"content":"        assertEquals(2, manager.getProfile().getSessionList().size());","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"froststein"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"froststein"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"froststein":37}},{"path":"src/test/java/seedu/splitlah/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"warrencxw"},"content":"package seedu.splitlah.parser;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"warrencxw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"warrencxw"},"content":"import seedu.splitlah.command.Command;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"warrencxw"},"content":"import seedu.splitlah.command.InvalidCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"warrencxw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"warrencxw"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"warrencxw"},"content":"class ParserTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"warrencxw"},"content":"    // getCommand()","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"warrencxw"},"content":"     * Checks if an InvalidCommand is returned when an empty String object is provided by the user.","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"warrencxw"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"warrencxw"},"content":"    void getCommand_emptyString_InvalidCommand() {","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"warrencxw"},"content":"        String emptyString \u003d \"\";","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"warrencxw"},"content":"        Command command \u003d Parser.getCommand(emptyString);","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"warrencxw"},"content":"        assertEquals(InvalidCommand.class, command.getClass());","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"warrencxw"},"content":"     * Checks if an InvalidCommand is returned when a String object containing only whitespaces is provided by the user.","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"warrencxw"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"warrencxw"},"content":"    void getCommand_whitespaceInput_InvalidCommand() {","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"warrencxw"},"content":"        String whitespaceString \u003d \"     \";","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"warrencxw"},"content":"        Command command \u003d Parser.getCommand(whitespaceString);","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"warrencxw"},"content":"        assertEquals(InvalidCommand.class, command.getClass());","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"warrencxw"},"content":"    // getCommandType()","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"warrencxw"},"content":"     * Checks if an empty String object is returned as the command string","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"warrencxw"},"content":"     * when an empty String object is provided by the user.","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"warrencxw"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"warrencxw"},"content":"    void getCommandType_emptyStringInput_emptyString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"warrencxw"},"content":"        String emptyString \u003d \"\";","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"warrencxw"},"content":"        String output \u003d Parser.getCommandType(emptyString);","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"warrencxw"},"content":"        assertEquals(\"\", output);","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"warrencxw"},"content":"     * Checks if a String object containing identical contents as the input is returned as the command string","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"warrencxw"},"content":"     * when a single token of input is provided by the user.","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"warrencxw"},"content":"     * Matching command types: \"help\", \"list\", \"exit\"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"warrencxw"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"warrencxw"},"content":"    void getCommandType_singleTokenInput_inputEqualsOutput() {","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"warrencxw"},"content":"        String singleTokenString \u003d \"randomTest123\";","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"warrencxw"},"content":"        String output \u003d Parser.getCommandType(singleTokenString);","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"warrencxw"},"content":"        assertEquals(singleTokenString, output);","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"warrencxw"},"content":"     * Checks if null is returned when an input, with a second token does not start with a delimiter,","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"warrencxw"},"content":"     * is provided by the user.","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"warrencxw"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"warrencxw"},"content":"    void getCommandType_doubleTokenNoDelimiterInput_null() {","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"warrencxw"},"content":"        String doubleTokenWithNoDelimiterString \u003d \"help apple\";","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"warrencxw"},"content":"        String output \u003d Parser.getCommandType(doubleTokenWithNoDelimiterString);","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"warrencxw"},"content":"        assertNull(output);","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"warrencxw"},"content":"    // getRemainingArgument()","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"warrencxw"},"content":"     * Checks if an empty String object is returned as the remaining arguments of the command","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"warrencxw"},"content":"     * when an empty String object is provided by the user.","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"warrencxw"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"warrencxw"},"content":"    void getRemainingArgument_emptyStringInput_emptyString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"warrencxw"},"content":"        String emptyString \u003d \"\";","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"warrencxw"},"content":"        String output \u003d Parser.getRemainingArgument(emptyString);","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"warrencxw"},"content":"        assertEquals(\"\", output);","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"warrencxw"},"content":"     * Checks if an empty String object is returned as the remaining arguments of the command","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"warrencxw"},"content":"     * when an input of only a single token is provided by the user.","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"warrencxw"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"warrencxw"},"content":"    void getRemainingArgument_singleTokenInput_emptyString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"warrencxw"},"content":"        String singleTokenString \u003d \"randomTest123\";","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"warrencxw"},"content":"        String output \u003d Parser.getRemainingArgument(singleTokenString);","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"warrencxw"},"content":"        assertEquals(\"\", output);","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"warrencxw"},"content":"     * Checks if an empty String object is returned as the remaining arguments of the command","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"warrencxw"},"content":"     * when an input of only two tokens is provided by the user.","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"warrencxw"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"warrencxw"},"content":"    void getRemainingArgument_twoInputTokens_emptyString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"warrencxw"},"content":"        String twoInputTokensString \u003d \"brownFox jumpsOver\";","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"warrencxw"},"content":"        String output \u003d Parser.getRemainingArgument(twoInputTokensString);","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"warrencxw"},"content":"        assertEquals(\"\", output);","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"warrencxw"},"content":"     * Checks if the third token is correctly returned as the remaining arguments of the command","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"warrencxw"},"content":"     * when an input of three tokens and multiple whitespaces is provided by the user.","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"warrencxw"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"warrencxw"},"content":"    void getRemainingArgument_threeInputTokensAndWhitespace_thirdToken() {","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"warrencxw"},"content":"        String threeInputTokensAndWhitespaceString \u003d \"brownFox jumpsOver theLazyDog  \";","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"warrencxw"},"content":"        String output \u003d Parser.getRemainingArgument(threeInputTokensAndWhitespaceString);","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"warrencxw"},"content":"        assertEquals(\"theLazyDog\", output);","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"warrencxw"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"warrencxw"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"warrencxw"},"content":"     * Checks if the third token and onwards is correctly returned as the remaining arguments of the command","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"warrencxw"},"content":"     * when an input of four tokens is provided by the user.","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"warrencxw"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"warrencxw"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"warrencxw"},"content":"    void getRemainingArgument_fourInputTokens_thirdToken() {","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"warrencxw"},"content":"        String fourInputTokensString \u003d \"brownFox jumpsOver theLazy Dog\";","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"warrencxw"},"content":"        String output \u003d Parser.getRemainingArgument(fourInputTokensString);","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"warrencxw"},"content":"        assertEquals(\"theLazy Dog\", output);","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"warrencxw"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"warrencxw"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"warrencxw":123}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"matheril"},"content":"java  -jar $(find ../build/libs -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"diff EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"matheril":1}}]
