[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"   * In the same dialog, you _may have to set the Project language level_ field to the SDK default option.","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"2. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"3. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"hlwang56"},"content":"* To run _I/O redirection_ tests (aka _Text ui tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"-":64,"hlwang56":1}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"hlwang56"},"content":"    mainClassName \u003d \"seedu.planitarium.PlanITarium\"","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"hlwang56"},"content":"    archiveBaseName \u003d \"planitarium\"","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":44,"hlwang56":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"HansHengGit"},"content":"| Display                                             |   Name   |              Github Profile              |             Portfolio             |","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"HansHengGit"},"content":"|-----------------------------------------------------|:--------:|:----------------------------------------:|:---------------------------------:|","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"HansHengGit"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wei Jun  | [Github](https://github.com/Teanweijun)  | [Portfolio](docs/team/johndoe.md) |","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"HansHengGit"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) | Si Zheng |   [Github](https://github.com/1szheng)   | [Portfolio](docs/team/johndoe.md) |","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"HansHengGit"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Hans   | [Github](https://github.com/HansHengGit) | [Portfolio](docs/team/johndoe.md) |","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"HansHengGit"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Huilin  |  [Github](https://github.com/hlwang56)   | [Portfolio](docs/team/johndoe.md) |","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"HansHengGit"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jia Rong |  [Github](https://github.com/tjiarong)   | [Portfolio](docs/team/johndoe.md) |","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"HansHengGit":7,"-":2}},{"path":"src/main/java/seedu/planitarium/PlanITarium.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HansHengGit"},"content":"package seedu.planitarium;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"teanweijun"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"teanweijun"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.commands.Command;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.commands.CommandFactory;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.person.PersonList;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.ui.UI;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"HansHengGit"},"content":"public class PlanITarium {","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"hlwang56"},"content":"    protected Scanner userInput;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"hlwang56"},"content":"    protected Command command;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"hlwang56"},"content":"    protected PersonList personList \u003d new PersonList();","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"hlwang56"},"content":"    protected CommandFactory commandFactory \u003d new CommandFactory();","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"teanweijun"},"content":"    protected static ProjectLogger logger;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"teanweijun"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"teanweijun"},"content":"        initialisePlanitarium();","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"teanweijun"},"content":"        new PlanITarium().run();","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"hlwang56"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"hlwang56"},"content":"     * Runs the entire program.","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"hlwang56"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"teanweijun"},"content":"    public void run() {","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"teanweijun"},"content":"        userInput \u003d new Scanner(System.in);","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"hlwang56"},"content":"        while (true) {","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"hlwang56"},"content":"            try {","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"hlwang56"},"content":"                command \u003d commandFactory.getCommand(userInput.nextLine(), personList);","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"teanweijun"},"content":"                logger.getLogger().log(Level.INFO, \"Next line has been read\");","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"teanweijun"},"content":"                System.out.println(UI.HORI_LINE);","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"hlwang56"},"content":"                command.execute();","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"teanweijun"},"content":"                System.out.println(UI.HORI_LINE);","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"hlwang56"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"hlwang56"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"hlwang56"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"HansHengGit"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"hlwang56"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"hlwang56"},"content":"     * Initializes the program with logger.","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"hlwang56"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"hlwang56"},"content":"    private static void initialisePlanitarium() {","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"teanweijun"},"content":"        logger \u003d new ProjectLogger(PlanITarium.class.getName(), \"PlanITarium.log\");","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"teanweijun"},"content":"        logger.getLogger().log(Level.INFO, \"Logger initialised\");","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"hlwang56"},"content":"        UI.printWelcomeMessage();","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"HansHengGit"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"teanweijun":20,"HansHengGit":6,"hlwang56":23}},{"path":"src/main/java/seedu/planitarium/ProjectLogger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"teanweijun"},"content":"package seedu.planitarium;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"teanweijun"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"teanweijun"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"teanweijun"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"teanweijun"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"teanweijun"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.ui.UI;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"teanweijun"},"content":"public class ProjectLogger {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"teanweijun"},"content":"    private Logger logger;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"teanweijun"},"content":"    private static final String INIT_ERROR_MESSAGE \u003d \"Oops, logger can\u0027t be initialised!\";","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"teanweijun"},"content":"    public ProjectLogger(String className, String fileName) {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"teanweijun"},"content":"        this.logger \u003d Logger.getLogger(className);","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"teanweijun"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"teanweijun"},"content":"            initialiseLogger(fileName);","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"teanweijun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"teanweijun"},"content":"            UI ui \u003d new UI();","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"teanweijun"},"content":"            ui.printMsg(INIT_ERROR_MESSAGE);","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"teanweijun"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"teanweijun"},"content":"    public Logger getLogger() {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"teanweijun"},"content":"        return this.logger;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"teanweijun"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"teanweijun"},"content":"     * Initialize a logger for the program.","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"teanweijun"},"content":"     * ","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"teanweijun"},"content":"     * @throws IOException if there\u0027s exception for reading or writing.","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"teanweijun"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"teanweijun"},"content":"    private void initialiseLogger(String fileName) throws IOException {","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"teanweijun"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"teanweijun"},"content":"        this.logger.setLevel(Level.ALL);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"teanweijun"},"content":"        FileHandler fh \u003d new FileHandler(fileName);","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"teanweijun"},"content":"        fh.setFormatter(new SimpleFormatter());","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"teanweijun"},"content":"        fh.setLevel(Level.ALL);","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"teanweijun"},"content":"        this.logger.addHandler(fh);","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"teanweijun"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"teanweijun":41,"hlwang56":2}},{"path":"src/main/java/seedu/planitarium/commands/AddPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hlwang56"},"content":"package seedu.planitarium.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"1szheng"},"content":"import seedu.planitarium.exceptions.DuplicateDelimiterException;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.exceptions.MissingDelimiterException;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.parser.Parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.person.PersonList;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"hlwang56"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"hlwang56"},"content":" * Executes the add command and add a person to the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"hlwang56"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"hlwang56"},"content":"public class AddPersonCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"hlwang56"},"content":"    protected static final String NAME_NOT_NULL \u003d \"Name should not be null\";","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"hlwang56"},"content":"    protected static final String PERSONLIST_NOT_NULL \u003d \"Personlist should not be null\";","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"hlwang56"},"content":"    protected String name;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"1szheng"},"content":"    public AddPersonCommand(String userInput, PersonList personList)","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"1szheng"},"content":"                throws MissingDelimiterException, DuplicateDelimiterException {","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"hlwang56"},"content":"        super(userInput, personList);","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"hlwang56"},"content":"        this.name \u003d Parser.parseName(userInput);","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"hlwang56"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"hlwang56"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"hlwang56"},"content":"    public void execute() throws Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"hlwang56"},"content":"        assert (name !\u003d null) : NAME_NOT_NULL;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"hlwang56"},"content":"        assert (personList !\u003d null) : PERSONLIST_NOT_NULL;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"hlwang56"},"content":"        personList.addPerson(name);","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"hlwang56"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"hlwang56"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"1szheng":3,"hlwang56":26}},{"path":"src/main/java/seedu/planitarium/commands/AddRecordCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hlwang56"},"content":"package seedu.planitarium.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.exceptions.UnknownException;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.parser.Parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.person.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.person.PersonList;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"hlwang56"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"hlwang56"},"content":" * Executes the add command and add an income or an expenditure record to a particular","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"teanweijun"},"content":" * person in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"hlwang56"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"hlwang56"},"content":"public class AddRecordCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"hlwang56"},"content":"    protected static final String ADD_INCOME_CMD \u003d \"addin\";","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"hlwang56"},"content":"    protected static final String ADD_SPENT_CMD \u003d \"addout\";","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"hlwang56"},"content":"    protected static final String DESCRIPTION_NOT_NULL \u003d \"Description should not be empty\";","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"hlwang56"},"content":"    protected static final String INPUT_NOT_NULL \u003d \"Input should not be empty\";","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"hlwang56"},"content":"    protected static final String KEYWORD_NOT_NULL \u003d \"Keywords should not be empty\";","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"hlwang56"},"content":"    protected static final String PERSON_NOT_NULL \u003d \"The person is not found\";","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"hlwang56"},"content":"    protected static final String PERSONLIST_NOT_NULL \u003d \"Personlist should not be null\";","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"hlwang56"},"content":"    protected static final String USER_INDEX_NOT_VALID \u003d \"User index should be valid\";","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"hlwang56"},"content":"    protected String keyword;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"hlwang56"},"content":"    protected String description;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"hlwang56"},"content":"    protected Double amount;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"hlwang56"},"content":"    protected int uid;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"hlwang56"},"content":"    protected Person newPerson;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"hlwang56"},"content":"    public AddRecordCommand(String userInput, PersonList personList) throws Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"hlwang56"},"content":"        super(userInput, personList);","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"hlwang56"},"content":"        keyword \u003d Parser.parseKeyword(userInput);","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"hlwang56"},"content":"        description \u003d Parser.parseDescription(userInput);","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"hlwang56"},"content":"        uid \u003d Parser.getValidUserIndex(Parser.parseUserIndex(userInput), personList);","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"hlwang56"},"content":"        assert (uid \u003c 1) : USER_INDEX_NOT_VALID;","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"hlwang56"},"content":"        newPerson \u003d personList.getPerson(uid);","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"hlwang56"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"hlwang56"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"hlwang56"},"content":"    public void execute() throws Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"hlwang56"},"content":"        assert (keyword !\u003d null) : KEYWORD_NOT_NULL;","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"hlwang56"},"content":"        assert (userInput !\u003d null) : INPUT_NOT_NULL;","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"hlwang56"},"content":"        assert (newPerson !\u003d null) : PERSON_NOT_NULL;","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"hlwang56"},"content":"        assert (personList !\u003d null) : PERSONLIST_NOT_NULL;","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"hlwang56"},"content":"        assert (description !\u003d null) : DESCRIPTION_NOT_NULL;","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"hlwang56"},"content":"        switch (keyword) {","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"hlwang56"},"content":"        case ADD_INCOME_CMD:","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"hlwang56"},"content":"            amount \u003d Parser.getValidMoney(Parser.parseIncome(userInput));","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"hlwang56"},"content":"            newPerson.addIncome(description, amount);","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"hlwang56"},"content":"            break;","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"hlwang56"},"content":"        case ADD_SPENT_CMD:","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"hlwang56"},"content":"            amount \u003d Parser.getValidMoney(Parser.parseExpenditure(userInput));","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"hlwang56"},"content":"            newPerson.addExpend(description, amount);","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"hlwang56"},"content":"            break;","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"hlwang56"},"content":"        default:","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"hlwang56"},"content":"            throw new UnknownException();","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"hlwang56"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"hlwang56"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"hlwang56"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"teanweijun":1,"hlwang56":58}},{"path":"src/main/java/seedu/planitarium/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hlwang56"},"content":"package seedu.planitarium.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.person.PersonList;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.ui.UI;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"hlwang56"},"content":"public class Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"hlwang56"},"content":"    protected static final String INPUT_NOT_NULL \u003d \"Input should not be empty\";","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"hlwang56"},"content":"    protected String userInput;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"hlwang56"},"content":"    protected UI ui \u003d new UI();","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"hlwang56"},"content":"    protected PersonList personList;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"hlwang56"},"content":"    public Command(String userInput, PersonList personList) {","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"hlwang56"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"hlwang56"},"content":"        this.personList \u003d personList;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"hlwang56"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"hlwang56"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"hlwang56"},"content":"     * Executes the instruction according to the input after parsing.","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"hlwang56"},"content":"     * @throws Exception if the instruction cannot be executed.","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"hlwang56"},"content":"    */","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"hlwang56"},"content":"    public void execute() throws Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"hlwang56"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"hlwang56"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"hlwang56":26}},{"path":"src/main/java/seedu/planitarium/commands/CommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hlwang56"},"content":"package seedu.planitarium.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.exceptions.UnknownException;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.parser.Parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.person.PersonList;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"hlwang56"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"hlwang56"},"content":" * Generates different command classes for execution according to user instruction.","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"hlwang56"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"hlwang56"},"content":"public class CommandFactory {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"hlwang56"},"content":"    protected static final String ADD_PERSON_CMD \u003d \"add\";","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"hlwang56"},"content":"    protected static final String DELETE_PERSON_CMD \u003d \"delete\";","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"hlwang56"},"content":"    protected static final String ADD_INCOME_CMD \u003d \"addin\";","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"hlwang56"},"content":"    protected static final String DELETE_INCOME_CMD \u003d \"deletein\";","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"hlwang56"},"content":"    protected static final String ADD_SPENT_CMD \u003d \"addout\";","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"hlwang56"},"content":"    protected static final String DELETE_SPEND_CMD \u003d \"deleteout\";","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"hlwang56"},"content":"    protected static final String CALC_REMAIN \u003d \"remain\";","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"hlwang56"},"content":"    protected static final String LIST \u003d \"list\";","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"hlwang56"},"content":"    protected static final String EXIT \u003d \"bye\";","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"hlwang56"},"content":"    public CommandFactory() {","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"hlwang56"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"hlwang56"},"content":"    public Command getCommand(String userInput, PersonList personList) throws UnknownException {","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"hlwang56"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"hlwang56"},"content":"            Command newCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"hlwang56"},"content":"            switch (Parser.parseKeyword(userInput)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"hlwang56"},"content":"            case ADD_PERSON_CMD:","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"hlwang56"},"content":"                newCommand \u003d new AddPersonCommand(userInput, personList);","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"hlwang56"},"content":"                break;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"hlwang56"},"content":"            case DELETE_PERSON_CMD:","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"hlwang56"},"content":"                newCommand \u003d new DeletePersonCommand(userInput, personList);","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"hlwang56"},"content":"                break;","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"hlwang56"},"content":"            case ADD_INCOME_CMD:","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"hlwang56"},"content":"            case ADD_SPENT_CMD:","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"hlwang56"},"content":"                newCommand \u003d new AddRecordCommand(userInput, personList);","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"hlwang56"},"content":"                break;","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"hlwang56"},"content":"            case DELETE_INCOME_CMD:","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"hlwang56"},"content":"            case DELETE_SPEND_CMD:","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"hlwang56"},"content":"                newCommand \u003d new DeleteRecordCommand(userInput, personList);","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"hlwang56"},"content":"                break;","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"hlwang56"},"content":"            case CALC_REMAIN:","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"hlwang56"},"content":"                newCommand \u003d new RemainCommand(userInput, personList);","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"hlwang56"},"content":"                break;","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"hlwang56"},"content":"            case LIST:","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"hlwang56"},"content":"                newCommand \u003d new ListCommand(userInput, personList);","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"hlwang56"},"content":"                break;","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"hlwang56"},"content":"            case EXIT:","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"hlwang56"},"content":"                newCommand \u003d new ExitCommand(userInput, personList);","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"hlwang56"},"content":"                break;","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"hlwang56"},"content":"            default:","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"hlwang56"},"content":"                throw new UnknownException();","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"hlwang56"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"hlwang56"},"content":"            return newCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"hlwang56"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"hlwang56"},"content":"            throw new UnknownException();","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"hlwang56"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"hlwang56"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"hlwang56"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"hlwang56":60}},{"path":"src/main/java/seedu/planitarium/commands/DeletePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hlwang56"},"content":"package seedu.planitarium.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.exceptions.UnknownException;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.parser.Parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.person.PersonList;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"hlwang56"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"hlwang56"},"content":" * Executes the delete command and delete a person from the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"hlwang56"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"hlwang56"},"content":"public class DeletePersonCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"hlwang56"},"content":"    protected static final String USER_INDEX_NOT_VALID \u003d \"User index should be valid\";","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"hlwang56"},"content":"    protected static final String PERSONLIST_NOT_NULL \u003d \"Personlist should not be null\";","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"hlwang56"},"content":"    protected int uid;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"hlwang56"},"content":"    public DeletePersonCommand(String userInput, PersonList personList) throws Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"hlwang56"},"content":"        super(userInput, personList);","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"hlwang56"},"content":"        this.uid \u003d Parser.getValidUserIndex(Parser.parseUserIndex(userInput), personList);","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"hlwang56"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"hlwang56"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"hlwang56"},"content":"    public void execute() throws UnknownException {","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"hlwang56"},"content":"        assert (uid \u003c 1) : USER_INDEX_NOT_VALID;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"hlwang56"},"content":"        assert (personList !\u003d null) : PERSONLIST_NOT_NULL;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"hlwang56"},"content":"        personList.removePerson(uid);","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"hlwang56"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"hlwang56"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"hlwang56":28}},{"path":"src/main/java/seedu/planitarium/commands/DeleteRecordCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hlwang56"},"content":"package seedu.planitarium.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.exceptions.UnknownException;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.parser.Parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.person.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.person.PersonList;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"hlwang56"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"hlwang56"},"content":" * Executes the delete command and delete an income or an expenditure record to a particular","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"hlwang56"},"content":" * person in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"hlwang56"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"hlwang56"},"content":"public class DeleteRecordCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"hlwang56"},"content":"    protected static final String DELETE_INCOME_CMD \u003d \"deletein\";","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"hlwang56"},"content":"    protected static final String DELETE_SPEND_CMD \u003d \"deleteout\";","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"hlwang56"},"content":"    protected static final String INPUT_NOT_NULL \u003d \"Input should not be empty\";","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"hlwang56"},"content":"    protected static final String KEYWORD_NOT_NULL \u003d \"Keywords should not be empty\";","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"hlwang56"},"content":"    protected static final String USER_INDEX_NOT_VALID \u003d \"User index should be valid\";","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"hlwang56"},"content":"    protected static final String PERSON_NOT_NULL \u003d \"The person is not found\";","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"hlwang56"},"content":"    protected static final String PERSONLIST_NOT_NULL \u003d \"Personlist should not be null\";","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"hlwang56"},"content":"    protected String keyword;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"hlwang56"},"content":"    protected int index;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"hlwang56"},"content":"    protected int uid;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"hlwang56"},"content":"    protected Person newPerson;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"hlwang56"},"content":"    public DeleteRecordCommand(String userInput, PersonList personList) throws Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"hlwang56"},"content":"        super(userInput, personList);","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"hlwang56"},"content":"        keyword \u003d Parser.parseKeyword(userInput);","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"hlwang56"},"content":"        uid \u003d Parser.getValidUserIndex(Parser.parseUserIndex(userInput), personList);","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"hlwang56"},"content":"        assert (uid \u003c 1) : USER_INDEX_NOT_VALID;","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"hlwang56"},"content":"        newPerson \u003d personList.getPerson(uid);","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"hlwang56"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"hlwang56"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"hlwang56"},"content":"    public void execute() throws Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"hlwang56"},"content":"        assert (keyword !\u003d null) : KEYWORD_NOT_NULL;","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"hlwang56"},"content":"        assert (userInput !\u003d null) : INPUT_NOT_NULL;","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"hlwang56"},"content":"        assert (newPerson !\u003d null) : PERSON_NOT_NULL;","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"hlwang56"},"content":"        assert (personList !\u003d null) : PERSONLIST_NOT_NULL;","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"hlwang56"},"content":"        switch (keyword) {","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"hlwang56"},"content":"        case DELETE_INCOME_CMD:","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"hlwang56"},"content":"            index \u003d Parser.getValidIncomeIndex(Parser.parseRecordIndex(userInput), newPerson);","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"hlwang56"},"content":"            newPerson.deleteIncome(index);","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"hlwang56"},"content":"            break;","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"hlwang56"},"content":"        case DELETE_SPEND_CMD:","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"hlwang56"},"content":"            index \u003d Parser.getValidExpenditureIndex(Parser.parseRecordIndex(userInput), newPerson);","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"hlwang56"},"content":"            newPerson.deleteExpend(index);","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"hlwang56"},"content":"            break;","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"hlwang56"},"content":"        default:","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"hlwang56"},"content":"            throw new UnknownException();","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"hlwang56"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"hlwang56"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"hlwang56"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"hlwang56":52}},{"path":"src/main/java/seedu/planitarium/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hlwang56"},"content":"package seedu.planitarium.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.person.PersonList;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"hlwang56"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"hlwang56"},"content":" * Executes exit command and exit the program.","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"hlwang56"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"hlwang56"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"hlwang56"},"content":"    public ExitCommand(String userInput, PersonList personList) {","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"hlwang56"},"content":"        super(userInput, personList);","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"hlwang56"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"hlwang56"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"hlwang56"},"content":"    public void execute() {","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"hlwang56"},"content":"        ui.exit();","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"teanweijun"},"content":"        System.out.println(ui.HORI_LINE);","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"hlwang56"},"content":"        System.exit(0);","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"hlwang56"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"hlwang56"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"teanweijun":1,"hlwang56":19}},{"path":"src/main/java/seedu/planitarium/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hlwang56"},"content":"package seedu.planitarium.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.person.PersonList;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"hlwang56"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"hlwang56"},"content":" * Executes list command and list all the information stored in the personlist.","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"hlwang56"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"hlwang56"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"hlwang56"},"content":"    protected static final String PERSONLIST_NOT_NULL \u003d \"Personlist should not be null\";","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"hlwang56"},"content":"    public ListCommand(String userInput, PersonList personList) {","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"hlwang56"},"content":"        super(userInput, personList);","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"hlwang56"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"hlwang56"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"hlwang56"},"content":"    public void execute() {","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"hlwang56"},"content":"        assert (personList !\u003d null) : PERSONLIST_NOT_NULL;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"hlwang56"},"content":"        personList.list();","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"hlwang56"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"hlwang56"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"hlwang56":21}},{"path":"src/main/java/seedu/planitarium/commands/RemainCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hlwang56"},"content":"package seedu.planitarium.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.person.PersonList;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"hlwang56"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"hlwang56"},"content":" * Executes remain command and calculate the remaining money according to","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"hlwang56"},"content":" * income records and expenditure records.","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"hlwang56"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"hlwang56"},"content":"public class RemainCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"hlwang56"},"content":"    protected static final String PERSONLIST_NOT_NULL \u003d \"Personlist should not be null\";","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"hlwang56"},"content":"    public RemainCommand(String userInput, PersonList personList) {","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"hlwang56"},"content":"        super(userInput, personList);","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"hlwang56"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"hlwang56"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"hlwang56"},"content":"    public void execute() {","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"hlwang56"},"content":"        assert (personList !\u003d null) : PERSONLIST_NOT_NULL;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"teanweijun"},"content":"        personList.printRemain();","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"hlwang56"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"hlwang56"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"teanweijun":1,"hlwang56":21}},{"path":"src/main/java/seedu/planitarium/exceptions/DuplicateDelimiterException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"1szheng"},"content":"package seedu.planitarium.exceptions;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"1szheng"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"1szheng"},"content":" * Thrown to indicate that a string has too many of a given delimiter (character sequence).","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"1szheng"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"1szheng"},"content":"public class DuplicateDelimiterException extends Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"1szheng"},"content":"    protected static final String ERROR_MSG \u003d \"Too many delimiter `%s`\";","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"1szheng"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"1szheng"},"content":"     * Constructs a new exception with the specified detail message.","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"1szheng"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"1szheng"},"content":"     * @param delimiter the missing delimiter.","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"1szheng"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"1szheng"},"content":"    public DuplicateDelimiterException(String delimiter) {","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"1szheng"},"content":"        super(String.format(ERROR_MSG, delimiter));","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"1szheng"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"1szheng":17}},{"path":"src/main/java/seedu/planitarium/exceptions/InvalidIndexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hlwang56"},"content":"package seedu.planitarium.exceptions;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"1szheng"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"1szheng"},"content":" * Thrown to indicate that a string cannot be converted into a valid integer index or index is out of bounds.","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"1szheng"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"1szheng"},"content":"public class InvalidIndexException extends Exception {","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"1szheng"},"content":"    protected static final String ERROR_MSG \u003d \"Invalid index: `%s`\";","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"1szheng"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"1szheng"},"content":"     * Constructs a new exception with the specified detail message.","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"1szheng"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"1szheng"},"content":"     * @param text the invalid index text.","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"1szheng"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"1szheng"},"content":"    public InvalidIndexException(String text) {","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"1szheng"},"content":"        super(String.format(ERROR_MSG, text));","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"1szheng"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"1szheng":16,"hlwang56":1}},{"path":"src/main/java/seedu/planitarium/exceptions/InvalidMoneyException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hlwang56"},"content":"package seedu.planitarium.exceptions;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"1szheng"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"1szheng"},"content":" * Thrown to indicate that a string cannot be converted into a valid monetary value in double.","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"1szheng"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"1szheng"},"content":"public class InvalidMoneyException extends Exception {","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"1szheng"},"content":"    protected static final String ERROR_MSG \u003d \"Invalid money value: `%s`\";","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"1szheng"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"1szheng"},"content":"     * Constructs a new exception with the specified detail message.","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"1szheng"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"1szheng"},"content":"     * @param text the invalid money text.","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"1szheng"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"1szheng"},"content":"    public InvalidMoneyException(String text) {","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"1szheng"},"content":"        super(String.format(ERROR_MSG, text));","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"1szheng"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"1szheng":16,"hlwang56":1}},{"path":"src/main/java/seedu/planitarium/exceptions/MissingDelimiterException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hlwang56"},"content":"package seedu.planitarium.exceptions;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"1szheng"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"1szheng"},"content":" * Thrown to indicate that a string is missing a given delimiter (character sequence).","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"1szheng"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"1szheng"},"content":"public class MissingDelimiterException extends Exception {","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"1szheng"},"content":"    protected static final String ERROR_MSG \u003d \"Missing delimiter `%s`\";","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"1szheng"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"1szheng"},"content":"     * Constructs a new exception with the specified detail message.","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"1szheng"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"1szheng"},"content":"     * @param delimiter the missing delimiter.","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"1szheng"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"1szheng"},"content":"    public MissingDelimiterException(String delimiter) {","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"1szheng"},"content":"        super(String.format(ERROR_MSG, delimiter));","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"1szheng"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"1szheng":16,"hlwang56":1}},{"path":"src/main/java/seedu/planitarium/exceptions/UnknownException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hlwang56"},"content":"package seedu.planitarium.exceptions;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"hlwang56"},"content":"public class UnknownException extends Exception {","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"hlwang56"},"content":"    protected static final String ERROR_MSG \u003d \"Sorry, please check your input again\";","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"hlwang56"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"hlwang56"},"content":"    public String toString() {","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"hlwang56"},"content":"        return ERROR_MSG;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"hlwang56"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"hlwang56"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"hlwang56":10}},{"path":"src/main/java/seedu/planitarium/expenditure/Expenditure.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HansHengGit"},"content":"package seedu.planitarium.expenditure;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"HansHengGit"},"content":"public class Expenditure {","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"HansHengGit"},"content":"    protected String description;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"HansHengGit"},"content":"    protected double amount;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"HansHengGit"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"HansHengGit"},"content":"     * Creates a new Expenditure object.","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"HansHengGit"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"HansHengGit"},"content":"     * @param description The description of an expenditure","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"HansHengGit"},"content":"     * @param amount The cost of that expenditure","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"HansHengGit"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"HansHengGit"},"content":"    public Expenditure(String description, double amount) {","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"HansHengGit"},"content":"        assert (description !\u003d null);","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"HansHengGit"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"HansHengGit"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"HansHengGit"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"HansHengGit"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"HansHengGit"},"content":"     * Returns the description of a particular expenditure.","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"HansHengGit"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"HansHengGit"},"content":"     * @return The description of an expenditure","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"HansHengGit"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"HansHengGit"},"content":"    public String getDescription() {","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"HansHengGit"},"content":"        return description;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"HansHengGit"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"HansHengGit"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"HansHengGit"},"content":"     * Returns the amount of a particular expenditure.","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"HansHengGit"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"HansHengGit"},"content":"     * @return The amount of an expenditure","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"HansHengGit"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"HansHengGit"},"content":"    public double getAmount() {","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"HansHengGit"},"content":"        return amount;","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"HansHengGit"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"HansHengGit"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"HansHengGit"},"content":"     * Returns the whole string including","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"HansHengGit"},"content":"     * the description of the expenditure and its amount in two decimal place.","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"HansHengGit"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"HansHengGit"},"content":"     * @return The string of the description and the amount of the expenditure","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"HansHengGit"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"HansHengGit"},"content":"    public String toString() {","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"HansHengGit"},"content":"        return  description + \": $\" + String.format(\"%.2f\", amount);","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"HansHengGit"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"HansHengGit"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"HansHengGit":49}},{"path":"src/main/java/seedu/planitarium/expenditure/ExpenditureList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HansHengGit"},"content":"package seedu.planitarium.expenditure;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"HansHengGit"},"content":"import seedu.planitarium.ProjectLogger;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"HansHengGit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"HansHengGit"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"HansHengGit"},"content":"public class ExpenditureList {","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"HansHengGit"},"content":"    private static int BASE_INDEX \u003d 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"HansHengGit"},"content":"    private ArrayList\u003cExpenditure\u003e expenditureArrayList;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"HansHengGit"},"content":"    private int numberOfExpenditures;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"HansHengGit"},"content":"    private ProjectLogger logger;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"HansHengGit"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"teanweijun"},"content":"     * Creates a new ExpenditureList object.","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"HansHengGit"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"HansHengGit"},"content":"    public ExpenditureList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"HansHengGit"},"content":"        this.expenditureArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"HansHengGit"},"content":"        logger \u003d new ProjectLogger(ExpenditureList.class.getName(), \"ExpenditureList.log\");","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"HansHengGit"},"content":"        logger.getLogger().log(Level.INFO, \"Logger for ExpenditureList initialised.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"HansHengGit"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"HansHengGit"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"HansHengGit"},"content":"     * Adds an expenditure record to the expenditure list.","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"HansHengGit"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"HansHengGit"},"content":"     * @param description The description of what the user had spent on","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"HansHengGit"},"content":"     * @param amount The cost for this expenditure","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"HansHengGit"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"HansHengGit"},"content":"    public void addExpenditure(String description, double amount) {","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"HansHengGit"},"content":"        logger.getLogger().log(Level.INFO, \"addExpenditure() called\");","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"HansHengGit"},"content":"        assert (description !\u003d null);","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"HansHengGit"},"content":"        logger.getLogger().log(Level.INFO, \"Passed addExpenditure() assertions\");","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"HansHengGit"},"content":"        this.expenditureArrayList.add(new Expenditure(description, amount));","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"HansHengGit"},"content":"        numberOfExpenditures++;","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"HansHengGit"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"HansHengGit"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"HansHengGit"},"content":"     * Returns the cost of a specific expenditure based on its index on the list.","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"HansHengGit"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"HansHengGit"},"content":"     * @param index The index of the expenditure on the person\u0027s expenditure list","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"HansHengGit"},"content":"     * @return The cost of the expenditure","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"HansHengGit"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"HansHengGit"},"content":"    public double getExpenditureValue(int index) {","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"HansHengGit"},"content":"        logger.getLogger().log(Level.INFO, \"getExpenditureValue() called\");","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"HansHengGit"},"content":"        assert (index \u003e\u003d BASE_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"HansHengGit"},"content":"        assert (index \u003c\u003d numberOfExpenditures);","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"HansHengGit"},"content":"        logger.getLogger().log(Level.INFO, \"Passed getExpenditureValue() assertions\");","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"HansHengGit"},"content":"        return expenditureArrayList.get(index - 1).getAmount();","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"HansHengGit"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"HansHengGit"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"HansHengGit"},"content":"     * Removes an expenditure entry based on its index on the list.","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"HansHengGit"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"HansHengGit"},"content":"     * @param index The index of the expenditure on the person\u0027s expenditure list","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"HansHengGit"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"HansHengGit"},"content":"    public void remove(int index) {","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"HansHengGit"},"content":"        logger.getLogger().log(Level.INFO, \"remove() called\");","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"HansHengGit"},"content":"        assert (index \u003e\u003d BASE_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"HansHengGit"},"content":"        assert (index \u003c\u003d numberOfExpenditures);","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"HansHengGit"},"content":"        logger.getLogger().log(Level.INFO, \"Passed remove() assertions\");","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"HansHengGit"},"content":"        expenditureArrayList.remove(index - 1);","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"HansHengGit"},"content":"        numberOfExpenditures--;","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"HansHengGit"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"HansHengGit"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"HansHengGit"},"content":"     * Returns the total cost of all expenditure in the person\u0027s list.","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"HansHengGit"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"HansHengGit"},"content":"     * @return The total cost of all expenditure in the list","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"HansHengGit"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"HansHengGit"},"content":"    public double getTotalExpenditure() {","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"HansHengGit"},"content":"        logger.getLogger().log(Level.INFO, \"getTotalExpenditure() called\");","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"HansHengGit"},"content":"        double totalAmount \u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"HansHengGit"},"content":"        for (Expenditure item : expenditureArrayList) {","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"HansHengGit"},"content":"            totalAmount +\u003d item.amount;","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"HansHengGit"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"HansHengGit"},"content":"        return totalAmount;","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"HansHengGit"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"HansHengGit"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"HansHengGit"},"content":"     * Prints all expenditure entry in the person\u0027s list.","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"HansHengGit"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"HansHengGit"},"content":"    public void printExpenditureList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"HansHengGit"},"content":"        logger.getLogger().log(Level.INFO, \"printExpenditureList() called\");","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"HansHengGit"},"content":"        int listIndex \u003d BASE_INDEX;","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"teanweijun"},"content":"        for (Expenditure item : expenditureArrayList) {","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"teanweijun"},"content":"            System.out.println(listIndex++ + \". \" + item);","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"HansHengGit"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"HansHengGit"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"HansHengGit"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"HansHengGit"},"content":"     * Returns the number of entries in the person\u0027s expenditure list.","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"HansHengGit"},"content":"     * @return The number of expenditure entries","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"HansHengGit"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"HansHengGit"},"content":"    public int getNumberOfExpenditures() {","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"HansHengGit"},"content":"        logger.getLogger().log(Level.INFO, \"getNumberOfExpenditure() called\");","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"HansHengGit"},"content":"        return numberOfExpenditures;","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"HansHengGit"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"HansHengGit"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"HansHengGit"},"content":"     * Returns the description of a specified expenditure index based on the","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"HansHengGit"},"content":"     * person\u0027s expenditure list.","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"HansHengGit"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"HansHengGit"},"content":"     * @param index The index of the expenditure on the list","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"HansHengGit"},"content":"     * @return The description of the expenditure","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"HansHengGit"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"HansHengGit"},"content":"    public String getDescription(int index) {","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"HansHengGit"},"content":"        logger.getLogger().log(Level.INFO, \"getDescription() called\");","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"HansHengGit"},"content":"        assert (index \u003e\u003d BASE_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"HansHengGit"},"content":"        assert (index \u003c\u003d numberOfExpenditures);","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"HansHengGit"},"content":"        logger.getLogger().log(Level.INFO, \"Passed getDescription() Assertions\");","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"HansHengGit"},"content":"        return expenditureArrayList.get(index - 1).getDescription();","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"HansHengGit"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"HansHengGit"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"teanweijun":3,"HansHengGit":110}},{"path":"src/main/java/seedu/planitarium/income/Income.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tjiarong"},"content":"package seedu.planitarium.income;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"tjiarong"},"content":"public class Income {","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"tjiarong"},"content":"    protected String description;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"tjiarong"},"content":"    protected double amount;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"tjiarong"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"tjiarong"},"content":"     * Initialise a new income object.","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"tjiarong"},"content":"     * @param description - Income\u0027s description","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"tjiarong"},"content":"     * @param amount - Income\u0027s amount","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"tjiarong"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"tjiarong"},"content":"    public Income(String description, double amount) {","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"tjiarong"},"content":"        assert (description !\u003d null);","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"tjiarong"},"content":"        assert (amount \u003e\u003d 0);","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"tjiarong"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"tjiarong"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"tjiarong"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"tjiarong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"tjiarong"},"content":"     * Returns the amount of the income object.","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"tjiarong"},"content":"     * @return The amount of income","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"tjiarong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"tjiarong"},"content":"    public double getAmount() {","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"tjiarong"},"content":"        return amount;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"tjiarong"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"tjiarong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"tjiarong"},"content":"     * Returns the description of the income object.","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"tjiarong"},"content":"     * @return The description of income","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"tjiarong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"tjiarong"},"content":"    public String getDescription() {","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"tjiarong"},"content":"        return description;","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"tjiarong"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"tjiarong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"tjiarong"},"content":"     * Returns the income object\u0027s description and its amount in two decimal place.","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"tjiarong"},"content":"     * @return The string of the description and the amount of the income","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"tjiarong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"tjiarong"},"content":"    public String toString() {","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"tjiarong"},"content":"        return  description + \": $\" + String.format(\"%.2f\", amount);","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"tjiarong"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"tjiarong"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"tjiarong":42}},{"path":"src/main/java/seedu/planitarium/income/IncomeList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tjiarong"},"content":"package seedu.planitarium.income;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"tjiarong"},"content":"import seedu.planitarium.ProjectLogger;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"tjiarong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"tjiarong"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"tjiarong"},"content":"public class IncomeList {","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"tjiarong"},"content":"    private ArrayList\u003cIncome\u003e incomeArrayList;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"tjiarong"},"content":"    private int numberOfIncomes;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"tjiarong"},"content":"    private ProjectLogger logger;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"tjiarong"},"content":"    public static final int ARRAY_INDEX \u003d 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"teanweijun"},"content":"    private static final String LOG_CLASS_NAME \u003d IncomeList.class.getSimpleName();","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"tjiarong"},"content":"    private static final String LOG_FILE_PATH \u003d LOG_CLASS_NAME + \".log\";","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"tjiarong"},"content":"    private static final String LOG_INIT \u003d \"Logger for \" + LOG_CLASS_NAME + \" initialised.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"tjiarong"},"content":"    private static final String LOG_ASSERT_PASSED \u003d \"Assertion passed.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"tjiarong"},"content":"    private static final String LOG_ADD_INC \u003d \"addIncome()\";","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"tjiarong"},"content":"    private static final String LOG_GET_INC_VAL \u003d \"getIncomeValue()\";","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"tjiarong"},"content":"    private static final String LOG_REMOVE \u003d \"remove()\";","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"tjiarong"},"content":"    private static final String LOG_DESC \u003d \"getDescription()\";","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"tjiarong"},"content":"    private static final String LOG_GET_NUM_INC \u003d \"getNumberOfIncomes()\";","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"tjiarong"},"content":"    private static final String LOG_GET_TOTAL_INC \u003d \"getTotalIncome()\";","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"tjiarong"},"content":"    private static final String LOG_PRINT_LIST \u003d \"printIncomeList()\";","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"tjiarong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"tjiarong"},"content":"     * Creates a new Income Object.","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"tjiarong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"tjiarong"},"content":"    public IncomeList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"tjiarong"},"content":"        this.incomeArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"tjiarong"},"content":"        logger \u003d new ProjectLogger(LOG_CLASS_NAME, LOG_FILE_PATH);","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"tjiarong"},"content":"        logger.getLogger().log(Level.INFO, LOG_INIT);","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"tjiarong"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"tjiarong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"tjiarong"},"content":"     * Creates and add a new income object to the income list.","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"tjiarong"},"content":"     * @param description The description of the user\u0027s income","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"tjiarong"},"content":"     * @param amount The income amount","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"tjiarong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"tjiarong"},"content":"    public void addIncome(String description, double amount) {","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"tjiarong"},"content":"        logger.getLogger().log(Level.INFO, LOG_ADD_INC);","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"tjiarong"},"content":"        assert (description !\u003d null);","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"tjiarong"},"content":"        assert (amount \u003e\u003d 0);","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"tjiarong"},"content":"        logger.getLogger().log(Level.INFO, LOG_ASSERT_PASSED);","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"tjiarong"},"content":"        this.incomeArrayList.add(new Income(description, amount));","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"tjiarong"},"content":"        numberOfIncomes++;","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"tjiarong"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"tjiarong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"tjiarong"},"content":"     * Returns the amount of an income object in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"tjiarong"},"content":"     * @param index The index of the income on the person\u0027s income list","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"tjiarong"},"content":"     * @return The income amount","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"tjiarong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"tjiarong"},"content":"    public double getIncomeValue(int index) {","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"tjiarong"},"content":"        logger.getLogger().log(Level.INFO, LOG_GET_INC_VAL);","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"tjiarong"},"content":"        assert (index \u003e ARRAY_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"tjiarong"},"content":"        assert (index \u003c\u003d numberOfIncomes);","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"tjiarong"},"content":"        logger.getLogger().log(Level.INFO, LOG_ASSERT_PASSED);","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"tjiarong"},"content":"        return incomeArrayList.get(index - 1).getAmount();","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"tjiarong"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"tjiarong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"tjiarong"},"content":"     * Removes an income object from list of income.","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"tjiarong"},"content":"     * @param index The index of the income on the person\u0027s income list","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"tjiarong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"tjiarong"},"content":"    public void remove(int index) {","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"tjiarong"},"content":"        logger.getLogger().log(Level.INFO, LOG_REMOVE);","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"tjiarong"},"content":"        assert (index \u003e ARRAY_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"tjiarong"},"content":"        assert (index \u003c\u003d numberOfIncomes);","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"tjiarong"},"content":"        logger.getLogger().log(Level.INFO, LOG_ASSERT_PASSED);","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"tjiarong"},"content":"        incomeArrayList.remove(index - 1);","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"tjiarong"},"content":"        numberOfIncomes--;","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"tjiarong"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"tjiarong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"tjiarong"},"content":"     * Returns the description of an income object from a","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"tjiarong"},"content":"     * person\u0027s Income list.","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"tjiarong"},"content":"     * @param index The index of the income on the list","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"tjiarong"},"content":"     * @return The description of the income","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"tjiarong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"tjiarong"},"content":"    public String getDescription(int index) {","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"tjiarong"},"content":"        logger.getLogger().log(Level.INFO, LOG_DESC);","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"tjiarong"},"content":"        assert (index \u003e ARRAY_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"tjiarong"},"content":"        assert (index \u003c\u003d numberOfIncomes);","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"tjiarong"},"content":"        logger.getLogger().log(Level.INFO, LOG_ASSERT_PASSED);","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"tjiarong"},"content":"        return incomeArrayList.get(index - 1).getDescription();","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"tjiarong"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"tjiarong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"tjiarong"},"content":"     * Returns the number of income in the person\u0027s income list.","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"tjiarong"},"content":"     * @return The number of income","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"tjiarong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"tjiarong"},"content":"    public int getNumberOfIncomes() {","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"tjiarong"},"content":"        logger.getLogger().log(Level.INFO, LOG_GET_NUM_INC);","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"tjiarong"},"content":"        return numberOfIncomes;","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"tjiarong"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"tjiarong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"tjiarong"},"content":"     * Returns the total income amount in the person\u0027s list.","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"tjiarong"},"content":"     * @return The total amount of all income in the list","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"tjiarong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"tjiarong"},"content":"    public double getTotalIncome() {","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"tjiarong"},"content":"        logger.getLogger().log(Level.INFO, LOG_GET_TOTAL_INC);","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"tjiarong"},"content":"        double totalAmount \u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"tjiarong"},"content":"        for (Income item : incomeArrayList) {","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"tjiarong"},"content":"            totalAmount +\u003d item.amount;","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"tjiarong"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"tjiarong"},"content":"        return totalAmount;","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"tjiarong"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"tjiarong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"tjiarong"},"content":"     * Prints all income in the person\u0027s income list.","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"tjiarong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"tjiarong"},"content":"    public void printIncomeList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"tjiarong"},"content":"        logger.getLogger().log(Level.INFO, LOG_PRINT_LIST);","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"tjiarong"},"content":"        int listIndex \u003d 1;","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"tjiarong"},"content":"        for (Income item : incomeArrayList) {","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"tjiarong"},"content":"            System.out.println(listIndex++ + \". \" + item);","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"tjiarong"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"tjiarong"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"tjiarong"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"teanweijun":1,"tjiarong":122}},{"path":"src/main/java/seedu/planitarium/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"1szheng"},"content":"package seedu.planitarium.parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"1szheng"},"content":"import seedu.planitarium.ProjectLogger;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"1szheng"},"content":"import seedu.planitarium.exceptions.DuplicateDelimiterException;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.exceptions.InvalidIndexException;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.exceptions.InvalidMoneyException;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.exceptions.MissingDelimiterException;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"1szheng"},"content":"import seedu.planitarium.person.Person;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"1szheng"},"content":"import seedu.planitarium.person.PersonList;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"1szheng"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"1szheng"},"content":"public class Parser {","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"1szheng"},"content":"    private static final String className \u003d Parser.class.getSimpleName();","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"1szheng"},"content":"    private static final String fileName \u003d className + \".log\";","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"1szheng"},"content":"    private static final ProjectLogger logger \u003d new ProjectLogger(className, fileName);","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"1szheng"},"content":"    public static final String DELIMITER_SPACE \u003d \" \";","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"1szheng"},"content":"    public static final String DELIMITER_NAME \u003d \"/n\";","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"1szheng"},"content":"    public static final String DELIMITER_USER_INDEX \u003d \"/u\";","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"1szheng"},"content":"    public static final String DELIMITER_DESCRIPTION \u003d \"/d\";","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"1szheng"},"content":"    public static final String DELIMITER_INCOME \u003d \"/i\";","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"1szheng"},"content":"    public static final String DELIMITER_EXPENDITURE \u003d \"/e\";","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"1szheng"},"content":"    public static final String DELIMITER_RECORD_INDEX \u003d \"/r\";","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"1szheng"},"content":"    public static final String DELIMITER_BACK \u003d \"/[ruined]\";","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"teanweijun"},"content":"    // public static final String DELIMITER_MONEY \u003d \".\";","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"1szheng"},"content":"    public static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"1szheng"},"content":"    public static final int INDEX_KEYWORD \u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"1szheng"},"content":"    public static final int INDEX_LEFT_NOT_EXIST \u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"1szheng"},"content":"    public static final int INDEX_LEFT_REMOVED \u003d 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"1szheng"},"content":"    public static final int INDEX_RIGHT_REMOVED \u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"1szheng"},"content":"    public static final int LIMIT_TWO_TOKENS \u003d 2;","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"teanweijun"},"content":"    // public static final int LIMIT_TWO_DECIMAL \u003d 2;","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"1szheng"},"content":"    public static final int MIN_USER_INDEX \u003d 1;","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"1szheng"},"content":"    public static final int MIN_EXPENDITURE_INDEX \u003d 1;","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"1szheng"},"content":"    public static final int MIN_INCOME_INDEX \u003d 1;","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"1szheng"},"content":"    public static final double MONEY_ZERO \u003d 0.0;","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"1szheng"},"content":"    private static final String ASSERT_INPUT_NOT_NULL \u003d \"User input should not be null\";","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"1szheng"},"content":"    private static final String ASSERT_OUTPUT_NOT_NULL \u003d \"Parsed output should not be null\";","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"1szheng"},"content":"    private static final String ASSERT_MONEY_NOT_NULL \u003d \"Money input should not be null\";","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"teanweijun"},"content":"    // private static final String ASSERT_MONEY_NON_NEGATIVE \u003d \"Money output should be non-negative\";","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"1szheng"},"content":"    private static final String ASSERT_USER_INDEX_NOT_NULL \u003d \"User index should not be null\";","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"1szheng"},"content":"    private static final String ASSERT_EXPENDITURE_INDEX_NOT_NULL \u003d \"Expenditure index should not be null\";","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"1szheng"},"content":"    private static final String ASSERT_INCOME_INDEX_NOT_NULL \u003d \"Income index should not be null\";","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"1szheng"},"content":"    private static final String LOG_PARSED_VALUES \u003d \"User input \u0027%s\u0027 parsed out as \u0027%s\u0027\";","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"1szheng"},"content":"    private static final String LOG_VALID_MONEY \u003d \"Converted the string \u0027%s\u0027 into \u0027%.2f\u0027\";","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"1szheng"},"content":"    private static final String LOG_INVALID_MONEY \u003d \"Invalid money of \u0027%s\u0027 caught\";","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"1szheng"},"content":"    private static final String LOG_VALID_INDEX \u003d \"Valid index \u0027%d\u0027 being returned\";","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"1szheng"},"content":"    private static final String LOG_INVALID_INDEX \u003d \"Invalid index of \u0027%s\u0027 caught\";","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"1szheng"},"content":"    private static final String LOG_INDEX_TOO_LOW \u003d \"Input index \u0027%d\u0027 is less than the minimum index of \u0027%d\u0027\";","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"1szheng"},"content":"    private static final String LOG_INDEX_TOO_HIGH \u003d \"Input index \u0027%d\u0027 is more than the maximum index of \u0027%d\u0027\";","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"1szheng"},"content":"    private static final String LOG_CHECK_INDEX_BOUNDS \u003d \"Checking index \u0027%d\u0027 for bounds violation\";","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"1szheng"},"content":"    private static final String LOG_MISSING_DELIMITER \u003d \"User input \u0027%s\u0027 is missing delimiter \u0027%s\u0027\";","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"1szheng"},"content":"    private static final String LOG_TOO_MANY_DELIMITER \u003d \"User input \u0027%s\u0027 has too many delimiters \u0027%s\u0027\";","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"1szheng"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"1szheng"},"content":"     * Returns the term surrounded by two delimiters.","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"1szheng"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"1szheng"},"content":"     * @param text           The text containing the term to be parsed.","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"1szheng"},"content":"     * @param delimiterLeft  The delimiter on the left of term.","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"1szheng"},"content":"     * @param delimiterRight The delimiter on the right of term.","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"1szheng"},"content":"     * @return A non-delimiter-surrounded term.","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"1szheng"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"1szheng"},"content":"    public static String parseDelimitedTerm(String text, String delimiterLeft, String delimiterRight) {","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"1szheng"},"content":"        String[] firstParse \u003d text.split(delimiterLeft, LIMIT_TWO_TOKENS);","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"1szheng"},"content":"        String leftRemoved;","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"1szheng"},"content":"        if (firstParse.length \u003d\u003d LIMIT_TWO_TOKENS) {","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"1szheng"},"content":"            leftRemoved \u003d firstParse[INDEX_LEFT_REMOVED];","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"1szheng"},"content":"        } else {","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"1szheng"},"content":"            leftRemoved \u003d firstParse[INDEX_LEFT_NOT_EXIST];","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"1szheng"},"content":"        String[] secondParse \u003d leftRemoved.split(delimiterRight, LIMIT_TWO_TOKENS);","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"1szheng"},"content":"        String rightRemoved \u003d secondParse[INDEX_RIGHT_REMOVED];","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"1szheng"},"content":"        assert rightRemoved !\u003d null : ASSERT_OUTPUT_NOT_NULL;","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"1szheng"},"content":"        return rightRemoved.trim();","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"1szheng"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"1szheng"},"content":"     * Returns command keyword from user input.","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"1szheng"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"1szheng"},"content":"     * @param userInput The user\u0027s full input text.","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"1szheng"},"content":"     * @return The command keyword issued.","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"1szheng"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"1szheng"},"content":"    public static String parseKeyword(String userInput) {","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"1szheng"},"content":"        assert (userInput !\u003d null) : ASSERT_INPUT_NOT_NULL;","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"1szheng"},"content":"        String keyword \u003d userInput.split(DELIMITER_SPACE)[INDEX_KEYWORD].trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"1szheng"},"content":"        logger.getLogger().log(Level.INFO, String.format(LOG_PARSED_VALUES, userInput, keyword));","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"1szheng"},"content":"        return keyword;","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"1szheng"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"1szheng"},"content":"     * Returns person\u0027s name from user input.","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"1szheng"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"1szheng"},"content":"     * @param userInput The user\u0027s full input text.","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"1szheng"},"content":"     * @return Person\u0027s name.","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"1szheng"},"content":"     * @throws MissingDelimiterException   if user input does not contain delimiter for name.","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"1szheng"},"content":"     * @throws DuplicateDelimiterException if user input contains duplicate delimiters.","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"1szheng"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"1szheng"},"content":"    public static String parseName(String userInput) throws MissingDelimiterException, DuplicateDelimiterException {","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"1szheng"},"content":"        assert (userInput !\u003d null) : ASSERT_INPUT_NOT_NULL;","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"1szheng"},"content":"        checkContainsOnlyOneDelimiter(userInput, DELIMITER_NAME);","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"1szheng"},"content":"        String name \u003d parseDelimitedTerm(userInput, DELIMITER_NAME, DELIMITER_BACK).trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"1szheng"},"content":"        logger.getLogger().log(Level.INFO, String.format(LOG_PARSED_VALUES, userInput, name));","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"1szheng"},"content":"        return name;","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"1szheng"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"1szheng"},"content":"     * Returns user index from user input.","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"1szheng"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"1szheng"},"content":"     * @param userInput The user\u0027s full input text.","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"1szheng"},"content":"     * @return Person\u0027s user index.","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"1szheng"},"content":"     * @throws MissingDelimiterException   if user input does not contain delimiter for user index.","lastModifiedDate":"2022-03-13"},{"lineNumber":118,"author":{"gitId":"1szheng"},"content":"     * @throws DuplicateDelimiterException if user input contains duplicate delimiters.","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"1szheng"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":120,"author":{"gitId":"1szheng"},"content":"    public static String parseUserIndex(String userInput)","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"1szheng"},"content":"            throws MissingDelimiterException, DuplicateDelimiterException {","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"1szheng"},"content":"        assert (userInput !\u003d null) : ASSERT_INPUT_NOT_NULL;","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"1szheng"},"content":"        checkContainsOnlyOneDelimiter(userInput, DELIMITER_USER_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"1szheng"},"content":"        String userIndex \u003d parseDelimitedTerm(userInput, DELIMITER_USER_INDEX, DELIMITER_BACK).trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"1szheng"},"content":"        logger.getLogger().log(Level.INFO, String.format(LOG_PARSED_VALUES, userInput, userIndex));","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"1szheng"},"content":"        return userIndex;","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"1szheng"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"1szheng"},"content":"     * Returns description of item from user input.","lastModifiedDate":"2022-03-11"},{"lineNumber":131,"author":{"gitId":"1szheng"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":132,"author":{"gitId":"1szheng"},"content":"     * @param userInput The user\u0027s full input text.","lastModifiedDate":"2022-03-11"},{"lineNumber":133,"author":{"gitId":"1szheng"},"content":"     * @return An item\u0027s description.","lastModifiedDate":"2022-03-11"},{"lineNumber":134,"author":{"gitId":"1szheng"},"content":"     * @throws MissingDelimiterException   if user input does not contain delimiter for description.","lastModifiedDate":"2022-03-13"},{"lineNumber":135,"author":{"gitId":"1szheng"},"content":"     * @throws DuplicateDelimiterException if user input contains duplicate delimiters.","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"1szheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":137,"author":{"gitId":"1szheng"},"content":"    public static String parseDescription(String userInput)","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"1szheng"},"content":"            throws MissingDelimiterException, DuplicateDelimiterException {","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"1szheng"},"content":"        assert (userInput !\u003d null) : ASSERT_INPUT_NOT_NULL;","lastModifiedDate":"2022-03-15"},{"lineNumber":140,"author":{"gitId":"1szheng"},"content":"        checkContainsOnlyOneDelimiter(userInput, DELIMITER_DESCRIPTION);","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"1szheng"},"content":"        String description \u003d parseDelimitedTerm(userInput, DELIMITER_DESCRIPTION, DELIMITER_BACK).trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"1szheng"},"content":"        logger.getLogger().log(Level.INFO, String.format(LOG_PARSED_VALUES, userInput, description));","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"1szheng"},"content":"        return description;","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":145,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":146,"author":{"gitId":"1szheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":147,"author":{"gitId":"1szheng"},"content":"     * Returns income from user input.","lastModifiedDate":"2022-03-11"},{"lineNumber":148,"author":{"gitId":"1szheng"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":149,"author":{"gitId":"1szheng"},"content":"     * @param userInput The user\u0027s full input text.","lastModifiedDate":"2022-03-09"},{"lineNumber":150,"author":{"gitId":"1szheng"},"content":"     * @return Person\u0027s added income.","lastModifiedDate":"2022-03-09"},{"lineNumber":151,"author":{"gitId":"1szheng"},"content":"     * @throws MissingDelimiterException   if user input does not contain delimiter for income.","lastModifiedDate":"2022-03-13"},{"lineNumber":152,"author":{"gitId":"1szheng"},"content":"     * @throws DuplicateDelimiterException if user input contains duplicate delimiters.","lastModifiedDate":"2022-03-16"},{"lineNumber":153,"author":{"gitId":"1szheng"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":154,"author":{"gitId":"1szheng"},"content":"    public static String parseIncome(String userInput)","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"1szheng"},"content":"            throws MissingDelimiterException, DuplicateDelimiterException {","lastModifiedDate":"2022-03-16"},{"lineNumber":156,"author":{"gitId":"1szheng"},"content":"        assert (userInput !\u003d null) : ASSERT_INPUT_NOT_NULL;","lastModifiedDate":"2022-03-15"},{"lineNumber":157,"author":{"gitId":"1szheng"},"content":"        checkContainsOnlyOneDelimiter(userInput, DELIMITER_INCOME);","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"1szheng"},"content":"        String income \u003d parseDelimitedTerm(userInput, DELIMITER_INCOME, DELIMITER_BACK).trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":159,"author":{"gitId":"1szheng"},"content":"        logger.getLogger().log(Level.INFO, String.format(LOG_PARSED_VALUES, userInput, income));","lastModifiedDate":"2022-03-16"},{"lineNumber":160,"author":{"gitId":"1szheng"},"content":"        return income;","lastModifiedDate":"2022-03-16"},{"lineNumber":161,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":162,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":163,"author":{"gitId":"1szheng"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":164,"author":{"gitId":"1szheng"},"content":"     * Returns expenditure from user input.","lastModifiedDate":"2022-03-11"},{"lineNumber":165,"author":{"gitId":"1szheng"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":166,"author":{"gitId":"1szheng"},"content":"     * @param userInput The user\u0027s full input text.","lastModifiedDate":"2022-03-09"},{"lineNumber":167,"author":{"gitId":"1szheng"},"content":"     * @return Person\u0027s expenditure amount.","lastModifiedDate":"2022-03-09"},{"lineNumber":168,"author":{"gitId":"1szheng"},"content":"     * @throws MissingDelimiterException   if user input does not contain delimiter for expenditure.","lastModifiedDate":"2022-03-13"},{"lineNumber":169,"author":{"gitId":"1szheng"},"content":"     * @throws DuplicateDelimiterException if user input contains duplicate delimiters.","lastModifiedDate":"2022-03-16"},{"lineNumber":170,"author":{"gitId":"1szheng"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":171,"author":{"gitId":"1szheng"},"content":"    public static String parseExpenditure(String userInput)","lastModifiedDate":"2022-03-16"},{"lineNumber":172,"author":{"gitId":"1szheng"},"content":"            throws MissingDelimiterException, DuplicateDelimiterException {","lastModifiedDate":"2022-03-16"},{"lineNumber":173,"author":{"gitId":"1szheng"},"content":"        assert (userInput !\u003d null) : ASSERT_INPUT_NOT_NULL;","lastModifiedDate":"2022-03-15"},{"lineNumber":174,"author":{"gitId":"1szheng"},"content":"        checkContainsOnlyOneDelimiter(userInput, DELIMITER_EXPENDITURE);","lastModifiedDate":"2022-03-16"},{"lineNumber":175,"author":{"gitId":"1szheng"},"content":"        String expenditure \u003d parseDelimitedTerm(userInput, DELIMITER_EXPENDITURE, DELIMITER_BACK).trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":176,"author":{"gitId":"1szheng"},"content":"        logger.getLogger().log(Level.INFO, String.format(LOG_PARSED_VALUES, userInput, expenditure));","lastModifiedDate":"2022-03-16"},{"lineNumber":177,"author":{"gitId":"1szheng"},"content":"        return expenditure;","lastModifiedDate":"2022-03-16"},{"lineNumber":178,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":179,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":180,"author":{"gitId":"1szheng"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":181,"author":{"gitId":"1szheng"},"content":"     * Returns a record\u0027s index from user input.","lastModifiedDate":"2022-03-13"},{"lineNumber":182,"author":{"gitId":"1szheng"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":183,"author":{"gitId":"1szheng"},"content":"     * @param userInput The user\u0027s full input text.","lastModifiedDate":"2022-03-13"},{"lineNumber":184,"author":{"gitId":"1szheng"},"content":"     * @return A record\u0027s index.","lastModifiedDate":"2022-03-13"},{"lineNumber":185,"author":{"gitId":"1szheng"},"content":"     * @throws MissingDelimiterException   if user input does not contain delimiter for record index.","lastModifiedDate":"2022-03-13"},{"lineNumber":186,"author":{"gitId":"1szheng"},"content":"     * @throws DuplicateDelimiterException if user input contains duplicate delimiters.","lastModifiedDate":"2022-03-16"},{"lineNumber":187,"author":{"gitId":"1szheng"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":188,"author":{"gitId":"1szheng"},"content":"    public static String parseRecordIndex(String userInput)","lastModifiedDate":"2022-03-16"},{"lineNumber":189,"author":{"gitId":"1szheng"},"content":"            throws MissingDelimiterException, DuplicateDelimiterException {","lastModifiedDate":"2022-03-16"},{"lineNumber":190,"author":{"gitId":"1szheng"},"content":"        assert (userInput !\u003d null) : ASSERT_INPUT_NOT_NULL;","lastModifiedDate":"2022-03-15"},{"lineNumber":191,"author":{"gitId":"1szheng"},"content":"        checkContainsOnlyOneDelimiter(userInput, DELIMITER_RECORD_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":192,"author":{"gitId":"1szheng"},"content":"        String record \u003d parseDelimitedTerm(userInput, DELIMITER_RECORD_INDEX, DELIMITER_BACK).trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":193,"author":{"gitId":"1szheng"},"content":"        logger.getLogger().log(Level.INFO, String.format(LOG_PARSED_VALUES, userInput, record));","lastModifiedDate":"2022-03-16"},{"lineNumber":194,"author":{"gitId":"1szheng"},"content":"        return record;","lastModifiedDate":"2022-03-16"},{"lineNumber":195,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":196,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":197,"author":{"gitId":"1szheng"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":198,"author":{"gitId":"1szheng"},"content":"     * Returns a valid double that is a monetary value.","lastModifiedDate":"2022-03-13"},{"lineNumber":199,"author":{"gitId":"1szheng"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":200,"author":{"gitId":"1szheng"},"content":"     * @param amount Text to be checked.","lastModifiedDate":"2022-03-09"},{"lineNumber":201,"author":{"gitId":"1szheng"},"content":"     * @return A valid double for monetary values.","lastModifiedDate":"2022-03-13"},{"lineNumber":202,"author":{"gitId":"1szheng"},"content":"     * @throws InvalidMoneyException if format of text is not a valid double, negative or more than 2 decimal places.","lastModifiedDate":"2022-03-13"},{"lineNumber":203,"author":{"gitId":"1szheng"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":204,"author":{"gitId":"1szheng"},"content":"    public static double getValidMoney(String amount) throws InvalidMoneyException {","lastModifiedDate":"2022-03-13"},{"lineNumber":205,"author":{"gitId":"1szheng"},"content":"        assert (amount !\u003d null) : ASSERT_MONEY_NOT_NULL;","lastModifiedDate":"2022-03-15"},{"lineNumber":206,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-13"},{"lineNumber":207,"author":{"gitId":"1szheng"},"content":"            double checkMoney \u003d Double.parseDouble(amount);","lastModifiedDate":"2022-03-10"},{"lineNumber":208,"author":{"gitId":"1szheng"},"content":"            if (Double.compare(checkMoney, MONEY_ZERO) \u003c 0) {","lastModifiedDate":"2022-03-10"},{"lineNumber":209,"author":{"gitId":"1szheng"},"content":"                // to be caught immediately within this method","lastModifiedDate":"2022-03-13"},{"lineNumber":210,"author":{"gitId":"1szheng"},"content":"                throw new NumberFormatException();","lastModifiedDate":"2022-03-09"},{"lineNumber":211,"author":{"gitId":"1szheng"},"content":"            }","lastModifiedDate":"2022-03-09"},{"lineNumber":212,"author":{"gitId":"hlwang56"},"content":"            //if (amount.contains(DELIMITER_MONEY)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":213,"author":{"gitId":"hlwang56"},"content":"            //    String decimalPlace \u003d parseDelimitedTerm(amount, DELIMITER_MONEY, DELIMITER_BACK);","lastModifiedDate":"2022-03-15"},{"lineNumber":214,"author":{"gitId":"hlwang56"},"content":"            //    if (decimalPlace.length() \u003e LIMIT_TWO_DECIMAL) {","lastModifiedDate":"2022-03-15"},{"lineNumber":215,"author":{"gitId":"1szheng"},"content":"            //        to be caught immediately within this method","lastModifiedDate":"2022-03-13"},{"lineNumber":216,"author":{"gitId":"hlwang56"},"content":"            //        throw new NumberFormatException();","lastModifiedDate":"2022-03-15"},{"lineNumber":217,"author":{"gitId":"hlwang56"},"content":"            //    }","lastModifiedDate":"2022-03-15"},{"lineNumber":218,"author":{"gitId":"hlwang56"},"content":"            //}","lastModifiedDate":"2022-03-15"},{"lineNumber":219,"author":{"gitId":"1szheng"},"content":"            logger.getLogger().log(Level.INFO, String.format(LOG_VALID_MONEY, amount, checkMoney));","lastModifiedDate":"2022-03-16"},{"lineNumber":220,"author":{"gitId":"1szheng"},"content":"            return checkMoney;","lastModifiedDate":"2022-03-13"},{"lineNumber":221,"author":{"gitId":"1szheng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-13"},{"lineNumber":222,"author":{"gitId":"1szheng"},"content":"            logger.getLogger().log(Level.WARNING, String.format(LOG_INVALID_MONEY, amount));","lastModifiedDate":"2022-03-16"},{"lineNumber":223,"author":{"gitId":"1szheng"},"content":"            throw new InvalidMoneyException(amount);","lastModifiedDate":"2022-03-13"},{"lineNumber":224,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":225,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":226,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":227,"author":{"gitId":"1szheng"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":228,"author":{"gitId":"1szheng"},"content":"     * Returns a valid integer user index that is within membership quantity bounds.","lastModifiedDate":"2022-03-13"},{"lineNumber":229,"author":{"gitId":"1szheng"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":230,"author":{"gitId":"1szheng"},"content":"     * @param userIndex  Person\u0027s user index.","lastModifiedDate":"2022-03-09"},{"lineNumber":231,"author":{"gitId":"1szheng"},"content":"     * @param personList A list of Persons.","lastModifiedDate":"2022-03-11"},{"lineNumber":232,"author":{"gitId":"1szheng"},"content":"     * @return A valid integer user index.","lastModifiedDate":"2022-03-13"},{"lineNumber":233,"author":{"gitId":"1szheng"},"content":"     * @throws InvalidIndexException if amount is not a valid integer or out of bounds.","lastModifiedDate":"2022-03-13"},{"lineNumber":234,"author":{"gitId":"1szheng"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":235,"author":{"gitId":"1szheng"},"content":"    public static int getValidUserIndex(String userIndex, PersonList personList) throws InvalidIndexException {","lastModifiedDate":"2022-03-13"},{"lineNumber":236,"author":{"gitId":"1szheng"},"content":"        assert (userIndex !\u003d null) : ASSERT_USER_INDEX_NOT_NULL;","lastModifiedDate":"2022-03-15"},{"lineNumber":237,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-13"},{"lineNumber":238,"author":{"gitId":"1szheng"},"content":"            int checkIndex \u003d Integer.parseInt(userIndex);","lastModifiedDate":"2022-03-09"},{"lineNumber":239,"author":{"gitId":"1szheng"},"content":"            checkTooHighIndex(checkIndex, personList.getNumberOfMembers());","lastModifiedDate":"2022-03-11"},{"lineNumber":240,"author":{"gitId":"1szheng"},"content":"            checkTooLowIndex(checkIndex, MIN_USER_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":241,"author":{"gitId":"1szheng"},"content":"            logger.getLogger().log(Level.INFO, String.format(LOG_VALID_INDEX, checkIndex));","lastModifiedDate":"2022-03-16"},{"lineNumber":242,"author":{"gitId":"1szheng"},"content":"            return checkIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":243,"author":{"gitId":"1szheng"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-13"},{"lineNumber":244,"author":{"gitId":"1szheng"},"content":"            logger.getLogger().log(Level.WARNING, String.format(LOG_INVALID_INDEX, userIndex));","lastModifiedDate":"2022-03-16"},{"lineNumber":245,"author":{"gitId":"1szheng"},"content":"            throw new InvalidIndexException(userIndex);","lastModifiedDate":"2022-03-13"},{"lineNumber":246,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":247,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":248,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":249,"author":{"gitId":"1szheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":250,"author":{"gitId":"1szheng"},"content":"     * Returns a valid expenditure index that is within expenditure quantity bounds.","lastModifiedDate":"2022-03-13"},{"lineNumber":251,"author":{"gitId":"1szheng"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":252,"author":{"gitId":"1szheng"},"content":"     * @param expenditureIndex Person\u0027s expenditure lookup index.","lastModifiedDate":"2022-03-11"},{"lineNumber":253,"author":{"gitId":"1szheng"},"content":"     * @param person           Person who may have expenditures.","lastModifiedDate":"2022-03-11"},{"lineNumber":254,"author":{"gitId":"1szheng"},"content":"     * @return A valid expenditure index.","lastModifiedDate":"2022-03-15"},{"lineNumber":255,"author":{"gitId":"1szheng"},"content":"     * @throws InvalidIndexException if index is not a valid integer or out of bounds.","lastModifiedDate":"2022-03-13"},{"lineNumber":256,"author":{"gitId":"1szheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":257,"author":{"gitId":"1szheng"},"content":"    public static int getValidExpenditureIndex(String expenditureIndex, Person person) throws InvalidIndexException {","lastModifiedDate":"2022-03-15"},{"lineNumber":258,"author":{"gitId":"1szheng"},"content":"        assert (expenditureIndex !\u003d null) : ASSERT_EXPENDITURE_INDEX_NOT_NULL;","lastModifiedDate":"2022-03-15"},{"lineNumber":259,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-13"},{"lineNumber":260,"author":{"gitId":"1szheng"},"content":"            int checkIndex \u003d Integer.parseInt(expenditureIndex);","lastModifiedDate":"2022-03-11"},{"lineNumber":261,"author":{"gitId":"1szheng"},"content":"            checkTooHighIndex(checkIndex, person.getNumberOfExpenditures());","lastModifiedDate":"2022-03-11"},{"lineNumber":262,"author":{"gitId":"1szheng"},"content":"            checkTooLowIndex(checkIndex, MIN_EXPENDITURE_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":263,"author":{"gitId":"1szheng"},"content":"            logger.getLogger().log(Level.INFO, String.format(LOG_VALID_INDEX, checkIndex));","lastModifiedDate":"2022-03-16"},{"lineNumber":264,"author":{"gitId":"1szheng"},"content":"            return checkIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":265,"author":{"gitId":"1szheng"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-13"},{"lineNumber":266,"author":{"gitId":"1szheng"},"content":"            logger.getLogger().log(Level.WARNING, String.format(LOG_INVALID_INDEX, expenditureIndex));","lastModifiedDate":"2022-03-16"},{"lineNumber":267,"author":{"gitId":"1szheng"},"content":"            throw new InvalidIndexException(expenditureIndex);","lastModifiedDate":"2022-03-13"},{"lineNumber":268,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":269,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":270,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":271,"author":{"gitId":"1szheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":272,"author":{"gitId":"1szheng"},"content":"     * Returns a valid income index that is within income quantity bounds.","lastModifiedDate":"2022-03-13"},{"lineNumber":273,"author":{"gitId":"1szheng"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":274,"author":{"gitId":"1szheng"},"content":"     * @param incomeIndex Person\u0027s income lookup index.","lastModifiedDate":"2022-03-11"},{"lineNumber":275,"author":{"gitId":"1szheng"},"content":"     * @param person      Person who may have incomes.","lastModifiedDate":"2022-03-13"},{"lineNumber":276,"author":{"gitId":"1szheng"},"content":"     * @return A valid income index.","lastModifiedDate":"2022-03-15"},{"lineNumber":277,"author":{"gitId":"1szheng"},"content":"     * @throws InvalidIndexException if index is not a valid integer or out of bounds.","lastModifiedDate":"2022-03-13"},{"lineNumber":278,"author":{"gitId":"1szheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":279,"author":{"gitId":"1szheng"},"content":"    public static int getValidIncomeIndex(String incomeIndex, Person person) throws InvalidIndexException {","lastModifiedDate":"2022-03-15"},{"lineNumber":280,"author":{"gitId":"1szheng"},"content":"        assert (incomeIndex !\u003d null) : ASSERT_INCOME_INDEX_NOT_NULL;","lastModifiedDate":"2022-03-15"},{"lineNumber":281,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-13"},{"lineNumber":282,"author":{"gitId":"1szheng"},"content":"            int checkIndex \u003d Integer.parseInt(incomeIndex);","lastModifiedDate":"2022-03-11"},{"lineNumber":283,"author":{"gitId":"1szheng"},"content":"            checkTooHighIndex(checkIndex, person.getNumberOfIncomes());","lastModifiedDate":"2022-03-11"},{"lineNumber":284,"author":{"gitId":"1szheng"},"content":"            checkTooLowIndex(checkIndex, MIN_INCOME_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":285,"author":{"gitId":"1szheng"},"content":"            logger.getLogger().log(Level.INFO, String.format(LOG_VALID_INDEX, checkIndex));","lastModifiedDate":"2022-03-16"},{"lineNumber":286,"author":{"gitId":"1szheng"},"content":"            return checkIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":287,"author":{"gitId":"1szheng"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-13"},{"lineNumber":288,"author":{"gitId":"1szheng"},"content":"            logger.getLogger().log(Level.WARNING, String.format(LOG_INVALID_INDEX, incomeIndex));","lastModifiedDate":"2022-03-16"},{"lineNumber":289,"author":{"gitId":"1szheng"},"content":"            throw new InvalidIndexException(incomeIndex);","lastModifiedDate":"2022-03-13"},{"lineNumber":290,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":291,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":292,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":293,"author":{"gitId":"1szheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":294,"author":{"gitId":"1szheng"},"content":"     * Returns without exception if an index is not lower than minimum accepted index value.","lastModifiedDate":"2022-03-11"},{"lineNumber":295,"author":{"gitId":"1szheng"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":296,"author":{"gitId":"1szheng"},"content":"     * @param checkIndex The index to be checked for invalid boundary.","lastModifiedDate":"2022-03-11"},{"lineNumber":297,"author":{"gitId":"1szheng"},"content":"     * @param minIndex   The minimum value that an index can be.","lastModifiedDate":"2022-03-13"},{"lineNumber":298,"author":{"gitId":"1szheng"},"content":"     * @throws IndexOutOfBoundsException if provided index is less than indicated minimum.","lastModifiedDate":"2022-03-13"},{"lineNumber":299,"author":{"gitId":"1szheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":300,"author":{"gitId":"1szheng"},"content":"    private static void checkTooLowIndex(int checkIndex, int minIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-03-11"},{"lineNumber":301,"author":{"gitId":"1szheng"},"content":"        logger.getLogger().log(Level.INFO, String.format(LOG_CHECK_INDEX_BOUNDS, checkIndex));","lastModifiedDate":"2022-03-16"},{"lineNumber":302,"author":{"gitId":"1szheng"},"content":"        if (checkIndex \u003c minIndex) {","lastModifiedDate":"2022-03-11"},{"lineNumber":303,"author":{"gitId":"1szheng"},"content":"            logger.getLogger().log(Level.WARNING, String.format(LOG_INDEX_TOO_LOW, checkIndex, minIndex));","lastModifiedDate":"2022-03-16"},{"lineNumber":304,"author":{"gitId":"1szheng"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-03-11"},{"lineNumber":305,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":306,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":307,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":308,"author":{"gitId":"1szheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":309,"author":{"gitId":"1szheng"},"content":"     * Returns without exception if an index is not higher than current maximum index value.","lastModifiedDate":"2022-03-11"},{"lineNumber":310,"author":{"gitId":"1szheng"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":311,"author":{"gitId":"1szheng"},"content":"     * @param checkIndex The index to be checked for invalid boundary.","lastModifiedDate":"2022-03-11"},{"lineNumber":312,"author":{"gitId":"1szheng"},"content":"     * @param maxIndex   The maximum value that an index can be.","lastModifiedDate":"2022-03-13"},{"lineNumber":313,"author":{"gitId":"1szheng"},"content":"     * @throws IndexOutOfBoundsException if provided index is more than indicated maximum.","lastModifiedDate":"2022-03-13"},{"lineNumber":314,"author":{"gitId":"1szheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":315,"author":{"gitId":"1szheng"},"content":"    private static void checkTooHighIndex(int checkIndex, int maxIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-03-11"},{"lineNumber":316,"author":{"gitId":"1szheng"},"content":"        logger.getLogger().log(Level.INFO, String.format(LOG_CHECK_INDEX_BOUNDS, checkIndex));","lastModifiedDate":"2022-03-16"},{"lineNumber":317,"author":{"gitId":"1szheng"},"content":"        if (checkIndex \u003e maxIndex) {","lastModifiedDate":"2022-03-11"},{"lineNumber":318,"author":{"gitId":"1szheng"},"content":"            logger.getLogger().log(Level.WARNING, String.format(LOG_INDEX_TOO_HIGH, checkIndex, maxIndex));","lastModifiedDate":"2022-03-16"},{"lineNumber":319,"author":{"gitId":"1szheng"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-03-11"},{"lineNumber":320,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":321,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":322,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":323,"author":{"gitId":"1szheng"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":324,"author":{"gitId":"1szheng"},"content":"     * Returns without exception if user input contains one occurrence of a given delimiter.","lastModifiedDate":"2022-03-16"},{"lineNumber":325,"author":{"gitId":"1szheng"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":326,"author":{"gitId":"1szheng"},"content":"     * @param userInput User input to be checked.","lastModifiedDate":"2022-03-13"},{"lineNumber":327,"author":{"gitId":"1szheng"},"content":"     * @param delimiter A delimiter used to separate details.","lastModifiedDate":"2022-03-13"},{"lineNumber":328,"author":{"gitId":"1szheng"},"content":"     * @throws MissingDelimiterException if user input does not contain the delimiter.","lastModifiedDate":"2022-03-13"},{"lineNumber":329,"author":{"gitId":"1szheng"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":330,"author":{"gitId":"1szheng"},"content":"    private static void checkContainsOnlyOneDelimiter(String userInput, String delimiter)","lastModifiedDate":"2022-03-16"},{"lineNumber":331,"author":{"gitId":"1szheng"},"content":"            throws MissingDelimiterException, DuplicateDelimiterException {","lastModifiedDate":"2022-03-16"},{"lineNumber":332,"author":{"gitId":"1szheng"},"content":"        int inputLengthWithDelimiter \u003d userInput.length();","lastModifiedDate":"2022-03-16"},{"lineNumber":333,"author":{"gitId":"1szheng"},"content":"        int inputLengthNoDelimiter \u003d userInput.replace(delimiter, EMPTY_STRING).length();","lastModifiedDate":"2022-03-16"},{"lineNumber":334,"author":{"gitId":"1szheng"},"content":"        int lengthOfDelimiter \u003d delimiter.length();","lastModifiedDate":"2022-03-16"},{"lineNumber":335,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":336,"author":{"gitId":"1szheng"},"content":"        if ((inputLengthWithDelimiter - inputLengthNoDelimiter) \u003c lengthOfDelimiter) {","lastModifiedDate":"2022-03-16"},{"lineNumber":337,"author":{"gitId":"1szheng"},"content":"            logger.getLogger().log(Level.WARNING, String.format(LOG_MISSING_DELIMITER, userInput, delimiter));","lastModifiedDate":"2022-03-16"},{"lineNumber":338,"author":{"gitId":"1szheng"},"content":"            throw new MissingDelimiterException(delimiter);","lastModifiedDate":"2022-03-13"},{"lineNumber":339,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":340,"author":{"gitId":"1szheng"},"content":"        if ((inputLengthWithDelimiter - inputLengthNoDelimiter) \u003e lengthOfDelimiter) {","lastModifiedDate":"2022-03-16"},{"lineNumber":341,"author":{"gitId":"1szheng"},"content":"            logger.getLogger().log(Level.WARNING, String.format(LOG_TOO_MANY_DELIMITER, userInput, delimiter));","lastModifiedDate":"2022-03-16"},{"lineNumber":342,"author":{"gitId":"1szheng"},"content":"            throw new DuplicateDelimiterException(delimiter);","lastModifiedDate":"2022-03-16"},{"lineNumber":343,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":344,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":345,"author":{"gitId":"1szheng"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"teanweijun":3,"1szheng":333,"hlwang56":9}},{"path":"src/main/java/seedu/planitarium/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"teanweijun"},"content":"package seedu.planitarium.person;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"tjiarong"},"content":"import seedu.planitarium.income.IncomeList;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"HansHengGit"},"content":"import seedu.planitarium.expenditure.ExpenditureList;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"teanweijun"},"content":"public class Person {","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"teanweijun"},"content":"    protected String name;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"teanweijun"},"content":"    protected IncomeList incomeList;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"teanweijun"},"content":"    protected ExpenditureList expenditureList;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"teanweijun"},"content":"    protected static int SINGULAR \u003d 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"teanweijun"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"teanweijun"},"content":"     * Constructs a new Person object.","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"teanweijun"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"teanweijun"},"content":"     * @param name The name of the person to be created","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"teanweijun"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"teanweijun"},"content":"    public Person(String name) {","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"teanweijun"},"content":"        assert (name !\u003d null);","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"teanweijun"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"teanweijun"},"content":"        incomeList \u003d new IncomeList();","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"teanweijun"},"content":"        expenditureList \u003d new ExpenditureList();","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"teanweijun"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"teanweijun"},"content":"     * Returns the name of the person.","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"teanweijun"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"teanweijun"},"content":"     * @return The name of the person","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"teanweijun"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"teanweijun"},"content":"    public String getName() {","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"teanweijun"},"content":"        return name;","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"teanweijun"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"teanweijun"},"content":"     * Adds an income to the list of incomes.","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"teanweijun"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"teanweijun"},"content":"     * @param description The source of the income","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"teanweijun"},"content":"     * @param amount The value of the income","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"teanweijun"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"teanweijun"},"content":"    public void addIncome(String description, double amount) {","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"teanweijun"},"content":"        assert (description !\u003d null);","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"teanweijun"},"content":"        this.incomeList.addIncome(description, amount);","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"teanweijun"},"content":"        System.out.println(\"An income of \" + amount + \" from \" + description + \" has been added to \" + this.name);","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"teanweijun"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"teanweijun"},"content":"     * Removes an income from the list of incomes.","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"teanweijun"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"teanweijun"},"content":"     * @param index The index of the income to be removed","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"teanweijun"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"teanweijun"},"content":"    public void deleteIncome(int index) {","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"teanweijun"},"content":"        assert (index \u003e\u003d SINGULAR);","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"teanweijun"},"content":"        assert (index \u003c\u003d getNumberOfIncomes());","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"hlwang56"},"content":"        String description \u003d incomeList.getDescription(index);","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"hlwang56"},"content":"        double value \u003d incomeList.getIncomeValue(index);","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"hlwang56"},"content":"        incomeList.remove(index);","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"teanweijun"},"content":"        System.out.println(\"An income of \" + value + \" for \" + description + \" has been removed from \" + this.name);","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"teanweijun"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"teanweijun"},"content":"     * Adds an expenditure to the list of expenditures.","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"teanweijun"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"teanweijun"},"content":"     * @param description The reason for the expenditure","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"teanweijun"},"content":"     * @param amount The value of the expenditure","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"teanweijun"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"teanweijun"},"content":"    public void addExpend(String description, double amount) {","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"teanweijun"},"content":"        assert (description !\u003d null);","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"teanweijun"},"content":"        expenditureList.addExpenditure(description, amount);","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"teanweijun"},"content":"        System.out.println(\"An expenditure of \" + amount + \" for \" + description + \" has been added to \" + this.name);","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"teanweijun"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"teanweijun"},"content":"     * Removes an expenditure from the list of expenditures.","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"teanweijun"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"teanweijun"},"content":"     * @param index The index of the expenditure to be removed.","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"teanweijun"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"teanweijun"},"content":"    public void deleteExpend(int index) {","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"teanweijun"},"content":"        assert (index \u003e\u003d SINGULAR);","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"teanweijun"},"content":"        assert (index \u003c\u003d getNumberOfExpenditures());","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"hlwang56"},"content":"        String description \u003d expenditureList.getDescription(index);","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"hlwang56"},"content":"        double value \u003d expenditureList.getExpenditureValue(index);","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"hlwang56"},"content":"        expenditureList.remove(index);","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"teanweijun"},"content":"        System.out.println(\"An expenditure of \" + value + \" for \" + description","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"teanweijun"},"content":"                + \" has been removed from \" + this.name);","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"teanweijun"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"teanweijun"},"content":"     * Lists the expenditures of the person.","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"teanweijun"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"teanweijun"},"content":"    public void listExpenditure() {","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"teanweijun"},"content":"        System.out.println(\"Here is the expenditure list for \" + name + \":\");","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"teanweijun"},"content":"        expenditureList.printExpenditureList();","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"teanweijun"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"teanweijun"},"content":"     * Lists the income of the person.","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"teanweijun"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"teanweijun"},"content":"    public void listIncome() {","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"teanweijun"},"content":"        System.out.println(\"Here is the income list for \" + name + \":\");","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"teanweijun"},"content":"        incomeList.printIncomeList();","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"teanweijun"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"teanweijun"},"content":"     * Returns the total value of the person\u0027s expenditures.","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"teanweijun"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"teanweijun"},"content":"     * @return Total value of expenditures","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"teanweijun"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"teanweijun"},"content":"    private double getTotalExpenditure() {","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"teanweijun"},"content":"        return expenditureList.getTotalExpenditure();","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"teanweijun"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"teanweijun"},"content":"     * Returns the total value of the person\u0027s incomes.","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"teanweijun"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"teanweijun"},"content":"     * @return Total value of incomes","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"teanweijun"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"teanweijun"},"content":"    private double getTotalIncome() {","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"teanweijun"},"content":"        return incomeList.getTotalIncome();","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":119,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":120,"author":{"gitId":"teanweijun"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"teanweijun"},"content":"     * Returns the amount of money leftover by the person. Can be negative.","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"teanweijun"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"teanweijun"},"content":"     * @return The total value contributed by the person","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"teanweijun"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"teanweijun"},"content":"    public double getDisposable() {","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"teanweijun"},"content":"        return getTotalIncome() - getTotalExpenditure();","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"teanweijun"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"teanweijun"},"content":"     * Returns the number of incomes the person has.","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"teanweijun"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":132,"author":{"gitId":"teanweijun"},"content":"     * @return The number of incomes","lastModifiedDate":"2022-03-10"},{"lineNumber":133,"author":{"gitId":"teanweijun"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":134,"author":{"gitId":"teanweijun"},"content":"    public int getNumberOfIncomes() {","lastModifiedDate":"2022-03-13"},{"lineNumber":135,"author":{"gitId":"teanweijun"},"content":"        return incomeList.getNumberOfIncomes();","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"teanweijun"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"teanweijun"},"content":"     * Returns the number of expenditures the person has.","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"teanweijun"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"teanweijun"},"content":"     * @return The number of expenditures","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"teanweijun"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"teanweijun"},"content":"    public int getNumberOfExpenditures() {","lastModifiedDate":"2022-03-11"},{"lineNumber":144,"author":{"gitId":"teanweijun"},"content":"        return expenditureList.getNumberOfExpenditures();","lastModifiedDate":"2022-03-10"},{"lineNumber":145,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":146,"author":{"gitId":"teanweijun"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"teanweijun":138,"tjiarong":1,"HansHengGit":1,"hlwang56":6}},{"path":"src/main/java/seedu/planitarium/person/PersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"teanweijun"},"content":"package seedu.planitarium.person;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"teanweijun"},"content":"import seedu.planitarium.ProjectLogger;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"teanweijun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"teanweijun"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"teanweijun"},"content":"public class PersonList {","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"teanweijun"},"content":"    private ArrayList\u003cPerson\u003e personList;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"teanweijun"},"content":"    private int numberOfMembers;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"teanweijun"},"content":"    private ProjectLogger logger;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"teanweijun"},"content":"    private static final int SINGULAR \u003d 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"teanweijun"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"teanweijun"},"content":"     * Constructs a new PersonList object.","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"teanweijun"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"teanweijun"},"content":"    public PersonList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"teanweijun"},"content":"        personList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"teanweijun"},"content":"        numberOfMembers \u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"teanweijun"},"content":"        logger \u003d new ProjectLogger(PersonList.class.getName(), \"PersonList.log\");","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"teanweijun"},"content":"        String infoString \u003d \"Logger for PersonList initialised\";","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"teanweijun"},"content":"        logger.getLogger().log(Level.INFO, infoString);","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"teanweijun"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"teanweijun"},"content":"     * Returns the array list containing persons added.","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"teanweijun"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"teanweijun"},"content":"     * @return The array list","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"teanweijun"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"teanweijun"},"content":"    public ArrayList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"teanweijun"},"content":"        String infoString \u003d \"Method getPersonList() called\";","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"teanweijun"},"content":"        logger.getLogger().log(Level.INFO, infoString);","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"teanweijun"},"content":"        return personList;","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"teanweijun"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"teanweijun"},"content":"     * Returns the person specified by the given index.","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"teanweijun"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"teanweijun"},"content":"     * @param index The index of the person","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"teanweijun"},"content":"     * @return The person with the index","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"teanweijun"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"teanweijun"},"content":"    public Person getPerson(int index) {","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"teanweijun"},"content":"        String infoString \u003d \"Entering getPerson()\";","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"teanweijun"},"content":"        logger.getLogger().log(Level.INFO, infoString);","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"teanweijun"},"content":"        assert (index \u003e\u003d SINGULAR);","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"teanweijun"},"content":"        assert (index \u003c\u003d numberOfMembers);","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"teanweijun"},"content":"        infoString \u003d \"Index assertions passed in getPerson()\";","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"teanweijun"},"content":"        logger.getLogger().log(Level.INFO, infoString);","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"teanweijun"},"content":"        int listIndex \u003d index - 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"teanweijun"},"content":"        return personList.get(listIndex);","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"teanweijun"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"teanweijun"},"content":"     * Returns the number of members in the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"teanweijun"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"teanweijun"},"content":"     * @return The number of person objects present in the array list","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"teanweijun"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"teanweijun"},"content":"    public int getNumberOfMembers() {","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"teanweijun"},"content":"        String infoString \u003d \"Method getNumberOfMembers() called\";","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"teanweijun"},"content":"        logger.getLogger().log(Level.INFO, infoString);","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"teanweijun"},"content":"        return numberOfMembers;","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"teanweijun"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"teanweijun"},"content":"     * Adds a person to the array list.","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"teanweijun"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"teanweijun"},"content":"     * @param name The name of the person to be added","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"teanweijun"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"teanweijun"},"content":"    public void addPerson(String name) {","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"teanweijun"},"content":"        String infoString \u003d \"Entering addPerson()\";","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"teanweijun"},"content":"        logger.getLogger().log(Level.INFO, infoString);","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"teanweijun"},"content":"        assert (name !\u003d null);","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"teanweijun"},"content":"        infoString \u003d \"Non-null assertion passed in addPerson()\";","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"teanweijun"},"content":"        logger.getLogger().log(Level.INFO, infoString);","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"teanweijun"},"content":"        Person person \u003d new Person(name);","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"teanweijun"},"content":"        personList.add(person);","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"teanweijun"},"content":"        numberOfMembers++;","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"teanweijun"},"content":"        System.out.println(name + \" has been successfully added\");","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"teanweijun"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"teanweijun"},"content":"     * Removes a person from the array list.","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"teanweijun"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"teanweijun"},"content":"     * @param index The index of the person to be removed","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"teanweijun"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"teanweijun"},"content":"    public void removePerson(int index) {","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"teanweijun"},"content":"        String infoString \u003d \"Entering removePerson()\";","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"teanweijun"},"content":"        logger.getLogger().log(Level.INFO, infoString);","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"teanweijun"},"content":"        assert (index \u003e\u003d SINGULAR);","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"teanweijun"},"content":"        assert (index \u003c\u003d numberOfMembers);","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"teanweijun"},"content":"        infoString \u003d \"Index assertions passed in removePerson()\";","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"teanweijun"},"content":"        logger.getLogger().log(Level.INFO, infoString);","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"teanweijun"},"content":"        int listIndex \u003d index - 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"teanweijun"},"content":"        String name \u003d personList.get(listIndex).getName();","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"teanweijun"},"content":"        personList.remove(listIndex);","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"teanweijun"},"content":"        numberOfMembers--;","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"teanweijun"},"content":"        System.out.println(name + \" has been successfully removed\");","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"teanweijun"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"teanweijun"},"content":"     * Prints the total remaining disposable income of persons in the array list.","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"teanweijun"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"teanweijun"},"content":"    public void printRemain() {","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"teanweijun"},"content":"        String infoString \u003d \"Method getRemain() called\";","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"teanweijun"},"content":"        logger.getLogger().log(Level.INFO, infoString);","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"teanweijun"},"content":"        double sum \u003d 0;","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"teanweijun"},"content":"        for (Person person: this.getPersonList()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"teanweijun"},"content":"            sum +\u003d person.getDisposable();","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"teanweijun"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"teanweijun"},"content":"        System.out.println(\"Your family has a remaining balance of $\" + sum);","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"teanweijun"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"teanweijun"},"content":"     * Lists the names of everyone in the array list, followed by their list of income and expenditure.","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"teanweijun"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"teanweijun"},"content":"    public void list() {","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"teanweijun"},"content":"        String infoString \u003d \"Method list() called\";","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"teanweijun"},"content":"        logger.getLogger().log(Level.INFO, infoString);","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"teanweijun"},"content":"        for (int i \u003d 0; i \u003c numberOfMembers; i++) {","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"teanweijun"},"content":"            Person person \u003d personList.get(i);","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"teanweijun"},"content":"            System.out.println((i + 1) + \". \" + person.getName());","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"teanweijun"},"content":"            person.listIncome();","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"teanweijun"},"content":"            person.listExpenditure();","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"teanweijun"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":125,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"teanweijun"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"teanweijun":126}},{"path":"src/main/java/seedu/planitarium/ui/UI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hlwang56"},"content":"package seedu.planitarium.ui;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"hlwang56"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"hlwang56"},"content":" * Prints messages with horizontal lines.","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"hlwang56"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"hlwang56"},"content":"public class UI {","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"teanweijun"},"content":"    public static final String HORI_LINE \u003d \"------------------------------------------------------\";","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"hlwang56"},"content":"    protected static final String WELCOME_MSG \u003d \"Welcome to PlanITarium, your personal expenditure manager.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"hlwang56"},"content":"    protected static final String EXIT_MSG \u003d \"Goodbye. Hope to see you again.\";","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"hlwang56"},"content":"    protected static final String LOGO \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"hlwang56"},"content":"            \"$$$$$$$  $$                   $$ $$$$$$$$               $$\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"hlwang56"},"content":"                    + \"$$$$$$$  $$                   $$ $$$$$$$$\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"hlwang56"},"content":"                    + \"$$ $$$$  $$  $$$$$$  $$$$$$$  $$    $$    $$$$$$  $$$$$ $$  $$   $$  $$$$$$$$$$\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"hlwang56"},"content":"                    + \"$$ $$$$  $$  $$$$$$  $$$$$$$  $$    $$    $$$$$$  $$$$$ $$  $$   $$  $$$$$$$$$$\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"hlwang56"},"content":"                    + \"$$$$$$$  $$    $$$$  $$$$$$$  $$    $$      $$$$  $$$$$ $$  $$   $$  $$$$$$$$$$\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"hlwang56"},"content":"                    + \"$$$$$$$  $$   $$$$$  $$$ $$$  $$    $$     $$$$$  $$$   $$  $$  $$$  $$$$$$$$$$\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"hlwang56"},"content":"                    + \"$$       $$  $$$$$$  $$$  $$  $$    $$    $$$$$$  $$$   $$  $$$ $$$  $$  $$  $$\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"hlwang56"},"content":"                    + \"$$       $$  $$$$$$$ $$   $$  $$    $$    $$$$$$$ $$    $$  $$$$$$$  $$  $$  $$\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"hlwang56"},"content":"                    + \"$$       $$  $$$$$$$ $$   $$  $$    $$    $$$$$$$ $$    $$  $$$$$$$  $$  $$  $$\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"hlwang56"},"content":"                    + \"$$       $$  $$$$$$$ $$   $$  $$    $$    $$$$$$$ $$    $$  $$$$$$$  $$  $$  $$\\n\";","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"hlwang56"},"content":"    protected String content;","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"hlwang56"},"content":"    public UI() {","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"hlwang56"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"hlwang56"},"content":"    public void printMsg(String message) {","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"hlwang56"},"content":"        System.out.println(HORI_LINE);","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"hlwang56"},"content":"        System.out.println(message);","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"hlwang56"},"content":"        System.out.println(HORI_LINE);","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"hlwang56"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"hlwang56"},"content":"    public static void exit() {","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"hlwang56"},"content":"        System.out.println(EXIT_MSG);","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"hlwang56"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"hlwang56"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"hlwang56"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"hlwang56"},"content":"        System.out.println(WELCOME_MSG);","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"teanweijun"},"content":"        System.out.println(HORI_LINE);","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"hlwang56"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"hlwang56"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"teanweijun":2,"hlwang56":39}},{"path":"src/test/java/command/AddPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hlwang56"},"content":"package command;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"hlwang56"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.commands.AddPersonCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.commands.Command;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"hlwang56"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"hlwang56"},"content":"import seedu.planitarium.person.PersonList;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"hlwang56"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"hlwang56"},"content":"public class AddPersonCommandTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"teanweijun"},"content":"    public static AddPersonCommand addPersonCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"teanweijun"},"content":"    public static final String ADD_PERSON \u003d \"add /n Alice\";","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"teanweijun"},"content":"    public static PersonList personList \u003d new PersonList();","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"hlwang56"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"hlwang56"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"hlwang56"},"content":"    public void addPerson_getPerson_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"hlwang56"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"hlwang56"},"content":"            addPersonCommand \u003d new AddPersonCommand(ADD_PERSON, personList);","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"teanweijun"},"content":"            addPersonCommand.execute();","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"hlwang56"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"hlwang56"},"content":"            fail();","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"hlwang56"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"teanweijun"},"content":"        int uid \u003d personList.getNumberOfMembers();","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"hlwang56"},"content":"        Assertions.assertEquals(\"Alice\", personList.getPerson(uid).getName());","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"hlwang56"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"hlwang56"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"teanweijun":5,"hlwang56":23}},{"path":"src/test/java/seedu/planitarium/PlanITariumTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teanweijun"},"content":"package seedu.planitarium;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"teanweijun"},"content":"class PlanITariumTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"teanweijun":2,"-":10}},{"path":"src/test/java/seedu/planitarium/expenditure/ExpenditureListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HansHengGit"},"content":"package seedu.planitarium.expenditure;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"HansHengGit"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"HansHengGit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"HansHengGit"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"HansHengGit"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"HansHengGit"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"HansHengGit"},"content":"class ExpenditureListTest {","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"HansHengGit"},"content":"    private static int INVALID_INDEX \u003d -1;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"HansHengGit"},"content":"    private static int VALID_INDEX \u003d 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"HansHengGit"},"content":"    private ExpenditureList personOne;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"HansHengGit"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"HansHengGit"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"HansHengGit"},"content":"        personOne \u003d new ExpenditureList();","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"HansHengGit"},"content":"        personOne.addExpenditure(\"Food\", 20);","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"HansHengGit"},"content":"        personOne.addExpenditure(\"Transport\", 5);","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"HansHengGit"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"HansHengGit"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"HansHengGit"},"content":"    public void addExpenditure_newExpenditure_existsInExpenditure() {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"HansHengGit"},"content":"        ExpenditureList personTwo \u003d new ExpenditureList();","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"HansHengGit"},"content":"        personTwo.addExpenditure(\"clothes\", 30);","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"HansHengGit"},"content":"        String description \u003d \"clothes\";","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"HansHengGit"},"content":"        double amount \u003d 30;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"HansHengGit"},"content":"        assertEquals(description, personTwo.getDescription(VALID_INDEX));","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"HansHengGit"},"content":"        assertEquals(amount, personTwo.getExpenditureValue(VALID_INDEX));","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"HansHengGit"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"HansHengGit"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"HansHengGit"},"content":"    public void getDescription_validIndex_expectSameDescription() {","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"HansHengGit"},"content":"        String inputString \u003d \"Food\";","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"HansHengGit"},"content":"        String getDescriptionString \u003d personOne.getDescription(VALID_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"HansHengGit"},"content":"        assertEquals(inputString, getDescriptionString);","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"HansHengGit"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"HansHengGit"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"HansHengGit"},"content":"    public void getExpenditureValue_validIndex_expectSameDescription() {","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"HansHengGit"},"content":"        double inputAmount \u003d 20;","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"HansHengGit"},"content":"        double getAmount \u003d personOne.getExpenditureValue(VALID_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"HansHengGit"},"content":"        assertEquals(inputAmount, getAmount);","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"HansHengGit"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"HansHengGit"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"HansHengGit"},"content":"    public void remove_expenditureExists_removesNormally() {","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"HansHengGit"},"content":"        int numberOfExpenditureBeforeRemoval \u003d personOne.getNumberOfExpenditures();","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"HansHengGit"},"content":"        personOne.remove(VALID_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"HansHengGit"},"content":"        int numberOfExpenditureAfterRemoval \u003d personOne.getNumberOfExpenditures();","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"HansHengGit"},"content":"        assertEquals(numberOfExpenditureBeforeRemoval - 1, numberOfExpenditureAfterRemoval);","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"HansHengGit"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"HansHengGit"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"HansHengGit"},"content":"    public void remove_invalidIndex_expectAssertionError() {","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"HansHengGit"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"HansHengGit"},"content":"            personOne.remove(INVALID_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"HansHengGit"},"content":"            fail();","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"HansHengGit"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"HansHengGit"},"content":"            assertNull(e.getMessage());","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"HansHengGit"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"HansHengGit"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"HansHengGit"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"HansHengGit"},"content":"    public void getDescription_invalidIndex_expectAssertionError() {","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"HansHengGit"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"HansHengGit"},"content":"            personOne.getDescription(INVALID_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"HansHengGit"},"content":"            fail();","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"HansHengGit"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"HansHengGit"},"content":"            assertNull(e.getMessage());","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"HansHengGit"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"HansHengGit"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"HansHengGit"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"HansHengGit"},"content":"    public void getExpenditureValue_invalidIndex_expectAssertionError() {","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"HansHengGit"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"HansHengGit"},"content":"            personOne.getExpenditureValue(INVALID_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"HansHengGit"},"content":"            fail();","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"HansHengGit"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"HansHengGit"},"content":"            assertNull(e.getMessage());","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"HansHengGit"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"HansHengGit"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"HansHengGit"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"HansHengGit"},"content":"    public void addExpenditure_nullDescription_expectAssertionError() {","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"HansHengGit"},"content":"        ExpenditureList testList \u003d new ExpenditureList();","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"HansHengGit"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"HansHengGit"},"content":"            testList.addExpenditure(null, 24);","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"HansHengGit"},"content":"            fail();","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"HansHengGit"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"HansHengGit"},"content":"            assertNull(e.getMessage());","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"HansHengGit"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"HansHengGit"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"HansHengGit"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"HansHengGit":96}},{"path":"src/test/java/seedu/planitarium/expenditure/ExpenditureTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HansHengGit"},"content":"package seedu.planitarium.expenditure;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"HansHengGit"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"HansHengGit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"teanweijun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"teanweijun"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"teanweijun"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"HansHengGit"},"content":"class ExpenditureTest {","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"HansHengGit"},"content":"    private Expenditure testItem;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"HansHengGit"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"HansHengGit"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"HansHengGit"},"content":"        testItem \u003d new Expenditure(\"food\", 24);","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"HansHengGit"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"HansHengGit"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"HansHengGit"},"content":"    public void getDescription_validExpenditure_expectedDescription() {","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"HansHengGit"},"content":"        String inputDescription \u003d \"food\";","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"HansHengGit"},"content":"        String actualDescription \u003d testItem.getDescription();","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"HansHengGit"},"content":"        assertEquals(inputDescription, actualDescription);","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"HansHengGit"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"HansHengGit"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"HansHengGit"},"content":"    public void getAmount_validExpenditure_expectedAmount() {","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"HansHengGit"},"content":"        double inputAmount \u003d 24;","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"HansHengGit"},"content":"        double actualAmount \u003d testItem.getAmount();","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"HansHengGit"},"content":"        assertEquals(inputAmount, actualAmount);","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"HansHengGit"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"HansHengGit"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"HansHengGit"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"HansHengGit"},"content":"    public void addExpenditure_nullDescription_expectAssertionError() {","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"HansHengGit"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"HansHengGit"},"content":"            Expenditure testNullDescription \u003d new Expenditure(null, 24);","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"HansHengGit"},"content":"            fail();","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"HansHengGit"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"HansHengGit"},"content":"            assertNull(e.getMessage());","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"HansHengGit"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"HansHengGit"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"HansHengGit"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"teanweijun":3,"HansHengGit":39}},{"path":"src/test/java/seedu/planitarium/income/IncomeListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tjiarong"},"content":"package seedu.planitarium.income;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"tjiarong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"teanweijun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"tjiarong"},"content":"class IncomeListTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"tjiarong"},"content":"    IncomeList test \u003d new IncomeList();","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"tjiarong"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"tjiarong"},"content":"    void addIncome() {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"tjiarong"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"tjiarong"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"tjiarong"},"content":"    void getIncomeValue_expectIncome_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"tjiarong"},"content":"        double inputValue \u003d 1000.00;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"tjiarong"},"content":"        test.addIncome(\"Salary\", inputValue);","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"tjiarong"},"content":"        double getInputValue \u003d test.getIncomeValue(1);","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"tjiarong"},"content":"        assertEquals(getInputValue, inputValue);","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"tjiarong"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"tjiarong"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"tjiarong"},"content":"    void remove() {","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"tjiarong"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"tjiarong"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"tjiarong"},"content":"    void getDescription() {","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"tjiarong"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"tjiarong"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"tjiarong"},"content":"    void getNumberOfIncomes() {","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"tjiarong"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"tjiarong"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"tjiarong"},"content":"    void getTotalIncome() {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"tjiarong"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"tjiarong"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"tjiarong"},"content":"    void printIncomeList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"tjiarong"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"tjiarong"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"teanweijun":1,"tjiarong":41}},{"path":"src/test/java/seedu/planitarium/income/IncomeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tjiarong"},"content":"package seedu.planitarium.income;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"tjiarong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"tjiarong"},"content":"class IncomeTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"tjiarong"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"tjiarong"},"content":"    void getAmount() {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"tjiarong"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"tjiarong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"tjiarong"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"tjiarong"},"content":"    void getDescription() {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"tjiarong"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"tjiarong"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"tjiarong":14}},{"path":"src/test/java/seedu/planitarium/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"1szheng"},"content":"package seedu.planitarium.parser;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"1szheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"1szheng"},"content":"import seedu.planitarium.exceptions.DuplicateDelimiterException;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"1szheng"},"content":"import seedu.planitarium.exceptions.InvalidIndexException;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"1szheng"},"content":"import seedu.planitarium.exceptions.InvalidMoneyException;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"1szheng"},"content":"import seedu.planitarium.exceptions.MissingDelimiterException;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"1szheng"},"content":"import seedu.planitarium.person.Person;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"1szheng"},"content":"import seedu.planitarium.person.PersonList;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"1szheng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"1szheng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"1szheng"},"content":"class ParserTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"1szheng"},"content":"    void parseDelimitedTerm_delimitedTerm_success() {","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"1szheng"},"content":"        String input1 \u003d \"\";","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"1szheng"},"content":"        String input2 \u003d \"add /n bill\";","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"1szheng"},"content":"        String delimiter \u003d \"/n\";","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"1szheng"},"content":"        String delimiterBack \u003d \"/e\";","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"1szheng"},"content":"        String output1 \u003d Parser.parseDelimitedTerm(input1, delimiter, delimiterBack);","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"1szheng"},"content":"        assertEquals(input1, output1);","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"1szheng"},"content":"        String output2 \u003d Parser.parseDelimitedTerm(input2, delimiter, delimiterBack);","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"1szheng"},"content":"        assertEquals(\"bill\", output2);","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"1szheng"},"content":"    void parseKeyword_keywordExist_success() {","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"1szheng"},"content":"        String input1 \u003d \"\";","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"1szheng"},"content":"        String input2 \u003d \"add /n bill\";","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"1szheng"},"content":"        String output1 \u003d Parser.parseKeyword(input1);","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"1szheng"},"content":"        assertEquals(input1, output1);","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"1szheng"},"content":"        String output2 \u003d Parser.parseKeyword(input2);","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"1szheng"},"content":"        assertEquals(\"add\", output2);","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"1szheng"},"content":"    void parseKeyword_keywordIsNull_assertThrown() {","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"1szheng"},"content":"            Parser.parseKeyword(null);","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"1szheng"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"User input should not be null\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"1szheng"},"content":"    void parseName_delimiterExist_success() throws DuplicateDelimiterException, MissingDelimiterException {","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"1szheng"},"content":"        String input \u003d \"add /n bill\";","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"1szheng"},"content":"        String output \u003d Parser.parseName(input);","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"1szheng"},"content":"        assertEquals(\"bill\", output);","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"1szheng"},"content":"    void parseName_nullInput_assertThrown() {","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"1szheng"},"content":"            Parser.parseKeyword(null);","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"1szheng"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"User input should not be null\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"1szheng"},"content":"    void parseName_delimiterIssues_exceptionThrown() {","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"1szheng"},"content":"            String noDelimiter \u003d \"add bill\";","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"1szheng"},"content":"            Parser.parseName(noDelimiter);","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"1szheng"},"content":"        } catch (MissingDelimiterException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"Missing delimiter `/n`\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"1szheng"},"content":"        } catch (DuplicateDelimiterException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"1szheng"},"content":"            String tooManyDelimiter \u003d \"add /n bill /n alice\";","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"1szheng"},"content":"            Parser.parseName(tooManyDelimiter);","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"1szheng"},"content":"        } catch (DuplicateDelimiterException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"Too many delimiter `/n`\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"1szheng"},"content":"        } catch (MissingDelimiterException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"1szheng"},"content":"    void parseUserIndex_delimiterExist_success() throws DuplicateDelimiterException, MissingDelimiterException {","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"1szheng"},"content":"        String input \u003d \"addin /u 1 /d Gift /i 100\";","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"1szheng"},"content":"        String output \u003d Parser.parseUserIndex(input);","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"1szheng"},"content":"        assertEquals(\"1\", output);","lastModifiedDate":"2022-03-17"},{"lineNumber":96,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":97,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":98,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"1szheng"},"content":"    void parseUserIndex_nullInput_assertThrown() throws DuplicateDelimiterException, MissingDelimiterException {","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"1szheng"},"content":"            Parser.parseUserIndex(null);","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":103,"author":{"gitId":"1szheng"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":104,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"User input should not be null\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":107,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"1szheng"},"content":"    void parseUserIndex_delimiterIssues_exceptionThrown() {","lastModifiedDate":"2022-03-17"},{"lineNumber":110,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":111,"author":{"gitId":"1szheng"},"content":"            String noDelimiter \u003d \"addin 1 /d Gift /i 100\";","lastModifiedDate":"2022-03-17"},{"lineNumber":112,"author":{"gitId":"1szheng"},"content":"            Parser.parseUserIndex(noDelimiter);","lastModifiedDate":"2022-03-17"},{"lineNumber":113,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":114,"author":{"gitId":"1szheng"},"content":"        } catch (MissingDelimiterException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":115,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"Missing delimiter `/u`\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":116,"author":{"gitId":"1szheng"},"content":"        } catch (DuplicateDelimiterException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":117,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":118,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":120,"author":{"gitId":"1szheng"},"content":"            String tooManyDelimiter \u003d \"addin /u 1 /u 2 /d Gift /i 100\";","lastModifiedDate":"2022-03-17"},{"lineNumber":121,"author":{"gitId":"1szheng"},"content":"            Parser.parseUserIndex(tooManyDelimiter);","lastModifiedDate":"2022-03-17"},{"lineNumber":122,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":123,"author":{"gitId":"1szheng"},"content":"        } catch (DuplicateDelimiterException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":124,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"Too many delimiter `/u`\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":125,"author":{"gitId":"1szheng"},"content":"        } catch (MissingDelimiterException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":126,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":127,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":128,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":129,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":130,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":131,"author":{"gitId":"1szheng"},"content":"    void parseDescription_delimiterExist_success() throws DuplicateDelimiterException, MissingDelimiterException {","lastModifiedDate":"2022-03-17"},{"lineNumber":132,"author":{"gitId":"1szheng"},"content":"        String input \u003d \"addin /u 1 /d Gift /i 100\";","lastModifiedDate":"2022-03-17"},{"lineNumber":133,"author":{"gitId":"1szheng"},"content":"        String output \u003d Parser.parseDescription(input);","lastModifiedDate":"2022-03-17"},{"lineNumber":134,"author":{"gitId":"1szheng"},"content":"        assertEquals(\"Gift\", output);","lastModifiedDate":"2022-03-17"},{"lineNumber":135,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":136,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":137,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"1szheng"},"content":"    void parseDescription_nullInput_assertThrown() throws DuplicateDelimiterException, MissingDelimiterException {","lastModifiedDate":"2022-03-17"},{"lineNumber":139,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":140,"author":{"gitId":"1szheng"},"content":"            Parser.parseDescription(null);","lastModifiedDate":"2022-03-17"},{"lineNumber":141,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":142,"author":{"gitId":"1szheng"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":143,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"User input should not be null\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":144,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":145,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":146,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":147,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"1szheng"},"content":"    void parseDescription_delimiterIssues_exceptionThrown() {","lastModifiedDate":"2022-03-17"},{"lineNumber":149,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":150,"author":{"gitId":"1szheng"},"content":"            String noDelimiter \u003d \"addin /u 1 Gift /i 100\";","lastModifiedDate":"2022-03-17"},{"lineNumber":151,"author":{"gitId":"1szheng"},"content":"            Parser.parseDescription(noDelimiter);","lastModifiedDate":"2022-03-17"},{"lineNumber":152,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":153,"author":{"gitId":"1szheng"},"content":"        } catch (MissingDelimiterException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":154,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"Missing delimiter `/d`\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":155,"author":{"gitId":"1szheng"},"content":"        } catch (DuplicateDelimiterException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":156,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":157,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":158,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":159,"author":{"gitId":"1szheng"},"content":"            String tooManyDelimiter \u003d \"addin /u 1 /d Gift /d Something /i 100\";","lastModifiedDate":"2022-03-17"},{"lineNumber":160,"author":{"gitId":"1szheng"},"content":"            Parser.parseDescription(tooManyDelimiter);","lastModifiedDate":"2022-03-17"},{"lineNumber":161,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":162,"author":{"gitId":"1szheng"},"content":"        } catch (DuplicateDelimiterException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":163,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"Too many delimiter `/d`\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":164,"author":{"gitId":"1szheng"},"content":"        } catch (MissingDelimiterException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":165,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":166,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":167,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":168,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":169,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":170,"author":{"gitId":"1szheng"},"content":"    void parseIncome_delimiterExist_success() throws DuplicateDelimiterException, MissingDelimiterException {","lastModifiedDate":"2022-03-17"},{"lineNumber":171,"author":{"gitId":"1szheng"},"content":"        String input \u003d \"addin /u 1 /d Gift /i 100\";","lastModifiedDate":"2022-03-17"},{"lineNumber":172,"author":{"gitId":"1szheng"},"content":"        String output \u003d Parser.parseIncome(input);","lastModifiedDate":"2022-03-17"},{"lineNumber":173,"author":{"gitId":"1szheng"},"content":"        assertEquals(\"100\", output);","lastModifiedDate":"2022-03-17"},{"lineNumber":174,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":175,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":176,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":177,"author":{"gitId":"1szheng"},"content":"    void parseIncome_nullInput_assertThrown() throws DuplicateDelimiterException, MissingDelimiterException {","lastModifiedDate":"2022-03-17"},{"lineNumber":178,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":179,"author":{"gitId":"1szheng"},"content":"            Parser.parseIncome(null);","lastModifiedDate":"2022-03-17"},{"lineNumber":180,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":181,"author":{"gitId":"1szheng"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":182,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"User input should not be null\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":183,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":184,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":185,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":186,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":187,"author":{"gitId":"1szheng"},"content":"    void parseIncome_delimiterIssues_exceptionThrown() {","lastModifiedDate":"2022-03-17"},{"lineNumber":188,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":189,"author":{"gitId":"1szheng"},"content":"            String noDelimiter \u003d \"addin /u 1 /d Gift 100\";","lastModifiedDate":"2022-03-17"},{"lineNumber":190,"author":{"gitId":"1szheng"},"content":"            Parser.parseIncome(noDelimiter);","lastModifiedDate":"2022-03-17"},{"lineNumber":191,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":192,"author":{"gitId":"1szheng"},"content":"        } catch (MissingDelimiterException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":193,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"Missing delimiter `/i`\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":194,"author":{"gitId":"1szheng"},"content":"        } catch (DuplicateDelimiterException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":195,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":196,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":197,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":198,"author":{"gitId":"1szheng"},"content":"            String tooManyDelimiter \u003d \"addin /u 1 /d Gift /i 100 /i\";","lastModifiedDate":"2022-03-17"},{"lineNumber":199,"author":{"gitId":"1szheng"},"content":"            Parser.parseIncome(tooManyDelimiter);","lastModifiedDate":"2022-03-17"},{"lineNumber":200,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":201,"author":{"gitId":"1szheng"},"content":"        } catch (DuplicateDelimiterException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":202,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"Too many delimiter `/i`\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":203,"author":{"gitId":"1szheng"},"content":"        } catch (MissingDelimiterException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":204,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":205,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":206,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":207,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":208,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":209,"author":{"gitId":"1szheng"},"content":"    void parseExpenditure_delimiterExist_success() throws DuplicateDelimiterException, MissingDelimiterException {","lastModifiedDate":"2022-03-17"},{"lineNumber":210,"author":{"gitId":"1szheng"},"content":"        String input \u003d \"addout /u 1 /d Food /e 10.50\";","lastModifiedDate":"2022-03-17"},{"lineNumber":211,"author":{"gitId":"1szheng"},"content":"        String output \u003d Parser.parseExpenditure(input);","lastModifiedDate":"2022-03-17"},{"lineNumber":212,"author":{"gitId":"1szheng"},"content":"        assertEquals(\"10.50\", output);","lastModifiedDate":"2022-03-17"},{"lineNumber":213,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":214,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":215,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":216,"author":{"gitId":"1szheng"},"content":"    void parseExpenditure_nullInput_assertThrown() throws DuplicateDelimiterException, MissingDelimiterException {","lastModifiedDate":"2022-03-17"},{"lineNumber":217,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":218,"author":{"gitId":"1szheng"},"content":"            Parser.parseExpenditure(null);","lastModifiedDate":"2022-03-17"},{"lineNumber":219,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":220,"author":{"gitId":"1szheng"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":221,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"User input should not be null\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":222,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":223,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":224,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":225,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":226,"author":{"gitId":"1szheng"},"content":"    void parseExpenditure_delimiterIssues_exceptionThrown() {","lastModifiedDate":"2022-03-17"},{"lineNumber":227,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":228,"author":{"gitId":"1szheng"},"content":"            String noDelimiter \u003d \"addout /u 1 /d Food 10.50\";","lastModifiedDate":"2022-03-17"},{"lineNumber":229,"author":{"gitId":"1szheng"},"content":"            Parser.parseExpenditure(noDelimiter);","lastModifiedDate":"2022-03-17"},{"lineNumber":230,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":231,"author":{"gitId":"1szheng"},"content":"        } catch (MissingDelimiterException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":232,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"Missing delimiter `/e`\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":233,"author":{"gitId":"1szheng"},"content":"        } catch (DuplicateDelimiterException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":234,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":235,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":236,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":237,"author":{"gitId":"1szheng"},"content":"            String tooManyDelimiter \u003d \"addout /u 1 /d Food /e 10.50 /e\";","lastModifiedDate":"2022-03-17"},{"lineNumber":238,"author":{"gitId":"1szheng"},"content":"            Parser.parseExpenditure(tooManyDelimiter);","lastModifiedDate":"2022-03-17"},{"lineNumber":239,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":240,"author":{"gitId":"1szheng"},"content":"        } catch (DuplicateDelimiterException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":241,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"Too many delimiter `/e`\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":242,"author":{"gitId":"1szheng"},"content":"        } catch (MissingDelimiterException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":243,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":244,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":245,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":246,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":247,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":248,"author":{"gitId":"1szheng"},"content":"    void parseRecordIndex_delimiterExist_success() throws DuplicateDelimiterException, MissingDelimiterException {","lastModifiedDate":"2022-03-17"},{"lineNumber":249,"author":{"gitId":"1szheng"},"content":"        String input \u003d \"deletein /u 1 /r 2\";","lastModifiedDate":"2022-03-17"},{"lineNumber":250,"author":{"gitId":"1szheng"},"content":"        String output \u003d Parser.parseRecordIndex(input);","lastModifiedDate":"2022-03-17"},{"lineNumber":251,"author":{"gitId":"1szheng"},"content":"        assertEquals(\"2\", output);","lastModifiedDate":"2022-03-17"},{"lineNumber":252,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":253,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":254,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":255,"author":{"gitId":"1szheng"},"content":"    void parseRecordIndex_nullInput_assertThrown() {","lastModifiedDate":"2022-03-17"},{"lineNumber":256,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":257,"author":{"gitId":"1szheng"},"content":"            Parser.parseKeyword(null);","lastModifiedDate":"2022-03-17"},{"lineNumber":258,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":259,"author":{"gitId":"1szheng"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":260,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"User input should not be null\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":261,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":262,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":263,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":264,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":265,"author":{"gitId":"1szheng"},"content":"    void parseRecordIndex_delimiterIssues_exceptionThrown() {","lastModifiedDate":"2022-03-17"},{"lineNumber":266,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":267,"author":{"gitId":"1szheng"},"content":"            String noDelimiter \u003d \"deletein /u 1 2\";","lastModifiedDate":"2022-03-17"},{"lineNumber":268,"author":{"gitId":"1szheng"},"content":"            Parser.parseRecordIndex(noDelimiter);","lastModifiedDate":"2022-03-17"},{"lineNumber":269,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":270,"author":{"gitId":"1szheng"},"content":"        } catch (MissingDelimiterException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":271,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"Missing delimiter `/r`\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":272,"author":{"gitId":"1szheng"},"content":"        } catch (DuplicateDelimiterException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":273,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":274,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":275,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":276,"author":{"gitId":"1szheng"},"content":"            String tooManyDelimiter \u003d \"deletein /u 1 /r 2 /r 1\";","lastModifiedDate":"2022-03-17"},{"lineNumber":277,"author":{"gitId":"1szheng"},"content":"            Parser.parseRecordIndex(tooManyDelimiter);","lastModifiedDate":"2022-03-17"},{"lineNumber":278,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":279,"author":{"gitId":"1szheng"},"content":"        } catch (DuplicateDelimiterException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":280,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"Too many delimiter `/r`\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":281,"author":{"gitId":"1szheng"},"content":"        } catch (MissingDelimiterException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":282,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":283,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":284,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":285,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":286,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":287,"author":{"gitId":"1szheng"},"content":"    void getValidMoney_positiveDouble_success() throws InvalidMoneyException {","lastModifiedDate":"2022-03-17"},{"lineNumber":288,"author":{"gitId":"1szheng"},"content":"        String input \u003d \"10.50\";","lastModifiedDate":"2022-03-17"},{"lineNumber":289,"author":{"gitId":"1szheng"},"content":"        Double output \u003d Parser.getValidMoney(input);","lastModifiedDate":"2022-03-17"},{"lineNumber":290,"author":{"gitId":"1szheng"},"content":"        assertEquals(10.50, output);","lastModifiedDate":"2022-03-17"},{"lineNumber":291,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":292,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":293,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":294,"author":{"gitId":"1szheng"},"content":"    void getValidMoney_nullInput_assertThrown() {","lastModifiedDate":"2022-03-17"},{"lineNumber":295,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":296,"author":{"gitId":"1szheng"},"content":"            Parser.getValidMoney(null);","lastModifiedDate":"2022-03-17"},{"lineNumber":297,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":298,"author":{"gitId":"1szheng"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":299,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"Money input should not be null\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":300,"author":{"gitId":"1szheng"},"content":"        } catch (InvalidMoneyException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":301,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":302,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":303,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":304,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":305,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":306,"author":{"gitId":"1szheng"},"content":"    void getValidMoney_negativeDouble_exceptionThrown() {","lastModifiedDate":"2022-03-17"},{"lineNumber":307,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":308,"author":{"gitId":"1szheng"},"content":"            String input \u003d \"-10.50\";","lastModifiedDate":"2022-03-17"},{"lineNumber":309,"author":{"gitId":"1szheng"},"content":"            Parser.getValidMoney(input);","lastModifiedDate":"2022-03-17"},{"lineNumber":310,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":311,"author":{"gitId":"1szheng"},"content":"        } catch (InvalidMoneyException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":312,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"Invalid money value: `-10.50`\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":313,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":314,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":315,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":316,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":317,"author":{"gitId":"1szheng"},"content":"    void getValidMoney_notNumber_exceptionThrown() {","lastModifiedDate":"2022-03-17"},{"lineNumber":318,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":319,"author":{"gitId":"1szheng"},"content":"            String input \u003d \"hundred\";","lastModifiedDate":"2022-03-17"},{"lineNumber":320,"author":{"gitId":"1szheng"},"content":"            Parser.getValidMoney(input);","lastModifiedDate":"2022-03-17"},{"lineNumber":321,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":322,"author":{"gitId":"1szheng"},"content":"        } catch (InvalidMoneyException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":323,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"Invalid money value: `hundred`\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":324,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":325,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":326,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":327,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":328,"author":{"gitId":"1szheng"},"content":"    void getValidUserIndex_validUserIndex_success() throws InvalidIndexException {","lastModifiedDate":"2022-03-17"},{"lineNumber":329,"author":{"gitId":"1szheng"},"content":"        PersonList personList \u003d new PersonList();","lastModifiedDate":"2022-03-17"},{"lineNumber":330,"author":{"gitId":"1szheng"},"content":"        personList.addPerson(\"Alice\");","lastModifiedDate":"2022-03-17"},{"lineNumber":331,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":332,"author":{"gitId":"1szheng"},"content":"        String input \u003d \"1\";","lastModifiedDate":"2022-03-17"},{"lineNumber":333,"author":{"gitId":"1szheng"},"content":"        int output \u003d Parser.getValidUserIndex(input, personList);","lastModifiedDate":"2022-03-17"},{"lineNumber":334,"author":{"gitId":"1szheng"},"content":"        assertEquals(1, output);","lastModifiedDate":"2022-03-17"},{"lineNumber":335,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":336,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":337,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":338,"author":{"gitId":"1szheng"},"content":"    void getValidUserIndex_nullInput_assertThrown() throws InvalidIndexException {","lastModifiedDate":"2022-03-17"},{"lineNumber":339,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":340,"author":{"gitId":"1szheng"},"content":"            PersonList personList \u003d new PersonList();","lastModifiedDate":"2022-03-17"},{"lineNumber":341,"author":{"gitId":"1szheng"},"content":"            Parser.getValidUserIndex(null, personList);","lastModifiedDate":"2022-03-17"},{"lineNumber":342,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":343,"author":{"gitId":"1szheng"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":344,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"User index should not be null\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":345,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":346,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":347,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":348,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":349,"author":{"gitId":"1szheng"},"content":"    void getValidUserIndex_notNumber_exceptionThrown() {","lastModifiedDate":"2022-03-17"},{"lineNumber":350,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":351,"author":{"gitId":"1szheng"},"content":"            PersonList personList \u003d new PersonList();","lastModifiedDate":"2022-03-17"},{"lineNumber":352,"author":{"gitId":"1szheng"},"content":"            String input \u003d \"Alice\";","lastModifiedDate":"2022-03-17"},{"lineNumber":353,"author":{"gitId":"1szheng"},"content":"            Parser.getValidUserIndex(input, personList);","lastModifiedDate":"2022-03-17"},{"lineNumber":354,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":355,"author":{"gitId":"1szheng"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":356,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"Invalid index: `Alice`\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":357,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":358,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":359,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":360,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":361,"author":{"gitId":"1szheng"},"content":"    void getValidUserIndex_indexOutOfRange_exceptionThrown() {","lastModifiedDate":"2022-03-17"},{"lineNumber":362,"author":{"gitId":"1szheng"},"content":"        PersonList personList \u003d new PersonList();","lastModifiedDate":"2022-03-17"},{"lineNumber":363,"author":{"gitId":"1szheng"},"content":"        personList.addPerson(\"Alice\");","lastModifiedDate":"2022-03-17"},{"lineNumber":364,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":365,"author":{"gitId":"1szheng"},"content":"            String tooLow \u003d \"0\";","lastModifiedDate":"2022-03-17"},{"lineNumber":366,"author":{"gitId":"1szheng"},"content":"            Parser.getValidUserIndex(tooLow, personList);","lastModifiedDate":"2022-03-17"},{"lineNumber":367,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":368,"author":{"gitId":"1szheng"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":369,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"Invalid index: `0`\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":370,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":371,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":372,"author":{"gitId":"1szheng"},"content":"            String tooLow \u003d \"2\";","lastModifiedDate":"2022-03-17"},{"lineNumber":373,"author":{"gitId":"1szheng"},"content":"            Parser.getValidUserIndex(tooLow, personList);","lastModifiedDate":"2022-03-17"},{"lineNumber":374,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":375,"author":{"gitId":"1szheng"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":376,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"Invalid index: `2`\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":377,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":378,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":379,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":380,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":381,"author":{"gitId":"1szheng"},"content":"    void getValidExpenditureIndex_validUserIndex_success() throws InvalidIndexException {","lastModifiedDate":"2022-03-17"},{"lineNumber":382,"author":{"gitId":"1szheng"},"content":"        PersonList personList \u003d new PersonList();","lastModifiedDate":"2022-03-17"},{"lineNumber":383,"author":{"gitId":"1szheng"},"content":"        personList.addPerson(\"Alice\");","lastModifiedDate":"2022-03-17"},{"lineNumber":384,"author":{"gitId":"1szheng"},"content":"        Person person \u003d personList.getPerson(1);","lastModifiedDate":"2022-03-17"},{"lineNumber":385,"author":{"gitId":"1szheng"},"content":"        person.addExpend(\"Food\", 10.5);","lastModifiedDate":"2022-03-17"},{"lineNumber":386,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":387,"author":{"gitId":"1szheng"},"content":"        String input \u003d \"1\";","lastModifiedDate":"2022-03-17"},{"lineNumber":388,"author":{"gitId":"1szheng"},"content":"        int output \u003d Parser.getValidExpenditureIndex(input, person);","lastModifiedDate":"2022-03-17"},{"lineNumber":389,"author":{"gitId":"1szheng"},"content":"        assertEquals(1, output);","lastModifiedDate":"2022-03-17"},{"lineNumber":390,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":391,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":392,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":393,"author":{"gitId":"1szheng"},"content":"    void getValidExpenditureIndex_nullInput_assertThrown() throws InvalidIndexException {","lastModifiedDate":"2022-03-17"},{"lineNumber":394,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":395,"author":{"gitId":"1szheng"},"content":"            PersonList personList \u003d new PersonList();","lastModifiedDate":"2022-03-17"},{"lineNumber":396,"author":{"gitId":"1szheng"},"content":"            personList.addPerson(\"Alice\");","lastModifiedDate":"2022-03-17"},{"lineNumber":397,"author":{"gitId":"1szheng"},"content":"            Person person \u003d personList.getPerson(1);","lastModifiedDate":"2022-03-17"},{"lineNumber":398,"author":{"gitId":"1szheng"},"content":"            Parser.getValidExpenditureIndex(null, person);","lastModifiedDate":"2022-03-17"},{"lineNumber":399,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":400,"author":{"gitId":"1szheng"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":401,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"Expenditure index should not be null\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":402,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":403,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":404,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":405,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":406,"author":{"gitId":"1szheng"},"content":"    void getValidExpenditureIndex_notNumber_exceptionThrown() {","lastModifiedDate":"2022-03-17"},{"lineNumber":407,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":408,"author":{"gitId":"1szheng"},"content":"            PersonList personList \u003d new PersonList();","lastModifiedDate":"2022-03-17"},{"lineNumber":409,"author":{"gitId":"1szheng"},"content":"            personList.addPerson(\"Alice\");","lastModifiedDate":"2022-03-17"},{"lineNumber":410,"author":{"gitId":"1szheng"},"content":"            Person person \u003d personList.getPerson(1);","lastModifiedDate":"2022-03-17"},{"lineNumber":411,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":412,"author":{"gitId":"1szheng"},"content":"            String input \u003d \"Alice\";","lastModifiedDate":"2022-03-17"},{"lineNumber":413,"author":{"gitId":"1szheng"},"content":"            Parser.getValidExpenditureIndex(input, person);","lastModifiedDate":"2022-03-17"},{"lineNumber":414,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":415,"author":{"gitId":"1szheng"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":416,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"Invalid index: `Alice`\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":417,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":418,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":419,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":420,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":421,"author":{"gitId":"1szheng"},"content":"    void getValidExpenditureIndex_indexOutOfRange_exceptionThrown() {","lastModifiedDate":"2022-03-17"},{"lineNumber":422,"author":{"gitId":"1szheng"},"content":"        PersonList personList \u003d new PersonList();","lastModifiedDate":"2022-03-17"},{"lineNumber":423,"author":{"gitId":"1szheng"},"content":"        personList.addPerson(\"Alice\");","lastModifiedDate":"2022-03-17"},{"lineNumber":424,"author":{"gitId":"1szheng"},"content":"        Person person \u003d personList.getPerson(1);","lastModifiedDate":"2022-03-17"},{"lineNumber":425,"author":{"gitId":"1szheng"},"content":"        person.addExpend(\"Food\", 10.5);","lastModifiedDate":"2022-03-17"},{"lineNumber":426,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":427,"author":{"gitId":"1szheng"},"content":"            String tooLow \u003d \"0\";","lastModifiedDate":"2022-03-17"},{"lineNumber":428,"author":{"gitId":"1szheng"},"content":"            Parser.getValidExpenditureIndex(tooLow, person);","lastModifiedDate":"2022-03-17"},{"lineNumber":429,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":430,"author":{"gitId":"1szheng"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":431,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"Invalid index: `0`\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":432,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":433,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":434,"author":{"gitId":"1szheng"},"content":"            String tooLow \u003d \"2\";","lastModifiedDate":"2022-03-17"},{"lineNumber":435,"author":{"gitId":"1szheng"},"content":"            Parser.getValidExpenditureIndex(tooLow, person);","lastModifiedDate":"2022-03-17"},{"lineNumber":436,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":437,"author":{"gitId":"1szheng"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":438,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"Invalid index: `2`\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":439,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":440,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":441,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":442,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":443,"author":{"gitId":"1szheng"},"content":"    void getValidIncomeIndex_validUserIndex_success() throws InvalidIndexException {","lastModifiedDate":"2022-03-17"},{"lineNumber":444,"author":{"gitId":"1szheng"},"content":"        PersonList personList \u003d new PersonList();","lastModifiedDate":"2022-03-17"},{"lineNumber":445,"author":{"gitId":"1szheng"},"content":"        personList.addPerson(\"Alice\");","lastModifiedDate":"2022-03-17"},{"lineNumber":446,"author":{"gitId":"1szheng"},"content":"        Person person \u003d personList.getPerson(1);","lastModifiedDate":"2022-03-17"},{"lineNumber":447,"author":{"gitId":"1szheng"},"content":"        person.addIncome(\"Gift\", 100);","lastModifiedDate":"2022-03-17"},{"lineNumber":448,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":449,"author":{"gitId":"1szheng"},"content":"        String input \u003d \"1\";","lastModifiedDate":"2022-03-17"},{"lineNumber":450,"author":{"gitId":"1szheng"},"content":"        int output \u003d Parser.getValidIncomeIndex(input, person);","lastModifiedDate":"2022-03-17"},{"lineNumber":451,"author":{"gitId":"1szheng"},"content":"        assertEquals(1, output);","lastModifiedDate":"2022-03-17"},{"lineNumber":452,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":453,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":454,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":455,"author":{"gitId":"1szheng"},"content":"    void getValidIncomeIndex_nullInput_assertThrown() throws InvalidIndexException {","lastModifiedDate":"2022-03-17"},{"lineNumber":456,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":457,"author":{"gitId":"1szheng"},"content":"            PersonList personList \u003d new PersonList();","lastModifiedDate":"2022-03-17"},{"lineNumber":458,"author":{"gitId":"1szheng"},"content":"            personList.addPerson(\"Alice\");","lastModifiedDate":"2022-03-17"},{"lineNumber":459,"author":{"gitId":"1szheng"},"content":"            Person person \u003d personList.getPerson(1);","lastModifiedDate":"2022-03-17"},{"lineNumber":460,"author":{"gitId":"1szheng"},"content":"            Parser.getValidIncomeIndex(null, person);","lastModifiedDate":"2022-03-17"},{"lineNumber":461,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":462,"author":{"gitId":"1szheng"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":463,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"Income index should not be null\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":464,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":465,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":466,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":467,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":468,"author":{"gitId":"1szheng"},"content":"    void getValidIncomeIndex_notNumber_exceptionThrown() {","lastModifiedDate":"2022-03-17"},{"lineNumber":469,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":470,"author":{"gitId":"1szheng"},"content":"            PersonList personList \u003d new PersonList();","lastModifiedDate":"2022-03-17"},{"lineNumber":471,"author":{"gitId":"1szheng"},"content":"            personList.addPerson(\"Alice\");","lastModifiedDate":"2022-03-17"},{"lineNumber":472,"author":{"gitId":"1szheng"},"content":"            Person person \u003d personList.getPerson(1);","lastModifiedDate":"2022-03-17"},{"lineNumber":473,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":474,"author":{"gitId":"1szheng"},"content":"            String input \u003d \"Alice\";","lastModifiedDate":"2022-03-17"},{"lineNumber":475,"author":{"gitId":"1szheng"},"content":"            Parser.getValidIncomeIndex(input, person);","lastModifiedDate":"2022-03-17"},{"lineNumber":476,"author":{"gitId":"1szheng"},"content":"            fail();","lastModifiedDate":"2022-03-17"},{"lineNumber":477,"author":{"gitId":"1szheng"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":478,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"Invalid index: `Alice`\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":479,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":480,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":481,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":482,"author":{"gitId":"1szheng"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":483,"author":{"gitId":"1szheng"},"content":"    void getValidIncomeIndex_indexOutOfRange_exceptionThrown() {","lastModifiedDate":"2022-03-17"},{"lineNumber":484,"author":{"gitId":"1szheng"},"content":"        PersonList personList \u003d new PersonList();","lastModifiedDate":"2022-03-17"},{"lineNumber":485,"author":{"gitId":"1szheng"},"content":"        personList.addPerson(\"Alice\");","lastModifiedDate":"2022-03-17"},{"lineNumber":486,"author":{"gitId":"1szheng"},"content":"        Person person \u003d personList.getPerson(1);","lastModifiedDate":"2022-03-17"},{"lineNumber":487,"author":{"gitId":"1szheng"},"content":"        person.addIncome(\"Gift\", 100);","lastModifiedDate":"2022-03-17"},{"lineNumber":488,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":489,"author":{"gitId":"1szheng"},"content":"            String tooLow \u003d \"0\";","lastModifiedDate":"2022-03-17"},{"lineNumber":490,"author":{"gitId":"1szheng"},"content":"            Parser.getValidIncomeIndex(tooLow, person);","lastModifiedDate":"2022-03-17"},{"lineNumber":491,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":492,"author":{"gitId":"1szheng"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":493,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"Invalid index: `0`\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":494,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":495,"author":{"gitId":"1szheng"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":496,"author":{"gitId":"1szheng"},"content":"            String tooLow \u003d \"2\";","lastModifiedDate":"2022-03-17"},{"lineNumber":497,"author":{"gitId":"1szheng"},"content":"            Parser.getValidIncomeIndex(tooLow, person);","lastModifiedDate":"2022-03-17"},{"lineNumber":498,"author":{"gitId":"1szheng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":499,"author":{"gitId":"1szheng"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":500,"author":{"gitId":"1szheng"},"content":"            assertEquals(\"Invalid index: `2`\", e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":501,"author":{"gitId":"1szheng"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":502,"author":{"gitId":"1szheng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":503,"author":{"gitId":"1szheng"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"1szheng":503}},{"path":"src/test/java/seedu/planitarium/person/PersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teanweijun"},"content":"package seedu.planitarium.person;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"teanweijun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"teanweijun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"teanweijun"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"teanweijun"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"teanweijun"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"teanweijun"},"content":"class PersonListTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"teanweijun"},"content":"    private static final String VALID_NAME \u003d \"Alice\";","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"teanweijun"},"content":"    private static final int INVALID_INDEX \u003d -10;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"teanweijun"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"teanweijun"},"content":"    public void getNumberOfMembers_newPersonList_returnZero() {","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"teanweijun"},"content":"        PersonList list \u003d new PersonList();","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"teanweijun"},"content":"        assertEquals(0, list.getNumberOfMembers());","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"teanweijun"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"teanweijun"},"content":"    public void getNumberOfMembers_addPerson_returnOne() {","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"teanweijun"},"content":"        PersonList list \u003d new PersonList();","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"teanweijun"},"content":"        list.addPerson(VALID_NAME);","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"teanweijun"},"content":"        assertEquals(1, list.getNumberOfMembers());","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"teanweijun"},"content":"    ","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"teanweijun"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"teanweijun"},"content":"    public void getNumberOfMembers_addAndDeletePerson_returnZero() {","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"teanweijun"},"content":"        PersonList list \u003d new PersonList();","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"teanweijun"},"content":"        list.addPerson(VALID_NAME);","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"teanweijun"},"content":"        list.removePerson(1);","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"teanweijun"},"content":"        assertEquals(0, list.getNumberOfMembers());","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"teanweijun"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"teanweijun"},"content":"    public void addPerson_nullName_assertionError() {","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"teanweijun"},"content":"        PersonList list \u003d new PersonList();","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"teanweijun"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"teanweijun"},"content":"            list.addPerson(null);","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"teanweijun"},"content":"            fail();","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"teanweijun"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"teanweijun"},"content":"            assertNull(e.getMessage());","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"teanweijun"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"teanweijun"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"teanweijun"},"content":"    public void removePerson_validIndex_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"teanweijun"},"content":"        PersonList list \u003d new PersonList();","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"teanweijun"},"content":"        list.addPerson(VALID_NAME);","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"teanweijun"},"content":"        list.removePerson(1);","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"teanweijun"},"content":"        assertTrue(list.getPersonList().isEmpty());","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"teanweijun"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"teanweijun"},"content":"    public void removePerson_invalidIndex_assertionError() {","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"teanweijun"},"content":"        PersonList list \u003d new PersonList();","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"teanweijun"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"teanweijun"},"content":"            list.removePerson(INVALID_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"teanweijun"},"content":"            fail();","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"teanweijun"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"teanweijun"},"content":"            assertNull(e.getMessage());","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"teanweijun"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"teanweijun"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"teanweijun"},"content":"    public void getPerson_invalidIndex_assertionError() {","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"teanweijun"},"content":"        PersonList list \u003d new PersonList();","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"teanweijun"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"teanweijun"},"content":"            list.getPerson(INVALID_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"teanweijun"},"content":"            fail();","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"teanweijun"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"teanweijun"},"content":"            assertNull(e.getMessage());","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"teanweijun"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"teanweijun"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"teanweijun":75}},{"path":"src/test/java/seedu/planitarium/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teanweijun"},"content":"package seedu.planitarium.person;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"teanweijun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"teanweijun"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"teanweijun"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"teanweijun"},"content":"class PersonTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"teanweijun"},"content":"    private static final String VALID_NAME \u003d \"Alice\";","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"teanweijun"},"content":"    private static final int VALID_AMOUNT \u003d 1000;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"teanweijun"},"content":"    private static final int INVALID_INDEX \u003d -10;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"teanweijun"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"teanweijun"},"content":"    public void addIncome_invalidDescription_assertionError() {","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"teanweijun"},"content":"        Person person \u003d new Person(VALID_NAME);","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"teanweijun"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"teanweijun"},"content":"            person.addIncome(null, VALID_AMOUNT);","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"teanweijun"},"content":"            fail();","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"teanweijun"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"teanweijun"},"content":"            assertNull(e.getMessage());","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"teanweijun"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"teanweijun"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"teanweijun"},"content":"    public void deleteIncome_invalidIndex_assertionError() {","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"teanweijun"},"content":"        Person person \u003d new Person(VALID_NAME);","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"teanweijun"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"teanweijun"},"content":"            person.deleteIncome(INVALID_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"teanweijun"},"content":"            fail();","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"teanweijun"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"teanweijun"},"content":"            assertNull(e.getMessage());","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"teanweijun"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"teanweijun"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"teanweijun"},"content":"    public void addExpend_invalidDescription_assertionError() {","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"teanweijun"},"content":"        Person person \u003d new Person(VALID_NAME);","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"teanweijun"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"teanweijun"},"content":"            person.addExpend(null, VALID_AMOUNT);","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"teanweijun"},"content":"            fail();","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"teanweijun"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"teanweijun"},"content":"            assertNull(e.getMessage());","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"teanweijun"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"teanweijun"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"teanweijun"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"teanweijun"},"content":"    public void deleteExpend_invalidIndex_assertionError() {","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"teanweijun"},"content":"        Person person \u003d new Person(VALID_NAME);","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"teanweijun"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"teanweijun"},"content":"            person.deleteExpend(INVALID_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"teanweijun"},"content":"            fail();","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"teanweijun"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"teanweijun"},"content":"            assertNull(e.getMessage());","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"teanweijun"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"teanweijun"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"teanweijun"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"teanweijun":56}}]
