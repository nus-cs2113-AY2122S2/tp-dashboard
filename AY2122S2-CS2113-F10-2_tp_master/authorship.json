[{"path":".github/ISSUE_TEMPLATE/bug_report.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"---","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"name: Bug report","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"about: Create a report to help us improve","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"title: \"[BUG]\"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"labels: type.Bug","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"assignees: \u0027\u0027","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"---","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"**Describe the bug**","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"A clear and concise description of what the bug is.","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"**To Reproduce**","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"Steps to reproduce the behavior:","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"1. Go to \u0027...\u0027","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"2. Click on \u0027....\u0027","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"3. Scroll down to \u0027....\u0027","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"4. See error","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"**Expected behavior**","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"A clear and concise description of what you expected to happen.","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"**Screenshots**","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"If applicable, add screenshots to help explain your problem.","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"**Additional context**","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"Add any other context about the problem here.","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"IncompetentDev":27}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"    implementation group: \u0027com.google.code.gson\u0027, name: \u0027gson\u0027, version: \u00272.9.0\u0027","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"    mainClassName \u003d \"seedu.duke.InvMgr\"","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"    archiveBaseName \u003d \"invmgr\"","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"IncompetentDev"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"IncompetentDev":4,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"| Display                                             |      Name       |               Github Profile                |             Portfolio             |","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"|-----------------------------------------------------|:---------------:|:-------------------------------------------:|:---------------------------------:|","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"quitejasper"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Jasper Chia   |  [Github](https://github.com/quitejasper)   | [Portfolio](docs/team/johndoe.md) |","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"chihyingho"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Ho Chih Ying   |   [Github](https://github.com/chihyingho)   | [Portfolio](docs/team/johndoe.md) |","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Lester Sim    |  [Github](https://github.com/lestersimjj)   | [Portfolio](docs/team/johndoe.md) |","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Clarence Chua  | [Github](https://github.com/cheshire-doge)  | [Portfolio](docs/team/johndoe.md) |","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) | Kang Hwee Thern | [Github](https://github.com/IncompetentDev) | [Portfolio](docs/team/johndoe.md) |","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"IncompetentDev":4,"quitejasper":2,"chihyingho":1,"-":2,"cheshire-doge":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"## Design","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"### Application Launch","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"The following diagram shows a sequence diagram of the program when it is run.","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"![ApplicationLaunchSequenceDiagram](img/ApplicationLaunchSequenceDiagram.png)","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"1. `InvMgr` does a setup by creating the required `Ui`, `Storage`, and `ItemList` objects.","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"2. To create the `ItemList` object, `load()` from `Storage` must be called. The resulting `ArrayList\u003cItem\u003e` from `load()` is used to create the `ItemList` object.","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"3. Then, `InvMgr` will continuously loop, doing the following:","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"   i. `InvMgr` will call upon `Ui` to get input from the user.","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"   ii. `InvMgr` passes the user input to `Parser.parse(command)`.","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"   iii. `Parser.parse(command)` returns a `Command` object.","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"   iv. `InvMgr` calls upon the `execute()` method of the returned `Command` object","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"4. The loop stops when the user types `exit`.","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"quitejasper"},"content":"### UI Component","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"quitejasper"},"content":"![UiClassDiagram](img/UiClassDiagram.png)","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"quitejasper"},"content":"The `UI` component consists of a single `Ui` class.","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"quitejasper"},"content":"The `UI` component","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"quitejasper"},"content":"- Displays salutations, prompts for user input, error messages and results of queries.","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"quitejasper"},"content":"- Reads in user inputs","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"quitejasper"},"content":"- Depends on the `Messages` and `InvMgrException` classes in the `Common` component. It displays messages stored in the `Messages` class and displays an error message whenever `InvMgrException` is invoked.","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"cheshire-doge"},"content":"### Parser Component","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"cheshire-doge"},"content":"![ParserClassDiagram](img/ParserClassDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"cheshire-doge"},"content":"The diagram above shows the class diagram of how the `Parser` component works.","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"cheshire-doge"},"content":"1. The `parse(userInput)` method in `Parser` is called from `InvMgr`, and takes in the raw user input. ","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"cheshire-doge"},"content":"2. The method checks through a logic gate whether the user input is valid, and returns ","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"cheshire-doge"},"content":"a `Command` class based on the user input.","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"IncompetentDev"},"content":"### Command Component","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"lestersimjj"},"content":"![CommandClassDiagram](img/CommandClassDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"lestersimjj"},"content":"The following diagram shows the class diagram for `Command`.","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"lestersimjj"},"content":"`Command` is an abstract class that sets certain commonalities that is implemented across all types of commands - `AddCommand`, `DescCommand`, `ListCommand`, `DeleteCommand`, `HelpCommand`, `ExitCommand`. Each of these classes have to override the `Command`\u0027s `execute()` method as each command has a different execution. For example, `AddCommand` will be focused on adding an item to an inventory list whereas `DescCommand` will be about retrieving information from the inventory list.","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"IncompetentDev"},"content":"### Storage Component","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"IncompetentDev"},"content":"The following diagram shows the class diagram for `Storage`.","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"IncompetentDev"},"content":"![StorageClassDiagram](img/StorageClassDiagram.png)","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"IncompetentDev"},"content":"1. `Storage` has `save()` and `load()` methods. These are called by `InvMgr` when needed.","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"IncompetentDev"},"content":"2. `save(itemList)` writes the contents of an `itemList` to a file.","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"IncompetentDev"},"content":"3. `load(itemList)` loads a JSON file into an `itemList`.","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"IncompetentDev"},"content":"4. Gson is used to serialise and deserialise the `itemList` of type `ArrayList\u003cItem\u003e`.","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"IncompetentDev"},"content":"## Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"lestersimjj"},"content":"### Description Command","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"lestersimjj"},"content":"![DescCommandSequenceDiagram](img/DescCommandSequenceDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"lestersimjj"},"content":"The following diagram shows the sequence diagram for retrieving the description of an item.","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"lestersimjj"},"content":"For a user who is unaware of what an item is about, he/she can enter the command eg. `desc 2` command to extract the description for the second item in the inventory list. This command is interpreted by the `Parser` and a `DescCommand` is returned to `InvMgr`. `InvMgr` calls the execute command of `DescCommand` which retrieves the item\u0027s information from the `ItemList` and then outputs them into the `Ui` for the user to see.","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"quitejasper"},"content":"### Add Command","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"quitejasper"},"content":"![AddCommandSequenceDiagram](img/AddCommandSequenceDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"quitejasper"},"content":"The following diagram shows the sequence diagram of the addition of an item.","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"quitejasper"},"content":"The user starts by typing an add command. The example used in the diagram above is the addition of an item with the name `Paper Cup`, quantity of `25` and description of `100ml paper cups`. The full command is `add n/Paper Cup q/25 d/100ml paper cups`.","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"quitejasper"},"content":"1. The `run()` method within `InvMgr` calls the static method `parse()` in the `Parser` class, providing the entire string of input entered by the user.","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"quitejasper"},"content":"2. Within `parse()`, the string is identified to start with the word `add`, and executes the code within the case. The case attempts to create an item using the string by self-invoking `createItem()`.","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"quitejasper"},"content":"3. `createItem()` extracts the relevant arguments from the input string and generates a new `Item` which is returned to the `parse()` case block.","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"quitejasper"},"content":"4. `parse()` uses the `Item` to generate a new `AddCommand` which is returned to the `run()` method.","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"quitejasper"},"content":"5. The `run()` method calls on the `execute()` function in the `AddCommand` which will add the generated item to the `ItemList` using its `addItem()` method.","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"quitejasper"},"content":"6. `AddCommand` will converse with `Ui` to show a message that the item has been added. In this case, the item to add will be printed as the name of the item, followed by \" has been added!\".","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":83,"author":{"gitId":"quitejasper"},"content":"### Delete Command","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"quitejasper"},"content":"![DeleteCommandSequenceDiagram](img/DeleteCommandSequenceDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"quitejasper"},"content":"The following diagram shows the sequence diagram of the addition of an item.","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"quitejasper"},"content":"The user starts by typing an add command. The example used in the diagram above is the addition of an item with the index `1`, based on the list when the user types the `list` command.","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"quitejasper"},"content":"1. The `run()` method within `InvMgr` calls the static method `parse()` in the `Parser` class, providing the entire string of input entered by the user.","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"quitejasper"},"content":"2. Within `parse()`, the string is identified to start with the word `delete`, and executes the code within the case. The case finds the index of the item by splitting the string and indexing it.","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"quitejasper"},"content":"3. `parse()` generates a new `AddCommand` using the index which is returned to the `run()` method.","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"quitejasper"},"content":"4. The `run()` method calls on the `execute()` function in the `DeleteCommand` which will delete the item with that index from the `ItemList` using its `removeItem()` method.","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"quitejasper"},"content":"5. `DeleteCommand` will converse with `Ui` to show a message that the item has been removed. In this case, the item to add will be printed as the name of the item, followed by \" has been deleted.\".","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"cheshire-doge"},"content":"### List Command","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"cheshire-doge"},"content":"![ListCommandSequenceDiagram](img/ListCommandSequenceDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"cheshire-doge"},"content":"The following diagram shows the sequence diagram of the listing of items in `itemList`.","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"cheshire-doge"},"content":"The user starts by typing a list command.","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"cheshire-doge"},"content":"1. `InvMgr` calls `parse(\"list\")` method in `Parser` class, which returns a ListCommand object.","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"cheshire-doge"},"content":"2. `InvMgr` calls `execute(itemList, ui)` method in `ListCommand` object.","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"cheshire-doge"},"content":"3. `ListCommand` loops through every `Item` in `itemList` and prints them line by line","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"cheshire-doge"},"content":"   and numbers them.","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"IncompetentDev"},"content":"### Storage","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"IncompetentDev"},"content":"#### Initialisation","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"IncompetentDev"},"content":"The following diagram shows the sequence diagram illustrating how `Storage` is initialised when the program first launches.","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"IncompetentDev"},"content":"![StorageInitialisationSequenceDiagram](img/StorageInitialisationSequenceDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"IncompetentDev"},"content":"1. `InvMgr` calls the `Storage(filePath)` constructor to create a `Storage` object. `filePath` is a `String` indicating where the data file to be loaded is found.","lastModifiedDate":"2022-03-24"},{"lineNumber":117,"author":{"gitId":"IncompetentDev"},"content":"2. `Storage(filePath)` will check if the file at `filePath` exists. If it does, it returns a `Path` object pointing to the data file.","lastModifiedDate":"2022-03-24"},{"lineNumber":118,"author":{"gitId":"IncompetentDev"},"content":"3. If not, the relevant files and subdirectories are created before returning the corresponding `Path` object.","lastModifiedDate":"2022-03-24"},{"lineNumber":119,"author":{"gitId":"IncompetentDev"},"content":"4. The new `Storage` object will have its `dataPath` attribute set to the `Path` object earlier, and its `filePath` attribute set to the `filePath` passed into the constructor.","lastModifiedDate":"2022-03-24"},{"lineNumber":120,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":121,"author":{"gitId":"IncompetentDev"},"content":"#### Loading data","lastModifiedDate":"2022-03-24"},{"lineNumber":122,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":123,"author":{"gitId":"IncompetentDev"},"content":"The following diagram shows the sequence diagram illustrating how the data file is loaded. Typically, this is only run once when the program first launches.","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":125,"author":{"gitId":"IncompetentDev"},"content":"![StorageLoadSequenceDiagram](img/StorageLoadSequenceDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":126,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":127,"author":{"gitId":"IncompetentDev"},"content":"1. `InvMgr` calls the `load()` method of `storage`.","lastModifiedDate":"2022-03-24"},{"lineNumber":128,"author":{"gitId":"IncompetentDev"},"content":"2. `storage` initialises `Gson()` as `gson`, a library used to serialize and deserialize JSON objects into their relevant Java objects.","lastModifiedDate":"2022-03-24"},{"lineNumber":129,"author":{"gitId":"IncompetentDev"},"content":"3. `storage` will then load the contents of the file at `dataPath` into the `wholeJsonData` `String`. The exact details are not shown in the diagram.","lastModifiedDate":"2022-03-24"},{"lineNumber":130,"author":{"gitId":"IncompetentDev"},"content":"4. `storage` then calls the `fromJson(wholeJsonData)` method of `gson`.","lastModifiedDate":"2022-03-24"},{"lineNumber":131,"author":{"gitId":"IncompetentDev"},"content":"5. An `ArrayList\u003cItem\u003e` may be returned by `fromJson()` method. If it is not, a new empty list is created.","lastModifiedDate":"2022-03-24"},{"lineNumber":132,"author":{"gitId":"IncompetentDev"},"content":"6. `storage` returns `ArrayList\u003cItem\u003e` to `InvMgr`. This will be used to create the `ItemList`, but will not be shown here.","lastModifiedDate":"2022-03-24"},{"lineNumber":133,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":134,"author":{"gitId":"IncompetentDev"},"content":"#### Saving data","lastModifiedDate":"2022-03-24"},{"lineNumber":135,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":136,"author":{"gitId":"IncompetentDev"},"content":"The following diagram shows the sequence diagram illustrating how the data file is saved. Typically, this is done after each `Command` is run.","lastModifiedDate":"2022-03-25"},{"lineNumber":137,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":138,"author":{"gitId":"IncompetentDev"},"content":"![StorageSaveSequenceDiagram](img/StorageSaveSequenceDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":140,"author":{"gitId":"IncompetentDev"},"content":"1. `InvMgr` calls the `save(itemList)` method of `storage`.","lastModifiedDate":"2022-03-24"},{"lineNumber":141,"author":{"gitId":"IncompetentDev"},"content":"2. `storage` initialises `Gson()` as `gson`, a library used to serialize and deserialize JSON objects into their relevant Java objects.","lastModifiedDate":"2022-03-24"},{"lineNumber":142,"author":{"gitId":"IncompetentDev"},"content":"3. `storage` calls the `toJson(itemList)` method of `gson`. This returns a `String` named `serializedItems` which contains the JSON String representing `itemList`.","lastModifiedDate":"2022-03-24"},{"lineNumber":143,"author":{"gitId":"IncompetentDev"},"content":"4. `storage` then writes `serializedItems` to the file at `dataFile`.","lastModifiedDate":"2022-03-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":148,"author":{"gitId":"quitejasper"},"content":"CCA Clubs that require assistance in inventory management, especially for fast typists who prefer CLI over GUI.","lastModifiedDate":"2022-03-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":152,"author":{"gitId":"quitejasper"},"content":"1. Centralised management of resources that ensures accurate and timely allocation of equipment to students","lastModifiedDate":"2022-03-25"},{"lineNumber":153,"author":{"gitId":"quitejasper"},"content":"2. Increases the ease and efficiency of resource management","lastModifiedDate":"2022-03-25"},{"lineNumber":154,"author":{"gitId":"quitejasper"},"content":"3. More organised","lastModifiedDate":"2022-03-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"| Version | As a ...                               | I want to ...                                   | So that I can ...                                            |","lastModifiedDate":"2020-05-24"},{"lineNumber":159,"author":{"gitId":"lestersimjj"},"content":"|---------|----------------------------------------|-------------------------------------------------|--------------------------------------------------------------|","lastModifiedDate":"2022-03-24"},{"lineNumber":160,"author":{"gitId":"lestersimjj"},"content":"| v1.0    | Manager                                | Add a new item to the inventory                 | Update my inventory                                          |","lastModifiedDate":"2022-03-24"},{"lineNumber":161,"author":{"gitId":"lestersimjj"},"content":"| v1.0    | Manager                                | Remove an item from the inventory               | Update my inventory                                          |","lastModifiedDate":"2022-03-24"},{"lineNumber":162,"author":{"gitId":"lestersimjj"},"content":"| v1.0    | Stocktaker                             | list out all my items                           | View all my items at a glance                                |","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"lestersimjj"},"content":"| v1.0    | New user                               | List out all possible commands                  | I can familiarise myself with using the system               |","lastModifiedDate":"2022-03-24"},{"lineNumber":164,"author":{"gitId":"lestersimjj"},"content":"| v1.0    | User who has not seen items physically | Get the description of a particular item        | I can visualise the item better to know if it is what i need |","lastModifiedDate":"2022-03-24"},{"lineNumber":165,"author":{"gitId":"lestersimjj"},"content":"| v1.0    | As a frequent/first time user          | Write to a file containing the entire inventory | Save my inventory data to a file                             |","lastModifiedDate":"2022-03-24"},{"lineNumber":166,"author":{"gitId":"lestersimjj"},"content":"| v1.0    | Stocktaker                             | Read from and load an inventory file data       | To work on and view the data                                 |","lastModifiedDate":"2022-03-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"IncompetentDev":66,"quitejasper":39,"-":35,"cheshire-doge":21,"lestersimjj":18}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"ClubInvMgr is a desktop CLI app for inventory management for CCA clubs, especially for fast typists who can accomplish tasks quickly by typing out commands.","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{Give steps to get started quickly}","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Down the latest version of `Duke` from [here](http://link.to/duke).","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"{Give detailed description of each feature}","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"lestersimjj"},"content":"### List All Items: `list`","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"lestersimjj"},"content":"List all items in the inventory.","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"lestersimjj"},"content":"Format: `list`","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"lestersimjj"},"content":"Examples of usage:","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"lestersimjj"},"content":"\u003e list","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"lestersimjj"},"content":"Name | Quantity\t|","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"lestersimjj"},"content":"VGA Cable | 1 ","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"lestersimjj"},"content":"HDMI Cable | 2","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"lestersimjj"},"content":"### List Current Borrowings: `list -cb`","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"lestersimjj"},"content":"List all items that are currently being borrowed. You can narrow down the list by entering an optional argument of the borrower\u0027s name. Results of borrowings ordered by earliest borrowing start date.","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"lestersimjj"},"content":"Format:   ","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"lestersimjj"},"content":"`list -cb`: List all items that are current being borrowed.  ","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"lestersimjj"},"content":"`list -cb p/BORROWER_NAME`: List all items that are currently being borrowed by Sally","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"lestersimjj"},"content":"* `BORROWER_NAME` must not contain punctuations.","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"lestersimjj"},"content":"Examples of usage:","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"lestersimjj"},"content":"\u003e list -cb","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"lestersimjj"},"content":"Name of Item: Trolley","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"lestersimjj"},"content":"Name of Borrower: Sally","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"lestersimjj"},"content":"Borrow Duration: 2021-03-19 to 2021-03-30","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"lestersimjj"},"content":"Name of Item: JBLFlip5","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"lestersimjj"},"content":"Name of Borrower: John Smith","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"lestersimjj"},"content":"Borrow Duration: 2021-03-21 to 2021-03-23","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"lestersimjj"},"content":"Name of Item: JBLFlip5","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"lestersimjj"},"content":"Name of Borrower: Sally","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"lestersimjj"},"content":"Borrow Duration: 2021-03-29 to 2021-04-01","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"quitejasper"},"content":"If there are no items have been borrowed from the inventory, the `list -cb` command will return:","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"lestersimjj"},"content":"\u003e list -cb","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"lestersimjj"},"content":"There are no items in the inventory being borrowed.","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"lestersimjj"},"content":"\u003e list -cb p/Sally","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"lestersimjj"},"content":"Name of Item: Trolley","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"lestersimjj"},"content":"Name of Borrower: Sally","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"lestersimjj"},"content":"Borrow Duration: 2021-03-23 to 2021-03-30","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"lestersimjj"},"content":"Name of Item: JBLFlip5","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"lestersimjj"},"content":"Name of Borrower: Sally","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"lestersimjj"},"content":"Borrow Duration: 2021-04-24 to 2021-04-30","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"lestersimjj"},"content":"If the person does not exist in the borrowings, the `list -cb p/BORROWER_NAME` will return:","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"lestersimjj"},"content":"\u003e list -cb p/David","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"lestersimjj"},"content":"There are no items currently borrowed by David.","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"quitejasper"},"content":"### List Future Borrowings: `list -fb`","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"quitejasper"},"content":"List all items that will be borrowed in the future. You can narrow down the list by entering an optional argument of the borrower\u0027s name. Results of borrowings ordered by earliest borrowing start date.","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"quitejasper"},"content":"Format:   ","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"quitejasper"},"content":"`list -fb`: List all future borrowings.  ","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"quitejasper"},"content":"`list -fb p/BORROWER_NAME`: List all future borrowings for Sally","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"quitejasper"},"content":"* `BORROWER_NAME` must not contain punctuations.","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"quitejasper"},"content":"Examples of usage (Assuming today\u0027s date is **18-03-2021**):","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"quitejasper"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"quitejasper"},"content":"\u003e list -fb","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"quitejasper"},"content":"Name of Item: Trolley","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"quitejasper"},"content":"Name of Borrower: Sally","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"quitejasper"},"content":"Borrow Duration: 19-03-2021 to 30-03-2021","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"quitejasper"},"content":"Name of Item: JBLFlip5","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"quitejasper"},"content":"Name of Borrower: John Smith","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"quitejasper"},"content":"Borrow Duration: 21-03-2021 to 23-03-2021","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"quitejasper"},"content":"Name of Item: JBLFlip5","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"quitejasper"},"content":"Name of Borrower: Sally","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"quitejasper"},"content":"Borrow Duration: 29-03-2021 to 01-04-2021","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"quitejasper"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"quitejasper"},"content":"If there are no future borrowings, the `list -fb` command will return:","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"quitejasper"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"quitejasper"},"content":"\u003e list -fb","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"quitejasper"},"content":"There are no future borrowings.","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"quitejasper"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"quitejasper"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"quitejasper"},"content":"\u003e list -fb p/Sally","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"quitejasper"},"content":"Name of Item: Trolley","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"quitejasper"},"content":"Name of Borrower: Sally","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"quitejasper"},"content":"Borrow Duration: 19-03-2021 to 30-03-2021","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"quitejasper"},"content":"Name of Item: JBLFlip5","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"quitejasper"},"content":"Name of Borrower: Sally","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"quitejasper"},"content":"Borrow Duration: 29-03-2021 to 01-04-2021","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"quitejasper"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"quitejasper"},"content":"If the person does not exist in the borrowings, the `list -fb p/BORROWER_NAME` will return:","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"quitejasper"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"quitejasper"},"content":"\u003e list -fb p/David","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"quitejasper"},"content":"There are no future borrowings for David.","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"quitejasper"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"quitejasper"},"content":"### List Overdue Borrowings: `list -ob`","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"quitejasper"},"content":"List all items should have been returned but have yet to be. You can narrow down the list by entering an optional argument of the borrower\u0027s name. Results of borrowings ordered by earliest borrowing start date.","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"quitejasper"},"content":"Format:   ","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"quitejasper"},"content":"`list -ob`: List all overdue borrowings.  ","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"quitejasper"},"content":"`list -fb p/BORROWER_NAME`: List all overdue borrowings by Sally","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"quitejasper"},"content":"* `BORROWER_NAME` must not contain punctuations.","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"quitejasper"},"content":"Examples of usage (Assuming today\u0027s date is **31-03-2021**):","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"quitejasper"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"quitejasper"},"content":"\u003e list -ob","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"quitejasper"},"content":"Name of Item: Trolley","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"quitejasper"},"content":"Name of Borrower: Sally","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"quitejasper"},"content":"Borrow Duration: 19-03-2021 to 30-03-2021","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":139,"author":{"gitId":"quitejasper"},"content":"Name of Item: JBLFlip5","lastModifiedDate":"2022-03-30"},{"lineNumber":140,"author":{"gitId":"quitejasper"},"content":"Name of Borrower: John Smith","lastModifiedDate":"2022-03-30"},{"lineNumber":141,"author":{"gitId":"quitejasper"},"content":"Borrow Duration: 21-03-2021 to 23-03-2021","lastModifiedDate":"2022-03-30"},{"lineNumber":142,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":143,"author":{"gitId":"quitejasper"},"content":"Name of Item: JBLFlip5","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"quitejasper"},"content":"Name of Borrower: Sally","lastModifiedDate":"2022-03-30"},{"lineNumber":145,"author":{"gitId":"quitejasper"},"content":"Borrow Duration: 29-03-2021 to 01-04-2021","lastModifiedDate":"2022-03-30"},{"lineNumber":146,"author":{"gitId":"quitejasper"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"quitejasper"},"content":"If there are no overdue borrowings, the `list -ob` command will return:","lastModifiedDate":"2022-03-30"},{"lineNumber":148,"author":{"gitId":"quitejasper"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":149,"author":{"gitId":"quitejasper"},"content":"\u003e list -ob","lastModifiedDate":"2022-03-30"},{"lineNumber":150,"author":{"gitId":"quitejasper"},"content":"There are no overdue borrowings.","lastModifiedDate":"2022-03-30"},{"lineNumber":151,"author":{"gitId":"quitejasper"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":152,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":153,"author":{"gitId":"quitejasper"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":154,"author":{"gitId":"quitejasper"},"content":"\u003e list -ob p/Sally","lastModifiedDate":"2022-03-30"},{"lineNumber":155,"author":{"gitId":"quitejasper"},"content":"Name of Item: Trolley","lastModifiedDate":"2022-03-30"},{"lineNumber":156,"author":{"gitId":"quitejasper"},"content":"Name of Borrower: Sally","lastModifiedDate":"2022-03-30"},{"lineNumber":157,"author":{"gitId":"quitejasper"},"content":"Borrow Duration: 19-03-2021 to 30-03-2021","lastModifiedDate":"2022-03-30"},{"lineNumber":158,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":159,"author":{"gitId":"quitejasper"},"content":"Name of Item: JBLFlip5","lastModifiedDate":"2022-03-30"},{"lineNumber":160,"author":{"gitId":"quitejasper"},"content":"Name of Borrower: Sally","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"quitejasper"},"content":"Borrow Duration: 29-03-2021 to 01-04-2021","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"quitejasper"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"quitejasper"},"content":"If the person does not exist in the borrowings, the `list -ob p/BORROWER_NAME` will return:","lastModifiedDate":"2022-03-30"},{"lineNumber":164,"author":{"gitId":"quitejasper"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":165,"author":{"gitId":"quitejasper"},"content":"\u003e list -ob p/David","lastModifiedDate":"2022-03-30"},{"lineNumber":166,"author":{"gitId":"quitejasper"},"content":"There are no overdue borrowings for David.","lastModifiedDate":"2022-03-30"},{"lineNumber":167,"author":{"gitId":"quitejasper"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":168,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":169,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":170,"author":{"gitId":"lestersimjj"},"content":"### Borrow an Item: `borrow`","lastModifiedDate":"2022-03-30"},{"lineNumber":171,"author":{"gitId":"lestersimjj"},"content":"Borrow the item that you want for the duration between the start date and end date.","lastModifiedDate":"2022-03-30"},{"lineNumber":172,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":173,"author":{"gitId":"lestersimjj"},"content":"Format: `borrow INDEX s/START_DATE e/END_DATE p/BORROWER_NAME`","lastModifiedDate":"2022-03-30"},{"lineNumber":174,"author":{"gitId":"lestersimjj"},"content":"* `INDEX` should be within one of the index for ItemList.","lastModifiedDate":"2022-03-30"},{"lineNumber":175,"author":{"gitId":"lestersimjj"},"content":"* The `START_DATE` and `END_DATE` must be in DD-MM-YYYY format.","lastModifiedDate":"2022-03-30"},{"lineNumber":176,"author":{"gitId":"lestersimjj"},"content":"* The `BORROWER_NAME` cannot contain punctuations.","lastModifiedDate":"2022-03-30"},{"lineNumber":177,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":178,"author":{"gitId":"lestersimjj"},"content":"Examples of usage:","lastModifiedDate":"2022-03-30"},{"lineNumber":179,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":180,"author":{"gitId":"lestersimjj"},"content":"\u003e borrow 23 s/2021-03-21 e/2021-03-23 p/John Smith","lastModifiedDate":"2022-03-30"},{"lineNumber":181,"author":{"gitId":"lestersimjj"},"content":"You have successfully borrowed the following item:","lastModifiedDate":"2022-03-30"},{"lineNumber":182,"author":{"gitId":"lestersimjj"},"content":"Name of Item: JBLFlip5","lastModifiedDate":"2022-03-30"},{"lineNumber":183,"author":{"gitId":"lestersimjj"},"content":"Name of Borrower: John Smith","lastModifiedDate":"2022-03-30"},{"lineNumber":184,"author":{"gitId":"lestersimjj"},"content":"Borrow Duration: 2021-03-21 to 2021-03-23","lastModifiedDate":"2022-03-30"},{"lineNumber":185,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":186,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":187,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":188,"author":{"gitId":"lestersimjj"},"content":"\u003e borrow 12 s/2021-03-21 e/2021-03-23 p/John Smith","lastModifiedDate":"2022-03-30"},{"lineNumber":189,"author":{"gitId":"lestersimjj"},"content":"Sorry. The item is not avaiable for borrowing during this duration.","lastModifiedDate":"2022-03-30"},{"lineNumber":190,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":191,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":192,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":193,"author":{"gitId":"lestersimjj"},"content":"\u003e borrow 28","lastModifiedDate":"2022-03-30"},{"lineNumber":194,"author":{"gitId":"lestersimjj"},"content":"Sorry. This item does not exist in the current inventory.","lastModifiedDate":"2022-03-30"},{"lineNumber":195,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":197,"author":{"gitId":"lestersimjj"},"content":"### Get Description of Item: `desc`","lastModifiedDate":"2022-03-30"},{"lineNumber":198,"author":{"gitId":"lestersimjj"},"content":"Retrieve the details of a particular item of your interest from the current inventory by entering the index (1-based indexing).","lastModifiedDate":"2022-03-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":200,"author":{"gitId":"lestersimjj"},"content":"Format: `desc INDEX`","lastModifiedDate":"2022-03-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":202,"author":{"gitId":"lestersimjj"},"content":"Examples of usage:","lastModifiedDate":"2022-03-30"},{"lineNumber":203,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":204,"author":{"gitId":"lestersimjj"},"content":"\u003e desc 1","lastModifiedDate":"2022-03-30"},{"lineNumber":205,"author":{"gitId":"lestersimjj"},"content":"Name of Item: JBLFlip5","lastModifiedDate":"2022-03-30"},{"lineNumber":206,"author":{"gitId":"lestersimjj"},"content":"Description: Waterproof up to 3m, fully charged batteries can last for 5 hours, bluetooth enabled.","lastModifiedDate":"2022-03-30"},{"lineNumber":207,"author":{"gitId":"lestersimjj"},"content":"```","lastModifiedDate":"2022-03-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"**A**: {your answer here}","lastModifiedDate":"2020-05-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":217,"author":{"gitId":"lestersimjj"},"content":"| Action                  | Format                                                 | Examples                                           |","lastModifiedDate":"2022-03-30"},{"lineNumber":218,"author":{"gitId":"lestersimjj"},"content":"|-------------------------|--------------------------------------------------------|----------------------------------------------------|","lastModifiedDate":"2022-03-30"},{"lineNumber":219,"author":{"gitId":"lestersimjj"},"content":"| List                    | `list`                                                 ||","lastModifiedDate":"2022-03-30"},{"lineNumber":220,"author":{"gitId":"lestersimjj"},"content":"| List current borrowings | `list -cb`                                             ||","lastModifiedDate":"2022-03-30"},{"lineNumber":221,"author":{"gitId":"lestersimjj"},"content":"| Borrow                  | `borrow INDEX s/START_DATE e/END_DATE p/BORROWER_NAME` | `borrow 23 s/21-03-2021 e/23-03-2021 p/John Smith` |","lastModifiedDate":"2022-03-30"},{"lineNumber":222,"author":{"gitId":"lestersimjj"},"content":"| Description             | `desc INDEX`                                           | `desc 1`                                           |","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"quitejasper":93,"-":28,"lestersimjj":101}},{"path":"docs/diagrams/AddCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"quitejasper"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"quitejasper"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"quitejasper"},"content":"hide footbox","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"quitejasper"},"content":"skinparam guillemet false","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"quitejasper"},"content":"skinparam sequenceStereotypeFontColor red","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"quitejasper"},"content":"skinparam sequenceStereotypeFontStyle bold","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"quitejasper"},"content":"Participant \":InvMgr\" as invmgr","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"quitejasper"},"content":"Participant \"Parser\" as parser \u003c\u003cclass\u003e\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"quitejasper"},"content":"Participant \"item:Item\" as item","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"quitejasper"},"content":"Participant \"inputCommand:AddCommand\" as cmd","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"quitejasper"},"content":"Participant \"itemList:ItemList\" as itemlist","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"quitejasper"},"content":"Participant \"ui:Ui\" as ui","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"quitejasper"},"content":"activate invmgr","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"quitejasper"},"content":"-\u003e invmgr","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"quitejasper"},"content":"invmgr -\u003e parser:parse(\"add n/Paper Cup q/25 d/100ml paper cups\")","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"quitejasper"},"content":"activate parser","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"quitejasper"},"content":"parser -\u003e parser:createItem(\"add n/Paper Cup q/25 d/100ml paper cups\")","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"quitejasper"},"content":"activate parser","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"quitejasper"},"content":"create item","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"quitejasper"},"content":"parser -\u003e item:Item(\"Paper Cup\", 25, \"100ml paper cups\")","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"quitejasper"},"content":"activate item","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"quitejasper"},"content":"return :Item","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"quitejasper"},"content":"return","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"quitejasper"},"content":"create cmd","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"quitejasper"},"content":"parser -\u003e cmd:AddCommand(itemToAdd: Item)","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"quitejasper"},"content":"activate cmd","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"quitejasper"},"content":"return :AddCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"quitejasper"},"content":"return inputCommand:AddCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"quitejasper"},"content":"invmgr -\u003e cmd:execute(itemList: ItemList, ui: Ui)","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"quitejasper"},"content":"activate cmd","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"quitejasper"},"content":"cmd -\u003e itemlist:addItem(itemToAdd: Item)","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"quitejasper"},"content":"activate itemlist","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"quitejasper"},"content":"return","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"quitejasper"},"content":"cmd -\u003e ui:showMessages(itemToAdd + \" has been added!\")","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"quitejasper"},"content":"activate ui","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"quitejasper"},"content":"return","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"quitejasper"},"content":"return","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"quitejasper"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"quitejasper":51}},{"path":"docs/diagrams/ApplicationLaunchSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"@startuml","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"hide footbox","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"skinparam guillemet false","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"skinparam sequenceStereotypeFontColor red","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"skinparam sequenceStereotypeFontStyle bold","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"participant \":InvMgr\" as InvMgr","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"participant \"storage:Storage\" as Storage","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"participant \"ui:Ui\" as Ui","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"participant \"itemList:ItemList\" as ItemList","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"participant \":Parser\" as Parser \u003c\u003cclass\u003e\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"participant \":Command\" as Command","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"-\u003e InvMgr: main()","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"activate InvMgr","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"    create Ui","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"    InvMgr -\u003e Ui: Ui()","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"    activate Ui","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"    return","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"    create Storage","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"    InvMgr -\u003e Storage: Storage(filePath)","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"    activate Storage","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"    return","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"    InvMgr -\u003e Storage: load()","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"    activate Storage","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"    return list: ArrayList\u003cItem\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"    create ItemList","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"    InvMgr -\u003e ItemList: ItemList(list)","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"    activate ItemList","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"    return","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"    loop until ExitCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"        InvMgr -\u003e Ui: getRawUserInput()","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"        activate Ui","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"        return command: String","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"        InvMgr -\u003e Parser: parse(command)","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"IncompetentDev"},"content":"        activate Parser","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"IncompetentDev"},"content":"        return inputCommand: Command","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"IncompetentDev"},"content":"        InvMgr -\u003e Command: execute(itemList, ui)","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"IncompetentDev"},"content":"        activate Command","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"IncompetentDev"},"content":"        return","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"IncompetentDev"},"content":"        InvMgr -\u003e Storage: save(itemList)","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"IncompetentDev"},"content":"        activate Storage","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"IncompetentDev"},"content":"        return","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"IncompetentDev"},"content":"    end","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"IncompetentDev"},"content":"deactivate InvMgr","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"IncompetentDev"},"content":"@enduml","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"IncompetentDev":55}},{"path":"docs/diagrams/CommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"abstract Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":" -isExit:boolean","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":" +execute(itemList:ItemList, ui:Ui):void","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":" +isExit():boolean {abstract}","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"lestersimjj"},"content":"class AddCommand {","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"lestersimjj"},"content":" -itemToAdd:Item","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"lestersimjj"},"content":" +execute(itemList:ItemList, ui:Ui):void","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"lestersimjj"},"content":"class DescCommand {","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"lestersimjj"},"content":" -index:int","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"lestersimjj"},"content":" +execute(itemList:ItemList, ui:Ui):void","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"lestersimjj"},"content":"class ListCommand {","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"lestersimjj"},"content":" +execute(itemList:ItemList, ui:Ui):void","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"lestersimjj"},"content":"class DeleteCommand {","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"lestersimjj"},"content":" -index:int","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"lestersimjj"},"content":" +execute(itemList:ItemList, ui:Ui):void","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"lestersimjj"},"content":"class HelpCommand {","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"lestersimjj"},"content":" +execute(itemList:ItemList, ui:Ui):void","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"lestersimjj"},"content":"class ExitCommand {","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"lestersimjj"},"content":" +execute(itemList:ItemList, ui:Ui):void","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"lestersimjj"},"content":" +isExit():boolean","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"lestersimjj"},"content":"Command \u003c|-- AddCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"lestersimjj"},"content":"Command \u003c|-- DescCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"lestersimjj"},"content":"Command \u003c|-- ListCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"lestersimjj"},"content":"Command \u003c|-- DeleteCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"lestersimjj"},"content":"Command \u003c|-- HelpCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"lestersimjj"},"content":"Command \u003c|-- ExitCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"lestersimjj"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"lestersimjj":45}},{"path":"docs/diagrams/DeleteCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"quitejasper"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"quitejasper"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"quitejasper"},"content":"hide footbox","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"quitejasper"},"content":"skinparam guillemet false","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"quitejasper"},"content":"skinparam sequenceStereotypeFontColor red","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"quitejasper"},"content":"skinparam sequenceStereotypeFontStyle bold","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"quitejasper"},"content":"Participant \":InvMgr\" as invmgr","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"quitejasper"},"content":"Participant \"Parser\" as parser \u003c\u003cclass\u003e\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"quitejasper"},"content":"Participant \"inputCommand:DeleteCommand\" as cmd","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"quitejasper"},"content":"Participant \"itemList:ItemList\" as itemlist","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"quitejasper"},"content":"Participant \"ui:Ui\" as ui","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"quitejasper"},"content":"activate invmgr","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"quitejasper"},"content":"-\u003e invmgr","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"quitejasper"},"content":"invmgr -\u003e parser:parse(\"delete 1\")","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"quitejasper"},"content":"activate parser","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"quitejasper"},"content":"create cmd","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"quitejasper"},"content":"parser -\u003e cmd:DeleteCommand(deleteIndex: Integer)","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"quitejasper"},"content":"activate cmd","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"quitejasper"},"content":"return :DeleteCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"quitejasper"},"content":"return inputCommand:DeleteCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"quitejasper"},"content":"invmgr -\u003e cmd:execute(itemList:ItemList, ui:Ui)","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"quitejasper"},"content":"activate cmd","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"quitejasper"},"content":"cmd -\u003e itemlist:removeItem(deleteIndex: Integer))","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"quitejasper"},"content":"activate itemlist","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"quitejasper"},"content":"return removedItem:Item","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"quitejasper"},"content":"cmd -\u003e ui:showMessages(removedItem + \" has been deleted.\")","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"quitejasper"},"content":"activate ui","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"quitejasper"},"content":"return","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"quitejasper"},"content":"return","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"quitejasper"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"quitejasper":40}},{"path":"docs/diagrams/DescCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"skinparam sequenceStereotypeFontColor red","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"Participant \":InvMgr\" as InvMgr","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"Participant \"Parser\" as Parser \u003c\u003cclass\u003e\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"Participant \"inputCommand:DescCommand\" as DescCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"lestersimjj"},"content":"Participant \"itemList:ItemList\" as ItemList","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"lestersimjj"},"content":"Participant \"ui:Ui\" as Ui","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"lestersimjj"},"content":"Participant \"storage:Storage\" as Storage","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"lestersimjj"},"content":"InvMgr -\u003e InvMgr: run","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"lestersimjj"},"content":"activate InvMgr","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"lestersimjj"},"content":"    InvMgr -\u003e Parser: parse(\"desc 1\")","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"lestersimjj"},"content":"    activate Parser","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"lestersimjj"},"content":"        create DescCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"lestersimjj"},"content":"        Parser -\u003e DescCommand: DescCommand(descIndex:int)","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"lestersimjj"},"content":"        activate DescCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"lestersimjj"},"content":"            return","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"lestersimjj"},"content":"        return inputCommand: DescCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"lestersimjj"},"content":"    InvMgr -\u003e DescCommand: execute(itemList:ItemList, ui:Ui)","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"lestersimjj"},"content":"    activate DescCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"lestersimjj"},"content":"        DescCommand -\u003e ItemList: getItem(index:int)","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"lestersimjj"},"content":"        activate ItemList","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"lestersimjj"},"content":"            return item:Item","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"lestersimjj"},"content":"        DescCommand -\u003e Ui: showMessages(message:String)","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"lestersimjj"},"content":"        activate Ui","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"lestersimjj"},"content":"            return","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"lestersimjj"},"content":"        return","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"lestersimjj"},"content":"    InvMgr -\u003e Storage: writeData(ArrayList)","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"lestersimjj"},"content":"    activate Storage","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"lestersimjj"},"content":"        return","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"lestersimjj"},"content":"deactivate InvMgr","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"lestersimjj"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"lestersimjj":41}},{"path":"docs/diagrams/ListCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cheshire-doge"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"cheshire-doge"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"cheshire-doge"},"content":"hide footbox","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"cheshire-doge"},"content":"skinparam guillemet false","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"cheshire-doge"},"content":"skinparam sequenceStereotypeFontColor red","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"cheshire-doge"},"content":"skinparam sequenceStereotypeFontStyle bold","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":"Participant \":InvMgr\" as invmgr","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"cheshire-doge"},"content":"Participant \"Parser\" as parser \u003c\u003cclass\u003e\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"cheshire-doge"},"content":"Participant \":ListCommand\" as lstcmd","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"cheshire-doge"},"content":"Participant \"itemList:ItemList\" as itmlst","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"cheshire-doge"},"content":"Participant \"ui:Ui\" as ui","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"cheshire-doge"},"content":"activate invmgr","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"cheshire-doge"},"content":"-\u003e invmgr","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"cheshire-doge"},"content":"invmgr -\u003e parser:parse(\"list\")","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"cheshire-doge"},"content":"activate parser","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"cheshire-doge"},"content":"create lstcmd","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"cheshire-doge"},"content":"parser -\u003e lstcmd","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"cheshire-doge"},"content":"activate lstcmd","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"cheshire-doge"},"content":"return","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"cheshire-doge"},"content":"return inputCommand:ListCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"cheshire-doge"},"content":"invmgr -\u003e lstcmd:execute(itemList: ItemList, ui: Ui)","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"cheshire-doge"},"content":"activate lstcmd","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"cheshire-doge"},"content":"loop int i \u003d 0; i \u003c itemList.getSize(); i++","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"cheshire-doge"},"content":"    lstcmd -\u003e itmlst:getItem(i)","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"cheshire-doge"},"content":"    activate itmlst","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"cheshire-doge"},"content":"    return","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"cheshire-doge"},"content":"    lstcmd -\u003e ui:showMessages(String.valueOf(i + 1) + \".\" + itemList.getItem(i))","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"cheshire-doge"},"content":"    activate ui","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"cheshire-doge"},"content":"    return ","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"cheshire-doge"},"content":"end","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"cheshire-doge"},"content":"return","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"cheshire-doge"},"content":"destroy lstcmd","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"cheshire-doge"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"cheshire-doge":43}},{"path":"docs/diagrams/ParserClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cheshire-doge"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"cheshire-doge"},"content":"hide circle","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"cheshire-doge"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"cheshire-doge"},"content":"package \"Parser Component\" \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"cheshire-doge"},"content":"    class Parser","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"cheshire-doge"},"content":"Command \u003c.left. Parser: creates","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"cheshire-doge"},"content":"Parser \u003c-left- InvMgr","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"class InvMgr {","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"cheshire-doge"},"content":"+ InvMgr(filePath: String)","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"cheshire-doge"},"content":"- Storage storage","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"cheshire-doge"},"content":"- ItemList itemList","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"cheshire-doge"},"content":"- Ui ui","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"cheshire-doge"},"content":"__","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"cheshire-doge"},"content":"+run()","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"cheshire-doge"},"content":"+main()","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"cheshire-doge"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"cheshire-doge"},"content":"class Parser {","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"cheshire-doge"},"content":"__","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"cheshire-doge"},"content":"+ parse(userCommand: String): Command","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"cheshire-doge"},"content":"- createItem(userCommand: String): Item","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"cheshire-doge"},"content":"- getName(itemString: String[]): String","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"cheshire-doge"},"content":"- getQuantity(itemString: String[]): int","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"cheshire-doge"},"content":"- getDesc(itemString: String[]): String","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"cheshire-doge"},"content":"- isNum(number: String): boolean","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"cheshire-doge"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"cheshire-doge"},"content":"abstract class Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"cheshire-doge"},"content":"- boolean isExit","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"cheshire-doge"},"content":"__","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"cheshire-doge"},"content":"+ Command()","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"cheshire-doge"},"content":"+ isExit(): boolean","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"cheshire-doge"},"content":"+ {abstract} execute(itemList: ItemList, ui: Ui)","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"cheshire-doge"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"cheshire-doge"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"cheshire-doge":41}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"hide circle","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"hide empty members","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"hide empty attributes","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"package \"Storage Component\" \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"    class Storage","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"    class Gson","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"class InvMgr {","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"    - storage: Storage","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"    - itemList: ItemList","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"    - ui: Ui","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"    + main()","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"    - run()","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"class Storage {","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"    - filePath:String","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"    - dataPath: Path","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"    + load(): ArrayList\u003cItem\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"    + save(itemList: ArrayList\u003cItem\u003e)","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"    - validatePathExists(filePath: String)","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"class Gson {","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"class ArrayList\u003cItem\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"InvMgr -right-\u003e \"1\" Storage","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"Storage -[dashed]right-\u003e Gson: uses","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"Gson -[dashed]-\u003e ArrayList: serialises to \u0026 deserialises \u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"IncompetentDev":40}},{"path":"docs/diagrams/StorageInitialisationSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"hide footbox","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"skinparam SequenceReferenceBackgroundColor pink","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"participant \":InvMgr\" as InvMgr","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"participant \"storage:Storage\" as Storage","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"activate InvMgr","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"    create Storage","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"    InvMgr -\u003e Storage : Storage(filePath)","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"    activate Storage","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"        Storage -\u003e Storage : validatePathExists(filePath)","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"        activate Storage","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"        return dataPath: Path","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"    return","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"IncompetentDev":18}},{"path":"docs/diagrams/StorageLoadSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"hide footbox","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"skinparam SequenceReferenceBackgroundColor pink","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"participant \":InvMgr\" as InvMgr","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"participant \"storage:Storage\" as Storage","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"participant \"gson:Gson\" as Gson","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"activate InvMgr","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"    InvMgr -\u003e Storage : load()","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"    activate Storage","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"        create Gson","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"        Storage -\u003e Gson : Gson()","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"        activate Gson","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"        return","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"        ref over Storage","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"            Read dataFile into","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"            wholeJsonData: String","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"        end ref","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"        Storage -\u003e Gson : fromJson(wholeJsonData)","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"        activate Gson","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"        return","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"    return itemList: ArrayList\u003cItem\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"IncompetentDev":31}},{"path":"docs/diagrams/StorageSaveSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"hide footbox","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"skinparam SequenceReferenceBackgroundColor pink","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"participant \":InvMgr\" as InvMgr","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"participant \"storage:Storage\" as Storage","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"participant \"gson:Gson\" as Gson","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"activate InvMgr","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"    InvMgr -\u003e Storage : save(itemList: ArrayList\u003cItem\u003e)","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"    activate Storage","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"        create Gson","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"        Storage -\u003e Gson : Gson()","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"        activate Gson","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"        return","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"        Storage -\u003e Gson : toJson(itemList)","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"        activate Gson","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"        return serializedItems: String","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"        ref over Storage","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"            Write serializedItems: String","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"            into dataFile","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"        end ref","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"    return","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"IncompetentDev":30}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chihyingho"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"chihyingho"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"chihyingho"},"content":"class InvMgr","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"chihyingho"},"content":"class Ui","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"chihyingho"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"chihyingho"},"content":"package common \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"chihyingho"},"content":"    class Messages","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"chihyingho"},"content":"    class InvMgrException","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"chihyingho"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"chihyingho"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"chihyingho"},"content":"package commands \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"chihyingho"},"content":"    class Command","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"chihyingho"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"chihyingho"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"chihyingho"},"content":"class InvMgr {","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"chihyingho"},"content":"    - storage: Storage","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"chihyingho"},"content":"    - itemList: ItemList","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"chihyingho"},"content":"    - run(): void","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"chihyingho"},"content":"    - main(String[] args): void","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"chihyingho"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"chihyingho"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"chihyingho"},"content":"class Ui {","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"chihyingho"},"content":"    - scanner: Scanner","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"chihyingho"},"content":"    + showMessages(String...message): void","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"chihyingho"},"content":"    + showWelcomeMessage(): void","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"chihyingho"},"content":"    + showDivider(): void","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"chihyingho"},"content":"    + showError(InvMgrException e)(): void","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"chihyingho"},"content":"    + getRawUserInput(): String","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"chihyingho"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"chihyingho"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"chihyingho"},"content":"InvMgr --\u003e \"1\" Ui","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"chihyingho"},"content":"Ui ..\u003e InvMgrException","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"chihyingho"},"content":"Ui ..\u003e Messages","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"chihyingho"},"content":"Command ..\u003e Ui","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"chihyingho"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"chihyingho":35}},{"path":"src/main/java/seedu/duke/InvMgr.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.data.Item;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.data.ItemList;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.exceptions.InvMgrException;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.parser.InputParser;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"chihyingho"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"public class InvMgr {","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"    private Storage storage;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"    private ItemList itemList;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"    private Ui ui;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"chihyingho"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"     * Sets up the required objects, loads the user\u0027s inventory list file from the user\u0027s hard disk.","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"chihyingho"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"chihyingho"},"content":"     * @param filePath File path of the user\u0027s inventory list file","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"chihyingho"},"content":"     * */","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"    public InvMgr(String filePath) {","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"chihyingho"},"content":"        assert filePath !\u003d null : \"File path cannot be a null string!\";","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"            itemList \u003d new ItemList(storage.load());","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"        } catch (InvMgrException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"chihyingho"},"content":"            ui.showMessages(Messages.ERROR_MESSAGE);","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"            itemList \u003d new ItemList(new ArrayList\u003cItem\u003e());","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"chihyingho"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"     * Greets the user and processes the user\u0027s inputs until the user issues an exit command.","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"chihyingho"},"content":"     * */","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"chihyingho"},"content":"    private void run() {","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"chihyingho"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"IncompetentDev"},"content":"        while (!isExit) {","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"cheshire-doge"},"content":"            try {","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"chihyingho"},"content":"                String command \u003d ui.getRawUserInput();","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"IncompetentDev"},"content":"                Command inputCommand \u003d InputParser.parse(command);","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"lestersimjj"},"content":"                inputCommand.execute(itemList, ui);","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"lestersimjj"},"content":"                isExit \u003d inputCommand.isExit();","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"IncompetentDev"},"content":"                storage.save(itemList.getItemArrayList());","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"cheshire-doge"},"content":"            } catch (InvMgrException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"cheshire-doge"},"content":"                ui.showError(e);","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"cheshire-doge"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"chihyingho"},"content":"        assert false : \"Execution should never reach this point!\";","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"IncompetentDev"},"content":"     * Main entry-point for the java.duke.InvMgr application.","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"IncompetentDev"},"content":"        new InvMgr(\"data/inventoryData.json\").run();","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"chihyingho"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"IncompetentDev":35,"chihyingho":14,"-":8,"cheshire-doge":4,"lestersimjj":2}},{"path":"src/main/java/seedu/duke/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"quitejasper"},"content":"package seedu.duke.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"quitejasper"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"quitejasper"},"content":"import seedu.duke.data.Item;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"quitejasper"},"content":"import seedu.duke.data.ItemList;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"quitejasper"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"quitejasper"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"quitejasper"},"content":" * Adds an item to the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"quitejasper"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"quitejasper"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"quitejasper"},"content":"    private final Item itemToAdd;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"chihyingho"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"chihyingho"},"content":"    public static final String COMMAND_NAME \u003d \"Add Item\";","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"chihyingho"},"content":"    public static final String USAGE_MESSAGE \u003d \"Adds an item to the inventory list\";","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"chihyingho"},"content":"    public static final String COMMAND_FORMAT \u003d COMMAND_WORD + \" [item name] [item quantity]\";","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"chihyingho"},"content":"    public static final String HELP_MESSAGE \u003d COMMAND_NAME + \":\\n\" + \"[Function] \" + USAGE_MESSAGE + \":\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"chihyingho"},"content":"            + \"[Command Format] \" + COMMAND_FORMAT + \"\\n\";","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"quitejasper"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"quitejasper"},"content":"     * Creates an AddCommand to add the specified {@code Item}.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"quitejasper"},"content":"     * @param itemToAdd The specified item.","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"quitejasper"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"quitejasper"},"content":"    public AddCommand(Item itemToAdd) {","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"quitejasper"},"content":"        requireNonNull(itemToAdd, \"item should not be null!\");","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"quitejasper"},"content":"        this.itemToAdd \u003d itemToAdd;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"quitejasper"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"quitejasper"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"quitejasper"},"content":"    public void execute(ItemList itemList, Ui ui) {","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"quitejasper"},"content":"        itemList.addItem(itemToAdd);","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"chihyingho"},"content":"        ui.showMessages(itemToAdd + \" has been added!\");","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"quitejasper"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"                \u0026\u0026 itemToAdd.equals(((AddCommand) other).itemToAdd));","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"quitejasper"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"IncompetentDev":7,"quitejasper":28,"chihyingho":7}},{"path":"src/main/java/seedu/duke/commands/BorrowCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"package seedu.duke.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"import seedu.duke.data.BorrowRecord;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"import seedu.duke.data.BorrowStatus;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"import seedu.duke.data.ItemList;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"lestersimjj"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"lestersimjj"},"content":" * Borrow an item from the inventory for a specified duration.","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"lestersimjj"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"lestersimjj"},"content":"public class BorrowCommand extends Command {","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"lestersimjj"},"content":"    private final int itemIndex;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"lestersimjj"},"content":"    private final LocalDate startDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"lestersimjj"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"lestersimjj"},"content":"    private final String borrowerName;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"lestersimjj"},"content":"    private final BorrowStatus borrowStatus;","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"lestersimjj"},"content":"    public BorrowCommand(int itemIndex, String startDateStr, String endDateStr, String borrowerName) {","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"lestersimjj"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"lestersimjj"},"content":"        this.startDate \u003d LocalDate.parse(startDateStr);","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"lestersimjj"},"content":"        this.endDate \u003d LocalDate.parse(endDateStr);","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"lestersimjj"},"content":"        this.borrowerName \u003d borrowerName;","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"lestersimjj"},"content":"        // Determine the borrow status compared to today\u0027s date","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"lestersimjj"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"lestersimjj"},"content":"        if (today.isAfter(this.endDate)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"lestersimjj"},"content":"            this.borrowStatus \u003d BorrowStatus.PAST;","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"lestersimjj"},"content":"        } else if (today.isBefore(this.startDate)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"lestersimjj"},"content":"            this.borrowStatus \u003d BorrowStatus.FUTURE;","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"lestersimjj"},"content":"        } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"lestersimjj"},"content":"            this.borrowStatus \u003d BorrowStatus.PRESENT;","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"lestersimjj"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"lestersimjj"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"lestersimjj"},"content":"    public void execute(ItemList itemList, Ui ui) {","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"lestersimjj"},"content":"        BorrowRecord newRecord \u003d new BorrowRecord(startDate, endDate, borrowerName, borrowStatus);","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"lestersimjj"},"content":"        itemList.addBorrowRecord(itemIndex, newRecord);","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"lestersimjj"},"content":"        System.out.println(\"Successfully added borrow record!\");","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"lestersimjj":42}},{"path":"src/main/java/seedu/duke/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.data.ItemList;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.exceptions.InvMgrException;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"public abstract class Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"chihyingho"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"chihyingho"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"     * Represents whether a command is an exit command.","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"chihyingho"},"content":"     * */","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"chihyingho"},"content":"    private boolean isExit;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"chihyingho"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"chihyingho"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"     * By default, a command initialised as a non-exit command.","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"chihyingho"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"chihyingho"},"content":"    public Command() {","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"chihyingho"},"content":"        isExit \u003d false;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"chihyingho"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"chihyingho"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"chihyingho"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"     * Returns whether a command is an exit command.","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"chihyingho"},"content":"     * */","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"chihyingho"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"chihyingho"},"content":"        return isExit;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"chihyingho"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"chihyingho"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"lestersimjj"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"lestersimjj"},"content":"     * Executes a command and prints any output to Ui. It also saves the output, if any, to Storage.","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"lestersimjj"},"content":"     * Different types of command will have different execution procedures.","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"     * Only child classes should call this function.","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"lestersimjj"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"lestersimjj"},"content":"     * @param itemList ItemList containing all items in the current inventory","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"lestersimjj"},"content":"     * @param ui User Interface for reading inputs and/or printing outputs","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"lestersimjj"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"    public void execute(ItemList itemList, Ui ui) throws InvMgrException {","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"        throw new UnsupportedOperationException();","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"IncompetentDev":15,"chihyingho":17,"lestersimjj":8}},{"path":"src/main/java/seedu/duke/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"quitejasper"},"content":"package seedu.duke.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"quitejasper"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"quitejasper"},"content":"import static seedu.duke.common.Messages.ERROR_MESSAGE;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"quitejasper"},"content":"import static seedu.duke.common.Messages.INVALID_INDEX;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"quitejasper"},"content":"import seedu.duke.data.Item;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"quitejasper"},"content":"import seedu.duke.data.ItemList;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"quitejasper"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"quitejasper"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"quitejasper"},"content":" * Deletes an item identified using it\u0027s displayed index from the item list.","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"quitejasper"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"quitejasper"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"chihyingho"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"chihyingho"},"content":"    public static final String COMMAND_NAME \u003d \"Delete Item\";","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"chihyingho"},"content":"    public static final String USAGE_MESSAGE \u003d \"Deletes an item from the inventory list\";","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"chihyingho"},"content":"    public static final String COMMAND_FORMAT \u003d COMMAND_WORD + \" [item number]\";","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"chihyingho"},"content":"    public static final String HELP_MESSAGE \u003d COMMAND_NAME + \":\\n\" + \"[Function] \" + USAGE_MESSAGE + \":\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"chihyingho"},"content":"            + \"[Command Format] \" + COMMAND_FORMAT + \"\\n\";","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"quitejasper"},"content":"    private final int index;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"quitejasper"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"quitejasper"},"content":"     * Creates a DeleteCommand to delete item using specified index.","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"quitejasper"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"quitejasper"},"content":"     * @param index index specified.","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"quitejasper"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"quitejasper"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"quitejasper"},"content":"        requireNonNull(index, \"no index was indicated!\");","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"quitejasper"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"quitejasper"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"quitejasper"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"quitejasper"},"content":"    public void execute(ItemList itemList, Ui ui) {","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"quitejasper"},"content":"        assert index !\u003d 0 : \"index indicated is 0.\";","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"quitejasper"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"quitejasper"},"content":"            Item removedItem \u003d itemList.removeItem(index);","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"chihyingho"},"content":"            ui.showMessages(removedItem + \" has been deleted.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"quitejasper"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"quitejasper"},"content":"            ui.showMessages(ERROR_MESSAGE, INVALID_INDEX);","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"quitejasper"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"quitejasper"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"IncompetentDev"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"IncompetentDev"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"IncompetentDev"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"IncompetentDev"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"IncompetentDev"},"content":"                \u0026\u0026 (this.index \u003d\u003d ((DeleteCommand) other).index));","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"quitejasper"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"IncompetentDev":7,"quitejasper":37,"chihyingho":7}},{"path":"src/main/java/seedu/duke/commands/DescCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"package seedu.duke.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"import seedu.duke.data.Item;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"import seedu.duke.data.ItemList;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"public class DescCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"chihyingho"},"content":"    public static final String COMMAND_WORD \u003d \"desc\";","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"chihyingho"},"content":"    public static final String COMMAND_NAME \u003d \"Describe Item\";","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"chihyingho"},"content":"    public static final String USAGE_MESSAGE \u003d \"Describes the function of an item\";","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"chihyingho"},"content":"    public static final String COMMAND_FORMAT \u003d COMMAND_WORD + \" [item number]\";","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"chihyingho"},"content":"    public static final String HELP_MESSAGE \u003d COMMAND_NAME + \":\\n\" + \"[Function] \" + USAGE_MESSAGE + \":\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"chihyingho"},"content":"            + \"[Command Format] \" + COMMAND_FORMAT + \"\\n\";","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"lestersimjj"},"content":"    private final int index;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"lestersimjj"},"content":"    public DescCommand(int index) {","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"lestersimjj"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"lestersimjj"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"lestersimjj"},"content":"    public void execute(ItemList itemList, Ui ui) {","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"lestersimjj"},"content":"        // Get item from itemList by searching for the item\u0027s name","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"lestersimjj"},"content":"        Item item \u003d itemList.getItem(index);","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"lestersimjj"},"content":"        // Print item name and description","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"lestersimjj"},"content":"        ui.showMessages(\"Name of Item: \" + item.getName() + System.lineSeparator()","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"lestersimjj"},"content":"                + \"Description: \" + item.getDescription());","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"                || (other instanceof DescCommand // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"                \u0026\u0026 (this.index \u003d\u003d ((DescCommand) other).index));","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"IncompetentDev":7,"chihyingho":6,"lestersimjj":23}},{"path":"src/main/java/seedu/duke/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.data.Item;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.data.ItemList;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.exceptions.InvMgrException;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"    public static final String COMMAND_NAME \u003d \"Edit Item\";","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"    public static final String USAGE_MESSAGE \u003d \"Edits the name and/or description of an item.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"    public static final String COMMAND_FORMAT \u003d COMMAND_WORD + \"/n name [/d description] | [/n name] /d description]\";","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"    public static final String HELP_MESSAGE \u003d COMMAND_NAME + \":\\n\" + \"[Function] \" + USAGE_MESSAGE + \":\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"            + \"[Command Format] \" + COMMAND_FORMAT + \"\\n\";","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"    private final int index;","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"    private final Optional\u003cString\u003e name;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"    private final Optional\u003cInteger\u003e quantity;","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"    private final Optional\u003cString\u003e description;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"    private final Optional\u003cBoolean\u003e relativeAdd;","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"    public EditCommand(int index,","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"            Optional\u003cString\u003e name, Optional\u003cInteger\u003e quantity,","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"            Optional\u003cString\u003e description, Optional\u003cBoolean\u003e relativeAdd) {","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"        this.relativeAdd \u003d relativeAdd;","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"    public void execute(ItemList itemList, Ui ui) throws InvMgrException {","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"        Item targetedItem;","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"            targetedItem \u003d itemList.getItem(this.index);","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"            throw new InvMgrException(Messages.INVALID_INDEX);","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"IncompetentDev"},"content":"        Item placeholderItem \u003d new Item(targetedItem.getName(),","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"IncompetentDev"},"content":"                targetedItem.getQuantity(), targetedItem.getDescription());","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"IncompetentDev"},"content":"        if (this.name.isPresent()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"IncompetentDev"},"content":"            placeholderItem.setName(this.name.get());","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"IncompetentDev"},"content":"        if (this.quantity.isPresent() \u0026\u0026 this.relativeAdd.isPresent()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"IncompetentDev"},"content":"            int currentQuantity \u003d placeholderItem.getQuantity();","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"IncompetentDev"},"content":"            int multiplier \u003d this.relativeAdd.get() ? 1 : -1;","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"IncompetentDev"},"content":"            int newQuantity \u003d currentQuantity + multiplier * this.quantity.get();","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"IncompetentDev"},"content":"            try {","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"IncompetentDev"},"content":"                placeholderItem.setQuantity(newQuantity);","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"IncompetentDev"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"IncompetentDev"},"content":"                throw new InvMgrException(Messages.NEGATIVE_QUANTITY_MESSAGE, e);","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"IncompetentDev"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"IncompetentDev"},"content":"        } else if (this.quantity.isPresent() \u0026\u0026 !this.relativeAdd.isPresent()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"IncompetentDev"},"content":"            placeholderItem.setQuantity(quantity.get());","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"IncompetentDev"},"content":"        if (this.description.isPresent()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"IncompetentDev"},"content":"            placeholderItem.setName(this.description.get());","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"IncompetentDev"},"content":"        itemList.set(index, placeholderItem);","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"IncompetentDev"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"IncompetentDev"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"IncompetentDev"},"content":"        EditCommand toCompare;","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"IncompetentDev"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"IncompetentDev"},"content":"            // return if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"IncompetentDev"},"content":"            return true;","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"IncompetentDev"},"content":"        if (other instanceof EditCommand) {","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"IncompetentDev"},"content":"            // cast only if other is instance of EditCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"IncompetentDev"},"content":"            toCompare \u003d (EditCommand) other;","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"IncompetentDev"},"content":"            return (this.index \u003d\u003d toCompare.index)","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"IncompetentDev"},"content":"                    \u0026\u0026 (this.name.equals(toCompare.name))","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"IncompetentDev"},"content":"                    \u0026\u0026 (this.quantity.equals(toCompare.quantity))","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"IncompetentDev"},"content":"                    \u0026\u0026 (this.description.equals(toCompare.description))","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"IncompetentDev"},"content":"                    \u0026\u0026 (this.relativeAdd.equals(toCompare.relativeAdd));","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"IncompetentDev"},"content":"        } else {","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"IncompetentDev"},"content":"            // null, or object not EditCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"IncompetentDev"},"content":"            return false;","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"IncompetentDev":90}},{"path":"src/main/java/seedu/duke/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"package seedu.duke.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"import seedu.duke.data.ItemList;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"chihyingho"},"content":"    public static final String COMMAND_NAME \u003d \"Exit\";","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"chihyingho"},"content":"    public static final String USAGE_MESSAGE \u003d \"Terminates the application\";","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"chihyingho"},"content":"    public static final String COMMAND_FORMAT \u003d COMMAND_WORD;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"chihyingho"},"content":"    public static final String HELP_MESSAGE \u003d COMMAND_NAME + \":\\n\" + \"[Function] \" + USAGE_MESSAGE + \":\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"chihyingho"},"content":"            + \"[Command Format] \" + COMMAND_FORMAT + \"\\n\";","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"chihyingho"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"lestersimjj"},"content":"    public void execute(ItemList itemList, Ui ui) {","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"chihyingho"},"content":"        ui.showMessages(\"bye\");","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"lestersimjj"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"lestersimjj"},"content":"     * Returns True to override the default as this is a command to exit the program.","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"lestersimjj"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"lestersimjj"},"content":"     * @return True to indicate this is a Command to exit the program","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"lestersimjj"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"lestersimjj"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"lestersimjj"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"lestersimjj"},"content":"        return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"IncompetentDev":1,"chihyingho":7,"lestersimjj":20}},{"path":"src/main/java/seedu/duke/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chihyingho"},"content":"package seedu.duke.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"chihyingho"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"chihyingho"},"content":"import seedu.duke.data.ItemList;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"chihyingho"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"chihyingho"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"chihyingho"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"chihyingho"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"chihyingho"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"chihyingho"},"content":"    public static final String COMMAND_NAME \u003d \"Help\";","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"chihyingho"},"content":"    public static final String USAGE_MESSAGE \u003d \"Displays all functions of inventory manager\";","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"chihyingho"},"content":"    public static final String COMMAND_FORMAT \u003d COMMAND_WORD;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"    public static final String HELP_MESSAGE \u003d COMMAND_NAME + \":\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"            + \"[Function] \"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"            + USAGE_MESSAGE","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"            + \":\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"            + \"[Command Format] \"","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"            + COMMAND_FORMAT","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"            + \"\\n\";","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"chihyingho"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"chihyingho"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"chihyingho"},"content":"    public void execute(ItemList itemList, Ui ui) {","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"chihyingho"},"content":"        System.out.println(Messages.COMMAND_MENU_MESSAGE + Messages.DIVIDER","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"chihyingho"},"content":"                + AddCommand.HELP_MESSAGE + Messages.DIVIDER","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"chihyingho"},"content":"                + DeleteCommand.HELP_MESSAGE + Messages.DIVIDER","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"chihyingho"},"content":"                + DescCommand.HELP_MESSAGE + Messages.DIVIDER","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"chihyingho"},"content":"                + ExitCommand.HELP_MESSAGE + Messages.DIVIDER","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"chihyingho"},"content":"                + HelpCommand.HELP_MESSAGE + Messages.DIVIDER);","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"chihyingho"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"chihyingho"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"IncompetentDev":7,"chihyingho":22}},{"path":"src/main/java/seedu/duke/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheshire-doge"},"content":"package seedu.duke.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"cheshire-doge"},"content":"import seedu.duke.data.ItemList;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"cheshire-doge"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"cheshire-doge"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"cheshire-doge"},"content":"     * Prints out the list of items in the itemList.","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"cheshire-doge"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"cheshire-doge"},"content":"    public void execute(ItemList itemList, Ui ui) {","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"quitejasper"},"content":"        ui.showMessages(\"Here are the items in your list:\");","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"cheshire-doge"},"content":"        for (int i \u003d 0; i \u003c itemList.getSize(); i++) {","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"cheshire-doge"},"content":"            ui.showMessages(String.valueOf(i + 1) + \".\" + itemList.getItem(i));","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"cheshire-doge"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"cheshire-doge"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"cheshire-doge"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"IncompetentDev":2,"quitejasper":1,"cheshire-doge":18}},{"path":"src/main/java/seedu/duke/commands/SearchCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.data.Item;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.data.ItemList;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"import java.util.List;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"/** Performs case insensitive search of an Item\u0027s name, or description, or both. */","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"public class SearchCommand extends Command {","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"    public static final String COMMAND_WORD \u003d \"search\";","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"    public static final String COMMAND_NAME \u003d \"Search Item\";","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"    public static final String USAGE_MESSAGE \u003d \"Search for the name and/or description of an item.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"    public static final String COMMAND_FORMAT \u003d COMMAND_WORD + \"/n name [/d description] | [/n name] /d description]\";","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"    public static final String HELP_MESSAGE \u003d COMMAND_NAME + \":\\n\" + \"[Function] \" + USAGE_MESSAGE + \":\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"            + \"[Command Format] \" + COMMAND_FORMAT + \"\\n\";","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"    public static final String SEARCH_RESULT_PREAMBLE \u003d \"Here are the items matching your search terms: \";","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"    public static final String SEARCH_RESULT_ENTRY_FORMAT \u003d \"%d. %s\";","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"    private final Optional\u003cString\u003e name;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"    private final Optional\u003cString\u003e description;","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"     * Constructs a SearchCommand.","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"     * One of {@code name} or {@code description} must not be null.","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"     * @param name a name to search for","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"     * @param description a description to search for","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"     * @throws NullPointerException if the constructor is called when both name and description are null.","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"    public SearchCommand(Optional\u003cString\u003e name, Optional\u003cString\u003e description) {","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"        if (!name.isPresent() \u0026\u0026 !description.isPresent()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"            throw new NullPointerException();","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"    public void execute(ItemList itemList, Ui ui) {","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"IncompetentDev"},"content":"        // O(n) search for items matching name and description","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"IncompetentDev"},"content":"        List\u003cItem\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"IncompetentDev"},"content":"        for (int i \u003d 0; i \u003c itemList.getSize(); i++) {","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"IncompetentDev"},"content":"            Item searchItem \u003d itemList.getItem(i);","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"IncompetentDev"},"content":"            if (this.name.isPresent() \u0026\u0026 !caseInsensitiveContains(searchItem.getName(), this.name.get())) {","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"IncompetentDev"},"content":"                continue;","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"IncompetentDev"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"IncompetentDev"},"content":"            if (this.description.isPresent() \u0026\u0026 !caseInsensitiveContains(searchItem.getDescription(),","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"IncompetentDev"},"content":"                    this.description.get())) {","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"IncompetentDev"},"content":"                continue;","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"IncompetentDev"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"IncompetentDev"},"content":"            results.add(searchItem);","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"IncompetentDev"},"content":"        ui.showMessages(SEARCH_RESULT_PREAMBLE);","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"IncompetentDev"},"content":"        for (int i \u003d 0; i \u003c results.size(); i++) {","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"IncompetentDev"},"content":"            String printMsg \u003d String.format(SEARCH_RESULT_ENTRY_FORMAT, i, results.get(i));","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"IncompetentDev"},"content":"            ui.showMessages(printMsg);","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"IncompetentDev"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"IncompetentDev"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"IncompetentDev"},"content":"        SearchCommand toCompare;","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"IncompetentDev"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"IncompetentDev"},"content":"            // return if same object","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"IncompetentDev"},"content":"            return true;","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"IncompetentDev"},"content":"        if (other instanceof SearchCommand) {","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"IncompetentDev"},"content":"            // cast only if other is instance of SearchCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"IncompetentDev"},"content":"            toCompare \u003d (SearchCommand) other;","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"IncompetentDev"},"content":"            return (this.name.equals(toCompare.name)) \u0026\u0026 (this.description.equals(toCompare.description));","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"IncompetentDev"},"content":"        } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"IncompetentDev"},"content":"            // null, or object not SearchCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"IncompetentDev"},"content":"            return false;","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"IncompetentDev"},"content":"    private boolean caseInsensitiveContains(String str1, String str2) {","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"IncompetentDev"},"content":"        String lowerStr1 \u003d str1.toLowerCase();","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"IncompetentDev"},"content":"        String lowerStr2 \u003d str2.toLowerCase();","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"IncompetentDev"},"content":"        return lowerStr1.contains(lowerStr2);","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"IncompetentDev":85}},{"path":"src/main/java/seedu/duke/common/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chihyingho"},"content":"package seedu.duke.common;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"chihyingho"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"chihyingho"},"content":"public class Messages {","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"chihyingho"},"content":"    public static final String WELCOME_MESSAGE \u003d \"Welcome to Inventory Manager! What can I do for you today?\";","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"chihyingho"},"content":"    public static final String HELP_MESSAGE \u003d \"To find out more about my functions and how to call them,\"","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"chihyingho"},"content":"            + \" key in \u0027help\u0027.\\n\";","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"chihyingho"},"content":"    public static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"chihyingho"},"content":"    public static final String COMMAND_MENU_MESSAGE \u003d \"Here are my functionalities and how to call them: \\n\";","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"chihyingho"},"content":"    public static final String ERROR_MESSAGE \u003d \"Sorry, there was an error!\\n\";","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"    public static final String INVALID_COMMAND \u003d \"I did not understand your command.\\n\" + HELP_MESSAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"quitejasper"},"content":"    public static final String INVALID_INDEX \u003d \"The index you entered was invalid!\\n\";","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"    public static final String INVALID_SYNTAX \u003d \"The syntax you entered for the command is invalid!\";","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"    public static final String INVALID_QUANTITY \u003d \"The quantity you entered was invalid!\\n\";","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"    public static final String INVALID_RELATIVE_MESSAGE \u003d \"The relative multiplier you entered was invalid! \"","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"            + \"Only \u0027+\u0027 and \u0027-\u0027 is allowed.\\n\";","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"    public static final String INVALID_RELATIVE_WITHOUT_QUANTITY \u003d \"The relative multiplier must be used in \"","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"            + \"conjunction with a quantity!\";","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"    public static final String NEGATIVE_QUANTITY_MESSAGE \u003d \"Sorry, the resulting new quantity for the specified item \"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"            + \"would be negative! \"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"            + \"Your command has been terminated; no changes were made.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"chihyingho"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"IncompetentDev":16,"quitejasper":1,"chihyingho":10}},{"path":"src/main/java/seedu/duke/data/BorrowRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"package seedu.duke.data;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"public class BorrowRecord {","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"    private final LocalDate startDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"lestersimjj"},"content":"    private final String borrowerName;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"lestersimjj"},"content":"    private final BorrowStatus borrowStatus;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"lestersimjj"},"content":"    public BorrowRecord(LocalDate startDate, LocalDate endDate, String borrowerName, BorrowStatus borrowStatus) {","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"lestersimjj"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"lestersimjj"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"lestersimjj"},"content":"        this.borrowerName \u003d borrowerName;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"lestersimjj"},"content":"        this.borrowStatus \u003d borrowStatus;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"lestersimjj":17}},{"path":"src/main/java/seedu/duke/data/BorrowStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"package seedu.duke.data;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"public enum BorrowStatus {","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"    PAST,","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"    PRESENT,","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"    FUTURE","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"lestersimjj":7}},{"path":"src/main/java/seedu/duke/data/Item.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.data;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"public class Item {","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"    private static final String NON_ZERO_QUANTITY \u003d \"quantity must be non-zero positive integer!\";","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"    private static final String NOT_NULL_NAME \u003d \"name must not be null!\";","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"    private static final String NOT_NULL_DESCRIPTION \u003d \"description must not be null!\";","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"    private String name;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"lestersimjj"},"content":"    private int quantity;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"    private String description;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"lestersimjj"},"content":"    public ArrayList\u003cBorrowRecord\u003e borrowRecords \u003d new ArrayList\u003cBorrowRecord\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"lestersimjj"},"content":"    public Item(String name, int quantity, String description) {","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"lestersimjj"},"content":"    public String getDescription() {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"lestersimjj"},"content":"        return description;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"lestersimjj"},"content":"    public String getName() {","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"lestersimjj"},"content":"        return name;","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"lestersimjj"},"content":"    public int getQuantity() {","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"lestersimjj"},"content":"        return quantity;","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"    public void setName(String name) {","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"        Objects.requireNonNull(name, NOT_NULL_NAME);","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"    public void setQuantity(int quantity) {","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"        if (quantity \u003c\u003d 0) {","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"IncompetentDev"},"content":"            throw new IllegalArgumentException(NON_ZERO_QUANTITY);","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"IncompetentDev"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"IncompetentDev"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"IncompetentDev"},"content":"        Objects.requireNonNull(description, NOT_NULL_DESCRIPTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"IncompetentDev"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"lestersimjj"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"lestersimjj"},"content":"     * Returns a boolean indicating if an Item contains the search term in the item name.","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"lestersimjj"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"lestersimjj"},"content":"     * @param searchTerm User input of search term","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"lestersimjj"},"content":"     * @return True if search term found in item name. Returns False, if otherwise.","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"lestersimjj"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"lestersimjj"},"content":"    public boolean contains(String searchTerm) {","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"lestersimjj"},"content":"        if (name \u003d\u003d searchTerm) {","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"lestersimjj"},"content":"            return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"lestersimjj"},"content":"        } else {","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"lestersimjj"},"content":"            return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"lestersimjj"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"lestersimjj"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"lestersimjj"},"content":"     * Add a new borrow record to the item.","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"lestersimjj"},"content":"     * @param newRecord A borrow record.","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"lestersimjj"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"lestersimjj"},"content":"    public void addBorrowRecord(BorrowRecord newRecord) {","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"lestersimjj"},"content":"        this.borrowRecords.add(newRecord);","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"lestersimjj"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"lestersimjj"},"content":"     * Returns the string representation of an Item when saved to storage.","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"lestersimjj"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"lestersimjj"},"content":"     * @return String representation of an item for saving.","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"lestersimjj"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"lestersimjj"},"content":"    public String saveString() {","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"lestersimjj"},"content":"        return String.format(\"%s | %d | %s\", name, quantity, description);","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"lestersimjj"},"content":"    // String representation of an item when printed on Ui","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"lestersimjj"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"lestersimjj"},"content":"    public String toString() {","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"lestersimjj"},"content":"        return String.format(\"%s | %d\", name, quantity);","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"IncompetentDev"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"IncompetentDev"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"IncompetentDev"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"IncompetentDev"},"content":"                || (other instanceof Item // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"IncompetentDev"},"content":"                \u0026\u0026 this.name.equals(((Item) other).name)","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"IncompetentDev"},"content":"                \u0026\u0026 this.description.equals(((Item) other).description)","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"IncompetentDev"},"content":"                \u0026\u0026 (this.quantity \u003d\u003d ((Item) other).quantity));","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"IncompetentDev":48,"lestersimjj":49}},{"path":"src/main/java/seedu/duke/data/ItemList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.data;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"public class ItemList {","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"    private ArrayList\u003cItem\u003e itemArrayList;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"    public ItemList(ArrayList\u003cItem\u003e itemList) {","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"        this.itemArrayList \u003d itemList;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"    public void addItem(Item item) {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"        this.itemArrayList.add(item);","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"    public Item removeItem(int index) {","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"        return this.itemArrayList.remove(index);","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"quitejasper"},"content":"    public Item getItem(int index) {","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"        return this.itemArrayList.get(index);","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"quitejasper"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"quitejasper"},"content":"    public int getSize() {","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"        return this.itemArrayList.size();","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"    public Item set(int index, Item item) {","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"        return itemArrayList.set(index, item);","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"    public ArrayList\u003cItem\u003e getItemArrayList() {","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"        return itemArrayList;","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"quitejasper"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"lestersimjj"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"lestersimjj"},"content":"     * Add a borrow record to a specific item in the itemArrayList as indicated","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"lestersimjj"},"content":"     * by the itemIndex.","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"lestersimjj"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"lestersimjj"},"content":"     * @param itemIndex A legal item index on the itemArrayList","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"lestersimjj"},"content":"     * @param newRecord A borrow record","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"lestersimjj"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"lestersimjj"},"content":"    public void addBorrowRecord(int itemIndex, BorrowRecord newRecord) {","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"lestersimjj"},"content":"        this.itemArrayList.get(itemIndex).addBorrowRecord(newRecord);","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"IncompetentDev":31,"quitejasper":6,"lestersimjj":10}},{"path":"src/main/java/seedu/duke/exceptions/InvMgrException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"public class InvMgrException extends Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"    public InvMgrException(String message) {","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"        super(message);","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"    public InvMgrException(String message, Throwable cause) {","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"        super(message, cause);","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"IncompetentDev":12}},{"path":"src/main/java/seedu/duke/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import static seedu.duke.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"import static seedu.duke.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"import static seedu.duke.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.commands.AddCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.data.Item;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.exceptions.InvMgrException;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":" * Parses input arguments and creates a new AddCommand object.","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"     * @throws InvMgrException if the user input does not conform the expected format","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"    public AddCommand parse(String args) throws InvMgrException {","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_QUANTITY, PREFIX_DESCRIPTION);","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_QUANTITY, PREFIX_DESCRIPTION)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"            throw new InvMgrException(Messages.INVALID_SYNTAX);","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"        String name \u003d argMultimap.getValue(PREFIX_NAME).get();","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"        int quantity \u003d ParserUtils.parseQuantity(argMultimap.getValue(PREFIX_QUANTITY).get());","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"        String description \u003d argMultimap.getValue(PREFIX_DESCRIPTION).get();","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"        Item item \u003d new Item(name, quantity, description);","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"        return new AddCommand(item);","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"IncompetentDev"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"IncompetentDev"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"IncompetentDev"},"content":"     * For AddCommand, all of PREFIX_NAME, PREFIX_QUANTITY, and PREFIX_DESCRIPTION is needed.","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"IncompetentDev"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"IncompetentDev"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"IncompetentDev":50}},{"path":"src/main/java/seedu/duke/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"    /** Prefixes mapped to their respective arguments. **/","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"        argValues.add(argValue);","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"IncompetentDev"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"IncompetentDev"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"IncompetentDev"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"IncompetentDev"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"IncompetentDev"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"IncompetentDev"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"IncompetentDev"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"IncompetentDev"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"IncompetentDev"},"content":"    public String getPreamble() {","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"IncompetentDev"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"IncompetentDev":60}},{"path":"src/main/java/seedu/duke/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...} \u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":" * e.g. {@code some preamble text /n name /q 12 /d Description}  where prefixes are {@code /n /q /d}. \u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":" * Leading and trailing whitespaces of an argument value will be discarded.","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"IncompetentDev"},"content":"     * See findAllPrefixPositions.","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"IncompetentDev"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"IncompetentDev"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"IncompetentDev"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"IncompetentDev"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"IncompetentDev"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"IncompetentDev"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"IncompetentDev"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"IncompetentDev"},"content":"        return positions;","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"IncompetentDev"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"IncompetentDev"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"IncompetentDev"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"IncompetentDev"},"content":"     * such occurrence can be found.","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"IncompetentDev"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"IncompetentDev"},"content":"     * @param argsString the argument string input by the user","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"IncompetentDev"},"content":"     * @param prefix the Prefix\u0027s String representation to check against","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"IncompetentDev"},"content":"     * @param fromIndex starting index to search from","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"IncompetentDev"},"content":"     * @return","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"IncompetentDev"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"IncompetentDev"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"IncompetentDev"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"IncompetentDev"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"IncompetentDev"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"IncompetentDev"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"IncompetentDev"},"content":"     * {@code argsString}.","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"IncompetentDev"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"IncompetentDev"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"IncompetentDev"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"IncompetentDev"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"IncompetentDev"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"IncompetentDev"},"content":"        // Sort by start position","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"IncompetentDev"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"IncompetentDev"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"IncompetentDev"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"IncompetentDev"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"IncompetentDev"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"IncompetentDev"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"IncompetentDev"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"IncompetentDev"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"IncompetentDev"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"IncompetentDev"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"IncompetentDev"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"IncompetentDev"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"IncompetentDev"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"IncompetentDev"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"IncompetentDev"},"content":"        return argMultimap;","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"IncompetentDev"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"IncompetentDev"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"IncompetentDev"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"IncompetentDev"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"IncompetentDev"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"IncompetentDev"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"IncompetentDev"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"IncompetentDev"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"IncompetentDev"},"content":"        return value.trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"IncompetentDev"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"IncompetentDev"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2022-03-29"},{"lineNumber":127,"author":{"gitId":"IncompetentDev"},"content":"        private int startPosition;","lastModifiedDate":"2022-03-29"},{"lineNumber":128,"author":{"gitId":"IncompetentDev"},"content":"        private final Prefix prefix;","lastModifiedDate":"2022-03-29"},{"lineNumber":129,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"IncompetentDev"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"IncompetentDev"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"IncompetentDev"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":134,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":135,"author":{"gitId":"IncompetentDev"},"content":"        int getStartPosition() {","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"IncompetentDev"},"content":"            return startPosition;","lastModifiedDate":"2022-03-29"},{"lineNumber":137,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":138,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"IncompetentDev"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"IncompetentDev"},"content":"            return prefix;","lastModifiedDate":"2022-03-29"},{"lineNumber":141,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":142,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":143,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":144,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"IncompetentDev":144}},{"path":"src/main/java/seedu/duke/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands.","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"public class CliSyntax {","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"    /* Prefix definitions */","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"    public static final Prefix PREFIX_QUANTITY \u003d new Prefix(\"q/\");","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"    public static final Prefix PREFIX_RELATIVE \u003d new Prefix(\"r/\");","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"IncompetentDev":13}},{"path":"src/main/java/seedu/duke/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.commands.DeleteCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.exceptions.InvMgrException;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":" * Parses input arguments and creates a new DeleteCommand object.","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"     * Parses the given {@code String} of arguments in the context of DeleteCommand","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"     * @throws InvMgrException if the user input does not conform to the expected format","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"    public DeleteCommand parse(String args) throws InvMgrException {","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"        int index \u003d ParserUtils.parseIndex(args) - 1;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"        return new DeleteCommand(index);","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"IncompetentDev":22}},{"path":"src/main/java/seedu/duke/parser/DescCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.commands.DescCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.exceptions.InvMgrException;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"public class DescCommandParser {","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"     * Parses the given {@code String} of arguments in the context of the DescCommand","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"     * and returns a DescCommand object for execution.","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"     * @throws InvMgrException if the user input does not conform to the expected format","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"    public DescCommand parse(String args) throws InvMgrException {","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"        int index \u003d ParserUtils.parseIndex(args) - 1;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"        return new DescCommand(index);","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"IncompetentDev":18}},{"path":"src/main/java/seedu/duke/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.commands.EditCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.exceptions.InvMgrException;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"import static seedu.duke.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"import static seedu.duke.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"import static seedu.duke.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"import static seedu.duke.parser.CliSyntax.PREFIX_RELATIVE;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":" * Parses input arguments and creates a new EditCommand object.","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"     * @throws InvMgrException if the user input does not conform the expected format","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"    public EditCommand parse(String args) throws InvMgrException {","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_QUANTITY, PREFIX_DESCRIPTION, PREFIX_RELATIVE);","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_QUANTITY, PREFIX_DESCRIPTION)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"            throw new InvMgrException(Messages.INVALID_SYNTAX);","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"        if (argMultimap.getValue(PREFIX_RELATIVE).isPresent() \u0026\u0026 !argMultimap.getValue(PREFIX_QUANTITY).isPresent()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"            throw new InvMgrException(Messages.INVALID_RELATIVE_WITHOUT_QUANTITY);","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"        Optional\u003cInteger\u003e optionalIntQuantity \u003d Optional.empty();","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"        Optional\u003cString\u003e optionalStringQuantity \u003d argMultimap.getValue(PREFIX_QUANTITY);","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"        if (optionalStringQuantity.isPresent()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"            optionalIntQuantity \u003d Optional.of(","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"                    ParserUtils.parseQuantity(optionalStringQuantity.get()));","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"IncompetentDev"},"content":"        Optional\u003cBoolean\u003e optionalRelativeAdd \u003d Optional.empty();","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"IncompetentDev"},"content":"        Optional\u003cString\u003e optionalStringRelativeAdd \u003d argMultimap.getValue(PREFIX_RELATIVE);","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"IncompetentDev"},"content":"        if (optionalStringRelativeAdd.isPresent()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"IncompetentDev"},"content":"            optionalRelativeAdd \u003d Optional.of(","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"IncompetentDev"},"content":"                    ParserUtils.parseRelative(optionalStringRelativeAdd.get()));","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"IncompetentDev"},"content":"        int index \u003d ParserUtils.parseIndex(argMultimap.getPreamble()) - 1;","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"IncompetentDev"},"content":"        return new EditCommand(index,","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"IncompetentDev"},"content":"                argMultimap.getValue(PREFIX_NAME),","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"IncompetentDev"},"content":"                optionalIntQuantity,","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"IncompetentDev"},"content":"                argMultimap.getValue(PREFIX_DESCRIPTION),","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"IncompetentDev"},"content":"                optionalRelativeAdd);","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"IncompetentDev"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"IncompetentDev"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"IncompetentDev"},"content":"     * For EditCommand, at least one of PREFIX_NAME, PREFIX_QUANTITY, and PREFIX_DESCRIPTION is needed.","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"IncompetentDev"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"IncompetentDev"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"IncompetentDev":69}},{"path":"src/main/java/seedu/duke/parser/InputParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.commands.DescCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.commands.EditCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.commands.ExitCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.commands.AddCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.commands.DeleteCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.commands.ListCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.commands.HelpCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.commands.SearchCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.exceptions.InvMgrException;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"public class InputParser {","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"     * Manages the user input.","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"     * ","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"     * @param userCommand User input","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"     * @return A command that the user requested for to be executed","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"     * @throws InvMgrException Exception used for handling invalid inputs.","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"    public static Command parse(String userCommand) throws InvMgrException {","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userCommand.trim());","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"            throw new InvMgrException(Messages.INVALID_COMMAND);","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"IncompetentDev"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"IncompetentDev"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"IncompetentDev"},"content":"        case DescCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"IncompetentDev"},"content":"            return new DescCommandParser().parse(arguments);","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"IncompetentDev"},"content":"        case SearchCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"IncompetentDev"},"content":"            return new SearchCommandParser().parse(arguments);","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"IncompetentDev"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"IncompetentDev"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"IncompetentDev"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"IncompetentDev"},"content":"            return new ListCommand();","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"IncompetentDev"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"IncompetentDev"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"IncompetentDev"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"IncompetentDev"},"content":"            return new HelpCommand();","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"IncompetentDev"},"content":"        default:","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"IncompetentDev"},"content":"            throw new InvMgrException(Messages.INVALID_COMMAND);","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"IncompetentDev":68}},{"path":"src/main/java/seedu/duke/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"cheshire-doge"},"content":"import seedu.duke.exceptions.InvMgrException;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"cheshire-doge"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":" * Represents a Parser that is able to parse user input arguments into a {@code Command} of type {@code T}.","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":" * Note that this is different from InputParser - this is specifically for parsing arguments.","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"cheshire-doge"},"content":" *","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"cheshire-doge"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"cheshire-doge"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"     * @throws InvMgrException if {@code userInput} does not conform the expected format","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"cheshire-doge"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"    T parse(String userInput) throws InvMgrException;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"IncompetentDev":10,"cheshire-doge":8}},{"path":"src/main/java/seedu/duke/parser/ParserUtils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.exceptions.InvMgrException;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"public class ParserUtils {","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"     * trimmed.","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"     * @throws InvMgrException if the specified index is invalid (valid integers are non-zero unsigned integer).","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"    public static int parseIndex(String oneBasedIndex) throws InvMgrException {","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"            int value \u003d Integer.parseInt(trimmedIndex);","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"            if (!(value \u003e 0)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"                throw new InvMgrException(Messages.INVALID_INDEX);","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"            return value;","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"            throw new InvMgrException(Messages.INVALID_INDEX);","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"     * Parses {@code quantity} into an {@code int} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"     * trimmed.","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"     * @throws InvMgrException if the given {@code quantity} is invalid (valid integers are non-negative integers).","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"    public static int parseQuantity(String quantity) throws InvMgrException {","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"        String trimmedQuantity \u003d quantity.trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"            int value \u003d Integer.parseInt(trimmedQuantity);","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"            if (!(value \u003e\u003d 0)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"                throw new InvMgrException(Messages.INVALID_QUANTITY);","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"            return value;","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"            throw new InvMgrException(Messages.INVALID_QUANTITY);","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"IncompetentDev"},"content":"     * Returns -1 if {@code relative} is \"-\", and 1 if {@code relative} is \"+\" 1.","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"IncompetentDev"},"content":"     * The value returned represents a multiplier on the quantity, used to edit quantity relatively.","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"IncompetentDev"},"content":"     * @throws InvMgrException if the given {@code relative} is invalid (not either of the two options)","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"IncompetentDev"},"content":"    public static boolean parseRelative(String relativeAdd) throws InvMgrException {","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"IncompetentDev"},"content":"        String trimmedRelativeAdd \u003d relativeAdd.trim();","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"IncompetentDev"},"content":"        if (trimmedRelativeAdd.equals(\"+\")) {","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"IncompetentDev"},"content":"            return true;","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"IncompetentDev"},"content":"        } else if (trimmedRelativeAdd.equals(\"-\")) {","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"IncompetentDev"},"content":"            return false;","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"IncompetentDev"},"content":"        throw new InvMgrException(Messages.INVALID_RELATIVE_MESSAGE);","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"IncompetentDev":57}},{"path":"src/main/java/seedu/duke/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":" * A prefix that marks the beginning of an argument in an arguments string. \u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":" * E.g. \u0027/n\u0027 in \u0027add /n Paper Cups\u0027.","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"public class Prefix {","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"    private final String prefix;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"    public String getPrefix() {","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"        return prefix;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"    public String toString() {","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"        return getPrefix();","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"            return false;","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"            return true;","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"IncompetentDev":39}},{"path":"src/main/java/seedu/duke/parser/SearchCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.commands.SearchCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.exceptions.InvMgrException;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"import static seedu.duke.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"import static seedu.duke.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":" * Parses input arguments and creates a new SearchCommand object.","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"public class SearchCommandParser implements Parser\u003cSearchCommand\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"     * Parses the given {@code String} of arguments in the context of the SearchCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"     * and returns an SearchCommand object for execution.","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"     * @throws InvMgrException if the user input does not conform the expected format","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"    public SearchCommand parse(String args) throws InvMgrException {","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DESCRIPTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_DESCRIPTION)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"            throw new InvMgrException(Messages.INVALID_SYNTAX);","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"        Optional\u003cString\u003e name \u003d argMultimap.getValue(PREFIX_NAME);","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"        Optional\u003cString\u003e description \u003d argMultimap.getValue(PREFIX_DESCRIPTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"        return new SearchCommand(name, description);","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"     * For SearchCommand, at least one of PREFIX_NAME, PREFIX_QUANTITY, and PREFIX_DESCRIPTION is needed.","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"IncompetentDev"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"IncompetentDev"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"IncompetentDev":46}},{"path":"src/main/java/seedu/duke/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.storage;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import com.google.gson.JsonParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"import com.google.gson.reflect.TypeToken;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.data.Item;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.exceptions.InvMgrException;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"public class Storage {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"    private static final String WRITER_IO_ERROR \u003d \"An IO error occured while writing the data file. \"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"            + \"Your data may or may not have been saved.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"    private static final String CREATE_FILE_IOERROR \u003d \"An IO error occured while creating the data file. \"","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"            + \"Any changes made while running will not be saved!\";","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"    private static final String INVALID_PATH \u003d \"The given path has an invalid format.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"    private static final String JSON_PARSING_ERROR \u003d \"A JSON parsing error occured while reading the data file. \"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"            + \"Check the format of the data file.\"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"            + \"If you would like to retain the data, exit the program immediately.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"    private static final String READ_FILE_IOERROR \u003d \"An IO error occured while reading the data file. \"","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"            + \"If you would like to retain the data, exit the program immediately.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"    private static final String DEFAULT_PATH \u003d \"data/inventoryData.json\";","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"    private final String filePath;","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"    private Path dataPath;","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"    public Storage(String filePath) throws InvMgrException {","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"        this.dataPath \u003d validatePathExists(filePath);","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"IncompetentDev"},"content":"    public ArrayList\u003cItem\u003e load() throws InvMgrException {","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"IncompetentDev"},"content":"        ArrayList\u003cItem\u003e bufferTaskList;","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"IncompetentDev"},"content":"        Gson gson \u003d new Gson();","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"IncompetentDev"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"IncompetentDev"},"content":"            List\u003cString\u003e jsonDataList \u003d Files.readAllLines(dataPath);","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"IncompetentDev"},"content":"            String wholeJsonData \u003d String.join(\"\\n\", jsonDataList);","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"IncompetentDev"},"content":"            TypeToken\u003cArrayList\u003cItem\u003e\u003e dataType \u003d new TypeToken\u003cArrayList\u003cItem\u003e\u003e(){};","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"IncompetentDev"},"content":"            bufferTaskList \u003d gson.fromJson(wholeJsonData, dataType.getType());","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"IncompetentDev"},"content":"        } catch (JsonParseException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"IncompetentDev"},"content":"            throw new InvMgrException(JSON_PARSING_ERROR,e);","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"IncompetentDev"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"IncompetentDev"},"content":"            throw new InvMgrException(READ_FILE_IOERROR,e);","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"IncompetentDev"},"content":"        if (bufferTaskList \u003d\u003d null) {","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"IncompetentDev"},"content":"            bufferTaskList \u003d new ArrayList\u003cItem\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"IncompetentDev"},"content":"        return bufferTaskList;","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"IncompetentDev"},"content":"     * Writes the inventory list into the data file.","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"IncompetentDev"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"IncompetentDev"},"content":"     * @param itemList the ArrayList of items to write to the data file","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"IncompetentDev"},"content":"     * @throws InvMgrException for any IO exceptions while writing","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"IncompetentDev"},"content":"    public void save(ArrayList\u003cItem\u003e itemList) throws InvMgrException {","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"IncompetentDev"},"content":"        if (itemList \u003d\u003d null) {","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"IncompetentDev"},"content":"            throw new NullPointerException();","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"IncompetentDev"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"IncompetentDev"},"content":"            Gson gson \u003d new Gson();","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"IncompetentDev"},"content":"            String serializedItems \u003d gson.toJson(itemList);","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"IncompetentDev"},"content":"            Files.writeString(this.dataPath,","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"IncompetentDev"},"content":"                    serializedItems,","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"IncompetentDev"},"content":"                    StandardCharsets.UTF_8,","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"IncompetentDev"},"content":"                    StandardOpenOption.WRITE,","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"IncompetentDev"},"content":"                    StandardOpenOption.TRUNCATE_EXISTING);","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"IncompetentDev"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"IncompetentDev"},"content":"            throw new InvMgrException(WRITER_IO_ERROR);","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"IncompetentDev"},"content":"     * Returns the Path representing the data file.","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"IncompetentDev"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"IncompetentDev"},"content":"     * @return the dataPath of this Storage","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"IncompetentDev"},"content":"    public Path getDataPath() {","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"IncompetentDev"},"content":"        return this.dataPath;","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"IncompetentDev"},"content":"     * Checks if the given filePath points to an existing JSON data file.","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"IncompetentDev"},"content":"     * If the filePath does not point to a valid file, the relevant files and subdirectories are created.","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"IncompetentDev"},"content":"     * If the filePath points to a valid file, a Path object is returned pointing to the JSON data file.","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"IncompetentDev"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"IncompetentDev"},"content":"     * @param filePath the JSON data file to load","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"IncompetentDev"},"content":"     * @return Path object pointing to JSON data file","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"IncompetentDev"},"content":"    private Path validatePathExists(String filePath) throws InvMgrException {","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"IncompetentDev"},"content":"        assert filePath !\u003d null : \"filePath is null\";","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"IncompetentDev"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"IncompetentDev"},"content":"            Path dataPath \u003d Paths.get(filePath);","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"IncompetentDev"},"content":"            int directoryElementIndex \u003d dataPath.getNameCount() - 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"IncompetentDev"},"content":"            assert directoryElementIndex \u003e\u003d 0 : \"directoryElementIndex below 0\";","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"IncompetentDev"},"content":"            Path directory \u003d dataPath.subpath(0, directoryElementIndex);","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"IncompetentDev"},"content":"            Files.createDirectories(directory.toAbsolutePath());","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"IncompetentDev"},"content":"            Files.createFile(dataPath);","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"IncompetentDev"},"content":"            return dataPath;","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"IncompetentDev"},"content":"        } catch (FileAlreadyExistsException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"IncompetentDev"},"content":"            return Paths.get(filePath);","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"IncompetentDev"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"IncompetentDev"},"content":"            return validatePathExists(DEFAULT_PATH);","lastModifiedDate":"2022-03-24"},{"lineNumber":117,"author":{"gitId":"IncompetentDev"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"IncompetentDev"},"content":"            throw new InvMgrException(INVALID_PATH, e);","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"IncompetentDev"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"IncompetentDev"},"content":"            throw new InvMgrException(CREATE_FILE_IOERROR, e);","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"IncompetentDev":123}},{"path":"src/main/java/seedu/duke/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.ui;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"chihyingho"},"content":"import static seedu.duke.common.Messages.WELCOME_MESSAGE;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"chihyingho"},"content":"import static seedu.duke.common.Messages.HELP_MESSAGE;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"chihyingho"},"content":"import static seedu.duke.common.Messages.DIVIDER;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"cheshire-doge"},"content":"import seedu.duke.exceptions.InvMgrException;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"chihyingho"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":" * Handles the UI of the application.","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"chihyingho"},"content":" * */","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"public class Ui {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"chihyingho"},"content":"    private Scanner scanner;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"    public Ui() {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"chihyingho"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"chihyingho"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"chihyingho"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"chihyingho"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"     * Displays message(s) to user.","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"chihyingho"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"chihyingho"},"content":"     * @param message Message to be displayed to user","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"chihyingho"},"content":"     * */","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"chihyingho"},"content":"    public void showMessages(String... message) {","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"chihyingho"},"content":"        for (String m : message) {","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"chihyingho"},"content":"            assert m !\u003d null : \"Messages should not be a null message!\";","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"chihyingho"},"content":"            System.out.println(m);","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"chihyingho"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"     * Prints the welcome message when user starts InvMgr.","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"chihyingho"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"chihyingho"},"content":"        showMessages(","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"chihyingho"},"content":"                DIVIDER,","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"chihyingho"},"content":"                WELCOME_MESSAGE,","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"chihyingho"},"content":"                DIVIDER,","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"chihyingho"},"content":"                HELP_MESSAGE,","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"chihyingho"},"content":"                DIVIDER);","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"IncompetentDev"},"content":"     * Shows dividing line between messages.","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"chihyingho"},"content":"     * */","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"chihyingho"},"content":"    public void showDivider() {","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"chihyingho"},"content":"        showMessages(DIVIDER);","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"IncompetentDev"},"content":"     * Gets user\u0027s raw input in the CLI.","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"chihyingho"},"content":"     * */","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"chihyingho"},"content":"    public String getRawUserInput() {","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"chihyingho"},"content":"        System.out.println(\"Enter command: \");","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"chihyingho"},"content":"        return scanner.nextLine();","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"cheshire-doge"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"cheshire-doge"},"content":"    public void showError(InvMgrException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"cheshire-doge"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"IncompetentDev":26,"chihyingho":32,"cheshire-doge":4}},{"path":"src/test/java/seedu/duke/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"quitejasper"},"content":"package seedu.duke.commands;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"quitejasper"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"quitejasper"},"content":"import seedu.duke.data.Item;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"quitejasper"},"content":"import seedu.duke.data.ItemList;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"quitejasper"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"quitejasper"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"quitejasper"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"quitejasper"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"quitejasper"},"content":"public class AddCommandTest {","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"quitejasper"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"quitejasper"},"content":"    public void constructor_nullItem_throwsNullPointerException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"quitejasper"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"quitejasper"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"quitejasper"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"quitejasper"},"content":"    public void execute_validItemList_addSuccessful() {","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"quitejasper"},"content":"        ArrayList\u003cItem\u003e tempItemList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"quitejasper"},"content":"        Item item1 \u003d new Item(\"Markers\", 3, \"Drawing\");","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"quitejasper"},"content":"        Item item2 \u003d new Item(\"Whiteboard\", 1, \"To draw on\");","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"quitejasper"},"content":"        Item item3 \u003d new Item(\"HDMI Cable\", 2, \"For connecting displays\");","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"quitejasper"},"content":"        tempItemList.add(item1);","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"quitejasper"},"content":"        tempItemList.add(item2);","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"quitejasper"},"content":"        tempItemList.add(item3);","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"quitejasper"},"content":"        ItemList expectedItemList \u003d new ItemList(tempItemList);","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"quitejasper"},"content":"        int initSize \u003d expectedItemList.getSize();","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"quitejasper"},"content":"        Ui tempUi \u003d new Ui();","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"quitejasper"},"content":"        Item validItem \u003d new Item(\"Paper Towels\", 25, \"For cleaning\");","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"quitejasper"},"content":"        AddCommand testComd \u003d new AddCommand(validItem);","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"quitejasper"},"content":"        testComd.execute(expectedItemList, tempUi);","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"quitejasper"},"content":"        assertEquals(initSize + 1, expectedItemList.getSize());","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"quitejasper"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"quitejasper"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"quitejasper"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"quitejasper":42}},{"path":"src/test/java/seedu/duke/commands/BorrowCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"package seedu.duke.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"import seedu.duke.data.BorrowRecord;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"import seedu.duke.data.BorrowStatus;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"import seedu.duke.data.Item;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"import seedu.duke.data.ItemList;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"lestersimjj"},"content":"import seedu.duke.exceptions.InvMgrException;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"lestersimjj"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"lestersimjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"lestersimjj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"lestersimjj"},"content":"public class BorrowCommandTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"lestersimjj"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"lestersimjj"},"content":"    public void execute_borrowCommand() throws InvMgrException {","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"lestersimjj"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"lestersimjj"},"content":"        ArrayList\u003cItem\u003e itemArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"lestersimjj"},"content":"        ItemList itemList \u003d new ItemList(itemArrayList);","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"lestersimjj"},"content":"        Item item1 \u003d new Item(\"Markers\", 3, \"Drawing\");","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"lestersimjj"},"content":"        itemList.addItem(item1);","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"lestersimjj"},"content":"        BorrowCommand c \u003d new BorrowCommand(0, \"2022-03-21\", \"2022-04-02\", \"John Smith\");","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"lestersimjj"},"content":"        c.execute(itemList, ui);","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"lestersimjj":27}},{"path":"src/test/java/seedu/duke/commands/DescCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"package seedu.duke.commands;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"import seedu.duke.data.Item;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"lestersimjj"},"content":"public class DescCommandTest {","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"lestersimjj"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"lestersimjj"},"content":"    public void execute_descCommand() {","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"lestersimjj"},"content":"        Item item1 \u003d new Item(\"Markers\", 3, \"Drawing\");","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"lestersimjj"},"content":"        assertEquals(\"Markers\", item1.getName());","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"lestersimjj"},"content":"        assertEquals(\"Drawing\", item1.getDescription());","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"lestersimjj":15}},{"path":"src/test/java/seedu/duke/commands/ItemTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lestersimjj"},"content":"package seedu.duke.commands;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"lestersimjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"lestersimjj"},"content":"import seedu.duke.data.Item;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"lestersimjj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"lestersimjj"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"lestersimjj"},"content":"public class ItemTest {","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"lestersimjj"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"lestersimjj"},"content":"    public void test_item_name() {","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"lestersimjj"},"content":"        Item newItem \u003d new Item(\"Paper\", 10, \"A4 stacks of 30\");","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"lestersimjj"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"lestersimjj"},"content":"        assertEquals(\"Paper\", newItem.getName());","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"lestersimjj"},"content":"        assertEquals(10, newItem.getQuantity());","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"lestersimjj"},"content":"        assertEquals(\"A4 stacks of 30\", newItem.getDescription());","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"lestersimjj"},"content":"        assertEquals(true, newItem.contains(\"Paper\"));","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"lestersimjj"},"content":"        assertEquals(\"Paper | 10 | A4 stacks of 30\", newItem.saveString());","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"lestersimjj"},"content":"        assertEquals(\"Paper | 10\", newItem.toString());","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"lestersimjj"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"lestersimjj"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"lestersimjj":21}},{"path":"src/test/java/seedu/duke/commands/SearchCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.commands;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.stubs.CommandStubs;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.stubs.ItemStubs;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.stubs.UiStub;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"public class SearchCommandTest {","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"    public void execute_givenDoesNotExist_matchNone() {","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"        UiStub uiStub \u003d new UiStub();","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"        SearchCommand testPaperNameCommand \u003d new SearchCommand(Optional.of(\"garbage\"), Optional.empty());","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"        testPaperNameCommand.execute(CommandStubs.LIST_TO_SEARCH, uiStub);","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"        assertEquals(CommandStubs.RESULT_SEARCH_NONE, uiStub.getMessages());","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"    public void execute_givenExists_matchGivenOnly() {","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"        // Expect two Paper Item with description A4 (Index 1) and A5 (Index 2)","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"        UiStub uiStub \u003d new UiStub();","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"        SearchCommand testPaperNameCommand \u003d new SearchCommand(Optional.of(ItemStubs.PAPER_NAME), Optional.empty());","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"        testPaperNameCommand.execute(CommandStubs.LIST_TO_SEARCH, uiStub);","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"        assertEquals(CommandStubs.RESULT_SEARCH_PAPER_NAME, uiStub.getMessages());","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"        // Expect Paper Item with description A4 only (Index 1)","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"        uiStub \u003d new UiStub();","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"        SearchCommand testPaperNameAndDescriptionCommand \u003d new SearchCommand(Optional.of(ItemStubs.PAPER_NAME),","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"                Optional.of(ItemStubs.A4_PAPER_DESCRIPTION));","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"        testPaperNameAndDescriptionCommand.execute(CommandStubs.LIST_TO_SEARCH, uiStub);","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"        assertEquals(CommandStubs.RESULT_SEARCH_PAPER_NAME_A4_DESCRIPTION,uiStub.getMessages());","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"        // Expect Marker (Index 1) and Whiteboard Item (Index 2)","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"        uiStub \u003d new UiStub();","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"        SearchCommand testDrawDescriptionCommand \u003d new SearchCommand(Optional.empty(),","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"                Optional.of(\"draw\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"        testDrawDescriptionCommand.execute(CommandStubs.LIST_TO_SEARCH, uiStub);","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"IncompetentDev"},"content":"        assertEquals(CommandStubs.RESULT_SEARCH_DRAW_DESCRIPTION,uiStub.getMessages());","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"IncompetentDev":44}},{"path":"src/test/java/seedu/duke/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.stubs.ParserStubs;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"import static seedu.duke.utils.ParserTestUtils.assertParseFailure;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"import static seedu.duke.utils.ParserTestUtils.assertParseSuccess;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"    void parse_compulsoryFieldMissing_throwException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"        String testInputFormat \u003d \" %s %s %s %s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"        // Missing quantity prefix","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"        String testInput \u003d String.format(testInputFormat,","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"                CliSyntax.PREFIX_NAME.getPrefix(), ParserStubs.PAPERCUP_NAME,","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"                CliSyntax.PREFIX_DESCRIPTION.getPrefix(), ParserStubs.PAPERCUP_DESCRIPTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"        assertParseFailure(parser, testInput, Messages.INVALID_SYNTAX);","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"    void parse_compulsoryFieldPresent_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"        String testInputFormat \u003d \" %s %s %s %s %s %s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"        String testInput \u003d String.format(testInputFormat,","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"                CliSyntax.PREFIX_NAME.getPrefix(), ParserStubs.PAPERCUP_NAME,","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"                CliSyntax.PREFIX_DESCRIPTION.getPrefix(), ParserStubs.PAPERCUP_DESCRIPTION,","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"                CliSyntax.PREFIX_QUANTITY.getPrefix(), ParserStubs.PAPERCUP_QUANTITY);","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"        assertParseSuccess(parser, testInput, ParserStubs.PAPERCUP_ADDCOMMAND);","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"    void parse_invalidQuantity_throwException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"        String testInputFormat \u003d \" %s %s %s %s %s %s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"        String testInput \u003d String.format(testInputFormat,","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"                CliSyntax.PREFIX_NAME.getPrefix(), ParserStubs.PAPERCUP_NAME,","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"                CliSyntax.PREFIX_DESCRIPTION.getPrefix(), ParserStubs.PAPERCUP_DESCRIPTION,","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"                CliSyntax.PREFIX_QUANTITY.getPrefix(), \"asd\");","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"        assertParseFailure(parser, testInput, Messages.INVALID_QUANTITY);","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"IncompetentDev":43}},{"path":"src/test/java/seedu/duke/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.commands.DeleteCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.exceptions.InvMgrException;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.stubs.ParserStubs;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"    void parse_invalidIndexString_throwException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"        String testInput \u003d \" /n asd\";","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"        assertThrows(InvMgrException.class, () -\u003e parser.parse(testInput));","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"    void parse_invalidIndexInt_throwException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"        String testInput \u003d \"0\";","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"        assertThrows(InvMgrException.class, () -\u003e parser.parse(testInput));","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"    void parse_validIndex_success() throws InvMgrException {","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"        String testInput \u003d \"1\";","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"        DeleteCommand actualOutput \u003d parser.parse(testInput);","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"        assertEquals(ParserStubs.ZEROINDEX_DELETECOMMAND, actualOutput);","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"IncompetentDev":33}},{"path":"src/test/java/seedu/duke/parser/DescCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.commands.DescCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.exceptions.InvMgrException;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.stubs.ParserStubs;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"public class DescCommandParserTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"    private DescCommandParser parser \u003d new DescCommandParser();","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"    void parse_invalidIndexString_throwException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"        String testInput \u003d \" /n asd\";","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"        assertThrows(InvMgrException.class, () -\u003e parser.parse(testInput));","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"    void parse_invalidIndexInt_throwException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"        String testInput \u003d \"0\";","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"        assertThrows(InvMgrException.class, () -\u003e parser.parse(testInput));","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"    void parse_validIndex_success() throws InvMgrException {","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"        String testInput \u003d \"1\";","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"        DescCommand actualOutput \u003d parser.parse(testInput);","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"        assertEquals(ParserStubs.ZEROINDEX_DESCCOMMAND, actualOutput);","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"IncompetentDev":33}},{"path":"src/test/java/seedu/duke/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.stubs.ParserStubs;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"import static seedu.duke.utils.ParserTestUtils.assertParseFailure;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"import static seedu.duke.utils.ParserTestUtils.assertParseSuccess;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"    void parse_missingAllCompulsoryFields_throwException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"        String testInputFormat \u003d \" %s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"        String testInput \u003d String.format(testInputFormat, 1);","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"        assertParseFailure(parser, testInput, Messages.INVALID_SYNTAX);","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"        String testInputWithRelativeFormat \u003d \" %s %s %s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"        String testInputWithRelative \u003d String.format(testInputWithRelativeFormat,","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"                1,","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"                CliSyntax.PREFIX_RELATIVE.getPrefix(), \"-\");","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"        assertParseFailure(parser, testInputWithRelative, Messages.INVALID_SYNTAX);","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"    void parse_relativeWithoutQuantity_throwException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"        String testInputFormat \u003d \" %s %s %s %s %s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"        String testInput \u003d String.format(testInputFormat,","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"                1,","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"                CliSyntax.PREFIX_NAME.getPrefix(), ParserStubs.PAPERCUP_NAME,","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"                CliSyntax.PREFIX_RELATIVE.getPrefix(), \"-\");","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"        assertParseFailure(parser, testInput, Messages.INVALID_RELATIVE_WITHOUT_QUANTITY);","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"    void parse_atLeastOneCompulsoryFieldPresent_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"        String testInputQuantityOnlyFormat \u003d \" %s %s %s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"        String testInputQuantityOnly \u003d String.format(testInputQuantityOnlyFormat,","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"                1,","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"                CliSyntax.PREFIX_QUANTITY.getPrefix(), ParserStubs.PAPERCUP_SETQUANTITY);","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"IncompetentDev"},"content":"        assertParseSuccess(parser, testInputQuantityOnly, ParserStubs.ZEROINDEX_EDITCOMMAND_QUANTITYONLY);","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"IncompetentDev"},"content":"        String testInputRelativeQuantityFormat \u003d \" %s %s %s %s %s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"IncompetentDev"},"content":"        String testInputRelativeQuantity \u003d String.format(testInputRelativeQuantityFormat,","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"IncompetentDev"},"content":"                1,","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"IncompetentDev"},"content":"                CliSyntax.PREFIX_QUANTITY.getPrefix(), ParserStubs.PAPERCUP_SETRELATIVEQUANTITY,","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"IncompetentDev"},"content":"                CliSyntax.PREFIX_RELATIVE.getPrefix(), \"-\");","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"IncompetentDev"},"content":"        assertParseSuccess(parser, testInputRelativeQuantity,","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"IncompetentDev"},"content":"                ParserStubs.ZEROINDEX_EDITCOMMAND_NEGATIVERELATIVEQUANTITY);","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"IncompetentDev":52}},{"path":"src/test/java/seedu/duke/parser/ParserUtilsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.exceptions.InvMgrException;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"public class ParserUtilsTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"    void parseIndex_invalidStringIndex_throwException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"        String testInput \u003d \"asd\";","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"        assertThrows(InvMgrException.class, () -\u003e ParserUtils.parseIndex(testInput));","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"    void parseIndex_invalidIntIndex_throwException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"        String testInput \u003d \"0\";","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"        assertThrows(InvMgrException.class, () -\u003e ParserUtils.parseIndex(testInput));","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"    void parseIndex_validIndex_returnInt() throws InvMgrException {","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"        String testInput \u003d \"1\";","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"        int expectedOutput \u003d 1;","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"        int actualOutput \u003d ParserUtils.parseIndex(testInput);","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"    // Implementation of parseQuantity() is mostly similar to parseIndex. invalidStringQuantity is skipped.","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"    void parseQuantity_invalidIntQuantity_returnInt() {","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"        String testInput \u003d \"-1\";","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"        assertThrows(InvMgrException.class, () -\u003e ParserUtils.parseQuantity(testInput));","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"    void parseQuantity_validQuantity_returnInt() throws InvMgrException {","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"        String testInput \u003d \"1\";","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"IncompetentDev"},"content":"        int expectedOutput \u003d 1;","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"IncompetentDev"},"content":"        int actualOutput \u003d ParserUtils.parseQuantity(testInput);","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"IncompetentDev"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"IncompetentDev"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"IncompetentDev"},"content":"    void parseRelative_validPrefix_throwException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"IncompetentDev"},"content":"        String testInput \u003d \"\";","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"IncompetentDev"},"content":"        assertThrows(InvMgrException.class, () -\u003e ParserUtils.parseRelative(testInput));","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"IncompetentDev"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"IncompetentDev"},"content":"    void parseRelative_validPrefix_returnInt() throws InvMgrException {","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"IncompetentDev"},"content":"        String testInput \u003d \"-\";","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"IncompetentDev"},"content":"        boolean expectedOutput \u003d false;","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"IncompetentDev"},"content":"        boolean actualOutput \u003d ParserUtils.parseRelative(testInput);","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"IncompetentDev"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"IncompetentDev":60}},{"path":"src/test/java/seedu/duke/parser/SearchCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.parser;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.stubs.ParserStubs;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"import static seedu.duke.utils.ParserTestUtils.assertParseFailure;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"import static seedu.duke.utils.ParserTestUtils.assertParseSuccess;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"public class SearchCommandParserTest {","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"    private SearchCommandParser parser \u003d new SearchCommandParser();","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"    void parse_missingAllCompulsoryFields_throwException() {","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"        // No name and description","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"        String testInputFormat \u003d \" %s\";","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"        String testInput \u003d String.format(testInputFormat, \"sdoighjosd garbage\");","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"        assertParseFailure(parser, testInput, Messages.INVALID_SYNTAX);","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"    void parse_atLeastOneCompulsoryFieldPresent_success() {","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"        // Name only","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"        String testInputNameOnlyFormat \u003d \" %s %s %s\";","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"        String testInputNameOnly \u003d String.format(testInputNameOnlyFormat,","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"                1,","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"                CliSyntax.PREFIX_NAME.getPrefix(), ParserStubs.PAPERCUP_NAME);","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"        assertParseSuccess(parser, testInputNameOnly, ParserStubs.SEARCHCOMMAND_NAMEONLY);","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"        // Description only","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"        String testInputDescriptionOnlyFormat \u003d \" %s %s %s\";","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"        String testInputDescriptionOnly \u003d String.format(testInputDescriptionOnlyFormat,","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"                1,","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"                CliSyntax.PREFIX_DESCRIPTION.getPrefix(), ParserStubs.PAPERCUP_DESCRIPTION);","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"        assertParseSuccess(parser, testInputDescriptionOnly, ParserStubs.SEARCHCOMMAND_DESCRIPTIONONLY);","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"        // Both name and description","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"        String testInputNameAndDescriptionFormat \u003d \" %s %s %s %s %s\";","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"        String testInputNameAndDescription \u003d String.format(testInputNameAndDescriptionFormat,","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"                1,","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"                CliSyntax.PREFIX_DESCRIPTION.getPrefix(), ParserStubs.PAPERCUP_DESCRIPTION,","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"IncompetentDev"},"content":"                CliSyntax.PREFIX_NAME.getPrefix(), ParserStubs.PAPERCUP_NAME);","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"IncompetentDev"},"content":"        assertParseSuccess(parser, testInputNameAndDescription, ParserStubs.SEARCHCOMMAND_NAMEANDDESCRIPTION);","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"IncompetentDev":46}},{"path":"src/test/java/seedu/duke/storage/StorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.storage;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.data.Item;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.exceptions.InvMgrException;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"public class StorageTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"    private static final String TEST_DATA_FILE_DELETE_ERR \u003d \"Could not clean up the generated test data file!\";","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"    void load_emptyFile_loadEmptyList() throws InvMgrException {","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"        Storage testStorage \u003d new Storage(\"test/data/load/empty.json\");","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"        ArrayList\u003cItem\u003e testItemList \u003d testStorage.load();","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"        ArrayList\u003cItem\u003e expectedItemList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"        assertEquals(expectedItemList, testItemList);","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"    void load_invalidJsonFile_throwException() throws InvMgrException {","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"        Storage testStorage \u003d new Storage(\"test/data/load/invalidData.json\");","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"        assertThrows(InvMgrException.class, () -\u003e testStorage.load());","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"    void load_validJsonFile_validList() throws InvMgrException {","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"        ArrayList\u003cItem\u003e expectedItemList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"        Item item1 \u003d new Item(\"Markers\", 3, \"Drawing\");","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"        Item item2 \u003d new Item(\"Whiteboard\", 1, \"To draw on\");","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"        Item item3 \u003d new Item(\"HDMI Cable\", 2, \"For connecting displays\");","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"        expectedItemList.add(item1);","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"IncompetentDev"},"content":"        expectedItemList.add(item2);","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"IncompetentDev"},"content":"        expectedItemList.add(item3);","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"IncompetentDev"},"content":"        Storage testStorage \u003d new Storage(\"test/data/load/validInputData.json\");","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"IncompetentDev"},"content":"        ArrayList\u003cItem\u003e testItemList \u003d testStorage.load();","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"IncompetentDev"},"content":"        assertListEquals(expectedItemList, testItemList);","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"IncompetentDev"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"IncompetentDev"},"content":"    void save_nullList_throwException() throws InvMgrException {","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"lestersimjj"},"content":"        Storage testStorage \u003d new Storage(\"test/data/save/actualData.json\");","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"IncompetentDev"},"content":"        assertThrows(NullPointerException.class, () -\u003e testStorage.save(null));","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"IncompetentDev"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"IncompetentDev"},"content":"    void save_validList_validJson() throws InvMgrException {","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"IncompetentDev"},"content":"        ArrayList\u003cItem\u003e itemList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"IncompetentDev"},"content":"        Item item1 \u003d new Item(\"Markers\", 3, \"Drawing\");","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"IncompetentDev"},"content":"        Item item2 \u003d new Item(\"Whiteboard\", 1, \"To draw on\");","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"IncompetentDev"},"content":"        Item item3 \u003d new Item(\"HDMI Cable\", 2, \"For connecting displays\");","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"IncompetentDev"},"content":"        itemList.add(item1);","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"IncompetentDev"},"content":"        itemList.add(item2);","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"IncompetentDev"},"content":"        itemList.add(item3);","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"lestersimjj"},"content":"        Storage testStorage \u003d new Storage(\"test/data/save/actualData.json\");","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"IncompetentDev"},"content":"        testStorage.save(itemList);","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"lestersimjj"},"content":"        Storage expectedStorage \u003d new Storage(\"test/data/save/expectedData.json\");","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"IncompetentDev"},"content":"        assertStorageEquals(expectedStorage, testStorage);","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"IncompetentDev"},"content":"    private void assertStorageEquals(Storage expectedStorage, Storage testStorage) {","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"IncompetentDev"},"content":"        Path testPath \u003d testStorage.getDataPath();","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"IncompetentDev"},"content":"        Path expectedPath \u003d expectedStorage.getDataPath();","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"IncompetentDev"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"IncompetentDev"},"content":"            List\u003cString\u003e testString \u003d Files.readAllLines(testPath);","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"IncompetentDev"},"content":"            List\u003cString\u003e expectedString \u003d Files.readAllLines(expectedPath);","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"IncompetentDev"},"content":"            assertEquals(expectedString, testString);","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"IncompetentDev"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"IncompetentDev"},"content":"            fail(e);","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"IncompetentDev"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"IncompetentDev"},"content":"            Files.deleteIfExists(testPath);","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"IncompetentDev"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"IncompetentDev"},"content":"            System.err.println(TEST_DATA_FILE_DELETE_ERR);","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"IncompetentDev"},"content":"     * Constructs a HashSets to do unordered comparison of two {@code ArrayList\u003cItem\u003e}.","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"IncompetentDev"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"IncompetentDev"},"content":"     * @param expectedList the list to expect","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"IncompetentDev"},"content":"     * @param actualList the list to check against","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"IncompetentDev"},"content":"    private void assertListEquals(ArrayList\u003cItem\u003e expectedList, ArrayList\u003cItem\u003e actualList) {","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"IncompetentDev"},"content":"        HashSet\u003cString\u003e checker \u003d new HashSet\u003cString\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"IncompetentDev"},"content":"        for (int i \u003d 0; i \u003c actualList.size(); i++) {","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"IncompetentDev"},"content":"            checker.add(expectedList.get(i).saveString());","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"IncompetentDev"},"content":"            checker.add(actualList.get(i).saveString());","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"IncompetentDev"},"content":"        assertEquals(checker.size(), actualList.size());","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"IncompetentDev":104,"lestersimjj":3}},{"path":"src/test/java/seedu/duke/stubs/CommandStubs.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.stubs;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.commands.SearchCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.data.Item;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.data.ItemList;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"import static seedu.duke.stubs.ItemStubs.ITEM_MARKER;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"import static seedu.duke.stubs.ItemStubs.ITEM_PAPER_A4;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"import static seedu.duke.stubs.ItemStubs.ITEM_PAPER_A5;","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"import static seedu.duke.stubs.ItemStubs.ITEM_WHITEBOARD;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"public class CommandStubs {","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"    public static final ItemList LIST_TO_SEARCH \u003d generateStubSearchList(ITEM_PAPER_A4, ITEM_PAPER_A5, ITEM_MARKER,","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"            ITEM_WHITEBOARD);","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"    public static final Set\u003cString\u003e RESULT_SEARCH_PAPER_NAME \u003d generateSearchResult(ITEM_PAPER_A4, ITEM_PAPER_A5);","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"    public static final Set\u003cString\u003e RESULT_SEARCH_DRAW_DESCRIPTION \u003d generateSearchResult(ITEM_MARKER, ITEM_WHITEBOARD);","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"    public static final Set\u003cString\u003e RESULT_SEARCH_PAPER_NAME_A4_DESCRIPTION \u003d generateSearchResult(ITEM_PAPER_A4);","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"    public static final Set\u003cString\u003e RESULT_SEARCH_NONE \u003d generateSearchResult();","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"    private static ItemList generateStubSearchList(Item... items) {","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"        ArrayList\u003cItem\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"        Collections.addAll(list, items);","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"        return new ItemList(list);","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"     * Generates the expected print message after SearchCommand executes and matches {@code items}.","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"     * Note that order of items in the parameter is important since SearchCommand has indexing in its print messages.","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"     * @param items variable number of items to be added to the expected print message","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"     * @return a collection representing the expected output message","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"    private static Set\u003cString\u003e generateSearchResult(Item... items) {","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"        Set\u003cString\u003e expectedMessages \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"        expectedMessages.add(SearchCommand.SEARCH_RESULT_PREAMBLE);","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"        for (int i \u003d 0; i \u003c items.length; i++) {","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"IncompetentDev"},"content":"            String printMsg \u003d String.format(SearchCommand.SEARCH_RESULT_ENTRY_FORMAT, i, items[i]);","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"IncompetentDev"},"content":"            expectedMessages.add(printMsg);","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"IncompetentDev"},"content":"        return expectedMessages;","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"IncompetentDev":47}},{"path":"src/test/java/seedu/duke/stubs/ItemStubs.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.stubs;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.data.Item;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"public class ItemStubs {","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"    public static final String MARKER_NAME \u003d \"Markers\";","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"    public static final int MARKER_QUANTITY \u003d 3;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"    public static final String MARKER_DESCRIPTION \u003d \"Drawing\";","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"    public static final Item ITEM_MARKER \u003d generateItem(MARKER_NAME, MARKER_QUANTITY, MARKER_DESCRIPTION);","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"    public static final String PAPER_NAME \u003d \"Paper\";","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"    public static final int PAPER_QUANTITY \u003d 10;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"    public static final String A4_PAPER_DESCRIPTION \u003d \"A4 stacks of 30\";","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"    public static final String A5_PAPER_DESCRIPTION \u003d \"A5 stacks of 30\";","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"    public static final Item ITEM_PAPER_A4 \u003d generateItem(PAPER_NAME, PAPER_QUANTITY, A4_PAPER_DESCRIPTION);","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"    public static final Item ITEM_PAPER_A5 \u003d generateItem(PAPER_NAME, PAPER_QUANTITY, A5_PAPER_DESCRIPTION);","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"    public static final String HDMI_CABLE_NAME \u003d \"HDMI Cable\";","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"    public static final int HDMI_CABLE_QUANTITY \u003d 2;","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"    public static final String HDMI_CABLE_DESCRIPTION \u003d \"For connecting displays\";","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"    public static final Item ITEM_HDMI \u003d generateItem(HDMI_CABLE_NAME, HDMI_CABLE_QUANTITY, HDMI_CABLE_DESCRIPTION);","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"    public static final String WHITEBOARD_NAME \u003d \"Whiteboard\";","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"    public static final int WHITEBOARD_QUANTITY \u003d 1;","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"    public static final String WHITEBOARD_DESCRIPTION \u003d \"To draw on\";","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"    public static final Item ITEM_WHITEBOARD \u003d generateItem(WHITEBOARD_NAME, WHITEBOARD_QUANTITY,","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"            WHITEBOARD_DESCRIPTION);","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"     * Generate an {@code Item}.","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"     * @param name name of Item","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"     * @param quantity quantity of Item","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"     * @param description description of Item","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"     * @return Item matching the given arguments","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"    private static Item generateItem(String name, int quantity, String description) {","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"        return new Item(name, quantity, description);","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"IncompetentDev":41}},{"path":"src/test/java/seedu/duke/stubs/ParserStubs.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.stubs;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.commands.AddCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.commands.DeleteCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.commands.DescCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.commands.EditCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.commands.SearchCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.data.Item;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"/* Contains various stubs and constants used for testing. */","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"public class ParserStubs {","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"    public static final String PAPERCUP_NAME \u003d \"Paper Cup\";","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"    public static final String PAPERCUP_QUANTITY \u003d \"25\";","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"    public static final String PAPERCUP_SETQUANTITY \u003d \"23\";","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"    public static final String PAPERCUP_SETRELATIVEQUANTITY \u003d \"2\";","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"    public static final String PAPERCUP_DESCRIPTION \u003d \"25ml cups\";","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"    public static final Item PAPERCUP_ITEM \u003d new Item(ParserStubs.PAPERCUP_NAME,","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"            Integer.parseInt(PAPERCUP_QUANTITY), ParserStubs.PAPERCUP_DESCRIPTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"    public static final AddCommand PAPERCUP_ADDCOMMAND \u003d new AddCommand(PAPERCUP_ITEM);","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"    public static final DeleteCommand ZEROINDEX_DELETECOMMAND \u003d new DeleteCommand(0);","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"    public static final DescCommand ZEROINDEX_DESCCOMMAND \u003d new DescCommand(0);","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"    public static final EditCommand ZEROINDEX_EDITCOMMAND_QUANTITYONLY \u003d new EditCommand(0,","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"            Optional.empty(),","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"            Optional.of(23),","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"            Optional.empty(),","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"            Optional.empty());","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"    public static final EditCommand ZEROINDEX_EDITCOMMAND_NEGATIVERELATIVEQUANTITY \u003d new EditCommand(0,","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"            Optional.empty(),","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"            Optional.of(2),","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"            Optional.empty(),","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"            Optional.of(false));","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"    public static final SearchCommand SEARCHCOMMAND_NAMEONLY \u003d new SearchCommand(","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"            Optional.of(PAPERCUP_NAME), Optional.empty());","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"    public static final SearchCommand SEARCHCOMMAND_DESCRIPTIONONLY \u003d new SearchCommand(","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"            Optional.empty(), Optional.of(PAPERCUP_DESCRIPTION));","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"    public static final SearchCommand SEARCHCOMMAND_NAMEANDDESCRIPTION \u003d new SearchCommand(","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"IncompetentDev"},"content":"            Optional.of(PAPERCUP_NAME), Optional.of(PAPERCUP_DESCRIPTION));","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"IncompetentDev":43}},{"path":"src/test/java/seedu/duke/stubs/UiStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.stubs;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":"public class UiStub extends Ui {","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"    private Set\u003cString\u003e outputMessages;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"    public UiStub() {","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"        super();","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"        this.outputMessages \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"     * Saves messages that would have been printed in Ui into a {@code List}.","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"     * @param message Message to be displayed to user","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"     * */","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"    public void showMessages(String... message) {","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"        Collections.addAll(outputMessages, message);","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"    public Set\u003cString\u003e getMessages() {","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"        return this.outputMessages;","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"IncompetentDev":32}},{"path":"src/test/java/seedu/duke/utils/ParserTestUtils.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"IncompetentDev"},"content":"package seedu.duke.utils;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.exceptions.InvMgrException;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"IncompetentDev"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"IncompetentDev"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"IncompetentDev"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"IncompetentDev"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"IncompetentDev"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"IncompetentDev"},"content":"public class ParserTestUtils {","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"IncompetentDev"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"IncompetentDev"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"IncompetentDev"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"IncompetentDev"},"content":"        try {","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"IncompetentDev"},"content":"            parser.parse(userInput);","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"IncompetentDev"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"IncompetentDev"},"content":"        } catch (InvMgrException e) {","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"IncompetentDev"},"content":"            assertEquals(expectedMessage, e.getMessage());","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"IncompetentDev"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"IncompetentDev"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"IncompetentDev"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"IncompetentDev"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"IncompetentDev"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"IncompetentDev"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"IncompetentDev"},"content":"        try {","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"IncompetentDev"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"IncompetentDev"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"IncompetentDev"},"content":"        } catch (InvMgrException e) {","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"IncompetentDev"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", e);","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"IncompetentDev"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"IncompetentDev"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"IncompetentDev"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"IncompetentDev":39}}]
